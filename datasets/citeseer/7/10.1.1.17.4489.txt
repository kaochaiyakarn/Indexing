ponder policy specification language damianou dulay emil lupu morris sloman department computing imperial college queen gate london sw bz damianou nd lupu sloman doc ic ac uk ponder language provides common means specifying security policies map various access control implementation mechanisms firewalls operating systems databases java 
supports obligation policies event triggered rules policy management networks distributed systems 
ponder security management activities registration users logging auditing events dealing access critical resources security violations 
key concepts language include roles group policies relating position organisation relationships define interactions roles management structures define configuration roles relationships pertaining organisational unit department 
reusable composite policy specifications cater complexity large enterprise information systems 
ponder declarative object oriented language flexible extensible adaptable wide range management requirements 

large enterprise information infrastructures integrate inter organisational networks internet services task managing systems challenging 
distributed systems changing traditional client server model dynamic service oriented paradigm 
development mobile computing applications requires support adaptive network architectures customised services clients 
various techniques emerged programming network elements support adaptive services example active networks mobile agents management delegation 
approaches support programming new functionality network elements host devices increase security concerns regarding access network resources services management task demanding 
policy management networks distributed systems see doc ic ac uk policies provide promising solutions problems 
policy rule defines choice behaviour system 
separating policy implementation system permits policy modified order dynamically change strategy managing system modify behaviour system changing underlying implementation 
number groups working different approaches specifying policy 
network component manufacturers ietf dmtf concentrating information models condition action rules focus management quality service qos networks 
security community developed number models relating specification mandatory discretionary access control policy 
evolved role access control rbac role management role may considered group related policies pertaining position organisation 
lot greater scope management resulted architectures technologies provide basic infrastructure required implement policy management solutions 
separate tools emerging policy management systems specifying security 
lacking common language provide unified approach supporting concepts policy models emerging various research communities 
identify requirements policy language support security policies access control delegation cater temporary transfer access rights agents acting behalf client policies express management activity 
structuring techniques facilitate specification policies relating large systems millions objects 
implies need policies relating collections objects individual ones 
composite policies allow basic security management policies relating roles organisational units specific applications grouped 
composite policies essential cater complexity policy administration large enterprise information systems 
possible analyse policies conflicts inconsistencies specification 
addition possible determine policies apply object objects particular policy applies 
declarative languages analysis easier 
extensibility needed cater new types policy may arise supported inheritance object oriented language 
language comprehensible easy policy users 
describes ponder declarative objectoriented language specifying security management policy distributed object systems 
language flexible expressive extensible cover wide range requirements implied current distributed systems paradigms identified 
ponder result experience gained policy management imperial college past years 
language syntax simple examples complete syntax language see 
sections basic policy types supported ponder 
constraints described section 
composite policy structures ponder described section 
section discusses features language flexible extensible 
section briefly compare ponder related section presents 

access control policies access control concerned limiting activity legitimate users successfully authenticated 
emphasis discretionary access control modified administrators users subject access permissions pass subject 
ponder supports access control providing authorisation delegation information filtering refrain policies described 
assume policies relate objects interfaces defined terms methods interface definition language 
term subject refer users principals automated manager components management responsibility 
subject accesses target objects resources service providers invoking methods visible target interface 
granularity protection access control ponder interface method 
subject target objects stored domains maintained domain service 
domains provide means grouping objects policies apply partition objects large system geographical boundaries object type responsibility authority convenience human managers 
facilitates policy specification large scale systems millions objects 
domains similar directories implemented ldap service 

authorisation policies authorisation policies define activities member subject domain perform set objects target domain 
essentially access control policies protect resources services unauthorized access 
positive authorisation policy defines actions subjects permitted perform target objects 
negative authorisation policy specifies actions subjects forbidden perform target objects 
authorisation policies implemented target host access control component 
inst auth auth subject type domain scope expression target type domain scope expression action action list constraint expression 
authorisation policy syntax syntax authorisation policy shown 
subsequent figures presenting syntax language bold token language 
choices enclosed separated optional elements specified square brackets repetition specified braces 
constraints optional types policies specified limit applicability policies time values attributes objects policy refers 
constraints discussed detail section 
elements policy specified order 
note subject target elements optionally include interface specification specified domain scope expression policy applies 
check objects support specified operations locate interface specification 
name policy specify domain policy stored 
example positive negative authorisation policies inst auth subject action load remove enable disable target nregion switches members domain authorised load remove enable disable objects type nregion switches domain 
indicates authorisation policy control access stored policies 
inst auth subject trainee action performance test target routers trainee test engineers forbidden perform performance tests routers 
policy stored domain 
examples show direct declaration policy instances keyword inst 
language provides reuse supporting definition policy types policy element passed formal parameter 
multiple instances created tailored specific environment passing actual parameters 
shows syntax authorisation policy types instantiations 
type auth auth authorisation policy parts inst auth auth 
authorisation types instantiations authorisation policy example specified type subject target parameters shown example 
example declaring instances types type auth subject target action load remove enable disable inst auth nregion switches inst auth nregion routers instance allows members execute actions policies nregion switches nregion routers domains respectively 
argued specification negative authorisation policies complicates enforcement authorisation system 
reasons support provision negative authorisation policies 
administrators express high level access control terms positive negative policies retaining natural way people express policies important provides greater flexibility 
negative authorisation policies temporarily remove access rights subjects need arises 
addition systems support negative access rights windows nt 

information filtering policies filtering policies needed transform information input output parameters action 
example location service permit access detailed location information person specific room users department 
external users determine person 
databases support similar concepts views selective information records example payroll clerk permitted read personnel records employees particular grade 
positive authorisation policies may include filters transform input output parameters associated actions attributes subject target system parameters time 
cases practical provide different operations means selecting information 
form authorisation policy differ normal ones possible external authorisation agent access control decision operation specified interface target object permitted 
essentially operation performed decision allow results returned subject results need transformed 
filters applied positive authorisation actions 
filter filter condition expression expression result expression 
filters positive authorisation actions action associated number filter expressions see 
filter contains optional condition filter valid 
condition evaluates true transformations assignment statements body filter executed 
keywords indicate input output parameters action filter specified result transform return value action 
example information filter policy inst auth filter subject bgroup target action bw priority bw priority default filter time bw priority members plus bgroup set video conference usa staff new york group 
time pm video conference takes parameters bandwidth mb priority 
filter restricts parameters bandwidth mb priority 

delegation policies delegation access control systems cater temporary transfer access rights 
ability user delegate access rights tightly controlled security policies 
requirement critical systems allowing cascaded delegation access rights 
delegation policy permits subjects privileges possess due existing authorisation policy perform action behalf passing read rights printer order print file 
delegation policy associated authorisation policy specifies access rights delegated 
negative delegation policies forbid delegation 
note delegation policies meant assignment rights security administrators 
inst deleg associated auth policy grantee type domain scope expression subject type domain scope expression target type domain scope expression action action list constraint expression valid constraint expression 
delegation policy syntax shows syntax positive delegation policy 
note required part grantee 
rest parts subject target action subsets associated authorisation policy specified default policy 
positive delegation policy specify delegation constraints limit validity delegated access rights part valid clause 
constraints time restrictions duration validity period specify duration period delegation valid revoked 
note negative delegation policies contain delegation constraints 
deleg auth load remove enable disable enable disable implicit auth policy nregion switches 
delegation authorisation policies example delegation policy inst deleg grantee target nregion switches action enable disable valid time duration delegation policy accepts auth policy example parameter 
states subject authorisation policy implicit policy delegate enable disable actions policies domain nregion switches domain 
note policy restricts target subset policy target see 
valid clause specifies delegation valid hours time creation revoked 
delegation policy specifies authority delegate control actual delegation revocation access rights 
implemented authorisation policy subject grantor execute method delegate run time system grantee parameter method 
run time subject executes delegate method separate authorisation policy created trusted components access control system grantee subject 
similarly revoke method deletes disables second authorisation policy 

refrain policies refrain policies define actions subjects refrain performing perform target objects may permitted perform action 
refrain policies act restraints actions subjects perform implemented subjects 
refrain policies similar syntax negative authorisation policies enforced subjects target access controllers 
situations negative authorisation policies inappropriate trust targets enforce policies may wish protected subject 
syntax refrain policies negative authorisation policies 
example refrain policy inst refrain subject test engineers action target analysts developers testing sequence progress refrain policy specifies test engineers disclose test results analysts developers testing sequence performed subject progress constraint state subjects 
analysts developers probably object receiving results policy candidate negative authorisation 

obligation policies obligation policies specify actions performed managers system certain events occur provide ability respond changing circumstances 
example security management policies specify actions specified security violations occur execute actions auditing logging activities performed 
management policies relate management qos storage systems software configuration obligation policies event triggered define activities subjects human automated manager components perform objects target domain 
events simple internal timer event external event notified monitoring service components temperature exceeding threshold component failing 
composite events specified event composition operators 
inst oblig event specification subject type domain scope expression target type domain scope expression obligation action list catch exception specification constraint expression 
obligation policy syntax syntax obligation policies shown 
note required event specification keyword 
target element optional obligation actions may internal subject target authorisation actions relate target object 
actions invoked target preceded prefix indicating target set 
concurrency operators specifying actions executed sequentially parallel separate actions obligation policy 
optional catch clause specifies exception executed actions fail execute reason 
example obligation policy inst oblig userid subject nregion target nregion users userid disable log userid policy triggered consecutive events userid 
nregion security administrator disables user userid nregion users domain logs failed userid means local operation performed object 
operator separate sequence actions obligation policy 
names assigned subject target 
reused policy 
example prefix actions order indicate action interface target local subject 
types external policy specification specified assuming corresponding specifications accessible type repository 
example external types type oblig string msg userid filename subject target ms servers ms mailto userid filename msg obligation type accepts parameters external type called 
interface specification printer queue manager object 
parameter parameter call local 
concurrency operator allows actions performed parallel 

constraints important element policy set conditions policy valid 
information explicit specification policy 
validity policy may depend policies existing running system scope context 
conditions usually impossible impractical specify part policy 
need specify part group policies 
useful divide constraints categories constraints single policies constraints groups policies call meta policies 
subset object constraint language ocl specify constraints ponder 
ocl simple understand declarative ocl expression conceptually atomic state objects system change evaluation 

basic policy constraints basic policy constraints limit applicability basic policy expressed terms predicate evaluate true policy apply 
policy constraints considered conjunctions basic constraints time state constraints 
analysis set policies substantially improved time constraints compared possible overlap state constraints simultaneously satisfied mutually exclusive relate states system component 
separate different types constraints subject target state constraint object state reflected terms attributes object interface 
action event parameters constraints event parameter values obligations action parameter values authorisations refrains 
time constraints specify validity periods policy 
time library object provided ponder specify time constraints 
policy compiler resolve different types constraints compile time separate constraints order aid policies 
example attribute time constraints inst auth subject action performance test target routers role trainee execute performance tests routers trainee 
role attribute subject constraint 
inst auth filter subject bgroup target action bw priority time members plus bgroup set video conference usa staff new york group 
constraint limits policy apply pm pm 

meta policies meta policies specify policies policies composite policy scope define application specific constraints 
specify meta policies groups policies policies specific scope express constraints limit permitted policies system disallow simultaneous execution conflicting policies 
specified sequence ocl expressions evaluate true false 
rest ocl expressions navigational expressions resulting collection 
raises clause followed action executed ocl expression evaluates true 
inst meta raises exception parameters ocl expression boolean ocl expression 
meta policy syntax examples indicate meta policies specify application dependent constraints groups policies 
self management policy manager retract policies subject 
happens single authorisation policy overlapping subjects targets 
specified ponder follows example self management meta policy inst meta raises pol pol authorisations select action exists name retract parameter exists name policy subject subject pol notempty body policy contains ocl expressions 
operates authorisations set part meta policy meta policy refers current object case meta policy selects policies characteristics action set contains action name retract parameters include policy object subject subject policy second ocl expression boolean expression returns true pol variable returned ocl expression empty 
result expression true exception specified raises clause executes 
receives pol set conflicting policies parameter example separation duty inst meta raises self policies select pa pb pa subject intersection pb subject notempty pa action exists act act name submit pb action exists act act name approve pb target intersection pa target budget notempty prevents conflict duty person approves submits budget 
searches policies subject acting target budget action submit approve 
policy implements static separation duties prevents person authorised perform conflicting actions 
dynamic separation duties slightly different members group authorised perform potentially conflicting actions performing action perform conflicting 
implemented constraints relating attributes subject target object meta policy 
example dynamic separation duty inst auth subject action issue target id user domain issue approve payment cheque 
assumes identity issuer stored attribute cheque object 

composing policy specifications ponder composite policies facilitate policy management large complex enterprises 
provide ability group policies structure reflect organisational structure preserve natural way system administrators operate simply provide reusability common definitions 
simplifies task policy administrators 

groups packaging construct group related policies purposes policy organisation reusability common concept programming languages 
different potential criteria grouping policies may targets relate department apply application 
shows syntax group instance 
contain zero basic policies nested groups meta policies order 
meta policy specifies constraints policies scope group 
inst group basic policy definition group definition meta policy definition 
group syntax reusability achieved specifying groups types parameterised policy element instantiating multiple times 
instance policies related login process grouped instantiated example 
example group policy inst group inst auth subject dept users staff target dept computers research action login inst oblig subject dept computers userid target dept computers log userid userid inst oblig see example login group policies staff access computers research domain log login attempts update users environment computer logs deal login failures 

roles roles provide semantic grouping policies common subject generally pertaining position organisation department manager project manager analyst ward nurse 
specifying organizational policies human managers terms manager positions persons permits assignment new person manager position re specifying policies referring duties authorizations position 
role specify policies apply automated component acting subject system 
organisational positions represented domains consider role set authorisation obligation refrain delegation policies subject domain role subject 
role special case group policies subject 
inst role rolename basic policy definition group definition meta policy definition subject domain 
role syntax role include number groups meta policies 
subject domain role optionally specified sign 
specified subject domain name role created default 
example role policy type role inst oblig userid investigate complaint userid target calls register inst oblig 
inst auth 
policies role type models service engineer role mobile telecommunications service 
service engineer responsible responding customer complaints service requests 
role type parameterised calls database database subscribers system calls 
obligation policy triggered event mobile number customer passed 
event subject role execute sequence actions calls database order check information subscriber mobile number passed complaint event check phone list investigate complaint 
note obligation policy specify subject policies role implicit subject 

type specialisation role hierarchies ponder allows specialisation policy types mechanism inheritance 
type inherit 
type extends inherits parts overrides parts name add new parts 
type role extends role body 
inheritance syntax example inheritance extend role type shown 
similar syntax extend types 
example role inheritance type role vlr extends cdb inst oblig ms mobile station target equipment identity registry service engineer role extends role specified example 
inherits policies parent role adds obligation policy updates record equipment equipment identity registry target mobile station signals failure equipment event 
role organisational hierarchies specified specialisation 
role hierarchy specified ponder extending roles shown example 
example role hierarchy employee secretary 
role hierarchy type role type role extends employee type role extends employee type role extends type role extends type role extends 
relationships managers acting organisational positions roles interact 
relationship groups policies defining rights duties roles 
include policies related resources shared roles relationship 
provides abstraction defining policies roles part interaction roles 
syntax relationship similar role relationship include definitions roles participating relationship 
roles nested role definitions 
participating roles defined parameters relationship type definition shown 
example relationship type type rel pm inst oblig timer day monday subject target pm 
policies relationship type specified role type secretary role type 
obligation policy specifies subject role mail report subject role monday 
roles place subjects targets implicitly refers subject corresponding role 

management structures large organisations structured units branch offices departments hospital wards similar configuration roles policies 
ponder supports notion management structures define configuration terms instances roles relationships nested management structures relating organisational units 
example management structure type define branch bank department university instantiated particular branches departments 
management structure composite policy containing definition roles relationships nested management structures instances composite policies 
shows simple management structure software development consisting project manager software developers project contact secretary 
example gives definition structure 
example software management structure type mstruct 
inst role role role software developers project contact inst rel supervise rel report inst mstruct mstruct declares instances roles shown 
relationships govern interactions roles 
supervise relationship reporting relationship 
instances type created branches organisation exhibit role relationship requirements 

miscellaneous features 
class hierarchy supervise report project manager 
simple management structure basic object meta composite auth oblig refrain deleg group role rel mstruct auth auth deleg deleg 
ponder object meta model class hierarchy language allows new policy classes may identified defined sub classes existing policy classes 
model provides convenient means translating policies structured representation languages xml 
xml representation viewing policy information standard browsers means exchanging policies different managers administrative domains 

scripts obligation action defined script suitable scripting language specify complex sequence activities procedures conditional branching 
scripts implemented objects stored domains 
authorisation policies specified control access scripts 
scripts give flexibility including complex actions expressed single object method invocations contain conditional statements supported scripting language 
example script defined update software computers target domain atomic transaction rolls back old version updates fail 
interpreted language java program scripts scripts updated mobile code mechanisms change functionality automated manager agents 
suffers usual security vulnerabilities mobile code 

imports import statements import definitions constants constraints events external ponder specifications stored domains current specification 
allows reuse common specifications order minimise errors arise due multiple definition 
example shows event specification reused 
example import statement inst group groups event userid userid common specifications basic policies inst group import groups inst oblig userid userid subject nregion target nregion users userid log userid imports specification groups domain stored reuses specification event userid defined 
event new obligation policy consecutive events event triggered user takes long enter password prompt 

related policy language specification relates security 
includes range policies covered ponder lack flexibility extensibility features ponder 
formal logic approaches generally intuitive easily map implementation mechanisms 
assume strong mathematical background difficult understand 
asl example formal logic language specifying access control policies 
language includes form meta policies called integrity rules specify application dependent rules limit range acceptable access control policies 
provides support role access control language scale large systems way grouping rules structures reusability 
separate rule specified action 
explicit specification delegation way specifying authorisation rules groups objects related type 
describes language express security policies information systems logic permissions obligations type modal logic called deontic logic 
standard deontic logic centres impersonal statements personal see specification policies relationship explicitly stated subjects targets 
approach accepts axiom pp permitted equivalent obliged suitable definition permission 
axiom suitable modelling obligation authorisation policies need separated 
miller discusses paradoxes exist deontic logic 
contains syntactical extensions deontic logic suffers problems 
graphical approach specifying security constraints objects policy consists parts domain assumptions system requirement allowed assuming domain satisfied 
policies defined appearance conditional access control statements 
scope approach limited satisfy requirements security management 
chen sandhu introduce language specifying constraints rbac systems 
shown language subset ocl specify constraints meta policies 
space limitations prevent discussion issue 
policy description language pdl eventbased language originating network computing research department bell labs 
policies pdl similar ponder obligation policies 
event condition action rule paradigm active databases define policy function maps series events set actions 
language clearly defined semantics architecture specified enforcing pdl policies 
language described real time specialised production rule system define policies 
events composite events similar ponder obligation policies 

ponder language specifying policies management security distributed systems 
ponder includes authorisation filter refrain delegation policies specifying access control obligation policies specify management actions 
ponder provides uniform means specifying policy relating wide range management applications network storage systems application service management 
addition supports common means specifying enterprise wide security policy translated various security implementation mechanisms 
currently implementing back ends ponder compiler firewall rules windows security templates java security policy 
ponder composite policies groups roles relationships management structures allow structured reusable specifications cater complex large scale organisations 
ponder objectoriented features allow user defined types policies specified instantiated multiple times different parameters 
provides flexibility extensibility maintaining structured specification large part checked compile time 
ponder provide powerful tool specifying application specific constraints sets policies 
ponder declarative language aids analysis policies 
language specification leaves room additions areas 
relationships need extended interaction protocols specify interaction roles 
investigating subtypes meta policies cover concurrency constraints user role assignment constraints 
policy specification toolkit development defining compiling analysing policies 
design implementation generic runtime object model enforcement ponder policies object platform development 
additional see doc ic ac uk policies 
abrams renewed understanding access control policies 
proceedings th national computer security conference 

baltimore maryland chen sandhu 
constraints role access control 
proceedings acm nist role access control workshop 

gaithersburg maryland usa acm press 
chess security issues mobile code systems mobile agents security vigna editor 
springer 

clark wilson 
comparison commercial military computer security policies 
proceedings ieee symposium security privacy 
damianou dulay lupu sloman 
ponder language specifying security management policies distributed systems 
language specification version 
research report doc imperial college science technology medicine department computing london april 
distributed management task force 
dmtf common information model cim specification version available www dmtf org spec cims html june 
goh policy management requirements system management department hp laboratories bristol april 
integrated management network systems concepts architectures operational application morgan kaufmann publishers 
hewlett packard primer policy network management network management division hewlett packard september 
pandey levitt 
security policy graphical approach 
technical report cse uc davis computer science department july 
internet engineering task force policy working group www ietf org html charters policy charter html jajodia samarati subrahmanian 
logical language expressing authorisations 
proceedings ieee symposium security privacy 
pp 
lobo bhatia naqvi 
policy description language 
proc 
aaai july 
orlando florida usa lupu sloman 
conflicts policy distributed systems management 
ieee trans 
software engineering nov 
lupu role framework distributed systems management 
ph thesis department computing imperial college london lupu sloman role framework distributed systems management 
journal network systems management 

requirements policy management system 
ietf internet draft progress available www ietf org october 
marriott policy service distributed systems 
ph thesis department computing imperial college london miller help 
specify policies unpublished available electronically enterprise shl com policy help pdf moore policy core information model vi ietf internet draft available www ietf org may 
flexible method information system security policy specification 
proceedings th european symposium research computer security esorics 

louvain la neuve belgium springer verlag 
rational software object constraint language specification version available www rational com uml september 
sandhu samarati authentication access control intrusion detection 
part appeared title access control principles practice ieee communications 

sandhu coyne feinstein role access control models 
ieee computer 

sloman domains framework structuring management policy 
chapter network distributed systems management sloman ed 
sloman policy driven management distributed systems 
journal network systems management 

sun microsystems java management extensions instrumentation agent specification december 
lobo 
network management ieee ifip network operations management symposium ed 
hong hawaii may pp 
weis policy definition classification aspects criteria examples 
proceedings ifip ieee international workshop distributed systems operations management 

toulouse france 
