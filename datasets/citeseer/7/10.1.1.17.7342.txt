spectral processing point sampled geometry create patch layout new framework processing point sampled objects spectral methods 
establishing concept local frequencies geometry introduce versatile spectral representation provides rich repository signal processing algorithms 
adaptive tesselation model surface regularly resampled displacement fields method computes set windowed fourier transforms creating spectral decomposition model 
direct analysis manipulation spectral coefficients supports effective filtering resampling power spectrum analysis local error control 
algorithms operate directly points normals requiring vertex connectivity information 
computationally efficient robust amenable hardware acceleration 
demonstrate performance framework selection example applications including noise removal enhancement restoration subsampling 
keywords signal processing spectral filtering subsampling fourier transform point representations today range sensing devices capable producing highly detailed surface models contain hundreds millions sample points 
due variety physical effects limitations model acquisition procedure raw range datasets prone various kinds noise distortions requiring sophisticated processing methods improve model quality 
spite advances mesh optimization traditional mesh processing algorithms approach limits triangle primitives implicitly store information local surface topology including vertex valence adjacency 
leads substantial additional overhead computation time memory costs 
increasing model size experience shift triangle mesh representations purely point surface descriptions 
instance concentrated point rendering pipelines point samples connectivity proposed rendering primitives 
surprisingly little mark pauly markus gross pauly inf ethz ch inf ethz ch sda dft regular grid eth rich fourier spectrum spectral analysis modified spectrum spectral processing pipeline 
processing stages depicted rectangles rounded boxes represent input output data stage 
gray background color indicates preprocessing phase 
inverse dft resampling input data raw patches processed patches inal surface filtered patch done far direct processing manipulation geometry 
new framework spectral analysis processing point sampled objects 
method operates directly irregular point sets normals require priori connectivity information 
framework extends called windowed fourier transforms concept known signal processing geometry 
fourier transform powerful widely tool data analysis manipulation 
particular image processing techniques successfully exploit frequency representations implement variety advanced spectral processing algorithms comprising noise removal enhancement feature detection extraction sampling 
extending approach general geometric models difficult due number intrinsic limitations conventional fourier transform requires global parameterization basis functions defined 
second ft algorithms require regular sampling pattern 
prerequisites usually satisfied common discrete geometry rendering standard fourier transform 
limitation traditional fourier representations lack spatial localization making impractical local data analysis 
show limitations overcome generalization windowed ft general manifolds 
basic idea framework preprocess raw irregular point cloud model representation describes object surface set regularly resampled height fields 
surface patches form windows compute discrete fourier transform obtain set local frequency spectra 
confined individual surface patches windowed ft provides powerful versatile mechanism local global processing 
concept frequency point sampled geometry gives access vast space sophisticated spectral methods resulting tens years research signal processing 
focus classes methods spectral filtering resampling 
point sophisticated filtering operations implemented elegantly analyzing modifying coefficients frequency spectrum 
possible applications include noise removal analysis surface microstructure enhancement 
fast algorithm adaptively resampling point geometry spectral representation determine optimal sampling rates 
method particularly useful reducing complexity overly dense point sampled models 
fft signal processing algorithms framework efficient computation memory costs amenable hardware acceleration allows process hundreds millions points contemporary pcs 
previous extending concept frequency geometry gained increasing attention years 
conceptually generalization accomplished eigenfunctions laplacian 
taubin pioneered spectral methods irregular meshes discrete laplacian implement iterative gaussian smoothing triangle meshes 
method improved desbrun tackled difficulty discretizing geometric laplacian introducing curvature flow noise removal 
kobbelt novel concept multiresolution variational fairing modeling high mesh frequencies attenuated iteratively solving discretized laplacian equations 
signal processing methodology algorithms compute explicit spectral representation object surface 
typical filters gaussian smoothing implemented spatial domain 
contrast method generates set local fourier spectra explicitly analyzed manipulated 
supports powerful filtering squares optimal inverse feature enhancement fourier sampling 
specifically examine power spectrum surface signal estimate optimal filter parameters determine noise level data 
guskov introduced signal processing methods subdivision pyramid algorithms 
achieve qualitatively remarkable effects band pass filtering enhancement notion frequency detail vectors different levels mesh hierarchy 
scheme uses fourier transform efficiently computes projection space eigenfunctions laplacian 
framework concepts natural vibration modes spatial frequency founded theory differential calculus 
allows exploit results extensive fourier theory including sampling parseval theorems 
obtain profound means determine optimal sampling rates supports local error control 
lately gotsman introduced method spectral compression triangle meshes fixed partitioning mesh submeshes 
effective compression achieved direct decomposition patches eigenfunctions laplacian 
notion frequency strictly local explicit eigenvector computations expensive potentially unstable posing serious limits efficient processing large patch sizes 
methods focus triangle meshes relying heavily connectivity information vertices 
contrast method purely point requiring vertex positions associated normals 
allows direct processing scanned data need construct polygonal meshes making particularly suitable large models obtained modern range scanners 
algorithm overview fig 
gives high level overview spectral processing pipeline 
stage split point sampled model number overlapping patches 
patch defined collection sample points represents connected region underlying surface 
tesselation done way surface represented patch expressed displacement field planar domain 
generated patch layout forms basis windowed fourier transform stages operate locally individual patches 
patch surface resampled regular grid fast scattered data approximation sda 
apply discrete fourier transform dft obtain spectral representation patch surface 
appropriate spectral filters directly manipulate fourier spectrum achieve variety effects de noising enhancement 
subsequent inverse dft reconstructs filtered patch surface spatial domain 
utilize spectral information adaptively resample patch surface 
pipeline reconstruction stage processed patches stitched yield final object surface 
requires careful attention patch boundaries create smooth transition blending overlapping parts adjacent patch surfaces 
indicated fig 
processing pipeline split phases patch layout generation sda dft separated preprocessing step 
precompute parameter mapping adjacent patches blending function reconstruction 
leaves spectral analysis inverse dft resampling reconstruction actual processing stages 
describe individual stages processing pipeline detail order depicted fig 

creating patch layout assume input sample points represent smooth arbitrary topology possibly multiple connected components 
require sampling dense sense adjacent points space similar normal orientation belong local neighborhood surface 
goal describe object surface set patches represented scalar height fields 
achieve grow patches accumulating adjacent sample points subject normal cone condition 
criterion states aperture angle cone spanned normals patch sample points bounding normal cone width guarantees occur bijectively map patch surface height field representation planar domain 
practice choose maximum normal cone width provides uniform parameter mapping scattered data approximation robust 
compute normal cone adapted version rtner algorithm 
determines smallest enclosing sphere set normal vectors interpreted points unit sphere 
vector center gives normal cone center radius determines aperture angle see fig 

normal cone center aperture angle base plane algorithm provides accurate estimation cone spanned set normal vectors red 
algorithm generating patch layout proceeds stages stage creates initial fine grain patch layout clustering adjacent sample points second stage merges adjacent clusters patches optimization approach see fig 

iterative growth ensure times normal cone condition satisfied 
clustering 
arrange sample points binary space partition bsp tree recursively splitting sampling set longest axis bounding box 
bsp structure implicitly encodes adjacency information requiring approx 
input model size additional memory overhead 
choose leaves tree contain exactly sample point initial clusters 
successively merge clusters common parent bsp tree neighbors space 
fig 
illustrates cluster potentially neighbors allowing sibling clusters merged restrictive lead useful patch layout 
clustering stage soon clusters reach suitable size typically sample points depending model size 
call patches created clustering leaf patches leaves final bsp tree 
patch merging 
second stage compute local neighborhood information leaf patch need determine list adjacent leaf patches 
leaf patch confined bsp split planes corresponds internal node tree 
step collect split plane leaf patches border side plane 
project bounding boxes leaf patches split plane check overlaps projections 
overlap occurs mark leaf patches neighbors see fig 

neighborhood information leaf patches illustration 
thick lines resp 
black dots indicate bsp split planes confine green patch 
patch neighbors projections split plane overlap 
note neighbors distributed bsp tree 
adjacency information leaf patches apply sophisticated merging technique 
idea optimization approach merges patches local quality metric 
pi pj neighboring patches pi pj potential merge candidate pair 
gives relative measure quality patch layout obtained merging pi pj small values indicating high quality 
iteratively merging pair highest quality gain locally optimize patch layout 
merge candidate pairs arranged priority queue ordered increasing initialized pairs neighboring leaf patches 
successively remove pair highest priority lowest queue merge patches union satisfies normal cone condition 
update priorities neighborhood information affected pairs accordingly 
determined formula size nc reg 
factor eq 
seeks optimize specific quality feature final patch layout 
individual quality measures difficult normalize combine product yield 
size assigns high priority small patches reduces undesirable fragmentation size pi pj pi pj pk number samples patch pk nc penalizes increase normal cone width merged patch pi pj nc pi pj pi pj max pi pj pk aperture angle normal cone pk leads better adaptation patch layout local curvature underlying surface flat regions quickly merged large patches highly curved regions covered smaller patches 
introduced control boundary patches lp pj pi pj bp bp bp pj counts number leaf patches counts leaf patches lie boundary lp pk bp seeks minimize length patch boundary relative patch area 
favour roughly patches beneficial sda dft processing stages 
reg regularize patch distribution es pi pj reg pi pj es pi es pj ck cl spring energy term 
derived placing spring tension edge center ck cx cy cz pk center neighboring patches pl merging process terminates soon patches merged violating normal cone condition 
additional control granularity patch layout user specify maximum patch size terms number sample points spatial extent 
assign different weights individual quality measures additional exponents eq 

practice equal weights generally lead satisfactory results 
fig 
illustrates stages patch layout generation simple example sphere 
figs 
show final patch layout complex point sampled models 
observe distribution shape patches adapts geometry regions high curvature smaller patches flat parts surface 
points clusters patches patch layout created merging sample points clusters merging clusters patches 
scattered data approximation patch generation algorithm require create connectivity information individual samples 
point patch simply set irregular sample points additional knowledge spatial relations 
goal stage processing pipeline create continuous surface representation describes patch surface scalar displacement field sampled regular intervals 
functional mapping 
step doing define local coordinate frame height field representation 
call plane specified center patch normal cone base plane see fig 

defines coordinate transformation maps sample world coordinates tp displacement base plane parameter values compute smallest enclosing box pairs base plane optimally align sampling grid sample points fig 

overlap 
mentioned need patches overlap handle boundary effects reconstruction stage 
achieved increasing size parameter rectangle including sample points neighboring patches map enlarged parameter domain see fig 
right 
check boundary point satisfies normal cone condition 
internally store patch list leaf patches constitute patch easily evaluated 
left smallest enclosing box interior sample points parameter plane 
right extended parameter domain regular sampling grid 
red dots indicate boundary points included neighboring patches 
proven useful increase maximum normal cone width boundary points allowing information underlying surface included overlap region 
applications overlap size interior parameter box sufficient creating smooth transition boundaries reconstruction 
regular sampling 
fig 
illustrates sampling pattern base plane general irregular 
standard spectral transforms cosine fourier transforms require regularly sampled input data 
apply fast hierarchical scattered data approximation projects displacement field regular grid 
linear spline basis functions centered grid point support basis touches center neighboring basis functions 
linear splines allow efficient evaluation due compact support interpolate original samples provided sampling rate sufficiently high 
utilize scattered data approximation method gortler image rendering refer details 
shown fig 
algorithm proceeds phases splatting computes weighted averages sample points create initial approximation coefficients basis functions 
due irregularity sample points approximation may contain holes undefined regions need filled 
pull iteratively generates lower resolution approximations hierarchical convolution filtering 
push fills holes final patch successively blending approximations different resolutions 
set grid size proportional number interior boundary points patch oversampling factor see fig 

models chose leads approxima tion error 
note substantially smaller grid sizes introduce noticeable low pass filtering due averaging splatting phase 
explained patch layout describes surface set scalar valued displacement coefficients 
similar approach taken displaced subdivision surfaces normal meshes achieve staggering mesh compression rates 
methods require costly computation coarse triangle mesh obtain base domain displacements 
addition nontrivial parameterizations mandatory keep track coefficients 
creates substantial computational overhead making representations suitable purposes 
patch layout scheme simple requires triangle meshes mesh simplification 
described procedures operate directly point clouds making fast efficient large datasets see table 
measured rms error original sampling points reconstructed points sda surface 
splatting pull patch surface push scattered data approximation patch happy buddha 
different colors illustrate displacement base plane dark blue pixels indicating holes 
quickly filled pull phase halving resolution dimension 
final patch created push phase arrows indicate grids blended 
discrete fourier transform sampling pattern surface representation created sda describes model set overlapping patches satisfies fourier requirements regular sampling distribution euclidean domain 
apply discrete fourier transform dft box window function obtain spectral decomposition surface model 
order better understand follows give brief dft mentioning properties directly exploit algorithms 
details refer textbooks 
dimensional dft essentially basis transform space eigenfunctions laplacian 
real valued input signal defined regular grid size coefficients dft written xk xn kn lm discrete frequencies 
fast fourier transform fft compute dft onm log nm operations operations required direct evaluation eq 

fundamental implementation spectral filters described convolution theorem 
relates convolution signals spatial domain multiplication spectral domain doing computationally expensive filtering convolution spatial domain perform cheap multiplication frequency domain dft inverse 
power spectrum 
power spectrum fourier transform autocorrelation function asterisk denotes complex conjugate 
power spectrum estimation widely tool data analysis 
illustrated fig 
allows estimate signal noise ratio optimize filter characteristics cut frequency windows gaussian hanning 
pass band 
convolution theorem directly compute spectral coefficients power spectrum estimation 
normalized logarithmic plot power spectrum typical patch surface left 
annotation circle indicates relative amount power contained circle 
right idealized illustration signal noise ratio estimation 
error estimation 
important result fourier theory parseval theorem xn nm xk relates signal energy spatial frequency domains 
utilize property estimating error introduced filtering spectral coefficients suppose filtered version spectrum norm difference nm 
explicit control error introduced modifying spectral coefficients 
spectral analysis frequency spectrum obtained dft provides spectral representation patch surface 
basis functions spectral domain represent natural vibration modes surface relating specific surface features certain frequency intervals 
low frequencies instance represent geometric shape high frequencies account small geometric detail noise 
semantics perform elaborate filtering operations manipulating frequency spectrum 
fig 
shows various filters corresponding transfer functions 
low pass filtering eliminates high frequencies leads surface smoothing 
observe ideal low pass filter sharp cut frequency produces known ringing artefacts clearly visible surface ripples image 
phenomenon easily explained convolution theorem multiplying frequency spectrum box function ideal filter equivalent convolving original surface sinc function see fig 
left image 
gaussian transfer function surface smoothing ringing artefacts occur corresponding filter kernel spatial domain gaussian fig 
right 
lower left image fig 
shows band filter attenuates middle frequencies 
leads surface smoothing retaining microstructure surface material 
enhance certain features surface scaling frequency spectrum appropriately fig 
lower right 
signal restoration 
real imaging systems introduce undesirable low pass filtering physical apparatus perfect delta function response 
blurring reduced inverse filter amplifies high frequencies 
inverse filtering tends instabilities extremely sensitive noise 
restore object surface presence blur noise apply squares optimal filter wiener filter 
suppose blurred noisy input signal extrapolated noise level xk input signal estimated original signal yk ideal low pass band spectral filters applied st matthew dataset 
corresponding transfer function obtained rotating shown function vertical axis 
convolution filter kernels spatial domain 
want reconstruct underlying original signal applying spectral filter function fourier transform yields filtered signal goal determine minimized 
shown achieved power spectrum analysis yielding estimated power spectra blurred signal noise imaging system response respectively see fig 
right 
note effective wiener filtering relies accurate estimation quantities requires knowledge system impulse response see fig 

original gaussian low pass enhancement ideal low pass gaussian low pass dt df resampling manipulating frequency spectrum inverse dft takes back spatial domain 
want filter input model affecting sampling pattern density sample filtered patch surface parameter values original sample points 
applications desirable mechanism adaptively refining surface upsampling reducing model size subsampling 
particularly important dealing large datasets handled full resolution 
fourier sampling 
fourier spectrum provides elegant way estimate optimal sampling rate subsampling patch surface 
suppose bandlimited signal nyquist frequency fc coefficients associated frequencies greater fc zero 
sampling theorem fourier theory states reconstruct exactly sampling interval equal fc uniformly subsample patch surface proceed follows lowpass filter frequency spectrum obtain bandlimited signal 
power spectrum error estimation described section adjust filter parameters match desired maximum error 
apply sampling theorem compute optimal sampling interval filtered signal 
control sampling rate specifying maximum error tolerance 
sampling points normals 
determine patch surface point arbitrary parameter values current implementation uses bilinear interpolation computes corresponding normals order divided differences 
higher order schemes easily implemented 
alternatively subdivision scheme scalar displacements interpreted subdivision coefficients 
reconstruction stage processing pipeline need reassemble object surface stitching processed patches 
care needs taken individual processing patches lead discontinuities patch boundaries 
create smooth transition patches blend patch surfaces regions overlap 
blending done computing convex combination corresponding points neighboring patches weights precomputed blending function 
parameter mapping 
blend points neighboring patches need define mapping different parameter domains regions overlap 
suppose interior point patch overlap patch covers 
corresponding parameter values determined mapping world space inverse mapping transform 
gives point projected base plane sample obtain mapped world coordinates yield blended sample point computed convex combination weights blending functions respectively 
multiple patch overlaps handled analogously 
improve performance store parameter mapping multi layered texture maps bilinear interpolation compute parameter correspondence intermediate points 
blending function 
blending function patch generated splatting interior samples see fig 
regular grid 
grid aligned sample points manner sda grid different resolution 
subsequent convolution filtering gaussian kernel creates smooth decay zero patch boundary see fig 

approach rim overlap region patch smaller influence sample point convex combination blended sample 
splatting done conven tional graphics hardware splat size equivalent size convolution matrix 
chosen match size overlap defined section test cases sufficient guarantee hole free reconstruction 
note blending blending function patch fig 

left image shows interior sample points black dots indicating sample positions 
right blending function convolution filtering 
function parameter correspondence generated preprocessing phase operate original sample points prior spectral filtering 
blending normals 
smooth boundary transition normals achieved analogously convex blending geometric position 
substantial changes shape patch surfaces may cause simple method fail 
consider situation fig 
patch processing created significant gap surfaces 
blending position case substantial filtering blended normals green differ significantly correct normals red 
works fine blended normals adequately describe tangent plane surface 
detect cases simple conservative heuristic takes account positions initial blended points 
correct normal approximated sampling small number points vicinity considered sample fitting squares tangent plane points 
computationally expensive normal estimation rarely required 
test cases normals computed way rendering additional overhead negligible 
blending sampling rate 
resampling strategy described section uses sampling theorem determine sampling rate patch 
adjacent patches differ significantly spectral representation may lead sharp changes sample density patch boundaries 
applications smooth transition sampling rate preferable 
achieve blend sampling rate analogously blending geometric positions normals 
gives continuous blending sampling rate patch boundary 
left continuous sampling rate 
middle discretized area weighted sampling rate 
right resulting sampling pattern 
function describing sampling rate discretized regular grid 
grid value serves index list precomputed sampling patterns generated mitchell algorithm poisson disk sampling 
achieve gradual change sampling density patch boundaries see fig 

results discussion filtering subsampling methods described sections operate locally individual patches 
achieve global effects apply filter resp 
relative error bound subsampling patch appropriate scaling frequency spectrum 
fig 
shows gaussian restoration filter applied laser range scan human head 
current implementation parameters wiener filter adjusted interactively investigating power spectra small number patches determine signal noise ratio 
observe wiener filter preserves geometric features smoothed away gaussian 
interactive local editing operations head st matthew statue illustrated fig 

user draw curve surface mark region interest red blue circles 
patches split adaptively curve spectral processing applied patches specified area 
note patch blending automatically creates smooth transition filtered non filtered areas 
figs 
show subsampling michelangelo david 
original dataset contains vertices reduced subsampled version corresponding approx 
patch signal power 
sampling original model fairly uniform spectral subsampling creates nonuniform sampling distribution locally adapts geometry 
strictly speaking notion error established eqs 
holds patch interior 
local frequency information overlap region error influenced blending function turn results convolution process depicted fig 

experimental investigations showed relative maximum error patch leads bounded global error enables intuitive global control 
thorough analysis error behavior patch boundary main focus research 
model head st matthew david vertices patches computation time sec 
clustering patch merging sda dft total preprocess spectral analysis inverse dft reconstruction full model subsampled total table timings different stages processing pipeline cf 
fig 
ghz amd athlon gbyte main memory 
performance 
table shows timing data spectral processing pipeline 
note bulk computation time spent preprocessing stage 
due scalar representation surface description comprising sda blending grids parameter mapping requires memory input model points normals specific compression scheme applied 
robustness 
important issue deserving discussion effect specific patch layout final reconstructed surface 
naturally want spectral processing invariant different 
patching scheme robust moderate parameter variations drastic modifications consequently lead differences patch size shape 
examples shown perceivable difference experimentally applying different patch layouts 
course filtering excessive longer holds true 
spectral coefficients set zero instance patch surfaces degenerate base planes clearly exhibiting dependence patch layout blending function 
texture scalar attributes 
addition geometric information pipeline allows process attribute data associated sample points color reflectance properties 
including appropriate terms eq 
attributes control patch layout scheme 
introduced spectral processing pipeline extends standard fourier techniques general point sampled geometry 
framework supports sophisticated surface filtering fourier resampling efficient memory computation time allows processing large geometric models 
directions research include global error analysis core implementation processing pipeline geometry compression feature detection extraction editing animation 

marc levoy digital michelangelo project people providing datasets david st matthew statues 
simon rusinkiewicz making publicly available 
amenta bern new voronoi surface reconstruction algorithm 
siggraph conference proceedings 
fourier transform applications 
mcgraw hill new york nd rev ed 
rtner fast robust smallest enclosing balls 
proc 
th annual european symposium algorithms esa lecture notes computer science springer verlag 
desbrun meyer schr der barr implicit fairing irregular meshes diffusion curvature flow 
siggraph conference proceedings 
multidimensional digital signal processing prentice hall 
freeman determining minimal area rectangle arbitrary closed curve 
communications acm 
gonzalez woods digital image processing 
wesley 
gortler grzeszczuk szeliski cohen lumigraph 
siggraph conference proceedings 
guskov sweldens schr der multiresolution signal processing meshes 
siggraph conference proceedings 
guskov sweldens schr der normal meshes 
siggraph conference proceedings 
jain fundamentals digital image processing prentice hall 
gotsman spectral compression mesh geometry 
siggraph conference proceedings 
kobbelt discrete fairing 
proc 
th ima conference mathematics surfaces 
lee hoppe displaced subdivision surfaces 
siggraph conference proceedings 
levoy pulli curless rusinkiewicz koller pereira anderson davis ginsberg shade digital michelangelo project scanning large statues 
siggraph conference proceedings 
mitchell generating images low sampling densities 
siggraph conference proceedings 
papoulis signal analysis mcgraw hill 
pfister zwicker van baar gross surfels surface elements rendering primitives 
siggraph conference proceedings 
rusinkiewicz levoy multiresolution point rendering system large meshes 
siggraph conference proceedings 
taubin signal processing approach fair surface design 
siggraph conference proceedings 
restoration blurred noisy surface model filtered gaussian feature preserving wiener filter 
underlying patch layout shown image 
subsampled head zooms button original subsampled clearly show nonuniform sampling distributions samples concentrated regions high curvature 
local smoothing red circle enhancement blue circle adaptive patch layout 
michelangelo david 
renderings original model vertices subsampled model vertices 
image shows sampling distribution image illustrates patch layout 
