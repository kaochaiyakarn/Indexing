content routing system distributed information servers mark sheldon andrzej duda ron weiss james toole jr david gifford june mit lcs tr laboratory computer science massachusetts institute technology cambridge ma bull imag syst emes inria research sponsored defense advanced research projects agency darpa contract dabt 
views contained document authors interpreted representing official policies expressed implied defense advanced research projects agency government 
keywords distributed information retrieval query routing query processing content access distributed heterogeneous databases describe system provides query associative access contents distributed information servers 
queries describe desired object attributes automatically forwarded servers contain relevant information 
typical distributed information systems objects underconstrained queries produce large result sets extraordinary processing costs 
deal scaling problem content labels permit users learn available resources quickly formulate queries adequate discriminatory power 
experimental data show certain content label attributes automatically chosen 
implemented associative access distributed set information servers content routing system 
content routing system organized network servers called content routers single query image distributed information system 
experiments motivated video access service show substantial performance benefits result content routers removed client server path object interest 
estimate hosts provide file service internet average files host 
collection files represents vast potential resource 
lack associative access collection difficult discover relevant information 
implementation issues ignored difficult formulate query language corresponding schema allow user easily locate objects interest collection objects 
example user willing examine result set objects user query contain bits information 
semantic challenge query associative access provide convenient way users formulate queries contain sufficient discriminatory power 
semantic problems solved remains practical problem implement search process 
explores thesis content labels organize semantics associative access distributed set information servers content routers content labels serve implementation basis distributed associative access 
call collection information servers implements associative access content labels content routers content routing system 
implemented content routing system provides associative access underlying servers regard files located 
content label succinct description collection objects 
content labels include administratively determined attributes library names group names logical locations assigned properties relationships designed aid users 
content labels include automatically extracted attributes internet domains authors objects object types path names subjects key words abstracts forth 
collection objects correspond contents host contents removable disk set collections groupings objects 
semantics query language designed help user formulate query reasonably bounds object search space 
user queries appropriately constrained query processing consists extreme cases queries broadcast information servers content router complete knowledge object attributes 
approaches scales 
query routing content labels represents compromise scalable architecture 
approach user initially state query includes attributes included content labels 
available attributes enumerated enable query assembly prespecified components 
search space narrowed attributes available user 
query contains information attributes available query construction 
query routing query formulation query processing 
content router may require query sufficiently narrow describe router specific number collections router forwards query underlying collections 
user perspective router provides abstracts available collections terms content labels 
query specific router forwards query collections user employ full range attributes abstracted previously specified collections 
way associate attributes objects collection transducers automatically extract attributes files directories servers objects 
transducers object type specific serve convert unstructured object set descriptive attributes 
transducer automatically run object created updated 
default transducers exist text files source files object files mail files directories popular object types 
users extend semantics system customized transducers 
large content routing system user begins top level router 
top level router user constructs query high level attributes author library name internet domain host name 
query narrowed top level router forwards query matching collections 
user elaborate query full text words procedure names file extensions common attributes 
ultimately set matching objects returned response suitably constrained query 
user knows provide suitably constrained query top level router query automatically forwarded appropriate collections result set produced see 
content routers serve administrative role management distributed system 
typically content router service organizational unit 
units control access servers unit domain provide value added information exporting unit logical attributes 
units affect logical view network underneath 
implemented prototype content routing system explore content labels query routing performance im associative access video segments content routing server 
plications multiple layers query routing 
shows video browser uses query facilities content routing system locate video segments interest local servers 
chose experiment video access demanding bandwidth real time requirements 
remainder discuss previous build section semantics queries content labels section experimental data implementation content routing system section experience section 
related previous broken broad categories distributed naming systems network navigation systems network information retrieval systems 
distributed naming systems cci profile pet networked resource discovery project sch provide attribute access wide variety objects support hierarchical relationship servers data system achieves content labels 
systems integrated file system provide automatic attribute access contents objects 
network navigation systems gopher system aal word wide web provide means organizing servers structure allows navigating browsing remote information servers 
user knows look resource located interesting resources discovered 
systems provide facilities individual servers respond queries 
support query routing 
possible install content routing system system 
wcs research prototype discovering key network characteristics hosts gateways topology 
network information retrieval systems provide access information remote servers 
wide area information service wais km ste provides uniform means access information servers network 
wais permits information remote sites queried relies user choose appropriate remote host directory services 
archie system ed polls fixed set ftp sites internet 
query yields set host filename pairs manually retrieve relevant files 
alex file system cat protocol converter 
integrates ftp servers local file system address issue associative access remote files 
system mar mar provides uniform user interface large number databases accessible retrieval systems 
user queries translated commands different systems 
support automatic selection relevant databases users query 
distributed indexing mechanism precomputed indices databases summarize holdings particular topics databases 
architecture layer fixed structure suitable incorporation bibliographic databases flexible content access file servers 
simpson alonso propose querying architecture network autonomous databases sa forwards user queries known information sources 
knowledge existing sources acquired exchanging messages neighboring hosts 
approach probabilistic query semantics finding relevant objects guaranteed 
information brokers mitl gold project bc share goals 
information brokers provide access objects directly 
return descriptions object location method may retrieve object 
previous systems architecture combines transparent way associative access distributed information servers content access objects servers 
key advances offered include ffl scalability query routing provides uniform means content access large networks information servers 
query routing provides mechanism routing updates relevant information servers 
uses layered routing architecture maintains limited knowledge attributes information servers essential scaling 
ffl usability content labels provide distillation information server content user queries effectively routed appropriate servers 
content labels permit users learn available resources quickly formulate queries adequate discriminatory power 
object search space organized content labels enables navigation discovery large space servers scope initial query sufficiently narrowed refined 
ffl efficiency location objects hierarchical network servers complemented direct access point servers data objects individual server object identified 
semantics goal design distributed information system architecture content navigation associative access data objects 
users locate desired files directories objects queries formulated terms content attributes 
fundamental requirement allow users describe conveniently desired objects distributed information system simultaneously excluding undesirable objects 
architecture composed conceptual layers query routing layer point information server layer see 
internally routing layer configured hierarchical system nodes called content routers 
see 
charge routing user queries content routers point information servers 
clients information servers content label content labels content routers routing queries information servers 
cr cr cr content routing system provides access network information servers 
query content label semantics query boolean combination attributes 
attribute consists field name value 
typical attributes text multiprocessor author bershad 
query applied collection objects subset collection satisfies query called query result set 
chose perfect search scheme guarantees result set contains objects match query accessible servers system 
process query refinement user enumerate set defined fields browse set possible values field 
content label query abstracts contents collection 
example content label collection type software domain cmu edu domain stanford edu subject operating systems content label implies member collection attribute collection type software subject operating systems cmu edu standford edu domains 
typical distributed systems objects underconstrained queries produce large result sets extraordinary processing costs 
methods individually combination limit object search space permit scaling ffl user supply physical location server holds data 
example wais system contains information hundreds servers user choose physical location search 
ffl user supply query contains value added attributes created administrative means 
example collection type software restrict search space objects reside software repositories 
ffl user supply information rich natural attributes 
example attribute owner clinton occurs servers query contains attribute effectively routed appropriate servers 
natural attribute opposed value added attribute arises indexing object emitted object transducer 
content label collection correspond logical disjunction attributes collection member objects 
aside constraint architecture limit form content labels 
principle content label consisted disjunction words appeared collection 
alternatively content label simply name host contains collection files 
practice expect content labels lie extremes containing attributes including host names domains authors libraries priorities subjects 
lack constraints form content labels range attribute field names values architecture extensible 
desired possible enforce uniform meaning field name object transducers 
example owner refer owner object 
possible allow meaning field names defined transducer 
requirement may necessitate including object attributes uniquely identify semantics transducer object 
content routing performed organizing content labels collection 
query implies content label content label said match query 
set collections relevant query precisely defined corresponding content labels match query 
set matching collections large user refine query attributes matching content labels 
starting top level user may explore logical organization information servers 
content labels system generates view search space implied query 
user iteratively refines query discriminating power 
point search space sufficiently limited user may submit unrestricted queries processed relevant servers 
example user enters content routing system cd crs get started find fields supported navigating servers ls crs field administrator hostname cost immutable field collection type label crs field location field owner port user may enumerate values interesting fields 
ls location massachusetts mit ls collection type articles files user digital news video user may explore interesting attribute 
user file system servers available associated content labels available browsing desc files cd collection type user ls users users desc users users desc user wants locate interesting objects search space 
current implementation requires explicit indication perform search 
cd object search find files owned jones contain text keywords content routing 
system automatically merge results servers discovered previously 
cd owner jones text content text routing ls implementation tex related tex text sosp tex proposal body tex slides tex prop tex tour text mail text find movie previews cd crs collection type video cd object search subject preview ext movie ls bond movie movie movie toys movie attributes size mb index size mb comp rec users nyt users ap total unique table information servers statistics attribute statistics order demonstrate certain attributes high discriminatory power automatically discovered content labels gathered attribute statistics information servers 
table gives characteristics servers number distinct attributes field value pairs server size index size 
comp usenet comp newsgroup hierarchy rec rec newsgroup hierarchy users users user file systems nyt database new york times articles ap database associated press articles 
shows total number unique attributes grows servers added 
seen text comprises majority attributes 
due sheer number distinct attributes system maintains complete knowledge text attribute values content labels appears impractical 
distinct author attributes content labels 
evaluate discriminatory power attributes servers gathered histograms occurrence attributes servers 
histograms give number attributes occur servers 
statistics helpful deciding query routing done certain attribute fields 
attribute narrow distribution identifies small number servers field propagated content routers content label 
figures histograms low medium high frequency attributes 
low frequency attributes owner category type medium frequency attributes newsgroups date organization discriminatory power servers content label routing 
number servers cumulative number attributes author subject text title cumulative number attributes servers implementation propagated attributes content labels information servers 
higher frequency attribute fields text subject obviously exploited way 
number occurrence attribute histogram low frequency attributes category owner type attribute frequency histogram low frequency attributes text attribute analyzed gathered statistics order find group infrequent values new attribute propagated content label 
results encouraging continuing investigate techniques automatically determining attributes useful routing 
implementation built prototype implementation content routing system provides query routing extensible number servers 
server brows number occurrence attribute histogram medium frequency attributes author date newsgroups organization attribute frequency histogram medium frequency attributes number occurrence attribute histogram high frequency attributes name subject text attribute frequency histogram high frequency attributes ing content routing content labels administratively determined 
initial prototype chosen simple routing algorithm partitioning user query universe specification object specification 
content router uses universe specification determine set information servers servers may content routers 
forwards object specification portion query set nodes 
nodes act query function routers point information servers 
type naming useful users want browse graph information servers refine query fewer number servers need contacted 
complete query composed universe specification object specification invoke object query portion set information servers match universe specification 
layered architecture essential scaling 
demonstrated previous section impractical content routers maintain complete knowledge attribute information information servers 
extreme maintaining knowledge actual content information servers result broadcasting point servers attempt process query 
content labels represent compromise restrictions scalable architecture 
content routing system implementation content routing system uses semantic file system interface information servers content routers 
content router implemented user level nfs server may mounted nfs client 
path names interpreted queries results returned dynamically created virtual directories 
shows architecture prototype content router implementation 
server collects content labels set servers provide access 
server currently done manually 
clients submit queries pass nfs interface server 
response user requests server constructs returns virtual directories 
demand server computes contents virtual directories 
response universe specification query content labels server provides users access content labels satisfy query 
user decides result set sufficiently narrow server forward queries specified servers 
returns merged results virtual directory 
provide access individual data objects servers content router returns symbolic links interpreted daemon client 
client uses mount point directly connects remote information server 
client may access objects content router run appropriate code 
naturally mediated object access comes performance penalty discussed 
nfs protocol advantages disadvantages 
nfs widely understood servers nfs ends able reconfigure system new machines easily 
nfs easy clients participate allows leverage existing code 
run editors compilers standard file system tools modification 
unfortunately nfs systems tolerate failure rule error reporting recovery awkward protocol 
architecture independent underlying communication protocol 
gopher aal world wide web nis mechanism provides distributed access servers 
client amd crs server virtual directories query forward content labels nfs server mount server transducer direct object access content router information server information server information server client host server host server host server host nfs implementation architecture prototype content router 
hierarchical system facilitates locating objects introduces communication delays performance restrictions intolerable larger sets applications layering gets deeper 
particular server load proportional resources consumed clients accessing server 
important performance system client applications minimize resources consumed clients 
client identifies object content router discovered information server appropriate client request system provide direct access point server 
client incur latency multilayered communications path system provide resources necessary serving client request 
performance results performed suite experiments server test performance implications mediated versus direct access objects 
illustrates performance penalty incurred content routers mediate file read requests prototype 
plots throughput achieved client kbytes second versus load content router 
experiment load generated running processes continuously generated lookup read requests content router 
queries go intermediate content routers 
set trials client requests mediated content router including file reads 
set throughput case content router comparison label direct 
set trials content router provided client direct access server object access 
content routers provide access data returning symbolic links 
links interpreted version berkeley daemon pw 
mediated accesses naturally go content router 
data point represents average trials reads mbyte digital video data file 
information server running sgi 
content routers clients run sparc station ipx 
machines interconnected mbit ethernet 
figures compare average throughput kbyte standard nfs file access 
important observations derived data 
expected non mediating servers hamper system throughput 
second mediating routers degrade performance drastically especially load content router increases 
mediated access dramatic impact low loads implementation multithreaded read ahead 
optimized providing file service 
impact content router load inherent implementation forces clients mediated data access 
layers network resources consumed client greater likelihood client suffer query router induced performance degradation 
performance query processing acceptable 
number servers supported content router large expect order hundreds queries return sets servers perform quite 
performance sample routed queries table 
direct competing clients content router non mediating crs mediating crs system throughput mediating non mediating content routing system configurations table routed query performance performance measures include information server running heavily loaded microvax query mentioned machines 
identifies particular query number files matched query number servers query routed number results returned server time took list result set time includes time route compute query result set time took list result set second time server caches result set gamma time route queries servers compute result set 
note current implementation route queries parallel 
experience far believe query routing hierarchical collection distributed servers feasible 
demanding applications ones digital video achieve adequate throughput provided content routers mediate object accesses 
described data objects distributed information systems located accessed associative manner 
efficient scalable associative access distributed information systems involve restricted set relevant servers 
query search space simple queries enormous produce large result sets incurring high processing cost 
reason organized search space content labels describing servers attributes discriminatory power servers 
content label query routing particularly suitable navigating large space servers 
visible structure logical organization space implied content labels discovered scope initial query sufficiently narrowed refined result set efficiently computed 
predicates provide widely varying assistance formulation user queries iterative process 
discussed layered architecture content routers integrated existing distributed systems 
layered approach useful scaling administrative purposes organizing global object search space small manageable units easier browse 
architecture preserves autonomy individual servers propagate knowledge content provide need subordinate global organization scheme 
built prototype semantic file system nfs underlying distributed system protocol 
successfully system locate data objects servers laboratory 
demonstrating feasibility approach prototype shows performance allows users enjoy benefit bypassing layers objects interest located 
results experiments suggest content routing enables transparent search distributed information compromising access performance 
results date consistent thesis query routing content labels effective way locate access data objects distributed information system 
plan enhance prototype adding automatic content label generation selected attributes 
analysis statistics gathered information servers choosing highly discriminatory attribute values content routing 
plan examine methods exclusion inaccessible servers inevitably large scale distributed system 
servers treated special way may contain currently inaccessible objects interest 
area research exploration associative access locate replicated objects 
authors brian turbak comments drafts 
aal bob paul mark daniel 
internet gopher protocol distributed document search retrieval protocol 
university microcomputer workstation networks center spring 
revised spring 
bc daniel barbara chris clifton 
information brokers sharing knowledge heterogeneous distributed system 
technical report mitl tr matsushita information technology laboratory princeton nj october 
tim berners lee robert cailliau jean francois groff bernd 
world wide web information universe 
electronic networking 
cat vincent cate 
alex global filesystem 
usenix workshop file systems 
cci ccitt 
directory overview concepts models services 
recommendation 
peter danzig ahn john noll katia obraczka 
distributed indexing scalable mechanism distributed information retrieval 
technical report usc tr university southern california computer science department 
ed deutsch 
archie electronic directory service internet 
usenix association winter conference proceedings pages san francisco january 
david gifford pierre jouvelot mark sheldon james toole 
semantic file systems 
thirteenth acm symposium operating systems principles 
acm october 
available operating systems review volume number 
km brewster kahle art 
information system corporate users wide area information servers 
technical report tmc thinking machines april 
version 
mar richard marcus 
experimental comparison effectiveness computers humans search intermediaries 
journal american society information science november 
mar richard marcus 
advanced retrieval assistance gateway 
technical report lids mit laboratory information decision systems march 
nis ansi version 
national information standards organization bethesda maryland january 
second draft 
pet larry peterson 
profile naming service 
acm transactions computer systems november 
pw jan simon nick williams 
amd bsd automounter manual march 
documentation software revision alpha 
sa patricia simpson rafael alonso 
querying network autonomous databases 
technical report cs tr princeton university princeton nj january 
sch michael schwartz 
networked resource discovery project 
proceedings ifip xi world congress pages 
ifip august 
ste richard stein 
browsing terabytes wide area information servers open new frontier personal corporate information services 
byte pages may 
wcs david wood sean coleman michael schwartz 
system discovering network characteristics problems 
usenix association winter conference proceedings pages 

