data management peer peer computing vision philip bernstein fausto giunchiglia kementsietsidis john mylopoulos luciano serafini ilya 
motivate special database problems introduced peer peer computing propose local relational model lrm solve 
summarize formalization lrm architecture prototype implementation discuss open research questions 

peer peer computing consists open ended network distributed computational peers peer exchange data services set peers called acquaintances 
peers assumed fully autonomous choosing acquaintances 
assume global control form global registry global services global resource management global schema data repository 
systems napster gnutella popularized paradigm version distributed computing lying traditional distributed systems web 
rich services requires considerable overhead launch relatively static controlled architecture 
dynamic architecture little startup costs limited services 
falls offering evolving architecture peers come go choose deal enjoy traditional distributed services startup cost 
interested data management issues raised paradigm peer may data share peers 
simplicity assume peer database relational 
data residing different databases may semantic inter dependencies allow peers specify coordination formulas explain data peer relate data acquaintance 
example patient database family doctor pharmacy may want coordinate information particular patient prescriptions received dates prescriptions filled 
coordination may mean simple propagating updates prescription medication relations assumed exist databases 
addition query expressed respect database able relevant databases acquaintances acquaintances acquaintances 
accomplish expect data management system coordination formulas recursively decomposing query sub queries evaluated respect databases acquaintances 
coordination formulas may act soft constraints guide propagation updates 
addition peers need acquaintance initialization protocol peers exchange views respective databases agree levels coordination 
level coordination dynamic sense acquaintances may start little coordination strengthen time coordination formulas eventually abandon tasks interests change 
dynamic setting assume existence global schema databases network acquainted databases 
setting implies peers able integrate little human intervention 
need avoid protracted tasks skilled database designers required traditional distributed multi database systems 
introduces local relational model lrm data model specifically designed applications 
lrm assumes set data network consists local relational databases set acquaintances define network topology 
acquaintance link domain relations define translation rules data items coordination formulas define semantic dependencies databases 
proposed data model allows inconsistent databases supports semantic interoperability 
main objectives introduce lrm examples identify set open research questions design implementation 
section presents motivating scenario 
section microsoft microsoft way redmond wa 
microsoft com university trento povo trento italy 
fausto itc ilya science unitn university toronto toronto canada 
jm cs toronto edu itc irst povo trento italy 
serafini itc sketches formalization lrm 
section offers preliminary architecture lrm system relates past appear section 
motivating scenario consider example patient databases 
suppose toronto general hospital owns database schema patient name sex age record treatment date medication drug dose admission database identifies patients hospital id keeps track admissions patient information obtained external sources treatments medications administered hospital staff 
new patient admitted say hospital may want establish immediately acquaintance family doctor 
suppose view exported family doctor db say schema patient fname lname phone sex visit date purpose outcome prescription med dose quantity date event date description figuring patient record correspondences doing object identification achieved patient ontario health insurance 
initially acquaintance exactly coordination formula states patient record hospital patient patient record added relation expressed fn ln pn sex pr patient fn ln pn sex pr patient sex davis pr concat fn ln imports data existentially quantified variables instantiated concrete elements database 
amounts generating new inserting skolem constant undef age instantiated age patient generating name concatenating name fn name ln contained 
patient treated hospital time coordination formula set updates event relation treatment medication receives desc tid pid sex pr treatment tid desc pid patient sex davis pr event desc drug dose sd ed medication drug dose sd ed sex pr patient sex davis pr sd ed desc event desc desc concat drug dose acquaintance dropped patient hospital treatment 
similar lines patient pharmacy may want coordinate 
acquaintance initiated patient tells dr davis pharmacy uses 
established patient name phone identification 
pharmacy database say schema prescription dose repeats sales dose date amount want remain updated respect prescriptions fn ln pn med dose qt date sex pr prescription med dose qt date patient fn ln pn sex pr cn amount prescription cn pn med qt dose amount cn concat fn ln course acquaintance dropped patient tells doctor changed pharmacy 
suppose hospital information new patient needs find receiving medication 
hospital uses acquaintance interest group toronto say 
peer acquaintances toronto coordination formula allows access prescription information databases 
example assume consists single relation prescription name phone dose repeats coordination formula databases fn ln pn med dose qt date sex pr prescription med dose qt date patient fn ln pn sex pr name rep prescription name pn med dose rep name concat fn ln analogous formulas exist pharmacy acquaintance 
apart serving information brokers interest groups support mechanisms generating coordination formulas parameterized ones exported schema information pharmacy database 
basis formula query prescriptions patient name phone evaluated respect translated queries evaluated respect databases 
acquaintance hospital persistent mentioned earlier 
may evolve time depending pharmacy information available 
suppose patient question takes trip trento suffers skiing accident 
trento hospital database needs information patient 
transient acquaintance involves making patient record available updating event relation 

formal semantics lrm traditionally federated multi database systems treated extensions conventional databases 
unfortunately formalizations relational model don apply extensions multiple overlapping databases may inconsistent may different vocabularies 
launch search implementation solutions address scenario described previous section formalization lrm 
model theoretic semantics lrm defined terms relational spaces 
mathematical structures generalizing model theoretic semantics relational model defined reiter 
coordination databases relational space expressed terms coordination formulas describe dependencies set databases 
formulas generalize forms inter schema constraints defined literature 
relational spaces relational space database identified index database associated logical language li formalizes schema database abstractly li order language set relational symbols corresponding relations database functions symbols non empty set constants domi corresponding domain database instance language contains relational symbols patient visit constant symbol 
content database defined set order interpretations dbi language li domain domi 
interpretation dbi interprets constant symbol li relational symbol xn finite set tuples elements domi tuples relation emphasize lrm global model call dbi local database 
lrm notion global consistency set local databases 
retain notion local consistency 
local database locally consistent inconsistent state consistent inconsistent databases coexist single relational space 
instance local databases dba dbb dbc respectively complete incomplete inconsistent 
generally dbi complete dbi incomplete dbi inconsistent dbi 
relational space overlapping databases represent information common part world 
overlapping fact constant appears databases 
instance fact constant apple appears database describing computers describing italian agricultural products imply databases overlap 
overlapping due meaning constants entities denoted constants 
represent overlapping part local databases may global schema suitable mappings local database schema 
argued earlier feasible systems 
adopt localized solution overlap problem defined terms pair wise mappings elements domain database elements domain database specifically overlap databases represented relations called domain relations ij dom dom ji dom dom domain relation ij represents ability database import represent domain elements domain database cases domain relations symmetric instance rij represents currency exchange rounding function sampling function 
context domain relations need defined acquainted pairs peers 
definition relational space 
relational space pair db db set local databases function associates domain relation rij coordination relational spaces semantic inter dependencies local databases expressed declarative language independent languages supported local databases 
formulas language describe properties schemas contents local databases relational space 
language generalization interpretation constraints defined 
definition coordination formula 
set coordination formulas rf family relational languages li defined follows rf rf rf rf rf rf rf rf rf formula basic building blocks coordination formulas expressions form means true database 
connectives usual meaning quantifiers require consideration 
formula read elements domain domi true 
likewise read element domain domi true 
notice variable scope quantifier occur formula allowing quantification domains 
specifically allow scope domi formula quantify domain exploiting domain relations rij rji 
example 
coordination formula 
satisfied true database rij true database analogously formula 
true element domi rij true database complete formalization truth coordination formulas described 
coordination formulas different ways 
define constraints satisfied relational space 
instance formula 
states object database table corresponding object database table useful constraint want declare certain data available set databases declaring exactly 
far know proposals literature expressing inter database constraints uniformly represented terms coordination formulas 
coordination formulas express queries 
case coordination formula interpreted deductive rule derives new information information databases 
instance coordination formula allows derive database holds database represent query posed user database coordination formula body query 

definition query 
query family relational languages li coordination formula form coordination formula new ary predicate symbol li contains variables 
definition global answer query 
db relational space li global answer query form db set domi db intuitive reading formulas follows 
global answer query computed locally evaluating dbi atomic coordination formulas ik recursively composing mapping domain relations results connectives quantifiers compose coordination formula instance evaluate query separately evaluate databases respectively 
map results ih jh kh respectively obtaining sets domain dom compose query connectives obtaining global answer 

preliminary architecture lrm databases system resemble heterogeneous distributed databases called multi database systems tsimmis garlic information manifold 
systems user issues queries global schema system called mediator maps queries subqueries underlying data sources 
data source wrapper layer maps subqueries native query language 
database designer responsible creating global schema mappings define relationship data sources maintaining schema mappings data sources enter leave system schemas evolve 
level detail architecture changed earliest multi database prototypes years ago 
multi database systems assume peer nodes identical architectures consisting lrm layer running local data server dbms 
shown lrm layer modules user interface ui query management qm update management um wrapper 
ui allows user define queries receive results messages nodes control modules layer 
qm um responsible query update propagation 
manage domain relations coordination formulas coordination rules acquaintances interest groups 
wrapper provides translation layer qm um lis 
architecture lrm node peers communicate qm um xml messages 
inter module communication xml shown white arrows 
shaded arrow connects wrapper lis different communication language lis dependent sql 
strategies query update propagation encoded set coordination rules cases expressed eca event condition action rules 
coordination rules describe query update propagated 
single formula may result rules 
express parts lis views acquaintances describe update propagations 
instance consider formula 
reasonable coordination rule query propagation peer receive query occurs query submit query peer 
architecture merely version conventional multi databases layer needs address new problems opportunity research layer needs protocol establishing acquaintance dynamically 
protocol distributed system protocol discovering peer name establishing session peer sends schemas chooses export privileges 
acquaintance established formulas rules needed 
layer offer automated support generating coordination formulas schema matching 
automatically derive domain relations data mining rows relations key values matching non key columns meaning 
layer classical approaches query processing coordination formulas effectively views 
needs incorporate domain mapping logic offered lrm 
needs policy far propagate subqueries transitively chains connections arbitrarily long cyclic 
effective inter node coordination nodes able advertise data content giving name description keywords schema presumably directory service 
layer interprets information help users node create acquaintances form interest groups nodes similar content 
problem selecting materialized views placing particular nodes difficult scenario 

highlighted main requirements introduced databases distinguish kinds distributed databases 
mappings databases exclusively local global schema 
support proposed data model expressing mappings peers 
second set peers highly dynamic requiring automated solutions problems considered design time establishing configurations mappings 
requirements lead variety interesting hard research problems stretch today multi database solutions current limits 

carey haas schwarz arya cody fagin flickner niblack petkovic thomas ii williams wimmers heterogeneous multimedia information systems garlic approach 
ride dom 

catarci lenzerini 
representing interschema knowledge cooperative information systems 
international intelligent cooperative info 
sys 

ceri widom 
managing semantic heterogeneity production rules persistent queues 
proceedings th vldb pp 


chawathe garcia molina hammer ireland papakonstantinou ullman widom 
tsimmis project integration heterogeneous data sources 
th meeting information processing society japan pp 


gupta widom 
local verification global integrity constraints distributed databases 
proc 
acm sigmod conference pp 


halevy 
answering queries views survey 
vldb pp 


gribble halevy ives suciu 
databases peer peer 
webdb workshop databases web june 

levy anand rajaraman ordille 
querying heterogeneous information sources source descriptions 
proceedings vldb pp 


litwin mark roussopoulos 
interoperability multiple autonomous databases 
acm computing surveys 

valduriez 
principles distributed database systems 
prentice hall 

rahm bernstein 
survey approaches automatic schema matching 
vldb pp 


reiter 
logical reconstruction relational database theory 
conceptual modeling pp 

springer verlag 

serafini giunchiglia mylopoulos bernstein 
local relational model model proof theory 
technical report itc irst 

smith bernstein dayal goodman lin wong 
integrating heterogeneous distributed database systems 
proceedings national computer conference afips press pp 


ullman 
information integration logical views 
proceedings th international conference database theory icdt 


mediators architecture info systems 
ieee computer 

widom grefen 
integrity constraint checking federated databases 
proceedings ifcis international conference cooperative information systems pages 

