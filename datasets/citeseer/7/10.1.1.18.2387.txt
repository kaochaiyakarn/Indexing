representation issues neighborhood search evolutionary algorithms whitley rana heckendorn evolutionary algorithms general purpose search methods 
know search method better possible problems fact deal problem specific information involved choice problem representation search operators 
explore general properties representations relate neighborhood search methods 
particular looked expected number local optima neighborhood search operator averaged possible representations 
number local optima neighborhood search operator standard binary standard binary reflected gray codes developed explored measure problem complexity 
relate number local optima metric oe designed provide measure complexity respect simple genetic algorithm 
choosing representation vital component solving search problem 
choosing representation problem difficult choosing search algorithm problem 
wolpert macready free lunch nfl theorem proves search algorithm better possible discrete functions 
radcliffe surry extend notions cover idea representations equivalent behavior considered average possible functions 
understand results outline simple assumptions theorem 
assume optimization problem discrete describes combinatorial optimization problems really optimization problems solved computers computers finite precision 
second ignore fact resample points space 
free lunch result stated follows performance possible search algorithms genetic algorithms engineering computer science editor periaux winter fl john wiley sons whitley rana heckendorn exactly averaged possible functions 
abstractly represent algorithm ordering permutation points search space 
view search algorithms deterministic stochastic algorithms practice deterministic model describing stochastic algorithm search method coupled specific corresponding random seed 
particular problem fixed search space size algorithm just 
ordering points search space 
furthermore operational point view possible representations search space set 
orderings 
put way 
orderings represent possible functions constructed set points constitute search space 
isomorphic relationship possible search algorithms collection points possible functions set points possible representations set points 
note fix search algorithm permutations represent possible functions representations set points 
hand fix function representation permutations represents possible search algorithms set points 
vary search algorithms functions search algorithm searching set permutations performance search algorithms identical 
true discrete finite set points wish pick search algorithms possible discrete functions 
way viewing functions representations leads observations 
example get stuck local optimum don just transform remap representation search space point currently stuck longer local optimum 
local optimum representation local optimum arbitrary representation 
representation local optima local neighborhood search methods discrete function size compute expected number optima occur possible functions local search operator fixed neighborhood size compute probability local optimum remain local optimum arbitrary change representation 
shown local optima representing relatively solutions continue local optima high probability representations 
suppose points search space search operator explores points making move 
point considered local optimum evaluation better neighbors 
suppose points search space unique evaluations 
sort points create ranking evaluation function best point space worst point space 
ranking compute probability point ranked th position local optimum arbitrary representation search space 
probability formula representation issues search gamma gammai delta gamma gamma delta gamma proof point search space gamma gamma delta possible neighbors point 
point ranked position gamma gamma delta sets neighbors contain point higher evaluation point point ranked position local optimum representations function 
general case point position gamma gammai delta sets neighbors contain point higher evaluation point probability point position remains local optimum arbitrary representation gamma gammai delta gamma gamma delta expected number optima probabilities enable count expected number local optima occur function size formula computing expected number times particular point local optimum simply theta 
expected number optima set representations neighborhood size gammak theta 
want find average number local optima single representation instance divide yields gammak simple counting principles shown gammak gammak gamma gammai delta gamma gamma delta finite set discrete functions focus attention set functions represented bit strings 
restrict attention special set discretized functions domain integers gamma represented bit representation 
natural domain function parameters integers assume auxiliary mapping exists integer domain 
auxiliary mapping map points adjacent natural domain discretized function adjacent integers 
whitley rana heckendorn restrict attention functions range gamma 
discrete functions different ranges assume values natural range functions sorted ties broken arbitrary fashion 
starting map th element sorted natural range integer note functions range mapped range changing basins attraction number locations local optimal neighborhood search operator 
transformation produces functions processed identical fashion evolutionary algorithms selection method including tournament selection truncation selection 
gray binary representations commonly representations evolutionary algorithms bit representations standard binary standard binary reflected gray encodings 
fact gray codes 
gray code bit representation property adjacent integers adjacent neighbors bit neighborhood hypercube graph defined set bit strings length gray code maps hamiltonian circuit hypercube 
hamiltonian circuit hypercube form gray code assigning integers sequence vertices hamiltonian circuit 
fact start assignment arbitrary point circuit fact circuit represents gray codes simple shift operation moves integer arbitrary point hamiltonian circuit 
standard reflected gray code representation constructed standard binary representation integer shifting bit position right applying exclusive operator original string shifted string 
bit represent gray code 
example compute gray code bit strings follows binary gray conversion standard reflected gray performed matrix operation 
exists theta matrix gl maps string length binary reflected gray representation 
exists decoding matrix dl maps reflected gray back original representation 
note bit string inherently binary reflected gray representation 
produce mapping set integers set bit strings identify particular representation 
representation issues search matrices 
higher dimensions gl matrix continues bits diagonal upper minor diagonal dl bits diagonal upper triangle 
assuming bit column vector standard binary representation binary matrix multiplication matrix multiplication mod gl produces gray coding 
example 
assuming bit column vector standard reflected gray representation produces corresponding binary representation corresponding integer 
interesting property matrix reorderings columns matrix produce matrix gray transformation corresponding different hamiltonian circuit hypercube graph 
may 
different gray codes shifts hamiltonian circuit gray code 
may course redundancy count 
exact number possible gray representations open question 
empirically gray coding usually results better performance standard binary coding applying various forms genetic algorithms neighborhood search algorithm common test functions caruana schaffer mathias whitley 
long known gray coding removes hamming cliffs caruana schaffer 
hamming cliff corresponds pair numbers numeric integer space bit representations complementary 
bit space adjacent numeric space representations bit strings 
typically generating bit representation function exists mapping domain function set integers integers mapped bit strings 
hand sense preserve adjacency original numeric integer representation function bit representation 
graph right shows adjacency relationships numeric representation preserved gray space 
left see half adjacent edges numeric representations preserved binary space representations arbitrary length show induction whitley continues true half edges numeric representation preserved binary representation 
whitley rana heckendorn gray binary adjacency bit hamming space gray binary encodings 
nfl equivalence chains gray binary exists set equivalences gl dl matrices gamma gl dl gammak gl dl theta identity matrix 
simplicity denote dl bit space note delta equivalences possible construct refer chains functions 
recall finite set functions representing possible permutations points search space 
represent coding representation bit strings set points 
select function convert integers corresponding possible input parameter sets domain function standard binary strings 
function function chain 
binary strings representing encoded domain representation coding chain string evaluation evaluation string evaluation function input parameter set string binary representation parameters apply gray code transform strings generates new representation strings inherit evaluation means strings converted set integers representing set input parameters binary representation function 
evaluation associated string decoding strings binary strings generates new function gray code binary code continuing process function generate chain functions represented follows representation issues search function binary gamma gamma gamma gamma gamma gamma gray gamma gamma gamma gamma gamma gamma take strings function convert binary strings obtain representation gray strings matrix obtain representation 
assume matrix reflected gray code chains formed gray code transformation matrix 
apply gray twice gray bit strings obtain representation system evaluations associated strings representation carried forward binary gray codings just different mappings space functions corresponding space bit representations 
decode strings binary strings obtain function decode strings convert resulting strings binary integers obtain function representation bits set functions representations repeat functions representations chain 
dlog le note 
gray transform matrices applying times yields causing chain repeat 
multi parameter dimensional functions length chains maximum number bits code single parameter 
cycles yields integer implies parameter cycles exactly times cycle parameter 
free lunch result holds chain functions 
function chain gray binary representation chain representation chain binary code function gray code function follows general free lunch result holds gray binary representations function set functions decomposed sets chains free lunch holds chain 
gray beats binary example find differences gray representations binary representations partition set functions special subsets discard subset interested 
clearly subsets indicative notion problem complexity 
look functions local optima integer numeric defining neighborhood topology 
ask functions exactly local optima induces fewer local optima resulting sets bit representation gray binary 
possible free lunch theorem holds individual values examine question enumerated possible permutations values corresponds possible functions represented bits restrictions imposed table look functions minima look total optima whitley rana heckendorn gray binary functions minima minima course 
functions case 
free lunch tells number minima gray binary representations equal 
case total minima gray binary 
look individual function see representation induces fewer minima 
optima optima minima gray binary total table shows functions minima cases gray coded versions functions induce fewer minima binary cases binary induces fewer minima gray 
cases gray binary induce number minima 
gray fewer binary fewer optima optima ties higher dimensional functions enumeration quickly impossible 
easy prove functions defined bits gray induces fewer minima binary set functions single optimum proof see whitley rana 
problems encodings bits prove binary induces fewer minima worst case problems compared gray 
worst case mean problems minima search space points 
bit representations involved specifically table consider worse case functions optima 
tables clear strong bias gray binary encodings 
gray coding tightly coupled original numeric integer representation function 
side effect gray biased producing fewer local minima functions minima original numeric integer representation producing larger number minima functions large number minima original numeric integer representation function 
implies care number local minima functions fewer local minima numeric integer function representation average gray coding better representation subset representation issues search parameter rastrigin function rastrigin function encoded data points single dimension 
functions 
better defined terms inducing fewer optima corresponding bit representations 
fact common test problems fewer minima expected number possible functions representations local operators neighborhood size length bit representation 
assuming binary better gray worst case problems follows remove worst case problems consideration gray better binary remaining functions 
deal evidence support conjecture bit functions binary better gray functions exactly optima numeric integer representation follows gray better binary functions 
section empirically establish relationship number local optima problem difficulty simple genetic algorithm 
counting optima common test problems search space points neighborhood search operator neighborhood size common test problems minima expected number 
answer question small problems 
answer question test problems linear combination subproblems 
whitley rana heckendorn rastrigin function illustrated function 
gamma gamma cos delta gamma numeric space neighborhood size looking point side current point local minima dimension 
means possible local minima dimensional version function 
impose bit encoding function number locally optimal points occur change 
reflected gray coding locally optimal points rastrigin function 
optima numeric space standard binary encoding locally optimal points 
expected number local optima arbitrary function representation neighborhood search operator points 
extending values dimensional problem obtain gray versus numeric representation possible local optima standard binary 
analyzed common test functions 
function introduced schwefel 
gammax sin gamma local optima numeric integer representation local optima standard binary reflected gray code local optima standard binary representation 
griewangk function 
gamma cos gamma interesting function minima numeric integer representation 
case gray induces optima binary results optima 
general gray coding advantage number minima numeric integer representation relatively small binary advantage number minima large numeric integer representation 
griewangk function appears consistent general trend apply principle individual functions 
think say specific functions gray coding ensures number minima gray code equal number minima numeric representation 
expected number minima numeric representation neighborhood size function minima schwefel average possible functions composed points neighborhood size 
detailed consideration functions whitley 
representation analysis rana whitley 
representation issues search local optima measures number local optima search space related measures complexity especially notion correlated search spaces path length 
path length defined average distance point search space local optimum steepest ascent ascent local neighborhood search 
intuitive number local optima increase set local optima average smaller basins attraction average path length shorter 
functions optima correspondingly longer average path lengths 
connection metric measures degree correlation search space correlated fitness landscape direct 
assume compute correlation random walk search neighborhood 
correlate difference evaluations points search space distance points neighborhood operator 
stronger correlation generally translates smoothness paths random walk translates longer path length reaching local optimum 
course isn true 
construct function point local optimum strong trend constructed function points nearer similar evaluations 
possible functions reasonable expect functions higher correlation average fewer local optima 
ask local optima path length correlation evolutionary algorithms 
optima hyperplanes order better understand relationship number optima search space problem complexity genetic algorithm generated number test problems varying numbers local optima 
metric designed measure difficulty problem genetic algorithm terms hyperplane information 
long argued simple genetic algorithms defined holland goldberg obtain search power ability sample subsets strings space corresponding hyperplanes search space defined shared bit patterns known schema 
whitley mathias introduce oe metric measure consistency arbitrary ranking hyperplanes partition respect target string 
hyperplanes highest fitness consistently lead genetic algorithm focus particular subregion search space 
bit patterns inconsistent hyperplanes highest fitness providing conflicting information genetic algorithm sample 
heckendorn whitley rana provide characterization oe metric 
consistency hyperplane partition measured ranking hyperplanes partition measuring consistency ranking respect target string 
case global optimum target string 
measuring consistency possible partition obtain measure whitley rana heckendorn consistency function 
degree ranking order partition denoted containing hyperplanes defined follows oe pred pred gamma ranking function set hyperplanes note different ranking point search space target string pred expression returns expression true false 
match count function measures number bits match target string hyperplane fixed bit positions 
example 
thought inverse hamming distance function 
oe assume rotate search space exclusive locate target string see whitley 
denote oe oe 
resulting oe function largest value partition sort hyperplanes partition increasing results hyperplanes sorted increasing function larger value hyperplanes consistently ranked 
oe zero sort ranking function results hyperplanes sorted decreasing specific case ranking static average fitness strings hyperplanes say oe measures degree static ranking partition 
maximum possible oe value partition order computed oe max gamma gamma order notice oe max take arguments target string ranking function irrelevant computation maximum possible oe 
oe max allows oe normalized dividing count resulting measure partition 
oe oe oe max table presents example heckendorn whitley rana shows example computation oe different ranking functions partition bbb 
definition ranking functions specified values table 
table sorted greatest aid hand verification results bottom table 
notice yields maximum possible oe value misleading hyperplane information deception partition see whitley 
provides example computation oe 
sums formula oe examine possible ordered pairs 
take hyperplanes example 
evaluate product predicates pred pred representation issues search product pred pred 
predicates true product returns 
multiplied gamma giving value added sum 
terms similarly computed produce final calculation oe normalized oe max yield oe 
oe oe oe oe table computations oe example rankings 
section relate oe complexity functions varying numbers optima 
test functions results generated test functions varying numbers optima randomly picking set points minima set points maxima 
thought dimensional functions neighborhood size 
range functions corresponding output evaluations gamma 
clearly belong set minima gamma belong set maxima 
having picked sets minima maxima constraints points space placed function 
place remaining points space randomly subject change number minima space 
example point evaluation gamma maxima adjacent point gamma 
minima maxima chosen randomly subject constraints 
example points evaluation gamma gamma minima points evaluation maxima 
generated functions points map bit representation 
generated dimensional functions 
minima optima increments 
function points maximum whitley rana heckendorn optima counts neighborhood size optima counts gray binary vs numeric adjacency opts binary opts gray number optima minima gray binary 
integer neighborhood size bit neighborhood size 
number optima integer neighborhood size expected number optima averaged functions 
working subsets possible functions points expect gray codes advantage 
shows number optima results functions binary reflected gray standard binary encodings 
samples taken functions optima count 
seen encodings follow trend show increasing number minima bit hamming space representation number minima increases generated functions 
gray better sense consistently yields fewer minima binary subsets functions 
look relationship oe metric number optima numeric function dimension function neighborhood size 
specifically compare oe values generated functions number optima 
oe computed respect bit representation computed reflected gray encoding standard binary encoding 
number minima number original dimensional numeric functions 
binary encodings suggests appear relationship resulting oe value number optima search space 
reflected gray encoding suggests relationship oe number optima functions 
gray encoding functions fewer representation issues search optima count optima counts vs static phi phi binary variation oe metric binary problem encoding function number optima integer neighborhood representation 
binary coding clear trend emerges 
results averaged sample functions optima count 
optima higher oe value suggests organized terms providing consistent hyperplane information 
functions fewer minima easier simple genetic algorithm process 
number optima increase oe value decreases indicating conflict various hyperplane competitions representations difficult genetic algorithm process 
tangible evidence suggest relationship number optima numeric integer representation function structure function expressed terms hyperplane information 
results suggest relationship holds gray encoding necessarily hold binary encoding 
take investigation step ran search algorithms specific functions different numbers optima shown table 
particular ran goldberg simple genetic algorithm population size crossover rate mutation rate 
tournament selection place fitness proportionate selection 
elitism best solution carried forward generation 
davis random bit climber bit neighbor local search tests neighbors flipping individual bits whitley rana heckendorn optima count optima counts vs static phi phi gray variation oe metric gray coding function number optima integer neighborhood representation 
gray coding phi decreases number minima increase 
results averaged sample functions optima count 
suggests functions fewer optima easier solve functions optima gray representation 
representation issues search opt count sga rbc gray oe solution 
evals solution 
evals res table results sample functions varying number local optima numeric space 
solution average solution number solved evals average number evaluations solved problems res number restarts rbc 
random order determined random permutation takes available improving move 
number optima measured numeric representation bit representation generated reflected gray coding 
actual difficulty functions depends great deal specific details bit representation results 
generate larger function concatenate copies function sum resulting evaluations 
course results separable functions aware limitations separable test functions whitley mathias rana 
allow control number optima generating larger test problems 
gives way compute oe individual primitive subfunctions functions subfunctions enumerable order compute oe 
oe values compute measure interactions variables case problem summation multiple copies original functions introduce additional higher order hyperplane interactions 
table shows number optima dimensional numeric integer representation number optima gray encoding 
oe value associated gray encoding function shown 
possible partitions search space bit function gamma oe value range 
fully deceptive function whitley hyperplane highest average fitness partition leads away global optimum function oe fully deceptive 
function maximum possible oe deception 
high oe value indicate function easier solve simple genetic algorithm 
note subfunction ranges values gamma whitley rana heckendorn test function dimensional ranges test functions comparable 
averages calculated runs function 
results shown simple genetic algorithm random bit climbing 
expectation sga sensitive oe metric rbc sensitive number optima search space 
oe metric appears relatively predictor performance simple genetic algorithm correlation oe value average solution 
words high oe values appear predictor low average solution 
sign correlation really isn important changing problems minimization maximization flip sign correlation values 
computed correlation rbc average solution oe correlation 
correlation behavior sga oe clearly stronger correlation suggests relationship oe behavior rbc 
underscores fact solution quality sga rbc 
exception function minima sga solves time rbc fails solve 
oe value indicates function optima easiest function set function optima difficult 
functions minima gray space algorithms difficulty solving function optima 
oe value lowest functions optima appear hardest functions sga rbc 
general trend data number optima increases numeric dimensional version function number optima generally increases gray representation 
addition set problems trend problems difficult solve number local optima increase 
discussion theoretically search algorithm different single answer constitutes hard search problem 
hard algorithm may easy method 
hand search algorithms refined relatively small set common test problems reasonable assume search algorithms developed tuned solve relatively small subclass functions drawn space possible functions 
focuses number local optima measure problem complexity definition somewhat algorithm independent 
evidence suggest computational behavior genetic algorithm sensitive number local optima 
certainly construct problems local optima difficult 
averaging sets functions having local optima generally appears contribute problem complexity 
caruana schaffer 
representation hidden bias gray vs binary coding genetic algorithms 
proceedings fifth international conference machine learning 
morgan kaufmann 
davis 
bit climbing representational bias test suite design 
booker belew eds proc 
th int 
conf 
gas 
morgan kauffman 
goldberg 
simple genetic algorithms minimal deceptive problem 
genetic algorithms simulated annealing pp 
davis ed pitman 
goldberg 
genetic algorithms search optimization machine learning 
reading ma addison wesley 
heckendorn whitley rana 

hyperplane ranking simple genetic algorithm 
foundations genetic algorithms 
morgan kaufmann 
holland 
adaptation natural artificial systems 
michigan university press 
edition mit press 
mathias whitley 
changing representations search comparative study delta coding 
journal evolutionary computation 
mathias whitley 
transforming search space gray coding 
schaffer ed ieee int 
conf 
evolutionary computation 
ieee service center 
radcliffe surry 
fundamental limitations search algorithms evolutionary computing perspective 
lecture notes computer science vol van leeuwen ed springer verlag 
rana whitley 

bit representations twist 
international conference genetic algorithms 
morgan kaufmann whitley rana 
representation search genetic algorithms 
proc 
national conf 
artificial intelligence aaai 
whitley mathias rana 

evaluating evolutionary algorithms 
artificial intelligence 
whitley mathias rana 

building better test problems 
international conference genetic algorithms 
morgan kaufmann whitley 
genetic algorithm tutorial 
journal statistics computing 
vol 
pp 
whitley mathias 

hyperplane ranking genetic search 
international conference genetic algorithms 
morgan kaufmann whitley 
fundamental principle deception genetic search 
foundations genetic algorithms rawlins ed pp morgan kaufmann 
wolpert macready 
free lunch theorems search 
technical report sfi tr santa fe institute 
genetic algorithms engineering computer science editor periaux winter fl john wiley sons 
