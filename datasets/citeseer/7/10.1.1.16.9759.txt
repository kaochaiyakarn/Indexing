mac technical memorandum super exponential complexity presburger arithmetic michael jo fischer michael rabin february research supported part national science foundation research gj part artificial intelligence laboratory 
research program supported advanced research projects agency department defense monitored onr contract 
massachusetts institute technology project mac cambridge massachusetts super exponential complexity presburger arithmetic michael fischer massachusetts institute technology cambridge massachusetts michael rabin hebrew university jerusalem israel lower bounds established computational complexity decision problem inherent lengths proofs classical decidable theories logic order theory real numbers addition presburger arithmetic order theory addition natural numbers 
fixed constant non deterministic decision procedure determining truth sentences real addition sufficiently large sentence length decision procedure runs cn steps 
case presburger arithmetic corresponding bound cn 
bounds apply minimal lengths proofs complete axiomatization axioms easily recognized 
research supported part national science foundation research gj project mac part artificial intelligence laboratory research program sponsored advanced research projects agency department defense office naval research contract number 
preparation manuscript supported hebrew university university toronto 

main theorems 
results obtained fall computational complexity decision problem certain theories addition 
particular prove results 
set formulas order functional predicate calculus written just 
example formula sentence essential shall permit individual constants writing formulas assume finite alphabet expressing formulas variable general single atomic symbol encoded sequence basic symbols 
structure consisting set 
natural numbers operation addition 
th order theory set sentences true example vx th 
presburger shown th decidable 
brevity sake shall call th presburger arithmetic denote pa theorem 
exists constant decision procedure algorithm pa exists integer exists sentence length requires cn computational steps decide pa previous theorem applies case non deterministic algorithms 
implies algorithms require super exponential number computational steps proofs true statements concerning addition natural numbers super exponentially long 
ax system axioms language extension sentence provable ax ax pa ax satisfy condition decide sentence ax axiom requires number computational steps polynomial length ifi theorem 
exists constant axiomatization ax presburger arithmetic properties exists integer exists sentence pa cn shortest proof axioms ax longer length proof mean number symbols 
slight modifications theorem holds consistent system ax axioms language notion integer operation integers definable appropriate formulas interpretation sentences pa provable ax 
ordinary axioms zf set theory property 
result concerning super exponential length proof applies general case sentences encodings sentences pa interpretation sentences express elementary properties addition natural numbers 
previous results necessarily involve cut point ax super exponential length computation proofs sets 
significant close examination proofs reveals ax 
computations proofs long quite early game 
theory pa addition natural numbers simplest basic imaginable mathematical theories 
theory addition multiplication natural numbers pa decidable 
decision procedure pa inherently difficult 
consider structure real numbers addition 
theory th language decidable 
fact find decision procedure th simpler procedure pa mainly divisible group torsion 
holds 
theorem 
exists constant theory th addition real numbers statement theorem holds lower bound dn 
similarly length proofs sentences th 
theorem 
exists constant tion ax th statement theorem holds lower bound dn 
corollary 
theory addition multiplication reals tarski algebra exponentially complex sense theorems 
result obtained independently strassen 
ferrante rackoff describe decision procedures th pa run deterministic space cn dn deterministic dn time cn respectively certain constants substantial improvement lower bounds settle general open automata theoretic questions relation time space 
example lower bound time decision problem th give example problem doable space cn time bounded polynomial variations methods employed proofs theorems lead complexity results decidable theories 
multiplication natural numbers finite abelian groups classes groups 
results stated section full subsequent 
fact decision proof procedures simple theories exponentially complex significance program theorem proving machine hand general issue mathematics hand 

algorithms 
intend prove results concerning complexity algorithms say notion algorithm 
methods proof results strong apply reasonable class algo rithms computing machines 
sake definiteness shall assume algorithms programs turing machines alphabet 
proceed give informal description algorithms 
machine tape assumed way infinite extending right initial left square 
time progress computation finite number tape squares contain 
instruction form print move go il 
print move go jl 

jl natural numbers called instruction numbers move right move left respectively 
possibility going alternative instructions embodies non deterministic character algorithms 
type instruction 
instructions abbreviated dropping verbal parts 
example instruction 
program sequence 
instructions 
definiteness sake assume instruction number instruction 
furthermore assumed coded binary alphabet way serves word indicating binary word input word 
describe possible computations algorithm assume placed leftmost positions machine tape scanning head positioned leftmost square tape 
computation starts instruction 
halting computation sequence 
instructions step motion scanning head printing scanned square transfer instruction io current instruction zp length definition clear truly non deterministic program may possible computations input 
method complexity proofs 
having settled definite notion algorithm shall describe general method establishing lower bounds theories addition formalized develop methods proof fullest generality utilize fact deal natural real numbers proofs readily understandable concrete form 
refinements generalizations needed theories addition introduced subsequent 
theorem 
functions assume complete theory exists polynomial constant program binary word exists sentence fal properties 
fal halting computation satisfies 

fal turing machine calculable time 
recall objects binary words denotes length 
conditions exists constant decision algorithm exists number exists sentence compu tation deciding takes cn steps 
furthermore 
proof 
exists number dm 
non deterministic decision algorithm construct new algorithm follows 
care behaves input word program 
program starts constructing sentence fx program switches works input stops determines halts cases halt 
program input halts program halt input fewer steps 
note possibly padding vant instructions may assume ial independent denote binary word sentence true true false halt truth implies halt input steps contradiction 
true halts truth implies halting computation longer zl 
dm 
number steps takes halting computation decide definition fact fewer steps required find follows zz halting computation program requiring fewer steps 
truth 
dm cn 
take 
dm 
fact result holds possibly smaller constant obtained padding irrelevant instructions padding resulting prefixing appropriate length xjl ijl 
details left reader 
utilizing theorem need method constructing sentences fal properties 
method provided theorem 
additive structure operation ordinary addition 
functions assume th theory addition formalized language exists binary word exist formulas sn properties 
ii isn true true exactly 
iii codes binary sequences length binary sequence exists sn false sequence denotes st element 
iv hw true symbols sequence coded sense iii form wo sn jn hw turing machine calculable polynomial number steps 
formulas formula properties fal constructed satisfies theorem 
proof 
shall describe sequences length possible halting computations length program input 
computation 
assume instructions notational conventions computation starts instruction instruction 
adopt convention instruction scanning head instruction tape contents stay stationary unchanged subsequent time instants 
scanning head moves squares initial left square tape 
assume turing machine attempts shift head left tape 
progress computation input described instantaneous descriptions computation manner 
left symbols tape time 
string wf codes relevant information concerning tape contents computation iwi trace motion scanning head sequence instructions 
pj qj computation define uj pj qj pj distance time scanning head start square 
recall instruction th number instruction executed im 
iui 
instruction 
put uf 
fact pair 
iwi iui describes halting computation equivalent number statements say roughly symbols initial configuration transformation block symbols block instruction contains number halting instruction 
precisely codes halting computation length say 
similarly instruction tape symbol combinations 
exactly holds 
tm 
assumption satisfies proved induction follows wj uj application instruction io number appears 
wf halting instantaneous description 
existence pair 
iwi tui satisfies necessary sufficient condition existence halting computation 
conditions provide means making statements arbitrary sequences length integers integer formulas size 
ordinary ordering restricted integers size expressed length formula 
existence satisfying expressed desired properties 
express sentence fal 
binary notation words equal length ikl 
sn single element exists codes elements code sentence start quantifiers relativization xx 
vz jn 
codes sequence xl code sequence clauses 
express corresponding conditions 
example hu 
xp sn xl 
sn xp sn 
reader supply details construction remaining expressions verify altogether fal formed satisfies theorem 
proof theorem real addition 
start showing theory th real addition exist formulas postulated theorem proving theorem 
results section play role proof pa formula consider conjunction yl readily seen vx vy yl 
note igi inde pendent 
similar rewriting exists formulas variables conjunctions instances device special case general theorem due fischer meyer 
discovered independently people including strassen 
theorem 
exists constant formula real numbers tze time polynomial proof 
construction inductive define ix ix 
get mk observing exist xl 
decomposition xy xl 
mk equivalent xl mk mk mk mk mk 
strictly speaking triple sum written chain sums variables shall 
mkl 
device preceding theorem occurrences replaced single occurrence yield mk 
appropriate 

assume chosen large im 
bound hold necessary show number distinct variable names grow encode variables requires average string length log 
fact different variable names sufficient express new variables introduced constructing mk need distinct free variables mk difficulty arises coincide variables bound inside closer look construction mk shows new variables introduced distinct free variables mk giving total distinct names needed 
corollary 
formula true real number natural numbers write binary notation 

function obtain element theorem 
exists formula pow integers proof 
construct induction sequence ek formulas property integers true built ek 
case xn 
obtain ek decomposition integer yx yx 
expressed ek write product yx formula ek 
way write formula ek 
usual device contracting conjunction instances occurrence see ll bound length bounded number variable names needed 
recalling definition ek see desired properties 
theorem 
exists formula sn true integers st digit counting low order binary representation 
formula satisfies conditions theorem proof 
integers appropriate ranges easily expressible formulas size 
recall integers satisfy expressible formula length 
exists integer divides fact easily expressible formula sn pow 
formulas properties listed theorem exist immediate 
finish proof theorem need 
theorem 
binary word exists formula true integer tions theorem 
formula satisfies condi proof 
define binary words induction formulas follows 
kl ku ku ku 
clearly kw true considered sequence satisfies formulas write formula formally expressing statement kw proved th existence formulas jn satisfy conditions theorem completes proof theorem 
proof theorem lengths proofs real addition 
show proofs exponentially long 
easy consequence theorem 
ax consistent system axioms complete th sentence th provable ax ax 
furthermore exists algorithm decides polynomial time igi sen tence ax 
constant theorem 
polynomial exists constant construct non deterministic algorithm th follows 
sentence writes non deterministically binary sequence checks proof ax proof ax 
computation halts possibilities occurs 
assumptions ax check polynomial number steps ipi 
computation halts requires ipi ipi ipi steps 
true sentence proof ipi computation length dn cn sufficiently large contradiction 

proof theorems presburger arithmetic 
proof theorem follows closely lines proof theorem utilizes previous results 
particular note theorems apply stand proofs pa note order definable pa 
section theorem 
exists function exists formula prodn properties 
integers true prod exists constant formula prod turing machine constructible time polynomial proof 
shall prime number theorem says number primes smaller asymptotically equal bigger log sufficiently large number primes runs primes formula mn write formulas pn length meanings 
res denote residue remainder divided pn formula written mn 
recall mn holds yq formula pn simply mn mn 
formally saying smallest integer divisible primes 
prod true implies xy mod mn relation expressed formula prod desired properties 
exponentiation defined just proof theorem prodn mn obtain sequence integers formulas true ab 
having multiplication exponentiation length exactly manner section 
com proof theorem appealing theorem 
proof theorem follows exactly lines proof theorem section 
results 
techniques proving lower bounds logical theories may extended number directions yield results 
outline proof full subsequent 
theorem 
class additive structures binary associative operation th set sentences valid structure assume property structure element elements 
distinct 
statement theorem holds th lower bound dn theorem immediate corollary result class just structure classes result applies complex numbers addition 
finite cyclic groups 
rings characteristic 
finite abelian groups 
natural numbers multiplication 
proof theorem extends ideas section 
element representation integer selected existential quantification 
special properties certain theories permit obtain larger lower bounds decision problem 
example get lower bound cn theory finite groups 
obtained encoding integers formulas length just theorem representing sequence integer structure encode sequence 
finite abelian group 
element sequence encoded contains element order pi pi st prime 
necessity primes indices integers considerably complicates analog theorem 
example get larger bounds theory multiplication natural numbers mult 
mult hard pa immediate powers multiplication isomorphic property power expressed mult assuming constant arbitrary prime 
fact cn bound increased exponential encoding associates sequence positive integer qi divides qi st prime fixed arbitrary ordering primes 
forced primes indices analog theorem considerably complicated 
authors gratefully acknowledge helpful ideas suggestions meyer rackoff solovay strassen lead incorporated 
ferrante rackoff decision procedure order theory real addition order project mac technical memorandum cambridge mass 
may pp 
presburger ber die eines systems der zahlen die addition als operation comptes rendus du des des pays slaves warsaw pp 

tarski assistance mckinsey decision method elementary algebra geometry nd ed university california press berkeley los angeles 
data 
report nos gj 
accession 
sheet bi 
title 
report date issued february super exponential complexity presburger arithmetic author 
performing organization rept 
michael fischer michael rabin 
mac tm 

pcr organization name address 
project task unit 
project mac institute technology technology square cambridge massachusetts 
sponsoring organization name address 
type report period covered interim office naval research associate program director scientific report department navy office computing activities information systems program national science foundation 
arlington va washington 
supplementary notes 
abstracts lower bounds established computational complexity decision problem inherent lengths proofs classical decidable theories logic order theory real numbers addition presburger arithmetic order theory natural numbers 
fixed constant non deterministic decision procedure determining truth sentences real addition sufficiently large sentence length decision procedure runs cn cn case presburger arithmetic corresponding bound bounds apply minimal lengths proofs complete axiomatization axioms easily recognized 

key words document analysis 

descriptors 
identifiers open terms 
field group 
availability statement 
security class 
pages report un 
ied unlimited distribution 
security 
price write project mac publications page form may bt dc 
