system design constraint adaptation differential evolution rainer storn tr november simple optimization procedure constraint problems works objective function described 
absence objective function problem formulation particularly simple 
new method lends parallel computation suited tasks family solutions required trade situations dealt design center 
international computer science institute center street berkeley ca suite fax 
mail storn icsi berkeley edu 
leave siemens ag sn ring muenchen germany 
fax email rainer storn siemens de 

design technical system usually associated process properly choosing system parameters technical system meets specifications 
parameter choosing process regarded optimization goal minimize error function 
error function cost function measure extent specifications violated 
take example task choosing real continuous parameters function fits tolerance scheme depicted fig 


fig 
meet requirement avoid grey shaded areas 
extent violates requirements measured errors di 
taken example equidistant abscissa values 
goal function stay apart shaded areas run nondifferentiable constraint functions 
kind design problem shows electronic filter theory transfer function lowpass filter ought low frequencies input signal pass high frequencies shall sufficiently 
application functions fit tolerance scheme optimal control theory trajectory vehicle stay certain limits vehicle doesn collide surrounding obstacles 
standard way solve general problem fitting arbitrary function tolerance scheme objective function minimization leads appropriate choice function parameters 
example objective function ist depicted fig 

objective function di 
surface plot shown fig 

minimization yield parameters stays prescribed limits problem solution 
case zero 
minimization renders solution best squared error criterion 
course objective functions possible depending application appropriate 
fig 
objective function problem fig 
eqs 

finding pertinent objective function crucial design process gets increasingly complicated multiple objectives pursued 
case different objectives weighted 
finding proper weights problem 
goal find called design center 
problem appears example electronic circuit design single electronic components resistors capacitors mos transistor gate widths represent parameters subject certain jitter due imprecisions manufacturing process components 
goal design centering choose parameters maximum jitter allowed production yield maximized 
design problem heavily constraint especially constraints nonlinear 
objective function approaches incorporate constraints weighted penalty terms pose additional difficulties designers :10.1.1.1.9696
design approach objective function inappropriate family solutions required 
trade situations system designers want options choose 
objective function approach generally yields solution 

constraint adaptation alternative approach design objective functions constraint adaptation illustrated fig 

devising objective function specifications design problem example relaxed start design process 
done way function current choice parameters fits relaxed tolerance scheme 
indicated fig 
parameter set corresponding family functions satisfy relaxed tolerance scheme 
specifications property domain represented tolerance scheme correspond called region acceptability roa parameter domain parameter set lies roa corresponding function meets specifications 
lies outside hg hg fig 
relaxed tolerance scheme property domain corresponding region acceptability roa parameter domain 
specifications violated 
goal find parameter sets lie rim roa truly inside roa 
shrinking roa goes tightening specifications 
design process performed continuously shrinking roa relaxed specifications tightened original ones 
specifications modeled constraints may constraints 
constraints satisfy certain values design task successful 
may constraints improved best effort basis 
design techniques constraint adaptation quite time especially circuit design community 

basic idea start nominal parameter set described parameter vector specifications relaxed just endpoint lying rim roa 
situation illustrated fig 

roa generally known advance region acceptability estimated 
estimation done generating cloud points nominal vector usually multi variate normal distribution indicated fig 

point requires system question analyzed checked parameter vector lies inside outside current roa 
parameter vectors lie inside roa hits taken consideration 
hits discarded 
mean value hits taken serve new nominal vector 
eventually roa correspondingly relaxed specifications tightened new nominal vector lies rim new roa 
modifications improvements procedure problems inherent strategy described far mean value inappropriate choice new nominal vector lies outside roa 
easily happen roa concave consists disjunct islands 
roa splits disjunct islands design method danger getting trapped islands 
happen islands vanish successful design process islands remaining provide solution original problem 
vector gets trapped island bound vanish design process 
mean value hits nominal vector fig 
basic strategy conventional constraint adaptation procedure generate cloud points nominal vector compute new nominal vector mean value points inside current roa 
difficult choose standard deviations multivariate gaussian distribution 
strategies fight standard deviations small 
number quadrants cloud points potentially cover number parameters 
number quadrants increases exponentially dimension parameter space requiring large number points cloud increase chance hits generated 

constraint adaptation differential evolution cade new variant constraint adaptation differential evolution de provides solution problems :10.1.1.1.9696:10.1.1.1.9696
problem inherent statistical design methods limits problem size tackled 
de powerful robust statistical method objective function minimization appeals things absence predefined probability density function pdf 
way nonexistent 
de completely parallel method doesn single nominal vector uses population equally important vectors 
cade combines ideas constraint adaptation de versatile design method described 
cade uses np parameter vectors 
np generation np constant entire design process 
start procedure generation population vectors usually chosen randomly 
rule assume uniform probability distribution random decisions stated 
specifications system relaxed just np vectors lie inside roa 
note realizability constraints geometrical constraints maximum component values integrated circuit design easily incorporated formulation 
generation new vectors generated 
np np integer mutually different real 
integers chosen randomly different running index real constant factor controls amplification differential variation usually takes values 
fig 
shows example vectors play part vector generation process 
order increase diversity new parameter vectors crossover introduced example depicted fig 

variants crossover form vector di ji ji ji acute brackets denote modulo function modulus starting index randomly chosen integer interval 
integer drawn interval probability pr cr 
cr called crossover constant taken interval constitutes control variable design process 
random decisions anew newly generated vector lies roa new population member lies outside roa vector generation process repeated nt times 
lies outside roa old vector checked generations reused 
vector age ng generations set survived ng generations vector die age set arbitrary vector current generation np integer 
fig 
graphical illustration vector generation process 
parameter vector containing parameters ji 
fig 
illustration crossover process 
new collection vectors 
np roa corresponding specifications system designed tightened vectors lie inside new roa lies rim new roa 
vector rim reproduce generation offspring lies rim current roa 
true vectors lie inside roa 
probability roa shrinks generation high shrinkage rate low 
design process described repeated design goals met 
goal find just parameter set meets original specifications design procedure stopped soon member vector population meets requirements 
corresponds situation particular vector question lies rim roa defines original specifications 
case trade situations design centering tasks design procedure stops population members fulfill specifications 
feasibility design guaranteed restrictions total computing time design procedure stopped certain number generations 
cade lends perfectly parallel computation increasingly important expensive single sytem evaluation gets 
circuit design system evaluation done spice simulation require significant amount computer time 
properties cade worth elaborating 
uniform random number generator supplies pseudo random numbers interval specially shaped pdf required difficulty adapting standard deviations multivariate pdf generation doesn exist 
control variables cr chosen entire design process taken defined intervals respectively 
aside shall mentioned interval extended additional benefits observed experiments performed 
important feature cade concerns aging vectors 
empirical evidence revealed aging vital design process happen fairly roa splits disjunct islands 
fig 
shows example split design problem stated fig 

fig 
example split roa occurs design problem stated fig 

settings cade np cr nt ng 
aging introduced vector survive entire design process island vanish design process successful henceforth induce stagnation 
simple example fig 
empirically design converged fastest vector allowed survive ng generation 
interesting property cade fact np parameter vectors tend diverge occupy voluminous part roa 
refer property divergence pooling 
line thought shall illustrate property 
consider cloud points inside roa indicated fig 

vectors reproduce cade scheme new population vectors stays hull cloud current population 
cloud points diverges mean distance points increases yielding larger deviations cade step 
argument holds generation 
factor restricts divergence cloud roa vectors point outside roa don constitute valid members population 
chance reproduce highest voluminous portion roa vector population members tend inhabit region 
vectors reside area running higher risk age 
fig 
shows divergence pooling property cade fixed roa 
fig 
vector population reproduces cade offsprings kept passing hull current cloud points 
leads divergence property 
fig 
illustration divergence pooling vector population 
population started np population members close origin 
control variables cr nt ng 
divergence property vector population important cade design process helps estimate roa wide region local area 
design process pooling effect ideally suited estimating design center 
design center estimated computing mean value population members 
divergence property drawbacks impedes convergence 
number np population vectors influences convergence 
small number np leads low number system evaluations reduces chance offsprings close rim roa 
low numbers np yield worse estimation roa decrease chance finding desired solution 

design centering sc filter switched capacitor sc filters modern replacement resistor capacitor rc filters better suited integration silicon chip 
due fact transfer function sc filters mainly dependent capacitor ratios insensitive geometrical errors integration process rc time constants rc filters 
basic design procedures sc filters rc filters essentially integration process brings problems parasitic capacitances alter transfer function 
cade suited redesign sc filter suffering parasitic capacitances demonstrated 
example pcm lowpass shown fig 

fig 
block diagram pcm lowpass filter 
transfer function sc pcm lowpass fig 
written vout vin tan 
frequency sampling frequency 
choose khz khz 
analog rc lowpass prefilter get 
derived partial transfer functions may written 
choose parameter values magnitude represented graph fig 

frequency hz pcm lowpass fig 
sc pcm lowpass parasitic capacitances 
design procedure fits function tolerance scheme upper constraints frequencies hz lower constraints frequencies hz 
parasitic capacitances taken account shown simplifying assumptions transfer functions change 
constants represent parasitic effects 
assume integration process scrutiny characterized parameter values changed parasitic influence changes fig 
clearly shows tolerance scheme violated 
frequency hz pcm lowpass fig 
considering parasitic capacitances redesign 
order redesign parameters transfer function satisfies tolerance scheme nonlinear design procedure may 
center design parameters may jitter maximally nominal value approach cade investigates roa required 
example steering variables np cr nt ng chosen 
initial population set randomly perturbing original parameter values maximum deviation 
evaluations parameter values emerged resulting magnitude plot fig 
shows clearly design fits tolerance scheme 
frequency hz pcm lowpass fig 
considering parasitic capacitances redesigned parameters 
sc filter example demonstrates usability cade crucial points addressed parameter values change cade keeps running corresponds non settled mean value 
comes surprise np population members represent points sample roa dimensions 
consequently population members get mean value eventually stabilizes 
population members lead increased running time function evaluations performed 
addition shrinkage relaxed roa original size slowed shrinkage takes weakest population member account 
population members chance increased members lie close rim roa reduce shrinkage rate 
mentioned design centering statistical evaluation mean vector assumption roa consists island best convex 
assumption true specific application 
research go design centering process cade learn cade mechanisms improve performance 

storn price differential evolution simple efficient adaptive scheme global optimization continuous spaces technical report tr icsi :10.1.1.1.9696
storn constrained optimization dr dobb journal may pp 

optimization circuits large number parameters archiv fuer 
und vol 
issue pp 

brayton sangiovanni vincentelli survey optimization techniques integrated circuit design proc 
ieee pp 

eckstein design centering improved monte carlo analysis region acceptability proc 
iscas san jose pp 

optimization circuits combination deterministic statistical search proc 
iscas 
storn differential evolution design iir filter requirements magnitude group delay ieee int 
conf 
evol 
comp icec pp 

storn price minimizing real functions icec contest differential evolution ieee int 
conf 
evol 
comp icec pp 

storn usage differential evolution function optimization berkeley pp 

price differential evolution fast simple numerical optimizer berkeley pp 

storn und einer mit am institut und der univ stuttgart 
