impulse simulation rigid bodies introduce new approach rigid body dynamic simulation called impulse simulation 
method suited physical systems large numbers collisions contact modes change frequently 
types contact colliding rolling sliding resting modeled series collision impulses objects contact method simpler faster constraint simulation 
implemented impulse simulator currently achieve interactive simulation times real time simulation reach 
addition simulator produced physically accurate results qualitative quantitative experiments 
giving overview impulse dynamic simulation discuss collision detection collision response context results experiments 
foremost requirement dynamic simulator physical accuracy 
simulation take place physical model utility directly related mimics model 
second important requirement computational ciency 
applications electronic prototyping bene interactive simulation virtual reality demand real time speeds 
discusses new approach dynamic simulation called impulse simulation founded twin goals physical accuracy computational ciency 
initial results impulse simulator look promising speed accuracy 
give overview impulse approach discuss collision detection resolution results experiments 
mirtich cs berkeley edu department computer science soda hall university california berkeley ca 
supported part nsf fd 
jfc cs berkeley edu department computer science soda hall university california berkeley ca 
supported part nsf fd 
brian mirtich john canny university california berkeley related moore wilhelms give earliest treatments fundamental problems dynamic simulation collision detection collision response 
hahn pioneered dynamic simulation modeling sliding rolling contacts impact equations 
precursor method extend applicability impulse dynamics resting contacts model multiple objects contact impulse trains 
early approaches su ered ine cient collision detection unrealistic assumptions concerning impact dynamics nite friction contact point 
cremer stewart describe newton probably advanced general purpose dynamic simulator today 
newton forte formulation simulation constraint dynamics linked rigid bodies contact modeling fairly simplistic 
bara studied multiple rigid bodies contact shown computing contact forces presence friction np hard :10.1.1.163.5683
summary area appears 
full treatments frictional collisions 
considered authority subject keller gives excellent treatment frictional collisions 
analysis extremely similar bhatt independently derived key equation integration relative contact velocities impact 
give classi cation frictional collisions ow patterns tangential contact velocity 
wang mason studied dimensional impact dynamics robotic applications approach 
number researchers investigated problems paradigms dynamic simulation physical modeling 
impulse method di cult aspects dynamic simulation dealing interactions bodies contact 
done area falls category constraint methods 
example illustrate approach 
consider ball rolling table top 
normal force table exerts ball constraint force ball enforces non penetration constraint 
lagrangian constraint approach force modeled explicitly accounted constraint con guration ball coordinate held constant 
alternatively may model forces explicitly solving magnitudes lagrange ers 
requires complete exact knowledge instantaneous state contact objects determines forces exist 
problem method dynamic system evolves constraints may change times ball may roll table may hit object table determining correct equations motion ball means keeping track changing constraints complicated 
clear type constraint applied exist models rolling contact cases predict di erent behaviors 
impacts easily incorporated constraint model generally give rise impulses constraint forces interval 
collision impulses handled separately 
contrast constraint methods impulse dynamics involves explicit constraints con gurations moving objects objects colliding ballistic trajectories 
furthermore modes continuous contact handled trains impulses applied objects resting sliding rolling 
impulse simulation block resting table experiencing rapid tiny collisions table resolved local information collision point 
consider case ball bouncing terrain shown gure 
constraint simulation nightmare constraint simulation 
constraints change ball begins traveling ramp leaves ramp settles roll ground 
occurrences detected processed 
simulation avoids having worry transitions 
sense physically sound treatment establish arti cial boundary example bouncing rolling handles entire continuum contact phases 
wish constraint methods dynamic simulation situations perfect tool 
believe method better suited simulating common physical systems especially collision intensive changes contact mode 
examine possibility methods simulation combining strengths section 
obvious questions concerning impulse simulation result physically accurate simulations fast practical 
defer thorough answers questions section state impulse dynamic simulation produce physically accurate results approach extremely fast 
simulations certainly run interactively current implementation believe real time simulation reachable goal 
collision detection impulse dynamic simulation inherently collision intensive collisions ect types interaction objects 
hahn collision detection bottleneck dynamic simulation cient data structures algorithms needed impulse simulation feasible 
currently simulator objects geometrically modeled convex polyhedra combinations 
polyhedral restriction severe collision detection system insensitive complexity geometric models permitting ne tessellations 
simulations described section polyhedral models facets negligible slowdown 
prioritizing collisions obviously checking possible collisions pairs objects integration step ine cient 
collisions prioritized heap see gure 
dynamic state collision heap lin canny toi estimator prioritizing collisions heap 
pair objects simulation element heap contains lower bound time impact toi pair objects 
heap sorted toi eld toi eld top heap element gives safe value collision free integration step 
integration step distance objects top heap call recomputed 
implementation lin canny closest features algorithm 
extremely cient algorithm maintains closest features vertices edges faces pair convex polyhedra 
fastest applications dynamic simulation objects move continuously space geometric coherence exploited 
collisions declared distance objects falls threshold suppose distance lies case dynamic states output lin canny algorithm compute new conservative bound time impact heap pair updated new value possibly ecting heap position integrator ready step 
distance collision declared 
collision resolution system computes applies collision impulses objects changing dynamic state 
point toi recomputed objects step necessary toi object pairs form recomputed 
reason toi estimator uses ballistic trajectory assumption bound time impact pair objects 
applying collision impulses objects violates assumption previous toi involving object invalid 
note update step 
reducing collision checks toi updates strategy described reduces collision checks signi cantly especially objects far apart moving slowly 
number collision checks performed periodically pair objects 
serious problem toi update step performed time collision impulse applied object 
heap scheme misses fact objects come near collision checks toi updates pairs objects unnecessary 
alleviate problem employ spatial tiling technique overmars cient point location algorithms fat subdivisions 
object simulation easily nd enclosing axis aligned rectangular volume bi guaranteed contain object integration step 
possible ballistic trajectory assumption 
idea keep track objects near keeping track bounding boxes overlap 
physical space partitioned cubical tiling resolution tiling coordinates physical space mapped integers tiling map bx bz si set tiles bi intersects 
store hash table multiple times hashed coordinates tile si 
clearly objects possibly collide integration step hash bucket 
case keep object pair collision heap 
furthermore object experiences collision impulse tois need recomputed object pairs object shares hash bucket object scheme tremendously reduces number collision checks toi computations performed objects generally vicinity small subset set objects 
collision detection worst case better 
consider example case simulating bowl feeder sorting hundreds small parts 
number parts near part bounded constant number collision checks 
added employ hierarchy spatial tilings hash tables varying resolutions order prevent having hash sofa tiles size ice cubes 
hierarchy needed keep rate bucket updates small 
see overmars information multiple resolution hashing scheme 
time impact estimator time impact toi estimator takes current dynamic state pose velocity objects closest points returns lower bound time impact objects 
assume objects convex concavities handled convex decomposition 
ci cj current closest points objects collision course 
unit vector direction ci cj distance ci cj 
convexity argument shows matter ultimate contact points located contact points cover distance direction collision occur 
obtains conservative bound time collision tc vj vi ri rj denotes center mass velocity denotes maximum radius denotes maximum angular velocity magnitude subscripts refer body 
bound assumes objects ballistic gravitational ects cancel 
instance object xed table top gravitational acceleration accounted 
conservation momentum bound angular velocity magnitude body ballistic tory max jx jy jz min jx jy jz vector diagonal elements diagonalized mass matrix current angular velocity 
computing collision impulses bodies collide impulse applied bodies prevent interpenetration equal opposite impulse applied 
point application known simple matter compute new center mass angular velocities body 
updating velocities dynamic state evolution continue assuming ballistic trajectories moving objects 
point application computed collision detection system central problem collision resolution determine collision impulse accurate computation impulse critical physical accuracy simulator 
discuss may computed detailed discussion 
assumptions collisions impulse simulation feasible gross simplifying assumptions frictionless contacts perfectly elastic collisions 
approach analyzing general frictional impacts similar derive equations amenable numerical integration 
keller gives excellent treatment bhatt analysis quite similar 
assumptions central analysis 
nitesimal collision time 
poisson hypothesis 
coulomb friction model nitesimal collision time assumption commonly dynamic simulation 
implies positions objects treated constant course collision 
furthermore ect object described impulse normal force instantaneously change velocities 
assumption imply collision treated discrete event 
velocities bodies constant collision collision frictional forces depend velocities necessary examine dynamics collision 
short collision single point time line simulation determine collision impulses generated magnifying glass blow point examining happens inside collision 
poisson hypothesis approximation complex deformations energy losses occur real bodies collide 
trying explicitly model stresses deformations slow interactive simulation poisson hypothesis simple empirical rule captures basic behavior collision 
collision divided compression phase direction relative contact velocity surface normal 
boundary phases point maximum compression point relative normal contact velocity vanishes 
magnitude normal component impulse imparted object entire collision pmc magnitude normal component impulse just compression phase point maximum compression 
poisson hypothesis states pmc constant zero called dependent objects materials 
nal assumption friction law 
particular point collision bodies contact velocity ofa relative tob ut tangential component ofu ut unit vector direction ut fn ft normal tangential frictional components force exerted respectively 
ut ft ut ut coe cient friction 
bodies sliding relative frictional force exactly opposed direction sliding 
objects sticking ut vanishes known total force lies friction cone 
initial collision analysis possible collision reported distance bodies falls collision epsilon possible collision objects may receding 
normal component relative velocity closest points appropriate sign collision impulse applied 
note assuming existence normal direction polyhedral objects discontinuous surface normals reasonable surface normals 
establish collision frame axis aligned collision normal directed body 
relative contact velocity bodies 
uz collision impulse applied prevent interpenetration necessary analyze dynamics bodies collision determine impulse 
denote collision parameter variable starts zero continuously increases course collision reaches nal value velocities functions denotes impulse delivered body point collision 
goal determine nal total impulse delivered 
initially choose time start impact fact choice 
dynamics studied respect time collision impulses computed integrating force 
unfortunately forces generated collision easily known assume hooke law behavior contact point question spring constants 
variety penalty methods attempt choose spring constants 
away problem choose di erent parameter collision pz normal component impulse delivered body 
scalar pz zero moment collision begins increases entire course collision valid parameter 
denote total change relative contact velocity point collision impulse delivered body point 
straightforward physics leads equation mp see detailed analysis 
matrix dependent masses mass matrices colliding bodies locations contact points relative centers mass nitesimal collision time assumption constant entire collision 
useful di erentiate equation respect collision parameter obtaining sliding mode mp tangential component ofu non zero bodies sliding relative completely constrained 
relative direction sliding collision arg ux 
lemma collision parameter chosen pz bodies sliding relative cos sin proof dpx dpx dt dt fx dt force exerted body body 
sliding conditions fx cos fz cos combining results gives cos derivation similar 
dp 
clear pz collision parameter 
applying results lemma equation expressed terms ux uy obtain ux dt nonlinear di erential equation valid long bodies sliding relative 
integrating equation respect collision parameter pz track course collision 
projections trajectories ux uy plane shown gure particular matrix crosses mark initial sliding velocities 
basic impulse calculation algorithm proceeds follows 
computing initial verifying uz negative numerically integrate equation 
integration uz increase reaches zero point maximum compression attained 
bara noted possible construct cases uz decreases pz increases 
situation extremely rare occurred simulations 
velocity relative sliding tangential velocity impact velocity solution trajectories equation projected ux uy plane 
point pz total normal impulse applied compression 
multiplying value gives terminating value collision parameter integration continues point obtain 
inverting equation gives total collision impulse 
sticking mode relative tangential velocity vanishes direction frictional force known priori lemma longer applies 
assume frictional force strong maintain sticking condition 
see case set equation solve unique solution say friction su cient maintain sticking ux uy remainder collision 
friction su cient maintain sticking sliding immediately resume 
equation valid ux uy help predicting initial direction sliding 
case depicted gure unique sliding direction leaving origin sliding resume direction 
proven trajectories equation projected ux uy plane spiral origin conjecture cases friction su cient maintain sliding exactly sliding direction away origin 
ux uy nonzero equation applies 
previous algorithm computing collision impulses slightly modi ed account possible sticking 
point integration ux uy vanish integration halts 
criterion equation met sticking maintained duration collision vary straight line 
solve quartic equation determine inward outward sliding directions collision take integration step conjectured unique outward sliding direction 
sliding resumed normal integration continue illustrates possible trajectories di erent collisions 
path represents collision low friction tangential component relative contact velocity vanishes objects slide entire collision 
path corresponds collision frictional forces bring sliding contact halt object rebound relative sliding velocity 
path corresponds case sticking occurs momentarily friction insu cient maintain condition sliding resumes 
high friction low friction medium friction plane max 
compression trajectories relative contact velocity space di erent collisions 
static contact collision resolution method described far suitable resolving colliding contacts model continuous contact objects come rest 
case collisions produce energy loss colliding objects modeling static forces 
important questions static situation detected local information contact point collision model modi ed give correct macroscopic behavior 
certainly initial relative normal velocity contact point small static contact occurs objects settle 
de ne small precisely threshold velocity initially resting object acquires falls collision envelope acceleration gravity 
relative normal velocity threshold check see impulse required reverse initial relative velocity lies friction cone applied resolve collision 
collision called 
show impulses object just physical static contact forces model 
solve problem 
consider block sitting shallow ramp high friction modeling contact impulse train 
friction su cient bring sliding velocity zero collision block tend creep ramp time spends ballistic phase 
elastic nature negate ect gravity intervening ballistic phases giving block small kick back ramp tangential contact velocities small 
shows bring block complete 
question arises just ad hoc modi cation necessary dynamics 
attractive features impulse method need enforce strict continuous contact constraints obstacles 
just constraint disguise 
answer 
objects settle experience number small collisions initially 
gradually account larger larger fraction total collisions eventually collisions 
words smooth transition colliding continuous contact 
decision apply solely local information contact point global information state system 
results analysis tested simulator wide variety problems 
describe qualitative quantitative results 
pool break simulation involved breaking rack fteen pool balls high velocity cue ball 
constraint simulators trouble example large number mutual contacts balls 
bara shown problem nding set contact forces instantaneously obey coulomb friction law contact point np hard 
furthermore contact constraints quite transient making di cult integrate equations motion derived 
impulse method avoids problems treating contacts series closely spaced collisions 
balls standard size initially placed millimeters apart 
distance cue ball strikes rack collisions occur balls roll 
show high number collisions occurred simulation especially point initial break 
simplicity collision model permits fast simulation see table 
break collision rate stabilizes roughly khz collisions primarily balls table 
pool break collision rate thousands collisions second initial break time collision rate pool break 
block ramp experiments set benchmarks physical accuracy collision model block ramp tests involving block sliding ramp friction 
ramp critical coe cient friction frictional force exactly resists tangential component gravity tan 
rst test coe cient friction set block initial velocity ramp cm sec 
theoretical simulated velocities block ramp shown gure 
simulated velocity curve due vel cm block ramp simulated theoretical time block velocity discrete impulse train modeling contact average simulated velocity simulated position gure closely agree theory 
pos cm block ramp simulated theoretical time block position second test coe cient friction lowered block rest 
theoretical simulated velocities positions shown gures respectively 
close agreement simulation theory slopes curves nearly identical indicating impulse model predicts correct frictional force block 
measuring strike pocket simulator study ect hooking ball width strike pocket standard bowling 
best place ball hit pins head pin second row pin throw hooking ball hits pins moving center arrangement 
hooking ball ect chances bowling strike 
chaotic nature system mathematical analysis nearly impossible di cult perform real experiments su cient control conditions 
short problem ideal stochastic simulation 
perfect application impulse dynamics vel cm block accelerating ramp simulated theoretical time block velocity pos cm block accelerating ramp simulated theoretical time block position evolution collision intensive transient contacts objects gradual change contact mode ball bouncing sliding rolling 
simulations accurate physical dimensions ball pin sizes masses pin spacing slight approximation shape pins 
rst batch simulations straight ball thrown launching ball zero angular velocity center mass velocity direction see gure 
performed trials keeping initial ball velocities constant varying initial coordinate ball center mass centimeter window recording number pins trial 
second batch trials initial ball velocity conditions altered produce right hooking ball angular velocity rad direction linear velocity angle axis 
shows number pins versus ball position crossed pin line ordinates averaged mm wide abscissa windows 
hooking ball slightly better straight ball positions pin line signi cantly better range head pin rightmost second row pin cm pin line 
agrees accepted wisdom right handed best strategy throw hooking ball pins 
plots illustrate dip pins due splits ball hits head pin dead 
improve model carefully specifying position cm pin line set measurement strike pocket 
pins straight vs hooking ball hooking straight pin line position cm results strike pocket study 
shape pins location ball center mass general geometric center 
experiment demonstrates feasibility utility impulse dynamics modeling complex system generating physically accurate results 
simulations brie mention simulator problems tried summarize execution time results simulator see gure simulation snapshots 
ball spinning platter 
simulation involves ball rolling disc spinning high velocity 
example interesting nonholonomic constraint ball disc fact classical models rolling contact predict di erent behaviors 
experimental results show ball rolls circles gradually increasing radii eventually rolling platter 
impulse simulator produces result demonstrating correct macroscopic behavior impulse contact model 
block dropped block 
block dropped coming rest 

line set motion bumping lead domino 
chain balls 
balls placed straight line rolling ball strikes chain 
momentum transferred chain launching ball 
coins 
coins tossed general area plate come rest partially top 
simulation test case contact modes colliding sliding rolling resting 
balls dish 
balls dropped shallow dish approximated planar wedges 
balls come rest physically accurate minimum energy con guration ball center dish surrounded balls 
table gives simulation times experiments 
virtual time length time passed simulation real time actual time needed compute simulation slowdown ratio slowdown corresponds real time simulation 
virtual real time time pool break dec ramp acc 
ramp bowling strike ball platter block drop chain balls coins balls dish table simulation times experiments 
described impulse approach dynamic simulation reported results simulation problems 
interactive simulation speeds attained believe real time simulation ultimately possible 
encouraging wide variety physical systems successfully simulated special tweaking performed simulations described 
important ciency point impulse approach highly parallelizable 
global constraints state system dynamic integration body system neatly decomposed small pieces 
decomposition possible explicit constraints states di erent bodies 
issue physical accuracy important consider 
modeling rock sitting table series impulses rst questionable 
making claim rock experiencing modeling contact way correct macroscopic behavior ected 
simulator produced physically plausible results problems 
furthermore quantitative results withstand scrutiny compared theoretical models 
study needed initial results encouraging 
stated previously intend impulse dynamics complete replacement constraint dynamics 
perfect application modeling hinge joint 
principle model joint impulse way enforcing hinge constraint collisions hinge pin 
impulse approach clearly wrong tool real times computed averaging trials 
simulations performed sgi indigo natural constraint problem 
currently adding multibody capability simulator order model linked rigid body structures 
hybrid approach constraint methods enforce joint constraints impulse dynamics model contact bodies connected joints 
optimistic right tool right problem greatly extend frontier dynamic simulation 
bara david 
analytical methods dynamic simulation rigid bodies 
computer graphics july 
bara david 
curved surfaces coherence non penetrating rigid body simulation 
computer graphics august 
bara david 
coping friction non penetrating rigid body simulation 
computer graphics august 
bara david 
issues computing contact forces rigid bodies 
algorithmica 
barzel ronen barr alan modeling system dynamic constraints 
computer graphics august 
bhatt vivek je classifying dynamic behavior dimensional frictional rigid body impact 
international conference robotics automation 
ieee may 
cremer james stewart james 
architecture newton general purpose dynamics simulator 
international conference robotics automation pages 
ieee may 
hahn james realistic animation rigid bodies 
computer graphics august 
hopcroft john electronic prototyping 
computer pages march 
keller impact friction 
journal applied mechanics march 
lewis murray richard 
modelling constraints dynamics rolling ball spinning table 
technical report california institute technology 
preprint 
lin ming canny john fast algorithm incremental distance calculation 
international conference robotics automation pages 
ieee may 
mirtich brian canny john 
impulse dynamic simulation 
goldberg halperin latombe wilson editors algorithmic foundations robotics 
peters boston ma 
proceedings workshop held february 
moore matthew wilhelms jane 
collision detection response computer animation 
computer graphics august 
overmars mark 
point location fat subdivisions 
information processing letters 
edward elementary rigid dynamics 

stewart james cremer james algorithmic control walking 
international conference robotics automation pages 
ieee may 
wang yu mason matthew modeling impact dynamics robotic operations 
international conference robotics automation pages 
ieee may 
witkin andrew gleicher michael welch william 
interactive dynamics 
computer graphics march 
witkin andrew welch william 
fast animation control nonrigid structures 
computer graphics august 
simulation snapshots 
