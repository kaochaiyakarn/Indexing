pseudorandomness oded goldreich department computer science applied mathematics weizmann institute science rehovot israel 
july postulate distribution pseudorandom told apart uniform distribution efficient procedure 
yields robust definition pseudorandom generators efficient deterministic programs stretching short random seeds longer pseudorandom sequences 
pseudorandom generators reduce randomness complexity efficient procedure 
show pseudorandom generators computational difficulty closely related loosely speaking efficiently transformed 
orientation essay considers finite objects encoded binary finite sequences called strings 
talk distributions mean discrete probability distributions having finite support set strings 
special interest uniform distribution length parameter explicit implicit discussion assigns bit string equal probability probability gamman 
colloquially speak perfectly random strings meaning strings selected uniform distribution 
second half century witnessed development theories randomness notion puzzling ages 
theory cf initiated shannon rooted probability theory focused distributions perfectly random 
shannon information theory characterizes perfect randomness extreme case information content maximized redundancy 
perfect randomness associated unique distribution uniform 
particular definition generate perfect random strings shorter random strings 
second theory cf due kolmogorov chaitin rooted computability theory specifically notion universal language equiv universal machine computing device 
measures complexity objects terms shortest program fixed universal machine generates object 
shannon theory kolmogorov complexity quantitative perfect random objects appear extreme case 
general amount information distribution defined gamma log 
uniform distribution strings length information measure distribution bit strings lower information measure 
function 
distribution obtained applying uniformly distributed bit string information measure strictly lower length output 
example string kolmogorov complexity log virtue program print ones length dominated encoding say binary 
contrast simple counting argument shows bit strings kolmogorov complexity interestingly approach may say single object distribution objects perfectly random 
kolmogorov approach inherently intractable kolmogorov complexity uncomputable definition generate strings high kolmogorov complexity short random strings 
third theory initiated blum goldwasser micali yao rooted complexity theory focus essay 
approach explicitly aimed providing notion perfect randomness allows efficiently generate perfect random strings shorter random strings 
heart approach suggestion view objects equal told apart efficient procedure 
consequently distribution efficiently distinguished uniform distribution considered random called pseudorandom 
randomness inherent property objects distributions relative observer computational abilities 
demonstrate approach consider mental experiment 
alice bob play head tail ways 
alice flips coin high air bob asked guess outcome coin hits floor 
alternative ways differ knowledge bob making guess 
alternative bob announce guess alice flips coin 
clearly case bob wins probability 
second alternative bob announce guess coin spinning air 
outcome determined principle motion coin bob accurate information motion believe case bob wins probability 
third alternative similar second bob disposal sophisticated equipment capable providing accurate information coin motion environment effecting outcome 
bob process information time improve guess 
fourth alternative bob recording equipment directly connected powerful computer programmed solve motion equations output prediction 
conceivable case bob improve substantially guess outcome coin 
conclude randomness event relative information computing resources disposal 
natural concept pseudorandomness arises distribution pseudorandom efficient procedure distinguish uniform distribution efficient procedures associated probabilistic polynomial time algorithms 
algorithm called polynomial time exists polynomial possible input algorithm runs time bounded jxj jxj denotes length string running time algorithm grows moderately function length input 
probabilistic algorithm take random steps loss generality random step consists selecting predetermined steps take possible step taken probability 
choices called algorithm internal coin tosses 
definition pseudorandom generators loosely speaking pseudorandom generator efficient program algorithm stretches short random strings long pseudorandom sequences 
emphasize fundamental aspects notion pseudorandom generator 
efficiency generator efficient 
associate efficient computations polynomial time ones postulate generator implementable deterministic polynomial time algorithm 
algorithm takes input string called seed 
seed captures bounded amount randomness device generates pseudorandom sequences 
formulation views device consisting deterministic procedure applied random seed 

stretching generator required stretch input seed longer output sequence 
specifically stretches bit long seeds bit long outputs function called stretching measure stretching function generator 

pseudorandomness generator output look random efficient observer 
efficient procedure fail distinguish output generator random seed truly random sequence length 
formulation sentence refers general notion computational indistinguishability heart entire approach 
demonstrate consider suggestion pseudorandom generator 
seed consists pair bit integers bit output obtained repeatedly squaring current modulo emitting significant bit intermediate result gamma mod output def significant bit 
process may generalized seeds length outputs length 
process certainly satisfies items question item holds debatable rigorous definition provided 
jumping ahead mention assumption difficult factor large integers slight variant process pseudorandom generator 
computational indistinguishability intuitively objects called computationally indistinguishable efficient procedure tell apart 
usual complexity theory elegant formulation requires asymptotic analysis functional treatment running time algorithms terms length input 
objects question infinite sequences distributions distribution finite support 
sequence called distribution ensemble 
typically consider distribution ensembles form fd function support subset furthermore typically positive polynomial 
denote ed process selecting distribution consequently predicate denote pr edn probability holds distributed selected definition computational indistinguishability probability ensembles fx fy called computationally indistinguishable probabilistic polynomial time algorithm positive polynomial sufficiently large pr gamma pr probability taken resp coin tosses algorithm stress asymptotic functional treatment essential approach 
may develop entire approach terms inputs fixed lengths adequate notion complexity algorithms 
alternative treatment cumbersome 
couple comments place 
firstly allowed algorithm called distinguisher probabilistic 
requirement stronger essential important aspects approach 
secondly view events occuring probability upper bounded reciprocal polynomials negligible 
coupled notion efficiency polynomial time computations event occurs negligible probability function parameter occur negligible probability experiment repeated poly times 
note computational indistinguishability strictly liberal notion statistical indistinguishability cf 
important case distributions generated pseudorandom generator defined 
definition pseudorandom generators deterministic polynomial time algorithm called pseudorandom generator exists stretching function probability ensembles denoted fg fr computationally indistinguishable 
distribution defined output uniformly selected seed 
distribution defined uniform distribution letting um denote uniform distribution require probabilistic polynomial time algorithm positive polynomial sufficiently large pr sun gamma pr ru pseudorandom generators efficient polynomial time deterministic programs expand short randomly selected seeds longer pseudorandom bit sequences defined computationally indistinguishable truly random sequences efficient polynomial time algorithms 
follows efficient randomized algorithm maintains performance internal coin tosses substituted sequence generated pseudorandom generator 
construction typical application pseudorandom generators probabilistic polynomialtime algorithm ae denote upper bound randomness complexity 
denote output input coin tosses sequence ae jxj pseudorandom generator stretching function ag randomized algorithm input proceeds follows 
sets jxj smallest integer ae jxj uniformly selects outputs ae jxj bit long prefix 
shown infeasible find long input output behavior ag noticeably different ag may fewer coin tosses formulated proposition represents algorithm trying find ag distinguishable algorithm 
proposition 
algorithm delta denote judged behavior ag input delta def pr ru ae gamma pr su ag probabilities taken um coin tosses pair probabilistic polynomial time algorithms positive polynomial sufficiently long pr delta probability taken coin tosses proposition proven showing triplet violating claim converted algorithm distinguishes output uniform distribution contradiction hypothesis 
analogous arguments applied wishes prove efficient randomized process algorithm multi party computation preserves behavior replaces true randomness pseudorandomness defined 
pseudorandom generators large stretching function considerably reduce randomness complexity efficient application 
amplifying stretch function 
pseudorandom generators defined required stretch input bit example stretching bit long inputs bit long outputs 
clearly generator moderate stretch function little practice 
contrast want pseudorandom generators arbitrary long stretch function 
efficiency requirement stretch function polynomial 
turns pseudorandom generators smallest possible stretch function construct pseudorandom generators desirable polynomial stretch function 
talking existence pseudorandom generators may ignore stretch function 
theorem pseudorandom generator stretch function stretch function computable poly time denote jxj bit long prefix denote bit 
def oe oe delta delta delta oe jsj oe gamma gamma jsj pseudorandom generator stretch function construct pseudorandom generators known constructions transform computation difficulty form way functions defined pseudorandomness generators 
loosely speaking polynomial time computable function called way efficient algorithm invert negligible success probability 
simplicity consider length preserving way functions 
definition way function way function polynomial time computable function probabilistic polynomial time algorithm positive polynomial delta sufficiently large pr gamma uniform distribution popular candidates way functions conjectured intractability integer factorization cf state art discrete logarithm problem cf analogously decoding random linear code 
infeasibility inverting yields weak notion unpredictability denotes th bit probabilistic polynomial time algorithm sufficiently large case pr probability taken uniformly ng stronger fact strongest possible notion unpredictability hard core predicate 
loosely speaking polynomial time computable predicate called hard core function efficient algorithm guess success probability negligible better half 
definition hard core predicate polynomial time computable predicate 
called hard core function probabilistic polynomial time algorithm positive polynomial delta sufficiently large pr clearly hard core polynomial time computable function way 
turns way function slightly modified hard core predicate 
theorem generic hard core arbitrary way function defined def jxj jrj 
denote inner product mod binary vectors predicate hard core function see proof 
get construction pseudorandom generators proposition simple construction pseudorandom generators hard core predicate polynomial time computable function def followed pseudorandom generator 
sense key point proof proposition showing obvious definition unpredictability output implies pseudorandomness 
fact bit unpredictability pseudorandomness equivalent general proven explicitly alternative presentation 
alternative presentation 
presentation construction pseudorandom generators theorem proposition different analogous original construction pseudorandom generators suggested blum micali arbitrary stretch function way function hard core defines def delta delta delta jsj gamma gamma jsj gamma 
concrete instantiation assumption difficult factor large integers depicted 
pseudorandomness established steps notion bit unpredictability 
ensemble fz called unpredictable probabilistic polynomial time machine obtaining prefix fails predict bit probability non negligibly higher 
functions may hard core predicates information theoretic nature 
example functions form oe oe information theoretic hard core predicate oe oe 
step proves ensemble fg uniform bit unpredictable right left 
loosely speaking predict delta delta delta jsj gamma predict computing jsj gamma obtaining delta delta delta jsj 
contradicts hard core hypothesis 
step uses yao observation polynomial time constructible ensemble pseudorandom bit unpredictable cf sec 

clearly predict bit ensemble distinguish ensemble uniform ensemble unpredictable regardless computing power 
need direction obvious 
show bit unpredictability implies indistinguishability uniform ensemble 
specifically consider hybrid distributions th hybrid takes bits questionable ensemble rest uniform 
distinguishing extreme hybrids implies distinguishing neighboring hybrids turn implies bit predictability questionable ensemble 
assume infeasible factor integers product large primes congruent mod 
assumption squaring modulo integers way function 
furthermore squaring modulo quadratic residues mod significant bit argument corresponding hard core 
probabilistic polynomial time algorithm generating random primes obtain pseudorandom generator input bit seed abc jaj jbj 
initialization steps produce bit prime mod 
similarly produce mod 
multiply obtaining 
mod iterations gamma significant bit 
mod output gamma pseudorandom generator intractability factoring 
general condition existence pseudorandom generators 
recall way function easily construct pseudorandom generator 
requirement may dropped currently known construction general case quite complex 

theorem existence pseudorandom generators pseudorandom generators exist way functions exist :10.1.1.35.3930
show existence pseudorandom generators imply existence way functions consider pseudorandom generator stretch function 
define def polynomial time computable length preserving 
way distinguish trying invert checking result inverting range distribution refers distribution probability inverse negligible 
interesting direction construction pseudorandom generators way function 
general may ensemble may pseudorandom construction hard core directly 
idea hash uniform string length related entropy universal hash functions :10.1.1.35.3930
done guaranteeing logarithm probability mass value typically close entropy 
hashing length comparable entropy means shrinking length output say entire point stretching bit seed 
second idea compensate gamma loss extracting bits seed :10.1.1.35.3930:10.1.1.35.3930
done hashing point gamma bit long hash value inverting task easier 
implementing ideas turns difficult alternative construction appreciated 
pseudorandom functions pseudorandom generators allow efficiently generate long pseudorandom sequences short random seeds 
pseudorandom functions defined powerful allow efficient direct access huge pseudorandom sequence infeasible scan bit bit 
put words pseudorandom functions replace truly random functions efficient application notably cryptography 
pseudorandom functions indistinguishable random functions efficient machines may obtain function values arguments choice 
machines called oracle machines machine function denotes computation input queries answered function definition pseudorandom functions pseudorandom function ensemble length parameters collection functions def ff jsj 
jsj satisfying ffl efficient evaluation exists efficient deterministic algorithm seed jsj bit argument returns jsj bit long value 
seed effective description function ffl pseudorandomness probabilistic polynomial time oracle machine positive polynomial sufficiently large fi fi fi pr ffn gamma pr ae fi fi fi denotes distribution obtained selecting uniformly denotes uniform distribution functions mapping specifically arbitrary way function constructs direct product sufficiently copies example def 
suppose simplicity 
function uniformly selected functions pseudorandom ensemble presents input output behavior indistinguishable poly time function selected random boolean functions 
contrast pseudorandom sequences produced pseudorandom generator computationally indistinguishable sequence selected uniformly poly sequences 
pseudorandom functions constructed pseudorandom generator 
theorem construct pseudorandom functions pseudorandom generator stretching function 
resp denote resp jsj bits oe jsj delta delta deltaoe oe def oe jsj delta delta delta oe oe delta delta delta function ensemble ff jsj 
jsj def pseudorandom length parameters construction easily adapted polynomially bounded length parameters mention pseudorandom functions derive negative results computational learning theory complexity theory cf natural proofs :10.1.1.13.122
applicability pseudorandom generators randomness playing increasingly important role computation frequently design sequential parallel distributed algorithms course central cryptography 
convenient design algorithms making free randomness desirable minimize usage randomness real implementations generating perfectly random bits special hardware quite expensive 
pseudorandom generators defined key ingredient algorithmic tool box provide automatic compiler programs written free usage randomness programs economical randomness 
pseudo random number generators appeared computers 
typical implementations generators pseudorandom definition 
best generators shown pass ad hoc statistical test cf 
fact pseudo random number generator passes statistical tests mean pass new test untested application 
furthermore approach subjecting generator ad hoc tests fails provide general results type stated form practical purposes output generator truly unbiased coin tosses 
contrast approach encompassed definition aims generality fact tailored obtain notion computational indistinguishability underlines definition covers possible efficient applications postulating pseudorandom sequences truly random ones 
pseudorandom generators functions key importance cryptography 
typically establish private key encryption authentication schemes cf sec 

example suppose parties share random bit string specifying pseudorandom function definition unknown adversary 
parties may send encrypted messages xoring message value random point 
encrypt sender uniformly selects sends phi receiver 
note security encryption scheme relies fact computationally feasible adversary adversary strategies envisioned tested values function look random 
intellectual contents pseudorandom generators shortly discuss intellectual aspects pseudorandom generators defined 
versus ontological 
definition pseudorandom generators notion computational indistinguishability 
nature notion best demonstrated confronting kolmogorov chaitin approach randomness 
loosely speaking string kolmogorov random length equals length shortest program producing 
shortest program may considered true explanation phenomenon described string 
kolmogorov random string string substantially simpler shorter explanation 
considering simplest explanation phenomenon may viewed ontological approach 
contrast considering effect phenomena observer underlying definition pseudorandomness approach 
furthermore exist probability distributions uniform statistically close uniform distribution indistinguishable uniform distribution efficient procedure 
distributions ontologically different considered equivalent point view taken definitions 
relativistic view randomness 
pseudorandomness defined terms observer 
distribution told apart uniform distribution efficient polynomial time observer 
pseudorandom sequences may distinguished random ones infinitely powerful computers disposal 
specifically machine easily distinguish output pseudorandom generator uniformly selected string length just trying possible seeds 
pseudorandomness subjective abilities observer 
randomness computational difficulty 
pseudorandomness computational difficulty play dual roles definition pseudorandomness relies fact putting computational restrictions observer gives rise distributions uniform distinguished uniform 
furthermore construction pseudorandom generators rely conjectures regarding computational difficulty existence way functions inevitable pseudorandom generator construct way functions 
non trivial pseudorandomness computational difficulty converted back forth 
generalization pseudorandomness surveyed viewed important special case general paradigm cf 
generic formulation pseudorandom generators consists specifying fundamental aspects stretching measure generators class generators supposed fool algorithms respect computational indistinguishability requirement hold resources generators allowed computational complexity 
presentation focused polynomial time generators having polynomial stretching measure fool probabilistic polynomial time observers 
variety cases interest briefly discuss 
weaker notions computational indistinguishability 
aim replace random sequences utilized algorithm pseudorandom ones may try capitalize knowledge target algorithm 
merely fact target algorithm runs polynomial time 
example know algorithm uses little workspace may able better 
similarly know analysis algorithm depends specific properties random sequence uses pairwise independence elements 
general weaker notions computational indistinguishability fooling space bounded algorithms constant depth circuits specific tests testing pairwise independence sequence arise naturally generators producing sequences fool tests useful variety applications application utilizes randomness restricted way feeding sequences low randomness quality may 
needless say author advocates rigorous formulation characteristics applications rigorous constructions generators fool type tests emerge 
alternative notions generator efficiency 
discussion focused aspect pseudorandomness question resources type observer potential distinguisher important question pseudorandom sequences generated shorter ones cost complexity 
essay required generation process efficient efficiency limitations distinguisher 
fair natural 
allowing generator complex time space resources distinguisher unfair yields interesting consequences context trying de randomize randomized complexity classes 
example may consider generators working time exponential length seed 
cases lose liberal allowing exponential time generators 
see consider typical derandomization argument proceeding steps replaces true randomness algorithm pseudorandom sequences generated shorter seeds goes deterministically possible seeds looks frequent behavior modified algorithm 
case deterministic complexity exponential seed length 
benefit constructing exponential time generators may easier constructing polynomial time ones 
acknowledgments grateful toni knapp susan landau useful comments 
fact required generator efficient distinguisher required fixed polynomial time algorithm allowed algorithm polynomial running time 
chor goldreich schnorr 
rsa rabin functions certain parts hard 
siam journal computing vol 
april pages 
blum micali 
generate cryptographically strong sequences pseudorandom bits 
siam journal computing vol 
pages 
preliminary version rd ieee symposium foundations computer science 
carter wegman 
universal hash functions 
journal computer system science vol 
pages 
chaitin 
length programs computing finite binary sequences 
journal acm vol 
pages 
cover thomas 
elements information theory 
john wiley sons new york 
goldreich 
foundation cryptography fragments book 
february 
available theory lcs mit edu oded frag html 
goldreich 
modern cryptography probabilistic proofs pseudorandomness 
algorithms combinatorics series vol 
springer 
goldreich goldwasser micali 
construct random functions 
journal acm vol 
pages 
goldreich levin 
hard core predicates way function 
st acm symposium theory computing pages 
goldreich micali 
increasing expansion pseudorandom generators 
manuscript 
available theory lcs mit edu oded papers html goldreich krawczyk sparse pseudorandom ensembles 
random structures algorithms vol 
pages 
goldreich luby 
existence pseudorandom generators 
siam journal computing vol 
pages 
goldwasser micali 
probabilistic encryption 
journal computer system science vol 
pages 
preliminary version th acm symposium theory computing 
hastad impagliazzo levin luby :10.1.1.35.3930
construction pseudorandom generator way function 
appear siam journal computing 
preliminary versions impagliazzo st acm symposium theory computing hastad nd acm symposium theory computing 
knuth 
art computer programming vol 
algorithms 
addison wesley publishing edition second edition 
kolmogorov 
approaches concept amount information 
probl 
inform 
vol 

levin 
randomness conservation inequalities information independence mathematical theories 
inform 
control vol 
pages 
li vitanyi :10.1.1.35.3930
kolmogorov complexity applications 
springer verlag august 
odlyzko 
integer factorization 
cryptobytes technical newsletter rsa laboratories vol 
pages 
available www research att com amo odlyzko 
discrete logarithms smooth polynomials 
finite fields theory applications algorithms mullen eds amer 
math 
soc contemporary math 
vol 
pages 
available www research att com amo razborov rudich :10.1.1.13.122
natural proofs 
journal computer system science vol 
pages 
shannon 
mathematical theory communication 
bell sys 
tech 
jour vol 
pages 
solomonoff 
formal theory inductive inference 
inform 
control vol 
pages 
valiant 
theory learnable 
communications acm vol 
pages 
yao 
theory application trapdoor functions 
rd ieee symposium foundations computer science pages 

