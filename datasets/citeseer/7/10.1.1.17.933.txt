graphical query specification dynamic result previews digital library steve jones department computer science university waikato private bag hamilton new zealand tel mail cs waikato ac nz textual query languages boolean logic common search facilities line information repositories 
evidence suggest syntactic semantic demands languages lead user errors adversely affect time takes users form queries 
additionally users faced user interfaces repositories unresponsive uninformative consequently fail support effective query refinement 
suggest graphical query languages particularly venn diagrams provide natural medium boolean query specification overcomes problems textual query languages 
dynamic result previews seamlessly integrated graphical query specification increase effectiveness query 
describe vquery query interface new zealand digital library exploits querying venn diagrams integrated query result previews 
keywords dynamic queries query previews query diagram digital libraries common line information repositories provide effective access contents wide variety users 
focus user interface techniques improve particular mode access searching describe developing alternative user interface new zealand digital library nzdl 
searching users specify terms interest joined query language operators information matching terms returned indexing retrieval mechanism 
world wide web intemet search engines digital libraries nzdl examples systems provide textual languages query specification 
languages commonly exploit boolean logic experienced users powerful expression complex information seeking requirements 
difficulties dealing boolean logic common particularly restricted syntax 
consequences significant numbers erroneous queries created 
syntactic demands conflict meaning operators boolean logic english language poses problems 
tends inclusive english exclusive boolean logic tends exclusive english inclusive boolean logic 
alternative syntax 
union operator commonly represented intersection negation 
lack consistency operators systems lack direct relationship meaning creates difficulties users 
problem systems nzdl world wide web www search engines lack responsiveness 
users locked cycle query refinement shown query specification result browsing distinct activities 
user receives feedback concerning effect query refinements new set results refined query returned 
delay returning results dependent network performance query complexity loading information server volume information searched 
may substantial 
users waste time effort forming queries return zero near zero matching documents large unmanageable numbers matching documents 
additionally receive indication query terms specify identify documents appropriate nature 
believe direct manipulation user interface exploits diagrammatic techniques query specification circumvent problems textual query languages 
visual query notations key advantages textual query languages syntactically demanding overcome english language boolean operator ambiguity 
suggest particularly effective graphical notation venn diagrams query refinement cycle 
illustrate sets relationships 
interface seamlessly integrated dynamically generated previews query results users supported applying efficient searching strategies currently possible 
section describe related 
provides evidence support venn diagrams query interfaces discusses dynamic query previews 
go describe context undertaken new zealand digital library 
describe detail vquery graphical user interface query specification venn diagrams provides dynamic query previews 
conclude discuss utility vquery outline plans 
related venn diagrams interface boolean query specification previous indicated venn diagrams effective metaphor help users specify boolean expressions 
halpin convincingly argues venn diagrams highly expressive represent broad range queries give clear picture meaning query provide simple means clarifying set comparisons mean 
long ago thomas studied interpretation generation venn diagrams view guiding design query systems 
describes graphical query language efforts exploit venn diagrams database querying software 
compared test textual boolean query language 
comparative study subjects times errors test 
just half errors test due incorrect syntax fifth due incorrect boolean operator 
syntactic errors possible half number incorrect operators test 
complex boolean expressions accurately represented test 
results confirmed studies 
davies willie carried comparative study venn diagram user interface simple query example tool qbe 
venn diagram query tool resulted fewer errors substantially faster specification queries positive user feedback 
fr compared boolean retrieval line manual textual query language venn diagrams 
venn diagram interface significantly faster produced significantly fewer errors textual query language 
times number syntactically incorrect queries produced textual language venn interface 
considered venn diagrams context users mental models information structures 
subjects study descriptions database operations contents adopted models model tables shallow set explanation deep set explanation 
set models explained venn diagrams 
results show venn diagram models effective subjects form complex queries requiring problem solving 
important aspect venn diagrams reported willie bruza 
identified set assembly set refinement techniques equally common subjects able formed venn diagrams 
set assembly intersections sets created overlapping circles 
set refinement circles wholly contained circles indicate intersections 
promising previous systems supported limited query complexity restricted query refinement process applied small structured data sets 
common infocrystal adopt simple query visualization provide dynamic querying support 
dynamic queries query previews concepts dynamic queries query previews support users effective query formulation 
dynamic queries principally concerned provision immediate feedback resulting query parameters 
shneiderman defines dynamic query involve interactive control user visual query parameters generate rapid looms update animated visual display database search results 
essence users see results query refinements 
reported advantages users gain sense control database patterns data quickly perceived new queries generated discovered incidental learning 
dynamic queries result tangible performance gains 
ahlberg subjects formed queries significantly faster dynamic queries text form fill query interface 
conventionally query parameters controlled slider user interface components slider corresponds attribute database searched 
computer technical user interface query type list tim words want boolean queries cn conn axe 
md pm fbr ln pa rc md tm 
leds school computer studies flk ch serc current nzdl interface showing query screen left results screen right 
problems approach highlighted fishkin stone 
particular queries involving conjunction terms possible dynamically 
number selectors consequently number possible queries fixed advance 
fishkin stone overcame restrictions dynamic queries movable filter windows expressing data values overlapped data space 
previous approaches deal structured databases predetermined attributes value ranges easily represented sliders 
concerned querying full text indexes consider concepts dynamic queries transferred domain 
query previews intended overcome problems users experience network performance data volume data complexity forming refining queries 
aim allow users reduce size set returned items manageable size query submitted network 
enables users avoid empty result sets overwhelmingly large result sets overhead executing queries network 
achieved allowing users specify rough ranges values rapid iterative query refinement 
response system immediate indicates size result set matching query 
order provide immediate response network overhead approach dependent database providers publishing accessible tables contents searchable databases 
tables contents small stored high speed storage enable dynamic querying 
drawbacks query preview approach adopted doan 
additionally preview interface displays number matching items user 
provides information support user determining relevance returned items key issue document retrieval 
dynamic queries query previews hold promise digital library user interfaces consider may implemented full text retrieval system 
new zealand digital library new zealand digital library nzdl freely accessible system www provides full text indexes collections documents 
computer science department university waikato 
collections freely available available specific user organisations 
freely available collections include independently published weekly line newsletter public domain literary works information relating peoples world computer science technical reports cstr 
cstr collection provides full text index approximately technical reports gathered sites world wide totalling gigabytes source text 
nzdl supports ranked boolean querying user interface boolean query specification address 
www information sources users required form combination terms operators particular syntax represent intended query 
intersection union complement operations supported www nzdl org vquery user interface showing query workspace left results preview window right 
represented respectively 
query terms phrases joined operators components complex expressions may grouped parentheses 
queries may refined options 
option granularity search 
example multiple terms may required appear report page paragraph 
options control stemming maximum number matching documents return 
possible weight terms expression stronger weaker effects documents returned 
sample query result screens shown 
developed graphical query interface application called vquery 
main objectives system provide alternative interface textual boolean query specification dynamically provide responses refinements queries support effective searching provision query result previews support reuse queries short term long term storage retrieval 
vquery alternative textual query interface currently nzdl 
conjunction nzdl moment easily portable digital library search engine applications operate www 
user inter ace shows vquery interface 
main components query window result preview window 
query window divided main areas 
top left query workspace 
window user organise query terms create boolean queries 
bottom left natural language query view text panel english interpretation current query displayed 
right 
workspace query manipulation 
query workspace large scrollable window fully expanded provides full screen workspace 
displays circles containing query terms may phrases single words 
circle may thought set documents containing term circle term number indicating documents set 
new term created typing word phrase term entry box control panel number terms added workspace unlimited 
circles selected currently moved resized standard pointing dragging device mouse 
multiple terms selected moved resized keyboard modifier 
selected terms removed delete key 
set assembly refinement representations supported terms overlap lion tiger fully contained terms cheetah jane 
workspace divided areas active query area rectangle labelled active query nonactive query area outside 
active rectangle contains terms user combining form query non active area acts storage area terms past may contribute current query 
terms dragged active area amend active query 
active query area moved resized dragging bounding rectangle providing second method inclusion exclusion terms 
arrangement term circles positioning active query area users create complex queries containing multiple terms combinations operators 
operation terms represented query selection intersection circles terms 
operation terms represented query selection circles terms area intersection 
term circles active area query selected combined terms operator 
query shown lion tiger jungle 
query selection terms transient fixed 
transient selection immediate previews results queries involving single terms operator required 
case user moves mouse pointer circle dot red interface appear centre indicating query formed jungle transiently selected 
results preview window updated contain documents contain term circle 
mouse pointer leaves circle dot removed document titles associated term removed results preview window 
mouse pointer moved intersection circles dot appears centre intersection circles joined lines represent association operation 
results preview window updated interface reverts prior state mouse pointer leaves intersection 
user satisfied component query query selection clicking circle intersection multiple circles 
case removed mouse pointer leaves selected region 
useful experimentation addition components base query necessary allow specification operator disjoint term circles 
fixed query selections removed second click region selection 
result previews 
result preview window contains label indicates documents match currently selected query list titles documents returned currently selected query 
distinction selection terms inclusion query query selection represented dots standard selection editing represented small black rectangles 
current query may refined transient selection fixed selection term deletion manipulation active query area instances result preview immediately updated reflect change 
single multiple selections items title list mouse keyboard modifier 
user double clicks selected items full text items retrieved nzdl displayed user 
query reinforcement 
natural language query view situated query workspace 
presents english language interpretation active query new users reinforces semantics visual notation provides feedback meaning selected query 
immediately updated active query amended 
simplistic transformation attempting reduce ambiguity english expression 
english versions boolean expressions inserted boilerplate text gives user instructions indicates collection queried 
comma separated lists terms operations multiple terms 
compound queries containing multiple term operation represented semi colon separated lists 
storage retrieval queries 
users provided utilities store retrieve vquery state query sessions 
save current state query workspace bookmark current state command accessible bookmarks menu 
selected user prompted supply textual label bookmark 
label added bookmarks menu 
limit number bookmarks created vquery session 
bookmark selected menu current workspace state replaced state time bookmark created 
replication state exact including size positioning selection components query workspace 
bookmark stored concise ascii file format 
persistent storage querying session supported 
commands save load sessions accessible file menu users prompted standard file selection dialogs name select sessions 
session bookmark files communicated vquery users queries results may shared people 
utilities 
control panel provides functions 
top right users enter new query terms text entry area 
return key pressed circle containing term appears query workspace 
text entry area radio buttons allow user select default display colour newly created terms 
circle text new terms displayed selected colour 
colour selection panel users select information source queried 
variety document collections nzdl currently displayed 
new information source selected natural language view immediately updated reflect change 
information sources vquery user interface nzdl collection full text inex document database browser interface vquery user browser nzdl 
single button submit query nzdl submits active query nzdl user www browser 
means user get standard html result format nzdl require 
vquery menu bar contains action menus file edit bookmarks menus accessing information vquery vquery help 
standard editing commands undo cut copy paste manipulating term circles query workspace provided accessed edit menu 
contains additional utilities saves user carrying common actions term term 
clear selections removes currently fixed selections query workspace second clear workspace removes term circles query workspace 
implementation architecture vquery implemented java application may place conjunction conventional nzdl user interface 
conventional www interface nzdl user creates textual query html forms submits 
query terms options form url invokes cgi script nzdl server appropriate parameters 
cgi script communicates full text indexing retrieval software set documents matching query formed 
document details inserted boilerplate html returned user browser display results submitted query 
indexing mechanism mg efficient high volumes information response user immediate due variables network performance data volume server loading query complexity 
provide dynamic result previews vquery communicates directly nzdl server allow display results standard nzdl format vquery communicates user www browser 
seen information source preview el ff mom ng mm display summa vquery user vquery dynamic query architecture upper portion 
user creates new query term background process started retrieve matching documents 
process connects nzdl server sending url representing query containing single term 
standard www browser matching documents returned html format 
background process parses html extracting details document titles number matching documents 
whilst place circle containing term placed query workspace user may continue manipulate terms 
results obtained number matching documents displayed term circle result preview window updated 
local caching information allows subsequent queries involving terms provide immediate feedback 
user submits query nzdl vquery take advantage nzdl display formatting user www browser directed load url matching query 
currently user netscape navigator microsoft intemet explorer way controlled external processes platform version dependent 
ideally vquery contain html browser window 
delay result retrieval conventional www access evident user vquery remains interactive 
usually time initial placing new term circle completed results returned 
result set associated term transient fixed queries created corresponding operations applied result sets terms involved providing list matching document titles display result preview window 
fact result set collection associated term user investigate result queries multiple collections 
currently achieve necessary produce parser results different collection result format differs collections 
supported new architecture nzdl working result retrieval standard format requiring single parser 
shows novel dynamic query architecture 
benefits information retrieval flexible incremental require users download preview tables created information providers allows rapid querying locally stored metadata provides immediate display query refinement results 
compare previous approaches 
model view controller architecture enable straightforward integration representations query result spaces 
bookmarks recalled session need retrieve results nzdl retained vquery duration session 
sessions recalled results retrieved nzdl term session 
nzdl collections may updated user previous session current holdings provided user 
discussion vquery implements visual representation query specification venn diagrams shown previous studies effective alternative common textual query interfaces 
representation diverges strict venn diagram notation previous studies users comfortable venn representation tend utilise strict representation 
representation supports set assembly set refinement techniques previous studies shown commonly 
limitations representation address 
instance boolean expressions represented vquery mainly support selection set 
context consider universal set documents collection 
consequently complement expressions involving complement single sets complement expressions unavailable users 
means users request documents contain single term complex expression 
boolean queries nzdl complement operator important provision vquery complete consistent 
consider best support vquery interface 
visual language queries intersection terms required 
difficult organise overlapping circles ellipses enable selection possible intersections 
queries nzdl terms important support user specification intersection terms 
approach may provide abstraction technique allows multiple query terms collapsed single graphical entity 
suggested responsible user errors design carefully considered 
dynamic result previews support efficient search refinement conventional interfaces 
conventional interfaces give indication query return empty large result sets results provided imposes delay 
vquery supports user deciding volume nature documents returned appropriate delay 
volume indicated inclusion number documents matching single terms term circles 
users immediately determine broader specific term consider synonym 
terms combined form query user determine query provide useful manageable number documents number matching documents indicated results preview window 
titles matching documents browsed determine nature results matches user requirements 
facilities users receive immediate feedback regarding efficacy queries formed 
flexibility query workspace provided previous diagrammatic query techniques 
hold active query terms user wishes put aside moment 
conventional nzdl interface interfaces similar services terms query visible time 
process query refinement takes place difficult users recall set query terms ways combined 
vquery query workspace serve external representation user short term memory 
flexible way term circles active query area moved resized provide easy inclusion exclusion terms encourages experimentation little cost user 
range terms query session recalled merely recognised reducing cognitive demands complex sequence queries refinements formed 
simple supportive facility allocation colour individual query terms 
allows users create visual prompts regarding terms workspace 
example user allocate particular colour terms related single concept 
alternatively user relate colour primary collection term searched 
facility save current state query session bookmarks encourages user experimentation queries knowing prior recoverable 
backtracking simplified states resulting backtracking evident reached backtracking html form interfaces 
bookmarking support investigation multiple threads queries session allow attention easily transferred thread 
facility save collections queries bookmarks persistent storage recognises users able carry exhaustive search meet information seeking goals single session 
reloading sessions reduces repeated effort commonly required standard query interfaces order return previous query session states 
user may wish maintain awareness particular topic identify new holdings 
immediate concern identification appropriate method universal set selection complete range boolean queries may expressed vquery 
provide abstraction mechanism allow relationships multiple terms represented single entity query workspace 
necessary determine errors reported introduced approach avoided 
primary concern comparative study conventional query language nzdl graphical approach adopted vquery 
interested comparative accuracy speed interfaces allowing user form queries match information seeking needs 
suitable sample queries identified allow comparison previous studies allow consideration utility diagrammatic representation flexible diagram layout storage retrieval queries natural language feedback dynamic previews 
acknowledgments developed elegant robust initial java implementation vquery prototypes implemented author enlightening user survey 

ahlberg williamson shneiderman dynamic queries information exploration implementation evaluation 
proceedings chi acm conference human factors computing systems monterey california usa may acm press pp 

bell moffat witten zobel mg retrieval system compressing space speed 
communications acm april 

lee cailliau luotonen nielsen secret world wide web 
communications acm august 

borgman user mental model information retrieval system experiment prototype online catalog 
international journal man machine studies 

borgman online catalogs hard 
journal american society information science 

applications programming smalltalk model view controller mvc 

davies willie efficacy venn query interface evaluation 
proceedings symposium bond university queensland australia august pp 
doan plaisant shneiderman query previews networked information systems case study nasa environmental data 
sigmod record 
fishkin stone enhanced dynamic queries movable filters 
proceedings chi acm conference human factors computing systems denver colorado usa may acm press pp 
greene devlin gomez ifs ands ors study database querying 
international journal man machine studies 
halpin venn diagrams sql queries 
australian computer journal 
browsing querying online documentation study user interfaces interaction process 
acm transactions computer human interaction 
jones dynamic query previews digital library 
proceedings digital libraries third acm conference digital libraries pittsburgh pa usa acm press 
jones graphical user interface boolean query specification 
working department computer science university waikato hamilton new zealand 
submitted international journal digital libraries 
effect different conceptual models reasoning database query writing task 
international journal man machine studies 
graphical presentation boolean expressions database query language design notes ergonomic evaluation 
behaviour information technology 
shneiderman dynamic queries visual information seeking 
ieee software 
infocrystal visual tool information retrieval 
proceedings visualization san jose california october ieee press pp 
thomas quantifiers question asking 
ibm research report ibm thomas watson research center yorktown heights new york 
willie bruza users models information space 
proceedings sigir th annual international acm sigir conference research development information retrieval seattle washington july pp 
witten new zealand digital library project 
new zealand libraries 
zloof query example 
ibm systems journal 
