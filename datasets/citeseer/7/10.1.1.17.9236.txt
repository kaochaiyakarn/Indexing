information extraction pattern discovery chia hui chang dept computer science information engineering national central university chung li taiwan tel chia csie edu tw research information extraction regards generation wrappers extract particular information semistructured web documents 
similar compiler generation extractor driver program accompanied generated extraction rule 
previous field aims learn extraction rules users training example 
propose system automatically discovers extraction rules web pages 
system automatically identify record boundary repeated pattern mining multiple sequence alignment 
discovery repeated patterns realized data structure call pat trees 
additionally repeated patterns extended pattern alignment comprehend record instances 
new track involves human effort content dependent heuristics 
experimental results show constructed extraction rules achieve percent extraction fourteen popular search engines 
keywords information extraction extraction rule pat tree multiple string alignment 
current web sites information various topics various formats 
great amount effort required user manually locate extract useful data web sites 
great need value added service integrates information multiple sources 
example customizable web information gathering robots crawlers comparison shopping agents meta search engines facilitate development information integration systems need tools information gathering extraction 
suppose data collected different web sites conventional approach extracting data various web pages write programs called wrappers extractors extract contents web pages priori knowledge format 
words observe extraction rules person write programs web site 
programming wrappers require manual coding generally entails extensive debugging labor intensive 
addition format web pages subject change maintaining wrapper expensive impractical 
copyright held author owner 
www may hong kong 
copyright acm 
shao chen lui dept computer science information engineering national central university chung li taiwan anyway db csie edu tw fortunately researchers built tools generate wrappers automatically 
example wien softmealy stalker famous works field 
similar scanner parser generator compilers users provide syntax grammar get transition tables scanner parser drivers wrapper construction systems output extraction rules training examples provided designer wrapper 
common idea involved machine learning techniques summarize extraction rules difference extractor architectures presumed system 
example single pass lr structure wien multi pass hierarchical structure stalker 
designer manually label training examples generating rules 
manual labeling general time consuming efficient 
researchers exploring new approaches fully automate wrapper construction 
users training examples 
example embley describe heuristic approach discover record boundaries web documents identifying candidate separator tags independent heuristics selecting consensus separator tag heuristic combination 
serious problem tag separator approach arises separator tag record boundary 
hand attempts eliminate human intervention pattern mining 
motivation observation useful information web page placed structure having particular alignment order 
particularly web pages produced search engines generally search results regular repetitive patterns 
mining repetitive patterns may discover extraction rules wrappers 
introduce information extraction system applying pattern discovery techniques 
section system overview including pattern viewer rule generator extractor module 
section details rule generator followed embodiment extractor section 
experimental results section section 
system overview system includes components extraction rule generator accepts input web page graphical user interface called pattern viewer shows repetitive patterns discovered extractor module extracts desired information similar web pages extraction rule chosen user 
html page token translator pat tree constructor validator rule composer extraction rules token string pat trees maximal repeats patterns 
extraction rule generator core techniques pattern mining implemented rule generator 
extraction rule generator includes translator pat tree constructor pattern discoverer pattern validator extraction rule composer 
results rule extractor extraction rules discovered web page 
graphical user interface enable users view information extracted extraction rule 
user selects target extraction rule conforming information desire extractor module extract information pages having similar structure input page 
referring flowchart rule extraction process shown 
flowchart presents overview mining process details follow target pattern extraction generated 
user submits html page translator receive html page translate string representations referred tokens 
token represented binary code fixed length pat tree constructor receives binary file construct pat tree 
pattern discoverer uses pat tree discover repetitive patterns called maximal repeats 
maximal repeats forwarded validator filters undesired patterns produces candidate patterns 
rule composer revises candidate pattern form extraction rule regular expression 
extraction rules discovered user may select candidate patterns target pattern contains desired information 
extractor receives target pattern web page input applies pattern matching algorithm recognize extract occurrences target pattern token sequence encoded web page 
extractor module linked information integration systems information extraction 
typical pattern matching algorithm example knuth morris pratt algorithm 
occurrence target pattern may represent desired data record desired data records form useful information block 

extraction rule generator motivation observation desired information web page placed structure having particular alignment forms repetitive patterns 
repetitive patterns may constitute extraction rules wrappers 
program discover repetitive patterns web page need abstraction mechanism translate html source distinguish display format translator pattern discovery algorithm find repetitive patterns 
repetitive patterns generally mean substring occurs twice encoded token string 
definition definitely include patterns fitting requisite 
define maximal repeats uniquely identify longest pattern follows 
definition input string define maximal repeat substring occurs distinct positions pk pi th token different pj th token pair called left maximal pi th token different pj th token pair called right maximal 
definition maximal repeats necessary identifying popular term repeats 
captures interesting repetitive structures clear way avoids generating overwhelming outputs 
maximal repeat represents 
maximal repeats verified validator filter interesting ones 
translator html tags basic components document presentation tags carry certain structure information intuitive examine tag token string formed html tags regard non tag text content tags single token called text 
tokens seen html page include tag tokens text tokens denoted html tag name text respectively 
example html tag token tag 
text text token includes contiguous text string located html tags 
tags tokens classified ways 
user choose classification depending desired level information extracted 
example tags body section document divided distinct groups block level tags text level tags 
defines structure document defines characteristics format style contents text 
classification block level tags text level tags shown 
block level tags divided different categories including headings text containers lists classifications tables forms 
text level tags similarly divided categories including logical markups physical markups special markups marking texts text block 
block level tags text level tags headings logical markup text containers pre address lists ul ol li dl dir menu div center form hr table br 
tag classification em strong dfn code samp kbd var cite physical markup tt strike big small sub sup font special markup img applet param map area different tag classifications allow different html translations generated 
different abstraction mechanisms different patterns produced 
example skipping text level tags result higher abstraction input web page tags included 
addition different patterns discovered extracted different encoding schemes translated 
experiment results indicate block level tags small percentage input size contain significant amount useful information shown section 
example translation process described simple web page contains lines html source code congo code congo br egypt br corresponding translation produced translator token string html text html html text html html br html text html html text html html br token encoded binary string length example suppose bits encode tokens congo code html html html html html br text encoded binary string token string congo code bits represents encoded string 
pat tree construction approach pattern discovery uses pat tree discover repeated patterns encoded token string 
pat tree patricia tree practical algorithm retrieve information coded alphanumeric constructed possible suffix strings 
patricia tree particular implementation compressed binary digital tree internal node tree branches zero goes left goes right 
suffix tree patricia tree stores data external nodes keeps integer bit index internal node indication bit branching 
character string indexing point suffix external nodes pat tree internal nodes 
tree size 
referring pat tree constructed encoded binary string congo example 
tree constructed fourteen sequences bits sequence bits starting encoded tokens extending token string 
sequence called semi infinite string short 
leaf external node represented square labeled number indicates starting position 
example leaf corresponds starts second token token string 
internal node represented circle labeled bit position encoded bit string 
bit position locating pat tree 
shown suffix strings prefix located subtree 
edge pat tree virtual edge label substring bit positions nodes 
example edge label node substring fifth bit ninth bit external node 
edges visited traversing downward root leaf form path leads corresponding leaf 
fact uniquely identify prefix formed concatenating edge labels path root corresponding leaf 
concatenated edge labels path form virtual path label 
example edge labels path leads root leaf form path label unique prefix 
pat tree shown depicted understanding 
implementation pointers internal node 
index bit distinguish branches zero goes left goes right 
edges labeled dollar sign indication string 
edge uses right link pointed internal node 
construction phase sistrings inserted 
insert search pat tree find proper node distinguish sistrings 
implementation requires time optimal algorithm described gusfield book chapter linear binary tree store character string character suffixes need indexed bit suffixes 
binary trees advantage simpler implementation 
pattern discoverer leaves subtree share common prefix path label path leads root root subtree 
path label internal node represents repeated sequence input 
discover repetitive patterns discoverer needs examine path labels determine maximal repeats 
internal node pat tree indicates branch implies different bit immediately common prefix suffixes 
path label right maximal 
path label internal node left maximal leaves subtree different left characters 
call node left diverse 
followed definition property 
pat tree congo code left diverse propagates upward maximal repeats linear time lemma 
lemma path labels internal node pat tree maximal repeat left diverse 
essence pat tree binary suffix tree applied research fields pattern discovery 
example kurtz suffix trees bioinformatics finding repeated substring genome 
pat trees applied indexing field information retrieval long time ago 
chinese keyword extraction simpler implementation suffix trees great power pattern discovery 
application information extraction interested repeats repeats appear regularly vicinity 
recording occurrence counts positions leaf nodes pat tree easily know times pattern repeated occurs 
pattern length occurrence count traverse pat tree enumerate maximal repeats 
example find patterns length greater tokens 
token encoded bits discoverer needs consider internal nodes index bit greater 
node qualified 
path labels respective token representations candidates useful repetitive patterns 
applying definition maximal repeat congo example node qualifies left diverse left tokens leaves rooted node token 
example sistrings rooted node token text 
token representation corresponding maximal repeat html text html html text html html br 
maximal repeats reduces amount unnecessary output produced discoverer 
process discovering maximal repeats number occurrences repeat respective positions input sequence easily derived validator 
example path label node maximal repeat subtree having node root contains leaves leaf leaf 
leaves represent sistrings share maximal repeat common prefix number occurrences positions maximal repeat input input token sequence 
pattern validator congo source code simple example shows maximal repeat discovered input 
typical web page usually contains large number maximal repeats contain useful information 
eliminate undesired maximal repeats uses validator determine maximal repeats contain useful information 
addition occurrence frequency pattern length maximal repeat validator employs number criteria including regularity compactness coverage 
user may choose criteria multiples combination 
criteria threshold default value determined user 
suppose maximal repeat ordered position suffix pk pi denotes position suffix encoded token sequence define regularity compactness coverage follows 
regularity pattern measured computing standard deviation interval adjacent occurrences pi pi 
sequence spacing adjacent occurrences pk pk 
regularity maximal repeat equal standard derivation sequence divided mean sequence 
commonly bound regularity 
compactness measure density maximal repeat 
eliminate maximal repeats scattered far apart bound 
example maximal repeat previous paragraph density defined pk length number tokens 
criterion compactness requires maximal repeats density greater bound default qualified extraction 
coverage measures volume content maximal repeat 
suppose function returns position ith input web page number bytes 
coverage defined pk webpage webpage number bytes input web page 
measures proposed information extract regular contiguous format 
ideally extraction pattern regularity equal zero density equal large coverage 
filter potentially patterns simple approach threshold measures 
patterns regularity regularity threshold density density thresholds considered candidate extraction patterns 
additionally see candidate maximal repeat useful 
example patterns contain text tokens avail users 
utilized regularity compactness filter discovered patterns 
measures coverage measure patterns fitness pattern ranking 
validation proceeds follows discovered maximal repeats regularity regularity threshold considered potential forwarded rule composer density greater patterns density discarded 
patterns regularity greater special care taken partition module described 
occurrence partition regularity threshold extract information placed structure having particular alignment order 
examples lycos discussed pattern target information occurs blocks web pages forms information blocks regularity large measured instances pattern 
regularity occurrences single block small 
idea partition occurrences segments analyze partition respectively 
handle web pages occurrences pattern carefully segmented see partition pattern occurrences satisfies requirement regularity 
generally regularity pattern computed occurrences pattern 
example occurrences intervals adjacent instances statistics compute standard deviation mean 
partition occurrences occurrences sorted position 
gi denote ordered occurrences pi pi pj initialize variables 
instance pj regularity gs greater consider cs partition assign pseudo code follows partition includes occurrences minimum count regularity threshold pattern occurrences partition 
note threshold set smaller value close zero control number patterns 
modification web pages lycos easily handled 
rule composer main application pat tree domain exact match 
allow inexact approximate matching matching errors permitted technique multiple string alignment borrowed extend discovered exact repeats 
idea find presentation critical common features multiple strings 
example suppose adc discovered pattern token string 
multiple alignment strings extraction pattern generalized adc cover examples represents missing character 
specifically pattern occurrence pk encoded token string 
string pi denote string starting pi pi 
problem transformed find multiple alignment strings pk generalized pattern extract records need 
multiple string comparison natural generalization alignment strings solved dynamic programming string lengths 
extending dynamic programming multiple string alignment yields algorithm 
approximation algorithm score multiple alignment greater twice score optimal multiple alignment see chapter 
approximation algorithm starts computing center string sc strings minimizes consensus error pi sc pi 
center string string iteratively aligned center string construct multiple alignment turn construct extraction pattern 
pattern density center star approximation algorithm multiple string alignment applied generalize extraction pattern 
note success regularity gs regularity gs gs endif endif approach lies assumption contiguous repeats 
alignment substrings adjacent occurrences results extraction rules alternatives positions alignment ignored 
cases original maximal repeats kept aligned patterns 
problem regarding aligned extraction pattern pattern necessarily located boundary information record 
suppose generalized extraction pattern expressed cn ci symbol symbol set indicating symbols appear position subset 
actual starting position record cj correct extraction pattern cj cnc cj 
additional step taken consider cj cnc cj pattern need 
generally position symbol 
extraction patterns tags dl dt tr tags br hr guide generate possible extraction rules 
disadvantage large number patterns produced rule generation step 

extractor extraction rules constructed user may select pattern viewer target patterns contain desired information 
demonstration pattern viewer patterns discovered savvysearch 
upper frame shows patterns discovered lower frame shows detail measures selected pattern 
selected pattern forwarded extractor pattern recognition extraction 
screen shot extracted data double click pattern shown 
extractor implemented module linked information integration systems 
ways complete extraction depending pat tree available input web page 
extractor search pat tree find occurrences extraction pattern 
extractor apply pattern matching algorithm recognize extract occurrences target pattern translated token string unseen web pages 
searching pat fast subtree pat tree sistrings common prefix 
allows efficient linear time solutions complex string search problem 
example string prefix searching proximity searching range searching regular expression search tags include table td ul ol li dd 

pattern viewer 
screen shot data extracted hand pattern extract unseen web pages pat tree constructed pattern matching algorithms applied 
typical pattern matching algorithms example knuth morris pratt algorithm boyer moore algorithm 
alternatively extraction rule expressed regular expression concatenation alternative easier construct finite state machine extraction rule 
note extraction rule composed multiple string alignment represents patterns 
alternatives state non deterministic finite state machine 
patterns apply matching rule translated token sequence 
cases longest match considered 
example extracting occurrences rule ab string find occurrences abab 
input extractor module web pages extracted selected rule encoding scheme discover extraction rule 
extractor module translates web pages encoding scheme specified 
addition encoded token string record starting positions source web page token 
occurrences pattern encoded token string corresponding positions web pages counted 

experiments extraction results rule evaluated retrieval rate accuracy rate 
retrieval rate defined ratio number desired data records enumerated maximal repeat number desired data records contained input text 
accuracy rate defined ratio number desired data records enumerated maximal repeat number occurrences maximal repeat 
data record said enumerated maximal repeat matching percentage greater bound determined user 
matching percentage pattern may contain portion data record 
example suppose input text contains desired data records maximal repeat occurs times enumerates 
retrieval rate accuracy rate 
higher retrieval rate indicates records extracted 
show number maximal repeats validated system fourteen state art search engines web pages 
number validated maximal repeats indicator extraction result 
number validated maximal repeats maximal repeat target pattern 
number maximal repeats increased implies great variance records discovered maximal repeat captures part target information block 
table 
number maximal repeats validated search maximal regularity density engine repeats altavista cora excite galaxy hotbot infoseek lycos magellan metacrawler northernlight savvysearch com webcrawler average control parameters affect number maximal repeats validated including regularity threshold density thresholds minimum length frequency pattern encoding scheme effect different encoding schemes discussed section 
experiment tag encoding scheme 
table shows number maximal repeats validated regularity smaller density 
thresholds decided empirically include patterns possible 
effect various regularity density thresholds shown fixed minimum length minimum frequency requirements set respectively 
patterns density 
number patterns validated encoding scheme experiments previous section encoding scheme tag classes involved translation tag translated corresponding token class 
section additional encoding schemes conducted skip logical physical special text level tags respectively 
example second encoding scheme skips physical markups including tt space limitation show average performance encoding schemes 
table show comparison length translated token string 
basically higher abstraction level shorter length 
table shows performance comparison encoding schemes 
note patterns evaluated maximal repeats past validation criteria 
effects occurrence partition multiple string alignment discussed 
results encoding scheme shown logical markups html files difference obvious tag encoding schemes 
second encoding scheme performance increased cora metacrawler savvysearch third encoding scheme matching percentage increased cora excite metacrawler 
encoding scheme skipping markups tags enables display extraction pattern search engines may disable patterns web sites especially pattern gets shorter tokens 
high level abstraction better performance average 
experimental results indicate block level tags skipping text level tags small percentage input size contain significant amount useful information 
experiment size token string having block level tags percent input size table extraction result obtained token string extract percent desired information block table 
note block level encoding scheme performance increased search engine lycos 
lycos decreased performance maximal repeats occur blocks regularity greater block level encoding scheme 
conclude block level encoding scheme performs best 
addition token string block level encoding scheme percent bytes original html file kb average 
table 
size translated sequences number patterns encoding scheme size translated sequences 
patterns discovered tag physical special block level table 
comparison different encoding schemes encoding scheme retrieval rate accuracy rate matching percentage tag physical special block level occurrence partition multiple string alignment block level encoding scheme better abstraction input web page experiments encoding show effect multiple string alignment segmentation 
discussed block level encoding scheme discovers patterns lycos regularity greater default threshold 
larger threshold keep patterns may include irregular patterns 
occurrence partition hand provides opportunity resume patterns larger threshold reserve information blocks really small threshold 
additional step occurrence segmentation successfully partition instances blocks discover patterns 
performance greatly increased retrieval rate accuracy rate table 
number patterns increased lot web sites lycos 
table shows help multiple string alignment performance improved retrieval rate accuracy rate matching percentage 
high percentage retrieval rate pretty encouraging 
matching percentage higher terms text content retrieved 
web sites matching percentage greater text contents successfully extracted 
accuracy rate 
extraction pattern generalized multiple alignment may comprehend information need extractor may extract desired information 
detail performance web site shown table 
table 
effect segmentation method retrieval accuracy matching rate rate percentage block level encoding occurrence segmentation multiple string alignment table 
performance multiple string alignment search retrieval accuracy matching engine rate rate percentage altavista cora excite galaxy hotbot infoseek lycos magellan metacrawler northernlight savvysearch com webcrawler average 
summary core technique information extraction discovery extraction rules 
earlier extraction rules learned training examples 
unsupervised approach pattern discovery 
propose application pat trees pattern discovery encoded token string web pages 
discovered maximal repeats filtered measures regularity compactness 
basic pattern discovery module occurrence partition multiple string alignment extract records block level encoding scheme 
parameters thresholds regularity compactness controlled keep patterns filter useless patterns 
patterns regularity greater default threshold occurrence partition applied segment occurrences blocks 
additional step help solve cases lycos pattern scatters blocks large regularity 
higher threshold reserve patterns may include irregular patterns 
occurrence partition hand provides opportunity resume patterns greater threshold default reserve information blocks really small threshold 
despite pat trees efficiency exact string problems inexact string problems ubiquitous 
multiple string alignment applied patterns generalize multiple records express extraction rule regular expressions 
experiments extraction rule generalized multiple string alignment achieve retrieval rate accuracy rate high matching percentage 
process requires human intervention training example 
takes minutes extract web pages 
comparing algorithm approach quick effective 

sponsored national science council taiwan nsc 
lee feng chien ming lee jung liang chen providing pat tree code 

chang lui wu applying pattern mining web information extraction 
proceedings fifth pacific asia conference knowledge discovery data mining apr hong kong 
chien pat tree keyword extraction chinese information retrieval 
proceedings th annual international acm sigir conference research development information retrieval 
pp 


doorenbos etzioni weld scalable comparison shopping agent world wide web 
proceedings international conference autonomous agents 
pp 
newyork ny acm press 
embley jiang ng 

discovery web documents 
proceedings acm sigmod international conference management data sigmod 
pp 
philadelphia pennsylvania 
gonnet baeza yates snider 
new indices text pat trees pat arrays 
information retrieval data structures algorithms prentice hall 
gusfield 
algorithms strings tree sequence cambridge 

hsu dung 

generating finite state transducers semi structured data extraction web 
information systems 

knoblock eds 

proceedings workshop ai information integration menlo park california 
aaai press 
kurtz 
fast computation maximal repeats complete genomes 
bioinformatics 
kushmerick 
web 
ieee intelligent systems 
kushmerick weld doorenbos 
wrapper induction information extraction 
proceedings th international joint conference artificial intelligence ijcai 
morrison journal acm pp 

muslea minton knoblock 
hierarchical approach wrapper induction 
proceedings rd international conference autonomous agents agents seattle wa 
muslea 
extraction patterns information extraction tasks survey 
proceedings aaai workshop extraction machine learning information sedgewick algorithms addison wesley 
