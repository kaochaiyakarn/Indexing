efficient simple encodings web graph 
jean guillaume liafa paris case place jussieu paris france guillaume liafa fr latapy projet inria rocquencourt le chesnay france latapy liafa fr laurent viennot projet inria rocquencourt le chesnay france laurent viennot inria fr propose set simple efficient methods standard free widely available tools store manipulate large sets urls large parts web graph 
aim store efficiently urls list graph order manage computations computer central memory 
want conversion urls identifiers fast possible obtain successors url web graph efficiently 
methods propose possible obtain compromise challenges possible manipulate large parts web graph 
keywords web graph web links urls compression 

view web graph vertices web pages edges hyperlinks page 
understanding structure graph key challenge important applications 
information retrieval optimized crawling enhanced browsing 
step study web graph able store manipulate efficiently space time terms 
key element encoding associate unique identifier url encode graph 
urls bytes long average vertex average outdegree power law distribution depending considered domain 
storing vertices subgraph web graph compression need mb memory 
concerned web graph important deal bigger graphs classically hundreds millions vertices 
encoding graph crucial issue 
challenge find balance space time requirements 
aim provide simple solution standard free widely available tools sort gzip 
tested methods millions vertices millions links crawl performed crawler inside fr millions urls edu millions urls domains november 
may considered relatively small set data representative web graph consistent known statistics 
experiments compaq tm workstation ap mhz pentium tm iii processor gb memory linux kernel 
obtained encoding url bytes average conversion urls identifiers directions way links compressed byte average immediate access lower improved byte allows slower access 
describe section method associate unique identifier url lexicographical order 
show compress urls set obtain fast conversion urls identifiers 
section notice properties graph concerning notion distance vertices successors 
properties explain results obtained compress graph 
different opposite discussed concerning compression optimizes space optimizes access time 
urls encoding large set urls want associate unique identifier integer url provide function mapping identifiers urls 
simple idea consists sorting urls lexicographically 
url identifier position set sorted urls 
see choice identifier possible obtain encoding 
consider file containing large set urls obtained crawl 
notice sorting file improves compression increases local redundancy data obtained average bytes url sort ing bytes unsorted urls average bytes sorting 
compression method inefficient terms lookup time converts url identifier conversely uncompress entire file 
hand random access compression schemes exist compression rate lower problem 
solution consists file blocks compressing independently 
save way large amount time block uncompressed achieve mapping 
urls sorted ones share long common prefixes block damage compression rate 
experimentally average size compressed url significantly increases long blocks length stays urls 
case url average size bytes long 
blocks urls average size grows bytes long 
notice method improved blocks different sizes depending local redundancy urls list see 
convert url identifier follows 
find block contains url convert search knowledge url block 

uncompress block 

find identifier url inside uncompressed block linear search list 
conversely convert identifier url follows 
find block contains identifier convert block number identifier 
uncompress block 

find url uncompressed block line number identifier block 
notice third step conversions implies linear search block 
improve add urls block occurrences special character necessary long longest url block 
block fixed length length longest url 
third point url identifier conversion search block third point identifier url conversion done constant time url position identifier block 
optimization done carefully ensure compression urls fast expansion step 
blocks size low compression rate naturally low 
opposite size important probability long url lies file increase adding lot unused character going increase average url size 
expansion time linear respect blocks length small blocks possible get fast mapping 
median blocks length result compression rate median expansion speed 
results showing phenomena 
obtained coding urls bytes average conversion urls identifiers directions 
coding associates url position entire list respect lexicographic order 
see encoding represent large parts web graph 
average conversion tme ms average url size bytes average url size conversion times respect size considered blocks fixed length urls 
graph encoding soon mapping urls identifiers defined try compress links possible 
link defined couple integers identifier url defined section 
graph stored file line number contains identifiers successors vertex textual form 
compress file obtain compact encoding byte link average 
values may considered lower bounds space needed represent link 
kind block compression previous section obtain encoding link byte average lookup time ms lines blocks 
operations graph concern exploration successors predecessors vertices breadth search instance 
case successors lookup time crucial parameter encoding improved terms time 
going compression method uses strong property web graph locality improve lookup time 
le le distance distribution power law 
distance distribution vertices successors 
define distance urls signed difference identifiers length link urls unsigned distance urls 
consider distances distribution 
distribution follows power law probability distance vertices proportional 
see 
experiments show percent urls linked distance 
call links short links 
encoded byte plus bit sign difference 
going distinguish short links encoded byte medium links percent links encoded bytes long percent links encoded bytes links 
bit link give sign distance prefix know type link short links medium links long links 
average link size average lookup time successors identifiers bytes identifiers byte distances bytes distances byte identifiers byte ms blocks lines short medium byte long links short byte medium long links table average space needed store link depending method 
lines just serve imply low compression ratio slow elementary operations 
way link stored byte average 
huffman compression short links bit save 

described simple efficient method encode large sets urls large parts web graph 
gave way compute position url sorted list considered urls conversely possible manipulate large data sets ram avoiding disk usage 
encoding conversion identifiers urls takes computer directions finding successors url takes ms improve link lookup second method proposed increase space requirements 
obtained results comparable best results known literature standard free widely available tools sort gzip 
notice performances method rely performances tools advantage strongly optimized 
emphasize fact method scalable relies local properties list urls remain true independently size considered crawl 
albert jeong 
barabasi diameter world wide web nature 
krishna bharat andrei broder monika henzinger kumar suresh venkatasubramanian connectivity server fast access linkage informa tion web computer networks isdn systems 
broder kumar maghoul raghavan rajagopalan stata tomkins wiener graph structure web www computer networks 
deutsch deflate compressed data format specification version aladdin enterprises may rfc 
gzip file format specification version aladdin enterprises may rfc 
text compression random access 
home page 
sourceforge 
eng 
html 
kleinberg kumar raghavan rajagopalan tomkins web graph measurements models methods proc 
th annual int 
conf 
computing combinatorics cocoon asano imai lee nakano eds springer verlag 
wayne wolf random access decompression binary arithmetic coding data compression conference pp 

rajiv raymie stata janet wiener link compression connectivity server tech 
report compaq systems research center 
