opportunistic global path planner john canny ming lin describe robot path planning algorithm constructs global skeleton free space incremental local methods 
curves skeleton loci maxima arti cial potential eld directly proportional distance robot obstacles 
method advantage fast convergence local methods uncluttered environments deterministic cient method escaping local extremal points potential function 
rst describe general roadmap algorithm con guration spaces dimension describe speci applications algorithm robots degrees freedom 
key words obstacle avoidance global path planner roadmap algorithm robot motion planning arti cial potential field 
research supported packard foundation fellowship nsf presidential young investigator number iri department computer science evans hall university california berkeley ca usa 
email jfc robotics berkeley edu department electrical engineering computer science cory hall box university california berkeley ca usa 
email robotics berkeley edu major approaches motion planning manipulators local methods arti cial potential eld methods usually fast guaranteed nd path ii global methods rst roadmap algorithm guaranteed nd path may spend long time doing 
algorithm characteristics 
method incremental construction skeleton free space 
potential eld methods curves skeleton locally maximizes certain potential function varies distance obstacles 
roadmap algorithm skeleton computed incrementally guaranteed contain path con gurations exists 
size skeleton worst case comparable worst case size roadmap 
local methods algorithm gets trapped local extremal points 
roadmap algorithm incremental algorithm take advantage non worst case environment 
complexity roadmap came need take recursive slices con guration space 
incremental algorithm slices taken initial search fails bridge free space linking channels 
new algorithm longer recursive bridges computed directly hill climbing bridges built near interesting critical points ection points 
conditions bridge quite strict 
possible candidate critical points locally checked slice taken 
expect slices required typical environments 
fact stronger statement completeness algorithm 
skeleton algorithm computes eventually contains paths homotopic paths free space 
computed slices bridges complete description free space purposes path planning 
course want nd path joining points algorithm soon path 
tracing individual skeleton curves simple task expect done real time robot control hardware arti cial potential eld algorithms 
robot may backtrack pass bridge worthwhile search 
readers familiar roadmap algorithm description may help understanding new method con guration space construct hypersurface graph potential function xk potential hypersurface set points form xk xk 
skeleton de ne subset roadmap sense hypersurface 
builds considerable volume global motion planning methods local planners 
method shares common theme latombe attempts local potential eld planner speed procedure escaping local maxima 
latombe method local method global taken global method roadmap algorithm local opportunistic way compute 
starting completely di erent similarities 
freeways resemble valleys intuitively described 
main di erence method method guaranteed reasonably cient method escaping local potential extremal points potential function computed con guration space 
organized follows section contains simple general description roadmaps 
description deliberately ignores details things distance function algorithm function 
section gives particulars application arti cial potential elds 
section describes incremental algorithm rst robots degrees freedom degrees freedom 
maximum clearance roadmap algorithm denote space con gurations robot cs 
example rotary joint robot joints con guration space cs set joint angle tuples 
set con gurations robot overlaps obstacle con guration space obstacle set free non overlapping con gurations fp described fp bounded algebraic hypersurfaces parameters ti standard substitution ti tan 
result needed complexity bounds need 
roadmap dimensional subset fp guaranteed connected connected 
roadmaps described detail shown computed time log robot degrees freedom free space de ned polynomial constraints degree 
may large applications cases free space simpler worst case complexity iso 
exploit simplicity maximum extend possibly 
results suggest practice free space usually simpler worst case bounds 
describe method aimed getting minimal description connectivity particular free space 
original description roadmaps quite technical intricate 
give formal hopefully intuitive description 
de nitions suppose cs coordinates xk 
slice slice hyperplane similarly slicing fp hyperplane gives set denoted 
algorithm key notion channel de ne channel slice free space fp connected component slice 
term channel slice sets precursors channels 
construct channel channel slices vary interval 
values happens connected components change shape continuously 
increases nite number values called critical values topological change 
events signi cant topology component cross section changes important events increases connected component may appear disappear components may join single component may split 
points joins splits occur called interesting critical points 
de ne channel maximal connected union channels schematized con guration space partition free space channels 
cross sections contains image interesting critical points 
notation fpj mean subset fp channel fp connected component containing splits joins maximality contained connected component containing splits joins proper superset 
see fig 
example channels 
property splits joins stated way 
maximal connected set cj fpj channel subset cj connected 
general roadmap heart method 
roadmap components freeways called silhouette curves ii bridges called linking curves 
freeway connected dimensional subset channel forms backbone channel 
key properties freeway span channel adjacent channels 
freeway spans range values channels freeway channel cj points coordinates range 
freeway meets freeway endpoints 
cj endpoint freeway cj meet endpoint freeway ofc 
technically intervals open word endpoint replaced limit point general speci method computing freeway curves chosen may freeways channel 
example rest freeways de ned arti cial potential functions directly proportional distance obstacles 
case freeway locus local maxima potential slices fp varies 
locus mayhave critical points shall see freeway curves extended easily past 
may local potential maxima slice mayhave disjoint freeway curves single channel incremental roadmap construction perfectly ok bridges 
bridge dimensional set links freeways channels just joined split increases 
suppose channels joined single channel shown fig 

know freeways continue freeway curves 
freeways guaranteed connect 
know de nition connected slice slice critical point add linking curves critical point freeway point 
matter freeway point freeway curves inside channels connected channel show appendix adding bridges guarantee channels meet points freeways connected 
show channels meet freeways bridges wehave shown roadmap union freeways bridges connected 
proof intuitive result simple bridge channels joining channel bridge curve 
freeways inductive argument nite number channels appendix basic structure general roadmap algorithm follows 
start tracing freeway curve start con guration goal 

curves leading start goal connected enumerate split join point add bridge curve near split join coordinate slice slightly greater joint point join slightly split 

find points bridge curve lie freeways trace freeways 
go step 
algorithm terminates step start goal connected case algorithm signals success returns connecting path runs split join points case path connecting start goal 
description quite sections give detailed description approach dimensional con guration spaces 
things distinguish new algorithm previous roadmap algorithm 
important new algorithm recursive 
step involves adding bridge curve pieces curve hill climbing potential 
original roadmap algorithm linking curves de ned recursively possible hill maximum algebraic curve 
di erence freeways necessarily lie near boundary free space 
implementation fact maximum clearance freeways 
important di erence enumerate true split join points 
robot degrees freedom environment complexity shown potential split join points 
please refer appendix ii proof upper bound maximum number interesting critical points 
experiments implemented planners years shown number true splits joins typical con guration spaces lower 
new algorithm purely local test potential split join point see really quali ed 
vast majority candidates expect far fewer bridges required 
de nition point interesting critical point neighborhood holds intersection consists connected components su ciently small generalized split point 
ii intersection consists components su ciently small generalized join point 
assume environment generic special topology small perturbation change clearance paths 
true practical situations obstacles reasonably large interior small perturbation ect obstacle con guration space 
transversality condition general position assumptions interesting critical points computed follows 
set de ned inequalities boundary union surfaces various dimensions 
surface de ned intersection con guration space constraint surfaces 
equation form fi 
nd critical points surface function rst de ne polynomial follows solve system lx xk number equations zero xk coordinates orthogonal nitesimal simplify computation see 
shown solutions interest recovered lowest degree coe cient resultant system 
normally involves computing symbolic determinant polynomial 
practical approach recover lowest coe cient straight line program representations di erentiating 
enumerate interesting critical points computationally expensive solve systems non linear equations 
plan experiment randomly chosen slice values bounded ranges alternating slices taken true split join points 
rationale practice range slice values bridge joins freeways typically quite large 
probability nding value range random values 
occasionally wide range slice values particular bridge irrelevant split join points may values outside range 
sure easy problems harder implementation alternates slices taken near true split join points slices taken random values 
de ning distance function idea approach construct potential eld point robot con guration space away obstacles 
goal position description environment manipulator move maximum potential path arti cial potential eld 
position reached represents critical point linked bridge nearest maximum obstacles represent repulsive surfaces manipulator parts 
denote obstacles position arti cial potential eld uart induces arti cial repulsion surface obstacles 
uart non negative function value tends zero part robot approaches obstacle 
classical analytical potential elds euclidean distance function 
shortest distance obstacle wehave proposed potential eld uart uart min ij oi lj oi lj shortest euclidean distance obstacle oi link lj robot con guration oi lj obtained local method fast computation distance convex polyhedra 
notice proposed uart continuously di erentiable function potential eld methods 
uart continuous di erentiable 
perfectly right application roadmap algorithm 
fact lower envelope smooth functions 
better means local maxima occur function smooth sharply de ned 
graph distance function certainly strati cation nite number smooth pieces 
maxima union certain local maxima smooth pieces 
system equations de ned earlier nd 
scheme manipulator moves away maximize arti cial potential eld uart 
local method just curve maxima guaranteed reach goal 
need bridges 
algorithm details algorithm takes input geometric description robot links obstacles convex polyhedra unions convex polyhedra 
takes initial goal con gurations kinematic description robot say parameters 
output path initial goal con gurations represented sequence closely spaced points closely space distance nearest obstacle point assuming path exists 
path algorithm eventually discover output path 
potential function map uart cs graph function surface cs denote coordinate axes roadmap algorithm xes follows extremal points direction value varies 
new algorithm di ers original roadmap algorithm respects construct entire roadmap new algorithm xi xi cs coordinates height potential function 
original xi xj xi xj cs coordinates 
original roadmap algorithm xes xi coordinate follows extremal points maxima minima saddles xj generate silhouette curves 
hand new algorithm xes xi follows maxima new algorithm recursive 
recursion necessary original single algebraic curve connects arbitrary point extremum new algorithm uses numerical hill climbing limitation 
freeways bridges roadmap major components freeways bridges 
generated freeway tracing done tracking locus local maxima distance slice normal sweeping direction 
small steps sweep direction local maxima recomputed numerically 
freeway tracing continues directions freeway terminates ways freeway runs ection point point curve tangent orthogonal sweep direction 
possible continue past points adding bridge 
freeway runs obstacle 
normal termination tracing simply stops algorithm backtracks 
bridges ection points critical points terminate freeway points slice 
algorithm simply follows gradient potential function start point slice reaches local maximum freeway point 
enumeration critical points critical points calculated section 
critical points interesting 
check locally critical points see qualify split join 
test checks point neighborhood saddle 
orientations boundary surface normals critical point 
random slicing optionally user may wish add roadmaps randomly chosen slices calculating critical points calculating course completeness lost 
recursive procedure involves choosing value random making recursive call algorithm slice 
random slicing may slice leads depth recursion tree 
done search heuristics added guide choice tree slice child added 
heuristic needs trade random slicing critical point enumeration 
goal heuristic enumerate random slices algorithm chance success easy environments intuitively large passages channels having explore critical points 
nd way di cult environment critical slices having wasted time random slices 
general outline algorithm give instantiation detailed description applied 
dimensional workspace starting initial position pinit cs rst axes cs take coordinate slice coordinate pinit 
search slice nd nearest local maximum 
local maximum freeway point 
build bridge point pinit local maximum 
time tracing freeway curve goal 
goal maximum contour potential eld build bridge link nearest local maximum 
trace locus local maximum varies reach endpoint 
current position curve isthe goal terminate procedure 
verify dead ection point slice 
see fig 
point ection continue curve slice neighborhood ection point hill climbing gradient direction near ection point 
search necessarily inflect inflect portion silhouette curve cs slice projection plane pictorial example ection point incs vs view slice takes local maximum 
fig 
demonstrates algorithm works cs 
diagram projection constructed potential eld cs plane cs 
shaded area con guration space 
solid curves represent contour maximum potential dashed curves represent minima 
furthermore path generated planner indicated arrows 
addition vertical lines symbolize channel slices interesting critical points ection points 
procedure taken endpoints freeway terminate dead ends point necessary take slice value planner generates random values slices uniformly spaced distribution span freeway enumeration interesting critical points 
speci ed number random values planner fails nd connecting path nearby local maximum take slice inter critical point init inflection point boundary critical points boundary bridge silhouette freeway inflection point example algorithm workspace critical point 
slice dimensional forms bridge curve piece 
call procedure repeatedly reach goal position enumerated interesting critical points 
algorithm described schematically algorithm procedure environment pinit pinit explore pinit explore return false random range coord crit pt function explore trace curve search gradient near new new checks curve trace trace curve output points ection explore ection explore ection checks ection point explore function coordinate function generates points slice explore maxima slice 
old pt nd pt coordinate nd pt nd points coordinate 
reaches maximum 
new pt null pt old pt search pt pair points pts new pt new pt pt new pt explore pt dimensional workspace dimensional workspace construction quite similar 
starting initial position pinit goal rst axis trace start point local maximum distance plane containing start point 
follow local maximum steps curve terminates ection point reach maximum direction potential gradient just ection point inx eventually expect terminate running obstacle 
wish enumerate critical point bridge curve rst segment get pinit freeway 
trace critical point direction gradient current slice 
directions outward critical point distance increases 
follow gives bridge curve linking freeways distinct channels 
decide random slicing select slice normal axis call algorithm section slice 
require produce roadmap containing freeway points far lie slice 
algorithm may take random slices need limit total number random slices taken enumerate interesting critical point random slicing dominate running time 
path optimization solution path obtained plan smooth classical principles variational calculus solve classical points boundary value problem 
basically minimize potential function distance smoothness nd locally optimal smooth path 
arc path re ned sequence points space shortest euclidean distance point robot obstacle curvature path point 
cost function path optimization want minimize ds functions point pi point sequence adjustment constants 
gradient function respect point pi gives direction improved locally optimal path 
done manner sequence points pk want minimize cost function pi si pi de ned pi sij pi sij si pi pi pi pi pi pi sij gradient pi wehave rg pi pi rr pi sij pi pi sij expensive procedure computing gradient compute distance point 
incremental distance calculation algorithm described compute distance robot closest obstacle constant time 
computation sequence points computation time iteration smooth curve traced planner linear total number points sequence 
iterations computing gradient summation eqn solution path eventually smooth locally optimal 
complexity bound planner probably need explore critical points bound reduced nding interesting critical points adding bridge helps reach goal 
number obstacle features faces edges vertices environment con guration space number interesting critical points 
mentioned earlier algorithm longer recursive calculating critical points linking curves bridges complexity bound calculated apply 
please refer appendix ii details 
summary discussion maxima designed potential eld slice projections critical points random values approach builds incrementally obstacle avoiding path guide robot desired goal 
techniques proposed provide planner systematic way escape local maxima long standing problem potential eld approach robot motion planning 
algorithm computed local information geometry con guration space requires expensive precomputation steps global methods developed far 
dimensional space method comparable voronoi diagram path planning 
threedimensional space method cient computing hyperbolic surfaces voronoi diagram method 
worst case run fast original roadmap algorithm 
run faster practical cases 
appendix proof completeness opportunistic global path planner careful completeness proofs roadmap algorithm 
proofs apply slight modi cation roadmap algorithm describe 
roadmap set extremal points certain direction free space 
hugs boundary free space 
roadmap described follows extrema distance function stays clear obstacles critical points 
fact similar think graph distance function surface follow extrema distance surface roadmap exactly roadmap sense 
silhouette curves correspond freeway curves linking curves correspond bridges 
recall basic property required roadmaps de nition subset set satis es roadmap condition connected component single connected component ofr 
de nition useful additional requirement point easily reach roadmap 
minor optimization take advantage 
trace maxima distance function maxima minima 
applied original roadmap 
readers familiar earlier papers give informal sketch completeness proof 
need notation rst 
denote surface graph distance function 
dimensional set semi algebraic con guration space suitably parametrized 
simply means de ned boolean combination inequalities polynomials con guration space parameters 
coordinates con guration space sweep direction 
direction 
direction cs heuristics pick direction particular application 
take slices distance surface taken normal coordinate means 
point coordinate coordinate interested distance think height distance surface 
point value distance con guration 
slightly di erent de nition silhouettes local maxima account 
assume henceforth con guration space bounded coordinate 
certainly case practical robot 
bounded technical ways reduce bounded problem see example 
set free con gurations assumed closed 
closed bounded assumptions ensure distance function attain locally maximal values connected component free space 
silhouette point locally maximal point function slice silhouette set points key properties silhouette slice connected component contain silhouette point 
ii silhouette dimensional 
iii critical points silhouette function include critical points set clearly local maxima satisfy property 
true simply continuous function case distance function value zero boundary positive values interior local maximum compact set 
property ii require directions generic see earlier papers 
easily done picking general may generic priori 
true distance assume distance plus small linear combination coordinates 
linear combination arbitrarily small assume small signi cantly ect clearance silhouette points 
property iii depart somewhat original de nition 
critical points silhouette curves traced discovered tracing process points curve tangent orthogonal 
need nd su cient set critical points ensure completeness 
critical points lie silhouette curves algorithm incremental may discover curves encounter points 
need systematic way critical points serve starting points tracing silhouette curves need completeness 
fact critical points required 
subset called interesting critical points su cient purpose 
intuitively interesting critical points split join points higher dimensions 
de ned follows de nition point interesting critical point neighborhood holds intersection consists connected components su ciently small generalized split point 
ii intersection consists components su ciently small generalized join point 
de nition follows sweep plane number connected components changes plane passes interesting critical points 
de nition de ne roadmap surface roadmap de ned follows pc set interesting critical points pc set critical points silhouette pc union 
roadmap roadmap union silhouette various linking curves 
linking curves join critical points silhouette points 
new roadmap algorithm advantage original restricted algebraic curve segments 
original formulated give precise algorithmic bounds planning problem new algorithm approximates silhouette tracing 
tracing just easy types non algebraic curves algebraic ones 
allows linking single step algebraic linking curves de ned recursively 
generate linking curves context simply xing coordinate hill climbing local maximum 
curve traced hill climbing procedure starts critical point ends local maximum silhouette point distance slice 
forms linking curve silhouette 
interesting critical point opposing directions normal distance function increases 
tracing directions links critical point silhouette points channels meet critical point 
theorem satis es roadmap condition 
proof am coordinates critical points pc assume ai arranged ascending order 
proof induction ai 
roadmap condition holds left ai 
assume ai ai satis es roadmap condition subset sj ai base case 
general direction set consists single point part roadmap 
inductive step start basic results chapter state smoothly deform retract manifold union manifolds surface absence critical points 
case implies set sj smoothly retracted sj interval ai ai free critical values 
retraction retracts retractions imply topological changes interval ai ai satis es roadmap condition remains transition pi critical point coordinate ai 
roadmap condition holds component contains single component way condition fail increases ai number silhouette curve components increases pi critical point silhouette number connected components decreases happens pi join point 
consider cases turn pi critical point silhouette tangent silhouette pi normal 
assumption new component silhouette appeared pi increased ai 
means slice ai small local maximum neighborhood pi 
hand local maximum distance slice nd hill climbing 
link critical point direction projection remain surface nearby point qi 
hill climb qi slice ai reach local maximum silhouette point 
pair curves links pi existing roadmap inductive hypothesis proved join points linking curve join pi silhouette point channels meet pi 
channels fact separate connected components sj linking curve join respective roadmaps 
roadmaps hypothesis connected connected component union roadmaps linking curve single connected curve connected component sj contains pi 
proved inductive hypothesis ai pi join point 
proved satis es roadmap condition 
easy link arbitrary points free space roadmap 
simply hill climb point distance function 
algorithm complete nding collision free paths 
note need construct con guration space explicitly compute roadmap 
su ces able compute interesting critical points able compute distance function gradient 
surprise reader familiar di erential topology 
morse theory shown topology manifolds completely characterized looking locally critical points 
appendix ii geometric relations critical points contact constraints number obstacle features environment robot constant complexity 
free space fp bordered constraint surfaces 
constraint surface corresponds elementary contact face vertex edge edge feature robot feature environment 
types contacts called non elementary viewed multiple elementary contacts point 
correspond intersections constraint surfaces con guration space 
de nition elementary contact local contact de ned single equation 
corresponds constraint surface con guration space 
example face vertex edge edge 
de nition non elementary contact local contact de ned equations 
corresponds intersection conjunction constraint surfaces con guration space 
example vertex edge 
non elementary contacts robot constant complexity 
represent disjunctive form ei edges obstacles fj faces robot oe ej edges robot fi faces obstacles oe oe overlap predicate possible contact edge face 
see de nition oe xed robot complexity number branches disjunctive tree grows linearly environment complexity 
oei constant size polyhedron preprocessed 
clause oei conjunction inequalities 
disjunctive tree structure useful computing maximum number critical points combinatorics 
interesting critical points correspond nonelementary contacts occur constraint surfaces lie clause 
disjunctive tree structure calculate upper bound maximum number critical points combinatorial means counting number systems equations solve nd critical points 
generically surfaces intersect dimensions 
robot degrees freedom environment complexity number feature constraints robot obstacles number critical points maximum degree constraint polynomial equations 
upper bound number critical points 
robot xed complexity critical points terms dimension con guration space number obstacle features 
note argument prove upper bound calculate critical points fashion 
intersection points fall categories contacts elementary contacts non elementary 
contacts elementary contact points distinct object free space neighborhood intersection point homeomorphic intersection half spaces side constraint surface forms cone 
point split join point require bridge 
contacts nonelementary intersection point potential split join point 
non elementary contact surfaces codimension systems equations de ne critical points type possible points 
interesting critical points may intersection points seen candidates may lie higher dimensional intersection surfaces certainly de ned fewer equations number possible critical points 
number interesting critical points 
khatib 
real time avoidance manipulators mobile robots 

canny 
complexity robot motion planning 
mit press cambridge ma 
lozano perez wesley 
algorithm planning collision free paths polyhedral obstacles 
comm 
acm 
reif 
complexity mover problem generalizations chapter pages 
ablex publishing new jersey 
schwartz sharir 
piano problem ii 
general techniques computing topological properties real algebraic manifolds chapter pages 
ablex publishing new jersey 

latombe 
robot motion planning degrees freedom dynamic constraints 
proceedings th pages tokyo japan 
canny 
computing roadmaps general semi algebraic sets 
pages 
canny 
generalized characteristic polynomials 
journal symbolic computation 
manocha canny 
cient resultant algorithms 
proceedings issac 
bonn germany 
canny 
cient algorithm computing perturbed polynomial systems 
preparation 
university california berkeley 
lin canny 
fast algorithm incremental distance calculation 
ieee icra proceedings 
gibson du 
topological stability smooth mappings 
springer verlag berlin heidelberg new york 
canny 
constructing roadmaps semi algebraic sets completeness 
arti cial intelligence 
milnor 
betti numbers real varieties 
proc 
amer 
math 
soc 
thom 
sur des 
di erential combinatorial topology pages 

