arxiv cs cs lo jul repairing inconsistent databases model theoretic approach abductive reasoning ofer marc denecker bert van maurice bruynooghe department computer science academic college tel aviv tel aviv israel mta ac il department computer science catholic university leuven celestijnenlaan heverlee belgium maurice cs kuleuven ac 
consider points views problem coherent integration distributed data 
give pure modeltheoretic analysis possible ways repair database 
characterizing possibilities recover consistent data inconsistent database terms models database exhibit minimal inconsistent information reasonably possible 
introduce abductive application restore consistency database 
application abductive solver system implements sldnfa resolution procedure computes list data facts inserted database retracted order keep database consistent 
approaches coherent data integration related soundness completeness results 
integration data coming different databases common nontrivial task 
number different phases involved process important 
resolving different ontologies database scheme setting single unified schema translating integrity constraints database new ontology 

resolving contradictions integrity constraints different local databases 

integrating distributed databases unified set integrity constraints computed previous phase 
originally published proc 
pcl floc workshop eds 
hendrik decker dina goldin rgen floc diku dk pcl 
rules represent intentional truths database domain 
ofer marc denecker bert van maurice bruynooghe phases mentioned difficulties challenges 
instance aware gives complete robust solution problem phase 
formalisms database integration implicitly assume databases integrated ontology phase needed 
reason separating remaining phases integrity constraints represent truths valid situations database instance represents truth actual situation 
consequently policy resolving contradictions integrity constraints different applied database facts applied 
despite different nature phases formalisms maintain contradictions allow draw plausible inconsistent situations 
roughly approaches handle problem paraconsistent formalisms amalgamated data may remain inconsistent set implied explosive fact follows inconsistent database 
paraconsistent procedures integrating data paraconsistent reasoning process lfi annotated logics non classical proof systems 
coherent consistency base methods amalgamated data revised order restore consistency see 
cases underlying formalism approaches closely related theory belief revision 
context database systems idea construct consistent databases close possible original database 
repaired instances spoiled database correspond plausible compact ways restoring consistency 
follow approach consider points views phase process coherent methods integrating distributed databases ontology consistent set integrity constraints 
main difficulty process stems fact local database consistent collective information distributed databases may consistent anymore 
particular facts specified particular database may violate integrity constraints defined contradict elements unified set integrity constraints 
goal find ways properly repair combined database restore consistency 
way viewing problem model theoretic analysis characterizes database repairs terms certain set models inconsistent database intuitively minimize amount inconsistent information 
approach abductive reasoning 
abductive solver system implements sldnfa resolution computing list data facts inserted database retracted order keep data consistent :10.1.1.13.3663
corresponding application repairing inconsistent databases introduced described greater details 
review order keep self contained putting results right context 
show abductive process coherent integration databases sound complete semantics induced model theoretic analysis 
coherent integration databases assume order language fixed database schema fixed domain element unique name 
database instance consists atoms language instances schema instance finite active domain subset database pair ic database instance ic set integrity constraints finite set formulae assumed satisfied 
database db ic apply closed word assumption facts explicitly mentioned considered true 
underlying semantics corresponds minimal herbrand interpretations 
definition 
minimal herbrand model database instance model assigns true ground instances atomic formulae false atoms 
definition 
formula follows database instance notation minimal herbrand model model 
definition 
database db ic consistent ic classically consistent set formula follows notation ic 
goal integrate consistent databases dbi di ici way combined data contain deduced source information violating integrity constraint source 
idea consider union distributed data restore consistency 
key notion respect definition 
repair db ic pair insert retract insert retract insert retract ic consistent database 
intuitively insert set elements inserted retract set elements removed order obtain consistent database 
due lack space proofs reduced omitted altogether 
full proofs appear extended version 
note conditions follows insert retract 
ofer marc denecker bert van maurice bruynooghe definition 
repaired database db ic consistent database insert retract ic insert retract repair db 
may ways repair inconsistent database convenient preferences possible repairs consider preferred ones 
common preference criteria 
definition 
insert retract insert retract repairs 
set inclusion preference criterion insert retract insert retract insert insert retract retract cardinality preference criterion insert retract insert retract insert retract insert retract 
follows assume fixed pre order represents preference criterion set repairs 
definition 
preferred repair db repair insert retract db repair insert retract db insert retract insert retract insert retract insert retract 
set preferred repairs db denoted db 
definition 
repaired database db repaired database db constructed preferred repair db 
set repaired databases db denoted db insert retract ic insert retract db 
note db consistent preference criterion partial order monotonic total size repairs components def 
db db repair expected 
usual refer preferred databases db consistent databases close possible db see :10.1.1.12.3324
denote th relation name ground tuple dist set dist th th th th easy see db ic repaired database db ic set dist minimal set inclusion sets form dist ic 
similarly denotes number elements db ic repaired database db ic dist minimal dist ic 
definition 
dbi di ici udb ic di ic ici 
may trivial useless 
instance inconsistency ic may removed deleting element certainly optimal way restoring consistency case 
set inclusion considered cardinality considered repairing inconsistent databases distributed databases preference criterion goal compute set udb repaired databases udb able compute efficient way elements set :10.1.1.12.3324
test cases database integration 
example 
consider distributed database relation teaches scheme course name teacher name 
suppose database contains single integrity constraint stating course taught different teachers ic teaches teaches 
consider databases db teaches teaches ic db teaches ic clearly unified database db db inconsistent 
preferred repairs teaches teaches 
repaired databases teaches teaches ic teaches teaches ic 
example 
ic 
ic inconsistent 
corresponding preferred repairs 
repaired databases ic ic 
database repair model theoretic point view section characterize repairs database terms models 
consider arbitrary repairs show represented valued models theory integrity constraints valued models set integrity constraints set literals obtained applying closed world assumption database facts 
focus preferred repairs show certain subset valued models considered characterizing preferred repairs 
definition 
valuation truth value denote atomic formula 
see discussions examples :10.1.1.12.3324
examples set inclusion preference criterion 
follows shall fix preference criterion choosing best repairs omit notation possible 
note particular ofer marc denecker bert van maurice bruynooghe propositions characterize repairs terms valued structures 
proposition 
ic database valued model ic 
insert retract insert retract repair ic 
proof definitions insert retract immediately imply insert retract condition definition note case insert retract follows herbrand model insert retract model ic insert retract ic 
proposition 
insert retract repair database ic 
classical model ic insert retract proof consider valuation defined atom follows insert retract 
definition minimal herbrand model insert retract 
insert retract repair ic insert retract ic valued model ic 
insert retract insert retract insert insert retract retract 
formalization terms valued models drawback unified database udb need repair inconsistent 
order avoid reasoning inconsistent theories classical logic infer inconsistent theory develop formalization semantics 
benefit show database models appropriate valued semantics possible pinpoint inconsistent information possible extract repairs udb 
underlying valued semantics considered induced algebraic structure hree shown double hasse diagram 
intuitively elements hree correspond usual classical elements true false third element represents inconsistent information belief 
viewed horizontally hree complete lattice 
denote meet join order reversing operation corresponding order relation respectively 
viewed vertically hree semi upper recall assume ic classically consistent classical models 
fig 
structure hree repairing inconsistent databases lattice 
denote meet operation corresponding order 
note hree algebraic structure defines semantics valued formalisms lfi lp 
various semantic notions defined hree natural generalizations similar classical ones valuation function assigns truth value hree atomic formula 
valuation extended complex formulae obvious way 
set designated truth values hree elements hree represent true assertions consists 
valuation satisfies formula iff designated 
valuation assigns designated value formula theory valued model characterize repairs database db valued models proposition 
ic database valued model ic 
consider valued valuation defined atom insert retract valued model ic insert retract repair ic 
proof claim note valued valuations atom formula proof easy induction structure 
denote fact 
note model theory model definition model model similarly model ic model ic 
second part show conditions definition satisfied 
conditions obviously hold 
condition note insert retract follows minimal herbrand model insert retract model ic insert retract ic 
possible show converse true ofer marc denecker bert van maurice bruynooghe proposition 
insert retract repair database ic 
valued model ic insert retract outline proof consider valuation defined follows insert retract insert retract 
clearly valued model ic insert retract insert insert retract retract 
propositions characterize repairs udb terms pairs associated valued models ic 
shall denote elements pairs follows definition 
valued model db ic knowledge base 
denote insert retract conclude model theoretic analysis characterizing set preferred repairs preference criteria considered definition set inclusion differences cardinality 
definition 
knowledge base db ic denote db classical model ic 
example 
follows shall write pi xi pi xi xi 

db 
db 
definition 
set valued valuations consistent consistent 
maximally consistent respectively maximally consistent consistent respectively consistent 
proposition 
maximally consistent element db insert retract preferred repair db 
note valued valuation valued model ic 
recall denotes size repairing inconsistent databases proposition 
suppose insert retract preferred repair db 
maximally consistent element db insert insert retract retract note 
propositions hold replaced example 
consider example 
udb ic 
classical models ic false true 
false true follows element udb assign 
maximally consistent elements udb case maximally consistent elements udb propositions preferred repairs udb preferred repairs insert retract insert retract cf 
example 
similarly maximally consistent maximally consistent elements db db database example 
follows preferred repairs case 
database repair abductive approach abductive approach problem combining inconsistent databases 
section give outline method 
detailed description reader referred application available www cs kuleuven ac kt 
high level description integration problem consideration id logic framework declarative knowledge representation extends classical logic inductive definitions 
logic incorporates types knowledge definitional assertional 
assertional knowledge set order statements representing general truth domain discourse 
definitional knowledge set rules form head predicate body order formula 
predicate appears head rule called defined predicate occur head called open abducible 
theory id logic pair def fol def definitional knowledge set rules described fol assertional knowledge set order statements 
meaning defined extended founded semantics follows arbitrary interpretation open predicates def 
determined def ofer marc denecker bert van maurice bruynooghe standard logic program unique founded model :10.1.1.121.6788
model model theory model fol 
id logic generalization notion abductive logic programs alp 
instance open predicates theory id logic correspond abducibles abductive logic program 
consequently solutions abductive logic programs computed abductive solver models corresponding id logic theory 
solver called system computing solutions :10.1.1.13.3663
main idea solver reduce high level specification lower level constraint store managed constraint solver 
solver combines refutation procedures sldnfa aclp uses improved control strategy 
case solutions repairs database order compute preferred solutions preferred repairs integrated database system extended simple branch bound component called optimizer see 
filter solutions space speeds execution sure desired solutions obtained 
elements distributed databases uniformly represented unary predicate db elements repaired database represented unary predicate fact 
order compute elements open predicates retract insert 
predicates represent respectively facts may removed may introduced restoring consistency unified database 
rules computing elements repaired database defined follows fact db retract 
fact insert 
addition integrity constraints specified inconsistent retracted element belong database ic retract db 
inconsistent inserted element belongs database ic insert db 
sure integrity constraints hold combined data occurrence database fact integrity constraint replaced fact 
code implementing example defined fact 
defined db 
open insert 
open retract 
fact db retract 
fact insert 
ic insert db 
ic retract db 
follows notation ic denote denial false 
code example similar 
repairing inconsistent databases db teaches 
db teaches 
db teaches 
ic fact teaches fact teaches ic executed code examples literature system 
soundness completeness theorems section guarantee output case set preferred solutions corresponding problem 
soundness completeness section relate approaches previous sections soundness completeness theorems 
recall related results propositions 
follows denote abductive theory constructed described section defining composition problem databases db 
dbn 
proposition 
abductive solution obtained system repair udb 
proposition 
suppose query true finite sldnfa tree repair udb obtained running system proposition 
output obtained running system optimizer respectively optimizer preferred repair respectively preferred repair udb 
proposition 
suppose query true finite sldnfa tree preferred repair respectively preferred repair udb obtained running system optimizer respectively optimizer 
propositions section corollary 
suppose query true finite sldnfa refutation tree 
output insert retract system classical model ic insert retract 
valued model ic output insert retract system insert retract corollary 
assumption corollary ofer marc denecker bert van maurice bruynooghe 
output insert retract system valued model ic insert insert retract retract 

valued model ic output insert retract system insert insert retract retract corollary 
notations corollary assumption 
output insert retract obtained running input system optimizer respectively optimizer maximally consistent element respectively maximally consistent element udb insert insert retract retract 

maximally consistent element respectively maximally consistent element udb solution insert retract obtained running system optimizer respectively optimizer insert insert retract retract related works coherent integration proper representation amalgamated data extensively studied literature see 
common approaches dealing task techniques belief revision methods resolving contradictions quantitative considerations majority vote qualitative ones defining priorities different sources information preferring certain data approaches rewriting rules representing information specific form 
case abduction database updating extended form abduction explain modifications theory 
valued logics known technique maintaining incomplete inconsistent information logics defining fixpoint semantics incomplete logic programs principle applied integrity constraints extended clause form :10.1.1.121.6788
formalisms lfi basis paraconsistent methods construct database repairs useful general pinpointing inconsistencies 
noted role valued semantics case 
approaches semantics arbitrarily truth values allow decode language meta information confidence factors amount belief specific assertion approaches combine corresponding formalisms knowledge representation annotated logic programs bilattice logics non classical refutation procedures allow detect inconsistent parts database maintain 
repairing inconsistent databases closely related topic problem giving consistent query answers inconsistent database :10.1.1.12.3324
idea answer database queries consistent way computing repairs database 
applications integrating possibly conflicting information updating databases ri subrahmanian mediator annotated databases system franconi 
comparison systems note main advantages application expressive power best knowledge approach expressive available application coherent data integration fact syntactical embedding order formulae languages extensions valued semantics necessary approach pure generalization classical refutation procedures encapsulation way underlying data kept coherent input reasoner external policy making preferences conflicting sources compulsory order resolve contradictions 
conclude sketching issues 
noted phases considered needed complete data integration translation difference concepts unified ontology resolving contradictions different integrity constraints 
issue allow definitions concepts integrity constraints databases see sketch may done 
data may combined possibly inconsistent temporal information partial transactions contradictory update information 
different databases may different information predicate reasonable weakened version closed word assumption part integration process instance assumption false database database information 
alternative approach may replace closed word assumption partial valuations case databases may contain negative facts positive ones 

makinson 
logic theory change partial meet contraction revision function 
symbolic logic pp 

alferes leite pereira 
planning abductive updating 
proc 
aisb pp 

arenas bertossi chomicki 
consistent query answers inconsistent databases 
proc 
pods pp 


valued logics reasoning uncertainty prioritized data 
information uncertainty fusion meunier yager zadeh editors pp kluwer 
ofer marc denecker bert van maurice bruynooghe 
avron 
reasoning logical bilattices 
logic language information pp 

avron 
model theoretic approach recover consistent data inconsistent knowledge bases 
automated reasoning pp 

van denecker bruynooghe 
coherent composition distributed knowledge bases abduction 
proc 
lpar lncs springer pp 

baral kraus minker 
combining multiple knowledge bases 
ieee trans 
knowledge data pp 

benferhat dubois lang prade 
inconsistency management prioritized syntax entailment 
proc 
ijcai pp 

benferhat dubois prade 
infer inconsistent beliefs revising 
proc 
ijcai pp 

bertossi 
analytic tableau database repairs foundations 
proc 
lncs springer pp 

bry 
query answering information systems integrity constraints 
proc 
pp 

carnielli marcos 
tableau systems logics formal inconsistency 
proc 
ic ai vol ii csrea press pp 

de amo carnielli marcos 
logical framework integrating inconsistent information multiple databases 
proc 
lncs pp 

denecker 
extending classical logic inductive definitions 
proc 
cl lnai springer pp 

denecker de schreye 
sldnfa abductive procedure normal abductive programs 
proc 
int 
joint conf 
symp 
logic programming pp mit press 

denecker de schreye 
sldnfa abductive procedure abductive logic programs 
logic programming pp 

denecker kakas 
abductive logic programming 
logic programming special issue abduction 

fitting kripke kleene semantics logic programs 
logic programming pp 

fitting 
negation refutation 
proc 
lics ieee press pp 

fitting 
bilattices semantics logic programming 
logic programming pp 

franconi palma leone scarcello 
census data repair challenging application og disjunctive logic programming 
proc 
lpar lncs springer pp 

rott 
belief revision 
gabbay hogger robinson editors handbook logic artificial intelligence logic programming vol pp oxford university press 

gertz 
extensible framework repairing constraint violations 
proc 
pp 

greco 
querying inconsistent databases 
proc 
lpar lnai pp springer 

inoue sakama 
abductive framework nonmonotonic theory change 
proc 
ijcai pp 

kakas van denecker 
system problem solving abduction 
proc 
ijcai 

kakas mancarella 
database updates abduction 
proc 
vldb pp 
repairing inconsistent databases 
kakas michael 
aclp abductive constraint logic programming 
logic programming pp 

kifer 
logic reasoning inconsistency 
automated reasoning pp 

schaerf 
system integration knowledge bases 
proc 
kr pp 

lin mendelzon 
merging databases constraints 
cooperative information systems 


combining knowledge valued logics 
data knowledge engineering pp 


integrity checking deductive databases 
proc 
vldb pp 

pereira alferes 
hypothetical reasoning founded semantics 
proc 
rd scandinavian conf 
ai pp 

priest 
reasoning truth 
artificial intelligence pp 

priest 
minimally inconsistent lp 
studia logica pp 

revesz 
semantics theory change arbitration old new information 
proc 
pods pp 

sakama inoue 
updating extended logic programs abduction 
proc 
lpnmr pp 

subrahmanian 
mechanical proof procedures valued lattice logic programming 
non classical logic pp 

subrahmanian 
amalgamating knowledge bases 
acm trans 
database systems pp 

van gelder ross schlipf 
founded semantics general logic programs acm pp 
