algebraic graph oriented category theory manifesto categorizing database theory third version boris diskin laboratory database design frame inform systems str 
riga lv latvia mail diskin frame riga lv fax december foreword 
category theory known high level polymorphic framework suitable specifying complex structures formalisms 
quite unexpectedly turned elementary category theory notions valuable practice software engineering see summer wrote manifesto version claim belief extreme incorporating category theory ct machinery database db area 
time know works johnson coauthors see publications real influence ct machinery db field 
real mutual liking ct db years old 
say relations years recognize quite clearly theoretical directly lead revolutions field information technologies normal way changes way rapid evolution modulated theoretical ideas 
consider year confirmation previous predictions list ct db publications growing rapidly hoped international workshop special section ct db methodologies developed sydney riga meet methodological course partly technological challenges db area 
forecast intensive growth ct db interaction third version manifesto text slightly revised bibliography list updated 
supported council science foreword version 
nowadays time distance computer science investigation practical realization dramatically decreasing 
live world distance declaration idea advanced elaboration decreasing 
time scientific declarations called instance object oriented database system manifesto atkinson third generation data base system manifesto stonebraker categorical manifesto goguen 
called declaration manifesto 
written specialist database design decade experience semantic modeling designing large databases year experience applying category theory concepts subject mathematician decade experience categorial treating logical concepts year experience db theoretical interpretations categorial constructs 
year guess collaboration easy due obvious reasons convinced unexpectedly high relevance category theory nonsense concrete things semantic modeling database design management systems database theory 
current situation relating category theory db theory practice similar th century interaction differential integral calculi hand mechanics engineering 
excited discovery having mind distinctive features time mentioned decided propagating observations declarative document manner brief manifesto 
correspondingly theorems obligatory mathematician replaced proofs justifications 

ideas repeatedly discussed sergey ilya seminars algebraic methods data modeling management 
provide important position practitioner theorist programing ct considerations poorer 
greatly acknowledge participation patience interpreting nonsense category theory translating beautifully concrete procedures 
special go ami motro anonymous referees workshop discussing general picture theory practice interaction db area 
seventies time relational data model database area 
formed precise specification framework db theory introducing new era provided significant barrier model implementation users myriad implementation details hull 
addition anybody agree serge abiteboul major factor success existence simple languages allowing definition manipulation data 
hand handy languages firm mathematical ground relational order logic model theory seventies appeared nice amalgamation logical rigor 
time new areas applications emerged 
applications need manage large amounts evolving shared data structures connected complex semantic relationships scarcely packed rigid frame flat relations addition focus turned modeling data seen application user 
meet new requirements developed diversity languages techniques data definition manipulation ranging nested relational object oriented semantic models particular proposed plethora semantic models handy graph oriented structural schemas see surveys 
orthogonal dominant trend connected paradigm cooperative information system 
evident information system generation appear large number iss distributed complex computer communication network 
addition local iss sufficiently autonomous significantly differ origin development organization architecture data models constitutes multilingual nature heterogeneity generation iss chief characteristics 
management heterogeneity crucial issue important initial step develop language specifying heterogeneous systems see 
view point peculiarity situation consists extremely strong experimental activity surprisingly weak formal semantic foundations 
lack precise framework commonly recognized atkinson navathe illuminating example fact invoking wittgenstein philosophy conference organized practitioners report emphasized great need languages specifying data interoperation problem identifying resolving semantic heterogeneity heterogeneous database environment far solved problem stage understood 
wittgenstein said long ago idea worth discussing worth having language discuss 
researchers need develop languages handling data interoperation 
difficult problems developing integrated systems figuring schemas data application code mean 
context required general language allowing specify basic db theory concepts database schema instance query view update way independent specific data model single universal data model capturing data models 
italic fact nowadays db specialist forced alter scylla easy scarcely formalized graph approaches logically clear perfect inflexible relational languages 
due evident tendency practitioner exists field today cookbook approaches poorly formed having subjective human considerations navathe 
result specifications mixed implementations procedural description problem statement resolving algorithm simultaneously discussion success optimality algorithm question cancelled 
field strongly needs unified data metadata definition manipulation language combining evidence user friendliness graph oriented object semantic models formal rigor clearness relational models 
addition language suitable specifying dynamic structures easy manipulating feature closely connected natural language 
requirements summarized title algebraic graph formalized language specifying structure dynamics data data manipulation 
main slogan 
assert order deal properly elaboration development language necessary sufficient incorporate methodology machinery mathematical category theory db area 
justification 
amounts family algebras calculi semantic structures sets language announced thought family algebras calculi semantic structures graphs 
supported ordinary order logic methodology machinery 
exists scarcely supported ad hoc mathematics created db theorists 
point algebra logic graphs require quite approach ordinary sets prototypes difficult handle properly corresponding preliminary framework intuition 
mathematical framework algebraic graph logic exists elaborated framework offered categorial logic categorial model theory developed mathematical category theory see 
discovered developed see independent direction various semantic diagrams er diagrams widely practitioners theorists naturally considered special kind structures studied categorial logic late sixties called sketches standard 
category theorists prefer deal fixed diagram properties commutativity shown safely enjoy possibility set arbitrary signatures diagram properties 
addition reasonable possible algebraic treatment diagram properties introducing diagram operations certain part diagram result applying operation part full similarity say presenting predicate 
respect sketch framework speaking similar fol theories written arbitrary vocabularies predicate operation symbols provides sufficient flexibility practical 
conceptual database schema considered generalized sketch graph diagrams nodes arrows labeled special symbols taken predefined signature 
addition queries schema reduced diagram operations denoted labeling corresponding diagrams special operation symbols taken signature 
words unifying graphical mechanism denoting basic data queries 
extends precisely closes semantic diagram considered db schema new nodes arrows denoting derived data retrieved db instances diagram come kind familiar structure categorial logic called topos studied intensively sixties 
general graph logic developed logic generalized sketches corresponding algebras algebras diagram operations sketches 
metadata specification languages emphasize required possibility speak specify concepts database schema database instance query view update data model independent way single universal data model capturing data models 
glance impossible speak database schemas description kind things appears kind substantial speaking 
methodological framework machinery strange thing developed mathematical category theory entitled nonsense early days 
emerges important task categorial formulating db theory conceptual framework initial step :10.1.1.38.3655
quite briefly essence category theory consists characterizing internal structures objects mappings constituting universe discourse collection objects nodes collection inter object mappings arrows closed composition category formal sense 
normally turned surprisingly derived objects interest characterized identified mappings related machinery situation paradigmatic various applications category theory mathematics logics computer science 
soon characterized internal structure objects question externally arrow diagrams immediately adopt machinery category theory 
offers polymorphic framework specifying manipulating objects arbitrary nature unified algebraic way 
way regarding things called arrow thinking contrast usual thinking terms sets elements 
remarkable data metadata specifications formalized way arrow logic category theory 
reasons considered regarded demonstrating necessity sketch machinery 
justify sufficiency note chief categorial construction topos specified sketch categorial logician say 
hand constructive set theory higher order logic type theory interpreted toposes see 
known similarly nested relational higher order logic topos graphical sketch algebra corresponding graph 
full power higher order logic including simulated sketches conversely 
means specified formally specified formally sketches graph handy 
corollary 
distinguish main streams incorporating ct db theory db area 
consists developing categorial theory metadata modeling building formal framework providing possibility describe main data modeling dm constructs schema instance view query update way independent concrete dm paradigm 
matter approaching problem formulated quoted 
initial steps category theory solution suggest :10.1.1.38.3655
second way incorporating category theory connected new data modeling paradigm known categorial logic notion sketch 
goal build example define operation integrating entities specifying entities merging objects oo sense view integration schema integration described similar arrow construction 
precondition impose assume entities defined arrows computer implementation nonsense arrows concretely specified put computer see 
sense adopted modern mathematics graph specification paradigm similar quite parallel paradigm fully formalized syntax semantics levels predicate calculi relational algebras universal sense specified formally specified paradigm languages 
sketch approach satisfies criteria quite immediate way 
lot elaborating concrete specification techniques optimal operational semantics sketch operations computer implementation sketch specification languages 
particular demonstrated sketch paradigm data modeling perfectly suited view integration fact eliminates kinds structural conflicts explains handle diagram operations sketches 
sketches emerge powerful tool resolving structural conflicts challenge view integration methodologies 
practice manual data structuring sketches proved easy draw interpret way implementing prototype db designer workbench capturing diversity semantic data models unified manner clear soon cf 


known attempts categorial modeling db theory concepts list appendix far complete 
rule deal aspects db modeling constitute supporting framework metadata modeling 
level data modeling mentioned works suggested new kinds semantic models advantages strong disadvantages small focus problem different 
consists building complete consistent graph specification framework similar relational respect points outlined 
beeri asks query language paradigm framework uniformly system irrespective specific type system uses data sketches provide positive answer language diagram operations sketches just language kind beeri described manifesto essence category theory consists characterizing internal structures objects mappings constituting universe discourse collection objects inter object mappings derived objects interest characterized identified mappings related machinery 
situation paradigmatic various applications category theory mathematics logics category theory 
constitutes general intention internal harmony external justification category theory numerous achievements teach define properly universe going deal necessary define mappings objects universe 
value lesson appreciated db area precise descriptions relational database schema semantic schema definite kind data structured schema told mapping relational schemas mapping er schemas firmly believe elaborated precise clear flexible specification language provides half success design implementation data management systems category theory language unique bundle advantages evidence owing graph nature easy manipulating owing algebraic nature rigor owing mathematical ground unifying power owing polymorphic nature capability model dynamic structures concurrency universality owing ability simulating formal specification language chief category theory paradigm defining internal structure objects characterizing external adjoint structure arrow diagrams arrow diagram thinking just specification methodology required db area category theory machinery just offers kinds formalisms db theory needs algebraic graph categorical logic model theory play semantic oo data models role quite similar ordinary mathematical logic model theory play relational models 
initial steps list ct db growing predict exponential increase nearest 
conjecture years nonsense category theory basic mathematical discipline necessary db designer ordinary linear algebra calculus necessary engineer designer mechanics 
abiteboul 
deductive object oriented database language 
data knowledge engineering 
diskin 
outline ago algebraic graph oriented approach specification data management systems 
preparation 
atkinson bancilhon dewitt maier zdonik 
objectoriented database system manifesto 
conference deductive object oriented databases kyoto japan 
barr wells 
category theory computing science 
prentice hall international series computer science 

new data models languages 
pods pages 
bubenko yu 
editors 
advances databases information systems adbis proc nd int moscow acm chapter moscow russia 
diskin 
algebraic graph oriented category theory 
manifesto categorizing database theory 
technical report frame inform systems riga latvia 
ftp ftp cs chalmers se pub users diskin manifest 
diskin 
algebraic graph oriented approach view integration 
part specification framework general strategy 
technical report frame inform systems riga latvia 
diskin 
algebraic graph approach management systems schema integration sketches equations 
generation information technologies systems nd int workshop pages israel 
extended available ftp ftp cs chalmers se pub users diskin 
diskin 
algebraic graph approach management systems ii mathematical aspects schema integration 
technical report frame inform systems riga latvia 
ftp ftp cs chalmers se pub users diskin tr 
diskin 
formalization graphical schemas general sketch logic vs heuristic pictures 
th int congress logic methodology philosophy science 
volume abstracts page florence italy 
ftp ftp cs chalmers se pub users diskin 
diskin 
formalizing graphical schemas conceptual modeling sketch logic vs heuristic pictures 
int symp knowledge retrieval storage efficiency kruse diskin 
databases graphical algebras algebraic graph approach data modeling database design 
submitted algebraic methodology software technology amast ftp ftp cs chalmers se pub users diskin amast 
drew king mcleod rusinkiewicz silberschatz 
report workshop semantic heterogeneity interoperation multidatabase systems 
sigmod record 
goguen 
categorical manifesto 
technical report sri international sri csl 
hull 
views complex objects 
nested relations complex objects databases lncs pages 
hull king 
semantic database modeling survey applications research issues 
acm computing surveys 
johnson 
value commutative diagrams information modeling 
algebraic methodology software technology amast proc rd int conf twente holland 
lambek scott 
higher order categorical logic 
cambridge university press 
navathe 
years modeling methodologies tools 
er number lncs germany 
nelson rossiter 
prototyping categorical database fdm 
proc moscow acm chapter nd int advances databases information systems adbis moscow russia pages 

canonical forms data specifications 
proc 
computer science logic springer lncs pages 
stonebraker rowe lindsay gray carey brodie bernstein beech committee advanced dbms function 
third generation data base system manifesto 
proc ifip wg conf 
object oriented databases ds 
wells 
sketches outline 
ftp ftp edu math wells 

