jon doyle torasso erik sandewall eds fourth international conference principles knowledge representation reasoning institut bonn germany morgan kaufmann 
ontology engineering mathematics thomas gruber gregory olsen knowledge systems laboratory stanford university welch road building palo alto ca gruber ksl stanford edu describe ontology mathematical modeling engineering 
ontology includes conceptual foundations scalar vector tensor quantities physical dimensions units measure functions quantities dimensionless quantities 
conceptualization builds algebra measurement theory designed explicitly knowledge sharing purposes 
ontology communication language cooperating engineering agents foundation engineering ontologies 
describe conceptualization ontology show selected axioms definitions 
describe design ontology justify important representation choices 
offer evaluation criteria ontologies demonstrate design techniques achieving 

engineers mathematical models sets equations analyze behavior physical systems 
conventional notations formatting mathematical expressions textbooks engineering literature usually leave implicit details required understand equations 
instance clear expression kx symbols variables constants represent numbers physical quantities forces lengths magnitudes reals vectors higher order tensors quantities static values functions time functions time space units measure treated 
reader interpret notations background knowledge context 
error prone humans capability today computer agents 
enable sharing reuse engineering models engineering tools users important specify conceptual foundation distinctions explicit provides context reader independent semantics 
developed formal ontology mathematical modeling engineering called engmath 
ontology builds algebra measurement theory adapted meet expressive needs engineering modeling 
specification includes order axiomatization representational vocabulary machine human readable 
engmath ontology exemplifies design ontologies support agent communication knowledge reuse 
ontology differs engineering textbooks philosophy books designed specification knowledge sharing purposes 
section describing role ontologies formal specification uses engmath ontology 
section give define basic concepts relations ontology 
section discuss series design decisions rationale 
section offer design criteria minimizing ontological commitment maximizing monotonic extendibility demonstrate techniques achieve 
section discuss relationship engmath ontologies relevant philosophy ai 
purpose ontology ontology formal specification body formally represented knowledge conceptualization objects concepts entities assumed exist area interest relationships hold 
conceptualization simplified view world wish represent purpose 
knowledge base knowledge system knowledge level agent committed conceptualization explicitly implicitly 
purpose knowledge sharing formal ontologies serve specifications common conceptualizations agents 
philosophy literature ontology systematic account existence aiming account forms modes 
ai systems exist conceptualized world determined represented note agents communicate shared language body formally represented knowledge reused agreement universe discourse 
furthermore shared language includes vocabulary denoting entities relationships conceptualization way specify meaningfully stated vocabulary 
ontologies context knowledge sharing means making content specific agreements 
assume common syntax semantics core representation language specify conceptualizations writing definitions shared vocabulary 
strategy proposed arpa knowledge sharing effort tack 
knowledge interchange format kif serves language making assertions definitions ontologies provide axiomatic textual definitions relations functions objects 
definitions mean specifications formed vocabulary 
definitions include axioms constrain interpretation note axiomatization specifies logical theory intended knowledge base 
ontology serves domain specific representation language knowledge shared communicated 
practice ontologies define vocabulary queries assertions exchanged interoperating agents may passive deductive databases 
agents conform ontological commitments agreements shared vocabulary coherent consistent manner :10.1.1.122.3207
ontological commitment guarantee consistency completeness respect queries assertions vocabulary defined ontology 
committed agents may know things implied shared ontologies may able answer queries follow shared ontologies 
furthermore shared knowledge agents viewed knowledge level attributed independent symbol level encoding 
agents may operate internal representation desired long shared vocabulary consistently communication 
model agent collaboration pursued groups 
uses engmath ontology designing engmath ontology anticipate kinds accept requirements 
ontology provide machine human readable notation representing models domain theories engineering literature 
second provide formal specification shared conceptualization vocabulary community interoperating software agents engineering domains 
third provide foundation formalization efforts including comprehensive ontologies engineering domain specific languages 
section give examples application 
engmath shared notation engineers mathematical expressions constraint equations describe analyze communicate models physical devices behavior 
quantities represented expressions different purely numerical values algebra operating account extra numerical considerations dimensional consistency units measure vector tensor operations 
form physical algebra taught nearly introductory physics engineering course subject prominent standard texts 
students taught dimensional consistency check modeling equation solving errors 
technique called dimensional analysis design assist interpretation experiments important area study 
textbook notations physical quantities vary author leave implicit relying context background knowledge reader proper interpretation 
problem implicit notation revealed students try encode engineering models mathematical support software 
human expertise required map expressions physical quantities purely mathematical constructs current commercial math tools matlab mathematica maple 
engmath ontology intended provide formal language sufficient express models engineering textbooks map mathematical software tools 
view application instance agent communication subject section 
engmath vocabulary agent communication providing declarative machine readable representation engmath ontologies enable unambiguous communication software agents difficult impossible 
illustrate ontology consider simple example agents exchanging symbolic representations spring behavior 
agent specialist design springs agent specialist quantity algebra 
agent needs solution set equations relating spring material properties include spring rate wire diameter spring diameter number turns shear modulus elasticity 
agent send agent equations set kif sentences vocabulary engmath ontology scalar quantity physical dimension force dimension length dimension scalar quantity physical dimension length dimension scalar quantity dm physical dimension dm length dimension scalar quantity physical dimension identity dimension scalar quantity physical dimension force dimension expt length dimension expt expt dm expt psi receiving equations form agent answer questions values terms diameter 
vocabulary interaction function constant physical dimension independent domain theory springs 
sentence simply states algebraic relationship quantities dimensional characteristics quantities 
type information allows agent perform algebraic manipulations solutions simultaneous equations numerical evaluations individual parameters 
dimensional information included consistency equations checked agent agents freed committing explicit set units 
spring example typical problems introductory engineering textbooks 
complex interactions required coordinate commercial design tools industrial problems 
shade project constructed set software agents interact support collaboration industrial problems satellite system design 
shade agent specialist rigid body dynamics responsible geometric layout satellite components layout 
commit engmath ontology 
agent queries layout agent inertial characteristics particular component 
characteristics include mass value scalar quantity inertia tensor value second order tensor 
reply layout agent specifies inertia tensor respect global frame point 
frame part shared domain theory agents implicit representation tensor 
allows agent translate inertia different frame convenient dynamic analysis 
shade agents commercial tools wrapped conform ontological commitments communication protocols 
agents designed conformant interface required represent ontologies internally 
agents assimilate ontology input 
unit conversion agent example 
contract specified entirely engmath ontology 
agent takes kif expressions quantities performs services symbolic simplification unit conversion dimensional consistency verification 
read ontologies specify unit systems determine system complete dimensions specified 
engmath conceptual foundation engmath ontology designed conceptual foundation ontologies design needed anticipate theories 
example constructing family ontologies representing components relations part subpart relations connections association component features constraints 
ontology mechanical components instance models components mass properties associated frames points lack complete geometric representations 
theory combines component ontology constraint expression ontology parts engmath ontology simple geometry theory includes engmath 
compositional modeling language cml example building engmath ontologies 
cml modeling language intended synthesize redesign various formulations compositional modeling enable model sharing research groups 
part language design cml ontology time continuity object properties semantics language specified axiomatically vocabulary cml ontology 
cml ontology builds engmath ontology foundation 

overview conceptualization section describe key concepts conceptualization specified engmath 
ideas familiar readers 
multiple ways formulate various concepts important clarify synthesis results coherent theory 
entire ontology large complex static linear form lines definitions 
complete specification available line world wide web cross indexed machine formatted hypertext 
give flavor details included axioms actual ontologies section 
physical quantities mathematical model physical system sort interested consists set constraints values variables 
variables represent physical quantities 
physical quantity measure quantifiable aspect modeled world 
quantities admit degrees contrast qualities pregnant 
physical quantities come types mass body scalar quantity displacement point body vector quantity altitude particle function time unary scalar function quantity stress particular point deformed body second order tensor quantity 
purposes quantities quantifiable ability combine algebraic operations 
physical quantities meaningfully added multiplied raised real valued exponents 
types quantities determine conditions operations allowed types results 
example sense add mass quantity displacement quantity result multiplying length length third type quantity area 
ontology specifies detail conditions various algebraic operations quantities sense 
term physical quantity generalized notion quantitative measure definition allows quantities amounts money rates inflation 
excludes values associated nominal scales boolean state part number amenable algebraic operations 
defrelation physical quantity physical quantity defined quantity dimension physical dimension quantity dimension constant quantity function quantity physical dimensions central difference physical quantity purely numeric entity real number quantity characterized physical dimension 
physical dimension quantity distinguishes types quantities 
physical dimension mass body mass physical dimension position body length physical dimension stress quantity mass expt length expt time multiplication expt exponentiation 
dimensions possible amount money 
dimensions tell intrinsic quantity invariant models measurement 
example intrinsic difference quantity describe altitude quantity describe width quantities length dimension 
length feet length yard equal specified different units measure 
physical dimensions composed dimensions multiplication exponentiation real power 
important dimensional analysis dimensions certain algebraic properties 
product physical dimensions physical dimension multiplication operator associative commutative invertible identity element called identity dimension forms abelian group 
defrelation physical dimension abelian group physical dimension identity dimension constant quantities physical dimension identity dimension called paradoxically dimensionless quantities 
ontology dimensionless quantities include real numbers numeric tensors 
defrelation dimensionless quantity dimensionless quantity constant quantity quantity dimension real number dimensionless quantity dimensional homogeneity prerequisite unit conversion algebraic operations quantities 
consider simplest type physical quantities scalar quantities 
scalar quantities constant quantities real valued magnitudes distinguished higher order tensors 
define magnitude function precisely 
physical dimension defines class scalars important algebraic properties 
example sum scalars dimension scalar dimension 
physical dimensions provide necessary conditions comparing quantities quantities comparable physical dimension 
sense quantitatively compare masses mass length 
comparability order comparability way ground algebraic definitions quantities 
quantities quantitative measures meaningful measure reflects order measured say modeled world 
adapting definition ellis say elements class scalar quantities physical dimension comparable 
ellis comparability quantity type holds linear ordering relationship world equivalence relation binary relation asymmetric transitive quantities exactly hold 
definition ask want call quantity type physical dimension classified 
mass instance comparable definition order masses 
property comparability independent measurement unit measurement procedure scales types physical objects modeled 
ellis defines quantity type exactly linearly ordered 
needed depart fronts accommodate sorts quantities find engineering models 
comparability different higher order tensors see section tensor order spatial dimensions quantities compatible able compare ordering need total 
second scalars insist order dense multiply scalar quantities physical dimension real number obtain scalar quantity physical dimension 
property holds mass illustrates calling quantity modeling decision 
mass densely ordered way assumption continuum mechanics 
consequence including reals species physical quantity 
depart writers ellis primarily goals slightly different 
primary responsibility explicate coherent framework adequate expressing content engineering models 
notion physical dimension intimately tied notion physical quantity primitive concepts ultimately grounded comparability quantities world 
definitions computer program infer entity physical quantity defined terms quantities 
practical consequence including primitives formal ontology types entities declared 
function quantities physical quantity constant quantity function quantity 
mass example model constant quantity kg 
function quantity function constant quantities constant quantities 
function physical objects quantities 
altitude particle time function quantity mapping quantities time quantities length 
function quantities take finite number arguments engineering usually take 
example quantities ordinary differential equation ode models unary functions mapping scalar quantities time scalar quantities 
partial differentials involve functions quantities length quantities time quantity 
physical quantities function quantity physical dimension dimension elements range function maps quantities differing ranges function quantity 
tensor quantities conceptualization physical quantities include scalars higher order tensors vectors dyads 
vectors order tensors distinct scalars complete specification vector constant requires statement direction orientation 
velocity vector instance decomposed tuple scalars particular choice frame 
mechanical stress represented dyad second order tensor instances mapped matrix frame 
tensors useful abstraction possess properties invariant frames 
dimensional frames vector spaces tensors order common physical modelling concepts generalize dimensions orders 
tensors characterized terms order spatial dimension distinctions turn imply set algebraic restrictions 
engmath ontology integrates algebraic properties tensors dimensional properties physical quantities 
units measure identity quantities depend process nature measurement units measure 
quantity mass kg thing measured balance beam spring comparable way mass quantities independently specified pounds 
units irrelevant example specify constant equation making units measure 
conceptualization units measure quantities positive scalar constant quantities 
unit measure absolute amount standard quantity 
quantities units dimensions units defined scalar quantity 
example unit measure mass dimension 
unit called pound defined mass quantity equal times constant just quantity kg equal product unit called real number 
pound special compared quantities kg matter convention 
return issue standard units section provide unit conversion physical dimensions product real valued exponentiation unit unit measure 
defrelation unit measure units scalar quantities unit measure scalar quantity units positive unit measure forall unit measure quantity dimension quantity dimension positive magnitude units combined abelian group unit measure identity unit units combined expt unit measure real number unit measure expt commutative units qs unit measure constant quantity magnitudes magnitude physical quantity property quantity binary function maps quantity unit measure numeric value dimensionless quantity 
decided units just scalar quantities apparent magnitude function simply restricted form scalar division defined argument constant quantity second argument unit dimension 
total constant quantities constant quantity expressed unit physical dimension magnitude quantity unit converted magnitude comparable unit 
requirement dimensional consistency fits intuition 
magnitude kg magnitude kg meters undefined 
higher order tensor quantities value magnitude function ordinary dimensionless tensor 
units measure scalar quantities think magnitude function factoring physical dimension quantity returning dimensionless quantity producing value normalized scale corresponding unit 
unit measure implicitly determines measurement scale units measure thing scales conceptualization 
measurement scales general way map quantities numeric values described section 
magnitude defined magnitude unit magnitude unit mag constant quantity unit measure unit dimensionless quantity mag quantity dimension quantity dimension unit defined mag unit mag unit dimensionless magnitudes factored forall unit mag constant quantity unit measure unit dimensionless quantity mag defined mag magnitude mag unit mag magnitude unit standard systems units want fix set standard units shared ontology want provide vocabulary define sets standard units agents share 
concept system units 
system units class units defined composition base set units instance class standard unit physical dimension physical dimension associated unit 
interesting representation problem set units space physical dimensions conventions constrained determined background domain theory assumed model 
set dimensions mutual relationships determined physical theory choice units dimension measurement convention 
relationship force mass length time physics 
theory need give fundamental status physical dimension say force dimension equal length mass expt time 
system measurement may take mass length time primitive derive force take force primitive derive mass physical laws expressed system 
concept system units defined commitments physical theories sets fundamental dimensions standard units independent 
define system units model builder chooses set fundamental dimensions orthogonal composable 
physical theory mass time orthogonal force mass 
set fundamental dimensions determines space possible quantities described system physical dimensions algebraic combination fundamental dimensions 
fundamental dimensions model builder chooses standard unit dimension called base units system 
standard unit system composition expt units base set 
example systeme international si system units defines set fundamental dimensions base units meter second kelvin mole candela 
defrelation system units system units class subclass unit measure base units system fundamental dimensions defined base units member unit base units instance unit orthogonal dimension set dim exists unit member unit base units dim quantity dimension unit unit system standard unit dimension 
instance unit standard unit quantity dimension unit unit defrelation orthogonal dimension set orthogonal dimension set set member physical dimension dimension composable difference setof defrelation dimension composable dimension composable member exists dimension composable dimension composable exists real dimension composable real number real expt real algebraic properties quantities borrow established theories algebra reals vectors higher order tensors 
adapt physical quantities consider physical dimensions describing domain range operators 
seen dimensional homogeneity prerequisite adding quantities physical dimensions establish classes quantities comparable 
physical dimension class constant scalar quantities physical dimension forms abelian group addition operator zero identity element dimension zeros dimension different 
class scalars dimension removing zero scalars forms abelian group respect multiplication 
vector quantities sum quantities defined sum dimensionless versions vectors defined spatial dimensions align 
higher order tensors tensor order spatial dimensions physical dimension homogeneous 
analogous restrictions apply multiplication tensors 
function quantities sum product function quantities function quantity defined domains functions equal 
unary scalar function quantities addition multiplication operators defined handle mix function quantities constant quantities 
sum constant time dependent function example function defined defined equal continuous time dependent quantities defined time derivative function 
axiomatization specialized theories functions vectors tensors concerned specifying conditions algebraic operators apply 
essential building agents guarantees completeness class quantities 

rationale important distinctions possible ways axiomatize domain axiomatization explicit things implicit engineering literature 
section discuss important distinctions formalization process forces clarify 
distinction offer rationale choices terms purpose ontology 
quantity types versus instances authors define quantity set values property having order 
offer name instances set values property 
ai convention defining concepts classes equivalently sets types monadic predicates define class physical quantity define species quantities subclasses physical quantity 
talk unitary concept mass quantity say quantity type elements constant scalars dimension mass allows support common usage engineering modeling specific values length beam called quantities 
allows modularly state properties quantities function quantities scalar quantities scalar mass quantities general properties inherit specializations 
quantities variables physical quantities physical dimensions objects universe discourse linguistic elements variables constraint expressions 
constraints quantities engineering models typically algebraic equations inequalities including operations differential calculus 
quantities different linguistic elements 
built ontologies specification configuration design task elevators vt experiment constraint expressions constituents variables arithmetic operators part domain discourse 
formalization constraints constraint expressions logical sentences nonlogical constants logical variables denoting physical quantities 
ontological distinction variables quantities allowed write ontology form denotation constraint expressions specified 
necessary committing parties need restrictions form expressions guarantee completeness 
quantities properties objects identity quantities independent physical objects modeled 
example say mass body quantity kg 
kg just measure mass intrinsic kg says mass total function masses bodies 
making quantities independent objects allows state mass equal mass different body 
supports pure parametric models physical objects quantities described 
course model builder free define function physical objects quantities function thing mass quantity 
formulation quantities preclude object quantity functions provides language describe range functions 
cml example functions objects pipes time dependent function quantities 
distinction central semantics cml allows time varying static relations 
object quantity functions time independent pipe flow rate quantities functions time flow rate function quantity different values scenario undefined values time 
quantities tuples ontology quantities exist values related independent units numbers 
quantities compared multiplied converting reals considering units measure 
independence allows model builder flexibility needed build measurement systems physical theory independently 
furthermore quantities algebraic properties purely entities grounded modeled world condition comparability 
contrast alternative formulation sees treat quantities tuples numbers units simply numbers 
assumption units formulation find contradicts conceptualization quantities world physicists philosophers 
reuse simple example feet yard equal tuples ft yd 
fundamental quantities identity physical quantity independent fundamental quantities 
ontological distinction base derived quantities 
pair comparable physical quantities sum product defined physical quantities sum comparable original product may 
independent scales discussed 
rationale decision provide generality flexibility 
know physics physical basis giving quantities primacy 
measurement theories distinction quantities amenable fundamental associative measurement distinction irrelevant engineering models avoiding temptation define quantities terms measurement 
analogous argument holds giving special status units measure physical dimensions 
possible compose units dimensions need stipulate shared theory exactly units dimensions fundamental 
vs dimensionless quantities conceptualization leaves model builder define fundamental dimensions domain 
definition physical dimension preclude defining new dimensions mentioned physics texts 
cited example amount money possible physical dimension 
ontology allows dimensionless quantities real numbers physical dimension identity dimension 
decide define new physical dimension quantity dimensionless quantity 
say physical dimension distinguishes type class quantities meaningfully combined algebraic operations undergo unit conversion comparable 
amount money meaningful dimension accumulate sums money currency conversion compare relative wealth 
amount money meaningfully combined dimensions 
rate inflation example computed dividing amount money change price different amount money base price dividing result unit time year 
rate quantity dimension expt time 
money tagged different type quantities see dollar signs units carried numbers formulae 
negative example consider quantities number politicians number constituents 
write formulae model making abstraction quantities humans compared numbers 
sign implies quantities physical dimension case identity dimension 
suppose wanted describe number molecules politicians 
international unit number molecules mole note modern si system units dimensionless quantity quantity dimension amount substance 
amount substance get special status number politicians 
chemical models need distinguish amount substance quantities measures 
homogeneous molecules sense measure stuff counting 
formula average amount gas politicians amount substance quantity amount gas dimensionless quantity number politicians 
sense chemist abstraction politicians viewed volumes gas 
measurement scales measurement scale non assignment numeric values physical quantities means quantities consistently assigned numeric values non means different quantities get different values ignoring issues precision 
examples measurement scales include scale hardness minerals celsius kelvin scales thermodynamic temperature 
coombs classification scale ordinal provides information inequality comparisons points scale 
celsius scale classified ordinal interval supports inequalities intervals scale kelvin ratio scale supports comparisons ratio values scale 
instance sense say degrees kelvin twice degrees kelvin 
mathematical definition units measure conceptualization correspond ratio scales note value scale ratio measured quantity degree kelvin unit 
kelvin scale defined degree kelvin magnitude function lambda magnitude degree kelvin don call ratings degrees celsius units measure aren quantities compare quantities 
course write function measure temperature celsius scale lambda magnitude degree kelvin principled constraint form function leave model builder define scales appropriate domain 

design evaluation issues view ontologies designed artifacts formulated specific purposes evaluated design criteria 
separate propose set ontology evaluation criteria show examples application domains 
criteria illustrated minimize ontological commitment allowing monotonic extendibility 
minimizing ontological commitment means making claims possible world modeled allowing parties committed ontology freedom specialize instantiate ontology needed 
extendibility means ontology crafted extend specialize ontology monotonically 
words able define new terms special uses existing vocabulary way require revision existing definitions 
criteria hold natural tension goal supporting knowledge sharing needs range agents differing abilities assumptions 
adding vocabulary handle broad range representation needs increase ontological commitment adding constraints interpretation definitions incompatible representation needs 
section discuss techniques design engmath ontology help meet criteria 
decomposition large ontology modules 
second familiar design technique parameterization applied problem representing conventions 
decomposing ontology technique decompose monolithic ontology set loosely coupled sub ontologies 
engmath ontology decomposed inclusion lattice individual ontologies ontology set definitions ontology inclusion set inclusion 
ontology includes ontology ontology union definitions specific sophisticated methods partitioning knowledge bases modular theories explored set inclusion sufficient mutually consistent ontologies uniform namespace 
shows inclusion lattice theories engmath family 
core ontology physical quantities includes algebra evolved example kif specification theory objects relations called frame ontology 
engmath family includes ontologies scalar quantities vector quantities unary scalar functions 
standard units ontology defines common physical dimensions units includes si system 
engineering ontologies build engmath family describing component structure design tasks discrete events specific analysis domains kinematics developed 
inclusion lattice ontologies decomposing loosely coupled ontologies helps minimize ontological commitment allowing commit coherent subset axioms entire ontology 
example commit scalars vectors unary functions ode models ary functions pde models static models functions 
agent include physical dimensions conceptualization accommodated real number operations defined quantities reals quantities 
decomposition supports specialization monotonically extendible ontologies 
example cml ontology inherits basic commitments unary scalar functions ontology adds notions specific needs 
definitions unary scalar functions anticipate general class time dependent functions cml extensions possible redefining originals 
designing family coherent ontologies difficult designing monolithic designer anticipate intermodule interactions axioms ontologies constraining vocabulary 
help manage extension vocabulary ontologies borrow technique software engineering polymorphism 
polymorphism allows function constant defined places definition adds axioms constant 
expt functions example polymorphically extended type quantity physical dimensions 
form polymorphic definition function arguments domains definition applies quantity types condition holds arguments value due theory inclusion definition function union axioms contributed theory 
example definition vector quantities ontology union axioms vector quantities scalar quantities physical quantities general reals 
parameterizing conventions second technique facilitate extendibility minimize commitment parameterization conventions 
parameter black box system representation assumptions environment interacting system vary 
computer program environment interacts program formal arguments bound invocation human interface neatly parameterized 
domain engmath ontologies environment instantiation shared vocabulary particular domain models 
described ways domain models vary convention 
choice fundamental physical dimensions standard units system choice particular units individual quantities conventions 
minimize ontological commitment formulate choices parameters engineering model global constants shared ontology 
support extendibility provide expressive representational vocabulary specifying values parameters 
example allow model builder specify choices fundamental dimensions standard units provide machinery define systems units 
sense ontologies coupling mechanism knowledge bases knowledge agents 
parameters system units domain model data types software ground parameters domain model theories 
mentioned unit conversion agent take inputs ontologies specifying systems units 
shade tools exchange sets equations exchanging theories 
agents pass theories constraints pass specified shared ontology 
sense ontologies play similar role database schemata ontologies may require expressive language constraints typical database specifications 

related philosophy mathematics underlying engmath ontologies drawn standard textbooks teach philosophy literature measurement choose distinctions conceptualizations modify produce modular internally coherent ontologies engmath family 
engineering texts assume conceptualization motivated algebraic operations philosophy texts explore grounding abstractions 
aim philosophy texts describe world entirety relate results prior writings 
philosopher important relate nature quantities process measurement observation generally question scientific knowledge 
instance notion quantities mass meaningfully expressed linear ratios standard turns convention albeit useful familiar 
ellis argues notion unit incomplete choice units combined related measurement procedure 
assuming shared interpretation result multiplying meter times real number 
purposes sharing communication engineering models machine human readable forms advantage able isolate meaning quantities process measurement 
apologies sweeping rug relevant issues strategic decoupling issues 
building ontologies writing social contracts 
free invent conceptualization long meaning effectively communicated standard terminology logic 
accepting kif language foundation example commit including things sets relations universe discourse 
add ontology algebra extend physical quantities 
philosophical draws heavy line objects cross timeless mathematical entities physical concepts mass length 
agents need strong boundary engineering model states quantity mass exists related length quantity algebraic expression agent 
evaluation criteria clarity coherence specification paramount faithfulness world issue 
share reuse analysis philosophy writing pragmatic ends 
example differences casual writing quantities careful treatment property association 
sees stated quantities properties objects qualities quantitative 
careful writer point quantities relational comparing objects respect relationships distance points 
informs design 
departing conventional object oriented approach give independent status quantities leave modeling decision map objects quantities 
essence decoupling theories quantities theories model formulation 
similarly understanding nature physical theory measurement guides away impulse sake computational elegance 
example simpler computational point view fix single basis set fundamental physical dimensions units measure recursively derive rest 
laws physics tell inherently privileged physical dimensions study measurement tells choice basis sets dimensions units convention 
fact engineers deal systems units chooses different basis set changed historical time motivates provide model builder representational machinery define system units part domain model 
ontologies formal ontology philosophy literature relevant knowledge sharing ontologies combined papers ai 
growing body ontologies appearing literature seen knowledge representation community including sample 
closely related engineering ontology thesis alberts 
alberts describes formal ontology intended basis building interoperable reusable knowledge systems design 
ontology provides vocabulary modeling structure behavior systems systems theory finite element modeling 
formalization systems exemplary treatment quantities ontology simplistic 
quantities status values variables symbolic quantity types 
provision defining new dimensions describing complex dimensions quantity types appear anticipated systems theory analogs effort flow 
second values unary scalar functions time time exceptional outside range model 
prevents vector tensor models pde models phase space models time independent variable third values functions tuples numbers fixed units 
akkermans top develops systems theory methodology maturity 
proposes engineering ontologies levels description functional components physical processes mathematical relations model data 
model formulation cml language shade engineering agents aims suite ontologies system theory similar coverage 
ontology provide foundation mathematical data level models comprehensive engineering ontologies 
acknowledgments supported arpa prime contract lockheed subcontract sq nasa ncc nag arpa order 
ideas knowledge sharing shaped rewarding conversations richard fikes mike genesereth pat hayes doug lenat bob neches marty tenenbaum 
anonymous kr reviewers adam farquhar pat hayes dan russell thoughtful reviews 
akkermans top 
tasks ontologies engineering modeling 
proceedings th knowledge acquisition knowledge systems workshop banff canada 
alberts 
ymir ontology engineering design 
doctoral dissertation university twente 
bateman kasper moore whitney 
general organization knowledge natural language processing penman upper model 
usc information sciences institute marina del rey ca technical report 
bunge 
treatise basic philosophy volumes ontology 
reidel publishing dordrecht holland 
burkhardt smith eds 
handbook metaphysics ontology 
philosophia verlag munich 
campbell 
account principles measurement calculations 
green london 
coombs 
theory methods social measurement 
katz ed research methods behavioral sciences press new york 
crawford farquhar kuipers 
qpc compiler physical models qualitative differential equations 
proceedings eighth national conference artificial intelligence boston pages 
aaai press mit press 
cutkosky engelmore fikes gruber genesereth mark tenenbaum weber 
pact experiment integrating concurrent engineering systems ieee computer 
davis 
representations commonsense knowledge 
morgan kaufmann san mateo 
ellis 
basic concepts measurement 
cambridge university press london 
falkenhainer farquhar bobrow fikes forbus gruber iwasaki kuipers 
cml compositional modeling language 
stanford knowledge systems laboratory technical report ksl january 
falkenhainer forbus 
compositional modeling finding right model job 
artificial intelligence 
forbus 
qualitative process theory 
artificial intelligence 
genesereth 
agent framework software interoperability 
proceedings darpa software technology conference meridian arlington va pages 

genesereth fikes 
knowledge interchange format version manual 
computer science department stanford university technical report logic march 

genesereth nilsson 
logical foundations artificial intelligence 
morgan kaufmann publishers san mateo ca 
gruber 
role common ontology achieving sharable reusable knowledge bases 
james allen richard fikes erik sandewall ed principles knowledge representation reasoning proceedings second international conference cambridge ma pages 
morgan kaufmann 
gruber 
principles design ontologies knowledge sharing 
nicola guarino ed international workshop formal ontology padova italy 
revised august appear formal ontology conceptual analysis knowledge representation guarino poli eds kluwer preparation 
gruber 
translation approach portable ontology specifications 
knowledge acquisition 
gruber olsen 
engineering math ontologies 
world wide web url www ksl stanford edu knowledge sharing readme html 
gruber tenenbaum weber 
knowledge medium collaborative product development 
john gero ed artificial intelligence design pages 
kluwer academic publishers boston 
guarino 
ontology meta level categories 
kr 
guarino poli eds 
formal ontology conceptual analysis knowledge representation 
kluwer preparation 
guha 
contexts formalization applications 
doctoral dissertation stanford university 
halliday resnick 
physics 
john wiley sons new york 
hirst 
ontological assumptions knowledge representation 
kr 
hobbs moore eds 
formal theories common sense world 
ablex norwood nj 
iwasaki low 
model generation simulation device behavior continuous discrete changes 
intelligent systems engineering 
lenat guha 
building large knowledge systems representation inference cyc project 
addison wesley menlo park ca 
massey 
measures science engineering expression relation interpretation 
ellis horwood limited 
mcguire kuokka weber tenenbaum gruber olsen 
shade technology knowledge collaborative engineering 
journal concurrent engineering applications research 
neches fikes finin gruber patil senator swartout 
enabling technology knowledge sharing 
ai magazine 
newell 
knowledge level 
artificial intelligence 
patil fikes patel schneider mckay finin gruber neches 
darpa knowledge sharing effort progress report 
principles knowledge representation reasoning proceedings third international conference cambridge ma morgan kaufmann 
randall cohn 
modelling topological metrical properties physical processes 
kr morgan kaufmann 
reynolds perkins 
engineering thermodynamics 
mcgraw hill 
rosenberg 
physical system dynamics 
mcgraw hill new york 
shoham 
temporal logics ai semantical ontological considerations 
artificial intelligence 
notes note exist mean spoken including varieties existence identified hirst 
purpose specifications give ontological status various modes offer way representing things shared conceptualization 
note purpose specifying common conceptualizations see justification restricting form definitions necessary sufficient conditions require conservative definitions claims world 
note number particles understand distinction understand point 
note ellis gives special status units saying merely names associated scales 
wanted allow agents commit unit conversion committing theory measurement scales 

