file swapping networks cacheable 
characterizing traffic nathaniel aviv bergman roy ben shaul aviv shavit peer peer file sharing traffic internet grown rival traditional web surfing 
measures analyzes characteristics relatively new type traffic investigates feasibility caching 
interest significant trend emerged years internet peer peer file sharing growing far rapidly traditional traffic consequently internet service providers isps experience volumes exceed traditional web surfing traffic 
just characteristics web surfing widely analyzed recorded mainly order determine hopefully ameliorate impact techniques caching files similar studies necessary order understand cope huge bandwidth drain created phenomenon 
presents results study objectives twofold analyzing traffic research methods may done case traffic lead reduced bandwidth consumption caching analyzing content flows networks behavioral analysis tastes computer users 
files shared file sharing systems encompass types digital media consumed computer users files draw singular picture society digital data 
challenges traffic differs traffic necessitates novel monitoring caching techniques 
consider typical file download dominant fasttrack protocol downloader types keywords associated file interest initiating search request 
query sent supernode fasttrack client nominated serve local file directory maintaining lists file names expand networks tel aviv israel 
downloader receives reply supernode specifying details files matching query search request 
downloader chooses file interest list initiating actual download session 
fasttrack client attempt locate fasttrack servers possible possess file request different file 
providers file located ongoing download sessions terminated order split subpart downloaded newly located providers 
table highlights unique characteristics relation traffic exemplified download procedure small file size range huge file size range mb kb gb objects transferred typical file download completely single opens dozens session simultaneous sessions typical session session may take hours completes seconds complete relatively reliable sessions constantly abort sessions content prematurely content transmitted dedicated transmitted pcs servers number number sessions sessions reflect popularity indicate popularity gradual changes object steep changes object popularity popularity songs movies applications hits overnight standard protocol numerous proprietary protocols single port numerous ports network unique content identification url content different names traffic analysis suggests portion objects associated multiple urls degrading web caching performance assumes unique content identification url 
disparity traffic types specifically large sizes files long duration sessions multiple tcp sessions required single download fact majority sessions abort prematurely demands formulating meaningful approach monitoring traffic devising unique caching algorithm 
methodology study divided primary categories measuring analyzing characterizing traffic researching ability save bandwidth caching 
study facilitated design construction special purpose server xl specifically designed monitor traffic transparent fashion 
placing server central internet junction able collect exact image traffic flowing junction 
applied various analysis tools order approach key issues mentioned characterizing digital media consumption habits determining extent caching reduce traffic 
theoretical caching analysis verified performing special caching algorithm isp live connections measuring bandwidth savings isp experiences network 
server installed major israeli isp collected data line connects local adsl cable users usa 
diagram describes installation alteon layer switch directs traffic xl server destination port number connection 
connections accepted xl server extracts destination ip address connection tries connect address 
successful session consist tcp connections originator server second server destination address 
relaying traffic received leg double connection leg sides connection complete full session transparently 
purpose caching minimize traffic expensive links going cisco router europe 
session completed cache server transmits requested data disk reducing usage expensive link 
xl server runs dual ghz pentium iii processor gb ram com mbps nic disks provide total gb storing cache 
server runs linux kernel aa 
pie chart depicts traffic breakdown distinct protocols bandwidth consumption ii 
active protocols chose intercept fasttrack traffic kazaa morpheus mbps accounts plurality traffic line 
data collected period month 
results section summarizes main findings quantifying amount traffic server exposed characterizing composition traffic traversing network 
theoretical analysis performed determine data cached effect bandwidth savings 
empirical results bandwidth saved isp network performing caching 
network traffic server intercepts sessions extracts ip addresses sessions destined attempts connect 
process successful server holds separate connections session originator server server destination 
table summarizes connections downloads ii known gnutella protocol appearing chart measured separately approximately traffic link 
intercepted server course month intercepted connections successfully connected destination destination unreachable connection destination timed download sessions control sessions searches management average simultaneous downloads peak simultaneous downloads total gb content transferred downloads traffic characteristics subsection analyze composition traffic order obtain better understanding nature characteristics form picture user interest digital data 
summarizing distribution popularity 
number times file transmitted network computed iii ordered high low 
computed accumulated percent downloads generated accumulated percent sorted set files 
downloads cumulative percentile downloads files 
cumulative percentile downloads seen files account downloads 
exact effect behavior caching potential traffic depends distribution file sizes 
actual caching results detailed section caching 
chart analyzes breakdown traffic common file categories dividing total traffic volume file category iii networks type calculation tricky 
typical download file formed tens sessions sub parts file transmitted 
approach accumulate number bytes transmitted file divide file size 
gb traffic distribution song mov app pic doc file type 
traffic distribution file types interestingly traffic link consisted movie files 
shows histogram file sizes files transmitted network loads file size distribution file size range mb 
file size distribution bins histogram chosen reflect typical sizes various file types 
instance smallest file size range covers typical picture sizes bin covers average song file sizes short video clips enter third bin 
applications tend mb range slightly smaller games may reach mb 
bins match sizes full length movies 
apparent majority traffic generated movie downloads indicates sizes majority files range typical song files 
apparent contradiction explained extremely large size movie files relative popularity accounts large share traffic 
analyzed composition files frequently network breaking file type categories 
charts show percentage file type relative traffic categories generated 
top media distribution song mov app pic doc file types 
distribution top files file type gb top traffic distribution song mov app pic doc file types 
distribution top files traffic generated significant increase traffic volume perceived comparing application traffic 
comparing clear top ranking files music files account little traffic generated top ranking files 
caching pivotal caching issue relates percentage traffic served cache caching mechanism 
mentioned caching mechanisms applicable traffic distinct properties traffic 
analyze extent traffic cached focused aspects theoretical caching potential empirical caching 
developed program reads traces traffic collected server applies analytical methods computing optimal static set files stored size cache order generate largest byte hit rate traffic defined trace iv order empirically verify iv analytical computation allow dynamic cache objects replaced popularity fades away suboptimal limit attainable byte hit rate 
week period analytical computations implemented caching algorithm maximizes byte hit rate consideration special nature traffic noted 
theoretical caching potential analysis traffic trace shows potential byte hit rate generated caching 
especially dramatic exceeds high caching systems known achieve values 
significant surprisingly small disk space required achieving considerable caching results 
recalling traffic composed extremely large files songs contain mb movies contain gb caching presumed impractical due extremely large disks needed effective caching 
reality gb disk space suffice achieve close maximal caching traffic monitored 
graph plots byte hit rate achieved disk size 
byte hit rate theoretical cache limits gb disk space 
theoretical cache limits important question relates byte hit rate affected volume traffic 
installation exposed terabyte content graph relates content volume 
byte hit rate expected crowded network 
expected installation handling heavier traffic 
ideally issue addressed filtering trace data increasingly large subsets clients 
dynamic ip environment difficult keep track client identity addition ethical questions user privacy violation raised practices 
alternative approach chosen 
reasonable limitation little effect computation defines theoretical limit savings traffic 
graph similar generated various intervals testing 
graph relates volume traffic accumulated startup progressively advanced phase testing 
graph combines 
byte hit rate cache limits various traffic volumes gb disk size gb traffic gb traffic gb traffic gb traffic gb traffic gb traffic gb traffic gb traffic 
cache limits various traffic volumes vertical line run graphs form new graph disk size size location horizontal line axis plots byte hit rate function traffic volume 
graph produced running line large axis value reflecting infinite disk size 
graph specifies maximum hit rate achievable value traffic volume 
max byte traffic volume gb traffic flowing network 
hit rate traffic volume relatively high traffic volume required order generate high hit rate 
graph indicates cache steady state reached experiencing terabytes traffic 
assume graph logarithmic order may perform extrapolation caching increase central installation 
graph original graph steps forward logarithmic function order 
max byte traffic volume gb traffic flowing network ln 
hit rate traffic volume graph forecasts congested line experiencing times traffic byte hit rate measured empirical verification implemented caching algorithm designed fit unique properties traffic 
server implemented caching live traffic installation 
order verify ability save bandwidth caching traffic analyzed bandwidth measurements performed routinely isp provider 
specifically isp routinely measures bandwidth entering server bandwidth transmitted 
difference measurements consists data server transmitted cache hits defines bandwidth savings generated caching 
graph vi produced isp shows incoming plotted line outgoing plotted area traffic measured week phase installation 
graph measures savings approximately period 
interestingly hit rate measures percent downloads served cache irrespective file size measured range 
significantly higher byte hit rate compared hit rate indicates sizes highly popular files tend larger sizes popular files 
alternatively graph may indicate byte hit rate installation increase time traffic server exposed triples 
fact files loose popularity public consumer tastes shift play increase traffic spread long duration 
vi peaks charted represent daytime habits usage 

traffic installation period focusing unique hour duration installation period bandwidth increased mbps isp measured savings seen graph 

unique focus improvement savings seen traffic surge validates findings summarized figures predict increase bandwidth savings traffic volume increases 
additional testing session conducted described impact adding disk space caching performance tested 
fourth disk added server enlarging space dedicated caching gb gb 
approximate increase byte hit rate measured reaching stable 
derives understanding nature traffic fasttrack programs form majority traffic 
majority files transmitted network audio files 
audio files loose certain amount significance focusing popular files majority video application files 
furthermore portion total traffic generated audio files clearly smaller traffic generated video application files 
concludes traffic transmitted isp link highly repetitive consequently responds caching 
analysis traffic computed byte hit rate compares favorably web caching hit rates known range 
shown disk space required effective caching traffic small practical close maximal caching attained gb disk space 
analysis concludes byte hit rate computed installation correlated traffic volume indicating higher byte hit rate may expected links heavier traffic load 
taken findings indicate caching traffic effective desired means coping bandwidth drain generated increase traffic 
acknowledgments wish mention significant qa help offered testing server 
grateful rachel dedicated help phrasing editing 
indebted don encouragement suggestions 
amos internet gold assisting installation server 
mariano schools declare file swapping cnet news com march news com com html bradley david michael feeley measured access characteristics world wide web client proxy caches proceedings usenix symposium internet technologies systems monterey ca december kelly andrew morpheus network www com pub morpheus tml terence kelly thin client web access patterns measurements cache busting proxy proceedings sixth international workshop web caching content distribution terence kelly jeffrey mogul aliasing world wide web prevalence performance implications www cade metz swap meet pc magazine march www com print article michael rabinovich oliver spatscheck web caching replication page addison wesley 
