ontology integration xml web resources bernd amann beeri michel scholl cedric cnam inria rocquencourt amann scholl cnam fr hebrew university israel beeri cs huji ac il 
deals modeling aspects addressed context integration heterogeneous autonomous xml resources 
propose integration system emphasis algorithmic aspects technical details 
focus significance offering appropriate high level primitives mechanisms representing semantics xml data 
posit support primitives mechanisms pre requisite realizing goals semantic web 
decade seen emergence web central forum data storage exchange infrastructure large part human communications information activities domains art medicine business 
utility web depends development models paradigms representation manipulation data enable development flexible expressive applications 
xml proposed standard data exchange possibly storage 
compared relational model de facto standard database systems structural primitives building trees elements attributes offer flexibility data organization format 
clearly standardization efforts accompanied formal experimental studies xml associated mechanisms formal studies understand expressive power computational complexity algorithms require experimental studies better understand requirement potential application domains support require conceptual modeling manipulation data 
example shortcomings dtd mechanism specifying schematic properties xml identified effort overcome limitations lead definition xml schema 
report xml data integration issues encountered web project 
goals design implement portal architecture mediator considered experimental study xml springer verlag partly supported ec project web ist 
data integration 
resulting prototype follows local view approach lav offers users virtual data repository domain 
repository virtual actual data resides external sources 
users repository concerned source location source data organization taken care integration portal 
posit xml enabled data sources support xml querying xpath possibly near xquery 
emphasis algorithmic details technical details system thoroughly 
concentrate data model mediator mechanism describing xml sources mediator 
discuss length conceptual modeling issues need addressed context data integration project approach tackling 
study emphasizes significance offering appropriate high level primitives mechanisms representing semantics xml data 
posit support primitives mechanisms pre requisite realizing goals semantic web 
outline follows 
section overview approach data integration cultural xml resources 
section integration model discuss studied problems justify decisions 
conclude section 
system overview section general overview system architecture main ideas main components 
detailed discussion technical concepts algorithms 
goal provide sufficient understanding system underlying ideas basis discussion issues subsequent sections 
xml resources illustrate approach example concerning integration xml cultural information sources 
source located url www paintings com contains information paintings 
dtd source defines element types painter painting contains xml attribute element painter painting attlist painter name cdata required element painting empty attlist painting title id required second source located url www art com complete source describes paintings artists museums 
dtd element art painting artist museum element painting title attlist painting painter idref required museum idref implied element artist empty attlist artist name cdata required id id required element title pcdata element museum name city attlist museum id id required element name pcdata element city pcdata sources deal subject differ terms contents terminology 
source contains information paintings data organized painter 
locations paintings museums deemed irrelevant described 
second source artists museums described 
organizes data differently source paintings artists described independently 
designate painter museum painting xml id idref mechanism 
common integration scenarios sources may supply part information sought user 
information sources different terminologies uses designate painter 
observe information concerning entity types structured differently different sources 
example paintings arranged second source prefers organize data painting respective paintings 
global schema base integration project local view approach 
assume hypothetical global repository contains information interest user subject area described global schema 
sources local view global repository 
view means contains part relevant data 
may contain information entity types 
concerning entity types contains may contain information entities type global repository may contain information entity 
structure may differ global repository 
case local views sources represented xml 
data model global schema xml ontology 
ontology essentially simple object oriented schema describing concepts typed multi valued attributes connected binary symmetric roles 
attributes roles inherited inheritance links classes 
example ontology cultural artifacts inspired icom model shown labeled directed graph 
actor carried carried isa person name string activity produced produced image man object title string image located location fig 

ontology cultural artifacts image url string type string museum city string museum name string nodes graph represent concepts ontology attributes 
concept unique name represented bold face followed possibly empty list attributes name type 
ontology describes concepts representation cultural data actor person activity man object image museum 
example attribute name type string concept person 
concepts related binary roles depicted solid arcs 
inheritance isa links concepts depicted dashed arcs 
fact actor performs activity instance concept activity produce man object represented roles carried produced 
postulate role inverse depicted parentheses role carried inverse carried 
high level detail ontology due desire enable modeling sources possible art domain 
defer section detailed discussion ontologies xml global data model 
additional assumptions ontologies components additional explanations section 
derived ontologies role roles concatenated provided target source compatible account relationships 
example role carried concept actor concept activity 
role concatenated attribute similar conditions 
concatenations role attribute sequences referred role paths viewed derived roles derived attributes member attribute 
example role path carried produced defines derived role concept actor concept man object 
derived role inverse 
example inverse role path carried produced produced carried 
concept path form form concept role path subconcept concept path defines derived concept standing instances reached instances 
example person carried produced defines subconcept man object stands instances concept man object reached instance concept person role path carried produced 
adding derived concepts derived roles ontology defines derived ontology properly contains 
reasoning subset relationships derived concepts derive relationships 
example derived concept person carried produced subconcept activity produced general suffixes derived concepts define general derived concepts 
repository conforms ontology extents derived roles attributes concepts uniquely defined repository derived ontology defined 
interest derived ontology motivated fact sources may provide data derived concepts 
relationships derived ontology enable sources provide answers terms original concepts 
example source provides information person carried produced allows obtain instances man object necessarily 
note answers obtained sources lav approach partial answers case 
source descriptions evaluate user query expressed terms ontology translate queries xml sources 
need establish correspondence source global ontology 
correspondence described mapping collection mapping rules 
mapping rules xml considered options granularity mapping rules trees mentioned node node path path tree tree 
chosen path path approach 
specifically rules map restricted sublanguage xpath xpath patterns predicates schema paths ontology 
example rules map xml fragments source www paintings com ontology www paintings com painter person name name painting carried produced title title rule form rule label url variable variable xpath pattern ontology schema path 
variable bound defined rule variable variable assume bound rule 
path called source path rule xpath pattern child descendant axis 
path concept role path ontology called schema path rule 
rules define instances derived concepts xml fragments obtained rules viewed object instances concepts 
example mapping rule states elements bound variable root elements xml documents www paintings com instances concept person 
rules define instances possibly derived attributes roles 
example rule specifies xml corresponds concept attribute name 
precisely tells instance concept person obtain value concept attribute name path name root remind xml fragment 
way rule defines instances derived role carried produced connecting instance concept person obtained rule fragments instances concept man object obtained evaluating location abbreviation painting 
rule concatenation variables serve glue allows concatenate mapping rules 
convenient formulation implementation query processing 
express semantic relationship different xml elements 
example mapping contains rules source www art com ontology www art com painting man object id painter produced carried www art com painter person name name www art com sculpture man object see reach binds instances concept person dif ferent routes continue step name obtain value attribute name person 
example routes rule concatenation rule lead element type 
observe bind variable allowing relate different element types painting semantically related similar structure 
query rewriting evaluation description global schema terms ontology allows users formulate structured queries aware source specific structure 
illustrate querying simple sub language oql defining tree queries 
queries allow explicit joins aggregate operators sufficiently powerful illustrate issues answering queries source data mapping rules 
user set query sources need get possible answers satisfy source may provide subset possible answers need evaluate applicable sources consider query query requests title objects created van gogh select person name carried produced title van gogh query variables paths connect form tree 
evaluate query source need rewrite query source answer 
consider binding paths query variables compare schema paths mapping rules source 
example consider mapping source www paintings com bind variable associated person rule variable rule variable path obtained concatenation rule rule obtain variable rule binding example exactly general case may exist set bindings source 
variable rule binding replace variable binding paths query clause location paths mapping rules associated 
example query replacement produces query illustrated 
select www paintings com painter name painting title van gogh source supports general xml query language xquery query rewritten xquery expression illustrated sent source evaluation 
document www paintings com painter name painting title van gogh return source supports restricted query facilities xpath query needs rewritten xpath 
easy example requesting value title elements conditions paths leading 
general case xquery expression may need decomposed xpath queries xpath query may return larger tree needs filtered integration site obtain answer xml fragments see details 
course rewriting user query source query attempted source 
problems arise attempting discover rewritings described 
assuming performed rewritings obtained answer sets merged user 
merge may just simple union better 
obtain possibly partial information entity sources join union called 
decide perform join needs ensure entities represented elements different sources identical 
requires keys global schema sources 
discuss keys detail section 
cases obtain full answer source 
rewriting algorithm tries find largest subquery main subquery user query answered source 
remainder subqueries answered source identified processed sources 
results main remainder subqueries joined integration site 
assume query requests title objects created van gogh name city museum exposed select person name carried produced title located museum name city van gogh source www paintings com contain mapping rule schema path matches variable binding path located 
consequently obtain incomplete answers source object created van gogh get museum located name city 
get information identify remainder subquery asking name city museum man objects subquery involves variables process sources 
variable included remainder subquery join variable queries 
glue results main remainder subqueries joining queries select person name man object carried produced located title museum name select van gogh city issue needs considered 
values bound elements different type 
know elements represent man object 
answer keys 
key man objects available source www paintings com subquery evaluated key available source remainder subquery evaluated join performed 
best user partial results source 
note keys available optimize remainder subquery evaluating subquery values bound corresponding keys generate remainder subquery source 
obviously specific query may return large set answers optimization called 
issue optimization described algorithmic issues 
integration model section issues addressed discuss choice ontology integration data model user poses queries ontology represents certain domain interest ii introduce notion keys essential feature querying integration data heterogeneous xml sources 
xml integration previous data integration projects relevant theory framework relational model 
sources relational relational model integration advantages particular query language define source global schema mappings 
concerned sources xml 
model global data model context easy decision 
obvious question xml xyleme mix nimble agora xml 
nimble mix employ global view approach gav directly comparable approach 
major advantage approach mediator defined traditional view query different sources user queries rewritten source specific queries unfolding view definitions 
xyleme agora local view lav approach advantage exist query rewriting necessary 
agora system xml global schema integration relational xml resources 
schema represented generic relational schema faithfully captures xml document structure 
resources represented relational views generic schema 
user queries xquery expressions xml global schema translated sql queries terms generic relational schema sql queries evaluated sources 
xml global data model extended relational model source global schema mappings query rewriting 
xyleme defines global schema simple xml dtd called dtd 
approach xml resources described path path mappings absolute source paths starting document root mapped absolute paths dtd 
source paths paths follow descendant relationships 
addition xml dtds global user data model possible distinguish entities relationships leads precise mappings 
usage ontologies access sets distributed xml documents conceptual level 
integration achieved assumption documents respect canonical dtd derived ontology 
expressive power xml dtd grammars compared powerful ontology models 
conceptual integration model xml choice integration model problems dealt sources xml entities type represented elements different structure single source different sources structure may different tags structure elements may differ sources aforementioned piece data represented element source attribute 
concepts represent entity types 
unique name xml elements sources different tags may mapped concept 
user sees concept name need worry diversity tags different sources 
taken care mapping rules source authors describe source mediator 
entity type global schema defined structure 
sources may contain corresponding entity type subset entities type part entity structure 
commensurate lav approach 
argue global data model xml correctly take account features 
briefly discuss shortcomings xml user oriented conceptual data model 
simplicity discussion assumes dtd describe xml 
xml schema proposal shortcomings partially solved believe arguments merit attention help better understanding xml schema 
state nice properties expected conceptual model 
models distinguish entities objects values may simple complex 
entities related relationships may constrained various cardinality constraints 
relationships symmetric 
entities attributes relate values 
entities identified keys 
entity types may related relationships emphasize commonality structure 
provide user simple expressive model domain support visual presentation schemas declarative visual query languages 
contrast xml hierarchical data model relationships directed parent child 
notion symmetric relationship case odmg standard notion inverse relationship represent symmetry 
relationships xml hierarchical 
id idref mechanism allows horizontal relationships may 
relationships untyped mechanism allows declare symmetric relationship represented pair directional links 
attributes relationships conceptual models usually distinguish attributes relationships 
xml distinction attributes single occurrence allowed attribute may multi valued elements number occurrences allowed 
clear guidelines data represented forms 
matter fact known xml serves masters document community database community 
distinction attributes elements straightforward documents sectional units book represented elements 
extra information book publication data represented attributes 
distinction quite meaningless data 
clear notions attributes elements xml correspond attributes relationships conceptual models 
relationships type inheritance described relationships supported dtd introduced xml schema proposal conveniently summarizes similarity structures 
database context relationships represent containments sets entities 
person actor query asks actors certain properties source offers information person sense lav approach generate query source retrieve persons properties 
form subset answer query 
addition simplicity representing common structure querying power query request information concept subconcept feature helps overcome terminological differences sources 
symmetric relationships xml symmetric binary relationship modeled asymmetric parent child relationship elements 
source choose element types parent 
example painting child painter source www paintings com 
source choose invert relationship painting parent painter 
course binary relationships may represented xml id idref mechanism 
today established methodology directs xml authors generate xml documents normal form entities represented top level elements relationships horizontal 
step direction 
currently integration scenario accept possibilities 
xml chosen global data model element nesting representation relationships problem inverse hierarchies global schema source force ancestor axis xpath mapping rules 
render source description complex significantly complicate query processing 
symmetric representation relationships relationship inverse direction intuitive 
allows view sources simple hierarchies description requires child descendant axis xpath 
summary simple conceptual model global data model advantages simplicity expressive power 
possibly viewed veneer xml data model believe advantages significant 
semantic keys xml keys essential data integration 
fact way decide xml fragments different sources identical considered concept instances 
xml resources dealing heterogeneous autonomous 
consider example sources www paintings com www com 
source uses identify painting exist paintings title 
second source id attributes identify museums 
paintings identified title exist paintings title second source 
distinct sources provide different local key definitions integration define keys global schema 
key paths identity define key concept set role paths source called key paths 
general concept may zero keys assume simplicity concept exactly key denoted observe key concept empty means instances concept identified 
assume simplicity isa related concepts share key 
example persons actors identified names actor person key concept man object title produced carried means man objects identified title artist produced 
instances concept activity identifiable activity calculating key values order decide instances concept identical calculate compare key values 
values obtained considering key query evaluated key paths attribute paths query simply follows key paths starting corresponding instance 
case key paths concept query obtained replacing target concepts key queries 
example key query returns key value instance concept man object represented variable select title concept joinable concept non empty key concepts target key path joinable concepts 
easy produced carried name see key values calculated instances joinable concepts notion joinable concept similar notion value representable concept 
semi structured query languages assume attributes roles global data model may multi valued optional 
means result key query key value instance set tuples choice defining identity object set tuples just tuple 
semi structured query languages chosen second solution define fragments identical key values disjoint 
user queries key queries rewritten corresponding source mapping 
rewriting consists essentially replacing schema paths rules location paths applied xml fragment source similar xml keys defined 
exist zero rewritings return subset complete key value example possible sources identify artist different names 
words lav approach tuples real key value order conclude equal instance observe user queries key query issued single source 
obtain complete binding source variables bound key queries decomposed 
discussion keys issue concerning rewriting key queries 
existing mapping allow system find instances concept sufficient find key values instances 
example rule binding path produced carried previous key query rule returning name artist produced artifact 
case key query unfolded replacing key paths target concept set paths key path previous key query rewritten query select title produced carried name observe rewriting correct key replaced concept contains key path 
artist defined name name unfolding relaxed condition correspond person 
addressed problems encountered design choices context integration heterogeneous xml sources web project 
particular justified choice ontology xml mediator data model discussed benefits draw 
context semantic web applicable data model represent ontologies rdf schema daml oil define daml oil rdf schema lacks notion inverse roles properties identified necessary context xml data integration 
authors advocate need develop unified model xml rdf order bridge gap syntax xml semantics rdf web applications 
approach fits context 
important problem raised cultural application example exploitation semantic metadata 
denote information concerning contents source actual data represented source global schema mappings 
far aware data integration projects assume information necessary query processing available mappings 
presence semantic metadata taken account system different ways process queries request information actual data secondly filter sources satisfy query conditions starting rewriting process 
working choice language define semantic metadata algorithm exploits metadata source global schema mappings query rewriting 

abiteboul buneman suciu 
data web relations semistructured data xml 
morgan kaufmann october 

abiteboul quass mchugh widom wiener 
lorel query language semistructured data 
international journal digital libraries 

amann beeri scholl 
xml data integration 
technical report cedric cnam paris france january 

amann beeri scholl 

mapping xml fragments community web ontologies 
webdb may 
cedric cnam fr rc pdf 

amann beeri scholl 

rewriting evaluating tree queries xpath 
technical report cedric cnam paris france november 

libkin 
normal form xml documents 
appear pods 

chamberlin fernandez florescu robie simon stefanescu eds 
xquery xml query language 
working draft december 
url www org tr xquery 

brickley gupta eds 
resource description framework rdf schema specification 
candidate recommendation march 

buneman davidson fan hara tan 
keys xml 
proc 
www pages 

clark derose eds 
xml path language xpath version 
recommendation november 
www org tr xpath 

cluet 
views large scale xml repository 
proceedings rome italy september 

van harmelen horrocks mcguinness patel schneider stein 
daml oil march description 
note december mar 


community webs project 
inria fr 

crofts 
electronic organization diverse data role object oriented model 
proceedings conference melbourne australia october 

erdmann studer 
structure access xml documents ontologies 
data knowledge engineering 

fallside 
xml schema part primer 
recommendation may 
www org tr xml schema 

amann beeri scholl 
connecting xml world world semantics 
demonstration edbt 

levy 
answering queries views survey 
vldb journal 

levy rajaraman ordille 
querying heterogeneous information sources source descriptions 
proc 
vldb bombay india september 

lud scher papakonstantinou 
framework navigation driven lazy mediators 
proc 
webdb 
philadelphia usa 

manolescu florescu kossmann 
answering xml queries data sources 
proceedings vldb rome italy september 

pottinger levy 
scalable algorithm answering queries views 
proc 
vldb cairo egypt september 


schewe schmidt wetzel 
identification genericity consistency object oriented databases 
database theory icdt pages 

simeon patel schneider 
ying yang web xml syntax rdf semantics 
appear proc 
www conference 

nimble technology 
url www nimble com 

ullman 
information integration logical views 
proc 
icdt pages delphi greece 

wiederhold 
mediators architecture information systems 
ieee computer pages march 

