process equivalence comparing process models observed behavior van der aalst alves de medeiros weijters department technology management eindhoven university technology box nl mb eindhoven netherlands 
aalst medeiros weijters tm tue nl 
various application domains desire compare process models relate organization specific process model model find web service matching desired service description compare normative process model process model discovered process mining techniques 
researchers worked different notions equivalence trace equivalence bisimulation branching bisimulation existing notions useful context 
equivalence notions result binary answer processes equivalent 
helpful real life applications needs differentiate slightly different models completely different models 
second parts process model equally important 
may parts process model rarely activated parts executed process instances 
clearly considered differently 
address problems proposes completely new way comparing process models 
directly comparing models process models compared respect typical behavior 
way able avoid problems 
results context petri nets approach applied process modeling language executable semantics 
keywords process equivalence petri nets process mining 
today find wide variety process models large organization 
typical examples models epc models sap model workflow models models enactment systems staffware flower oracle bpel business process models simulation models tools aris protos arena interface service descriptions partner interface processes rosettanet bpel processes context web services choreography descriptions process models discovered process mining techniques 
existence different models different types models interesting able compare process models 
applies different levels ranging models business level models level software components looking software component matching specification 
compare process models meaningful manner need assume models semantics 
need assume equivalence notion models 
people working formal methods proposed wide variety equivalence notions models may identical trace equivalence different considering stronger notions equivalence bisimulation :10.1.1.43.4850
unfortunately equivalence notions provide true false answer 
reality seldom perfect fit 
interested degree similarity number completely different identical 
need quantify differences 
reasonable put emphasis frequently parts model 
legend register request book train book flight book hotel send invoice change hotel frequencies fig 

running example 
clarify problem consider process models expressed terms petri nets depicted 
models describe booking trip see legend interpretation various transitions petri nets refers booking flight 
clearly models similar 
classical equivalence notions models considered different 
example process possible execution sequence sequence possible 
petri net allows de possible models 
note focus active parts net transitions passive things places 
classical equivalence notions consider models different clear similar 
want quantify equality degree similarity 
naive approach simply compare sets transition labels nets transition labels smaller set bigger set 
models similar labels completely different behaviors cf 

important consider causal dependencies ordering activities distinguish parallelism choice 
approach consider state spaces sets possible traces models 
case problems may infinitely traces states certain paths probable 
investigate problems propose completely new approach 
main idea compare models relative event log containing typical behavior 
solves problems comparing different models 
models having infinitely execution sequences compared automatically relevance difference taken account 
show capture moment choice analyze may explicitly represented log 
give initial insights approach consider set traces listed 
trace represents execution sequence may may fit models hand 
frequencies event log trace occurred times process instances having behavior 
represents typical behavior 
may obtained simulation model obtained observing reallife system process 
traces fit petri net cf 
petri net allow execution sequences log 
quantify notion fitness 
primary objective compare event log process model compare models presence event log shown 
compare example models substantial number cases precedes compare log see cases difference regarding presence show quantify differences event log 
important note consider full traces compare petri net missing model degree similarity traces fits contain 
remainder organized follows 
providing brief overview related introduce preliminaries required explain approach 
petri nets illustrate approach process model local execution semantics epcs activity diagrams bpmn 
section naive approaches static structure direct comparison possible behaviors discuss limitations 
section core results 
show define precision recall measures event logs containing typical behavior 
notions implemented prom 
conclude 
overview various equivalence notations related literature equivalence notions defined process models 
equivalence notions focus dynamics model syntactical structure trace equivalence bisimulation :10.1.1.43.4850
uses petri nets theoretical foundation 
overview equivalence notions context petri nets 
see discussions equivalence context nets 
authors translate petri net transition system give semantics 
authors emphasize true concurrency aspects giving petri nets semantics 
example known concept occurrence nets named runs reason semantics petri nets 
model formal executable semantics including petri nets translated possibly infinite transition system 
consider transition systems notions equivalence identified 
weakest notion considered trace equivalence process models considered equivalent sets traces execute identical 
trace equivalence problems set traces may infinite trace equivalence capture moment choice 
problem addressed various ways looking finite sets prefixes comparing transition systems traces 
second problem requires stronger notions equivalence 
bisimulation various kinds observation equivalence attempt capture moment choice 
example may different processes having identical sets traces abc abd process choice executing process choice executing branching bisimilarity slightly finer equivalence notion known observation equivalence 
comparison branching bisimilarity observation equivalence equivalences processes silent behavior 
equivalence relations relations introduced inheritance relations branching bisimilarity 
mentioned far aim true false answer 
take account parts process may important 
people prakash panangaden jose desharnais working probabilistic bisimulation labeled markov processes labeled transition systems 
see excellent overview links probability theory community working metrics spaces measures 
different approach 
assume know probabilities 
assume example behavior serve basis comparison models 
related metric labeled transition systems behavioral difference states non negative real number indicating similarity states 
way define behavioral pseudometric compare transition systems shown 
note approach depends explicit notion states clear applied practical mainly activity oriented setting 
far know propose typical behavior recorded event logs aid comparison 
quite different mentioned section 
show context process mining 
preliminaries section introduces basic mathematical petri net related concepts remainder 
multi sets sequences matrices set 
ib set multi sets bags ib multi set denotes number times included multi set 
sum multi sets difference presence element multi set notion subset defined straightforward way handle mixture sets multi sets 
operators robust respect domains multi sets defined different domains defined properly extending domain needed 
size multi set set set finite sequences finite sequence length mapping 
sequence represented string 
ai hd 
ak sequence just elements 
note hd empty sequence 
multi set represented vector ib represented row vector 

enumerate domain 

denotes corresponding column vector transposes vector 
assume matrix matrix rows columns 
row vector seen matrix column vector seen vector 
value element th row th column 
matrix matrix 
product product yielding matrix 
sum matrices having dimensions denoted sequence 
parikh vector maps element number occurrences ib 
petri nets subsection briefly introduces basic petri net terminology notations remainder 
definition petri net 
petri net triple 
finite set places finite set transitions set arcs flow relation 
shows petri nets 
places represented circles transitions represented squares 
relation directed graph define preset postset node explicitly indicate context needed 
flow relation notation follows 
denotes set input places transition notations similar meanings set transitions sharing input place 
note consider multiple arcs node 
petri net shown time place contains zero tokens drawn black dots 
state petri net referred marking distribution tokens places ib 
petri nets shown place initially marked 
note places marked initial state places marked multiple tokens 
standard firing rule transition said enabled input place contains token 
enabled transition may fire transition fires consumes token input place produces token output place example enabled firing result state marking place 
state enabled 
fires disabled remains enabled 
similarly fires disabled remains enabled firing transitions resulting state marks token independent order 
definition formalize notions 
definition firing rule 
petri net ib marking 
enabled set enabled transitions result state resulting firing denotes enabled enabled firing results marking result 
defines petri net move marking firing transition 
extend notion firing sequences 
suppose 
tn sequence transitions petri net initial marking 
means sequence markings 
mn mn mi ti mi 
notation define set reachable markings follows ib 
note reachable empty sequence 
note result need yield multi set enabled marking places may negative number tokens 
allowed petri net enabled transitions fire technical reasons convenient markings may negative tokens 
clear considering incidence matrix petri net 
definition incidence matrix 
petri net ib marking 
incidence matrix matrix cases result state resulting firing enabled enabled result set enabled transitions firing incidence matrix petri net different types analysis possible efficiently calculate place transition ants provide minimal sufficient requirements reachability marking 
important see result need yield valid marking may place result indicating negative number tokens 
result reverse need case 
enabled calculates transitions enabled firing transition times function result earlier defined function enabled cf 
definition 
may case executing starting transitions forced fired enabled 
result places may get negative number tokens 
reason need concepts compare petri nets observed behavior 
situations need able deal transitions observed enabled 
note need enabled transitions forced fire enabled 
note explicitly distinguish row column vectors 
naive approaches propose compare processes basis event log containing typical behavior 
presenting approach detail discuss naive approaches 
equivalence processes structure humans compare process models typically compare graphical structure activities transitions petri net terms appear models similar connections 
clearly graphical structure may misleading models superficially appear similar may different 
graphical structure indicator may quantify similarity 
precise split join behavior distinguish xor splits joins 
words derive simple graph node represents activity arc kind connection 
example petri net shown reduced graph nodes arcs 
petri nets models similar graph structure derived 
easy see process models different graph structure 
overlapping connections models arc 
suggests structural point view models equivalent similar 
quantifying overlap relative model take perspective model second model 
leads definition precision recall specified 
definition structural precision recall 
petri nets 
precision define recall precision fraction connections appear 
value precision high connections second model exist model 
recall fraction connections appear 
value recall high connections model appear second model 
note think original model new model want compare original 
na nb nc nd petri nets shown 
precision na nb 
recall na nb 
note precisions recall definition pair petri nets 
metrics adaptation precision recall metrics 
list precision values precision na nb precision na nc precision na nd precision nb na precision nb nc precision nb nd consider na initial model nc best precision models connections nc appear na 
consider na initial model nd best recall connections na appear nd 
fig 

connection structures similar quite different terms behavior 
connection structure differs corresponding behaviors identical 
precision recall figures process models reasonable 
unfortunately models nearly identical connections may quite different shown 
na nb nc nd petri nets shown 
precision na nb recall na nb na nb clearly different 
na transitions executed concurrently nb choice transitions 
na nc structurally different precision na nc identical behaviors 
examples show definition provide completely satisfactory answer comes process equivalence 
precision recall rough indicators selecting similar model repository models 
note strictly speaking nd correspond petri net defined definition transitions easy extend definition called labeled petri nets different transitions label 
equivalence processes state space traces process models similar structure may different behaviors models different structures similar behaviors focus quantifying equivalence processes actual behaviors 
start naive approach define recall precision full firing sequences marked petri nets 
definition naive behavioral precision recall 
petri nets having initial markings respectively 
corresponding sets possible full firing sequences finite ib enabled ib enabled 
precision recall clearly initial markings highly relevant 
clear context explicitly mention precision precision recall recall 
na nb nc nd petri nets shown sa sb sc sd corresponding full firing sequences 
sa sb sc sa sd sb 
precision na nb recall na nb models considered completely different identical full firing sequences possible models 
precision na nc recall na nc precision nb nd recall nb nd 
consider process models 
fourth model nd infinite set full firing sequences 
focus models na nb nc 
compare na nb precision na nb recall na nb full firing sequences nb possible na way 
nc differs nb precision recall values identical comparing na precision na nc recall na nc 
examples show definition provides useful quantification equivalence quite different definition 
quantification number problems 
set full firing sequences needs finite 
need case illustrated petri net shown 

models need terminating possible dead marking representing completion process 
note models may unintentional livelocks designed non terminating 
models apply definition meaningful way 

definition take account differences importance frequently visited parts model probably important 
example certain full firing sequences may low probability comparison sequences occur frequent 
clearly taken account 

fourth definition appears rigid difference full firing sequence invalidates entire sequence 
precision na nb recall na nb models start 
moment choice taken account definition essentially trace equivalence criterion 
authors emphasized importance preserving moment choice defining notions observation equivalence bisimilarity branching weak bisimilarity illustrate importance preserving moment choice consider nb nd depicted :10.1.1.43.4850
precision nb nd recall nb nd environments able distinguish processes 
nb state just enabled 
states exist nd token enabling suppose correspond receipt different messages environment 
case nd potentially deadlocks message handled system waiting marked 
deadlock possible nb 
problems listed show similarity metrics criteria directly comparing possible behaviors terms traces little practical point view 
alternative approach compare state spaces sets traces 
example trying establish bisimulation relation states related way move process model followed vice versa :10.1.1.43.4850
solve problems listed 
notion state exists implicitly difficult extend refined equivalence notions include probabilities cf 

propose approach section 
equivalence processes context observed behavior overcome problems highlighted far propose approach uses exemplary behavior compare models 
exemplary behavior obtained basis real process executions case process exists user defined scenarios simply simulating models 
assume exemplary behavior recorded event log 
definition event log 
event log multi set sequences set ib 
event log considered multi set full firing sequences cf 
definition 
sequences may exist independent model sequence may occur multiple times 
comparing process models event log define notion fitness 
notion inspired earlier genetic mining conformance checking 
definition fitness 
marked petri net ib multi set fitness enabled hd fitness yields number 
note sequence calculate number times transition supposed fire enabled 
divided yield number sequence 
number shows fit 
repeated sequence may appear multiple times multiply result divide 
definition assumes 
fundamental restriction strange cases occur empty event log empty sequence simply assume 
example consider event log shown containing traces 
clearly fitness na sequences reproduced na 
fitness nb fitness nc fitness nd 
examples show definition matches intuitive understanding fitness 
important note transitions forced fire enabled cf 
definition 
particular sequence partly fitting parse sequence nc half sequence fits 
forcing execution nc initially enabled 
enabled exist model 
resulting state enabled 
firing event sequence enabled 
events enabled note events log need correspond actual transitions 
events simply ignored assume enabled defined properly transitions appear note omit initial marking clear context fitness na fitness na 
resulting fitness 
note better look individual events considering sequences definition 
definition fitness nc 
focus completely fitting sequences fitness nc considerably lower partly fitting ignored 
inspired definition fitness compare models basis log 
straightforward extension definition models compare overlap fitting partially fitting sequences 
case considers actual behavior contained log 
go step look enabled transitions models compare just check event sequence possible take account enabled transitions point sequence 
idea results definition precision recall 
definition behavioral precision recall 
marked petri nets ib multi set precision enabled hd enabled hd enabled hd recall enabled hd enabled hd enabled hd explain concept consider log petri nets shown 
precision na nb recall na nb 
precision na nc recall na nc 
consider process models respect logs shown 
precision na nb recall na nb 
note numbers lower sequences starting frequent 
compare na nd precision na nd note denominators enabled hd enabled hd may evaluate zero 
case numerator zero 
assume cases 
recall na nd 
note nd allows behavior log executing 
see precision na nd enabling taken account 
easy see definition takes account moment choice enabling set transitions basis comparison resulting sequences 
distinguish nb nd 
section listed problems related definition 
easy see definition addresses problems 
models infinite set firing sequences compared finite representative set traces 

models need terminating 

differences frequent infrequent sequences taken account selecting representative log 

partial fits taken account small local differences result complete misfit 

moment choice taken account focus enabling 
attractive properties precision recall metrics defined definition implemented metrics prom framework 
applied variety process models 
particular context genetic mining 
critical success factors availability log serve basis comparison 
propose existing event logs generate artificial logs simulation 
existing logs extracted information systems obtained manually describing typical scenarios 
important realize today information systems logging wide variety events 
example user action logged erp systems sap workflow management systems staffware case handling systems flower 
classical information systems centralized database logging events called transaction log audit trail 
modern service oriented architectures record interactions web services form soap messages 
today organizations forced log events national international regulations cf 
sox act forcing organizations audit processes 
example application scenario existing event logs comparison existing process set possible 
measure precision recall event log existing information system starting point 
existing process note nd contains duplicate labels transitions label possible extend definition resulting approach models 
prom analysis plug implementing precision recall metrics downloaded www org 
compared event log fitness notion section 
gives indication quality initial model 
quality acceptable compared existing process log 
approach simulation 
simulation models just initial model 
note generated logs need complete definition takes enabling account 
important probabilities taken account differences frequently visited parts model importance differences rarely visited parts model 
novel approach compare process models 
existing approaches typically quantify equivalence models equivalent 
practical applications approach useful real life settings want distinguish marginally different processes completely different processes 
proposed implemented notions fitness precision recall context prom framework 
key differentiator notions take event log typical execution sequences starting point 
allows overcome problems associated approaches directly comparing processes model level 
approach petri nets applied models executable semantics formalizations epcs bpmn uml activity diagrams 
focus application concepts tools 
applied approach context process mining 
genetic algorithms evaluated notions precision recall 
notions applied wide variety situations measure difference organization specific process model model select web service fits best description pips bpel compare medical guidelines compare existing process model redesign 

van der aalst basten 
inheritance workflows approach tackling problems related change 
theoretical computer science 

van der aalst alves de medeiros weijters 
genetic process mining 
darondeau editors applications theory petri nets volume lecture notes computer science pages 
springer verlag berlin 

van der aalst alves de medeiros weijters 
process equivalence context genetic mining 
bpm center report bpm org 

van der aalst weijters 
workflow mining discovering process models event logs 
ieee transactions knowledge data engineering 

best shields 
equivalence results free choice nets simple nets periodicity live free choice nets 
brauer reisig rozenberg editors proceedings caap volume lecture notes computer science pages 
springer verlag berlin 

van 
behavioural pseudometric metric labelled transition systems 
th international conference concurrency theory concur volume lecture notes computer science pages 
springer verlag berlin 

desel 
validation process models construction process nets 
van der aalst desel oberweis editors business process management models techniques empirical studies volume lecture notes computer science pages 
springer verlag berlin 

desharnais gupta jagadeesan panangaden 
metrics labelled markov processes 
theoretical computer science 

van alves de medeiros verbeek weijters van der aalst 
prom framework new era process mining tool support 
darondeau editors application theory petri nets volume lecture notes computer science pages 
springer verlag berlin 

dumas van der aalst ter hofstede 
process aware information systems bridging people software process technology 
wiley sons 

van glabbeek weijland 
branching time abstraction bisimulation semantics 
journal acm 

de medeiros weijters van der aalst 
genetic process mining basic approach challenges 
bussler editor bpm workshops workshop business process intelligence volume lecture notes computer science pages 
springer verlag berlin 

milner 
calculus communicating systems volume lecture notes computer science 
springer verlag berlin 

pinter 
discovering workflow models activities lifespans 
computers industry 

rozenberg simone 
survey equivalence notions net systems 
rozenberg editor advances petri nets volume lecture notes computer science pages 
springer verlag berlin 

reisig rozenberg editors 
lectures petri nets basic models volume lecture notes computer science 
springer verlag berlin 

van der aalst 
conformance testing measuring fit appropriateness event logs process models 
bussler editor bpm workshops workshop business process intelligence volume lecture notes computer science pages 
springer verlag berlin 
