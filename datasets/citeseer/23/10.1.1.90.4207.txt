approach automatically generated model transformations ontology engineering space stephan bernhard bauer programming distributed systems institute computer science university augsburg augsburg germany bauer informatik uni augsburg de 
integration systems various enterprises realize collaborations complex 
application model driven software development facilitates faster flexible integration separating system descriptions models different levels abstraction 
interoperability problems modelling hardly overcome solutions operating essentially syntactical level 
presents approach capabilities semantic web technology order improve modelling automated generation model transformations 
development complex systems enterprises new challenges arise 
new interoperability issues modelling enterprises application systems overcome model driven software development fostered enable efficient development flexible cross organisational information communication systems 
unfortunately current interoperability solutions addressing problems different representation formats modelling guidelines modelling styles methodologies syntactical level focus metamodels concrete syntax 
interoperability achieved semantical level 
need integrate adapt ontologies architectures infrastructures layers enterprise architectures operational models 
done applying mappings different enterprise model formalisms enterprise modelling ontology enriching heterogeneous business models semantically ontologies achieve shared understanding enterprise domain 
propose approach ontology model transformations integrates ontologies modelling utilising different technological spaces mda ontology technological space automated generation model transformations mappings metamodels 
interoperability modelling fostered employing automated reasoning technology ontology engineering technological space generation model transformations 
shown approach realized semantic enabled model transformation tool sem mt tool semantic enabled ide semide 
tool applies technology bridging mda semantic web approaches ontology definition metamodel odm capabilities benefits approaches 
organized follows introducing background information chapter chapter comprises problem statement origin 
section approach explained procedure concepts automated model transformation generation introduced chapter 
chapter provides detailed look components semantic enabled ide tool realizing approach 
extracts case study section concludes discussion outlook chapter 
background context models definitions models vary purpose 
nice general definition provided mega model describing model system enables give answers system study need consider directly system study 
short model representationof system systems physically observable elements models concepts modelling languages 
modelling language set models 
models modelling language model modelling language metamodel 
model driven software development model driven software development generalization omg model driven architecture paradigm mda approach software development modelling automated transformation models implementations 
models descriptions systems model code generation key part definition software system 
largely automated model transformations refine models concrete models vertical model transformations simply describe mappings models level abstraction horizontal model transformations 
model transformations play key role important transformations developed efficiently possible 
mof query views transformation qvt specification omg provided standard syntax execution semantics transformations tools chain 
beneath commercial products facilitating mda exist open source projects dedicated 
eclipse generative modeling tools project gmt provides set research tools illustrating operations applicable models 
tools range code generation model transformation weaving atl model management am 
project aims close gap users solutions currently software development methods models construction software 
contributes eclipse model driven development integration project 
dedicated offer platform omg list mda companies www omg org mda committed products htm integration facilities needed applying approach 
aims provide ability integrate modelling tools create customizable environment 
ontology ontologies considered key element semantic interoperability act shared vocabularies describing relevant notions certain application area semantics specified reasonably unambiguous form 
ontology differs existing methods technologies way primary goal ontologies enable agreement meaning specific vocabulary terms facilitate information integration individual languages ii ontologies formalized logic representation languages 
semantic specified unambiguous way 
iii representation languages come executable calculi enabling querying reasoning run time 
application ontologies contain definitions specific particular application ontologies refer ontological theories focus clarify intended meaning terms specific domains 
technological spaces introduce concept technological spaces ts aiming improve efficiency best possibilities different technologies 
technological space short zone established expertise ongoing research 
working context set associated concepts body knowledge tools required skills possibilities 
initially technological spaces mda ts xml ts syntax ts ontology ts dbms ts mda ts ontology ts important 
mda ts models considered class citizens representing particular views system built 
ontology ts considered subfield knowledge engineering mainly dealing representation reasoning 
ontology engineering space performs outstanding traceability specification correspondences various metamodels mda ts applicable facilitate aspects content separation 
ontology definition metamodel odm omg issues specification defining family independent metamodels related profiles mappings metamodels corresponding international standards ontology definition capabilities supporting conventional modelling paradigms capturing conceptual knowledge 
grounding formal logic standards model theoretic semantics sufficient enable reasoning engines understand validate apply ontologies developed odm 
odm includes set metamodels grouped logically nature representation formalism represents odm comprises metamodels rdf owl common logic cl topic maps tm non normative part description logic dl 
metamodels rdf owl represent structural descriptive representations commonly semantic web community 
odm defines transformations uml metamodel different metamodels defined odm owl rdf 
semantics unfortunately notion term semantics differs context people 
root problem harel rumpe identify insufficient regard crucial distinction syntax true semantics 
clarify terms particular significance 
syntax syntax nl notation language distinguished concrete syntax textual graphical representation language syntax metamodel machine internal representation 
metamodel way describe language syntax 
semantic semantic meaning language expressed relating syntax semantic domain 
description semantic domain notation ns vary plain english mathematics 
semantics defined semantic mapping language syntax semantic domain 
ontological ontology defines common terms concepts meaning describe represent area knowledge 
talking ontological mean technology ontology ts technology logics rdf owl semantic web community describe vocabularies ontologies 
semantic web enabled term semantic enabled synonym 
problems model driven software development getting sophisticated powerful tools languages modelling enterprises developing application systems 
natural course things huge diversity specialized methodologies modelling languages representation formats evolved serving purposes particular application domains 
find heterogeneity models especially syntax semantics concepts associated different people organisations 
different versions metamodels time new versions metamodels domain specific languages released metamodels uml uml new model transformations developed existing model transformations adjusted new versions replace old ones 
different concrete syntax apart different visual representations concrete syntax modelling languages metamodels cases differ syntax internal representation formats different mof implementations emf mdr owl developed describing application domain 
different semantics semantics modelling language concepts rarely formally specified different people organisations associate different semantics concepts metamodel 
done consciously applying special model styles 
different modelling views distributed systems development application integration collaborating organisations development processes integrated providing views models compliant representation guidelines respective partner 
specification implementation views supported automated model transformation generation order improve seamless inter organisational system development 
approach overcome problems facilitates methods generate model transformations despite structural semantic differences metamodels applying semantic web technology ontology ts 
binding sem 
annotation metamodels ontology inference component bootstrap model transformation mm mm ontology model transformation sem mt component model manipulator model transformations binding sem 
annotation metamodels source target input relationship binding ontology model transformation approach different versions metamodels bound ontology see definition chapter certain domain see 
bindings sem 
annotation specify semantic mapping metamodels semantics concepts ontology 
generate model transformations various model transformation languages reasoning mechanisms 
metamodels ontology bindings metamodels ontology specified 
bootstrap model transformation needed generated automatically 
bootstrap model transformation initial model transformation metamodel metamodel rules model transformation especially semantics model transformations generate encoded 
new model transformation metamodel metamodel generated delta metamodel considered 
new model transformation generated substituting concepts metamodel concepts metamodel initial model transformation 
details section 
automated generation model transformations model transformations various modelling languages automatically derived generated approach see 
section describe procedure generate mappings semantically identical model transformations modelling language modelling language languages exists syntax na nb various technological spaces syntax mda ts na mda ontology ts na ont synchronized 
syntax capability technological space better suited solving problem see 
semantics concepts described means semantic domain sd notation ontology nro owl respectively 
semantics languages defined semantic mappings semantic domain ma sd mb sd 
ontological grounding notation semantic mapping na ont nro 
goal transformation generate define identity relationships concepts model transformation semantics id id identical mapping 
na na mda mda ts ont sd ma ontology ts sd ro mt ab modelling language semantic mapping semantic domain representations procedure automated mapping generation generation procedure works model model transformation models modelling languages exploits ontological grounding ontology 
basis reasoning results gained ontology ts modification operations called obtain new model transformation working solely model model transformation metamodels 
generate model transformation steps performed see bootstrap model transformation generated mapping 
bootstrapping step necessary obtain model model transformation transforming na na adjusted modifications operators 
assuming ontological grounding na na bootstrap model transformation id id inference engine derives interrelationships na nb ontology ts 
possible na nb mapped ontology nro 
automatically computed concepts na substituted semantically identical concepts nb 
interrelationships transferred mda ts modelling languages synchronous representations mda ts ontology ts 
concepts na substituted concepts nb model obtain model model transformation id substitution performed modification operations syntax model model transformation mda ts 
definition ontological grounding semantic annotation comprising static semantics metamodels semantics concepts ontology 
simple version mapping easily generated basis metamodel mda ts 
traversing metamodel containment relationships appropriate mapping rules generated 
bootstrapping step helps extend approach scenarios model transformations adjusted modelling languages metamodels initially designed 
bootstrap transformation simply replaced transformation step performed described 
avoiding derive model transformations directly ontologies results flexible structured architecture sem mt tool see chapter 
issues concerning model transformation checking model conforms qvt metamodel considering cardinality associations ends dealt mda ts 
sem mt component invokes modifications operations basis results reasoning ontology application heuristics see section 
components sem mt tool section presents detail components realized tool semantic enabled ide sem mt tool called parts functionality 
overview semantic enabled ide sem tools model manipulator 
ontologies mm semide infrastructure sem component ruleset ref ontology 
inference component ontology model transformation part semantic enabled ide realized sem tool part semantic enabled ide semide see 
infrastructure semide provides basic functionality including bridge models mda ts application ontologies ontology ts described inference component individually configured sem tools registered infrastructure 
sem tools sem mt tool built top semide infrastructure consist model manipulator sem component rule set 
model manipulator reads creates modifies deletes models model repository 
delivers information models sem component provides interfaces model manipulation 
sem component implements core functionality sem tool 
reasoning results gained inferring ontologies computes queue model adjustment operators 
model adjustment operators tasks specify modification steps performed model manipulator 
queue model adjustment operators processed calling model manipulator interface 
sem tools different relationships ontologies elements sem tool set reasoning rules 
inference component depicts detailed architectural view inference component 
inference component consists knowledge base reasoner 
base graph contains facts knowledge base reasoning ontology application ontologies ontological 
reasoner triggered rules specific sem mt tool computes inference graph basis base graph 
result reasoning knowledge base contains information relationships important 
especially relationships application ontologies 
knowledge base base graph ontology application ontologies inference graph querying inference component model manipulator sem mt component reasoner inference component rules model manipulator provides modification operations model transformations model transformations models respective metamodels 
solely works syntax meta models mda ts 
model manipulator component divided front back similar established compiler technology see 
front primarily conducts tasks dependent source language back deals issues specific target language 
metamodels bootstrap model transformation brought intermediate representation format scanner parser 
syntax tree analyser checks modifications proposed inference component sensibly applied bootstrap model transformation 
modifications performed transformation manipulator 
application ontology corresponds metamodel ontology ts 
metamodels bootstrap transformation inference component model manipulator front scanner parser back model manipulator sem mt component transformation generator model transformation sem mt component querying syntax tree analyser transformation modifier transformation optimiser querying proposing modifications sem mt component specific sem component implements core part approach 
realizes main functionality sem mt tool inference results ontology ts gain queue adjustment operators modification generation model transformations mda ts 
activity diagram ontology model transformation procedure shows sem mt component model manipulator interact order generate model transformations 
firstly model manipulator identifies metamodel concepts substituted model transformation 
secondly sem mt component queries inferred fact base computes best possible substitution metamodel concepts queue adjustment operators heuristics 
adjustment bootstrap model conducted model manipulator checks substitution applied model transformation sensible 
case substitution applied model transformation model manipulator states sem mt component concepts need different substitution severity ex ception 
basis history previously proposed substitutions sem mt component uses heuristics compute best substitution 
proposed substitution passes model manipulator checks queue modification operators applied adjust model transformation model 
sem mt tool generates qvt model transformations 
model manipulator works emf implementation qvt metamodel 
inference component uses semantic web framework allows loading storing modifying ontologies reasoning ontologies conducting queries ontologies 
prototype jena semantic web framework projects option implementations 
case study automated mapping generation chapter comprises short example sem mt tool works 
mapping metamodels process modelling generated automatically 
metamodel mm excerpt metamodel process orchestration service oriented environment 
second metamodel mm process modelling 
metamodel mm metamodel mm ontology example see excerpt web ontology language services owl 
ontological grounding notation similar semantic mediation application interoperability language 
stands lossless annotation annotation fully captures intended meaning 
denotes overspecification level refinement annotated element greater level refinement concepts ontology 
process name steps flows servicemodel name step name name connected flow sink followed epc name connectors servicemodel name epc name function connectors servicemodel name comp epc name event connectors servicemodel name comp epc name connectors servicemodel name comp name connector name connected connector followed table ontological grounding mm mm ontology step bootstrap model transformation generated traversing metamodel mm 
model see table serves input model manipulator 
transformation process bootstrap mm mm mm mm relation string domain mm prc process name steps mm step flows mm flow enforce domain mm prc process name steps mm step flows mm flow relation string domain mm stp step name flw mm flow enforce domain mm stp step name flw mm flow relation domain mm flw flow sink stp mm step enforce domain mm flw flow sink stp mm step table excerpt bootstrap model transformation written qvt syntax input metamodels ontology ontological bootstrap transformation computation substitution na nb start concept substitute sem mt component queries inference component possible substitutions searches fact base triples kind step mm mm result step mm equal mm step mm general function mm step mm general event mm step mm general mm step mm general split mm step mm general join mm triples fact base form subject predicate object 
sem mt component currently supports predicates equal meaning subject equal object special meaning subject specialization object general meaning subject generalization object 
substitution proposal facts predicate equal considered order find best possible substitution 
objectproperty steps process step mm equal substitution possible objectproperty omitted substitution hope affect model transformation 
proposed substitution process name flows epc name connectors step name name connector flow sink connector substitution performed model manipulator checks substitution applied produces sensible results 
example new valid model transformation generated proposed substitution 
new model transformation loose connecting rules steps attribute removed transformation 
thereon sem mt component searches alternate substitution considering facts predicates equal 
substitution decision applies hierarchy predicate equals better special special better general 
facts provided inference component steps mm general function mm steps mm general event mm steps mm general mm history previously proposed substitutions fact facts predicates equals special exist sem mt component proposes concept substitution process name steps flows epc name function event connectors step name name connector flow sink connector model manipulator checks substitution lead new model transformation relation string domain mm prc process name steps mm step flows mm flow enforce domain mm epc epc name function fct mm connectors mm connector fct 
transformation invalid attribute function type function type see mm 
sem mt component calculates alternative step proc epc name function event ess name steps flows connectors step name function name connector event name connector name connector sem mt component history previous substitution proposals proposal second time search substitutions terminates 
sem mt component find better substitution requested semantic analyser semantic analyser chooses substitution proposal producing valid model transformation 
flow sink connector check model manipulator shows concept substitution generate valid model transformation major side effects model transformation 
substitution generate new model transformation model manipulation 
transformation rules excerpt automatically generated mapping metamodel na nb relation string domain mm prc process name steps mm step flows mm flow enforce domain mm epc epc name function fct mm function event evt mm event mm connectors mm connector fct relation string domain mm stp step name flw mm flow enforce domain mm fct function name con mm connector discussion outlook atlas model weaver tool implements model weaving approach introduced 
enables representation correspondences models called weaving models model transformations generated 
model weaving improve efficiency creation maintenance model transformations creating weaving links automatic 
authors introduce model typing extension object oriented typing propose algorithm checking conformance model types 
model typing permits flexible reuse model transformations various metamodels preserving type safety 
approach improves reuse model transformations provide automatic mapping generation 
approach integrates ontologies reasoning capabilities ontology ts 
case study considered subclassof relationships 
versions apply expressions intersectionof unionof enable complex annotations ontology specifications context reasoning rule set extended 
supports interoperability enterprise models automated generation horizontal transformations 
offers new possibilities integration domain specific languages dsls legacy models 
effort adjusting model transformations new versions metamodels reduced 
generic bootstrap model transformations encode knowledge software platform architecture independent 
changes model transformation rules adapted generic transformations 
improves collaboration distributed development partners different development environments modelling guidelines model transformations methodologies 
approach uses additional information provided people developing metamodels domain specific languages 
hopefully ontological semantic enabled tools 
problems arise appropriate ontology exists 
cases techniques matching merging ontologies linguistic schema probabilistic approaches applied obtain suitable ontology 
experimented selected prototypes show feasibility approach sem mt tool developed integrated semantic enabled ide 
basis goals develop better heuristics computation concept substitutions provide sophisticated model manipulation operations model transformations 

bauer semantic enabled software engineering development st international workshop applications semantic technologies 

zivin valduriez experiments oopsla workshop 

zivin neutral infrastructure bridging model engineering ontology engineering esa conference 

borgo 
wonderweb deliverable wonderweb semanticweb org 

eclipse project www eclipse org projects 
favre foundations meta pyramids languages vs metamodels episode ii story baboon dagstuhl germany 

frankel model driven architecture applying mda enterprise computing wiley 

gardner review omg mof qvt submissions recommendations final standard metamodelling mda workshop 

generative modeling tools gmt eclipse project www eclipse org gmt 
guarino understanding building ontologies 
proceedings tenth knowledge acquisition knowledge systems workshop 

harel rumpe meaningful modeling semantics semantics ieee computer volume pp 
ieee 

ideas gap analysis www ideas net 

jena semantic web framework jena sourceforge net 
zivin aksit technological spaces initial appraisal int 
federated conference doa odbase coopis industrial track irvine 

controlled language semantic annotation interoperability business applications workshop semantic integration 

eclipse project www eclipse org 
project www ist org 
oberle semantic management middleware springer 

omg ontology definition metamodel ad 

omg revised submission mof qvt rfp ad ad 

steel 
quel model typing improving reuse model driven engineering th international conference models uml lncs 
