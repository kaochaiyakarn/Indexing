retrieving records gigabyte text statistical ranking donna harman gerald candela national institute standards technology gaithersburg md statistically ranked retrieval records keywords provides advantages traditional boolean retrieval methods especially users 
approach retrieval seen wide spread large operational retrieval systems 
show feasibility retrieval methodology re search done produce fast search tech niques ranking algorithms test results large databases users 
results show response times order seconds megabytes text favorable user reaction 
novice users able consistently obtain search results minutes training 
additional done de vise new indexing techniques create inverted files large databases 
techniques sorting require working space size input text produce indices input text size 
statistically ranked retrieval records key words research success years 
experiments involving ranking tech niques general agreement research community utility ranking retrieved records 
house information retrieval systems ranking including porter brzozowski transfer retrieval technique large operational systems slow 
reason general inertia large established systems reason lack clear proof statistical rank ing done real time large databases accepted users place addition boolean retrieval 
goal research help es proof 
received june revised october accepted october 
subject copyright united states 
published john wiley sons research leading article major areas 
area involved producing ef ficient indexing searching algorithms efficient retrieval indexing time amount storage needed indices 
second area research involved preliminary design interfaces allow user testing testing databases manuals legal code books chapters sections gigabyte data containing separate court cases 
goal examine system served needs various user groups 
past statistical ranking historically information searching form published catalogs manually indexed records advent computers produced multiple efforts map ping system faster version con cept 
current retrieval systems medline manually index medical journals search indices boolean connectors relate useful terms 
experiments automatic indexing allowed terms records serve indices record effectiveness approach particularly demonstrated cleverdon cranfield experiments cleverdon keen 
commercial retrieval systems utilized re sults doing boolean retrieval full text articles abstracts systems lexis nexis mead represent bulk commercial systems today 
automatic indexing led new type retrieval methodology automatically matching query terms record terms ranking re records goodness match 
user inputs simple query sentence phrase boolean connectors retrieves list records ranked order relevance 
early developers methodology salton smart project salton project showed feasibility ap proach 
years information retrieval research com journal american society information science 
ccc expanding technique various models probabilistic models vector space models fuzzy logic models various matching similarity measures term weighting functions 
experiments reported proceedings acm sigir con ferences books sparck jones salton mcgill 
survey belkin croft ranking techniques argues superiority traditional boolean retrieval 
commercial retrieval systems generally utilized new methods notable exceptions koll mcgill 
effort show large scale feasibility statistical ranking approach uses similarity measures term weighting functions past experi ments 
particular ranking weight assigned record formula see appendix involving func tion frequency query terms record function distribution query terms database 
frequency query terms record usu ally indication extent record concerned terms 
distribution query term database useful weighting relative impor tance terms query 
example term computer computer science database relatively unimportant agricultural database probably important query term 
measure relative importance provided inverse document frequency weight idf see ap details sparck jones 
record fre quency weight idf weight combined normalized function length record form total record weight ranking 
particu lar ranking measure chosen proven effectiveness range test collections salton mcgill harman imple mentation simplicity 
goal research produce better ranking methodology show current laboratory techniques effective large scale record retrieval users 
remainder article major sections 
section indexing showing methods create inverted files needed search ing 
section search engine de search techniques presenting results experiments done enhance response times 
final major section describes user testing discussing user reaction prototype retrieval system response times large databases 
indexing methodology experiments traditional automatic indexing methods producing files divided sequential steps 
input text parsed list words location text 
usually time consuming storage consuming operation indexing 
second list inverted journal american society information science december list terms location order list terms sorted search engine usually sorted alphabetical order list locations attached term 
process involve tape sorts large databases 
optional third step postprocess ing inverted files adding term weights reorganizing files 
indexing large databases traditional indexing methods presents problems 
normally handle tape sorts 
requires inverting step done sorting large databases 
additionally amount storage available processing relatively small limit maximum space possibly size order text size gigabytes total storage gigabyte input text file 
new indexing method developed step pro cess need middle sorting step 
step produces basic inverted file second step adds term weights file reorganizes file maximum efficiency fig 

creation basic inverted file avoids au explicit sort right threaded binary tree knuth 
term identified text parsing pro gram looked binary tree added tree related data causes tree data updated 
data contained binary tree node current number postings number records con taining instances term storage location postings list term 
postings stored multiple linked lists linked list term lists stored large file 
element linked postings file consists record id location term term frequency record pointer element linked list term 
storing postings single file storage wasted files easily accessed links 
location head tail linked list stored binary tree entire list need read addition creating final postings file step 
note binary tree linked postings list capable growth 
important indexing large databases data usually processed mul tiple separate files short period time 
binary tree linked postings list considered updatable inverted file 
structures efficient search method creating storing supplemental indices updates primary index 
linked posting list updating strategy inverted files sug earlier van rijsbergen 
binary tree linked postings lists saved term weighting routine step 
routine walks binary tree linked postings list create alphabetical term list dictionary sequentially stored postings file 
term consecutively right threaded binary tree multiple linked lis alphabetically ordered sequential file term tree temporary term postings dictionary 
postings file read binary tree automatically puts list alphabetical order related data 
new se stored postings tile allocated elements posting 
linked postings list traversed frequencies calculate term weights 
step writes record ids corresponding term weights newly created sequential postings file 
note final file need contain elements post ing link pointer needed 
sequentially stored posting list place linked list saves storage speeds access time input read multi record buffers buffer usually holding records term 
sequentially stored postings files created step number postings unknown point processing input order text order inverted file order 
final index files consist dictionary sequential postings file 
element dic tionary contains term idf weight number postings term entire database loca table 
indexing statistics 
fig 

flowchart new indexing method tion postings postings file 
element postings file contains record id term weighting term record 
term weighting measure term impor tance record precalculated stored allow speed search ranking process 
allows ranking process simply sum weights selected terms record get total weight record ranking records 
term weight calculated term record formula appendix minus sum mation done search process 
weights precludes ability easily change ranking algorithms 
results step indexing saved ranking algorithm changed redoing second step indexing changing term weights 
table gives statistics showing differences old new indexing schemes 
old indexing scheme refers version traditional index text size indexing time working storage index storage megabytes hours megabytes megabytes old new old new old new journal american society information science december ing method records parsed list words record locations list inverted sorting term weights added 
note size final index small input text size megabyte database input text size court cases megabyte database subsets full court cases 
size remains constant new indexing method format final indexing files unchanged 
working storage storage needed build index new indexing method larger size final index tially smaller size input text 
amount working storage needed old indexing method approximately megabytes megabyte database gigabytes megabyte database amount storage capacity environments 
new method takes time small megabyte database cause additional processing overhead 
size database increases process time log relationship size database 
tradi tional method contains sort log best case squared worst case making processing large databases taken longer old method considerably longer tape sort re quired large amount working storage 
attempts reduce final storage new method involved strategy postings files 
strategy creates bitmap term postings list 
bitmap contains bit record bits cranfield col lection bits set term appears record corresponding bit 
strategies require constant storage term bit record database terms postings result significant storage sav ings 
schemes carry major drawback term weighting done record basis presence absence term known 
lead drop search performance 
discussion topic searching methodol ogy section 
search methodology experiments way inverted file produce cally ranked output retrieve records contain ing search terms frequency information term records compute total weight retrieved records sort records harman 
search time method directly related number retrieved records prohibitive large databases 
process dependent number records retrieved method de veloped cite 
method block storage hash table ac cumulate total record weights hashing record id unique accumulator addresses 
searching process dependent number retrieved records sort final set ranks affected number records sorted 
method chosen current search engine fig 

block storage containing accumulator unique record id reserved usually order kbytes large databases 
binary search query term executed dictionary address postings list term returned 
postings list read term weight record id added contents unique accumulator 
term weights precalculated dur ing indexing allow method processing 
query term processed postings cause additions accumulators 
query terms handled accumulators non zero weights sorted produce final ranked record list 
table illustrates timing improvements small cranfield collection abstracts times shown processing entire query collection queries 
times approximate 
old system described search section processing times ranging hours minutes depending searching parameters de signed flexibility speed 
time old system time searching parameters matching new system 
time cut drastically records retrieved smaller list new system terms retrieval 
note retrieval results unaffected change search methodology retrieved records ranked equivalently systems 
parser dictionary lookup binary search dictionary entry gat weights postings fit numbers term basis accumulator record total sort journal american society information science december ranked record numbers fig 

flowchart search engine 
table 
search times 
retrieval number system queries search time total records retrieved old minutes new minutes find ways improving search times series experiments run cranfield test collection abstracts 
test collection retrieval results verified see degradation performance methods 
set experiments involved bitmap ping 
minimize storage terms postings file storage greater bitmap storage bitmapped 
terms handled normal postings file method 
cranfield meant terms having postings records stor age savings 
method saves indexing storage decrease number records sorted search time 
query terms processed order importance measured idf value terms term weights op posed bitmaps accumulated 
tions higher frequency bitmapped terms added nonzero accumulators increase total weight records re weighted terms add records sort ing 
fewer total records sorted search times improved 
table gives results cranfield collection method terms number postings term 
av erage precision standard performance measure table 
experiments 
postings storage bytes total records retrieved total search time queries average precision precision change bitmapped postings precision search ratio number relevant records retrieved total number records re averaged levels recall ratio number relevant records retrieved total num ber relevant records salton mcgill 
seen table terms postings reduces storage search time considerably hurts performance significantly 
terms postings re duces time storage significantly signifi cantly hurt retrieval performance 
function number postings idf term 
allows general specification individual collection statistics absolute numbers 
example shown column table done idf term maximum idf term database 
second method reduce number records sorted involved pruning 
method fact records queries retrieved matching query terms high database frequency assumes 
records sorted serve increase sort time seldom useful 
records retrieved normal manner pruned addition re record list sorted 
experiments run cranfield collection try method 
results shown table 
records pruned matching query terms idf maximum idf term database records re need sorted processing time cut nearly half 
recall precision hurt signifi bitmapped postings bitmapped postings bitmapped idf table 
pruning experiments 
total records retrieved total records sorted total search time queries average precision precision change pruning pruning pruning idf idf journal american society information science december cantly 
term distribution text databases highly skewed low frequency terms approxi mating zipf distribution tague ing low threshold eliminates records having terms posting counts starting database terms clearly high frequency terms 
pruning requirements relaxed prune records matching terms having idf maximum idf starting posting count retrieved records need sorted time savings significant 
recall precision sig hurt level pruning fore time savings expense performance 
note search time performance bit mapping pruning cutoff maximum idf similar 
techniques ef pruning uses postings find marginal records prunes records sorting bitmap ping uses bitmaps select records add record list sorting terms appear 
timing saving techniques produce similar results cranfield collection storage savings pruning 
user testing show differences pruning discussed section user testing 
similar done buckley buckley extensive tion complex stopping conditions pruning 
perry willett dis cussed efficient ways handling large collections includ ing pruning techniques 
user testing previous section batch processing test collection 
test search methodology online users large databases simple inter face needed designed 
interface mouse controlled windows interface extremely simple ai operating 

systems 
interactive dialog 
orbit brs scrutiny operational 
system 
retrieval 
line systems challenges research 
system 
retrieval 
cite natural language retrieval system 
system 
retrieval 
term conflation retrieval operational 
system retrieval fig 

screen showing titles display 
journal american society information science december operate users starting operations mouse selected buttons inputting query typing windows selecting records display list titles retrieved records ranked order fig 

design interface user test ing leading improvements interface scope 
interest search methodology performed real users 
results testing fall areas search engine perform fast satisfy online pruning affect online timing 
second ranking produce tory results users third kinds prob lems need addressed produce truly usable retrieval system 
different databases involved testing 
database size cranfield ab collection consisted manual 
manual relatively organized sec tions chapters 
record determined equiva lent paragraph manual appeared useful record size users 
decision caused short records table 
second database legal code book sections subsections 
language technical records set subsection user preference 
records larger words occurring multiple times record 
third database consisted court cases 
database natural division smaller data bases separate index ing database parallel searching parts database interest 
record set court case 
table shows basic statistics databases 
average number terms rec ord includes duplicate terms measure record length number unique term occurrences 
number records average number terms record function definition record table 
database statistics 
size databases meg number records average terms record number unique terms average postings term meg logical divisions data expected usage 
particular megabyte manual generally searched single facts paragraph logical division causing short records 
court case considered logical entity causes large records 
number unique terms relative size database database indexed 
megabyte database ex ample numbers indexed user require ments 
created additional unique terms larger dictionary terms having single post ing 
problem magnified databases ing court cases unusual formatting characters removed single incidences misspelled words created 
retrieval usually affected dictionaries larger normally 
users tested system consisted people proficient doing research usually manual research databases part regular job 
users seldom line retrieval system 
testers boolean re trieval systems regularly boolean retrieval systems regularly develop ex 
users brought trial queries questions currently manually researching researched past 
queries covered wide range subject areas contained databases 
searching hardware having intel processors 
parallel process ing mentioned processor search 
internal memory megabytes processor speed mips disk interface average access time milliseconds average data transfer speed megabytes second 
software written unix operating system 
system fast 
initial response time queries largest databases usually tested mega bytes order seconds 
table gives average response time test group user queries database 
response time megabyte database parallel processing parts database longer database processed parallel 
done databases pruning showed significant savings retrieving records megabyte database seconds 
response time pruning smallest database going time savings meg meg meg megabyte database yielding response time second 
takes longer ing large databases processing bitmapped terms takes somewhat longer process ing terms postings effect begins number records sorted 
pruning done cutoff idf term maximum idf database 
system effective 
looking test queries queries retrieved relevant record top retrieving relevant records top record 
user queries recorded test queries worked equally users pleased results 
users experienced searchers got successful results minutes demonstration search logic learn 
ease combined natural ability ranking retrieval system handle partial matches output viewed con relaxation boolean query 
testing ses sion users brought queries previously run boolean system 
system retrieved single relevant record top records queries boolean system missed relevant record completely queries 
note test queries general rele vant record users usually looking answer question trying find possible records answer question 
means precision system high recall un known 
clear important recall situa tion user looking answer situation addressed cooper cooper 
interestingly users looking high recall test sessions tended run queries expect single query table 
response time 
size database meg meg meg meg number queries average number terms query average number records retrieved average response time query seconds average response time average response time pruning journal american society information science december provide answers 
may pattern learned doing manual research effective online retrieval relevant records re initial queries need query cation harman 
queries retrieve fell cate gories 
queries failed tried retrieve record words relevant record simply query 
common problem full text retrieval systems manual indexing thesaurus relevance feedback provide alternative search terms 
queries retrieved relevant records rank query general clearly user spe cific mind selecting single relevant record 
rest queries performed poorly set reasons listed 
system provided automatic stemming ex queries include possible term variants lovins stemming algorithm 
usually effective 
queries stemming hurt performance badly 
pruning eliminated records containing high frequency terms 
queries contained high frequency terms relevant record queries contained mul tiple high frequency terms 
pruning bitmap ping eliminated records 
queries contained numbers common words critical retrieval 
largest databases ability retrieve phrases improved performance greatly 
retrieval involved secondary pass ranked records showing user records containing phrase 
test queries run court cases queries retrieved relevant records ranks greater 
allowing words grouped phrases caused queries retrieve relevant record top im proved performance queries 
problems significantly hurt averages test collection environment impor tant operating retrieval system handle mate query 
stemming problems resolved allowing user prevent word stemmed 
pruning needs modified provide special processing queries high frequency words 
tends favor pruning mechanism bit mapping postings bitmaps stored order handle queries eliminates storage advantage 
project moving direction providing features neces sary operating retrieval system 
features expansion secondary pass methodol ogy handling phrases allow field restrictions term adjacency boolean connectors 
features seldom proved useful ranking environment considered necessary features user testers regularly conduct searches diaries users 
features provided hurting response time increasing index size system acceptable traditional searchers 
new techniques investigated course research addition extensive user testing 
new method building inverted files developed sorting needed working storage space size input text file 
size final index kept small order input text size 
search engine built technique allowed response time dependent num ber records retrieved 
basic search engine required minutes process entire cran field test collection queries seconds search query megabyte text database 
additional time saving methods pruning tried 
kept number records sorted ranking minimum 
pruning technique cut average response time seconds megabyte database 
time saving techniques significantly hurt retrieval performance system 
user testing showed power ranking environ ment 
system retrieve relevant records top shown user queries users generally enthusiastic ease 
summary prototype retrieval system statistically ranked retrieval records performed speeds equivalent better current operational systems provided results equivalent better provided systems 
ranking schema allows novice users opportunity success ful searchers minimal training important learning curve searchers system occasionally 
sharp contrast boolean re trieval systems continual necessary obtain consistently results 
clearly technology available laboratory settings ready wide scale implementation large operational systems 
acknowledgments reviewers ex suggestions additional pointers new 
appendix 
ranking idf weighting measure journal american society information science december log idf rank log mj number terms query frequency query term record idf inverse document frequency weight term database total number significant terms including duplicates record length factor idf log number records database number records collection contain instance term belkin croft 

retrieval techniques 
williams martha ed annual review information science technology 
new york knowledge industry publications brzozowski 

masquerade searching full text ab automatic indexing 
journal information science 
buckley 

optimization inverted vector searches 
proceedings eighth international conference research development information retrieval pp 
montreal canada 
cleverdon keen 

factors determining formance indexing systems vol 
design vol 
test results 
aslib cranfield research project cranfield england 
cooper 

paradoxical role unexamined documents evaluation retrieval effectiveness 
information processing management 


research application cite natural language information retrieval system 
salton cl schneider 
eds research development information retrieval 
berlin springer pp 

hat man 

experimental study factors important docu ment ranking 
proceedings acm conference research development information retrieval pisa 
harman benson fitzpatrick goldstein 

information retrieval system experimentation user applications 
proceedings riao boston pp 

harman 

interactive query expansion 
proceedings th international conference research development information retrieval grenoble france pp 

koll mcgill 

enhanced retrieval tech niques microcomputer 
proceedings national online meeting new york pp 

knuth 

art computer programming 
reading ma addison wesley publishing 


large data base file structure dilemma 
journal chemical information computer sciences 


document retrieval system nearest neighbor searching 
journal information science 


medline line searching 
journal american society information science 
mead data central 

quick guide dayton oh 
perry willett 

review inverted files best match searching information retrieval systems 
journal information science 
porter 

relevance feedback public access catalogue research library scott polar research 
program 


trends research information retrieval potential improvements conventional boolean retrieval systems information processing management 
salton 

smart retrieval system experiments auto matic document processing 
englewood cliffs nj prentice hall 
salton 
mcgill 

modern information retrieval 
new york mcgraw hill book 
sparck jones 

statistical interpretation term specificity application retrieval 
journal documentation 
sparck jones 

information retrieval experiment 
london 



influence unlimited ranking practical online search strategy 
online review 
tague 

maximal value zipf size variable sampling properties relationship parameters 
information processing management 
van rijsbergen 

file organization library automation information retrieval 
journal documentation 
van rijsbergen 

retrieval nd edition london butterworths 
journal american society information science december 
