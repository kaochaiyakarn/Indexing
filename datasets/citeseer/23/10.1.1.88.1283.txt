weak key authenticity computational completeness formal encryption omer horvitz gligor department computer science university maryland college park md horvitz cs umd edu department electrical computer engineering university maryland college park md gligor eng umd edu 
significant effort rigorously relate formal treatment cryptography computational 
substantial step direction taken abadi rogaway ar 
considering formal language treats symmetric encryption ar show associated formal semantics sound respect associated computational semantics particular sufficient condition computational encryption scheme 
give necessary sufficient condition completeness tightly characterizing aspect exposition 
condition involves ability distinguish ciphertext key encrypted ciphertext random key 
shown strictly weaker previously suggested condition completeness confusion freedom micciancio warinschi mw independent interest 
keywords 
cryptography encryption authentication formal reasoning completeness weak key authenticity 
modern cryptography investigated formal computational perspective 
typical treatment features formal language statements representing cryptographic entities operations 
security properties usually stated outside language captured operations manipulate formal statements expressed additional formal constructs 
typical treatment uses algorithms strings bits model cryptographic operations 
security properties defined terms probability computational complexity successful attacks 
effort relate approaches traditionally considered separately different communities 
successful attempt holds promise bringing strengths treatment 
direction expected quantify highlight implicit assumptions formal semantics 
addition confirm increase relevance formal proofs concrete computational instantiations 
direction establishment connections may allow application high level formal reasoning mechanisms computational domain 
step direction taken abadi rogaway ar 
focusing symmetric encryption formal language includes constructs represent bits keys encryption operation 
semantics defined language 
expression language associated syntactic counterpart pattern mirrors expression parts look unintelligible viewer informally parts encrypted keys recoverable expression 
expressions said equivalent setting patterns equal key renaming 
constitutes formal semantics 
second definition expression associated ensemble distributions strings obtained instantiating encryption construct concrete computational encryption scheme different security parameters 
expressions said indistinguishable setting associated ensembles computationally indistinguishable 
constitutes computational semantics 
framework ar give soundness result show specific sufficient conditions computational encryption scheme equivalence expressions formal semantics implies indistinguishability computational semantics 
results 
tightly characterize completeness aspect exposition 
identify necessary sufficient condition computational encryption scheme indistinguishability computational setting implies equivalence formal 
expressions condition involves admittance efficient test distinguishes ciphertext key encrypted ciphertext random key noticeable non negligible probability plaintexts drawn ensembles associated expressions 
encryption scheme satisfies requirement said admit weak key authenticity tests expressions 
result obtained new proof technique featuring fixpoint characterization formal equivalence 
literature mw aj notion confusion freedom previously proposed sufficient completeness 
informally confusion free encryption scheme decryption ciphertext wrong key fails certainty 
mentioned suggests full fledged authenticated encryption scheme bn ky achieve notion 
compare confusion freedom strengthened version notion admittance weak key authenticity tests expressions involves admittance single purpose weak key authenticity test defined purely computational terms 
test referred weak key authenticity test 
show requirement encryption scheme admits weak test strictly weaker requirement confusion free certainly weaker requirement authenticated tion scheme 
effect simple encryption scheme admits weak key authenticity test confusion free 
scheme matches completeness criterion mw 
furthermore meets soundness criterion ar 
notion weak key authenticity independent interest 
primitive relates absence weak version key anonymity bb key revealing ar properties 
interesting investigate ways meeting ones explore practical uses 
proceeds follows 
section revisit formal treatment symmetric encryption ar give fixpoint characterization reachable parts expressions 
section discuss computational treatment symmetric encryption revisit computational semantics expressions ar 
section give main completeness result schemes admit weak key authenticity tests expressions 
section strengthened version test compare cryptographic notions particular show admittance weak test weaker property encryption scheme confusion free 
proof demonstrates method achieving admittance weak key authenticity test 
formal treatment symmetric encryption formal semantics expressions section revisit formal treatment symmetric encryption ar 
treatment consists formal language formal semantics 
goal recast definitions ar terms pertain closely tree structure expressions language 
addition provide alternative fixpoint characterization reachable parts expressions plays important role proof completeness result 
formal language symmetric encryption bits set 
keys fixed non empty set symbols disjoint bits 
elements bits keys referred bits keys respectively 
ar formal language denoted exp set expressions defined inductively follows 
bits keys expressions 
referred atomic expressions simply atoms 

expressions 
say directly derived non atomic 
expression key expression 
say directly derived non atomic 
parts definition called derivation rules 
informally represents pairing expressions represents encryption expression key expressions strings symbols 
length expression number symbols comprised count single symbol denoted 
denote expressions identical strings symbols 
important note non atomic expression associated unique rule unique set expressions directly derived 
expressions exp consequently said uniquely readable 
converse holds 
formally non atomic expressions exp identical strings symbols iff 
proof see full version hg 
structure expression represented naturally form tree 
derivation tree te expression defined inductively follows 
atomic te consists single node root labelled 
non atomic te consists single node root labelled ordered list trees expressions directly derived sets nodes trees disjoint contains root te 
say tm tn left right subtrees te respectively 
roots tm tn said left right children root te respectively 
similarly tm said subtree te root tm said child root te 
informally notion derivation tree resembles standard parse tree relate node derivation tree labelled yield corresponding node parse tree 
te denote cardinality set nodes te 
mention properties expressions derivation trees relevant treatment 
expressions identical strings symbols iff respective derivation trees identical see apply unique readability property expressions converse inductively structure derivation trees 
second te consists nodes shown induction length expression 
formal semantics expressions defining formal semantics exp seek capture notion privacy intuitively associated encryption operation 
particular express understanding parts expressions representing encryptions keys recoverable text unintelligible unreachable viewer 
capture understanding expressions differing unintelligible parts look viewer 
just ar mapping expression syntactic counterpart pattern mirrors reachable parts 
define equivalence expressions terms respective patterns 
state definitions terms functions derivation trees expressions patterns form procedures expressions patterns done ar 
te derivation tree expression node set root 
set said contain reachable nodes te 

labelled expression form children te labelled 
labelled expression form exists labelled child te labelled exp length te consists nodes subsets 
follows number sets containing set reachable nodes te finite 
intersection sets 
easy show contains set reachable nodes te minimal sense contained sets 
call set reachable nodes te 
informally reachable nodes correspond parts expression intelligible viewer 
te derivation tree root set reachable nodes graph induced te tree rooted forest set nodes connected component contains set contains set reachable nodes te contradicting minimality 
call tree tree reachable nodes denote 
definition pattern extends expression addition atomic symbol 
informally appear parts pattern correspond unintelligible parts associated expression 
pat set patterns defined inductively follows 
bits keys symbol atomic patterns 

patterns non atomic pattern 
pattern key non atomic pattern 
expressions associate pattern derivation tree tp patterns identical strings symbols iff respective derivation trees identical 
map expressions patterns respective derivation trees need appropriate notion tree isomorphism 
finite rooted ordered trees node sets roots respectively 
said isomorphic rooted ordered trees exists bijection 



uk children iff 
uk children 
said isomorphism rooted ordered trees 
te derivation tree expression node set set reachable nodes 
tp derivation tree pattern vp node set 
say expression pattern exists vp 
isomorphism tp rooted ordered trees 

labelled bit labelled identical bit 
labelled key labelled identical key 
labelled labelled 
labelled exists labelled labelled 
labelled exist labelled labelled 
corresponding definition ar amounts walk tp enforces constraints 
note pattern associated expression unique 
see notice uniqueness te implies unique set reachable nodes implies unique mapped unique tp turn guarantees unique converse true pattern infinitely expressions mapped 
proceed notion expression equivalence 
informally require derivation trees patterns corresponding equivalent expressions isomorphic key renaming 
pi pattern expression ei derivation tree tpi vpi say equivalent write iff exists vp vp permutation keys 
isomorphism tp tp rooted ordered trees 

vp labelled bit labelled identical bit 
labelled labelled 
labelled labelled 
labelled labelled 
labelled labelled 
composing definitions obtain property equivalence relation 
theorem 
ei expression derivation tree tei set reachable nodes rei induced tree reachable nodes ei iff exist re re permutation keys 
isomorphism rooted ordered trees 

re labelled bit labelled identical bit 
labelled labelled 
labelled labelled 
labelled exists re labelled labelled labelled 
labelled exist re labelled labelled exist re labelled proof technical appears full version hg 
conclude brief discussion ramifications formal semantics seen section 
observe definitions encryption operator preserves privacy seen equivalence informally ciphertext conceals underlying plaintext 
conceals plaintext repetitions seen equivalence 
informally adversary ciphertexts tell underlying plaintexts identical 
conceals key repetitions seen equivalence 
informally adversary ciphertexts tell generated encryption key 
conceals plaintext length seen equivalence informally ciphertext conceals length underlying plaintext 
definitions semantics modified accommodate relaxations properties 
example semantics sensitive different plaintext lengths introducing atomic pattern symbol size modifying definition equivalence appropriately 
stress results ar modified tolerate changes 
fixpoint characterization set reachable nodes set reachable nodes defined previous section set intersection terms 
give alternative characterization plays important role proof completeness result 
show expression set reachable nodes te fixpoint associated operator oe 
addition show fixpoint achieved iterative application operator polynomial size number times 
reader referred full version hg full account 
finite set set subsets set said fixpoint said fixpoint denoted lfp fixpoint fixpoints powers defined follows consider expression derivation tree te set nodes root re 
oe defined follows oe re labelled left child te labelled labelled right child te labelled labelled child te labelled labelled prove theorem fixpoint characterization set reachable nodes hg 
expression length te derivation tree re set reachable nodes 
exists lfp oe re 
computational treatment symmetric encryption computational semantics expressions section describe computational treatment symmetric encryption define encryption scheme discuss relevant notion security review methods achieving notion standard assumptions 
discussion similar ar may skipped significant damage 
computational encryption scheme define semantics language expressions subsection recasting corresponding definition ar terms derivation trees expressions 
computational treatment symmetric encryption denote set finite binary strings denote length encryption scheme security parameter consists polynomial time algorithms follows key generation algorithm probabilistic algorithm takes security parameter provided unary denoted returns key write thinking drawn probability distribution induced set denote support distribution 
encryption algorithm probabilistic algorithm takes key plaintext returns ciphertext 
write ek thinking drawn probability distribution induced ek set ek denote support distribution 
common encryption schemes restrict set strings willing encrypt having encryption algorithm return intended capture restrictions 
requirements 
insist plaintext restricted ek ek 
plain denote set unrestricted plaintexts second require restricted length unrestricted 
addition insist length ciphertext ek depend 
decryption algorithm deterministic algorithm takes key ciphertext returns 
write dk 
having decryption algorithm output intended reflect rejection ciphertext 
require correct plain dk ek notion security 
consider variation standard notion indistinguishability chosen plaintext attacks ind cpa security short gm bd 
informally strengthened version conceals key repetitions conceals message lengths discussed subsection 
necessary soundness result see ar additional motivation 
recall function negligible constant exists encryption scheme security parameter adversary access oracles denoted 
define adv pr ek ek pr ek ek ek oracle returns ek input ek oracle returns ek input say type ind cpa concealing length concealing secure ar probabilistic polynomial time adversary adv negligible function 
pseudorandom function families achieving type security 
set denote sampling endowed uniform distribution 
polynomials func set functions func family functions indexed adversary access oracle denoted 
define adv prf pr fk pr func fk oracle returns fk input oracle returns input say pseudorandom gg probabilistic polynomial time adversary adv prf negligible function 
pseudorandom function families commonly computational cryptography building blocks encryption schemes cbc ctr modes 
bd shown modes ind cpa secure underlying pseudorandom family functions 
ar authors describe results extend achieve type security 
see mentioned details 
computational semantics expressions section define computational semantics language expressions section 
associate expression ensemble distributions resulting instantiation expression concrete computational encryption scheme particular security parameter 
define expression indistinguishability terms indistinguishability associated ensembles 
expression te derivation tree keys set key symbols appearing atomic keys keys derivations form 
encryption scheme security parameter 
xk tag finite fixed set tags 
xk denote arbitrary fixed unambiguous polynomial time encoding 
xk string define procedure sample 


assign sampling label inductively follows labelled bit sampling label bit 
labelled key sampling label key 
ia labelled left child te sampling label right child te sampling label sampling label pair 
labelled child te sampling label sampling label ciphertext 

output sampling label root te 
denote probability distribution induced sample denote ensemble write indicate sampled distribution forthcoming definitions robust require expression exists plain 
di di probability distribution ensembles algorithm 
define adv ind pr pr 
say indistinguishable write probabilistic polynomial time algorithm adv ind negligible function 
expressions 
say indistinguishable write iff 
weak key authenticity tests expressions semantic completeness soundness result abadi rogaway states acyclic expressions type encryption scheme implies 
give necessary sufficient condition completeness tightly characterizing aspect exposition 
acyclic expressions condition involves admittance efficient test distinguishes ciphertext key encrypted ciphertext random key noticeable probability plaintexts drawn ensembles associated expressions 
formally definition weak key authenticity test expressions 
encryption scheme security parameter acyclic expressions algorithm 
define adv exp pr ek pr ek 
say admits weak key authenticity test exp test short exists probabilistic polynomial time algorithm adv exp non negligible function 
say admits weak key authenticity tests expressions exp tests short acyclic expressions admits weak key authenticity test 
main result expressions contain encryption cycles see ar formal defini tion 
theorem admittance exp tests necessary sufficient completeness 
encryption scheme 
acyclic expressions implies iff admits weak key authenticity tests expressions 
proving necessity part 
acyclic expressions 
consider expressions loss generality assume occur 
completeness assumption 
adv ind non negligible 
construct exp test 
define def ciphertext key pair 
adv exp pr ek pr ek pr ek ciphertext key pair pr ek ciphertext key pair pr pr pr pr adv ind second equality due definition third due definition sample 
follows weak key authenticity test required 
completes necessity part proof 
sketch sufficiency part complete proof appears hg 
assume 
show consider algorithm simultaneously parses input sample expressions attempting construct bear witness equivalence expressions 
assumption attempt bound fail 
show failure algorithm parsed information predict origin sample non negligible probability success 
cases prediction depends application weak key authenticity test particular fixed expressions information 
specifically algorithm computes powers operator oe defined fig 
long satisfy predicate test fig 

oi oi 
ej denote subtree ej oe re re labelled left child te labelled left child te form pair labelled right child te labelled right child te form pair labelled child te labelled child te form ciphertext labelled labelled form key dk 
test true labelled bits labelled labelled labelled labelled iff labelled false 
labelled labelled labelled labelled labelled iff labelled fig 

definitions oe test true false oej operator fixpoint induced ej tions set reachable nodes holds see theorem 
show long test oi oi exist consistent requirements theorem re re re 
test fail max power oe achieve sets reachable nodes te te respectively point second point contradicting assumption 
conclude test fail lower power oe lowest power 
prediction reason test fails 
illustrate case calls weak key authenticity test expressions 
assume test fails exist labelled labelled labelled labelled inductive argument powers operator shows sampling labels respectively respectively depending origin ciphertext key case encryption sample key second case encryption sample key random key 
exp test distinguishes cases noticeable probability success 
show procedure efficient 
completes sketch sufficiency part proof 
notion weak key authenticity relates cryptographic notions section strengthen notion admittance weak key authenticity tests expressions 
consider admittance single purpose test referred weak key authenticity test distinguishes ciphertext key encrypted ciphertext random key non negligible probability test defined terms independent formal language preceding sections 
compare strengthened version notions confusion freedom authenticated encryption previously discussed literature context completeness result mw aj 
specifically show requirement encryption scheme admits weak key authenticity test strictly weaker requirement confusion free defined turn show strictly weaker authenticated encryption 
effect encryption scheme admits weak key authenticity test confusion free 
scheme type 
satisfies soundness criteria ar completeness criteria previous completeness criteria mw 
notions methods achieve admittance weak key authenticity test independent interest 
informally confusion freedom captures ability decryption algorithm distinguish ciphertext key encrypted ciphertext random key full certainty 
contrast weak test required distinguish merely noticeable probability 
separate notions strong sense pertaining directly gap required distinguishing opposed pertaining placement distinguisher inside outside decryption algorithm 
give formal definitions notions hand 
confusion freedom defined appears completeness result mw proofs modified accommodate version aj 
definition confusion freedom 
encryption scheme security parameter 
dl series finite sets distributions 
define adv cf pr di dk ek 
say confusion free cf short adv cf negligible function 
define auxiliary notions enable focus mentioned gap 
provide middle ground comparing exp test cf 
definition strong key authenticity test weak key authenticity test 
encryption scheme security parameter 
referred plaintext generators probabilistic algorithms take security parameter provided unary sufficiently large return plain write pj thinking drawn probability distribution induced pj algorithm 
define adv tst pr ek pr ek tst ska 
say admits strong resp weak test ska resp short exists probabilistic polynomial time algorithm probabilistic polynomial time algorithms adv ska resp adv negligibly close resp non negligible function 
definition integrity plaintext security int short flavor authenticated encryption refer reader bn ky mw 
diagram depicts relationships notions interest 
int cf admittance ska test admittance test admittance exp tests means encryption scheme meets notion meet notion call relationship implication 
means encryption scheme meets notion necessarily meet notion call relationship separation 
implications diagram straightforward see hg 
rest section devoted separation ska 
show encryption scheme admits test admit ska test 
standard construction pseudorandom function family added weak redundancy 
simplify exposition single constant bit redundancy refer section generalization 
pseudorandom family functions security parameter key domain domain range polynomials negligible function adv prf probabilistic polynomial time algorithm xm denote individual bits string denote concatenation operator strings bits denote bitwise xor operator strings bits equal length 
define encryption scheme security parameter follows xl yl fk output fk output output note plain note deduce 
easily shown ind cpa secure pseudorandomness proof see gg simply think degenerate version randomized ctr mode rely bd 
results ar shown type 
theorem 
admits test 
see consider algorithm takes input computes fk outputs iff bit outcome 
algorithm test simple reduction pseudorandomness see hg 
addition theorem 
admit ska test 
proof 
probabilistic algorithm runs time function size input 

denote outcome running inputs 
randomness note length bounded algorithm takes unary input outputs random uniformly selected element adv ska pr pr fk fk polynomial 
denote sample space event respectively depicted term 
defined similarly respect second term 

note exists fk fk case case second experiment runs input randomness experiment 
happens fk fk happen keys adversary queries oracle xors answer fk outputs bit result different breaks pseudorandomness just described way counting tuples 
argue distinct counting different tuples employing method 
clear 
case double counting tuple iff fk fk fk fk fk fk happens iff 
conclude 
know 
adv ska negligibly close 
note construction easily generalized admits test advantage small desired follows 
variation adds bit probability probability redundancy encryption fixed 
proofs easily extend show admits test advantage 

jonathan katz helpful discussions comments 
supported defense advanced research projects agency managed air force research laboratory contract views contained authors interpreted representing official policies expressed implied darpa afrl government 
aj abadi 
formal eavesdropping computational interpretation 
proc 
fourth international symposium theoretical aspects computer software tacs 
ar abadi rogaway 
reconciling views cryptography computational soundness formal encryption 
journal cryptology vol 
pp 

proc 
ifip international conference theoretical computer science lncs vol 
pp 
springer verlag berlin august 
bb bellare desai pointcheval 
key privacy public key encryption 
advances cryptology asiacrypt lncs vol 
pp 
springer verlag 
bd bellare desai rogaway 
concrete security treatment symmetric encryption analysis des modes operation 
proceedings th annual symposium foundations computer science focs 
bn bellare 
authenticated encryption relations notions analysis generic composition paradigm 
advances cryptology asiacrypt lncs vol 
pp 
springer verlag 
gg goldreich goldwasser micali 
construct random functions 
journal acm vol 
pp 

gm goldwasser micali 
probabilistic encryption 
journal computer system sciences april 
hg horvitz gligor 
weak key authenticity computational completeness formal encryption 
full version available www cs umd edu horvitz www ee umd edu gligor ky katz yung 
unforgeable encryption chosen ciphertext secure modes operation 
proceedings th international workshop fast software encryption fse lncs vol 
pp 
springer verlag 
ll lloyd 
foundations logic programming 
second edition springer verlag section 
ln lassez nguyen sonenberg 
fixpoint theorems semantics folk tale 
information processing letters vol 
pp 

mw micciancio warinschi 
completeness theorems abadi rogaway language encrypted expressions 
journal computer security appear 
proceedings workshop issues theory security 
ta tarski 
lattice theoretical fixpoint theorem applications 
pacific journal mathematics vol 
pp 
