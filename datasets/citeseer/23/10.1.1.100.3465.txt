structured querying web text technical challenge michael cafarella christopher dan suciu oren etzioni michele banko university washington seattle wa suciu etzioni banko cs washington edu web contains huge amount text currently reach structured access tools 
unstructured data contains substantial amount implicit structure captured information extraction algorithms 
combining system appropriate data model query language enable structured access web unstructured data 
propose general purpose query system called extraction database exdb supports sql structured queries web text 
describe technical challenges involved motivated part experiences early page prototype 

vast quantity text web currently accessible search engines keyword documents queries 
prefer pose queries take advantage structure embedded text 
example consider website classified postings 
classifieds consist free form text contain fields price seller phone number seller address published formal schema clearly structural information query writer able 
information extraction systems extract small pieces structured data text 
example brin dipre extract author book pairs agichtein snowball find headquarters pairs etzioni knowitall discover hypernym relationships 
sarawagi proposed extraction integration system works existing schema constraint set 
systems date require administrator predefine schema populated database constraints 
manual schema design feasible building structured query system entire web 
number possible tables attributes article published creative commons license agreement org licenses 
may copy distribute display perform derivative works commercial attribute author cidr 
rd biennial conference innovative data systems research cidr january asilomar california usa 
probability kepler log books heisenberg matrix mechanics galileo telescope newton calculus top ranked results query exdb prototype 
query invented died year 
query took seconds process database web pages 
prohibitively large may change new communities topics emerge 
proposed realized systems integrate results automatic domain independent way 
avatar system relies series hand written annotators emit structured tuples tuple person name phone number 
project semantic schema integrates information variety sources specific application domain example prototype meant manage data relevant database community including sets researchers publications conferences 
propose structured web query system called extraction database exdb 
uses systems extract data schema constraint information web string web may data value structural component 
extractions inevitably flawed model tuples probabilistically true system 
extractions form probabilistic database 
exdb offers language describing probabilistic queries extracted database 
shows top results sample query posed early exdb prototype 
user asked list column tuples second columns extracted invented fact third columns form born fact 
third column constrained year 
results ranked probability true 
user predicates types published official metadata user simply enters appropriate way describe desired query 
show exdb flow 
having downloaded corpus web text exdb runs series un web gore lived surprising 
fat high trouble edison hollywood getting invented cars 

hills 
chung 
run extractors section data pred invented born types type scientist city constraints pred invented discover obj obj edison morgan type syn id instance einstein boston light bulb pred invent invent populate data model section rdbms query middleware invented edison query processing applications sections constructing exdb requires processing steps 
step run information extractors downloaded web text described section 
step extracted information stored exdb data model described section 
applications query exdb middleware probabilistic rdbms 
sections describe query processing possible applications 
supervised natural language driven extractors text extraction step described section 
resulting extractions populate huge probabilistic database contains web data schemas constraints 
call database web data model describe section 
described sections database users queries possible applications 
step constructing exdb substantial problems remain unsolved 
devoted describing exdb framework constructed initial prototype runs corpus downloaded pages 
exdb raises outstanding technical issues step construction information extraction reconciliation probabilistic query processing 
exdb promising idea motivates different research questions serving technical challenge entire field 

web data model section discusses exdb extraction data model handling imprecision way exdb queries 
data model combination techniques exdb extract base level concepts objects data values system 
examples einstein telephone boston light bulb prototype contains unique objects 
predicates binary tables populated pairs objects 
examples include discovered edison born einstein switzerland sells amazon 
prototype populated tables facts 
tuples data contents exdb 
multiple word concepts hyphens readability 
system need parsing 
semantic types unary tables populated objects 
examples city boston city new york electronics dvd player 
prototype contains type instances 
addition system fixed set predefined data types integer date year data model capture useful real world facts obviously perfectly model arbitrary domain sake simplicity currently limit predicate tuples arity 
exdb allow higher arity tuples 
noted extractors practical limitations finding domain independent scalable extractors high arity tuples 
resulting exdb database may contain enormous amount structural information form predicates semantic types user expected know priori 
user formulates queries choices objects types predicates exdb matches query extracted elements best 
addition base schema elements exdb extract series relationships designed queries easier user synonyms denote equivalent objects predicates types 
example einstein einstein certainly refer real world object 
similarly invented invented refer predicate 
exdb maintain set synonyms object predicate type 
transforming user queries synonym information exdb answer queries extractions match actual query text 
object synonymy enable improved equijoin processing 
prototype implements predicate synonymy extracted synonym pairs 
inclusion dependencies describe subset relationship predicates 
example invented discovered indicates true instances database element description linguistic term extractor invented edison edison invented arity fact textrunner scientist einstein einstein scientist hypernymy knowitall invented invented invented similar invented synonymy dirt invented discovered invented specializes discovered troponymy fd capital capital just capital entity rule table database concepts text equivalents extraction mechanisms 
advances help find constraints 
addition algorithmic extractors linguistic resources thesauri help populate exdb 
tuples invented discovered elaboration verb called closest linguistic analogue kind dependency 
synonyms inclusion dependencies query processor return results say invented user asks discovered 
prototype extract troponyms web data 
functional dependencies especially useful queries negation explaining object answer query 
discuss functional dependencies detail section 
clear necessary synonyms constraints 
main advantage allow probabilistic mapping strings text extractions strings user query 
example query sale predicate rewritten include results auction predicate 
may data embedded web text prevalent easily extracted system naturally derives reasonable synonyms 
utility synonyms depend type data extracted invented edison probably appear synonyms selling john smith toyota 
table shows database concepts exdb incorporates language analogues appropriate extraction mechanism available 
useful concepts unaware matching extractor 
discuss mechanisms detail section 
managing imprecision probabilities represent imprecision arising genuine uncertainty world errors inevitably flawed text extractors 
research projects probabilities describe uncertainty data level :10.1.1.108.6943
exdb needs represent uncertainties schema level constraints 
probabilistic data schema tuples predicate tables semantic type tables probabilistic tuple relations value describing probability tuple 
similar existing systems 
synonyms predicate type object synonyms probabilistic chance einstein relationship may technically accurate real world usage 
expect find web text exdb query workload 
einstein refer different entities 
predicates invented created partly equivalent 
items synonym set value 
probabilistic constraints probabilistic inclusion dependencies similar probabilistic predicate synonyms applied way functional dependencies somewhat interesting describe rules fact sets simultaneously true 
exdb process negated queries explain user certain object answer set 
example consider probabilistic fd indicating high probability person born country 
born country suppose user asks scientists born germany taught princeton surprised answer asks system einstein answer 
functional dependency system answer einstein born switzerland fd tells person born country probability born germany exceedingly low 
note switzerland germany low probability synonyms 
probabilistic fds allow statements data total confidence important managed data curated extraction set may include obscure confusing cases violate constraint generally true 
prototype implemented support extracted data types synonyms inclusion dependencies functional dependencies 
exdb queries propose users ask queries web data model datalog notation 
example query invented edison returns inventions edison 
query answers ranked probabilities 
data items head returned query results 
variable names start distinguish data values 
constrain variables types specific values died scientist query returns column table including probability column instance scientist second column value extracted part died predicate synonyms 
querying set classifieds search locally available electronics query sale electronics seattle add additional clauses invented scientist died year returns column table third column year scientist died 
return tuples know scientist year death scientist died prior 
similarly limit shopping search inexpensive items sale electronics seattle costs perform projections modifying variables head 
query simply finds scientists invented invented scientist efficient probabilistic query processing active research area 
additional details query processing see section 
important note difference database query paradigm deployed exdb documents paradigm search engines 
exdb granularity data concept word short phrase document 
oftentimes query answer obtained joining multiple facts extracted multiple unrelated web pages 
search engines attempt integrate information page boundary 
exdb explain answers retrieves levels query lineage essentially proof tree item query answer extraction lineage explanation pages basic facts derive query extracted 
prototype implements support extraction lineage query lineage 

extraction mechanisms exdb feasible data schema constraints analogues extractable linguistic phenomena 
section describe exdb converts information embedded web text exdb elements 
fact extraction possible important actual technique approaches described give flavor possible fact extractions basic form extracted fact exdb simple predicate arity 
query returns basic facts 
information extraction projects attempted find fact triples little supervision 
prototype uses unsupervised system called textrunner 
runs entire corpus text generating possible hand annotated linguistic resources wordnet thesauri :10.1.1.105.1244
contain high quality information limited coverage limited certain kind phrase single word phrases unavailable target languages 
general algorithmic approaches indispensable 
large set probabilistically assessed extractions 
extractors textrunner require input list target predicates object pairs run entire web concern domain 
textrunner extractor starts heavyweight deep linguistic parser identify small number highquality extraction triples 
triples consist entity strings single sentence descriptive relationship string links 
computes number lightweight language driven statistics small set examples 
statistics compute extraction classifier lightweight apply web scale corpus 
extractor applies classifier entire corpus counts extraction repetitions 
repeated independent extractions fact extraction probable rare extractions considered errors receive low probability 
probability model similar described downey 
type extractions semantic types allow user refer large collections objects 
placing objects say scientist type relation user naturally query facts 
type hierarchies natural real world chemist scientist simplicity sake exdb type hierarchy single level 
necessary flatten hierarchy chemist scientist contain 
semantic types similar natural language hypernyms relationships 
exdb prototype extracts types web text knowitall system 
knowitall searches text corpus phrases strongly indicate relationship cities seattle boston noting pair words embedded phrase 
extractions probability frequency just fact extractions 
knowitall limited facts appear phrased sentences fail extract facts implied web page layout typographic practices 
example fail extract fact pc chair weikum cidr cidr web page declarative sentence explicitly states exdb intended handle web data domain independent way avoid specific databases dblp may allow significantly improve extraction quality 
synonymy extractions prototype uses large scale version dirt algorithm deduce predicate synonyms automatically corpus text 
dirt works comparing degree arguments predicates coincide 
example corpus worth argument pairs invented invented predicates overlap substantial degree 
expect share pairs edison light bulb einstein theory relativity pairs fairly rare average predicate 
predicates strongly share argument pairs synonyms 
rendered text program committee chair gerhard weikum mpi einstein scientist boston city bohr scientist france country bugs bunny scientist types facts object class curie scientist prob object predicate object einstein discovered relativity year revolution edison invented visited boston einstein died humans cold fusion physical database schema performing join types facts tables 
object synonyms 
existing techniques object synonyms grams dong solution reconciliation 
inclusion functional dependencies inclusion dependencies predicate tables modeled text verb specializations troponyms prototype extract seen extraction mechanism 
possible enhanced dirt algorithm may able test relationships textual predicates 
high quality extractor possible 
extracting functional relationships text probably best considered subject data mining research 
rule learning active research topic data mining advances area directly benefit quality exdb constraints 
initial suggests results possible examining predicate preserves fd large numbers contained object pairs 

query processing web data model simply probabilistic database mathematical properties discussed 
section covers current prototype optimizes query execution projections 
non projecting queries queries contain projections fairly straightforward exdb query involves series joins tables web data model 
probabilistic semantics system probability joined tuple product local tuples probabilities 
see simple table join usually satisfied just top tuples ranked probability top queries try obtain results quickly possible 
prototype builds heavily introduced algorithm performing top join queries ordered data sets 
dimension score system employ tuple probability aggregation function simply product 
improve non projection queries theobald observed user topk ranking systems typically accept approximation true top results :10.1.1.133.2764
able achieve lower running times standard threshold algorithm cost reduced top recall 
prob similarly prototype attempt compute probability partially processed output tuple partially computed score high score top 
apply probability bounds tell bother additional processing tuple 
projections consider query invented scientist rank scientists probability scientist invented 
actual inventions irrelevant 
scientist say tesla appears output tuple invented tesla database 
may inventions 
im invented tesla ii 
sufficient return tesla answer exdb tuples probabilistically 
probability query probability tuple invented tesla ii truly database 
unfortunately means computing disjunction probabilistic events web scale extremely large 
computing correct answer doom hope real time performance 
projections pose question semantics slightly 
purported inventions projecting result low probability extractions 
extractions inaccurate reflect idiosyncratic language factor 
disjunction compute final tuple probability large number extractions unexpectedly result quite large probability 
projections practical 
panel experts current attempt solve problems associated large numbers contributing terms abstraction panel experts 
expert tuple score invented tesla fluorescent lighting tells probability tuple appearing output select small panel experts best supports output tuple 
denote set tuples contributes presence output tuple returned score tuple max pr effect panel small size panel eliminates low quality tuples boosting poor answer 
computationally reduces calculation small number facts 
additional benefits semantic circumvents known lower bounds computing output probabilities general case allows place aggressive bounds contributions tuples 
panel semantics offers advantages current best solution problem computing probabilistic projections large scale 
promising semantic choice requires study determine impact result quality performance 
implementation issues compute join statistics tables predict panel probability tuple probability 
statistics determine query processor discovered top results 
died invented published taught aristotle bc logic records alexander galileo telescope dialogue mathematics newton calculus principia johannes kepler log books tables table possible synthetic table scientists generated merging answers died scientist born scientist invented scientist published scientist taught scientist 
tuples derived queries working exdb prototype table composed hand 

applications exdb suggests number interesting new applications structured web data 
synthetic tables human designers create schemas designing structures useful database software human observers trying sense domain 
exdb extracted structural elements meant examined directly application build topic specific tables human appreciate 
cases simple exdb star join predicates create table relevant topic 
database sparse synthetic table application may choose merge multiple exdb queries accept empty table cells exdb lacks high probability answer 
interesting research question balance competing notions schema table 
example high quality table contain relatively null values null value preferable including extremely low probability tuple 
table shows small sample synthetic table composed exdb queries prototype system 
unstructured access structured data unstructured access structured data known database problem considered keyword systems discover 
search engine documents systems return structured database tuples relevant user query 
seen exdb generate structured database text extractions user structured query 
possible generate exdb query automatically keywords build slightly circuitous powerful query system 
inputs web text keyword queries just standard search engine 
output structured table relevant data simply ranked list documents 
web data warehousing exdb contains large amount read structured data natural consider data warehousing operations exploration visualization 
enable form olap functionality exdb creating web data cube result novel tool exploring large aggregates web data today explored single document time keyword driven search engines 
doing require add groupby functionality query language consider probabilistic query processing aggregates depth 

preliminary findings prototype lacks desired exdb features promising initial evidence result quality execution times 
result quality examine table 
left hand side shows results projection query invented scientist lists scientist names projects inventions 
justification projection find practically minded scientists find inventions 
right side listing results google search query scientist invented 
search query obviously return just unstructured documents expected documents contain easily extracted structure 
exdb 
listed scientists table practical inventions scientific discoveries 
contrast bottom result pictured higher concentration incorrect answers including theoretician wolfgang pauli asimov 
clearly results impossible knowledge scientist semantic type extracted invented predicate 
google search scientist invented returns just pages top contain factual information multiple scientists item comes close answering query 
document fourth paragraph inline list scientific fields father field 
information list arguably satisfies query need discovered extracted 
text contains structural hints data 
extremely sophisticated extractor hard see document useful query shown took seconds execute 
aggressive join statistics query processing currently achieve runtime seconds cost errors top result set 
author physicist heisenberg primarily theoretician bottom positions 

alternative models focuses particular model structured queries unstructured data 
course probably possible formulate search query elaborate scientist invented yield better results 
clear formulate search query problems structure extraction stand 
point show results reasonably chosen keyword query far meeting system goals 
scientist tesla galileo benjamin franklin newton ben franklin gauss henry isaac newton leonardo rank summary article history science religious focus short scientist biographies inventors inventions article inventor plastic page containing single question page different format discussion board ancient science news article early german telephone sentences thermometer summary article cat table top prototype exdb results invented scientist google search results scientist invented 
goal retrieve list practical minded scientists 
document returned google arguably contains answer query embedded unstructured text 
note exdb entries duplicates merged object synonyms possible 
plausible 
section describe alternative models take somewhat extreme places design space 
schema extraction model propose compute single best schema entire set input extractions doing text transformed traditional relational database 
text query model query system perform information extraction offers users query language blends extractive structural elements 
schema extraction model schema extraction model attempts derive single best schema input set extractions 
populates schema extractions generate relational database queried standard sql 
flow model shown 
exdb system start set web text run 
exdb preserve ambiguity extracted data structure 
assume slightly different extraction model exdb 
derive series semantic relationships listed table system simply emits series objects associated values 
emitted items similar facts table web data model 
example object edison values menlo park value attribute label invention 
call items unstructured tuples 
apply score threshold tuples emitted extractor removing ones thresholding treat remainder probabilistically 
objects domain contain similar information difficulties human authors unreliable systems mean inevitably missing values topic extraneous ones 
assembling schema set messy extractions difficult human designer 
expect cases best schema noisy example schema easy understand lack extracted attributes 
opens competing design criteria relational schemas instance schema extraction model able compromises 
may decide drop extracted values complicate schema additional columns 
may decide fill cells null split table separate smaller ones 
believe criteria simplicity output tables completeness extractions text appear output fullness output database nulls 
define costs violating criteria give score badness complicating schema additional table creating schema web simply matter cost minimization 
note problem choosing schema appears synthetic table application section 
text query model shows simple text query flow 
simply indexes web text querying 
schema extraction model attempt extraction 
user query provides needed information 
role query system simply provide expressive language generates answers quickly 
example consider user check favorite band playing nearby 
query extract city date tuples band website indicate city lives compute dates band city city miles select com appear string date seattle clause indicates relevant set web pages regular expression applied text generate table columns plus labels columns 
clause tests date see valid declares user current city uses built function measure distance cities 
proposed web text query languages websql ql 
languages quite elaborate express query similar 
systems designed query time performance 
example executing query may entail fetching remote pages finding urls remote search engines opposed simply prefetched pages 
hotel room hotel cold room alfred nice cold hitchcock nice directed 
hitchcock directed length 
great movie quality acting quality 
hamlet difficult acting skill length 
title year input text unstructured tuples output schema length color bw hamlet color movie quality acting skill great hard okay difficult construction pipeline schema extraction model 
run system downloaded text resulting extractions compute single traditional relational database 
contrast construct system scale large number users providing search engine response times 
queries complicated just keywords expect users want interactively edit queries see immediate results 
tantalizing opportunities query optimization consider extractive structural query components 
values greater ideally avoid half extraction call 
unfortunately search engine inverted index standard relational index solve problem efficiently 
inverted index retrieve extracted values incurring fetch entire original text test fails item database avoid significant extraction 
standard relational database index extracted tuples need recomputed entire web corpus user enters new extraction clause 
believe text indexing techniques neighbor index multigram index helpful implementation text query model 

related information extraction literature clearly critical useful exdb cited substantial amount 
surveys research available 
halevy proposed structural elements critical managing non traditional data largely context schema matching :10.1.1.12.1545
concepts schema matching system refine structure extraction 
liu suggested triple queries similar extracted predicate facts perform structured queries unstructured data 
query graph may similar join graph performed extracted structures probabilistic interpretation query graph 
chang metaquerier deep web querying uses extractor assumes strong underlying schema schema helps extraction process 
meta querier designed scalable entire web gore lived new fat 
high trouble hollywood getting appear cars 
hills 
seattle chung october 

input text indexing original text inverted index neighbor index multigram index indexed text query system simple construction pipeline text query model 
schema matching component certain domain subject areas 
intriguing consider similar scheme exdb structural information fed components improve accuracy 

despite implicit structural information abounds web text modern search engines offer kind structured query service 
suggested system uses structure text available query writers 
believe exdb system important tool querying web 
far suggests number interesting research directions information extraction data modeling probabilistic query processing 
extracting data schemas constraints text believe database community someday offer powerful new tools applying structured queries unstructured data 
acknowledgments supported part suciu nsf career iis nsf iis iis iis iis 
supported darpa contract onr university washington turing center gifts google 

agichtein gravano 
snowball extracting relations large plain text collections 
proceedings acm sigmod international conference digital libraries 
agrawal chaudhuri das 
system keyword search relational databases 
icde 
miller 
clean answers dirty databases probabilistic approach 
icde 
banko cafarella soderland etzioni 
open information extraction web 
ijcai 
sarma halevy widom 
databases uncertainty lineage 
vldb 
brin 
extracting patterns relations world wide web 
webdb workshop edbt 
buneman khanna tan 
characterization data provenance 
icdt pages 
cafarella etzioni 
search engine natural language applications 
www 
sarawagi 
efficient batch top search dictionary entity recognition 
icde 

chang zhang 
large scale integration building metaquerier databases web 
cidr pages 
cho rajagopalan 
fast regular expression indexing engine 
icde 
cohen 
information extraction integration overview 
cui widom 
practical lineage tracing data warehouses 
icde pages 
suciu 
query evaluation probabilistic databases 
ieee data engineering bulletin 
suciu 
efficient query evaluation probabilistic databases 
vldb 
doan ramakrishnan chen derose lee mccann shen 
community information management 
ieee data engineering bulletin 
doan ramakrishnan vaithyanathan 
managing information extraction 
dong halevy madhavan 
reconciliation complex information spaces 
sigmod 
downey soderland etzioni 
probabilistic model redundancy information extraction 
ijcai 
etzioni cafarella downey kok popescu shaked soderland weld yates 
unsupervised named entity extraction web experimental study 
artificial intelligence 
fagin lotem naor 
optimal aggregation algorithms middleware 
comput 
syst 
sci 
fellbaum 
english verbs semantic net 
international journal lexicography 
gravano ipeirotis jagadish koudas muthukrishnan srivastava 
approximate string joins database free 
vldb pages 
halevy etzioni doan ives madhavan mcdowell tatarinov :10.1.1.12.1545
crossing structure chasm 
cidr 
papakonstantinou 
discover keyword search relational databases 
vldb 
jayram krishnamurthy raghavan vaithyanathan zhu 
avatar information extraction system 
ieee data engineering bulletin 
konopnicki shmueli 
qs system www querying 
th international conference data engineering icde 
lin pantel 
discovery inference rules text 
kdd pages 
liu dong halevy 
answering structured queries unstructured data 
webdb 
sarawagi 
integrating unstructured data relational databases 
icde 
mendelzon milo 
querying world wide web 
international journal digital libraries 
miller beckwith fellbaum gross miller :10.1.1.105.1244
wordnet line lexical database 
international journal lexicography 

chang smith 
li vitter 
supporting incremental join queries ranked inputs 
vldb pages 
cheng prabhakar 
evaluating probabilistic queries imprecise data 
sigmod pages 
sarma halevy widom 
working models uncertain data 
icde april 
shinyama sekine 
preemptive information extraction unrestricted relation discovery 
proceedings human language technology north american chapter association computational linguistics conference hlt naacl 
spertus stein 
structured query language web 
www pages 
theobald weikum :10.1.1.133.2764
top query evaluation probabilistic guarantees 
vldb pages 
turney 
expressing implicit semantic relations supervision 
proceedings annual meeting association computational linguistics acl 
widom 
trio system integrated management data accuracy lineage 
cidr pages 
