managing structural genomic workflows web services maria cl rafael bai paulo paulo maria campos marta systems engineering computer science marta cos br computer science department dcc im nce nce br institute biophysics br federal university rio de janeiro brazil silico scientific experiments encompass multiple combinations program data resources 
resource combination execution flow called scientific workflow 
bioinformatics environments program composition frequent operation requiring complex management 
scientist faces challenges building experiment finding right program adequate parameters tune managing input output data building reusing workflows 
typically workflows implemented script languages simplicity despite specificity difficulty reuse 
contrast web service technology specially conceived encapsulate combine programs data providing interoperation applications different platforms 
web services approach superior scripts regard interoperability scalability flexibility issues 
combined metadata support web services framework supports scientific workflows 
works focused metadata issues manage integrate heterogeneous scientific data sources concentrate metadata support program management workflows 
framework real structural genomic workflow showing viability advantages 
keywords web services scientific workflows workflow management distributed architectures metadata corresponding author 

decades scientific laboratories performed silico scientific experiments traditional vitro raised concept scientist 
context computer programs electronic data valuable scientific resources scientists experimentation process 
scientific workflow defined combination data sequences programs 
executed sequence programs inputs outputs characterize experiment 
main scientific resources experiment data program workflow 
possibility performing silico experiments multiple combinations programs data resources management complex task 
particularly true bioinformatics scenario programs legacy third party code data resources come public databases 
ideally scientists able configure bioinformatics workflows dynamically combining programs provided different teams finding alternative programs choose tuning workflow programs trying different sets parameter values running partial executions workflow 
workflow defined scientist concerned program changes manage transformations data output data input program chains 
workflow executions registered available queries reuse 
ideal scenario far reality 
due growth program data availability current organization scientific labs cope managing amount diversity valuable resources 
typically main issues resources disorganized scattered ii resources described iii resource composition specific 
resources disorganized scattered scientific labs usually multiple versions single program multiple formats data set images flat files databases 
typically program studied installed scientists responsible providing specific configuration workflow 
multiple data sets input programs 
data sets particular format prepared scientist responsible specific experiment 
programs data distributed web programs code 
lack resource description evidenced way scientists organize resources 
usually rely local file directory structure organize programs data inputs outputs labeling experiment scientist 
lack semantics data structures manage resources hard identify related similar programs data 
versions programs data different formats workflows easy manage 
hard find set programs just different code versions program 
rigid lab rules difficult keep track resources 
script languages frequently biological communities implement scientific workflows 
resource composition scripts specific 
scripts provide easy way automate program calls especially useful parameter pre setting 
usually biological programs come ready scripts parameters pre set default values 
choosing scripts biologists need learn program configuration details 
scripts specific hard reuse 
scientist best program configuration 
problem challenges scripts complex read dependent programmers wrote 
summary workflow definition frequent operation bioinformatics environments 
build experiment scientist faced challenges finding right programs adequate parameters tune managing input output data building reusing workflows 
issues increase complexity workflow management 
proposes web services technology associated metadata describe manage scientific resources 
web services provide published interface data program resources facilitating workflow management execution 
metadata defined descriptive information structure meaning resource 
originally applied data resources may refer kind resource applications processes 
specialized web services technology add metadata web services program data publication interface 
manage resources defined navigation publication experimentation modules coupled web services architecture 
idea having web service script biological programs encapsulation composition particularly interesting respect interoperability 
web services technology specially conceived provide interoperation applications different platforms 
programs encapsulated services 
workflows composed service calls direct program calls 
program location changes service description changed workflows program immune change 
web services appropriate solution support geographically distributed team collaboration resources reuse exchange 
particularly web services pointed bioinformatics area potential technology allow biological data fully exploited bioinformatics resource management projects moving web services technology 
web services provide semantics support bioinformatics program composition 
combined metadata support web services framework scientific resource management named srmw scientific resource management web services 
works focused metadata issues manage integrate heterogeneous scientific data sources concentrate metadata support program management workflows 
contributes showing web services technology effectively applied build execute scientific workflows help metadata support 
data integration initiatives complementary 
illustrate approach real bioinformatics scenario mholline workflow 
compare web services scripting scenario showing advantages workflow construction web services presenting experimental results regarding execution times showing feasibility proposal real application 
adequacy metadata support describe scientific resources show descriptors incorporated web services technology 
organized follows 
section defines workflows briefly presents web services technology 
section presents mholline structural genomic workflow target application proposal fourth section illustrates web services technology 
section shows srmw architecture web services metadata support section illustrates srmw instantiated mholline application 
section discusses related literature 
section concludes points 

workflows web services technology define workflow collection tasks organized accomplish scientific experiment 
task performed software systems 
examples tasks include executing program updating file database filtering dataset transforming 
addition collection tasks workflow defines order task invocations conditions tasks invoked task synchronization information flow dataflow tasks 
workflow represented quadruple sf cf set tn tasks set variables vn defining dataflow sf successor function associated task cf condition function associated task web services technology provides building blocks managing workflows set heterogeneous distributed services available web 
web services provide published interface data program resources 
implemented modular programs generally independent discovered invoked internet enterprise intranet 
components web services expose interface reused worrying service implemented 
current component technologies web services accessed protocols dependent specific object model 
web services accessed ubiquitous web protocols data formats hypertext transfer protocol xml vendor independent 
web services description language wsdl xml language describe interface web service enabling program understand interact web service 
web service publishes interface wsdl document xml document completely specifies service interface client applications automatically bind web service 
soap protocol extends xml computer programs easily pass parameters server applications receive understand returned semi structured xml data document 
web services technology uses xml encoding system data easily exchanged computing systems distinct architectures distinct data formats 
wsdl completely describes web service interface soap completely describes parameters data types exceptions included message exchanged web services 
web services architecture illustrated provides necessary mechanisms enable interoperability heterogeneous resources web 
web resource accessed type client program web interface published wsdl document web services registry 
scientists feature create expose set common interfaces accessing biological programs blast modeller 
exposing programs web services hides heterogeneity complexity facilitating task interacting resources 
providing interoperability web resources web services technology provides necessary mechanisms define workflow processes composition basic web services 
compositions web services defined xml languages expressing flow control data collection web services choreography performs workflow 
currently agreement standard language composing web services 
different language proposals web services technology wsfl xlang wsci bpml 
ibm microsoft bea released bpel ws business process execution language web services 
bpel ws xml language coordinating business processes web relies web services technology 
bpel ws replaces ibm wsfl microsoft xlang specifications 
bpel ws joint industrial effort define specification web services composition strong candidate standard language building web services workflows 
bpel ws provides language formally specify business processes business interaction protocols 
extends interaction model wsdl define process provides consumes multiple web service interfaces 
bpel ws language constructors manipulate processes data input output execution flow mapping data processes workflow steps 
example process initial step responsible processing input data workflow represent invocation web service part workflow 
examples workflow constructors bpel ws receive invoke wait reply 
process contain parameters data input output 
data represented bpel ws constructor container connect data output process data input 
done constructor assign 
execution flows connections processes define order execution 
flow specify sequential parallel execution define conditions drive alternative execution flows 
bpel ws flow constructors sequence switch flow 
external workflow processes web services defined constructor partner 
details examples section 
despite advantages web services technology assist development real scientific workflow scenarios 
tools resolving interoperability composition issues need address semantic interoperability scientific resources 
scientific resource semantics define meaning client infer resource capability answer specific needs 
web services technology complemented technologies domain modeling ontologies order build environment composing heterogeneous distributed resources case scientific workflows 
semantic issues discussed section 
mholline workflow mholline example bioinformatics workflow structural genomic projects easy build 
sophisticated set programs difficult combine outputs inputs program 
package solution mholline workflow development 
workflow proposed web services solution section 
structural genomic projects producing vast amount protein sequences data resources emerging need high throughput methods predict structures assign functions proteins 
analysis genome sequences indicates function proteins inferred significant fraction gene products 
fact isolated sequence homology searches provide answers proteins may keep sequence homology evolution 
contrary molecular biochemical biophysical function protein tightly coupled dimensional structure 
approach contributes prediction protein dimensional structures comparative modeling predicts reliable structure sequence related protein structures templates 
approach consists steps finding known structures related sequence modeled selecting related sequences templates aligning sequence templates building model validating structure 
programs addressing steps 
enable large scale modeling developing workflow assembles steps automated program sequence 
mholline combines specific set programs comparative modeling approach 
template structure identification uses blast algorithm searches 
refinement template search step implemented program called bats blast automatic targeting structures template target sequences selected blast output file depending scores expectation values identity sequence coverage 
automated alignment model building carried modeller models evaluated scores 
mholline workflow illustrated 
mholline workflow supported web services web services framework programs data published browsed build composition programs generating simple scientific workflows published 
programs involved current mholline workflow definition blast bats modeller encapsulated web services versions implementation include program 
additional web service developed combine services mholline shown 
web services deployed web service provider allow applications mholline workflow automatically bind available web services 
worth noting programs legacy programs source code available 
encapsulated web service available internet 
web services implemented published apache tomcat powered axis engine processes soap messages 
workflow ibm bpws process mholline specification written bpel ws 
mholline programs web services defined wsdl documents blast bats modeller programs 
shows example blast program 
note port type includes operation refers input output messages 
declarations define soap messages generated blast web service invoked 
generated soap request message shown 
wsdl definitions developed glue code mapping input output data web services legacy programs 
defining mholline workflow bpel ws bpel ws language formally specify composition programs defined mholline workflow specification program service defined partner 
container tags messages defined web services 
program composition mholline workflow defined sequence tag defines partners sequentially executed 
specification sequence includes definitions input message receive tag service invocation invoke tag output message reply tag exemplified 
assign tag establishes relationship output message service input message service workflow illustrated 
similarly individual programs mholline web service described wsdl file 
messages port types operations defined additional element define role service interaction 
comparing web services scripting approaches section compares web services approach traditional scripting scenario mholline workflow 
show advantages workflow construction supported web services experimental results workflow executions 
scripting scenario mholline workflow defined perl script external program invoked locally file system path 
web services scenario workflow web service web services wrap external programs installed machine invoked local java application 
comparing mholline workflow definitions script language approach workflow definition mholline implemented perl script system calls executable files composing program bats blast modeller 
system calls top operational system file manager indicate complete program location paths 
workflow input data set indicating path fasta file passed input workflow program blast 
output files generated program saved local disk input program execution flow 
output files needed parsing extract relevant data embedded 
conditional execution flows workflow definition implemented available commands script programming language 
script language approach adequate cases script constructed executed person working machine process 
real world scenarios frequently happens multiple users need share workflow definitions perform executions workflow 
user may set input data parameter values 
situations common real bioinformatics laboratories turn script construction maintenance sharing hard time consuming tasks 
specifically script languages designed program composition languages important information hidden structure 
example set programs input output data execution flow implicit script hard familiar script language understand clearly 
directory locations file names parameter values may hard coded increases difficulty performing adaptations modifications workflow definition needed 
perl interpreted language perl scripts fully portable different operational systems 
web services approach workflow defined bpel ws specific purpose high level program composition language 
composing program wrapped web service invoked unique way invoke constructor 
data transfer subsequent web services workflow definition explicitly declared specific data structures constructors 
boolean conditions conditional execution flows explicitly defined 
web services approach facilitates mholline workflow construction maintenance processes rely higher level specification language explicitly represents programs execution flow 
easier address tasks adding removing programs workflow definition defining compensation activities error handling routines detecting possible system faults 
proposed approach enables workflow builder provide semantic information program grouping categories workflow definition example different versions blast program ncbi wu local copy 
system information automatically choose programs category adequate program perform workflow step criteria performance distance monetary cost 
additional mechanisms enable partial workflow re executions authentication data program access security logging easily coupled improve approach 
graphical tools available may help workflow definition bpel ws file generation plug eclipse interface xml commercial tool 
summing exposing mholline programs web services facilitates access programs improving communication interoperability 
bpel ws provides flexible way specifying web services compositions improves scientists productivity simplifying workflow definitions 
comparing mholline workflow executions experimental results step mholline workflow automatically executed human interaction 
bpel ws expressive language providing additional commands verify data input values start parallel executions allow workflow shortcuts 
web interface user may tune parameters interact workflow definition 
illustrates mholline workflow processing molecular sequence 
starts sending message workflow web service including molecular sequence 
message received forwarded workflow task blast web service invoked 
processing sequence blast program results returned blast web service forwards bats web service bpel ws workflow engine 
similarly bats invoked results forwarded modeller web service 
modeller results returned workflow web service caller 
order evaluate performance approach run experiment comparing results execution times mholline workflow scenarios traditional scenario mholline workflow defined scripts proposed scenario mholline workflow defined web services technology 
evaluation consider execution time involved programs blast bats modeller scenarios interested comparing overhead introduced utilization web service technology 
mholline workflow executed times scenario having input fasta file shown containing protein sequence amino acids 
final workflow result molecular structure exactly scenarios expected 
experiment carried steps pc workstation amd athlon xp processor mb ram memory running windows 
step time workflow execution dispatch blast invocation measured 
second step time receiving blast response dispatch bats invocation measured 
third step essentially second step considered receiving bats result invocation modeller program 
step measured time receiving modeller result workflow execution 
expected execution scripting scenario faster web services scenario shown table 
execution times web services approach average order magnitude greater scripting approach result shows feasibility web services approach 
arises fact total execution time mholline workflow execution time including execution external programs considerably greater overhead introduced web services 
instance modeller program takes average seconds run table 
average overhead web services approach seconds time spent run modeller program 
experiment carried single machine network costs considered 
distributed scenario programs run remote machines network latency increase total workflow execution time scenarios 
overhead web services approach insignificant 
consider totally feasible implement web services approach production environment apparent overhead solution entirely compensated benefits previously mentioned section flexibility interoperability productivity 
mholline workflow available scientific users 
different configurations mholline workflow different parameter values alternative programs useful 
fortunately web services approach proposed changes easily accommodated harder script language approach 
worth noting proposed solution flexible building scientific workflow definitions 
defined published services mholline definition incorporated workflow definitions code modification 

metadata support srmw architecture web services technology right track support full featured scientist laboratory description mechanisms provide semantics resources published 
computational environment include mechanisms description management scientific resources architecture couples metadata resources 
briefly srmw scientific resource management web services architecture subsection metamodel sub section scientific publication metamodel workflows designed publication scientific description information 
discuss coupled wsdl order provide semantic information wsdl documents subsection 
details framework 
srmw framework evolution previous scientific metamodel architecture web services approach 
scientific resource management web services main scientific resources supported data program model workflow experiment essay 
programs data resources viewed different levels abstraction 
scientific environment different levels abstraction correspond different objects manipulated different moments 
programs data viewed operational level user deals code executions descriptive level user deals information represents 
program viewed descriptive level textual specification interface description 
operational level program viewed execution code generated compilation program specification 
analogously data sets files operational level information descriptive level 
models workflows experiments essays descriptive resources corresponding object operational level 
srmw architecture clear distinction levels operational descriptive 
added new resources list scientific resources code data category resources 
program resource refers program interface code resource refers program execution code 
data resource refers data sets data category resource refers data set descriptions 
srmw architecture modules 
main modules manage scientific resources web services provider module web services registry module 
provider module deals operational resources data codes 
registry module plays role metadata repository manager dealing descriptive resources data category program model experiment workflow descriptions 
modules interact main modules interface user publication experimentation navigation 
publication module describing scientific resources 
navigation module browse scientific resource corresponding descriptions 
experimentation module execute track silico experiments 
srmw architecture main roles publisher user 
user navigates descriptive resources trying find useful resource accesses performing experiments 
hand publisher resource provider 
frequently person plays roles 
srmw architecture dynamics interaction users publishers 
publisher provides operational resources code data wants publish web service provider modules 
means build web service corresponding wsdl document code data resources available web users 
publisher interacts publication module step describe operational resources generating specialized wsdl documents 
documents include semantic information code data metamodel mathematical model implemented program data descriptions higher level 
validated documents stored web service registry module 
user interacts navigation module step find resources needs 
finds appropriate assumes publisher role interacts publication module helps planning organized execution step workflow definition 
user interacts experimentation module steps able choose instantiate execute workflow specifications refer program resources 
workflow completely instantiated experimentation module issues requests web services providers steps access data sets execute code 
works web services requester builds user requests get input data run specific code data 
data results available web service user choice temporarily definitely 
experimentation module keeps track ongoing experiments registering essay workflow instance 
instance possible keep track data input specific code execution code generated specific data 
metamodel differently approaches strictly ontologies metamodel approach concepts captured explicitly represented basis structuring resource descriptors 
metamodel allows explicit semantic representation scientific resources 
includes descriptions scientific model program code 
remainder section presents set concepts forms metamodel 
presents uml representation simplified version data code program model workflow experiment concepts visualized 
data code resources identified operational resources web address 
operational resource specialized data resource code resource described certain type 
particular data resource described data category code resource described exactly program interface simply program 
code executable program instance specific location 
usually scientific program implementation theoretic model 
believe important describe program theory model 
focus represent model formula algorithm describe adequate semantics facilitate decision regarding adequacy problem hand 
model program concepts characteristics common belong different usage semantic levels 
program executable model generalization program 
similarity resides mainly relationships concepts associated set data parameters constraints 
represent similarity model program viewed transformations 
transformation description data transformation process requires input data produces output data 
transformation associated input output data refers data category 
transformation associated set parameters set operational constraints express conditions data attributes transformation parameters 
user may publish code associating specific transformation program interface 
help user access understand code 
describes scientific data common characteristics 
set attributes describe property 
associated model program 
addition say program implements model 
mapping function exist program model meaning data associated program may related data associated model 
analogously may say implements establishing mapping function 
parameter concept represent model parameter tune model specific objective processing parameter determine performance accuracy aspects condition parameter express value required program constraint 
scientific process strongly experimental investigation evidence accumulation result assimilation 
scientific resources captured 
advanced concepts identified provide resource usage registration transformation concept 
transformation describe program 
available experiment concept workflow 
transformation needs available experiments declared part workflow 
workflow related set transformations described workflow specification attribute contain text document workflow description language bpel ws 
workflow specification describes related transformations processed transformation performed ones performed parallel transformation output data corresponds transformation input data experiment associated set controlled workflows usually similar results may compared verify experiment hypothesis 
case silico laboratory environment silico experiment hypothesis purpose 
control established association set related workflows experiment fixed set workflows actions taken 
action begins workflow instantiation ends workflow execution complete 
common lab word workflow instantiation called essay 
essay involves set code executions 
executions mapped instantiation specific workflow workflow composed set programs 
code execution describes program keeping record resources code data scientist essay code execution registers program parameter value parm match program data data resource data match 
data match assignment data resource data belongs program interface 
assignment process verify compatibility data categories referred data resource program input data 
summary code execution automatically documents generation data resources data code resource silico essay 
adding metamodel concepts wsdl document take advantage web services technology implemented metamodel specializing wsdl 
considering services programs equivalent concepts metamodel wsdl schema share representation intersection 
intersection involves mainly program description elements 
fact complements wsdl providing descriptive elements relationships 
order standard compliant chosen modify wsdl metamodel add semantic elements specialization 
expressed xml schema 
analogously wsdl created root element composed definitions called 
scientific resource program model program data categories declared element 
relationships elements wsdl elements represented xml schema extra attributes values point wsdl element instances 
illustrate xml schema section detail main elements program element spm program 
facilitate visualization usual xml textual format hierarchic diagram shown represent program element 
diagram elements optional appear dotted boxes 
elements extensions elements advantage inheritance mechanism available xml schema 
inherited elements appear separate group 
elements complex structure indicated plus sign 
main elements including program element contains extensibility element element allowing new sub elements included instance documents 
program element inherits attributes type included group elements 
title creation elements 
input parm output elements may occur times 
similar complex structure includes title data category 
constraint element complex structure 
different includes elements title description describe constraint natural language expression describe formal language 
second group elements program specific descriptive elements 
element holds information programming language program implemented 
important specify version language 
version element specify version release program description 
implements element refer model element informing relationship program theory 
specialized wsdl document includes definitions wsdl definitions element 
illustrate added elements wsdl take program element 
wsdl document porttype operation element corresponds program element 
specialized wsdl document program element refers porttype operation element sub element 
wsdl file duplicated srmw architecture altered include extra import definition inside 
definition srmw couples metadata scientific resources wsdl elements 
consequently applications may access metadata related scientific resource published srmw specialized wsdl document 
instance queried specific program srmw provide wsdl document specialized semantics including contents related documents 

mholline workflow supported srmw section shows srmw architecture mholline workflow 
goals mholline project enable large scale modeling assembling programs automated workflow srmw architecture enables biologists obtain structural prediction depending individual bioinformatics specialists 
illustrates srmw functionality navigation experimentation publication mholline resources 
published useful resources build mholline application 
blast algorithm published algorithmic model 
resources published programs involved mholline application code resource published program mholline workflow programs take part available data resources 
shows srmw screen shot publication blast program association blast algorithm previously published implements 
description program shows written ncbi programmers current version 
publication involves description data input output association input output data categories 
instance receives protein query sequences input described protein target sequences data category 
program related wsdl document instance porttype operation named 
ongoing experiment conducted mholline workflow 
context srmw experiment supported navigation publication experimentation facilities 
suppose specialist looking workflow resource perform essays 
navigating resources related protein sequence specialist finds mholline workflow needs start describing experiment associating mholline workflow 
having experiment published scientist may start running essays providing program input data parameter values 
shows instantiation mholline workflow blast step input screen asks parameter values 
addition experimentation facility helps user choosing adequate code considering code resources associated blast program choosing input data considering data resources compatible blast program input data category 
scientist able execute experiment 
experiment experimentation module automatically updates experiment document registering related essays 
experiment results confirm experiment hypothesis current mholline experiment execution provides quality structures specialist may decide finish experiment completing corresponding report 
experiment available scientists learn navigation module 
context experiment need defining ad hoc workflows quite frequent 
case srmw architecture help composition workflows 
instance suppose generic structural genomic workflow defined terms scientific models model workflow 
specification workflow defined sequence interconnected models blast algorithm blast filter structure generator structure evaluator 
mholline workflow program workflow implements model workflow 
program blast program bats program modeller programs 
specific set programs defined mholline adequate specific request new workflow built 
suppose instance bats program replaced program 
having access model workflow description scientist able browse programs implement step model workflow 
selecting blast filter step model workflow description scientist realizes alternative bats program 
browsing available programs corresponding data categories scientist build adequate program workflow new experiment 
current srmw web interface limited serial flow executions 
working coupling workflow editors srmw features bpel ws automatically generated 
working establishing code association workflow executed 
srmw users include large amount scientific information starting benefit 
srmw architecture fully instantiated specific real scenario scientific activity facilitated users just fill parameters provide data resources 
consequently scientific resources automatically documented integrated inter related consistent 
srmw infrastructure mholline workflow confirmed importance modeling concepts models programs semantic levels resources including essays experiments 

related scientific laboratories right program data resources requires browsing previous experiments 
specifically understand program set parameters hard task 
difficult choose adequate parameter values identify alternative programs 
accessing previous experiments particularly useful allows users retrieve examples program parameter settings consider similar programs alternatives solve problem hand 
metadata needed describe programs data 
main contribution combine metadata support manage scientific workflows web service technology 
section discuss related respect database mediation integration grid computing workflow management web services technology bioinformatics scenario 
projects working metadata capture data lineage 
systems kleisli tambis mediation approach integrate databases 
mediators traditionally address business database integration problems 
mediator responsible translating query commands query results database component integrated coming unique logical view database 
data lineage mediation approaches deal data transformations program chain case workflow 
scientific workflow systems adopting grid platforms 
grids bioinformatics community 
open grid service architecture ogsa specification combines web services grid computing platform grid service 
projects currently grid web services 
addition focus resource allocation workflow execution planning semantic issues workflow design 
mygrid project exception scenario detailed section 
workflow management systems wfms automated coordination engines control workflow specification instantiation execution auditing evolution 
wfms built address traditional business workflows projects zoo wasa tools environments address scientific workflows 
workflow implementation created schedule support activities genomic laboratory discover protein protein interactions 
built top meteor workflow management system 
architecture meteor includes services build store execute manage workflows 
workflow specifications stored xml documents assuming particular implementation workflow runtime service 
tasks deployed executed proprietary unix servers workflow specifications static user able add new tasks existing workflow definition 
works authors give special attention input output data representation allowing design richer workflow specifications :10.1.1.134.8987
metamodel captures program executions consider set workflow instances may take part scientific experiment 
provide model workflows distinguish model program concepts 
initiative proposes architecture integrate data bioinformatics programs 
presents facilities user proposing graphical user interface workflow definition language workflow execution engine 
proprietary solutions 
authors propose genomics research network architecture comprises development environment deployment framework address development new genomic centric applications 
deployment platform includes workflow api generic configurable engine compose set tasks data unified process interpreted execution environment 
provides drag drop graphical interface enable visual construction workflows user 
presents specific module deal xml queries provides visual xml query interface 
main contribution lies providing data management tools storing modeling querying integrating heterogeneous sources data programs xml interchange format 
wfms web service technology provide interoperability issues 
web services technology open standard adopted industry 
bioinformatics resources management projects moving web services technology 
authors web services group find similar biological programs considering composition 
project uses web services publish discover data programs close 
special feature open source provides easy environment bioinformatics developments 
workflow composition execution described environment 
mygrid project closely related explore combination metadata web services workflows 
addition mygrid addresses grid platform 
composition workflows web services part mygrid features 
mygrid project emphasizes symbiotic relationship semantic web grid applications leading ideas scenario 
mygrid provides metadata support mainly suite inter related ontologies annotation components describe scientific resources 
metamodel structure resources descriptions explicitly representing metadata models programs experiments data 
particularly suitable describing data transformations metamodel clearly expresses relationships resources involved 
believe approaches metamodels ontologies complementary working add ontology services metadata functionalities 
proposing showing real bioinformatics scenario web services technology associated metadata framework describe manage scientific resources silico scientific experiments 

bioinformatics area growing rapidly raising management issues scientists 
vast amount program data resources available organized interoperable flexible scalable environment 
show web services effective infrastructure provide environment scientist laboratory 
discuss role metadata web services show coupled mechanisms description management scientific resources srmw architecture 
focused workflow issues applied web services context bioinformatics workflow called mholline 
believe web services right track full featured scientist laboratory 
compared script language approach web services approach superior regard interoperability reusability flexibility issues 
overcomes platform incompatibilities software tools databases interaction 
mholline workflow instance includes web services interface legacy programs written different languages fortran 
addition web services workflow definition language provides flexibility scripts allows scientists build ad hoc service compositions 
reusability facilitated web services modular approach 
web services workflows published web services enables scientists part new service compositions 
furthermore web services open standard adopted industry tied proprietary solution 
experiments show scripts faster web services overhead negligible considering execution time workflow programs remote program calls 
advantage web services technology coupling grid services initiative ogsa 
currently working performance improvements structural genomics workflows parallel processing pc clusters 
intend adapt srmw grid services platform workflow parallel strategies grid scenario 
implementation web services approach proved appropriate solution create environment supports geographically distributed resource management 
provide full featured scientist laboratory web services architecture 
web services description language originally proposed generic service description lacks application related semantic descriptors 
provided descriptors provide semantics scientific applications 
instance case bioinformatics applications descriptors provide information molecular sequence format fasta input blast program 
approach provided descriptors adding metamodel constructs wsdl 
way metadata explicit may manipulated user queries navigation 
important contribution srmw metamodel architecture allow code data resources higher level descriptions data transformation categories 
direction works try establish domain standards genetic area proposal domain ontologies 
identify advantages ontology metamodel approaches propose combine 
currently working adding ontology metamodel 
ontologies important provide common vocabulary conceptualization descriptors instances 
addition traditional scientific laboratories scientists need document experiments 
scientist laboratory provide mechanisms capturing organizing experiments 
srmw web services messages may captured provide automatic way registering essays 
identification scientific experiments organization set essays allow user browse documented model usage 
spite advantages web services technology believe important consider new evolving technology 
drawback current web services technology support security 
moment companies keeping web services projects firewalls network security reliability concerns 
relevant aspect considered regarding web services technology real degree interoperability different implementations web services platforms 
constant evolution web services standards soap wsdl uddi differences multi vendor web services platform implementations lead differences implementations different soap specifications 
currently web services platforms really seamless communicate 
issue addressed web services interoperability organization ws open industry effort promote web services interoperability platforms applications programming languages 
expect higher degree interoperability different web services platforms near 

partially supported cnpq capes brazilian funding agencies 
paulo capes brazil holder 
authors anonymous reviewers comments helped improve 

ailamaki ioannidis livny scientific workflow management database management proc :10.1.1.134.8987
th international conference scientific statistical database management capri 
apache tomcat available jakarta apache org 
arkin business process modeling language bpml mar available www bpmi org bpml spec esp azevedo strategies dynamic executions semantically equivalent web services technical report es brazil 
lewis ontologies biologists gene ontology uncoupling web proc 
silico biology symposium 
axis project available ws apache org axis 
alonso programming dependability service grid proc 
rd international symposium cluster computing grid tokyo japan 
bio grid project available icm edu pl 
project available bio indiana edu nih mar pdf 
bose conceptual framework composing managing scientific data lineage proc int 
conf 
scientific statistical database management edinburgh 
cruz laud living genomes relations little bit xml proc 
th int 
conf 
data engineering icde ieee computer society bangalore 
singh laud data management issues challenges proc 
th int 
conf 
database expert systems applications dexa lncs springer verlag prague 
laud spell curse bioinformatics applications integration proc 
acm cikm international conference information knowledge management cikm new orleans 
cancer bioinformatics infrastructure objects available nci nih gov core 
cao jarvis workflow management grid computing proc 
rd int 
symposium cluster computing grid tokyo 
scientific resources management silico laboratory ph thesis technical report es brazil 
campos llirbat simon sharing scientific models environment applications proc 
acm symposium applied computing madrid 
campos simon llirbat architecture managing distributed scientific resources proc 
int 
conf 
scientific statistical database management edinburgh 
clark identity interoperability bioinformatics briefings informatics 
curbera goland business process execution language web services available www ibm com developerworks webservices library ws bpel 
davidson crabtree brunk tannen overton kleisli gus experiments integrated access genomic data sources ibm systems journal 
deelman mapping complex workflows grid environments journal grid computing 
eclipse java ide available www eclipse org 
esp net project available dml cs ucla edu projects dml 
fielding rfc 
hypertext transfer protocol available ftp ftp rfc editor org notes rfc txt jun 
foster wilde zhao chimera virtual data system representing querying automating data derivation proc 
int 
conf 
scientific statistical database management edinburgh 
bose earth system science workbench data management infrastructure earth science products proc 
int 
conf scientific statistical db management fairfax usa 
goble de roure semantic grid application semantic web sigmod record 
goble wroe lord zhao stevens semantic concepts mygrid project proc 
global grid forum semantic grid workshop available www org ggf ggf doc 
guan jamil streamlining biological data analysis proc 
rd ieee symposium bioinformatics maryland 
howe maier modeling data product generation position workshop data derivation provenance chicago available people cs uchicago edu papers 
interoperable informatics infrastructure consortium available www org ibm bpws available www alphaworks ibm com tech bpws 
ioannidis livny gupta zoo desktop experiment management environment proc 
nd vldb conference bombay 
kochut arnold sheth distributed workflow system discovering protein protein interactions distributed parallel databases 
krishnan laszewski gsfl workflow framework grid services available globus org cog projects workflow gsfl pdf 
ogsa dai available www org 
moss thornton program check quality protein structures journal appl 


laud cruz singh rajesh highly programmable infrastructure prototyping developing deploying genomics centric applications proc 
vldb 
leymann web services flow language wsfl available www ibm com software solutions webservices pdf wsfl pdf may 
medeiros vossen weske wasa workflow architecture support scientific database applications proc 
int 
workshop conference database expert systems applications dexa london 
meyer parallelism bioinformatics workflows proc 
int 
conf 
valencia appear 
mdc metadata coalition open information model version aug 
national center biotechnology information ncbi available www ncbi nlm nih gov blast 
paton stevens baker goble bechhofer brass query processing tambis bioinformatics source integration system proc 
th int 
conf 
scientific statistical databases ieee press new york 
rocco discovery classification bioinformatics web services tech 
report jc lawrence livermore national lab usa 
carvalho dardenne development computational environment protein structure prediction functional analysis second brazilian workshop bioinformatics wob rio de janeiro 
ali modeller program protein structure modeling release univ dec available guitar edu modeller modeller html 
sheth kochut miller zheng das meteor workflow management system prototyping significant healthcare applications proc 
electronic patient record conference vol 
nashville tn 
meersman data modelling versus ontology engineering sigmod record 
stein creating bioinformatics nation 
nature 
thatte xlang web services business process design available www com team xml default htm microsoft 
xml available www com 
world wide web consortium note web services conversation language wscl available www org tr note wscl march 
world wide web consortium note web services description language wsdl available www org tr note wsdl march 
world wide web consortium note simple object access protocol soap available www org tr soap may 
world wide web consortium recommendation extensible markup language xml second edition available www org tr rec xml oct 
world wide web consortium web services architecture working draft nov 
web services available www org ws 
web services interoperability organization available www ws org 
wiederhold mediation information systems acm computing survey 
wilkinson links open source biological web services proposal briefings informatics 
wroe goble greenwood lord miles payne moreau automating experiments semantic data bioinformatics grid ieee intelligent systems 
wroe stevens goble roberts greenwood suite daml oil ontologies describe bioinformatics web services data proc 
int 
journal cooperative information systems 

maria cl senior system analyst researcher nce 
collaborates dcc computer science graduation sc 
courses participates research development projects distributed databases metadata management semi structured data areas 
received sc 
systems engineering computer science sistemas brazil 
rafael received sc 
degree computer science federal university rio de janeiro brazil 
currently working masters degree computer science institution 
areas research include workflows web services technology distributed databases 
works object oriented software development utilizing agile development processes extreme programming 
participated projects involving major brazilian corporations 
bai researcher department computer science institute federal university rio de janeiro participates database artificial intelligence research groups 
received doctor science degree federal university rio de janeiro 
year worked visiting student university wisconsin madison usa 
current research interests include distributed parallel databases data management issues web services composition genome data management machine learning techniques 
participates research projects areas funding brazilian government agencies including cnpq capes 
participated program committees national international conferences workshops member acm brazilian computer society 
phd 
student institute biophysics federal university rio de janeiro 
participates research development projects bioinformatics structural biology areas 
paulo researcher senior professor institute biophysics federal university rio de janeiro 
advisor phd thesis fields fluid interface membrane biophysics molecular modeling biological structures structural biology bioinformatics participating genomics proteomics cooperative projects 
received sc 
sciences physics free university brussel belgium researcher university ulm germany brazilian center physical research rio de janeiro university paulo brazil 
paulo collaborator professor department computer science mathematics institute federal university rio de janeiro participates researcher research group 
received doctor science degree federal university rio de janeiro 
year worked visiting researcher clip lab university maryland usa 
main research interests include ontologies data integration resource management web transaction models web environment infrastructures web service composition formal modeling tools distributed systems 
dr participated cooperative industry university projects research projects areas funding brazilian government agencies including cnpq capes 
maria campos professor department computer science mathematics institute federal university rio de janeiro leads research group 
received doctor philosophy degree university east united kingdom 
dr campos participated cooperative industry university projects previously worked years data database administrator brazilian institute geography statistics 
main research interests include metadata management ontologies data integration resource management web olap data warehousing 
coordinated research projects areas industry brazilian government agencies including cnpq capes 
marta professor department computer science institute federal university rio de janeiro leads database research group 
received doctor science degree federal university rio de janeiro 
dr active database research community years current research interests include distributed parallel databases data management aspects web services composition genome data management 
principal investigator research projects areas brazilian government agencies including cnpq capes 
served program committees international conferences workshops reviewer journals 
member brazilian computer society belongs steering committee database special interest group acm editor acm sigmod digital symposium collection member sigmod latin american liaison committee 

legends web services architecture mholline workflow definition mholline web services architecture blast wsdl file blast soap request partners mholline bpel ws process containers mholline bpel ws process bpel ws specification receive activity bpel ws specification assign activity mholline workflow wsdl file mholline workflow definitions perl script bpel ws mholline workflow processing fasta input sequence srmw architecture metamodel program xml schema srmw functionality publishing blast program 
tables table experiment execution times seconds 
steps web services perl script step mholline start blast step blast bats step bats modeller step modeller mholline total table execution time program mholline workflow seconds 
programs execution time blast bats modeller 
