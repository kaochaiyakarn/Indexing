real time optimizations integrated smart network camera xavier bruno jerome jean francois av belgium 
integrated real time smart network camera 
system composed image sensor embedded pc electronic card image processing network capabilities 
application detects events interest visual scenes highlights alarms computes statistics 
system produces meta data information shared cameras network 
describe requirements system show design system optimized process compress video real time 
typical video surveillance algorithms background differencing tracking event detection highly optimized simplified hardware 
hardware software light embedded system software management written top java middle ware specification established osgi alliance 
integrate easily software hardware complex environments java real time specification virtual machine network service oriented java specifications rmi jini 
report outcomes typical case studies camera counter flow detection 
keywords real time image processing embedded system smart network camera context aware 

image processing increasingly important today amount existing systems attest 
examples challenging applications monitoring subway stations detecting traffic jams highways detecting unattended objects intelligent content access detecting 
scope integration vision service single device site great interests 
need satisfy requirements real time processing 
organized follows section describes requirements system section presents hardware section describes image module main characteristics hardware implementation section shows image processing section illustrates hardware distributed system software middleware section shows interest system real case study counting people 
section concludes indicates 

requirements section describes requirements system user point view specifications architecture detailed view 
see case study system basic configuration count people entering exiting shop public indoor environment 
requirements image processing count people real time sequence captured images 
system aware ms events people entering exiting 
trigger alarm real time case situation presence people night 
important requirement maintenance system software possible offshore remote location 
requirements middleware modular extensible scalable 
communication done network 
standards highly recommended increases life cycle system helps maintenance 
system portable usable different kinds hardware 
time management purposes provide client application ought smart devices enhanced mobile phones pdas instance 

hardware hardware system smart network camera called developed sa basic principle smart network camera 
gains previous solutions lower maintenance integration easy standard replacement case failure lower room needs 
motherboard series coupled frame grabber board 
series smart devices offers features cpu mhz chosen graphic controller usb controller parallel controller fast ethernet eide interface 
frame grabber board integrates component video data acquisition frame grabber fusion bt video decoder 
addition specifications mounted built mbytes flash memory mbytes sdram ccd 
card power intel pentium mhz computer coupled dedicated video adaptor 
philips modem bank camera acquisition processing li smart camera network 
smart network camera principle 

sa smart camera 
photo courtesy sa 

image processing architecture vision part system divided main levels computation achieve interpretation see image level image filtering background evaluation segmentation blob level description blobs filtering matching tracking description filtering event level tracking analysis 
computational aspect vision part process runs threads different fixed priorities efficient scheduling 
thread image filters set priority segmentation extraction quantification tracking analysis priority 
way scheduling give resources higher thread see delay reduced 
pre processing segmentation acquisition current image filtered pixel domain decrease spatial high frequency noise 
image reduce needs computational resources segmentation process 
image models represent backgrounds implemented system 
segmentation process divided stages update estimation 
segmentation uses mixture gaussian background model quite robust common noises monitor branches moving trees 
update stage revise mixture gaussian pixel background estimation stage extract priori foreground filter morphology processing objects 
authors real time optimizations implement derived version run times faster original uses integers floats 
description 
sa web page www tech image image filters 
architecture image processing part 
time 
scheduling thread higher priority arrows show thread data process 
blobs description filtering aim blobs description filtering interface segmentation tracking simplify information 
description process translates video data symbolic representation descriptors 
description process calculates image segmentation results time different observed features blob position image position scene bounding box mean rgb color point filtering process remove small blobs blobs area image considered model vision descriptors integrated specific applications vehicle human model parameters 
tracking algorithm tracking part system divided steps straightforward approach estimation cost matrix computation matching decisions tracks updates 
tracking filtering processed tracking description output 
blobs description time image segmentation extraction quantification matching matrix computation binary image mobile blobs description filtering middleware matching decision prediction blobs time blob description 
basic architecture tracking 
tracking tracks update tracking description tracking description process tracking analysis events meta data information 
output image processing shared cameras 
basic structure meta data xml 
describes visually happens image left side integrate high level scenario representation right side 
xml version encoding utf description time time description xml version encoding utf event history event time time name unattended object name description description parameters event event history 
left xml segmented object described bounding box 
right xml scenario detection 

hosting middleware software aim concept provide efficient way add hardware ability network 
hardware managed network report component communicate nodes context aware node 
today computer capabilities allow quite complex software technologies soft real time purpose 
explanation shows advanced software components 
concept overview define concept node hardware connected network 
node camera computer dedicated remote image processing able communicate node 
software designed embedded node 
embedded network management communication directly image processing runtime practical idea modular 
architectures exist process communication called middleware 
software architecture consider image processing runtime embedded node accessed middleware 
problem way link runtime middleware 
solution consists embedding runtime runtime container functionality link runtime middleware 
add runtime management features better control runtime 
ideally provide runtime container cross platform case runtime container installed node waiting loading execution image processing runtime 
side runtime container find communication structure called middleware 
module handles messages nodes network 
kinds middleware exist consider webservice efficient interesting middleware architecture 
provide representation software architecture 
structure independent node features network nodes 
giving right content messages exchanged nodes construct image processing runtime aware information coming nodes 
principle implementation runtime container node 
conceptual architecture chart 
avoid proprietary implementation architecture decided open service gateway initiative osgi specification service oriented framework 
osgi java specification provides features 
framework proven beneficial applications 
osgi provide service represents runtime container java native interface jni 
container call called code image processing runtime offer management features 
callback methods messages exchanged java code native code formatted standardized way order avoid strong dependencies runtime container native code 
method allow kind native runtime run runtime container 
side runtime compiled hardware architecture directly updated container 
protocol enable communication nodes network advisable kind protocol messages middleware messages exchanged container soap messages protocol web services 
note useful enhance exchanged information 
common alerting protocol cap structure designed webservice compatible identify nodes extra information embedded message image sound resource 
osgi offers interesting features software life cycle management installation network jini java service allows functionalities discovery remote invocation full description osgi purpose 
theses functionalities obtain full manageable system distributed network 
architecture real time image processing runtime designed directly embedded osgi www osgi org www org tr soap www oasis open org specs index php java sun com developer products jini index jsp runtime runtime container web service external world designed embedded basically java designed purpose real time 
solve problem sun proposed specifications embedded software embedded real time advantage theses specifications possible execute java applications resource limited hardware real time systems 
osgi java application runs classic computer run specific implementations java virtual machine cross platform 
summary say implementing runtime container osgi web service features cap formatted messages container native code embed node software needed execute image processing communicate nodes network reporting context aware 
node generic concept hardware execute software node 
smart network camera described section fulfills requirements needed execute software considered node architecture 
system management problem solve way manage network collect events appear system 
simplest solution osgi framework system server responsible event collections software life cycle management network configuration developing user interface embedded system server client application system server user developer deployment software manage system 
feature management interface facility configure inter action path nodes happens person leaves camera view range enter camera 
modes considered architect mode see quotation encoded virtual world represented quotations automatic configuration network automatic calibration tracking correlation cameras manual mode see user gives manually parameters configuration camera 
feature deployment feature image processing service situation 
node node node node node overlapping camera views link camera view link camera view 
representation view range nodes 

representation links nodes 
provide camera preloaded osgi framework including runtime container middleware 
camera connected network loads image processing runtime installs container launches execution 
java sun com index jsp jcp org final jsr index html www org book index html project usage implementation eureka project uses theses axes runtime container named logic engine management 
adds library including basic generic features filtering counting segmentation ide application create video surveillance software library 
deployment release project manual mode 

case study case study introduced 
hardware middleware described section 
vision part high level processing modules detection activity abandoned object missing object people running fast car park management run options accordance user application 
decide focus case people tracking counting indoor scenes 
module able evaluate number people moving region scene 
set module requires definition context region interest tracking working counting zone counting achieved accordance directions 
specify authorized non authorized displacements highlight alarm somebody tries exit entrance door 
shows possibility camera positioning 
case place cameras 
view shows front camera sees 
central corridor shop shop shop shop 
map shopping center 

view front camera 
example concrete deployment technology deploy power network wire building install park smart network cameras connected network cameras automatically learn topology network cameras connect client network say notebook standard operating system installed macos windows linux define service needed counting tracking upload cdrom internet service functions needed correct licenses define topology building location cameras start system user client 
note definition topology requirements usually expert 
way done offshore 
versions functions automatically downloaded internet needed installation 
failure detection directly call person change bad component distributed system 
system 
cameras aware context receiving information cameras connected network 

proposed approach integrated video surveillance platform provide flexibility efficiency industrial applications 
scope issues divided main parts hardware computer vision middleware 
propose new standard middleware overcome complexity integrating managing distributed video surveillance system 
aim interconnect video surveillance network safety network building detect smoke fire automatically highlight video stream neighboring sensor triggered alarm 
open way pervasive computing 
granted region eureka project 
giving opportunity test system camera prototype 
segmenting moving objects modest video object kernel workshop image analysis multimedia interactive services tampere finland may 
br mond tracking groups people video surveillance nd european workshop systems 
bastide 
seamless modular approach real time video analysis surveillance th international workshop image analysis multimedia interactive services april instituto superior lisboa portugal 
stauffer grimson adaptive background mixture models real time tracking proceedings ieee conference computer vision pattern recognition volume fort collins colorado pp 
june 
darren butler sridharan michael bove jr real time adaptive background segmentation proc 
icassp 
smart encoding wireless video surveillance image video communications processing proceedings spie vol 
spie th annual symposium electronic imaging january 
gu zhang osgi infrastructure context aware applications ieee pervasive computing pp 
october 
fabri jini technology applied railway systems ieee international symposium distributed objects applications pp 
september 
