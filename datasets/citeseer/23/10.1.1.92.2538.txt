finishing repetitive regions automatically dupfinisher cliff han patrick chain university california los alamos national laboratory doe joint genome institute biosciences division los alamos nm 
university california lawrence livermore national laboratory doe joint genome institute east ave livermore ca corresponding author dr cliff han los alamos national laboratory mail los alamos nm 
phone fax email han cliff lanl gov key words genome finishing repetitive sequence 
currently genome sequencing community producing shotgun sequence data high rate genome finishing keeping pace help automated finishing tools 
reason slow progress finishing repetitive regions longer length sequencing read assembled correctly current assembly tools 
repeat regions checked manually 
finishing rates increase repetitive regions assembled correctly finished automated fashion 
dupfinisher computer program designed finish repeats minimal human interaction 
automatically detect repetitive regions assemble repeat individually paired draft reads primer walk reads check quality subassemblies create artificial joins finished properly assembled repeats run automated gap closure scripts unfinished subassemblies 
dupfinisher able solve majority repeats microbial genome automatically greatly reducing amount human attention needed 
dupfinisher finishing genomes adapted aid finishing processes bacterial genome large insert clone projects 
shotgun sequencing standard strategy genome sequencing centers involve small bacterial genomes bigger eukaryotic ones 
rapid pace genome sequencing progressed particularly microbial genomes prompted consider faster automated ways obtain properly assembled product represents genome question 
example currently published complete genomes ongoing genome sequencing projects www org despite published genome released decade ago 
shotgun sequencing usually carried ends clones derived libraries contain inserts different sizes joint genome institute uses kb kb kb libraries 
data sequencing run called read paired sister reads derived clone 
thousands reads assembled specialized computer software tools genome assemblers 
theoretically fold coverage genome cover gaps low quality regions remain assemblies 
gaps may due biases particular dna fragments repetitive regions may simply random 
purpose finishing close gaps enhance quality resolve assembly 
assembly programs phrap green washington cap smith waterman dynamic programming algorithms determine overlaps sequencing reads generate contiguous sequences contigs 
assembly algorithms solely sequence information individual base quality scores programs discard relevant information clone size read orientation read pair information 
modern assemblers euler assembler assembler reps jazz pcap paired read information 
assemblers developed specific types computer platform 
phrap including parallel version southwest parallel software pga assemblers available different platforms 
phrap remains commonly assembly program bacterial genome assembly close coupling finishing tool consed package 
phrap demonstrated robustness ability assemble data number contigs particularly susceptible assembly mistakes arise repetitive sequences genome 
manual inspection misplaced reads originating artificial algorithmic effects assemblers necessary 
software packages available allow users visualize assemblies stored ace files standard output file phrap assemblers 
packages limited display sequence read positions allow advantage information arising read pairs resulting requirement auxiliary software 
commonly packages allow display read pair information gap consed package allows display read pair information genomic level interfaces directly phrap assembler 
consed reads alignment window reads potentially repetitive regions highlighted default 
developed program add tags ace file potential repeats 
consed assembly view misplaced read pairs semi manually 
repeats duplications corrected fashion 
duplications resolved sequencing clones pcr confirmation duplication 
manual process resolving duplications incredibly time consuming expensive 
order relieve problems currently associated finishing process including resolution repetitive regions dupfinisher designed achieve objectives automatically detecting repeats blast program pairing repeat flanking unique sequences unique regions share largest number common templates mutually assembling paired unique regions checking quality subassemblies making artificial reads finished duplications guide assemblies main project identifying tracking standard finishing reactions complete subassemblies unfinished repeats 
dupfinisher configured perform selected combinations tasks 
dupfinisher production finishing line utilizes phrap consed suite autumn 
dupfinisher resolves duplications genome human interaction significantly reducing time cost typically associated finishing microbial genomes 
results discussion dupfinisher microbial genome finishing pipeline finishing bacterial genomes 
automated finishing process engages dupfinisher includes individual cycles repeat resolution dupfinisher cycles combine consed repeat resolution dupfinisher 
number repeats genomes varies fewer copies 
note final number repeats genomes fully resolved sizes repeats similar kb average kb maximal length 
shorter ones insertion sequences longest ones usually ribosomal dna sequences 
consensus sequences repeats stored file modified perl consed package tag repeats project 
dupfinisher resolves repeats individually 
verified categorized finished means repeat unique anchors resides single contig high quality bases repeat low quality means repeat unique anchors resides single contig low quality bases repeat region unfinished means unique anchors contig gap anchors means unique anchors reside single contig paired reads 
approximately half repeats genome project resolved original shotgun reads 
duplications unfinished category low quality resolved primer walking generally unfinished repeats finished correctly rounds primer walking cheapest finishing method 
automatic semi automatic resolution large fraction repetitive regions genome dramatically reduces table 
comparison contig numbers dupfinisher pga assembly 
amount manual time normally spent issues allows individuals focus attention time remaining problematic regions 
genome phrap phrap pga number duplications genome os repeats detected corrected current version dupfinisher corrected manually 
identical repeat clusters separated short unique sequences long repeats kb tend result low quality unfinished categories 
shown table running dupfinisher genome sequencing projects shotgun reads assemblies improved reduced numbers contigs compare assemblies phrap 
projects tested pga assemblies combination phrap dupfinisher better pga 
example significant improvement observed number contigs reduced number scaffolds initial runs dupfinisher 
projects rb scaffold numbers increased runs dupfinisher due breaking numerous false joins repeats 
dupfinisher unable completely finish repeats project correctly typically immediately shotgun draft stage 
dupfinisher stage repeat regions checked manually 
repeat consensus sequences removed concern 
dupfinisher run new assembly project done 
checked manually moving artificial reads finished repeats main project 
due method detecting methods dupfinisher tandem repeats going missed 
type repeats able resolved paired information 
intend leave type repeats human call bombing resolve 
success dupfinisher technique depends items size clones required sequenced 
assembly views genome runs dupfinisher 
view assembly shotgun draft reads running dupfinisher 
view assembly run dupfinisher 
view assembly second run dupfinisher 
gray horizontal bars middle row represent contigs joined scaffolds lines bars 
lines contigs indicate possible paired reads 
ends read pairs shotgun draft coverage genome question size complexity duplications cause assembly problems genome question 
microbial sequencing process standardized eliminates concerns concern genome specific 
limitation program name draft finishing reads include information template reaction type 
briefly template name drafting reads letter numbers dot reaction type represented letter dot 
avenue improvement information templates reaction types stored phd files 
furthermore dupfinisher track repeats repeat families run run 
highly useful track particular repetitive region different assembles avenue improvement program name repetitive sequences consistently repeat tagged name 
results study show dupfinisher provides powerful useful genome finishing tool microbial genomics projects 
dupfinisher tool automatically detects resolves due repeat regions significantly contributed increasing efficiency microbial genome closure process 
microbial genomes processed dupfinisher product assembly fewer gaps regions output directing attention remaining problematic regions 
program freely available please contact han cliff lanl gov tested microbial genomes including genome sparc machines solaris versions 
results implementation dupfinisher lanl genomic finishing pipeline suggest serve valuable finishing tool considerably enhance efficiency genome finishing 
system methods dupfinisher components dupfinisher consists components parameter file program written perl programming language 
perl chosen superiority parsing language widespread availability ease development 
parameter file contains parameters modified user specific needs 
parameter file locations copy project edit dir directory program run personal copy user home directory defined home master copy consed home directory defined consed home bin 
parameter values copy residing specific project directory personal copy personal copy master copy 
dupfinisher program schema shown designed consed package 
dupfinisher program requires input file command line ace file contains information needed dupfinisher 
ace file generated phrap compatible assemblers parallel phrap high performance software unpublished 
dupfinisher collect information contigs reads contig ace file 
inputs parameter file 
dupfinisher calls programs installed available unix system command line 
include national center biotechnology information ncbi blast package scripts phrap consed package consed ace perl 
ncbi blast replaced versions blast long outputs compatible 
boulder perl library package lincoln stein stein org software boulder installed parse blast results 
major output dupfinisher includes individual assemblies repeat copies unpaired repetitive ends 
subassemblies collected single directory named represents cycle run dupfinisher project 
individual subassemblies text files summarize results directory containing artificial reads representing finished repeats directory containing files finishing reactions unfinished repeats 
repeat detection repetitive regions assembly determined blast search 
consensus sequences contigs defined parameters parameter file extracted ace file saved fasta file 
self blast search performed fasta file 
query database done parameters act speed process keeping sensitivity high find repetitive regions interest cause 
blast results parsed scripts boulder perl package 
non self mapped contig position blast hits criteria set parameter file collected repetitive regions 
default hit longer bases greater percent identity collected 
repetitive regions sorted contigs locations contig 
repeats compared grouped sequence similarity 
longest sequence repeat family consensus group 
consensus sequences repeats saved tag repetitive regions assemblies 
unique anchor determination repeats resolved unique sequence called anchors adjacent 
paired shotgun primer walking sequences template reads anchor key resolving repetitive regions 
depending average insert size shotgun library distribution repeats unique regions resolve repeat large small 
default anchors kb possible drafting reads come kb kb insert libraries 
anchor bridges repeats served twice targeting repeat ends 
reads sequences align consensus sequence anchor collected 
read goes direction target repeat located paired shotgun read primer walk reads generated template collected individual assemblies repeat copy 
unique sequence bases adjacent target repeat stored edit dir directory purpose possible quality assessment assembly human 
assembling repeat assembly repeat performed anchors flanking repeat determined 
unique anchors paired common reads shared 
anchors sharing greatest number common reads paired assemble repeat flank 
condition considered round pairing anchors repeat regions solved unique anchors classified repeat family 
reads collections target repeat consed package 
repeats resolved dupfinisher previous cycles assembled 
subassemblies generated repeats checked automatically quality determine target repeats assembled contig 
paired reads checked correct orientation 
dupfinisher artificial read finished repeat adds tag proper regions contigs unfinished assemblies subsequently runs 
ace file phd files contigs assembly blastn repeat detection txt define unique regions collect reads unique ends reads templates pairing unique ends check finished repetitive txt consed consed files fasta assemblies copy repeats phd fasta files finished repetitive region 
processing scheme dupfinisher 
input output files white boxes 
functions performed programs gray boxes 
functions performed dupfinisher marked dark gray boxes 
oligonucleotide files contain information primer walking reactions generated copied common location convenience human 
finishing procedures dupfinisher lanl finishing procedure involving dupfinisher run dupfinisher assembly ace file put artificial reads generated dupfinisher main project assemble parallel phrap repeat steps new ace file run consed main project primer walks main project unfinished repeats repeat step run primer walks main project unfinished repeats pcr close gaps scaffolds main project repeat step perform manual finishing including closing gaps resolving low quality single clone coverage regions checking repeat resolutions dupfinisher 
david sims reading commenting manuscript 
program supported department energy contract 
eng auspices department energy university california lawrence livermore national laboratory contract 
eng 

huang madan 
cap dna sequence assembly program 
genome res 

waterman eggert 
new algorithm best subsequence alignments application trna comparisons 
mol biol 

jaffe stanley butler berger mesirov lander 
shotgun assembler 
genome res 

jaffe butler toh mesirov lander 
genome sequence assembly mammalian genomes 
genome res 

pevzner tang waterman 
eulerian path approach dna fragment assembly 
proc natl acad sci 

reinert delcher dew halpern lai 
design shotgun assembler human genome 
bioinformatics suppl 

ning 
assembler 
genome res 

wang wong ni han huang zhang ye zhang hu zhang 
reps sequence assembler masks exact repeats identified shotgun data 
genome res 

chapman putnam chia smit 
shotgun assembly analysis genome 
science 

huang wang yang 
pcap genome assembly program 
genome res 

chen skiena 
case study genome level fragment assembly 
bioinformatics 

pevzner tang 
fragment assembly double data 
bioinformatics suppl 

beal 
package 
methods mol biol 

gordon green 
consed graphical tool sequence finishing 
genome res 

andersson 
repeat discrepancy tagger shotgun assembly finishing aid 
bioinformatics 

altschul madden schaffer zhang zhang miller lipman 
gapped blast psi blast new generation protein database search programs 
nucleic acids res 

ewing green 
base calling automated sequencer traces 
ii 
error probabilities 
genome res 
