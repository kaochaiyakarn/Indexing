design pirs peer peer information retrieval system wai gen yee frieder database information retrieval laboratory department computer science illinois institute technology chicago il yee iit edu ir iit edu 
describe design pirs peer peer information retrieval system 
proposed approaches pirs require centralization data specially designated peers 
applicable larger environment 
explain design decisions analyzing benefits potential shortcomings 
show pirs significantly improves search performance todays file sharing systems 
today peer peer file sharing systems initially conceived successors napster primarily exchange music 
designed allow simple annotation files including artist song title 
long file metadata known searches simple 
query matches file terms substrings metadata terms 
example consider instances song annotated terms smashing greatest hit respectively 
query query smashing greatest hits refers song return instance 
problem illustrates limitation search requires user know exact metadata associated instance file perform successful search 
problematic naive user unaware annotation conventions user looking particular song particular type music songs bands chicago 
problem exacerbated fact song files automatically annotated web databases org 
annotation results identical annotation copies particular song gives users annotations 
goal describe information retrieval ir help alleviate problem environment 
analysis spend time describing characteristics systems degree existing systems possess section 
section informally describe file sharing model 
describe design pirs ir system section experimental results section 
section discuss pirs compatibility ir 
concluding remarks discuss section 
limits current information retrieval characteristics systems described systems characterized low maintenance overhead improved scalability reliability synergistic performance increased autonomy privacy dynamism 
systems inexpensive maintain scalability full resources participants function clients servers 
reliable failure peer disable entire system 
offer synergistic performance peers utilize resources data cpu cycles disk space underutilized 
dynamic allowing peers autonomously join leave system changing types resources offered 
offer privacy networks lack central authentication servers 
systems ideal environments populated autonomous users dynamic needs surplus resources 
characteristics distinguish systems previous technologies distributed computing ad hoc communication 
distributed computing refers computing platform resources located physically distinct locales 
systems resources may highly integrated interdependent 
ad hoc communication refers communication platform client automatically join existing network 
ad hoc networking deals lower level communication infrastructure systems built 
computing unique paradigm creates new possibilities information technologies 
limits information retrieval web search engines internet offers medium easily gather share information 
today dominant paradigm sharing information web 
organizations set web servers host web sites publish information 
individuals chance publish information personal web pages blog pages 
access information users simply type appropriate url web browser 
gap bringing information publishers consumers exactly find appropriate url points desired information 
today gap bridged web search engines google 
consumer enters relevant terms google returns best matches 
problem relying google find published data publishers wait google crawl web pages appear search results 
crawling occurs periodically material published today time 
problem google caches indexed content 
happens publishers lose control dissemination material 
furthermore results returned search engines suspect 
example rankings influenced commercial interests 
centralizing query services limits scalability reliability search engine single server index content google claims index slightly web pages considered small fraction available single point failure 
relevant example napster centralized architecture easy prey legal attacks 
file sharing systems focus file transfer bittorrent suffer problems web search engines 
bittorrent different gnutella focuses download performance focuses search 
bittorrent allows client download single file multiple sources simultaneously improving performance distributing load 
relies web search engines provide search capabilities shared content problems discussed 
systems solve problems 
queries sent directly data sources results date reflect currently available data 
receipt results peer custom algorithms rank 
eases perusal users trust rankings 
single point failure systems 
query returns results failures multiple nodes 
current peer peer information retrieval systems limits information systems focused bandwidth efficiency development unifying data models 
system built top routing infrastructure 
places content network hash value 
proposes create distributed index partitioned similarly placed network 
deterministic placement content improves bandwidth efficiency constraining way query routed 
original version gnutella contrast floods queries network 
authors take similar approach 
assume hybrid networking architecture peers deemed reliable capable act servers 
servers routing queries store metadata statistics term frequencies traditional ir algorithms 
systems edutella peerdb propose data models standardize way data services published queried 
systems potential limited due constraints put infrastructure applications 
system works best environment peers reliably connected internet 
necessary shared content centralized certain peers hash values 
loss peer results loss associated content transfer massive quantities data 
furthermore takes control data placement users hands 
characteristics violate principles systems described section 
solution problem replicate content applying multiple hash functions content 
problematic increases amount data peer maintain network traffic 
notably know done information retrieval highly dynamic environments peers frequently join leave network 
edutella peerdb focus standards information retrieval 
standardization tends raise bar entry network forces users publish content 
effect limiting amount data published reducing network usefulness 
note goal system design 
popularity napster terms market impact user satisfaction demonstrates certain conditions need 
time pure systems shown scalability problems alleviated hybrid architecture 
fact system works purely mean better 
model typical file sharing model peer may refer client server depending context maintains set shared files data objects 
file annotated set metadata terms contained descriptor 
particular terms contained descriptor instance file user tunable 
users create queries find files system 
query metadata set user thinks best describe file 
queries routed reachable peers 
queries generally reach peers due network conditions details routing protocol 
returned pointers instances files match query file metadata set 
matching criterion query terms substrings term file metadata set 
users study returned metadata sets decide file download 
user selection downloads file selecting associated file pointer 
client follows pointer downloads file server instance file 
note discussion uses music file sharing application applies applications 
example html document file analogously annotated metadata form meta tags 
terms meta tags tuned independent content html document 
design pirs goals goal design ir system focuses client behavior fully distributed 
system little assumptions underlying communication infrastructure behavior servers peers 
example routing mentioned section tacitly assumes network stable servers reliable 
consequently systems potentially excellent performance violating assumptions results loss queries data 
light systems tend fall somewhat categories distributed systems 
system assumptions communication infrastructure behavior peers avoids problems 
obvious questions ask 
ir system 
example ir requires global statistics available data effective ranking 
highly dynamic environment statistics hard yield 
furthermore data available possible implement ir ranking functions application 
question performance terms query result quality computational complexity 

system adapt changes system conditions 
making assumptions designing system may conservative approach 
cases network peers capable reliable 
system take advantage condition available 
gnutella ultrapeer architecture demonstrates adaptability conserves bandwidth stable environment works albeit efficiently unstable 
goal answer questions 
describe design pirs 
doing highlight complexities applying ir techniques environment 
overview pirs designed combine search capabilities information retrieval systems dynamic network management systems 
works managing metadata way gradually increase variety queries answered file 
done adapting annotation particular file match query patterns 
pirs accomplishes goals ways 
metadata collection section collect metadata possible shared file various means 
increasing amount metadata increases likelihood query find matches 
simplicity size metadata set generally limited size decision metadata maintain 

metadata distribution section heuristically replicate metadata peers downloading file 
sharing metadata multiple peers variety queries matched file increases 
client decide limited set metadata maintain 

metadata section utilize ir techniques rank results disambiguating improving likelihood correct download 
processes metadata collection distribution improve search capabilities pirs 
ostensibly independently improve search diminished benefits 
example ir ranking functions incorporated gnutella pirs metadata distribution techniques 
design pirs simple incorporate existing protocols 
consequence functionality concentrated client behavior independence networking infrastructure 
existing protocols focus aspects query routing independent pirs functionality 
consequently pirs built top today popular file sharing applications gnutella fasttrack 
discuss detail section 
pirs versus ir systems major difference pirs ir systems pirs treats metadata dynamic resource managed collectively peers 
effective management metadata improves query result quality 
inspiration stems notion client perspective network repository files described collectively body metadata 
better file body metadata describes file easier file find 
current ir systems perspective 
treat download individual transaction regard download affects file body metadata 
download file generally results replication file metadata particular server 
downloading client additional server file marginal benefit clients serves exactly original server serves 
additional server role network largely redundant 
metadata collection metadata collection process file annotated identifying terms 
describe metadata collection typically done commercial systems 
describe unit metadata pirs exploits performance 
metadata terms directly query matching 
important build pirs effective means annotating files 
means includes creating easy user interface encourages users add metadata 
means include automatic annotation metadata foraging intrinsic file characteristics 
versions file sharing systems offer templates help user annotate certain types files audio files special applicationspecific fields 
templates structure metadata potentially increasing query matching possibilities 
metadata automatically internet sources 
example wav files commercial compact disks software automatically collects id metadata title artist web sites org 
metadata intrinsic file 
metadata include size file filename time accessed 
making metadata available querying requires simple programming 
systems automatically derive useful metadata intrinsic characteristics file 
bittorrent example generates unique hash key sha hash file simplify search means validating file contents 
hash key group files returned queries 
pirs uses file hash key validating grouping files 
hash key universally adopted 
limewire gnutella groups filename file type file size 
edonkey hash keys authenticate files 
problem requiring files annotated hash key computational cost 
problem acknowledged claims computing keys background process takes cpu cycles 
hash keys computed file downloaded extracted compressed 
piggybacking processes amortizes cost computing hash key 
maintaining hash key files hurt pirs compatibility existing file sharing systems 
treated generic unit metadata peer realize significance 
metadata distribution metadata distribution process peers exchange metadata order describe file 
process peer just little better collectively describe shared data 
process complements metadata collection building effective body metadata shared file 
metadata distribution crucial reasons 
metadata distributed multiple nodes system may vulnerable 
metadata concentrated single node napster system unusable node unreachable 
vulnerability violates basic principle systems 
second data distributed properly leave correlations term occurrences limit degree query matching 
example assume metadata systems song files extracts album name denoted song track number extracts album label year 
files annotated query return results due matching criterion 
pirs distributes metadata way avoids problem 
query groups metadata unique file results 
user selects file metadata heuristically replicated file group client 
grouping unique files straightforward result assumed contain file hash key 
heuristics consider metadata replication include server terms server client selects metadata exist single server downloads 
solution commonly today file sharing systems 
notable simplicity 
frequent terms group client selects terms occur frequently group 
justification approach stems assumption terms appear strongly associated file occur queries 
frequent terms client selects terms occur frequently group 
usefulness approach terms help distinguish file 
balances term distribution 
random terms rand client randomly selects terms group maximizing number term combinations 
random terms freq client randomly selects terms group weighting frequently occurring terms proportionately higher 
rand technique increases number term combinations gives preference commonly occurring terms 
techniques rand client selects metadata terms reaches system defined limit 
metadata distribution techniques improvement current technique replicating metadata single server 
increase variety sizes metadata sets improve ability accurately describe file 
effects states bodies metadata vary goal pirs project examine effects query results quality 
metadata ir style ranking systems difficult due certain characteristics systems 
example queries short peers unreliable 
pirs acts testbed traditional specific ranking functions 
specifically pirs determine dependence ranking functions metadata distribution techniques 
consider ranking functions 
techniques classical ir techniques unique file sharing group size gsize number results group 
large gs indicates particular file large support satisfying query file generally popular desirable anyway 
term frequency tf counting number times query terms appear file metadata 
terms occur frequently metadata sets represent contents file 
precision prec dividing tf total number terms group 
precision adjusts problems tf caused large metadata sets 
cosine similarity cos cosine similarity maps group descriptors query vectors 
ranks highest groups descriptor vectors highest cosine similarity query vector 
implemented ranking functions term frequency inverse document frequency tf idf 
tf idf requires modification global information number documents term appears required tf idf exist systems 
approximate document frequency number query results term appears 
tf idf variation vector space model ranking cos representative performance different discuss 
implementation issues due distributed nature system query results arrive clients asynchronously period time 
client able display results update rankings real time 
pirs groups results log time hash key 
updates rankings results time depending ranking function 
complexity current upper bound log km complexity grouping limewire gnutella grouping similarity metrics 
details implementation grouping ranking pirs posted authors web sites 
experimental results demonstrate effect metadata distribution ranking query result quality simulation 
measure performance number successful queries lead download desired data object clients perform 
consider traditional ir metrics precision recall 
precision measures percentage correct results query irrelevant model user requests specific data object replica desired data object satisfy 
reason recall percentage possible results returned irrelevant model 
simulator design simulator observations analyses file sharing systems 
event relevant design parameters unavailable borrow done web information systems ir 
major objects simulator terms data objects peers queries 
universal set terms describe data object finite term assigned relative access probability accepted zipf distribution 
random number terms assigned data object fi universal term subset ti initial zipf distribution 
terms data object universal term subset reassigned probabilities zipf distribution diversify term usage described 
example term rarely associated data object need 
call set probabilities terms associated data object data object natural term distribution 
generally unrealistic assumption terms independent 
example occurrence britney descriptor independent occurrence spears 
incorrect general common practice simplifies simulation environment making trivial 
note term independence assumption unique 
assumption heavily relied probabilistic information retrieval model ir 
data object associated access probability zipf distribution 
conforms access patterns observed web objects described 
observations data object frequency system suggest high access skew 
initially random number copies data object instantiated subset universal term subset descriptor 
copies assigned random clients 
fixed number peers fixed number data objects system 
iteration simulation random peer chosen download random data object data object access probability distribution 
peer generates query random length containing subset data object universal term subset 
assume length distributions follow web search engines empirical distribution described 
personal observations queries limewire query monitor window corroborate assumption 
term query randomly chosen data object natural term distribution 
query routed random subset servers 
send query servers practice subset reachable time 
servers return results fulfill matching criterion section client 
client behavior group forms response query client ranks groups 
highest ranked group selected download 
general user may equally select highest ranked groups equal generally assume select highest ranked 
say query successful desired data object ranked downloaded 
unsuccessful query incorrect group ranked downloaded results 
data object downloaded user probability manually annotating data object personally chosen terms 
terms randomly chosen data object universal term subset natural term distribution 
way variety terms exists system data object increase exists initialization 
user downloads incorrect data object may mis annotate step leading incorrect metadata data object 
done client heuristically copies chosen group metadata replica descriptor constraint limited number terms may copied 
data object available peers find subsequent iterations simulation 
model malicious users 
users download upload data objects 
contribute metadata system affect results 
malicious users may contribute misleading metadata data objects system 
users may affect rankings marginally 
rankings aggregate metadata group users metadata individual 
parameter value range number peers number data objects number terms universal set number terms universal set data object maximum descriptor size data object peer terms number terms initial descriptors number replicas data object initialization probability peer reachable probability client adding metadata number terms added client query length dist number queries number trials table 
parameters simulation 
parameters experiments shown table 
size simulation scaled reveal results quickly 
significant scale simulation relative values parameter total number possible terms data object versus number terms data object initially annotated 
numbers observations studies personal observations 
example song data objects appear gnutella networks typically types information associated id data artist song name album name track number reflected number terms initial descriptors parameter 
performed trials set parameters report average results 
confidence intervals generally reported mean results statistically significant 
simplify presentation main results 
successful queries server rand metadata dist technique arrival tf prec gsize cos average fig 

number successful queries vs metadata distribution technique multiple ranking functions 
results various combinations metadata distribution ranking see gsize best ranking function regardless metadata distribution technique 
somewhat surprising considering simplicity 
gsize works relatively correct data object contain query terms satisfy matching criterion 
data objects descriptors may near misses 
cos distant second best 
poorly matching criterion return unbiased sample results results contain query terms 
discriminate relevant irrelevant 
prec tf subject problems traditional ir highly influenced large metadata sets noise 
see metadata distribution techniques randomize metadata rand best average 
furthermore combination rand gsize best 
ranking function combination outperforms gsize 
reason better case better increasing total number terms body metadata data object 
replicates common terms introducing skew 
descriptor space occupied repetitions common terms 
general replicates terms occur frequently 
effect replicating term long run 
larger body metadata sense descriptive resulting relevant results query 
gsize best performing ranking function cos 
expected cos requires term frequencies skewed order correctly 
comparison worse cos results uniform distributions terms bodies metadata 
server poorly fail mix metadata distribution 
server simply replicates single server descriptor 
replicates terms frequently replicated 
little increase variety descriptors describe data object 
discussion compatibility existing technologies feature pirs compatible gnutella 
pirs peer interacts message passing 
messages standard gnutella format special messages required 
furthermore special architectures required pirs 
pirs simply allows peers create respond queries way transparent standard gnutella peers 
pirs peer readily integrate established file sharing system 
similar vein pirs take advantage optimizations designed gnutella systems 
routing optimizations shortcuts ultrapeers available 
search optimizations specially designated index nodes possible 
case special index nodes improve quality search results obviate need metadata distribution client side ranking results 
outlook peer peer information retrieval file sharing system vendors actively pursuing new markets 
kazaa example adapted networks content distribution media companies online dating voice ip telephony 
new applications surely bring new users area 
industry trends indicate information retrieval strategic technology near 
google currently working desktop search tool helps users find information stored desktops 
microsoft strategy signals new focus harnessing information stored desktops 
file sharing consistently active internet activity years 
condition shows sign weakening despite legal actions recording industries 
user base variety applications grows pirs search tools gain significance 
file sharing popular activity internet users shows little signs slowing 
volumes data grow need ir sort results 
pirs ir system solution 
compatible current file sharing systems powerful 
pirs flexible systems 
ir allows unpredictable user behavior assumptions underlying network 
dynamic system escapes problems exist centralized systems web search engines data available quicker 
pirs unique allows users tune ways client distributes metadata 
treats metadata exist instances data object system collective description data object 
improved query results improve quality 
pirs includes various ranking functions 
simulation results show effectiveness ranking somewhat depends metadata distribution correct combination improve performance 
currently considering relationship matching criterion ranking functions 
current matching criterion conjunctive queries 
bandwidth consumption may reduce quality queries results 
considering effect alternatives disjunction 
focus server side responses queries 

milojicic lukose pruyne richard peer peer computing 
technical report hpl hewlett packard laboratories palo alto 
online search engines help lift cover privacy 
washington post feb 

yahoo charge guaranteeing spot index 
new york times mar 

cohen bittorrent home page 
web document org bittorrent 

watts strogatz collective dynamics small world networks 
nature 
tang xu dwarkadas peer peer information retrieval selforganizing semantic overlay networks 
proc 
acm sigcomm 

ratnasamy francis handley karp shenker scalable network 
proc 
acm sigcomm 

limewire llc gnutella protocol 
web document www limewire com developer gnutella protocol pdf 

lu callan content retrieval hybrid peer peer networks 
proc 
acm conf 
information knowledge mgt 
cikm 

nejdl wolf qu decker sintek naeve nilsson risch edutella networking infrastructure rdf 
proc 
world wide web conf 

ng ooi tan zhou peerdb system distributed data sharing 
proc 
ieee intl 
conf 
data eng 
icde 

google simplicity enterprise search 
technical report google 

ritter gnutella scale 
really 
web document www com jpr doc gnutella html 

ultrapeers step gnutella scalability 
technical report limewire llc sourceforge net src ultrapeers html 

meta information searches gnutella network 
web document www com kb articles searches htm 

nilsson id web site 
web document www id org 

standards technology sha version 
web document www itl nist gov fip htm 

search result grouping gnutella 
technical report limewire www limewire org project www result grouping htm 

free peers technical faq 
web document www com help htm 

grossman frieder information retrieval algorithms heuristics 
number isbn 
kluwer academic publishers 
knuth art computer programming 
second edn 
volume sorting searching 
addison wesley publishing 
schlosser kamvar simulating file sharing network 
proc 
wkshp 
semantics peer peer grid comp 

crovella bestavros self similarity world wide web traffic evidence possible causes 
ieee acm trans 
networking 
saroiu gummadi gribble measurement study peer peer file sharing systems 
proc 
multimedia computing networking mmcn 

reynolds vahdat efficient peer peer keyword searching 
proc 
acm conf 


ripeanu foster mapping gnutella network properties large scale peer peer systems implications system design 
intl 
wkshp 
sys 
iptps 
number lncs 
sripanidkulchai maggs zhang efficient content location locality peer peer systems 
proc 
ieee infocom 

cbc 
cbc radio canada www cbc ca disclosure archives swap html 

google moves clash microsoft 
new york times may 

microsoft development center 
web document msdn microsoft com 

oops 
re swapping 
cnet news 
