note single alternating cycle neighborhoods tsp tore gr stefan lehr und operations research und management technische hochschule rwth aachen germany mail tore rwth aachen de investigates different local search approaches tsp 
approaches general concept single alternating cycle neighborhoods 
approach stems famous heuristic suggested lin kernighan second notion cycles developed glover early nineties 
show corresponding neighborhoods identical subset moves lin kernighan gain criterion applied 
traveling salesman problem tsp widely studied problem combinatorial optimization see lawler 
objective find cost minimal hamiltonian cycle cycle graph contains node exactly 
large instances problem solved optimality see applegate heuristics metaheuristics needed results computed short time limits 
note focus symmetric version problem stsp defined cost matrix cij cij 
successful widely applied methods solving large scale tsps near optimality variations lin kernighan lk algorithm lin kernighan applegate johnson mcgeoch johnson mcgeoch 
years ago similar different approach suggested glover glover glover 
computational experiments see rego glover indicate methods called ejection chains ecs potential outperforming lin kernighan approaches implemented properly 
variants lk ecs variations general concept local search performed alternating cycle sense 
algorithms subsequently add drop edges share endpoint number iterations tour transformed tour 
deleted added edges form alternating cycle 
lin kernighan heuristic starts process deleting edge stem cycle methods suggested glover start adding edge 
methods generate alternating cycles come neighbor solutions reached methods fact equivalent 
show case 
start section defining concepts local search opt moves alternating cycles sequential search context stsp 
section introduces notion cyclic independence show related concept sequential search introduced lin kernighan 
notation classify different types opt moves section 
section discuss single alternating cycle neighborhoods general show different neighborhoods related general class opt neighborhoods 
section give outline promising paths research 
local search opt alternating cycles stsp stated combinatorial optimization problem form minx set feasible solutions hamiltonian cycles cost function 
clearly set general big searched entirely 
heuristics lk ec local search ls concept 
heart local search procedure definition neighborhood mapping element called neighbor neighbors cost called improving neighbors 
ls starts initial feasible solution iteratively replaces current solution improving neighbor long improving neighbor exists 
ls procedure terminates local optimum solution contains improving solution 
neighborhoods tsp usually defined implicitly set moves 
move transforms solution solution 
variations general approach exist book aarts lenstra 
precise definition term move helpful consider enclosing superset solutions idea solution moves transform feasible solution object structure similar identical tour 
general denote set moves move map discussion clear move necessarily map feasible solutions feasible solutions 
extended neighborhood contains neighbors feasible infeasible 
clearly neighborhood move called feasible move opt move deletes edges 
dk tour adds edges 
ak way result hamiltonian cycle symmetric difference edges taken current tour new tour spans subgraph 
dk 
ak decomposes alternating cycles 
note alternating cycles completely determine move 
dk 
ak connected moves neighborhood called single alternating cycle opt moves sac opt neighborhoods 
order analyze different moves decompose smaller parts called partial moves 
context note types partial move considered ij adds edge current structure kl deletes edge current structure 
decomposition pl 
move partial moves 
pl means transformed second transformed 
course consider structures occur having applied partial moves 
general ith partial move transforms elements intermediate structure yi elements intermediate structure yi structure yl holds 
result decomposes 
pl yl pl yl interesting cases study 
sets yi identical refer yi structures 
case possible vary number intermediate partial moves results chains intermediate partial moves variable length 
lk ecs constructed way 
cyclic independence sequential search move decomposition move partial moves advantageous study order application partial moves influences resulting move 
case yi decomposition pl 
cyclic independent 
holds solutions cyclic permutations 

cyclic independent neighborhoods closely linked concept sequential search developed lin kernighan 
basic idea approach consider relevant partial moves cyclic independent neighborhood recursively 
sequential search elements selected order specified current tour neighbor lists 
neighbor lists sorted order increasing cost edges 
sequential search particularly attractive number elements selection step length neighbor list reduced small constant 
order search neighborhood exactly sequential search cyclic independent heuristically non cyclic independent neighborhood discussed lin kernighan heuristic 
attractiveness sequential search cyclic neighborhoods due theorem lin kernighan lin kernighan theorem sequence numbers gi positive sum gi cyclic permutation numbers partial sum positive proof largest index gi minimum 
choose gq 
gp 
gp 
gq 
gq 
gn 
gp gq 
gn 
gq 
denote pi partial gain partial move pi obviously ij cij kl ckl 
theorem implies finding improving move pk 
neighborhood decomposes cyclic independent partial moves need consider moves gi pi 
direct implication stage search need consider moves gain pi gi 
total gain stage limits choice partial move stage refer rule gain criterion 
gain criterion fundamental effectiveness lin kernighan algorithm 
see structure lin kernighan neighborhood cyclic independent 
theorem apply 
heuristically excellent results 
kept mind considering exploitation gain criterion search algorithm 
gain criterion exploited effective algorithms opt tsp see bentley johnson mcgeoch 
order describe generic sequential search algorithm consider decomposition pk 
move partial moves 
cyclic independence neighborhood implies sequence pj 
pk 
pj represents move gain criterion applicable search algorithm guarantee cyclic permutation moves generated 
algorithm generate partial moves 
pk search level 
partial moves satisfy gain criterion discarded immediately 
second level composed partial moves 
pk pk pk extend non discarded partial moves level generated 
move compositions second level satisfy gain criterion discarded 
true third level levels investigated 
abc notation opt move types section introduces notation different types opt moves 
useful distinguishing moves contained lk ec sac neighborhoods 
opt moves described result applying operations 
segmentation 
operation removes edges tour resulting segments 
sk 

inversion 
operation inverts subset segments 
permutation 
operation changes order segments 
cyclic permutation 

concatenation 
operator concatenates segments result applying operators new tour set moves operators inversion permutation identical define move type edge exchange type 
inserted edges differ deleted edges move called proper move 
order give clear description different edge exchange types introduce 
notation uses letters alphabet ith letter corresponds ith segment tour 
letter uppercase corresponding segment reversed 
example code corresponds moves second fourth segments reversed third fourth segments change position 
want abc notation unambiguous notation depend numbering segments tour 
assume segment fixed position reversed appropriate definition stating segment includes node index 
result cyclic permutation uniquely written abc notation 
single alternating cycle neighborhoods section focus neighborhood corresponding moves added deleted edges form single alternating cycle 
moves property decomposing naturally cyclic independent partial moves 
noted assumption added deleted edges pairwise disjoint contains moves exchange exactly edges edges 
subset neighborhood defined proper opt moves 
section analyze relationship restricted neighborhoods lk ec tsp literature 
going details discuss opt moves multiple alternating cycles 
single multiple alternating cycles opt moves sac opt moves opt sac opt moves smallest multiple alternating cycle examples double bridge move type twisted double bridge moves types see 
moves produce double bridge move type twisted double bridge move type generation double bridge move sac opt move alternating cycles added deleted edges 
twisted double bridge move contained sac opt neighborhood 
important mention double bridge move included sac opt allows inverse edge added deleted 
shows construction double bridge move sac opt move 
generally possible connect alternating cycles edges added deleted 
alternating cycle consist added deleted edges maximum number max alternating cycles max 
instance alternating cycles maximum moves sac opt 
alternating cycles maximum 
opt moves constructed sac opt 
note decomposition multiple alternating cycle moves deleting previously added edge requires add non tour edge remove 
operations interchanged 
holds adding deleted edge edge part tour 
decomposition single alternating cycle moves extend notation added deleted edges case single alternating cycle moves label incident nodes 
tracing alternating cycle shows exist necessarily different nodes 
ik 
jk deleted edges written dp ip jp added edges written ap jp ip 
setting ik 
move determined nodes 
ik 
jk alternating cycle 
representation gets natural decomposition move alternating sequence delete edge add edge partial moves del ij ji notation introducing intermediate structures explained cyclic edge exchange move written add add add 
process started edge addition alternatively del add del add del 
add 
ik add jk 
process started edge deletion 
application gain criterion assume consecutive partial moves decompositions joined single partial move gain criterion applied 
obtain partial moves th partial move decomposition del th partial move decomposition add interesting consider intermediate structures result decomposition 
discuss detail show wellknown lin kernighan edge exchange neighborhood lin kernighan neighborhoods rely stem cycle structure introduced glover glover subsets 
furthermore analyze relationship neighborhoods 
structure contain tours 
general deleting edge cycle adding incident edge creates stem cycle structure 
stem cycle sc special graph structure consists set cycle nodes lie cycle subtour routing graph see fig 

cycle contains exactly stem cycle structure root tip node root degree forms path called stem 
endpoint stem tip nodes adjacent root cycle stem degenerates tip root coincide obtains cycle 
set stem cycle structures superset set hamiltonian cycles 
start analysis decomposition 
consider sc 
adding edge tip sc subsequently deleting incident edge creates sc sc node disjoint cycle 
different structures result operation depicted fig 

structure consists unions single sc sc possibly cycles 
cq node routing graph belongs possible cases resulting rules glover glover fourth possibility transforms cycle stem multicycle sc exactly cycles 
elements called stem 
element structure depicted fig 
exactly stem multicycle structure describes intermediate structure decomposition incident edges subsequently added deleted 
contrast decomposition deletes edge root sc 
deletion edge transforms sc single path 
general structures consist single path possibly set node disjoint cycles 
cq 
call set path 
adding edge endpoint path node path creates sc 
hand adding edge endpoint node belongs cycles cq aggregates path cycle cq sc 
result union sc cycles 
cq 
summing cases addition edge starting endpoint path path multicycle gives stem multicycle 
important special case addition arc connects endpoints path transformation path single cycle 
partial move type 
chain arguments sufficiently explains correctness decomposition 
argument holds inverse case decomposition subsequent add delete partial moves transform 
follows fact add delete combination inverse delete add combination 
advantage symmetry argument avoid analyzing intermediate structures simple representation 
lin kernighan neighborhood lin kernighan neighborhood lk restricted sac opt neighborhood moves lk variable length move starts deletion edge 
lk restricts steps decomposition case deletion edge generated structure hamiltonian path yp path multicycle 
intermediate objects result addition edge simple stem cycles 
consequently lk move decomposes lk del yp add del add del 
del yp add 
furthermore deleted edges 
added edges 
disjoint 
point view decomposition kernel famous lin kernighan neighborhood suggested lin kernighan 
variability relies fact add step add edge jp transforms current path tour closing partial move may add short edge jp ip ip continues alternating delete add process 
second alternative allows finding generating edge exchanges variable length 
lin kernighan authors allow second deletion edge create hamiltonian path path single cycle 
symbol denotes set path cycle structures contains hamiltonian paths union path cycle cover nodes routing graph 
clearly yp holds 
slightly changes lk neighborhood larger neighborhood lk 
motivation modification lin kernighan lk contains opt moves lk 
specifically opt move type acb suggested creates path cycle second deletion step third steps create hamiltonian paths respectively 
original tour resulting configuration opt move delete add steps 
left hand side shows decomposition path multicycle structure starts delete step 
right hand side shows sc decomposition stem cycle structure starts add step 
shown fig 
depicts original tour add delete steps decomposition 
opt move acb completely symmetric 
occurrence path cycle independent choice node search process started 
looking moves acb opt move occurrence path depends initial choice node ip 
easy verify cases intermediate path cycle structure generated 
consequence lk neighborhood cyclic independent 
interesting argument cyclic neighborhood motivation gain criterion lin kernighan 
edge ejection chains stem cycle inverse strategy adding edge subsequently deleting incident edge closely related chains stem cycle structure glover glover 
assume decomposition restricted case sc add add add 
add 
structure stem cycle sc stem multicycle 
exactly corresponds transformation sc tip root rules add edge belongs cycle 
identify deleted edge edges cycle incident 
add edge belongs stem 
identify deleted edge requiring lie portion stem rules node new tip new sc root node remains fixed 
possible cases resulting rules depicted leftmost cases 
glover shows ejection chains form transform tour tour deleting added edge allowed 
chain started arbitrarily chosen node added edge deleted deleted edge added additions deletions sufficient contains edges contained chain chosen way consecutive partial moves deleting previously added edges occur glover thm 

original decomposition general stem multicycle structure corresponds rule set rules coincide rule rules allow creation additional cycle merger sc cycle single sc 
rules sufficient transform tour tour add delete steps cardinality symmetric difference glover thm 

remaining part subsection require decomposition move msc contain disjoint added deleted edges 
sc proper superset lk lin kernighan move replaced sc move msc number partial moves exist sc moves equivalent lk move 
order see consider arbitrarily chosen lk move replaced yp 
move constructed move starting second partial move partial move requirement lk generate single path deletion partial move corresponds requirement sc generate stem multicycle 
shown fig 
opt move type acb contained sc making sc proper superset lk 
moves contained sc 
sac opt move type reverses ordering segments inverting segment sc 
types moves sac opt move question decomposition generates stem multicycle depends node edge chosen starting ejection chain 
proof simple results straightforward 
note investigated important class neighborhoods relevant local search context tsp 
shown lk sc opt 
fig 
contains examples minimum number added deleted edges moves contained neighborhoods corresponding smaller ones 
shown concept cyclic independence core sac opt opt acb sac opt sac opt acb sc lk opt double bridge twisted double bridge relationship different subsets opt neighborhood 
cyclic independent sequential search algorithm method lin kernighan 
interestingly move decomposition lin kernighan cyclic independent application gain criterion heuristic exact search algorithm scanning entire neighborhood 
holds case sc 
cases application sequential search heuristic exact technique 
noted glover glover thm 
extends ideas stem multicycle structure case opt moves multiple alternating cycles asymmetric case 
addition defines subpath ejection chains double rooted structures bicycle 
remains open question algorithms stem cycle outperform lin kernighan practice 
theoretically possible lin kernighan neighborhood strictly contained stem cycle neighborhood 
success approach depend potentials finding efficient data structures allow partial moves stem cycle performed efficiently see fredman lin kernighan algorithm 
finding data structures interesting open research problem 
aarts lenstra 

local search combinatorial optimization 
wiley chichester 
applegate bixby cook 

implementing johnson algorithm large traveling salesman problems 
mathematical programming series 
applegate cook 

chained lin kernighan large traveling salesman problems 
informs journal computing 
bentley 

fast algorithms geometric traveling salesman problems 
operations research society america 
fredman johnson mcgeoch 

data structures traveling salesman 
journal algorithms 
glover 

multilevel tabu search embedded search neighborhoods salesman problem 
technical report west chair systems science university colorado boulder school business campus box boulder 
glover 

ejection chains structures alternating path methods traveling salesman problems 
technical report west chair systems science university colorado boulder school business campus box boulder 
glover 

new ejection chain alternating path methods traveling salesman problems 
zenios editors computer science operations research new developments interfaces pages 
pergamon press 
editors 
traveling salesman problem variations volume combinatorial optimization 
kluwer dordrecht 
johnson mcgeoch 

traveling salesman problem case study local optimization 
aarts lenstra editors local search combinatorial optimization chapter pages 
wiley chichester 
johnson mcgeoch 

experimental analysis heuristics stsp 
editors traveling salesman problem variations volume combinatorial optimization 
kluwer dordrecht 
lawler lenstra rinnooy kan shmoys editors 
traveling salesman problem 
guided tour combinatorial optimization 
wiley interscience series discrete mathematics 
wiley chichester 
lin kernighan 

effective heuristic algorithm traveling salesman problem 
operations research 


traveling salesman type problems relation logistics regional blood banking 
phd thesis department industrial engineering management sciences 
northwestern university evanston il 
rego glover 

local search metaheuristics 
editors traveling salesman problem variations volume combinatorial optimization chapter pages 
kluwer dordrecht 

