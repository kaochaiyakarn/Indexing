derivatives regular expressions janusz brzozowski princeton university new 
kleene regular expressions describing sequential circuits defined operators union concatenation iterate sets sequences 
word descriptions problems easily put regular expression language language enriched inclusion logical operations 
il problem converting regular expression description state diagram exist ing methods handle expressions additional operators quite complicated presence operators 
notion derivative regular expression introduced properties derivatives discussed 
leads natural way construction state diagram regular expression containing number logical operators 

design sequential circuits step consists obtaining unambiguous description circuit behavior 
certain class problems language regular expressions greatly simplifies step synthesis 
general richer language easier write problem specification 
regular expressions number logical connectives describe methods obtaining state diagrams regular expressions 
concerned usual model finite automaton 
binary inputs represented single valued input values 

internal states ql qx starting state transitions states specified flow table state diagram 
moore model outputs associated internal states denoted 
iu model outputs asso ciated transitions 
results terms moore machine results apply mealy machines slight modifications pointed necessary 

regular expressions define operations sets sequences sets sequences symbols ak research supported part bell telephone laboratories murray hill majority results 
rep princeton uni versity dept elec 
eng digital systems lab princeton march 
address department electrical engineering university ottawa ottawa canada 
journal association computing machinery vol october pp 
janusz brzozowski product concatenation 
pq 
dot omitted convenience 
operation associative omit parentheses 
iterate star operation 
pp ete set consisting sequence zero length property rx xr boolean function 
shall denote function 
empty set denoted set complement respect intersection sum union modulo sum exclusive course laws boolean algebra apply 
operators product star called reg operators 
economy notation symbol set sequences consisting sequence de 
regular expression defined follows 
symbols 
tc regular expressions 

regular expressions pq boolean function arid 
regular expression follows finite number rules 
definition modification definition yamada suitable purposes 
tile arbitrary boolean functions enriches language regular expressions 
example suppose desire represent set sequences having bu consisting 
desired expression easily seen 
derivatives regular expressions ll 
define operation set sequences yielding new set se quences called derivative definition 
set sequences finite sequence deriva tive respect denoted st ri 
notion derivative set different names introduced pre applied regular expressions 
finding derivatives regular expressions 
shall need know regular expression contains purpose definition 
definition 
set sequences define ifx ax 
definition pq 
derivatives regular expressions easy determine 
example function boolean expression obtained rules connectives form complete set connectives 

regular expression derivative respect sequence unit length ak 
recurs follows pq 
proof appendix theorem 
derivative regular expression respect finite sequence input symbols ala 
recurs ely da da da lr completeness proof follows definition 
properties derivatives shown derivatives regular expression leads state diagram sequential circuit characterized natural way 
investigate properties derivatives 

derivative expression respect sequence regular expression 
pi 
clear theorem regular regular length greater regular sequence length 
construction theorem shows regular finite regular operations required find tile derivative 
theorem 
sequence contained regular expression contained janusz brzozowski proof 
sx definition 
conversely ff sx definition 
theorem reduces problem testing sequence ed regular expression problem testing contained problem solved dsr 
regular expressions equal necessarily iden ical form said type 

regular expression finite number types derivatives 
derivative type derivatives respect sequences exceeding 

proof part theorem part theorem indicates method finding different types derivatives called characteristic derivatives sequences symbols ak arranged order increasing length example 
derivatives order dor dtr 
sequences length new types derivatives process terminates 
new derivatives equal type derivative dtr consider dtr dt ta 
derivative respect sequence sa length equal derivative respect sequence ta length ta 
new types derivatives new types new type derivative process terminates 
discussion assumed possible decide derivatives type 
easy problem resolved shown section 
theorem 
regular expression written form ad ak terms sum disjoint 
proof 
may may contain taken care 
contains sequence letter ak input alphabet 
view definition derivative set ad exactly set sequences terms sum ob disjoint sequences term letter different term 
follows theorem regular expression represented infinite sum sd number types derivatives course finite series redundant set sequences ab contained set 
expansion useful shown 
derivatives regular expr 
relationship dr characteristic derivatives oj represented unique set dr equations form dj ad characteristic derivative characteristic derivative equal equations called characteristic equations 
theorem follows directly theorems 
theorem 
equation form ax solution unique equality regular expressions 
theorem modification theorem arden wire shown xa solution ba 
proof theorem parallels arden theorem 
theorem 
set characteristic equations solved uniquely equality 
proof 
proof follows theorem 
characteristic deriv 
tive terms previous derivatives 
note coefficient equation derivative symbols input alphabet 
cases theorem applies 
solution derivative substituted dr equa tions reducing number equations 
process repeated set equations solved regular expression reconstructed tic equations may different form depending order elimination derivatives equation 

state diagram construction definition 
sequence accepted automaton starting state iff applied iu qx output rejected sequence accepted state iff started output states qj qk indistinguishable iff sequence applied started qs produces output sequence produced apply ing started qk theorem 
states qk indistinguishable iff rj rk denoting sets sequences accepted qj qk equal 
proof 
theorem proved lee general form 
qi qk indistinguishable started qj started qk pro duce identical output sequences input sequence 
particular sets sequences identical ri 
suppose ri qk distinguishable 
exist producing different output sequences 
consider position output sequences differ clearly initial portion including position accepted ease rejected contradicting 

janusz clear sequence takes accepts qx qj regular expression rj simply derivative respect take takes qx state associate unique derivative respect theorem restated follows 
theorem 
qi automaton ill characterized regular expression iff derivatives equal jr kr sj sk sequences fl om state qx qk respectively 
arguments preceding sections established close relationship derivatives regular expression states corresponding finite automaton 
results sum follows 
obtain regular expression state diagram flow table write set characteristic equations solve equation state 
transition input takes graph qk equation rj contains term ark term 
output qj 
methods obtaining regular expressions otto closely related derivative approach 

obtain minimal state diagram regular expression find derivatives associate internal state tic derivative 
output associated state corresponding characteristic derivative contains procedure illustrated example 
letr dx introduce qx return qx input di introduce output transition qx ql input 
need considered correspond new characteristic derivative returns state graph qx continuing find da go qx dh 
completes process 
resulting state diagram shown 
fig 

state graphs moore model mealy mode minor modification method mealy state diagram constructed regular expression 
process case identical hat derivatives compared presence derivative derivatives regular expressions ignored 
words correspond state 
consequence defini tion derivative tells contained ac automaton corresponding mealy model means transition caused symbol sequence output 
state reached application presence tells se quences accepted state ignored 
mealy diagram fewer number states general 
construction mealy diagram illustrated example 
expression dx introduce qx return qx return qx 
terminates new states sequences length 
diagram shown consists state corresponding moore model states 
characteristic equations obtained mealy mode way similar moore transition caused input state qj state output equation rj contains fie 

state graph analyzed term rk term just ark example state diagram obtain equations rx rx rx 
solving equations obtain rx rx 
rx 
discussion assumed possible recognize equality regular expressions 
ease state diagram constructed internal state type derivative ways quite difficult determine regular expressions equal 
show difficulty overcome state graph constructed necessarily wi mini mum number states 
pointed existing methods difficulties limited regular expressions 

definition 
regular expressions similar transformed janusz brzozowski identities 
regular expressions dissimilar iff similar 
clear similarity implies equality equality general imply 
similarity easily recognized weaker equality 
eot em 
regular expression finite number dissimilar derivatives 
proof 
proof appendix ii 
consequence result state diagram similarity derivatives recognized 
method serious disadvantage general diagram constructed far minimal arises frequent appearance derivatives 
example consider derivative dr dr dd 

case similarity forced conclude dissimilar 
expression easily simplified iden rx xr 
expression identities useful incorporated method 
conclude section complicated example 
desired output input sequence contains consecutive 
required regular expression ooi 
construction deriva tives proceeds follows introduce qx introduce dt return qx introduce go 
note may write derivatives regular expressions simpler form dm fig 

state diagram example doom concludes construction 
introduce qo return introduce return qo return qx return introduce return ou 
characteristic derivatives 
state diagram states shown 
determine find output associated 
case contain output examining state diagram seen states qx qo reduced state diagram contains states 
failed discover failed recognize equivalence 

regular expressions multiple output behavior multiple output sequential circuit represented specifying regular expression output 
output corresponding regular expression sequence results zi sequences contained result 
expression carries janusz information outputs consequently ri specified independently 
manner describe action sequential circuit puts ordered tuple regular expressions 
convenience refer tuples regular vectors rr tile components vector corresponding outputs time denoted 

binary variables 
definition 
tile derivative vector regular expressions respect sequence vector regular expressions denoted defined 

definition 
regular vectors components equal iff components equal regular expression finite number types derivatives follows regular vector finite number types derivatives 
consequently regular vector construct state diagram moore model associating derivative state ii 
derivatives arc constructed sequences increasing order single output case 
output zi iff 
note multiple output circuit behavior described set state diagrams regular expression 
interested constructing single state diagram produce correct tuple outputs 
result state diagram construction described summarized follows 

regular vector state diagram constructed associating type derivative state state diagram represents desired behavior minimal 
proof 
regular vector rt 
rr state diagram desired property zi result applying sequence iff 
construction proposed state diagram go starting state qx state associated equivalent previous deriva tire 
construction output associated state iff 
clear sequence produce de output vector 
prove minimality state diagram note distinct state distinct derivative 
derivatives fig 

state diagram ll derivatives regular expressions equal differ component say 
dtr correspond state output zj incorrect sequence vice versa 
necessary distinct state pet distinct derivative state diagram minimal 
construction mealy state diagram identical deriva tives vectors differing vector asso ciated single state 
example 

construct mealy state diagram output circuit 
dx ir ri ir dll state diagram shown 
introduce qx qo qx 
regular expressions obtained easily word description problems allowed logical connective formation expression 
introduced notion derivative regular ex pression powerful aid analyzing properties regular expressions wi arbitrary logical connectives 
derivative approach leads naturally state diagrams sequential circuits extended cover multiple output case 

author wishes professor princeton university comments suggestions 
appendix proof theorem 
proof follows relations finding derivative respect sequence unit length 
definition ri 
relations obvious 
theorem holds regular expressions involving regular operators 
consider 
sufficient prove relation complete set boolean connectives 
janusz brzozowski pq po rule 
lay clear rule extended number regular expressions 
number ri countably infinite 
note adar ad ai 
derivative respect sides 

rule holds union complementation consequently boolean function 
consider pq 
po 
slas po au vl av daq avl po av po po po pq pp ppp 


dap dap dap 
da included 
oar pn rule 
concludes proof theorem 
appendix ii 
proofs theorems theorem proved induction number regular operators 
basis 
theorem certainly true oneof ak derivatives regular expressions dxk andd 

dx 
step 
assume expression fewer operators finite number derivatives 
expression operators cases 
case 
pq 
easily verified tile definitions 

case dp 
boolean function expressed finite number sums complements follows number derivatives form finite 
case 
pq 
ala 
definitions section similarly sequence length general derivative respect sequence length form 






sum derivatives de types derivatives respectively dr de types derivatives 
note finding upper bounds show finiteness dr bounds necessarily achieved 
inductive step holds case 
case 

consider formation derivative 
op seen general sum terms form dt 
dp types derivatives av types deriv 
concludes inductive step 
prove theorem demonstrate process constructing derivatives terminate finite number steps similar ity regular expression recognized 
result implicit proof theorem shall explain detail 
result obvious basis step 
suppose forn case result holds 
takes possible values compare previously derivatives 
appear janusz finite number times structure fixed furthermore finite number derivatives process clearly terminate 
proceeding case pq write ii form 
argument case sine terms ill length associative law sum ii remove parentheses 
commutative law sum ill terms appear zt orders 
identity allows process 
note inequality ii depend length new derivative simplified compared previous derivatives 
argument applicable theorem holds 

ki representation events nerve nets finite automat auto studies ann math 
studies princeton press 

ei realization events logical nets 
acm apr 

ron 
ya ada regular expressions state graphs auto mats 
ire trans 
ec mar 

brzozowski survey regular expressions applications 
trans 
ec june 
mso 
rep princeton digital systems lab apr 

ant jn 
signal flow graph techniques sequential circuit state diagrams 
ieee trans 
ec apr 

ep 
princeton digital systems lab apr 

nd design sequential regular expressions acm oct 


li automata finite automat bell stem tech 
sept 

arden delayed logic finite state machines 
theory ing ms chine pp 

michigan press ann arbor 


finite automata events 




mn seo finite automata decision problems 
ibm reg 
develop 
apr 

moore experiments sequential machines 
ata ann 
math 
studies princeton press 

gm method synthesizing sequential circuits 
bell system 
tech 
sept 


hu synthesis sequential switching circuits 
fra 
mar apr 

nev functions 
acm apr 

ru 
operations finite automata 

second ann 
symp 
switching circuit theory logical design detroit mich oct 
ap ii bei 
