open information extraction web michele banko michael cafarella stephen soderland matt oren etzioni turing center department computer science engineering university washington box seattle wa usa banko etzioni cs washington edu traditionally information extraction focused satisfying precise narrow pre specified requests small homogeneous corpora extract location time seminars set announcements 
shifting new domain requires user name target relations manually create new extraction rules hand tag new training examples 
manual labor scales linearly number target relations 
introduces open new extraction paradigm system single data driven pass corpus extracts large set relational tuples requiring human input 
introduces textrunner fully implemented highly scalable system tuples assigned probability indexed support efficient extraction exploration user queries 
report experiments web page corpus compare textrunner knowitall state art web system 
textrunner achieves error reduction comparable set extractions 
furthermore amount time takes knowitall perform extraction handful pre specified relations textrunner extracts far broader set facts reflecting orders magnitude relations discovered fly 
report statistics textrunner highest probability tuples show contain concrete facts assertions 
motivation introduces open information extraction novel extraction paradigm facilitates domainindependent discovery relations extracted text readily scales diversity size web corpus 
sole input system corpus output set extracted relations 
system single pass corpus guaranteeing scalability size corpus 
information extraction traditionally relied extensive human involvement form hand crafted extraction rules hand tagged training examples 
user required explicitly pre specify relation interest 
increasingly automated time enumerating potential relations interest extraction system highly problematic corpora large varied web 
possible users issue diverse queries heterogeneous corpora systems move away architectures require relations specified prior query time favor aim discover possible relations text 
past small homogeneous corpora newswire stories seminar announcements 
result traditional systems able rely heavy linguistic technologies tuned domain interest dependency parsers named entity recognizers 
systems designed scale relative size corpus number relations extracted parameters fixed small 
problem extracting information web violates assumptions 
corpora massive heterogeneous relations interest unanticipated number large 
consider challenges detail 
automation step automating moving knowledge systems trainable systems took input hand tagged instances riloff document segments craven automatically learned domain specific extraction patterns 
dipre brin snowball agichtein gravano webbased question answering systems ravichandran hovy reduced manual labor needed text extraction requiring small set tagged seed instances hand crafted extraction patterns relation launch training process 
creation suitable training data required substantial expertise non trivial manual effort relation extracted relations specified advance 
corpus heterogeneity previous approaches relation extraction employed kernel methods mooney maximum entropy models graphical models rosario hearst occurrence statistics lin pantel ciaramita small domain specific corpora limited sets relations 
syntactic dependency parsers common thread unifies previous 
heavy linguistic technology runs problems applied heterogeneous text web 
parsers trained applied particular genre text financial news data penn treebank parsing errors confronted diversity web text 
number complexity entity types web means existing ner systems inapplicable downey 
efficiency knowitall etzioni state ofthe art web extraction system addresses automation challenge learning label training examples small set domain independent extraction patterns 
knowitall addresses corpus heterogeneity relying part speech tagger parser requiring ner 
knowitall requires large numbers search engine queries web page downloads 
result experiments knowitall take weeks complete 
knowitall takes relation names input 
extraction process run rerun time relation interest identified 
paradigm retains knowitall benefits eliminates inefficiencies 
reports textrunner scalable domain independent system 
textrunner fully implemented system extracts relational tuples text 
tuples assigned probability indexed support efficient extraction exploration user queries 
main contributions introduce open information extraction new extraction paradigm obviates relation specificity automatically discovering possible relations interest making single pass corpus 
introduce textrunner fully implemented system highlight key elements novel architecture 
compares textrunner experimentally state art web system know show textrunner achieves relative error reduction comparable number extractions 
report statistics textrunner highest probability extractions demonstrates scalability helps assess quality extractions suggests directions 
remainder organized follows 
section introduces textrunner focusing novel elements architecture 
section reports experimental results 
section considers related concludes discussion 
open textrunner section describes textrunner architecture focusing novel components considers textrunner addresses challenges outlined section 
textrunner sole input corpus output set extractions efficiently indexed support exploration user queries 
textrunner consists key modules 
self supervised learner small corpus sample input learner outputs classifier labels candidate extractions trustworthy 
learner requires hand tagged data 

single pass extractor extractor single pass entire corpus extract tuples possible relations 
extractor utilize parser 
extractor generates candidate tuples sentence sends candidate classifier retains ones labeled trustworthy 

redundancy assessor assessor assigns probability retained tuple probabilistic model redundancy text introduced downey 
describe module detail discuss textrunner ability efficiently process queries extraction set analyze system time complexity speed 
self supervised learner learner operates steps 
automatically labels training data positive negative 
second uses labeled data train naive bayes classifier extractor module 
deploying deep linguistic parser extract relationships objects practical web scale hypothesized parser help train extractor 
prior full scale relation extraction learner uses parser klein manning automatically identify label set trustworthy untrustworthy extractions 
extractions positive negative training examples naive bayes classifier 
learning algorithm helps system recover errors parser applied heterogeneous web text 
extractions take form tuple ei ri ej ei ej strings meant denote entities ri string meant denote relationship 
trainer parses sentences obtain dependency graph representations 
parsed sentence system finds base noun phrase constituents ei 
pair noun phrases ei ej system traverses parse structure connecting locate sequence words potential relation ri tuple learner labels positive example certain constraints learner labels training data refer self supervised 
base noun phrases contain nested noun phrases optional phrase modifiers prepositional phrases 
syntactic structure shared ei ej met 
constraints seek extract relationships correct parse tree contains local errors constraint fails labeled negative instance 
heuristics system uses exists dependency chain ei ej longer certain length 
path ei ej syntax tree cross sentence boundary relative clauses 
ei ej consist solely pronoun 
learner labeled set tuples form ei ri ej maps tuple feature vector representation 
features domain independent evaluated extraction time parser 
examples features include presence part speech tag sequences relation ri number tokens ri number stopwords ri object proper noun part speech tag left ei part speech tag right ej 
feature extraction learner uses set automatically labeled feature vectors input naive bayes classifier 
classifier output learner language specific contains relation specific lexical features 
domain independent manner 
prior learning approach authors invested weeks manually constructing extraction classifier 
attempt relation extraction took entire string entities detected interest 
surprisingly permissive approach captured excess extraneous incoherent information 
extreme strict approach simply looks verbs relation pair nouns resulted loss links importance specify noun attribute centric properties example oppenheimer professor theoretical physics trade schools similar colleges 
purely verb centric method prone extracting incomplete relationships example berkeley located bay area berkeley located bay area 
heuristic approaches attempted exposed difficulties involved anticipating form relation arguments general manner 
best final classifier natural baseline learned achieved mere third accuracy obtained learner 
single pass extractor extractor single pass corpus automatically tagging word sentence probable part speech 
tags entities identifying noun phrases lightweight noun phrase chunker 
relations examining text textrunner performs analysis maximum entropy models part speech tagging noun phrase chunking ratnaparkhi implemented toolkit 
part speech tags noun phrases modeled high accuracy domains languages brill florian 
relatively light nlp tech noun phrases heuristically eliminating non essential phrases prepositional phrases entity scientists universities studying analyzed scientists studying individual tokens adverbs definitely developed reduced developed 
noun phrase finds chunker provides probability word believed part entity 
probabilities subsequently discard tuples containing entities low levels confidence 
candidate tuple classifier 
classifier labels trustworthy extracted stored textrunner 
redundancy assessor extraction process textrunner creates normalized form relation omits non essential modifiers verbs nouns developed normalized form originally developed 
extraction performed entire corpus automatically merges tuples entities normalized relation identical counts number distinct sentences extraction 
extraction assessor uses counts assign probability tuple probabilistic model previously applied unsupervised knowitall system 
hand tagged data model efficiently estimates probability tuple ei ri ej correct instance relation ri ei ej extracted different sentences 
model shown estimate far accurate probabilities pointwise mutual information methods downey 
query processing textrunner capable responding queries millions tuples interactive speeds due inverted index distributed pool machines 
relation tuple extraction assigned single machine pool 
machine computes inverted index text locally stored tuples ensuring machine guaranteed store tuples containing relation assigned machine 
efficient indexing tuples textrunner means user application wants access subset tuples naming elements relevant subset retrieved manner seconds irrelevant extractions remain user 
relation names textrunner drawn directly form text intuitions implicitly formulating search query effective 
querying relational triples easier textrunner able know relations synonymous 
asking user guess right word problem shared search engines suggests manageable na users 
niques enables textrunner robust highly diverse corpus text web 
inverted index built lucene open source search engine 
textrunner relation centric index enables complex relational queries currently possible standard inverted index today search engines 
include relationship queries unnamed item queries multiple attribute queries described detail cafarella 
analysis tuple extraction textrunner happens time number documents corpus 
subsequently takes log time sort count assess set tuples system 
contrast time traditional system asked find instances new set relations may forced examine substantial fraction documents corpus making system run time 
large typically case web textrunner ability extract information relations having named explicitly input results significant scalability advantage previous systems including knowitall 
textrunner extracts facts average speed cpu seconds sentence 
compared dependency parsers take average seconds process single sentence textrunner runs times faster corpus 
average web page corpus contains sentences making textrunner average processing speed document cpu seconds total cpu time extract tuples web page corpus cpu hours 
corpus easily divided separate chunks total time process machine cluster hours 
takes additional hours textrunner merge sort extracted tuples 
compare performance textrunner relative state art web system section 
key textrunner scalability processing time linear constant 
measurements show textrunner scalable theory fast practice 
experimental results compare recall error rate closed system set relations section 
turn fascinating challenge characterizing far broader set facts relations extracted textrunner section 
comparison traditional means evaluating open compare performance state art web system 
comparison knowitall etzioni unsupervised system capable performing large scale extraction web 
control experiments textrunner knowitall tested task extracting facts web page corpus 
knowitall closed system needed select set relations advance 
randomly selected relations sentences corpus manually filtering relations overly vague includes proper noun acquired proper noun proper noun graduated proper noun proper noun author proper noun proper noun proper noun proper noun studied noun phrase proper noun studied proper noun proper noun developed proper noun proper noun formed year proper noun founded proper noun proper noun worked proper noun table shows average error rate relations total number correct extractions systems 
textrunner average error rate lower knowitall finds identical number correct extractions 
textrunner improvement knowitall largely attributed ability better identify appropriate arguments relations 
large proportion errors systems noun phrase analysis arguments truncated stray words added 
difficult find extraction boundaries accurately intended type arguments names person names book titles specified system 
particularly case relation arguments reflecting book titles truncated error rate knowitall 
outlier excluded average error rate knowitall 
extracting information relations textrunner efficiency advantage apparent 
run page corpus textrunner distributed extraction process took total cpu hours perform extraction relations corpus knowitall analyzed sentences corpus potentially matched rules took average hours relation 
amount time knowitall extract data pre specified relations textrunner discovers orders magnitude relations corpus 
relations sampled fundamental difference systems 
standard systems operate relations priori user practical relatively small number relations 
contrast open operates knowing relations priori extracts information relations 
consider statistics textrunner extractions 
global statistics facts learned corpus web pages containing sentences textrunner automatically extracted set tuples extraction rate tuples sentence 
analyzing output open system textrunner question naturally arise tuples represent actual relationships plausible arguments 
subset tuples correct 
tuples distinct opposed identical synonymous 
answering questions challenging due size diversity tuple set 
explained average correct error rate extractions textrunner knowitall table set relations textrunner achieved lower error rate knowitall finding approximately correct extractions 
series estimates approximations order address questions 
step restricted analysis subset tuples textrunner extracted high probability 
specifically tuples evaluated met criteria textrunner assigned probability tuple tuple relation supported distinct sentences corpus tuple relation top relations number supporting sentences 
relations general nearly vacuous np np 
filtered set consists tuples containing distinct relation strings 
filtered set measurements described section 
estimating correctness facts randomly selected tuples filtered set sample 
measurements extrapolated hand tagging sample 
authors inspected tuples order characterize data extracted textrunner 
evaluator judged relation formed 
relation considered formed pair entities relation example fci specializes software development contains wellformed relation demands securing border 
tuple possess formed relation judged see arguments reasonable relation 
formed arguments relation type entity form relation 
example tuple arguments formed dropped instruments 
classified tuples met criteria concrete 
concrete means truth tuple grounded particular entities example tesla invented coil transformer 
tuples underspecified einstein derived theory refer entities specified imply properties general classes executive hired 
judged concrete tuple true false consistent truth value sentence extracted 
summarizes analysis extracted tuples 
textrunner finds facts having wellformed relation arguments probability 
facts deemed correct human reviewers 
relation average tuples concrete facts correct facts correct 
concrete facts potentially useful information extraction question answering assertions useful overview tuples extracted web page corpus 
formed tuples having probability 
textrunner finds concrete tuples arguments grounded particular real world entities correct tuples reflecting assertions correct 
ontology learning applications 
course small subset universe tuples interest particular application tuples corresponding relations experiment section 
estimating number distinct facts millions tuples extracted textrunner reflect distinct statements opposed reformulations existing extractions 
order answer question needs able detect relation synonymous entity referred multiple names 
problems difficult unsupervised domain independent context large number relations entities widely varying types 
measurements able address relation synonymy means measurements reported viewed rough approximations 
order assess number distinct relations textrunner merged relations differing leading trailing punctuation auxiliary verbs leading stopwords 
example consistent merged consistent 
merged relations differing active passive voice invented merged invented 
procedure reduced number distinct relations number merging 
merge question remains relation strings synonymous 
exceedingly difficult answer relations textrunner finds multiple senses 
relation developed example may relation person invention person disease 
rare find distinct relations truly synonymous senses phrase domain specific type checking performed arguments 
argument name scientist developed synonymous invented created closely related patented 
argument type checking relations pick overlapping quite distinct sets tuples 
easier human assess similarity tuple level context form entities grounding relationship available 
order estimate number similar facts extracted textrunner began filtered set tuples 
tuple clusters concrete tuples form tuples entities match relation strings distinct 
third tuples belonged synonymy clusters 
randomly sampled synonymy clusters asked author determine distinct facts existed cluster 
example cluster tuples describes distinct relations park station delineated park location station park called station park known station park station roughly quarter tuples sample reformulations tuples contained filtered set tuples 
previous measurement thirds concrete fact tuples belong synonymy clusters compute roughly tuples textrunner express distinct assertions 
pointed earlier overestimate number unique facts able factor impact multiple entity names topic 
related traditional closed discussed section 
efforts pasca seeking undertake largescale extraction indicate growing interest problem 
year sekine sekine proposed paradigm demand information extraction aims eliminate customization involved adapting systems new topics 
unsupervised learning methods system automatically creates patterns performs extraction topic specified user 
year shinyama sekine shinyama sekine described approach unrestricted relation discovery developed independently tested collection newswire articles 
carried preliminary experiments datadriven approach synonym discovery dirt lin pantel confirmed hypothesis 
contains important idea avoiding scale web explained 
collection documents system performs clustering entire set articles partitioning corpus sets articles believed discuss similar topics 
cluster named entity recognition resolution deep linguistic parse structures computed automatically identify relations sets entities 
heavy linguistic machinery problematic applied web 
shinyama sekine system uses pairwise vector space clustering initially requires effort number documents 
document assigned cluster subject linguistic processing potentially resulting pass set input documents 
far expensive large document collections textrunner log runtime earlier 
collection newswire articles shinyama sekine able discover relations 
difficult measure exact number relations textrunner web page corpus orders magnitude greater 
introduces open web unsupervised extraction paradigm relation specific extraction favor single extraction pass corpus relations interest automatically discovered efficiently stored 
traditional systems repeatedly incur cost corpus analysis naming new relation open time relation discovery procedure allows user name explore relationships interactive speeds 
introduces textrunner fully implemented open system demonstrates ability extract massive amounts high quality information web page corpus 
shown textrunner able match recall knowitall state art web system achieving higher precision 
plan integrate scalable methods detecting synonyms resolving multiple mentions entities textrunner 
system benefit ability learn types entities commonly taken relations 
enable system distinction different senses relation better locate entity boundaries 
plan unify tuples output textrunner graph structure enabling complex relational queries 
people helpful comments previous drafts dan weld adar doug downey 
research supported part nsf iis iis darpa contract onr gifts google carried university washington turing center 
author received additional support google anita borg memorial scholarship 
agichtein gravano agichtein gravano 
snowball extracting relations large plain text collections 
proceedings fifth acm international conference digital libraries 
brill brill 
man woman vs machine case study base noun phrase learning 
proceedings acl pages 
brin brin 
extracting patterns relations world wide web 
webdb workshop th international conference extending database technology edbt pages valencia spain 
mooney mooney 
shortest path dependency kernel relation extraction 
proc 
hlt 
cafarella michael cafarella michele banko oren etzioni 
relational web search 
technical report university washington 
ciaramita ciaramita gangemi ratsch rojas 
unsupervised learning semantic relations concepts molecular biology ontology 
proceedings ijcai 
craven craven dipasquo freitag mccallum mitchell nigam slattery 
learning construct knowledge bases world wide web 
artificial intelligence 
mccallum 
integrating probabilistic extraction models relational data mining discover relations patterns text 
proceedings hlt naacl new york ny 
downey downey etzioni soderland 
probabilistic model redundancy information extraction 
proc 
ijcai 
downey downey etzioni 
locating complex named entities web text 
proc 
ijcai 
etzioni etzioni cafarella downey kok popescu shaked soderland weld yates 
unsupervised named entity extraction web experimental study 
artificial intelligence 

combining lexical syntactic semantic features maximum entropy models 
proceedings acl 
klein manning dan klein christopher manning 
accurate parsing 
proceedings acl 
lin pantel lin pantel 
discovery inference rules text 
proceedings kdd 
florian florian 
transformation learning fast lane 
proceedings naacl pages 
pasca pasca lin jain 
names similarities web fact extraction fast lane 
appear proc 
acl coling 
ratnaparkhi ratnaparkhi 
maximum entropy models natural language ambiguity resolution 
phd thesis university pennsylvania 
ravichandran hovy ravichandran hovy 
learning surface text patterns question answering system 
proceedings acl pages philadelphia pennsylvania 
riloff riloff 
automatically constructing extraction patterns untagged text 
proc 
aaai 
rosario hearst rosario hearst 
classifying semantic relations bioscience text 
proc 
acl 
sekine sekine 
demand information extraction 
procs 
coling 
shinyama sekine shinyama sekine 
preemptive information extraction unrestricted relation discovery 
proc 
hlt naacl 
