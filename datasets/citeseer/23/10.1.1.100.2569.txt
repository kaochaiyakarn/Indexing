adaptive approach heuristics generalized assignment problem helena daniel serra may generalized assignment problem consists assigning set tasks set agents minimum cost 
agent limited amount single resource task assigned agent requiring certain amount resource agent 
new metaheuristics generalized assignment problem hybrid approaches 
metaheuristic max min ant system mmas improved version ant system proposed stutzle hoos combinatorial optimization problems seen adaptive sampling algorithm takes consideration experience gathered earlier iterations algorithm 
heuristic combined local search tabu search heuristics improve search 
greedy randomized adaptive search heuristic grasp proposed 
neighborhoods studied including ejection chains produces moves increasing computational effort 
computational results comparative performance followed concluding remarks ideas research generalized assignment related problems 
keywords metaheuristics generalized assignment local search grasp tabu search ant systems 
department economics management universitat pompeu fabra barcelona spain mail upf es mail serra upf es 
generalized assignment problem gap considers minimum cost assignment jobs agents job assign agent subject capacity constraints agents 
gap applications areas computer communication networks location problems vehicle routing machine scheduling 
initial interest problem came applications resource assignment problems pure integer capacitated plant location problems 
aim adaptive approach heuristics solve gap respective computational results 
heuristics embedded general framework steps step solution constructed greedy randomized ant system approach second step local search applied improve initial solution descendent local search tabu search proposed step consists updating set parameters 
steps repeated stopping criterion verified 
choices step lead different heuristic methods 
organized follows gap review methods proposed solve 
section describe general framework adaptive approach heuristics 
section focus local search methods describing descendent local search tabu search 
section describe computational experiments evaluate proposed heuristics computational results perform comparison methods 
section concludes general remarks directions research 

generalized assignment problem gap consists assigning set tasks set agents minimum cost agent limited amount single resource task assigned agent requiring certain amount resource agent 
problem know extended review see example martello toth van chu fisher van proved problem np hard 
problem finding exits feasible solution np complete 
osman survey real life applications 
generalized assignment problem formulated integer program 
consider notation set tasks set agents aj resource capacity agent bij resource needed task assigned agent cij cost task assigned agent variables xij task assigned agent 
min ij ij ij ij ij ij constraints related resource capacity agents constraints guarantee task assign agent variables binary task assigned agent 
exact algorithm gap proposed ross martello toth fisher van branch cut algorithm employs column generation branch bound obtain optimal solution set partitioning formulation gap 
author mentioned problems agents jobs solved seconds 
heuristics proposed solve gap 
amini racer variable depth search heuristic motivated lin kernighan traveling salesman problem offered rigorous statistical experiment analysis solution methods trick proposed approximation algorithm salomon van formulated problem set partitioning problem proposed heuristic column generation techniques osman comparative performance algorithms tabu search simulated annealing techniques wilson genetic algorithm restore feasibility set near optimal solutions improve best solution local search chu beasley genetic algorithm gap tries improve feasibility optimality simultaneously 
laguna proposed tabu search algorithm ejection chains extension gap multilevel generalized assignment problem 

adaptive approach heuristic section general framework principal aspects adaptive heuristics proposed solve gap 
adaptive heuristics metaheuristics approaches solve combinatorial optimization problems greedy randomized adaptive search heuristic grasp feo resende max min ant system mmas stutzle hoos techniques include step local search method applied 
local search methods section innovation aspects 
general framework adaptive approach heuristics proposed solve generalized assignment problem described general framework composed steps repeated iteratively stopping criteria verified step construct solution greedy fashion 
step apply local search method 
step update parameters 
approach adopted step greedy heuristics 
greedy heuristic constructs solution follows step task assigned chosen choice agent chosen task assigned 
procedure repeated tasks assigned agent 
propose heuristics step greedy randomized adaptive heuristic grah ant system heuristic ash 
basic difference basic greedy heuristic grah ash choice agent assign chosen task 
basic greedy heuristic choice deterministic greedy function example cost function 
grah choice probabilistic bias probability function depend iteration general framework 
ash choice probabilistic bias desirability function 
function updated iteration reinforcement learning way keeping track features solutions search 
second step local search proposed descendent local search tabu search approach 
step applied parameters iteration case ant system heuristic 
method differs way choices step framework 
admit infeasible solutions respect capacity constraints total resource required tasks assigned agents may exceed capacity ones 
infeasible solutions penalize objective function 
principal reason admitting infeasible solutions solutions close optimal capacity agents full neighbor obtained interchange reassign tasks infeasible bad neighbor 
allowing extra solutions usually provides escape routes local optima 
approach quite common implementations metaheuristics effective 
see johnson penalty function follows cij xij max ij parameter representing cost unit overloaded capacity 
solution feasible second term positive search look feasible solution 
parameter increased run penalize infeasible solutions drive search feasible ones 
greedy randomized adaptive procedure method proposed solve gap greedy randomized adaptive search heuristic grasp grasp iterative randomized sampling technique phases 
phase consists greedy randomized adaptive heuristic constructs initial solution 
called adaptive greedy function takes account previous decisions construction considering choice 
second phase consists improvement phase usually corresponds local search method 
grasp successfully applied combinatorial optimization problems 
seen grasp fits general framework proposed previous section 
list applications grasp see resende pardalos papers site www research att com 
section describe greedy randomized adaptive heuristic phase 
local search explained section 
iteration greedy randomized adaptive heuristic grah task assigned agent 
heuristic finishes tasks assigned 
grah described follows 

set task assigned agent 
construct rcl restricted candidate list agents task li cmax cmax parameter limits dimension restricted list ij max agents included 
max ij 
consider order tasks 
tasks assigned repeat 
choose randomly agent probability function depends ij resource agent resource need task ij bil li agent minimal cost greater probability chosen 

assign task agent ij remove list 
repeat step 
note capacity constraint violated 


calculate value penalty function ij ij solution 
reality looking initially feasible solution 
interested assigning task agent task uses small amount resource agent small bij task order agents function pij decreasing order 
task assigned agent probability function pij available capacity 
task assigned agent order left capacity 
agents full assignment random 
note solution obtained infeasible respect capacity constraints 
ant system grasp procedure previous chapter seen multi start local search considering random initial solution greedy randomized heuristic try find better initial solutions random ones 
stutzle hoos proposed improved version ant system seen adaptive sampling algorithm takes consideration experience gathered earlier iterations algorithm designated max min ant system mmas 
combining mmas local search stutzle hoos able find solutions traveling salesman problem quadratic assignment problem flow shop scheduling problem 
propose mmas local search approach gap seen extension grasp heuristic previous section 
ant system introduce colorni dorigo maniezzo cooperative search algorithm inspired behavior real ants 
ants lay quantity aromatic substance know pheromone way food 
ant chooses specific path correlation intensity pheromone 
pheromone trail evaporates time pheromone laid ants best paths intensive pheromone higher probability chosen 
ant system approach associates pheromone trails features solutions combinatorial problem seen kind adaptive memory previous solutions 
solutions iteratively constructed randomized heuristic fashion biased pheromone trails left previous ants 
pheromone trails ij updated construction solution enforcing best features intensive pheromone 
max min ant system differs ant system way best ant updates trails cycle 
avoid stagnation search ants choose path stutzle proposed lower upper limit pheromone trail min max respectively 
propose max min ant system local search gap stutzle flow shop scheduling problem 
ij desirability assigning task agent initially ij cij generalized assignment problems maximization ij cij 
cheaper assignment task agent desired assignment 
explain construct solution ant suggested stutzle heuristic designated ant system heuristic 
tasks assigned agents greedy way greedy randomized adaptive heuristic step assignment done biased ij task assigned particular agent way 
probability choose agent maximal value ij 
probability choose agent probability distribution ij li ij il assignment constitutes step general framework followed local search tries improve initial solution 
third step general framework pheromone trails updated way new old ij evaporation 
ij updated amount ij ij persistence trail represents max task assign agent solution 
solution infeasible 
solution feasible 
note solution feasible pheromone trail bigger increment trying give greater probability feasible assignments 
min ij max limits imposed updated pheromone falls outside interval 
local search methods second step adaptive approach heuristics 

local search methods local search methods improvement search techniques extensively obtain solution combinatorial hard problems 
order derive local search method necessary define neighborhood structure function associates set solutions solution neighborhood usually obtained specific modifications called moves 
local search starts initial solution searches neighborhood defined solution characteristics example lower cost 
neighbor solution replaces current solution verifies properties depend acceptance strategy example lower cost current solution 
search continues stopping criterion verified 
algorithm returns best solution respect cost function 
neighborhoods neighborhoods gap simple shift neighborhood task reassigned new agent ejection chain neighborhood agent reassigned new agents 
shift neighborhood special case generation mechanism proposed osman subset size 
ejection chain neighborhood laguna move shift neighborhood consists removing task agent assign agent 
size neighborhood 
note start considering removing tasks overloaded agents 
task reassigned overloaded agent 
shift neighborhood obtained procedure neighborhood flag 
order agents amount capacity maximum decreasing order 

consider order tasks assign agent ij 
remove ij 
assign ij agent considered starting agent list neighbor 

calculate value penalty function 
go step 
ij ij repeat steps tasks considered 

repeat step agents considered 

flag true 
preliminary tests neighborhoods able obtain feasible solutions starting infeasible 
local optimal solutions 
lead define complex neighborhood 
ejection chain neighborhood variable depth procedure consists move task current agent new agent 
neighborhood structure ejection chains introduced glover applied problems including extension gap laguna second neighborhood structure complex shift neighborhood leads powerful efficient search increasing significantly computational running time 
ejection chain neighborhood obtained application types moves move remove task agent agent insert task different agent agent 
move remove task agent agent insert task different agent agent 
remove task agent different insert task agent different equal 
ejection chain neighborhood solution obtained similar way done shift neighborhood move type applied move type successful 
note number neighbors order larger number shift neighborhood 
descendent local search designated descendent local search local search method steepest descendent improvement strategy 
means cost improvement neighbor solution new current solution 
method stops local optimal solution respect neighborhood structure chosen 
main drawback method unable overcome local optimal solution 
tabu search method section different acceptance strategy features designed avoiding trapped bad local optimum 
main steps descendent local search 
obtain initial solution example grah 

flag false 
neighborhood 
flag false local optimum repeat step 
heuristic finishes infeasible solution apply opt local search neighborhood interchange tasks agents considering moves reduce overloaded capacity 
feasible solution obtained apply opt local search considering feasible solutions verifying conditions pairs tasks agents respectively 
cil cij ckl sj xij kl ij kj bsl sl bkl bil bl ij kl kj conditions grasp method consist approaches proposed solve gap 
stopping criterion satisfied 
construct solution greedy randomized adaptive heuristic 
iteration initialize xb best solution 

apply local search 
feasible xb xb 
return best solution xb 
method gap general framework procedure max min ant system local search mmas described follows 
initialize pheromone trails parameters 
termination condition met 
construct solution ant system heuristic 
iteration initialize xb best solution 

apply local search 
feasible xb xb update pheromone trails 

return best solution xb 
methods stopping criterion applied consists maximum number iterations 
note main difference methods way initial solutions constructed step general framework adaptive approach heuristics 
grasp follows random approach means random sampling solutions constructed greedy fashion seen diversification strategy 
mmas constructs initial solutions adaptive cooperative memory seen intensification strategy 
tabu search tabu search originally proposed glover metaheuristics subject extensive studies applied optimization problems great success 
tabu search described intelligent search uses memory drive search local optimal solutions find results 
survey tabu search see glover laguna motivation apply tabu search gap excellent results obtained laguna multilevel generalized assignment problem 
computational results gap able obtain optimal solution test problems agents task seconds 
tabu search briefly described follows 
suppose initial solution 
stopping criteria met 
generate candidate list moves neighbors 
choose best neighbor tabu verifying aspiration criteria 
update current solution 

output best solution 
basic ingredients tabu search neighborhood tabu list size aspiration criteria stopping criteria 
describe aspects detail gap 
easily observed ejection chain neighborhood large number neighbors 
lead bad solutions 
avoid spend large amount time evaluating neighborhood candidate list strategy restrict number solutions examined iteration tabu search 
candidate list strategy implemented uses context information limit search moves improve current solution 
problem specific candidate list strategy described follows task pair tasks considered moving situations occur 
current solution neighbor solution task considered moving agent agent cup cuk pair tasks considered moving cup clk cuk clq task considered moving agent agent ik ik 
ij ij uk pair task considered moving iq iq ip ip ip ip ik ik 
ij ij uk lk lq tabu attribution related move task agent agent suppose task assigned agent current solution accepted neighbor task reassigned agent certain number iterations tabu tenure size tabu list forbidden assign task agent tabu list implemented matrix entry contains iteration number task removed agent tabu tenure iterations move assign task agent tabu 
aspiration criteria considered tabu attribution move leads best solution far 
tabu search stops maximum number iteration 
done descendent local search methods gap grasp tabu mmas tabu described previous local search method tabu search applied 

computational experiment section computational experiment results obtained 
follow guidelines proposed barr computational experiment designed main objectives gain understanding behavior different proposed methods general framework adaptive approach heuristics compare methods proposed step general framework greedy randomized adaptive heuristic versus ant system heuristic 
compare best methods described techniques methodology proposed solve generalized assignment problem 
methods described coded fortran tested set problems ranging agents jobs agents jobs 
test problems publicly available library www ms ic ac uk info html authors computational experiments osman salomon van chu beasley set test problems divided groups easy gap gap difficult gap gap 
set problems maximization form gap converted minimization form 
numerical tests carried pc pentium mb ram 
performance measures considered quality solution measured percentage deviation optimal 
computational time total running time time best solution measured iteration general framework 
factors influence behavior method results problem specific number agents number task resource capacity agents aj cost overloaded capacity 
step greedy randomized adaptive heuristic ant system heuristic 
second step neighborhood search strategy local search tabu search 
stopping criteria number total iterations iterations tabu search 
parameters size tabu list stl ant system parameters min max 
want consider factors experimentation quite extensive 
minimize computational effort factors chosen priori previous experiments gap preliminary computational results 
consider values parameters ant system heuristic fixed preliminary runs min min ij max max ij 

comparison different approaches main issue initial tests understand behavior different methods general framework different approaches 
adaptive search heuristics considered ones mmas ant system heuristic descendent local search ejection chains neighborhood 
grasp greedy randomized adaptive heuristic descendent local search ejection chains neighborhood 
version grasp method 
ash ts ant system heuristic tabu search restricted ejection chains neighborhood 
grah ts greedy randomized adaptive heuristic tabu search restricted neighborhood ejection chains 
ash ls ts ant system heuristic descendent local search shift neighborhood tabu search restricted neighborhood ejection chains 
grah ls ts greedy randomized adaptive heuristic descendent local search shift neighborhood tabu search restricted ejection chains neighborhood 
ash ls cts ant system heuristic descendent local search shift neighborhood tabu search ejection chains neighborhood search complete neighborhood 
methods applying tabu search method apply simple descendent local search method shift neighborhood solutions obtained step infeasible descendent local search shift neighborhood usually finds feasible short time allows tabu search start better solution 
method try analyze effect restricted candidate list 
table average percentage deviation optimal runs adaptive search heuristics prob 
na nt optimal mmas grasp ash ts grah ts ash grah ash ls ts ls ts ls cts gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap gap average experiment factors prefixed stl 
method performed easy test problems results subset large size problems gap agents jobs gap agents jobs 
test problem performed runs methods 
table average percentage deviation optimal runs heuristics proposed 
observe best results obtained ts grah ts ls ts grah ls ts tabu search second step general framework combined local search method results improve 
mmas grasp obtained worst results bad local optimal solutions 
tabu search approach able keep searching solutions 
tabu search considering complete neighborhood ash ls cts quality solution improve 
restricted candidate lists play important role search helping finding solution significantly time see tables 
seen proposed heuristic perform finding optimal solution instances 
heuristics failed reach optimal solutions obtained close optimality 
table average quality solution set test problems 
observe ash ls ts performs better remaining heuristics obtaining optimal runs test problems groups 
table average percentage deviation optimal adaptive search heuristics group problems 
prob 
na nt mmas grasp ash ts grah ts ash ls ts grah ls ts ash ls cts gap gap gap gap gap gap average table average total running time seconds adaptive search heuristics prob 
na nt mmas grasp ash ts grah ts ash ls ts grah ls ts ash ls cts gap gap gap gap gap gap average table average total running cpu time average time find best solution test problems 
heuristics running increases ratio number task 
number global iterations general framework ant system heuristic mmas ash ts ash ls ts takes time greedy randomized adaptive heuristic grasp grah ls grah ls ts 
computational time find best solution falls total running time ant system heuristic finds best solution faster 
difference ash ts ash ls ts grah ls ts significant 
explanation behavior tabu search ejection chain neighborhood proceeds efficient way find solution 
table average running time best solution seconds adaptive search heuristics prob 
na nt mmas grasp ash ts grah ts ash ls ts grah ls ts ash ls cts gap gap gap gap gap gap average average percentage grasp mmas grah ls ts grah ts ash ts ash ls ts ash ls cts time seconds average percentage deviation optimal versus time gap instances better understand behavior heuristics proposed figures compare tradeoff solution quality computational effort 
simplicity average results test problem gap gap 
easily observed heuristics obtain better results terms solution quality computational time ash ls ts ash ts grah ls ts approximately order dominate remaining ones 
choose choice ash ls ts obtains best solution reasonable computational time 
average percentage mmas grah ls ts ash ts grah ts ash ls ts grasp ash ls cts time seconds average percentage deviation optimal versus time gap instances comparison adaptive approaches second issue answer related different approaches proposed step 
greedy randomized adaptive heuristic randomization obtain initial solutions greedy fashion way diversify search solution 
approach ant system uses information solution visited previous iterations construct solution greedy approach 
analyze exists difference approach gap specially particular instances 
factors kept constant different heuristics proposed step 
average results test problems grah ash step general framework combined local search ejection chain neighborhood local search tabu search 
results showing tradeoff solution quality computational time 
observe ant system heuristic step method obtains better solutions time test problems 
average percentage time seconds average percentage deviation optimal versus time mmas grasp heuristics gap gap instances average percentage ag time seconds average percentage deviation optimal versus time ash ls ts grah ls ts heuristics gap gap instances explanation difference ant system greedy randomized adaptive heuristics related quality solution obtained greedy heuristics 
observed solutions obtained grah different follow patron 
ash solutions obtained iterations worst equal value ones obtained grah search continues ant system heuristic able obtain solutions leads running time local search method second step general framework 
behavior explained way ash designed solutions seen previous iterations account defining probability function greedy heuristic 
exemplify behavior greedy heuristics value penalty function initial solution obtained grah ash instance gap ls ts second step 
initial solution value iteration number penalty function value initial solution obtained greedy randomized adaptive heuristic ant system heuristic instance gap 
ant grasp computational results section table performance best methods test problems compare methods proposed solve gap metaheuristics osman chu beasley results methods 
observe average ash ls ts performed better approaches instances 
method obtains optimal solution runs test problems gap previous proposed method able 
main objective declare winner method understand differences solving different test problems 
results obtained adaptive search heuristics proposed obtain better equal results gap methods literature small running times 
table average percentage deviation optimal heuristics prob 
na nt ts ts gaa gab ash ls ts grah ls ts gap gap gap gap gap gap average 
main contribution application adaptive search heuristics generalized assignment problem grasp ant system methodology 
general framework approach aspects combination ant systems grasp tabu search techniques ejection chain neighborhoods 
computational testing showed hybrid approach ideas ant systems grasp combined tabu search leads results reasonable times outperform simple mmas grasp 
ejection chain neighborhood restricted candidate list strategy play important role driving search solutions 
conclude ant system heuristics outperform greedy randomized adaptive heuristics terms solution quality total running time 
results compare favorably existing methods terms time quality solution 
developments related application adaptive search methods extensions gap resource assignment problem pure integer capacitated plant location 
done solving difficult problems sophisticated tabu search diversification strategies ant system ants 
research plan apply adaptive search heuristics general framework develop solution methods combinatorial optimization problems 
martello toth 
knapsack problems algorithms computer implementations wiley new york 
dg van ln 
survey algorithms generalized assignment problem eur opl res 
chu pc beasley je 
genetic algorithm generalised assignment problem comp opns res 
fisher van 
multiplier adjustment method generalized assignment problem mgmt sci 
osman ih 
heuristics generalized assignment problem simulated annealing tabu search approaches spektrum 
ross gt pm 
branch bound algorithm generalized assignment problem math prog 

improved dual algorithm knapsack problem eur res 
bean jc jr 
steepest descent multiplier adjustment method generalized assignment problem 
report university michigan ann arbor mi 

branch cut algorithm generalized assignment problem opns res 
amini mm racer 
rigorous comparison alternative solution methods generalized assignment problem mgmt sci 
trick ma 
linear relaxation heuristic generalized assignment problem naval res 
dg salomon van ln 
set partitioning heuristic generalized assignment problem eur opl res 
wilson jm 
genetic algorithm generalised assignment problem opl res soc 
laguna kelly jp gonz lez jl glover 
tabu search multilevel generalized assignment problem eur oper res 
feo ta resende 
greedy randomized adaptive search heuristic journal global optimization 
stutzle hoos 
max min ant system local search combinatorial optimization 
nd international conference metaheuristics sophie antipolis france 
stutzle hoos 
improvements ant system introducing max min ant system th darmstadt fb informatik darmstadt germany 
johnson ds aragon cr mcgeoch la schevon 
optimization simulated annealing experimental evaluation part graph partitioning opns res 
resende ls pardalos pm 
fortran subroutines computing approximate solutions weighted max sat problems grasp submitted publication 
stutzle 
ant approach flow shop problem th darmstadt fb informatik darmstadt germany 
colorni dorigo maniezzo 
distributed optimization ant colonies proceeding ecal european conference artificial life elsevier publishing paris france pp 

colorni dorigo maniezzo 
investigation properties ant algorithm proceeding parallel problem solving nature conference ppsn elsevier publishing brussels belgium pp 

glover 
ejection chains structures alternating path methods traveling salesman problem university colorado 
shortened version published discrete applied mathematics glover 
paths integer programming links artificial intelligence com opns res 
glover laguna 
tabu search kluwer academic publishers norwell massachusetts 
barr rs golden bl kelly jp resende stewart jr wr 
designing reporting computational experiments heuristics methods journal heuristics 

