kolmogorov complexity computational complexity lance fortnow university chicago describe properties various notions time bounded kolmogorov complexity connections kolmogorov complexity computational complexity 
thinks kolmogorov complexity computational complexity usually thinks incompressibility method 
proves statement random object assuming statement false shows short description object contradicting randomness 
examples technique directly kolmogorov complexity see lv chapter guise counting argument example see raz appendix entropy argument example 
look incompressibility method survey focusing areas kolmogorov complexity computational complexity collide catalog time bounded variants kolmogorov complexity 
look instance complexity allows look complexity string relation set compares time bounded traditional distinguishing kolmogorov complexity 
show time bounded kolmogorov complexity characterize sizes efficiently computable sets 
show amazing power random strings help compute difficult sets 
look levin universal distributions enumerable time bounded show relationship polynomial time average problems 
look levin universal search kolmogorov perspective 
idea gives optimal large constants algorithm problems efficiently check solution 
show notions kolmogorov complexity characterize complexity classes particular printable sets poly 
kolmogorov complexity gives framework help understand computation efficient computation allows put quite different complex concepts common framework 
dedicated memory andrei kolmogorov recognition th anniversary birth april 
kolmogorov complexity resource bounded variations assume basic knowledge computational complexity homer selman hs 
information complexity classes complexity zoo aar 
define notions kolmogorov complexity needed recommend li vit anyi lv depth treatment area 
follow notation survey 
fix nice turing universal machine define kolmogorov function length smallest program generating definition minp kolmogorov function beautiful theory part ignore survey list results prove useful complexity 
theorem 
choice universal machine affects constant additive factor 


length 
fraction length course definition kolmogorov complexity complexity theorist small program takes life universe produce wish give variant kolmogorov complexity definitions exist 
distinctions usually significant different standard kolmogorov complexity dramatic difference different applications 
definition natural just limits time create string 
definition ct minp outputs steps typically complexity measure amount time program function input 
measure time function output 

consider program length log just outputs zeros 
sense consider running linear time opposed exponential time 
producing string measure size smallest program distinguish string 
definition sip cdt minp accepts rejects 
runs steps sigma 
reminiscent versus np problem generally believe easier determine string property finding string 
buhrman fortnow bfl develop nondeterministic version definition allow nondeterministic 
levin lev variation takes time part kolmogorov measure 
definition levin ct minp log steps 
levin uses logarithm time 
allender considers entire time 
definition focus sublinear time need modify produces string 
definition allender ct minp ith bit steps 
usually kolmogorov complexity focuses solely strings 
instance complexity focuses strings relative set 
instance complexity introduced ko sch watanabe 
intuitively bounded instance complexity respect length shortest program runs time correctly decides mistakes input allowed output don know 
definition time bound bounded instance complexity sigma respect defined ict minp runs time 

definitions alter similar ways prefix free require set legitimate programs form easily computable prefix free set 
allow determine program initial sequence longer infinite string 
follow li vit anyi approach prefix free complexity example kt 
advice allow program access additional information 
add notation indicate program gets string auxiliary input example ct 
running time function 
oracles allow program access set oracle indicated superscript ct 
running time depend space measure resource space time example cs 
bound time space ct 
bracket notation define set strings similar kolmogorov complexity 
example ct set strings ct 
ct set strings ct 
relationships cd instance complexity program produce distinguish theorem cdt ct 
focus polynomial 
np program distinguishes find program distinguish single weaker assumption 
definition unique sat easy exists polynomial time algorithm formula oe exactly satisfying assignment oe outputs assignment 
unique sat easy implies np rp vv 
exist relativized worlds unique sat easy np 
theorem unique sat easy polynomials polynomial constant cq cdp fortnow fk show tight connection slightly weaker statement 
theorem equivalent 
unique sat easy 

polynomials polynomial constant cq cdp instance complexity bounded cd complexity hardwiring answer answering inputs 
theorem sets inputs ict cdt constant independent theorem tight 
polynomial time computable need give program polynomial time instance complexity bounded constant depending show converse holds 
theorem set polynomial time computable exists polynomial constant icp informally hard instance set instance complexity ct complexity theorems happen inputs cd basically 
definition set hard instances polynomial exists polynomial constant infinitely icq cp fortnow fk give examples sets hard instances 
theorem fortnow recursive set hard instances holds 
tally set 
complete 
np hard honest turing reductions 
bi immune 
fortnow fk give relativized examples sets hard instances required instance complexity great cd complexity 
size sets just printing string simple counting argument tight wouldn programs print strings 
similar argument get general result 
lemma subset sigma 
sigma empty exist length log 
prove upper bounds computably enumerable lemma computably enumerable 
log sigma 
look polynomial time computations 
lemma applies lemma hold 
depends exact variation kolmogorov complexity 
small set hard find strings provably ue expect lemma hold look ct complexity 
situation changes cdt complexity 
theorem sipser sip polynomial time computable set exists polynomial constant sigma cdp log log prove theorem sipser uses random string generate hash functions describe element hash functions maps 
remove need random string 
buhrman fortnow bfl show allow weaker bound extra information encode hash function 
theorem buhrman fortnow polynomial time computable set exists polynomial constant cdp log log 
buhrman blm show theorem tight relative oracle 
theorem buhrman polynomial sufficiently large exists set strings containing strings cdp log various results extractors ta buhrman fortnow bfl improve theorem strings theorem buhrman fortnow set constants ff polynomial fraction cdp min log logo ff log log 
power random strings define set strings kolmogorov complexity half length 
set reduced say terms computational complexity 
allender buhrman van show pspace pr exp npr 
allender buhrman show techniques allender show nexp npr 
case gets exponential speed having access set random strings 
characterize pspace terms 
directly computable 
pspace set recursive sets pr 
allender buhrman show choice universal machine affect answer 
conjecture recursive set pspace pr matter universal machine chosen 
consider set kt 
allender show sits exp language exp reduces non uniform polynomial time turing reductions 
techniques papers build derandomization tools developed nisan wigderson nw 
nisan wigderson show create pseudorandom generators hardness assumptions 
strings allows break generators hardness assumptions 
allender realized random strings derandomization 
exists polynomial time algorithm constant circuit accepts half inputs string ct output list strings 
yi accept yi 
proof uses fact describes function log bits exponential circuit complexity impagliazzo wigderson iw uma functions 
universal distributions consider function 
set programs prefix free kraft inequality px 

enumerable recursive function monotonically increasing 
levin lev showed universal class 
theorem levin sigma 
enumerable constant levin lev defined notion running polynomial time average relative distribution 
definition levin algorithm runs time polynomial average respect distribution exists constant sigma running time algorithm uses input li vit anyi lv show universal distribution polynomial time average polynomial time worst case 
theorem li vit anyi algorithm runs time polynomial average relative exists polynomial running time input bounded consider time bounded versions defining mt 
measure mt quite time bounded enumerable universal properties 
definition distribution polynomial time computable cumulative probability function py computable polynomial time 
distribution probabilistic algorithm input produce string probability halt time bounded fixed polynomial output size 
polynomial time computable distribution 
say mt sense universal polynomial time computable distributions distributions show direction 
theorem 
polynomial time computable distribution exists polynomial constant mp 
polynomials exists distribution constant mp schuler sch shows tighter characterization 
theorem schuler pseudorandom generators exist polynomial polynomial time computable distributions constants mp fortnow give version theorem mt theorem fortnow time constructible functions algorithm runs time polynomial average respect mt algorithm runs time log inputs note gets large theorem approaches theorem 
universal search levin lev known result producing factoring algorithm constant factor optimal 
consider context kolmogorov complexity 
lemma levin exists algorithm enumerates string string time kt steps 
algorithm simulates program fraction time 
produces steps algorithm take steps kt shortest program generates levin calls value kt age string give algorithm input string lemma holds stronger time bound kt 
lemma total recursive algorithm kt log ca running time algorithm ca constant depending combining lemmas get optimality result 
theorem total recursive algorithm enumerate time cat running time ca constant depending algorithm enumerate values including may know value correct 
eliminate problem algorithm accepts exactly 
theorem described exists algorithm produces single accepts 
total recursive algorithm accepts 
produce time car running time running time input ca constant depending note algorithm independent description consider example accepts list prime factors compute polynomial time aks 
algorithm run polynomial factor algorithm factors particular factoring computable polynomial time factor polynomial time don know original factoring algorithm 
course note ca cases large theorem theoretical 
kolmogorov characterization complexity classes get characterizations complexity classes kolmogorov complexity 
definition language printable exists polynomial time computable function enumerates exactly strings length printable set sparse polynomial number strings length 
lemma log nk printable 
just simulate short programs 
lemma printable set log nk describe string enumerated description index list strings enumerated intersection set printable set printable get characterizations printable sets 
theorem set equivalent 

printable 
subset log nk 
ct log turn class poly nonuniform polynomial time 
definition language poly exists sparse set computable polynomial time access oracle give characterizations poly kolmogorov complexity need define characteristic sequence set definition consider infinite list strings ffl 
enumerates sigma 
characteristic sequence set oea infinite binary sequence ith bit ith string sigma finite sequence characteristic sequence strings length note 
characterize poly ct complexity 
theorem language poly constant ct nc interestingly strings high kolmogorov complexity characterize poly 
definition set random infinitely theorem poly 
useful derive poly 
recursive pa random bpp poly 
fortnow van generalize idea 
theorem fortnow van equivalent recursive languages 
poly 
exists set constant pa ct nk survey shown number interesting connections kolmogorov complexity computational complexity 
flavor connections 
covered areas connections quantum computing computational depth minimally sufficient statistics connections biology sciences 
enjoy kolmogorov complexity think 
research area interesting viewed kolmogorov lens 
may programs short quick 
acknowledgments eric allender sophie helpful discussions results mentioned survey 
aar 
complexity zoo 
www cs berkeley edu zoo html 
allender van 
power random strings 
proceedings rd ieee symposium foundations computer science pages 
ieee new york 
allender buhrman 
efficiently reduced strings 
proceedings st symposium theoretical aspects computer science lecture notes computer science 
springer berlin 
appear 
fortnow 
depth capture average case complexity 
th international symposium fundamentals computation theory volume lecture notes computer science pages 
springer berlin 
fortnow van 
computational depth 
proceedings th ieee conference computational complexity pages 
ieee new york 
aks agrawal saxena 
primes unpublished manuscript indian institute technology kanpur 
allender 
worlds collide derandomization lower bounds kolmogorov complexity 
proceedings st conference foundations software technology theoretical computer science volume lecture notes computer science pages 
springer berlin germany 
bfl buhrman fortnow 
resource bounded kolmogorov complexity revisited 
siam journal computing 
blm buhrman 
new bounds language compression problem 
proceedings th ieee conference computational complexity pages 
ieee computer society los alamitos 
fk fortnow 
resource bounded instance complexity 
theoretical computer science 
hs homer selman 
computability complexity theory 
springer new york 
iw impagliazzo wigderson 
bpp requires exponential circuits xor lemma 
proceedings th acm symposium theory computing pages 
acm new york 
jayram kumar sivakumar 
applications information complexity 
proceedings th acm symposium theory computing pages 
acm new york 
lev levin 
universal search problems 
problems information transmission 
lev levin 
universal ny universal search problems russian 

corrected english translation tra 
lev levin 
laws information conservation non growth aspects foundations probability theory 
problems information transmission 
lev levin 
average case complete problems 
siam journal computing 
lu reingold wigderson 
extractors optimal constant factors 
proceedings th acm symposium theory computing pages 
acm new york 
lv li vit anyi 
average case complexity universal distribution equals worst case complexity 
information processing letters may 
lv li vit anyi 
kolmogorov complexity applications 
graduate texts computer science 
springer new york second edition 
nw nisan wigderson 
hardness vs randomness 
journal computer system sciences 
ko sch watanabe 
instance complexity 
journal acm 
raz razborov 
bounded arithmetic lower bounds boolean complexity 
remmel editors feasible mathematics ii volume progress computer science applied logic pages 
birkh auser boston 
sch schuler 
universal distributions time bounded kolmogorov complexity 
proceedings th symposium theoretical aspects computer science volume lecture notes computer science pages 
springer 
sip sipser 
complexity theoretic approach randomness 
proceedings th acm symposium theory computing pages 
acm new york 
ta ta 
extracting randomness weak random sources extended 
proceedings th acm symposium theory computing pages 
acm new york 
tra trakhtenbrot 
survey russian approaches brute force search algorithms 
annals history computing 
uma 
pseudo random generators 
journal computer system sciences 
vv valiant vazirani 
np easy detecting unique solutions 
theoretical computer science 

