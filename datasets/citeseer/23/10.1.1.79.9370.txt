situation recognition representation algorithms christophe paul malik ghallab laas fr laas fr malik laas fr situation recognition system devoted receives input stream time stamped events performs recognition instances occurring situations developing generates output deduced events actions trigger 
mainly temporal reasoning system 
predictive sense predicts forthcoming events relevant task focuses attention maintains temporal windows relevance 
main functionality recognize efficiently complex temporal patterns fly place 
system tested surveillance environment multisensory perception machine applied monitoring complex dynamic system 
interested situations arc static states correspond evolutions changing environment 
understand situation assessment system maintain perception coherent interpretation going dynamic world 
task arises applications environment surveillance process monitoring 
initially motivated class applications 
specifically developed design active multi sensory perception machine called mobile fixed cameras laser range finders optical barriers sonic detectors distributed surveying indoor environment ghallab 
sensory stimulus optical barrier crossing track detection interpreted event 
set events occurring temporal pattern may develop situation complete partial turn generate new events permit focus attention enabling detection forthcoming events trigger alarms messages data logging actions 
proposed situation recognition system tested monitoring dynamic systems 
observed events generated raw data simple signal processing 
results obtained reduced example regulated automated reasoning laas cnrs ave du colonel roche toulouse cedex france tank lead start ambitious application surveillance gas turbine 
initially programmer provides system set situation models normal abnormal evolutions surveyed 
situation model set event patterns temporal constraints respect context 
observed events match event patterns times occurrence meet specified constraints instance situation occurs 
situation model may specify events generated actions triggered result situation occurrence 
deduced events turn taken input situations enabling recursive chaining 
situation recognition system receives input stream time stamped events necessarily sorted occurrence dates may variable delays interpretation sensory stimulus 
performs recognition instances occurring situations arc developing generates output deduced events triggered actions 
mainly temporal reasoning system 
predictive sense predicts forthcoming events relevant partial instances situations currently place focuses maintains temporal windows relevance 
today perform temporal projection mcdermott dean persistence maintenance dean domain axioms models change 
main functionality able recognize efficiently complex temporal patterns fly place 
ai literature reports works concerns similar 
plan recognition problem wilensky 
kautz interested recognizing sequence actions complex plan 
problem temporal reasoning docs arise main issue 
event calculus kowalski variant relevant 
calculus mainly interested describing relations events enable question answering system relate address recognition issue 
akin approach kumar 
state model time taken 
extension interval calculus proposed relate intervals initial points known 
events intervals linked extended calculus form situations recognized evaluation process algorithm 
main differences approach proposed knowledge representation level richer realistic takes account context distinguishes occurrence reception dates events permits numerical temporal constraints mainly recognition level algorithms involved proposing efficient line processes suitable demanding applications 
section ii describes proposed knowledge temporal representation defines situations models temporally constrained events accompanying actions 
develop section iii recognition method main algorithms 
conclude presentation experiments ran actual implementation experimental model average complexity exhibits performances 
representation time algorithmic complexity reasons time map manager called ixtet ghallab relies time points elementary primitives 
consider time linearly ordered discrete set instants resolution sufficient dynamics environment change adequately represented place instant set 
intervals relations restricted interval algebra vilain allen user level ixtet translated internally time point constraints ll develop issue 
handle usual symbolic constraints time point algebra simultaneous disjunctions numerical constraints 
expressed pairs real numbers corresponding lower upper bounds temporal distance points el 
notations propagation conjunction translation complexity reasons allow disjunctions numerical constraints constraint satisfaction problem np complete dechter assertions events rely propositional reified logic formalism shoham set propositions temporally qualified predicates true false time point proposition true consider assertions truth proposition period time define event pattern change truth value proposition 
event time stamped instance pattern duration expressed predicates suppose event stream consistent proposition necessarily event successive events respectively 
assumption solely respect occurrence dates events concern stream received system 
processing delays events event pattern comes variable delay due sensor processing data transmission 
suppose delay bounded interval user 
occurrence date event reception date simplify notation sections may refer name event occurrence date 
situations situation model set event patterns set constraints 
may involve description context required hold independently true 
example want survey robot enter room load machine exit 
soon machine loaded start 
machine stopped loading safety condition necessary actions robot room 
situation model described follows network representing situation ghallab system receives processes events 
assume consistent stream events assertions managed quite naturally occurrences non occurrences events 
process assertion system checks event event occurs initialize system set events corresponding state world occurrence date equal previous network 
user specify actions performed situation instance recognized 
may generate new event occurrence date defined relatively instance events 
may display messages run specified user procedure external action example 
useful focus attention surveillance system 
generation new event allows relate different situations enabling modular programming 
processing automated reasoning respecting windows left 
reception event propagated windows constraining remaining events right 
recognition instance proceeds accordingly 
alternate scenario receiving occur time false occurrence time corresponding instance meet specified constraints killed 
preprocessing compilation stage useful testing consistency constraints situation model coding efficient data structures recognition process 
mainly consists propagating constraints event network 
time propagations local situation model 
situation model propagate constraints path consistency algorithm derived mackworth 
result algorithm situation model constrained complete graph equivalent user constraints 
provide useful feedback situation debugging incremental algorithm detect inconsistent constraints 
recognition delay events 
events latest possible events situation occurrence dates leaf nodes corresponding network 
terminating events situation model events received latest instance recognition completed 
determine events compiler takes account reception dates possible delays 
line situation management recognition method complete forecast forthcoming events predicted situation models 
order event ei consistent constraints known dates events took place partial instance define interval called window relevance ei contains possible occurrence dates possibly forthcoming event ei 
time lines situation instance process time lines 
instance latest date nearest non occurred event delay non occurrence line instance latest date ensuring nearest assertion holds 
recognition forecast compute recognition interval situation instance 
user know recognition expected events required achieve 
tree instances situation model system manages tree current instances 
situation recognized killed constraint violation instance removed tree wc say instance dies 
evolution situation instance basically ways modifying situation instance new event arrive integrated instance violate constraint protected assertion time goes happening event deadlines violated assertion constraints obsolete 
system manages external real time receiving clock updates 
value clock 
event received reception date 
matching event occurrence event matching pattern ek occurs expected event ck 
meet temporal constraints meets constraints reduced generally window relevance forthcoming event ek constrained ek reduced sure constraint remains consistent known 
need propagate expected events turn constrained 
produces new set non empty consistent ei 
important notice need verify consistency events fall windows relevance 
fact propagation original situation instance duplicated copy updated matching ek processing propagate ek 
duplication needed guaranty recognition ghallab restricting duplication instances saw situation instance duplicated times recognition 
main source complexity limit 
duration bounds situation way reduce duplication 
compiling verify situation maximal duration limit 
limitation situation instances duplicated large number furthermore may situations successful instances overlapping time sharing common event instance user interested recognizing just instance time 
cases situation instance recognized pending instances removed 
third way restricting duplication postpone propagation events 
event classes completely forecast ones constraints propagated partially forecast events 
event completely forecast sure time consistency partially forecast event needs simple verification check constraint propagation event meets pending constraints 
event matching expensive 
furthermore postponing constraint propagation expensive duplicate situation new event instantiated keep history possible matching event order able backtrack situation ended killed recognized 
know backtracking expensive unacceptable line system 
events completely forecast current system constraint postponing 
automated reasoning variables event patterns situation models representation allowed system general described 
possible specify event patterns variables 
event instances ground terms 
matching procedure simple duplication situation instances enables direct checking consistency variable bindings 
representation full order formalism allow free variables protected assertions 
constraints assertions processed simple propagation forecasting require costly search compatible complexity aimed 
complexity elementary event propagation clock propagation runs number pending events situation instance total number distinct events situation model 
instances situation models events proposed algorithms process new event clock updating complexity kn 
larger number situation models 
kept order complexity quite manageable 
results scenario recognition process tested describes surveillance mobile robot bringing objects loaded unloaded human operator 
scene takes place laboratory environment rooms separated optical barriers surveyed cameras 
generated events optical barriers signals event types motion detected cameras event types robot operator 
scenario described situation models hierarchically organised 
normal cycle surveyed incidence occurs system detects happens 
live demonstrations scenario similar run 
compared reasoning system needed perception machine situation recognition system fast limiting factor reactivity average response time event order ms 
demonstrations large number experiments run different sets situations situation models 
goal characterize practical bandwidth proposed algorithms implementation frequency events system able follow accumulating delays 
summarizes system performances set situation models involving event patterns constraints referring context 
fairly complex situation models programmed purpose testing different schemes temporal constraint lattices having significant overlapping terms common event patterns total event patterns 
generated scenarios corresponding sequence events respect temporal constraints situation models 
scenario ran recognition system recorded processing time event 
computed corresponding response time event function variable frequency events account cumulated delays event time lost waiting event 
dynamic environment 
arc working confirmation results complex industrial applications alarm filtering oil plant process monitoring gas turbine 
describes innovative situation recognition system temporal constraint propagation 
proposed representation chosen keep complexity reasonable line processing maintaining sufficient expressiveness practical applications 
algorithms rely extended pre processing carefully designed data structures exhibit performances compatible demanding applications 
proposed system provides interesting functionalities deduction events basis temporal evolutions recognized fly forecast expected events focus attention 
system tested live experiments perception machine 
knowledge time perception system integrates explicitly temporal 
goal extend proposed situation recognition system situation assessment system 
additional functionalities required persistence maintenance database domain axioms models change allow complete deduction non observable events notice partially handled system possible generation event situation recognized sensory data interpretation necessarily hypothetical events situations 
situation assessment system able backtrack manage uncertainty hypothetical reasoning 
ghallab furthermore plan fully investigate terms trade event forecasting propagation postponing solve dynamically opportunistically 
acknowledgments benefited support eec esprit projects tiger 
christophe supported scholarship shell research 
authors workers helped specially implemented ixtet kernel version situation recognition system 
allen allen maintaining knowledge temporal intervals communications acm november 
event calculus proc 
th ijcai 
extension kowalski sergot event calculus proceedings ecal pp 

dean dean time map maintenance yale university computer science department 
dean dean boddy incremental causal reasoning 
dechter dechter meiri pearl temporal constraint networks 
artificial intelligence 
ghallab ghallab managing efficiently temporal relations indexed spanning trees 
proc 
th ijcai detroit ghallab ghallab lacroix thibault representations pour une machine de perception multi 
prc gdr ia marseille france editions 
ghallab scene interpretation model object recognition ieee robotics automation kautz kautz generalized plan recognition 
proc aaai 
kowalski kowalski sergot logic calculus events new generation computing vol 
kumar kumar temporal event conceptualization proc 
th ijcai 
mackworth mackworth freuder complexity polynomial network consistency algorithms constraint satisfaction problems 
artificial intelligence 
automated reasoning hertzberg clipping persistence clipped time maps 
der gmd sankt augustin june 
mcdermott mcdermott temporal logic reasoning processes plans cognitive science volume 
pour la la reconnaissance de situations de ups toulouse 
shoham shoham reasoning change time causation standpoint artificial intelligence 
mit press 
vilain vilain kautz constraint propagation algorithms temporal reasoning proc 
aaai philadelphia pa august 
wilensky planning understanding addison publications advanced book program reading mass 
