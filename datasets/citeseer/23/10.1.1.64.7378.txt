agents just web services considering bdi agents web services ian dickinson hewlett packard laboratories road gifford bristol uk ian dickinson hp com web services software agents share motivation aiming facilitate flexible adaptable systems 
web services increasingly provide active behaviour internet promise user benefits previous associated agent systems 
natural consider relationships agents web services 
argue agents web services distinct 
agents provide distinctive additional capability mediating user goals determine service invocations 
review design choices integrating agents web services illustrate approach reactive planning control web service invocation bdi agents 
keywords web services 
software agents 
agent architectures 
bdi 

increasing flexibility systems common strategy cope complex demanding user requirements 
approaches flexibility derives breaking larger units functionality smaller components interact networks deliver variety user capabilities 
essential part strategy avoid rigid highly interdependent linkages components 
common approaches creating flexible loosely coupled systems asynchronous message passing architectures synchronous remote procedure call rpc architectures 
styles useful characteristics 
software agents strand research development flexible systems extend message passing architectures exhibit properties social reactive proactive autonomous 
idea composing systems collections loosely coupled software agents received considerable attention 
researchers investigated web services initially rpc approach meet similar goals building flexible systems 
motivations web service designers similar agent designers ch 
despite differences technology 
large extent strict rpc metaphor fallen favour due interoperability problems 
example web service interoperability basic profile suggests web services seen accepting xml document defining input returning xml document defining output 
change de emphasises rpc nature interaction procedural nature 
increasing number books journals conferences web service technology suggest accelerating take michael wooldridge department computer science university liverpool liverpool uk csc liv ac uk computing industry 
leads view number questions agent researchers agents web services 
web services agents 
agents enhance web services paradigm 
web service architectures standards tools mature see opportunity revisit assumptions implicit current agent tools platforms 
example infrastructure centric capabilities fipa specification suite adequately covered web service standards 
web services widely deployed suggests web service specifications tested practice 
true agent infrastructures benefit adopting web service technology believe ideas agent research ideally suited enhancing extending service oriented applications 
rest explore complementary issues context bdi agent platform 
remainder structured follows review briefly salient aspects web services section 
section consider current approaches integrating web services agents section show approached problem bdi platform 
conclude lessons learned prototype system 

background web services numerous definitions term web service 
defines web service web service software system designed support interoperable machine machine interaction network 
definition goes specify soap wsdl communication standards preclude web services rest style interface 
don limit consideration soap web services 
service oriented architectures soa describes approach building business applications web services 
large number standards developed describe aspects basic mechanisms exchanging data service directories aspects security message exchange patterns business process description 
common pattern web service implementation familiar rpc styles distributed computing 
service exposes operations operations consume inputs produce outputs 
service communicate web services typically xml meta language encoding inputs outputs 
elements typically described machinereadable specification wsdl encoded xml 
advocates web services emphasise loose coupling service components applications resilient components reusable minimising explicit data control flow dependencies services 
elements service description combined process description determine service operations invoked sequence 
variety approaches exist constructing complex behaviours loosely coupled components 
termed web service choreography 
approaches define varying levels abstraction possible sequences web service invocation dataflows 
semantic web services may observed ws choreography similar approaches concentrate operational aspects web service composition 
choreography add flexibility resilience application architecture imply actual services invoked known discovered developer design time 
situations operational approach inadequate example service type required identity location provisioning service known known design time capability required effect needs achieved identity location service services fulfil need known design time process invoking service complex simple rpc example strongly context dependent requires negotiation 
go standard known services require additional information service invoked 
service sufficiently caller subsequently decides invoke service able 
maximise flexibility descriptions need machine processable possible flexible adaptation circumstances takes place human intervention 
particular adaptations place minimal burden user 
semantic web approach objective termed semantic web services provision semantic web style semantic descriptions services processes 
number semantic web services projects standards initiatives underway space permit complete exploration 
briefly outline prominent technologies owl exemplar semantic web services approach 
owl description web service components service profile describes service process model specifies terms operation service grounding model specifies processes invoke service described 
service profile describes preconditions exist prior service invoked effects occur result invoking service explicit inputs outputs service 
inputs outputs preconditions effects described pre defined owl ontology 
descriptions possible algorithmic approaches including planning construct complex services simpler components depending human programmer 
limitations semantic web services clearly scenarios service descriptions provided semantic web services research provide effective solutions 
example consider supply chain automation problem 
description required materiel certain production process easy imagine designed application semantic descriptions component suppliers ordering estimation processes logistics providers shipping tracking processes ensure smooth production supply 
supply chain manager process able switch suppliers straightforwardly supplier forecasts component shortage delivery channel fails 
semantic descriptions services allow robustness variances interfaces different suppliers services 
open ended scenario presents greater challenges 
section suggested owl help user locate service sells airline tickets airports ii accepts certain type credit card 
speculate user goal may get home time interaction basic operations 
puts strong onus user decompose goals level necessary basic actions may performed web services 
user perform goal decomposition form suitable plan achieving goals unclear automation provided web service genuinely helping person 
user able analyse needs necessary degree simpler easier simply conventional travel web site book trip 
propose putative benefit flexible advanced systems largely contingent increasing automation 
propose benefit delivered users specify goals wish achieve actions wish perform 
software agents natural idiom encoding executing goals software agents 
purpose discussion restrict attention deliberative agents agents symbolic knowledge representation symbolic reasoning achieve behaviour 
particularly interested ways human users interact agents especially agents behave autonomously 
autonomous behaviour shifts basis interaction direct manipulation model delegation model 
advantage deliberative agents approaches key elements user agent interaction example user goals agent strategies explicit representation 
crucially enables objects part dialogue 
user example critique agent strategy achieving outcome refining updating expressed goal 
deliberative agents symbolic structures founded predicate logic represent knowledge 
particular logical formulae stand mental attitudes user agent mental attitudes include beliefs desires preferences forth 
modal operators qualified name actor distinguish say agent beliefs user beliefs 

agents web services different ways consider relationship software agents web services 
drawing published literature identify common themes theme conceptual distinction view see example agents web services conceptually distinct 
view conceptual difference web service agent active building blocks loosely coupled architecture 
architectures engineering problem creating system behaviours active components 
reject position suggest useful distinction web services agents 
propose distinction useful system designers users 
agent able represent mediate proactively act achieve user goals manifest user interface different way non agent components properties 
propose agents necessarily elements system parsimoniously describable terms mental attitudes particularly intention user agent 
suppose wish represent intent user mary wishes goal meet product team paris aim intention structure interactions system user system components 
locus representation intent system 
mary digital travel assistant represent goal subsequently adopt intention assist travel planning 
observable behaviours component holds understands user goals adopt mental attitudes response distinct different deterministic components 
clearly software component represent intention act web service different traditional web services don representing intention view key conceptual difference agents services 
theme bi directional integration second theme literature agents web services interoperate initiating communications 
agents invoke web services vice versa 
greenwood shows clearly feasible web services invoke agent capability providing appropriate wsdl acl mapping place 
view invocation agents web services problematic 
implication web service agent invocation agent expose pre determined behaviours example named operations known parameters 
suppose exposed methods represent fixed deterministic behaviours 
invoking service easier write violates presumption autonomy agent 
clear software component behaves deterministic manner termed agent 
invoked agent fixed deterministic behaviours invoking web service behave agent manner adjust agent autonomous responses 
behaviour web service distinguishable autonomous agent argue regarded conceptually agent service 
model regard web services primitive agents 
agent behave plausibly autonomously respect user current intent expose generic interfaces services delivery message event 
greenwood propose agents exposing capabilities web services adapter translate soap acl requests 
agent registers entries fipa directory facilitator df advertise services available web services adapter 
implies agents advertise capabilities roles procedurally operations perform declaratively describing capabilities 
different approach 
theme agents invoke web services key proposal web service architectures simple atomic services composed workflow form complex composite behaviours 
number researchers explored ai planning compose complex behaviours 
planning performed behalf user meet set goals 
suggests layered view shown 
view agents primarily responsible mediating users goals available strategies plans 
agents invoke design atomic composite web services necessary 
agent composite web services atomic web services representations needed intentions goals strategies plans operations layered view agent ws interactions related approach explored authors seek generalise interface web services specific operations generic operations analogous speech acts 
web service inform operation argument similar role content fipa acl message 
approach broadly follows third theme 
web services invoked agents component behaviours autonomy intent represented agent level 
remainder explore general theme embodied experimental bdi agent platform 

bdi agent platform agent platform open source java implementation combination belief desire intention bdi agent platform semantic web techniques 
particular goal architecture platform easily extensible agent developers 
outline architecture shown 
key extension point service boundary 
original design intent service boundary means add custom behaviours agent written java plug ins 
example incoming event trigger plan delegate handling event gui incorporated plug capability 
service boundary provided natural basis extending internal agent services include external web services 
example correct service binding place invoke action agent script directly call operation web service bind result script variable 
abstraction boundary provides natural place encode know knowledge agent capabilities 
currently rdf knowledge base store local meta knowledge agent capabilities 
set known web services may fixed design time dynamically extended run time 
agents dynamically create web service bindings fetching parsing wsdl service description 
service descriptions order determine services utilise achieve goal satisfy intent agent requires meta data describing available services 
example consider aspect typical knowledge management application 
part application user specify search string locate articles stored systems database 
said user intent perform search terms accurate user specific intent locate document relevant certain task task generating customer bid 
intent satisfy customer rfp locate document intent component goal 
suppose agent access number services including database search service query rewrite service 
query rewrite service number tactics modifying user query example performing wordnet synset expansion narrowing 
agent able offer strategic choices user including choice composite service searching re written query string 
agent know offer composite service user help satisfy document location intent 
agent able determine service including composite services relevant user intent strategically useful meeting user goals describable user user required enacting service key role service description provide metaknowledge agent inform decisions 
wsdl service description describes type signature operations 
example query expansion service takes query string argument produces new query string 
string string type signature 
type signature applies string manipulating operations knowing type signature operation insufficient meta knowledge determine operation relevant current goal 
post conditions service description description precise 
query expansion service state post condition returned string input string assuming suitable ontology levels query generality defined 
kind description provided owl semantic web service description 
leaves open issue generalising query relevant useful tactic offer user 
strategic knowledge fit conveniently owl framework 
current approach encode strategic knowledge directly bdi agent knowledge base 
earlier anonymous reviewer suggested encoding strategic knowledge agent kb simply introduces knowledge acquisition bottleneck design process 
fair criticism serves underline fundamental difficulty 
semantic web services descriptions express context dependent knowledge 
web service useful user goals preferences relatively useless user similar goals context different 
process mapping high level goals services invoke draw knowledge service capability user context 
order remain general web service description specific user goals 
remains area additional research required 
note web services modelling ontology wsmo includes concept claimed encode mapping goal web service 
details definition semantics mediators unclear current version wsmo investigated 
integrating web services bdi agents goal bdi architectures practical reasoning attempt achieve effective computational performance autonomous systems balancing consideration act acting 
bdi agents commit course action represented intention current beliefs world current goals 
order able react changing state world important bdi agent able adopt new intentions drop modify existing ones longer relevant 
typical bdi architecture prs agentspeak agent starting state includes plan library agent uses control behaviour utilising planning principles 
typical practical reasoning approaches intention intention perform plan intention post conditions plan true 
reactive planning complete plan achieve goal constructed priori executed 
library general pre defined defined compile time plans provided agent agent performs plans response perceptions environment 
agent reacts actual conditions world 
principal advantages reactive planning computationally efficient large search space explored require planner available symbolic model possible effects actions initial state world 
contrast principles planning approaches require full knowledge initial world state changes brought performing outline architecture action 
initial state requirement mitigated extent explicitly planning information gathering steps plan remains case planning principles computationally expensive 
bdi agent select course action environment determined incoming messages sensed percepts key issue bdi approaches agent determines possible course action 
prs interpreter proceeds exactly relevant plan follow 
plan relevant step interpreter treats problem solved meta level evaluation choices 
recursion continues single course action selected 
agentspeak rao abstracts plan selection problem pre specified evaluation functions select single event process plan adopt multiple choices 
evaluation functions encapsulate requirement rao offer practical solution representation evaluation functions 
decided adopt recursive approach prs experience creates conceptual debugging difficulties agent programmer 
allowed variable evaluation functions interpreter architecture agentspeak unsatisfactory general 
agent choice action part determined agent current mental state current beliefs desires intentions 
defined decision procedure contained interpreter 
rao evaluation functions agentspeak take agent current mental state parameter 
define agent script language actions modifying current mental state example adopting dropping goal intention 
general problem define strategic knowledge agent select course action converse user terms match user conceptualisation domain 
current experimental approach utilise structured goal language strategic knowledge encoded declarative goal structure 
eagle example approach 
eagle define small number goal refinement operators example subgoals sub goal sequence sub goals perform plan 
goals stored rdf knowledge base augmented user 
example agent may presume achieve goal sub goals order 
user may override reduction ignoring 
crude step allow explore refine user ability influence agent behaviour entering dialogue strategic choices 
particular reason rdf representation encode store goals permit semantic web technologies allow goals goal strategies shared 
investigated detail way mitigate knowledge acquisition problem alluded allow users community share strategies 
particular sharing strategies map pre post conditions newly introduced services general goal conditions related shared upper ontology help agent community quickly integrate new capabilities 
mind uri symbols rdf modelling commitments especially valuable 
particular approach shown effectively argue current semantic web services approaches lack standard means allow agent relate intentions pursuit stated user goals capabilities services 
don argue necessarily owl wsmo extended cover need just currently requirement 
interleaving planning acting reactive planning exhibited practical reasoning agents mixes planning acting 
changes world state combined agent current intention set determine choice action 
reactive planning uses libraries predefined plans activated agent perceptions environment 
reactive planning approach advantages suffer significant drawback actions sideeffects 
interpreter allows chronological backtracking side effect free actions permit backtracking actions side effects 
internal actions side effecting nature action part action description 
web services clear priori operation safe repeat backtrack 
example operation determining weather forecast certain city probably idempotent booking plane ticket 
definition rest style web services get method idempotent general idempotency known 
currently understand owl wsmo allow action idempotency specified service description 
case web service api provided amazon com includes operations 
actions may possible specify compensation action perform agent wishes reverse action 
mean example cancelling non committed transaction transactional system 
general reversing action difficult open research question 
suggest applications predominantly reactive planning approach may require online planning plan ahead committing course action 

discussion central hypothesis explicitly referencing goals intentions provides cogent flexible foundation human assisting agent dialogues 
deliberative agents provide representational tools store manipulate mental attitudes distinguishes software agent complex web service 
web services increasingly deployed units active behaviour web 
shown bdi style agent reactive planning approach mediate representations user agent mental attitudes operational semantics web service 
crucial mediation provision knowledge web services invoked 
current semantic web service descriptions provide necessary knowledge 
particular issue need strategic knowledge assist agent suggest user decisions choices service invoke 
contrast web service composition techniques planning reactive planning requires fewer runtime computational resources require complete model symbolic effects actions world initial state 
reactive planning risk commitment ultimately non viable courses action problematic actions side effecting world 
anticipate agent applications require ability plan ahead time consider courses action performing actions 
attempting reactive planning web service selection highlighted current semantic web service descriptions provide means describe sideeffects failure recovery actions 
experimented explicitly encoded meta knowledge added directly agent knowledge base assist process mapping user highly context dependent goals context independent semantic descriptions service capabilities 
strategic knowledge class object agent knowledge base enlist user assistance adjust agent strategy directly modifying strategy parameters updating original goal 
view crucially important aspect human agent interaction current approach just preliminary step 
encoded rdf owl principle allow strategic knowledge shared members community 
fully investigated possible approach mitigating arguably high cost acquiring strategic knowledge 

little doubt web services part systems landscape foreseeable 
current web services approaches standards provide general infrastructure currently handled agent platforms 
conclude agent software evolve concentrate higher level capabilities integrate web service components highly flexible solutions better meet user needs face increasingly complex computational systems 
view essential role software agents scenario encapsulate user intentions 
essential element evolution determining mechanisms strategic knowledge uses web service relative user goals encoded available 
investigate better means adding strategic knowledge agent platform allow agents automated decisions 
add support directly utilising semantic web service descriptions owl 

wooldridge jennings intelligent agents theory practice 
knowledge engineering review 
vol 


pp 


zimmermann tomlinson perspectives web services springer 

foundation intelligent physical agents fipa 
specification index 

www fipa org specifications inde html 
booth david haas hugo mccabe francis newcomer eric champion michele ferris chris orchard david 
web services architecture 
working group note 
www org tr note ws arch 

simple object access protocol soap 

www org tr soap 
kantor melamed kov information quest dynamic model user information needs 
proceedings nd annual meeting american society information science 
american society information science 

pp 
pp 

rutgers edu ant papers que st quest htm 
fielding taylor principled design modern web architecture 
acm transactions internet technology 
vol 


pp 


christensen curbera meredith weerawarana web services description language wsdl 

www org tr wsdl 
singh huhns service oriented computing wiley 

ws choreography model overview working draft 

www org tr wd ws 

semantic web activity 

www org sw 
pretschner gauch ontology personalized search 
proceedings th international conference tools artificial intelligence 
tai 
ieee computer society 
pp 


wooldridge reasoning rational agents mit press 

agents direct manipulation delegation 
bradshaw ed 
software agents 
aaai press pp 


breese js heckerman kadie empirical analysis predictive algorithms collaborative filtering 
proceedings th conference uncertainty 


greenwood automatic bi directional service integration gateway 
proc 
workshop web services agent engineering 

www com pdf 
schafer konstan borchers sarwar herlocker riedl combining collaborative filtering personal agents better recommendations 
proc 
th national conference ai aaai 
aaai press 
pp 


sirin parsia planning semantic web services 
proc 
workshop semantic web services preparing meet world business applications 

www ai sri com sws sws sirin final pdf 
horrocks reasoning expressive description logics theory practice 
andrei voronkov ed 
proc 
th int 
conf 
automated deduction cade 
springer verlag pp 


pistore bertoli traverso planning monitoring web service composition 
workshop planning scheduling web grid services 

www isi edu workshop final pistore pdf 
gibbins harris shadbolt agent semantic web services 
proc 
twelfth international world wide web conference 
acm 
eprints ecs soton ac uk 
dickinson jena agent framework 

www org 
rao georgeff bdi agents theory practice 
proc 
int 
conf multi agent systems icmas 


singh multiagent systems theoretical framework intentions know communications springer verlag 

world wide web consortium 
resource description framework rdf 

www org rdf 
miller wordnet line lexical database 
international journal lexicography 
vol 


lara roman fensel conceptual comparison wsmo owl 
european conference web services 

www uibk ac papers pdf 
georgeff mike ingrand fran ois 
research procedural reasoning systems final report phase 
sri international 


rao agentspeak bdi agents speak logical computable language 
proc 
th european workshop modelling autonomous agents multi agent world maamaw 
springer verlag 
pp 


ghallab nau traverso automated planning theory practice morgan kaufmann 

sirin nau parsia hendler information gathering planning web service composition 
proc 
third international semantic web conference iswc 
www mindswap org papers iswc pdf 
sycara lewis roberts calibrating trust integrate intelligent agents human teams 
proc 
st annual hawaii international conference system sciences 
ieee 
pp 

