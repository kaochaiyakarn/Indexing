energy driven integrated hardware software optimizations simplepower vijaykrishnan kandemir irwin kim ye microsystems design lab pennsylvania state university university park pa vijay kandemir cse psu edu emergence plethora embedded portable applications energy dissipation joined throughput area accuracy precision major design constraint 
designers concerned optimizing estimating energy consumption circuits architectures software 
research energy optimization estimation focused single components system looked interacting spectrum hardware software 
novelty new energy estimation framework simplepower energy considering system just sum parts concurrently supports compiler architectural experimentation 
design simplepower framework includes transition sensitive cycle accurate datapath energy model interfaces analytical transition sensitive energy models memory bus subsystems respectively 
analyzed energy consumption codes multidimensional array domain domain important embedded video signal processing systems applying di erent compiler architectural optimizations 
experiments demonstrate early estimates simplepower energy estimation framework help identify system energy hotspots enable architects compiler designers focus orts areas 
keywords system energy low power architectures compiler optimizations energy simulator hardware software interaction energy optimization estimation 

current microprocessors going embedded systems need low power design vital 
environments limited battery life power major constraint due concerns circuit reliability packaging costs 
increasing need low power systems motivated large body research processors 
research focuses reducing energy isolated subsystems processor core chip memory system 
focus research insight energy hotspots system evaluate implications applying combination architectural software optimizations energy consumption 
order perform research architectural level power estimation tools provide fast evaluation energy impact various optimizations early design cycle essential 
prototype research tools methodologies exist support high level estimation 
design architectural level energy estimation framework simplepower 
knowledge rst framework capability toevaluate integrated impact hardware software optimizations system energy 
contrast coarse grain current measurement techniques new tool cycle accurate provides ne grained energy consumption estimate processor core currently stage pipelined instruction set architecture isa accounting energy consumed memory bus subsystems 
simplepower leverages simplescalar toolset executes integer subset simplescalar isa 
memory subsystem dominant source power dissipation various video signal processing embedded systems 
existing low power focused addressing problem design energy cient memory architectures power aware software 
orts study uence energy consumption system components fewer consider integrated impact hardware software optimizations 
important toevaluate uence optimizations system energy savings power distribution di erent components system 
study help identify changes dynamic energy consumed cmos circuits scv switching activity lines capacitive load supply voltage 
consider impact leakage power 
system energy hotspots enable architects compiler designers focus orts addressing areas 
study ambitious goal speci cally questions energy consumed di erent parts system 
possible evaluate energy distribution fast accurate fashion di erent applications 
ect state art compiler optimizations system energy consumption individual system component 
application optimizations cause change energy hotspot system 
impact power performance oriented memory system modi cations energy consumption 
compiler optimizations uence ectiveness modi cations 
impact advances process technology energy breakdown system 
emerging new technologies embedded drams result major paradigm shifts focus architects compiler writers 
knowledge prior ort extensively studied issues uni ed framework entire system 
sets answer questions codes drawn multidimensional array domain domain important signal video processing embedded systems 
rest organized follows 
section presents design energy estimation framework simplepower 
section presents distribution energy di erent system components set benchmark codes 
uence performance oriented compiler optimizations system energy examined section 
section investigates uence energy cient cache architectures system power 
section studies implications emerging memory technologies system energy 
section summarizes contributions outlines directions research 

simplepower energy estima tion framework answering questions posed section requires tools allow architect compiler writer estimate energy consumed system 
energy estimation framework developed purpose simplepower depicted 
purposes system consisting processor core chip instruction data caches chip memory interconnect buses core caches caches chip memory 
need framework tools allow estimate energy consumed modules system 
analytical models memory components successfully researchers study power source code simplescalar gcc high level compiler optimizations simplescalar assembly low level compiler optimizations optimization module simplepower main memory icache dcache cache bus simulator id exe mem wb core simplescalar gas rtl power estimation interface switch cap tables object file new tables simplescalar rt level optimizations simplepower output module energy statistics simplepower executables core memory bus energy energy energy simplepower energy estimation framework 
consists compilation framework energy simulator captures energy consumed stage pipeline instruction set architecture memory system buses 
tradeo di erent cache memory con gurations 
models attempt capture analytically energy consumed memory address decoder memory core read write circuitry sense ampli ers cache tag match logic 
models accommodate low power cache memory optimizations cache block bu ering cache bit line segmentation analytical models estimate energy consumed access accommodate energy di erences sequences accesses 
example energy consumption impacted switching activity sequential memory accesses may exhibit di erent address decoder energy consumption 
simple analytical energy models memories proved quite reliable 
approach estimate energy consumed memories 
energy consumption buses depends switching activity bus lines interconnect capacitance bus lines chip buses having larger capacitive loads chip buses 
switching activity captured energy model refer technique transition sensitive approach contrast example analytical model memory subsystem 
energy model simplepower system buses transition sensitive 
wide variety proposed reduce system level interconnect energy ranging circuit level optimization low swing charge recovery buses architectural level optimizations segmented buses algorithmic level optimizations signal encoding encoding data way reduce switching pads energy activity buses 
technology scales deep sub micron chip sizes grow multiprocessor chip architectures norm system level interconnect structures account larger larger portion chip energy delay 
include energy consumed buses memory system energy speci ed 
nal system module considered processor core 
support architecture compiler optimization research posed section energy estimation core transition sensitive 
point design process order support experimentation processor core speci ed architectural level rtl level 
structural capacitance information part gate level design description obtained time consuming logic synthesis interconnect capacitance information part design description obtained time consuming vlsi design di cult obtain capacitance values needed estimate energy consumption 
simplepower solves dilemma prede ned transition sensitive models functional unit estimate energy consumption datapath 
approach rst proposed mehta irwin owens 
transition sensitive models contain switch capacitances functional unit input transition obtained vlsi layouts extensive hspice simulation 
functional unit models built reused di erent architectural con gurations 
simplepower time capturing energy consumed core datapath 
developing transition sensitive models control path extremely di cult 
way model control path power analytically 
case simple power processor core energy consumed datapath larger energy consumed control logic due relatively simple control logic 
architecture simulated simplepower integer isa simplescalar stage risc pipeline 
functional unit energy models technology developed various units including ip ops adders register les multipliers alus barrel multiplexors decoders 
simplepower outputs energy consumed execution cycle 
mines transition sensitive energy models provided functional unit sums estimate energy consumed instruction cycle 
size energy tables large number inputs bit dependent functional units increase units registers switching activity independent small table characterizing ip op su cient 
solve table size problem partition functional units smaller sub modules 
example register le partitioned major sub modules decoders word line drivers write data drivers read sense ampli ers cell array 
energy tables constructed submodule 
example entry table indexed pair current previous register select address bits developed register le decoder component 
table shared decoders register le 
write data drivers read sense ampli ers word line array cells submodules energy tables quite small 
port register le power estimation approach took seconds input transition opposed seconds required circuit level simulation hspice 
machine running hspice simulation simulator sun ultra mbytes memory 
transition sensitive modeling approach validated accurate average error rate actual current measurements commercial dsp architecture 
mentioned earlier simplepower currently uses combination analytical transition sensitive energy models memory system 
energy memory system energy consumed instruction cache icache data cache dcache analytical model validated accurate error conventional cache systems 
extended model consider energy consumed writes parameterized cache models capture di erent architectural optimizations 
includes energy consumed address data buses icache dcache datapath 
evaluated monitoring switching activity bus lines assuming capacitive load pf line 
energy consumed pads external buses main memory caches evaluated similarly capacitive load pf line 
main memory energy model assumes main memory access energy refered em rest data cy sram chip 
simplepower framework models uence clock components architecture assumes clock gating implemented capture energy consumed clock generation clock distribution network 
existing clock energy estimation models require clock loading physical dimensions design obtained physical design di cult estimate absence structural information 
realize important additional component system energy consumption plan address research 

energy distribution emergence energy consumption critical constraint system design essential identify energy hotspots system early design cycle 
signi cant estimating optimizing system power 
focused estimating optimizing speci components system capture integrated impact circuit architectural software optimizations 
existing high level rtl energy estimation techniques provide coarse grain measurement resulting error relative transistor level estimator 
contrast simplepower provides integrated cycle accurate energy estimation mechanism captures energy consumed program source input size kb instruction count dcache rates tomcatv specfp nasa btrix specfp nasa mxm specfp nasa vpenta specfp adi livermore aps perfect club wss perfect club psmoo tfs perfect club eflux tfs perfect club wss perfect club table programs experiments 
dcache rates direct mapped caches byte line sizes 
instruction count dynamic instruction count 
energy consumed datapath components register file pipeline registers arithmetic units datapath muxes tomcatv btrix mxm vpenta adi psmoo eflux energy consumed pipeline stages tomcatv btrix mxm vpenta adi psmoo eflux energy distribution major energy consuming data path components pipeline stages 
memory pipeline stage energy consumption include icache dcache 
energy consumed memory system components tomcatv btrix mxm vpenta adi psmoo eflux buses icache dcache pads energy consumed memory system components tomcatv btrix mxm vpenta adi psmoo eflux energy distribution memory system way dcache way dcache 
energies consumed accessing main memory instructions data respectively 
fetch decode execute memory writeback buses icache dcache pads original unoptimized optimized datapath memory system energy datapath memory system energy energy mj energy mj mj way way way way mj way way way way tomcatv btrix mxm vpenta adi psmoo eflux table energy consumption various dcache con gurations 
cases direct mapped icache bytes line sizes writeback policy core technology 
di erent components system 
section energy characteristics benchmark codes written language shown table multidimensional array domain 
important characteristic codes access large arrays nested loops 
applications run signal video embedded processing systems exhibit similar characteristics 
simplepower currently works integer data types oating point data accessed codes converted operate integer data 
particular memory access patterns terms temporal spatial locality change 
order limit simulation times input sizes benchmarks run completion 
experimental cache sizes study relatively small focus resource constrained embedded systems 
energy consumed system divided parts datapath energy memory system energy 
ma original codes fortran converted paying particular attention original data access patterns 
jor energy consuming components datapath register le pipelined registers functional units alu multiplier divider datapath multiplexers 
memory system energy includes energy consumed icache dcache address data buses address data pads chip main memory 
table provides energy consumption mj benchmarks datapath memory system various dcache 
cases direct mapped icache bytes dcache icache writeback cache policy core technology 
single datapath energy value di erent con gurations due cient reduction techniques clock gating pipeline registers employed datapath 
aggressive clock gating assumed simplepower energy consumed stall cycles observed insigni cant simulations 
example tomcatv expends maximum total datapath energy stalls cache con gurations studied 
observe datapath energy consumption ranges mj mj various codes determined dynamic instruction length switching ac energy consumed datapath components register file pipeline registers arithmetic units datapath muxes tomcatv btrix mxm vpenta adi psmoo eflux energy consumed pipeline stages tomcatv btrix mxm vpenta adi psmoo eflux energy distribution major energy consuming data path components pipeline stages applying code transformations 
memory pipeline stage energy consumption include icache dcache 
tivity datapath 
compared memory system energy datapath energy order smaller magnitude 
result corroborates need extensive research optimizing memory system power 
zoom major energy consuming components datapath 
observed pipeline registers register le form energy hotspots datapath contributing datapath energy 
extensive pipelining dsp data paths improve performance facilitate circuit optimization scaling exacerbate pipeline register energy consumption 
larger multiple port register les required support multiple issue machines increase register le energy consumption 
core energy distribution relatively independent codes analyzed 
impacted simulating integer data operations 
energy consumed stage pipeline calculated simplepower shown 
decode stage energy include control logic energy consumption modeled simplepower 
pipeline register main energy consumed memory stage icache dcache energy consumption included 
execution stage pipeline contains arithmetic units major energy consumer entire datapath register le energy consumption split decode writeback stages 
memory system energy consumption generally reduces decrease capacity con ict misses dcache size associativity increased see table 
fty cases move way way dcache memory system energy consumption increases 
similar trend observed fteen cases move 
moving larger cache size higher increases energy consumption access 
cases access cost amortized energy reduction due fewer number accesses main memory 
course numbers misses hits equal sophisticated cache leads lower energy consumption 
shows energy distribution mem fetch decode execute memory writeback ory system components way dcache con guration main memory energy consumption dominates due large number dcache misses 
btrix data accesses instruction smallest 
majority instruction accesses satis ed icache resulting signi cant icache energy consumption btrix exhibits relatively poor instruction cache locality thenumber icache misses times signi cant benchmark resulting increased energy consumption main memory 
increase data cache size majority data accesses sati ed data cache 
contribution icache dcache signi cant observed 
simplepower provides comprehensive framework identifying energy hotspots system helps hardware software designers focus addressing bottlenecks 
rest evaluates software architectural optimizations targeted addressing energy hotspot system energy consumed data accesses 

impact compiler optimizations evaluate impact compiler optimizations energy consumption level compilation framework loop iteration space data array layout transformations 
study framework proposed enhanced iteration space tiling loop fusion loop distribution loop unrolling scalar replacement 
compiler able apply suitable combination loop data transformations input code optimization selection criteria similar 
enhanced framework takes input code written applies optimizations primarily improve temporal spatial data locality 
tiling technique employed similar explained selects suitable tile size code input size cache con guration 
loop unrolling algorithm carefully weighs advantages increasing register reuse disadvantages larger loop nests selecting optimal degree unrolling similar spirit technique discussed 
energy consumed memory system components tomcatv btrix mxm vpenta adi psmoo eflux buses icache dcache pads energy consumed memory system components tomcatv btrix mxm vpenta adi psmoo eflux energy distribution memory system applying code transformations way dcache way dcache 
energies consumed accessing main memory instructions data respectively 
studies showing ectiveness optimizations performance impact energy consumption di erent parts computing system remains largely 
study important optimizations popular embedded systems keeping pace increased high level languages compilation techniques systems 
detailed analysis energy variations brought techniques architects see components energy hotspots develop suitable architectural solutions account uence optimizations 
expectation compiler optimizations particular targeted improving data locality reduce energy consumed memory subsystem 
side ect reducing number chip data accesses satisfying majority cache 
impact energy consumed datapath hand clear 
observed section energy consumed memory subsystem higher consumed datapath 
true unoptimized codes due large number chip accesses interesting see holds locality enhancing compiler optimizations 
table shows resulting datapath memory system energy consumption result applying compiler transformations 
interesting observation optimizations increase datapath power codes btrix 
increase due complex loop structures array subscript expressions result optimizations 
optimizing btrix compiler linear loop transformations transformations contain loop permutation loop reversal loop skewing datapath energy increase 
observe reduction memory system energy datapath power signi cant 
example optimizations mxm benchmark datapath power constitutes system energy way cache con guration compared optimizations 
fact datapath power buses icache dcache pads comes larger consumed memory system consider energy expended instruction accesses 
signi cant optimizations targeted data cache performance 
important continue look optimizing datapath energy consumption focus memory system optimizations 
compiler optimizations little ect energy distribution datapath components pipeline stages shown figures 
energy distribution shown memory system shows distinct di erences unoptimized original versions see 
optimized case relative contribution main memory signi cantly reduced due data cache hits 
observe contribution icache dcache energy consumption signi cant optimized codes 
energy cient icache dcache architectures important executing compiler optimized codes 
ectiveness architectural circuit techniques design energy cient caches discussed section 
mentioned earlier normally compiler automatically selects suitable set optimizations code cache topology 
doing uses heuristics guarantee arrive optimal solution 
addition automatic optimization selection implemented directive optimization scheme relies user provided directives depending applies necessary loop data transformations 
forced compiler compiler directives apply combinations mainstream loop optimizations loop unrolling tiling linear loop transformations mxm benchmark 
results reveal best compiler transformation energy perspective varies cache con guration 
observation compiler writers embedded systems aggressive optimizations may lead minimum execution times necessarily result best code energy point 
memory energy joules way way way way original loop opt unrolled tiled loop opt unrolled loop opt tiled tiled unrolled tiled loop opt unrolled way way way way energy distribution memory system di erent dcache con gurations result di erent code transformations 
original unoptimized program loop opt denotes code optimized linear loop transformations unrolled denotes version loop unrolling tiled version tiling applied 

energy efficient cache archi study cache energy consumption relatively new optimization techniques broadly classi ed circuit architectural 
main circuit optimizations include activating portion cells bit dbl word lines reducing bit line swings pulsed word lines isolated sense ampli ers ibl charge recycling bu er 
application optimizations independent code sequences 
architectural techniques proposed optimizations memory system 
techniques introduce new level memory hierarchy cache processor datapath 
instance 
proposed accessing small lter cache accessing rst level cache 
idea reduce energy consumption avoiding access larger cache 
negative impact performance result signi cant 
block bu ering bb mechanism uses similar idea accessing accessed bu ered cache line accessing cache 
circuit optimizations ectiveness architectural techniques uenced application characteristics compiler optimizations 
instance software techniques improve cache line grouping successively accessed data 
cache bu ering scheme exploit improved locality 
increasing spatial locality cache line software techniques save energy 
detailed study interactions software optimizations ectiveness energy cient cache architectures useful compiler writers hardware designers 
capture impact circuit optimization energy estimation framework measured uence applying di erent combinations circuit optimizations di erent layouts kbits sram hspice simulations 
observed energy consumed reduced average compared unoptimized sram applying ibl ibl dbl optimizations 
conservatively utilize reduction achieved ibl scheme capture ciency circuit optimizations analytical model memory system energy 
refer ibl scheme ibl rest convenience 
studied interaction compiler optimizations ectiveness bb mechanism 
order study interaction dcache enhanced include bu er accessed set cache blocks block bu er way 
code exhibits increased spatial temporal locality ectively exploit bu er 
de ne relative energy savings ratio optimized code opt unoptimized code orig hardware optimization hopt relative energy savings ratio hopt orig orig orig energy consumed due execution optimized unoptimized code respectively hopt corresponding values hopt 
measure enables evaluate ectiveness compiler optimizations exploiting hardware optimization technique 
shows relative energy savings ratio bb 
observed block bu er mechanism ective reducing energy optimized codes eflux 
due better spatial temporal locality exhibited compiler optimized codes 
improved locality results hits block bu er 
average optimized codes achieve energy savings relative original codes way cache bb 
reason optimized eflux code take better advantage bb unoptimized code accesses temporal locality unoptimized code better clustered leading increased data reuse block bu er 
applied combination ibl bb executed optimized codes nd combined ect circuit architectural software optimizations memory system energy 
observed dcache energy consumption reduced direct mapped way cache con guration 
architectural circuit techniques working reduce energy consumption highly optimized codes signi cantly 
bb ibl optimizations ective reducing energy consumed dcache important impact memory energy reduction 
memory system energy reduces direct mapped way cache con guration see 
investigated uence bb ibl optimization dcache due reduction energy main memory access em result emerging technologies embedded dram 
shows combined bb ibl technique reduces memory system energy new tech relative energy savings optimized unoptimized codes tomcatv btrix mxm vpenta adi psmoo eflux relative energy savings optimized unoptimized codes relative energy savings ratio dcache optimized code unoptimized code bb way way 
reduce access energy order magnitude em compared reduction current technology em 
simplepower similarly evaluate uence new technologies cient techniques bb energy consumed system individual component particular 
evaluated combination way prediction cache bb mechanism 
way prediction caches address longer cycle time associative caches compared direct mapped caches 
prior ort focussed way prediction caches addressing performance problem energy ciency cache architectures evaluated inoue 
mru algorithm predicts probes single way rst 
prediction turns fail remaining ways accessed time cycle 
refer technique mru scheme caches mru caches 
noted mru caches increase cache access cycle time 
focus energy estimation optimization investigating energy performance tradeo study ectiveness combining di erent architectural techniques optimize system energy evaluate impact software optimizations enabled optimizing compiler mru prediction 
studied energy savings obtained mru caches way associative cache con gurations 
observed optimized codes bene mru scheme obtain savings original code average 
increased locality optimized codes increases number successful probes predicted way mru cache 
nd mru scheme reduces dcache energy average optimized codes compared conventional way associative caches see 
incremental addition bb ibl provided additional energy reduction respectively 
shows energy savings entire memory system mru bb ibl applied incrementally order 
relative energy savings optimized unoptimized codes tomcatv btrix mxm vpenta adi psmoo eflux tomcatv btrix mxm vpenta adi psmoo eflux relative energy savings ratio dcache optimized code unoptimized code mru way 
study section nd optimized codes cient reducing number costly terms energy accesses main memory ective energy cient architectural mechanisms caches bb 
nd incremental bene ts applying bb scheme mru cache signi cantly smaller compared techniques individually 
designer similar early energy estimates provided simplepower perform energy cost performance tradeo new energy cient techniques 

implications energy efficient memory systems emerging new technologies combined energy cient circuit architectural compiler techniques reducing memory system energy potentially create paradigm shift importance energy optimizations memory system datapath units 
consider uence changes energy consumed main memory access em 
changes eminent new process technologies reduction physical distance main memory datapath 
table shows memory system energy di erent values em di erent cache organizations optimized codes 
note em value far 
lowest em value experiment section corresponds dcache energy consumption tomcatv btrix mxm vpenta adi psmoo eflux base bb ibl dcache energy consumption tomcatv btrix mxm vpenta adi psmoo eflux dcache energy consumption optimized codes bb ibl way way 
memory system energy consumption tomcatv btrix mxm vpenta adi psmoo eflux base bb ibl memory system energy consumption tomcatv btrix mxm vpenta adi psmoo eflux memory system energy optimized codes bb ibl way way 
memory system energy tomcatv btrix mxm vpenta adi psmoo eflux base bb ibl memory system energy tomcatv btrix mxm vpenta adi psmoo eflux memory system energy optimized codes bb ibl way em em base bb ibl base bb ibl base bb ibl data cache energy consumption tomcatv btrix mxm vpenta adi psmoo eflux base mru mru bb mru bb ibl memory system energy consumption tomcatv btrix mxm vpenta adi psmoo eflux energy consumption combination mru bb ibl techniques applied way associative cache con guration base dcache memory system 
magnitude energy rst level chip cache access current technology 
recall datapath energy consumption optimized mxm psmoo codes mj mj respectively see table 
considering fact large amounts main memory storage capacity coming closer cpu expect see em values lower em 
energy consumed datapath larger energy consumed memory 
example em way cache energy values datapath larger memory system mxm 

need energy cient architectures critical proliferation embedded devices 
increasing complexity emerging systems chip paradigm essential decisions early design cycle help dene design parameters eliminate incorrect design paths 
study introduced comprehensive framework provide early energy estimates architectural level 
uniqueness framework captures integrated impact hardware software optimizations provides ability system individual component isolation 
tried answer questions raised section framework 
major ndings research transition sensitive cycle accurate architectural level approach provide fast compared circuit level simulators relatively accurate estimate energy consumption datapath 
example register le energy estimates simulator circuit level simulation 
energy hotspots datapath identi ed pipeline registers register le 
consume datapath energy executing original unoptimized codes 
datapath energy order magnitude memory system energy multidimensional array codes 
base mru mru bb mru bb ibl main memory energy consumption accounts system energy small cache con gurations executing unoptimized codes 
application highlevel compiler optimizations signi cantly reduces main memory energy causing dcache icache datapath energy contributions signi cant 
example contribution datapath energy system energy way dcache increases benchmark mxm optimized 
improved spatial temporal locality optimized codes useful reducing accesses main memory exploiting energy architectures better unoptimized codes 
optimized codes saved times energy way predicting cache scheme compared executing unoptimized codes 
save energy block bu ering 
emerging technologies coupled combination energy cient circuit architectural compiler optimizations shift energy hotspot 
order magnitude reduction main memory energy access possible technology datapath energy consumption larger memory system energy executing optimized mxm code way dcache 
observed compiler optimizations provided signi cant energy savings entire system 
simplepower framework evaluating ect high level algorithmic architectural compilation trade energy 
observed energy cient architectures reduce energy consumed highly optimized code signi cantly fact better unoptimized codes 
understanding interaction hardware software optimizations system energy gained help architects compiler writers develop energy cient systems 
looked small subset issues respect studying integrated impact hardware software optimizations energy 
lot issues ripe research 
interaction algorithmic selec con guration memory energy mj way way way way con guration memory energy mj way way way way mxm psmoo table impact di erent em values total memory system energy consumption optimized mxm psmoo 
tion low level compiler optimizations low power memory structures addressed 

authors anonymous reviewers helped improve 
sponsored part nsf mip sun microsystems intel 

nicol 
high performance dsps hot 
proceedings international symposium low power electronics design pages august 
panda oh edwards 
emerging power management tools processor design 
proceedings international symposium low power electronics design pages august 
burger austin 
simplescalar tool set version 
technical report computer sciences department university wisconsin june 
calder grunwald emer 
predictive sequential associative cache 
proceedings second international symposium high performance computer architecture pages 
carr guan 
unroll jam uniformly generated sets 
proceedings th international symposium microarchitecture research triangle park nc december 

custom memory management methodology exploration memory organization embedded multimedia system design 
kluwer academic publishers june 
chandrakasan brodersen 
low power digital cmos design 
kluwer academic publishers 
chen vijaykrishnan irwin 
clock power issues system chip designs 
proceedings annual ieee cs workshop vlsi pages 
chen owens irwin 
validation architectural level power analysis technique 
proceedings design automation conference page june 
inoue murakami 
way predicting set associative cache high performance low energy consumption 
proceedings international symposium low power electronics design pages 
irwin vijaykrishnan 
energy issues multimedia systems 
proceedings workshop signal processing systems pages october 
itoh sasaki 
trends low power ram circuit technologies 
proceedings ieee pages vol 

april 

analytical energy dissipation models low power caches 
proceedings international symposium low power electronics design page august 
kandemir choudhary ramanujam banerjee 
improving locality loop data transformations integrated framework 
proceedings st international symposium microarchitecture pages december 
kessler lebeck hill 
inexpensive implementations self associativity 
th annual international symposium computer architecture 
kin gupta mangione smith 
lter cache energy cient memory structure 
proceedings th annual international symposium microarchitecture pages 
li henkel 
framework estimating minimizing energy dissipation embedded hw sw systems 
proceedings design automation conference pages 
liao 
code generation optimization embedded digital signal processors 
phd thesis dept eecs mit cambridge massachusetts june 
liu 
power consumption estimation cmos vlsi chips 
ieee journal solid state circuits page june 
mehta owens irwin 
energy characterization clustering 
proceedings design automation conference page june 
muchnick 
advanced compiler design implementation 
morgan kaufmann publishers san francisco california 
integrating dram microprocessor 
ieee micro november december 
roy johnson 
software design low power 
nato advanced study institute low power design deep sub micron electronics august 

chakrabarti 
memory exploration low power embedded systems tr 
technical report arizona state university 
su despain 
cache designs energy ciency 
inproceedings th hawaii international conference system sciences january 
tiwari malik wolfe lee 
instruction level power analysis optimization software 
journal vlsi signal processing systems vol 
august 
wolf maydan chen 
combining loop transformations considering caches scheduling 
proceedings annual international symposium microarchitecture page december 
wolfe 
high performance compilers parallel computing 
addison wesley publishing 
