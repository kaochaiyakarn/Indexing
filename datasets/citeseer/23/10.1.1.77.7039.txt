romero bryant eds 
proc 
ppig pages metaphors program space action society java alan blackwell university cambridge computer laboratory william gates building cambridge cb fd uk alan blackwell cl cam ac uk 
corpus analysis standard java documentation revealed range conceptual metaphors shared library authors users packages java util java bean 
metaphors included expected mental models internal program behaviour consistent spatial image world material properties flows 
surprisingly program components metaphorically understood actors beliefs intentions working social relationships 
mechanical imperative models mathematical declarative ones widespread bases conceptual models programming social entities act proxies developers 
may significant implications design new programming languages environments 

people write computer programs kind understanding happen inside computer runs program 
mental model derived textbooks conversations programmers commonsense interpretation language semantics system documentation 
comes just mental models users technical systems certainty programmer mental model program behaviour partially resemble expert computer scientists originally designed language 
order improve usability programming systems designers need understand nature mental model users program behaviour hopefully knowledge assist learning improve user interface design modify language specification 
great deal previous research ppig investigated mental models programs students may professional programmers user programmers 
approaches focused program execution model way understood user interface programming environment 
similar concern addresses different aspect programming environment different means communicating programmer 
virtual machines execution models programming language semantics addresses basis mental models standard component libraries 
expertise particular programming language th workshop psychology programming interest group university sussex september www ppig org blackwell increasingly depends understanding application libraries studies focused usability libraries apis 
far am aware systematic study investigated mental models programming libraries 
topic clearly relevant improving usability programming environments 
offers new perspective ecology user programmers mental models wide range people write libraries including open source developers professional technical authors specialist engineers 
underlying concepts new programming language relatively coherent having developed single person 
contrast extensive libraries language java written large community developers represent collective individual design 

conceptual metaphors basis mental models research method applied study originally developed field cognitive anthropology widely applied linguistics education psychology philosophy fields 
george lakoff mark johnson book metaphors live analyses structures vocabulary ordinary language order identify underlying conceptual metaphor schemata 
typical example analysis observe phrase confidence rising refer literally climbing stairs riding balloon metaphor employing common schema increase upward motion conceptual metaphor literature schema conventionally identified typesetting small caps 
everyday language rely metaphors physical motion space body conceptual metaphor analysis reveals schemata derived social relations experience 
works published field conceptual metaphor studies lakoff johnson seminal book 
typical survey including case studies advice research methods cameron low 
hci researchers best known applied example probably analysis desktop metaphor tim rohrer professional philosopher specializing conceptual metaphor 
substantial analysis relationship conceptual metaphor theory user interface metaphor promoted hci forthcoming 
usual method conceptual metaphor research take corpus human discourse textual oral transcript code utterance literal meaning vocabulary 
term literal treated caution language evolved layers dead metaphor 
analysis depends implicit hypothesis 
example hypothesis abstraction traced visuo spatial image image schematic view analyst familiar abstraction consider archaic derivations word may unknown modern user 
text paragraph contains examples depend originally means hang means pull away 
justification mining vocabulary degree problematic ppig university sussex www ppig org blackwell claiming represent mental models user avoided extreme archaic interpretations study 

method study study reports conceptual metaphor analysis java documentation 
original intention identify extent spatial imagery descriptions computational abstraction java libraries motivated 
method influenced spatial imagery hypothesis shall seen main findings support hypothesis 
corpus analysis java documentation javadoc distributed standard sun java sdk release 
version sdk java platform standard edition 
full documentation release comprises mb html text necessary select subset initial study 
motivated spatial imagery hypothesis wished focus fundamental computational models everyday java programming avoid functions expect visual spatial images 
example code awt windowing toolkit package expected describe images spatial layout screen 
chose focus packages express java computational model highly familiar java programmers applet package beans package util package 
java applet package simple including class containing methods plus interfaces 
degree obsolete programmers swing equivalent useful providing fairly pure description basic architectural concepts java independent graphics management considerations 
total documentation java applet lines 
pilot corpus order develop coding procedure packages 
java beans package somewhat larger including classes interfaces exception types 
provides contemporary view java system architecture programmers day 
documentation java beans totals lines 
coded corpus hand order ensure terminology seen interpreted context 
java util package largest frequently java distribution 
includes classes interfaces exception types 
documentation totals lines 
analysed larger corpus automatically techniques informed manual analysis smaller corpora 
coding technique main objective analysis phase inspect characteristic vocabulary javadoc authors order identify candidates conceptual metaphors 
involved collating word sentence documentation apart ppig university sussex www ppig org blackwell conjunctions tense markers grammatical elements english 
pilot java applet corpus resulting vocabulary surprisingly small unique words elimination alternate word word categories described results section highly 
wished focus natural language descriptions program behaviour analyse identifier names 
study identifier names complementary study 
omitted descriptions application domains aspect program involving interface external world 
coded remaining sentence including introductory description package class descriptions methods variables interfaces exceptions parameters 
appeared documentation javadoc conventions including heading terms repeated continuously class method 
javadoc generated automatically comments program source code assumed reveal mental model programmers implemented java libraries wrote original comments 
course main documentation java product release assume edited professional editors order improve consistency usability ordinary java programmers 
evident example repetition conventional phrases parameter documented context dozen different methods 
coding manually coded single occurrence repeated passage 
easy automated third phase analysis identify ignore repeated texts 
volume text considered third phase sufficient local repetition significant effect relative word frequency 
pilot phase expecting necessary read past occurrences java language keywords 
fact seldom appeared 
apparent idiom javadoc writing heavily influenced conventional vocabulary computer science textbooks especially describing object oriented software design 
second third analysis phases considered jargon separately vocabulary firstly frequent secondly nature idiom means may fully interpreted writers readers 
conceptual metaphor analysis take interest idiom surprising obviously synthetic summarise content 
manual coding java beans package resulted collection unique terms 
obtained reading lines documentation sentence time identifying word grammatical element part conventional java jargon isolated pilot phase counting occasions term repeated package 
explained words duplicated phrases sentences counted appeared 
common duplications included documentation slightly varying constructors single class certain standard parameters repeatedly documented context different methods 
automated coding java util third phase provided larger corpus data verify results second phase 
automated ppig university sussex www ppig org blackwell coding brought disadvantages possible decision word context appeared 
words documentation files uniquely identified counted resulting list unique words extracted line corpus 
basic grammatical elements eliminated list compound words assumed identifiers application domain entities geographic locations calendar time terminology mathematical terms financial terms 
remaining words sorted collapsed combine different prefixes common root word 
final list analysis comprised unique terms including categories explicitly counted phases example word class appears times documentation java util word element appears times 
corpus included homonyms verb turn rotation noun turn alternation automated analysis phase distinguish proportion times meaning 
coding simply definition appearing standard dictionary long consistent computational domain 
judgments checked dual coding problematic cases discussed colleagues 
discussed may weaken results consistent common practice conceptual metaphor research 

results fig 

coding showing total occurrences dark blue bars left axis individual words light yellow bars right axis category results discussed broad categories word classification 
categories shown indicates relative size category ppig university sussex www ppig org blackwell largest corpus java util 
follow category size compared different statistics 
shown left axis shows total number times word category appears corpus 
common words appear frequently expect approximation zipf distribution comparisons frequency logarithmic scale 
left hand axis calibrated log scale 
second statistic number different word roots included category 
see example small number words context category appear frequently corpus 
statistics interpreted giving indication predominance occurrences richness different words respective conceptual metaphors 
reviewer noted similar measures known type token ratios studied statistical linguistics 
coding categories shown broken sections unfortunately different order appear axis 
discussion number conceptual metaphors 
narrative description qualitative reading second phases analysis 
quantitative indications predominance richness metaphor third phase 
conventional terminology programming fig 

occurrences conventional descriptions computation action nouns appeared sentences javadoc identifiers domain entities analysed explained reveal general concepts program behaviour 
remaining nouns removing categories exclusively highly conventional idiomatic jargon terms java textbook 
terms highly recognisable computer scientist nouns ppig university sussex www ppig org blackwell string stream type object instance element member parameter constant event exception adjectives public static void 
keywords java keywords languages easily chosen keywords designer java 
technical terms precise definitions documentation writer little choice correct term 
frequent conventional standardized jargon regular technical mathematical terms function factor addition enumerate 
addition programming mathematical jargon categories vocabulary specialized highly conventional computing discourse 
quite conventional describe algorithms processing data structures consist sequences insert alternate arrangements pair allocate merge grammars syntax clause 
technical conventions analysed 
frequent dialectical terminology required describe complex logical philosophical matters english explicit example 
possible analyse underlying conceptual metaphors philosophical discourse results specific bearing mental models programming grouped category mathematical programming jargon simply conventional terminology expect find corpus particular bearing main hypotheses research 
metaphors action behaviour software described terms actions performed components program 
analysis generic action operate perform effect activity description include importance significance action typical important optional potential likelihood occur certain impossible nature consequences action terms generic change state terminate new old modify start create 
described conceptual metaphor components agents action causal universe 
causal nature software components programs means individual histories internal state described changing course time regular immediate programs operate historical time 
furthermore effects action causal universe discrete able counted compared measured requiring descriptions quantity large 
program state measured quantitative terms 
description program behaviour terms action change may unsurprising 
note 
internal program operation easily described conventions set operations declarative constraints actions causality state change 
object oriented programming paradigm supports imperative declarative specification styles documentation writers choose define ppig university sussex www ppig org blackwell behaviour declarative style 
example pane study natural specification style children regular declarative specifications behaviour descriptions specific actions 
frequency metaphors action suggests professional programmers may better served combination declarative imperative specification styles 
social metaphors fig 

occurrences social mental metaphors surprising finding early phases analysis occasions program behaviour described social terms reconcile collude accompany 
classes methods java libraries described associating interacting new components implemented person reading documentation 
underlying conceptual metaphor described components members society 
mechanisms society mirror imitate range human society 
indication example components participate democratic decision making described infrequently major finding 
significant findings descriptions economic activity distribute deliver obtain suggesting components trade data 
metaphorical society software components highly structured described terms legal constraints authority structures impose permit contract violate components subject legal constraints 
society relies communication members components share wide range human communicative behaviour 
relatively frequent description interaction components speech acts instruct query offer advise suggesting conceptual metaphor method calls speech acts 
nature structure information communicated ppig university sussex www ppig org blackwell limited technical terminology uses wide range communicative styles refer describe indicate represent say components communicative intent 
mentalistic metaphors systems partitioned components main objectives partitioning achieve information hiding 
described interpreted javadoc authors components far containers information cognitive agents having beliefs intentions 
information component available described terms knowledge belief interpret consider assume 
basis knowledge components able choose courses action described intend desire 
suggest component beliefs intentions 
activity component concerned gaining access information 
mentalistic perspective described terms observation measure observe recognize scan 
components observe seek information execution environment 
agents intentions action component evaluated terms normally restricted descriptions human actors fair malevolent graceful components subject moral aesthetic judgment 
physical metaphors fig 

occurrences spatial physical metaphors previous research reported petre blackwell revealed expert programmers conceive program structures terms ppig university sussex www ppig org blackwell images 
study focused private experience descriptions documented described programmer 
analysis javadoc reveal spatial environments environments explicitly described 
spatial relations occur regularly back contain position confirming metaphor programs operate spatial world containment extent 
algorithms involve notional point traveling moving world turn ascend flip descriptions execution journey landscape 
petre blackwell reported designs experienced buildings arrangements structures material artificial built environment 
metaphorical space program execution described space construction physical mechanism adjust structure form 
structures physical material properties dynamic efficient hard may durable requiring intervention maintenance preserve degrade maintain 
metaphor program logic physical structure material properties subject decay 
interesting aspect environment data moves moved component potentially corresponding movement space 
addition describing physical material flow buckets channels flows regularly described fill source generate empty 
metaphorically physical world program data substance flows stored 
metaphorical fig 

metaphors borrowed domains context operation ppig university sussex www ppig org blackwell addition systematic metaphors described number specialized views computing draw metaphors domains knowledge 
extent reflect intellectual context computing carried 
early software engineering conducted context military funding applications remaining metaphors seen drawing vocabulary target trigger 
appear scientific domains suggesting conceptual metaphor technical relationships violent encounters 
alternatively set conventions data manipulated program described literary terms text annotate abbreviate write suggesting conceptual metaphor programs author texts 
possible describe information constructs non textual visual forms render exhibit display programs construct displays 
new metaphors continue develop adopting academic terminology current time 
rise biosciences bioinformatics result increasing biological metaphors mutate clone family head body tail 
broadest terms may find data genetic body parts 
context system programming operation documentation application program mainly descriptions domain application operates 
internal operation program interact requirements external world conventional programming involves maintenance manipulation internal models domain models 
case java libraries specific application domain highly generic execution context 
interesting metaphors describing nature generic context 
describes sharing agency software automatic code application developers application users manual human applying metaphor software tasks behaviour delegated automaticity 
developers java libraries highly aware context technical evolution standardization situated 
described terms borrowed human culture history legacy traditional obsolete obvious metaphor software exists cultural historical context 

discussion research revealed number systematic conceptual metaphors documentation central java libraries 
relative frequency different categories obviously influenced object oriented programming paradigm metaphors appear specific oo libraries java reflect generic mental models software operation 
ppig university sussex www ppig org blackwell familiar derived standard concepts terminology computer science programming textbooks 
attempted standard terminology certainly interesting exercise corpus educational material 
metaphors identified induction map certain perspectives oo programming design example relationship economic ownership data described familiar concept encapsulation described loosely matter object owning data 
attempted emphasise external metaphor existing formalisation certainly recognize may appear familiar java programmers 
findings study worthy note include predominance descriptions causal action declarative style specifications component behaviour interaction supported oo paradigm confirmation petre blackwell earlier findings regarding programmers spatial physical imagery 
interesting new finding predominance cognitive social descriptions software components 
presumption object oriented languages packaged libraries software assembled components 
traditional metaphorical view components viewed mechanical terms 
study find physical mechanisms material flow social conventions concepts important common conceptual basis programming 
interesting observe java bean documentation included occasions writer directly addressed reader may similar occurrences java util documentation automated analysis technique preserve 
phrased advice recommend want want check advise 
surprising seldom phrasing occurs javadoc primary source information java developers 
java package authors far allow code act social proxy describing preferences requirements class written placing relationship 
course educational literature tutorial guides far include direct advice reader interesting source data mental model analysis written programmers 
novel metaphor implied findings software components social proxies authors 
highly interesting warrants investigation social psychology library authorship 
example case metaphors legal constraint programmers define constraints laws society components act 
habitual legal terminology political business authority structures encodes hierarchies power relations 
range harsh violate constrain negotiate elect 
doubt programmers library developers aware dynamics way revealed vocabulary system documentation may largely unconscious 
ppig university sussex www ppig org blackwell weaknesses method conceptual metaphor analysis subjective exercise relies reinterpretation texts 
experience field research papers appear far works literary criticism empirical scientific analysis 
ground empiricism quantitative comparison frequency occurrence allows degree replicability respect generality results exact interpretation 
particular large scale quantitative analysis final phase study apparently substantive evidence problematic 
quantitative information enabled useful frequency comparisons frequency individual words taken context interpreted care 
study comparison prior manual coding phase essential possible errors 
example earlier version accidentally counted occurrences word import referring economic activity fact remembered java keyword fell group analysed expressing metaphors 
rigorous study employ dual coding inter rater reliability tests 
implications design corpus analysis diversity conceptual metaphors java programming expected basis official advice jargon 
diversity surprising 
individual programmers differing habits thought preferences different applications technical problems require different conceptual approaches 
domain software specification design need support diverse models recognized wide variety different notational formalisms brought definition unified modeling language uml 
uml helps programmers non programmers think different ways 
different programming languages cater different conceptual models unusual see wide range programming paradigms single commercial project extent common uml 
multi language development execution environments eclipse net widespread sensible think carefully conceptual models founded 
particular history uml incorporating earlier generations notations paradigms alongside object oriented concepts suggests useful possible support variety conceptual design models long integrated common interface semantics 
case programming languages optional alternatives include conventional declarative imperative programming models allow conceptual models revealed study directly supported conventional languages 
support imagery may explain persistent intuition advantage visual programming languages 
significantly support widespread social metaphors study absent contemporary ppig university sussex www ppig org blackwell programming environments programming language research 
social metaphors fundamental model programming may productive direction research 

analysis single corpus findings describe mental models programmers working java language object oriented programming paradigm 
range conceptual metaphors programmers working paradigms probably different proportions frequencies 
confirmed similar studies corpora developed paradigms 
obvious target libraries major functional programming languages haskell ml 
libraries include components intended larger community documentation components describe interaction terms material flows terms social relationships components constructed 
determined study 
method applied inductive attempted address question metaphors come 
undoubtedly reflected textbooks course material online tutorials including overview guide material included alongside javadoc documentation standard java distribution professional resources documentation advanced programming patterns 
analysis different sources valuable complement study 
particular allow inspection problematic claim jargon terms completely embedded educational professional discourse analysed 
study particular decision taken order focus identification novel unanticipated metaphors 
suggest language keywords excluded focus analysis order deeply inspect mental models language designers 
william billingsley darren edge provided valuable assistance criticism suggestions 

blackwell 

metaphor analogy see programming abstractions 
de decker 
eds ppig university sussex www ppig org blackwell proceedings th annual workshop psychology programming interest group pp 


blackwell 
press 
reification metaphor design tool 
appear acm transactions chi 

cameron low 
eds 

researching applying metaphor 
cambridge uk cambridge university press 
clarke becker 
cognitive dimensions framework measure usability class library 
proceedings joint conference ease ppig ppig 

gentner stevens 
eds 
mental models 
lawrence erlbaum associates hillsdale nj pp 


johnson 

body mind bodily basis meaning imagination reason 
chicago university chicago press 
lakoff johnson 

metaphors live 
chicago university chicago press 



cognitive perspectives role naming computer programs 
proceedings ppig volume 



truth lying non moral sense 
eds birth tragedy writings 
cambridge uk cambridge university press pp 

pane myers 

studying language structure non programmers solutions programming problems 
international journal human computer studies 

petre blackwell 

mental imagery program design visual programming 
international journal human computer studies 

rodden blackwell 

class libraries challenge programming usability research 
proceedings ppig pp 


rohrer 

metaphors compute bringing magic interface design 
online report university oregon philosophy department center cognitive science metaphor philosophy uoregon edu metaphor gui web htm accessed june 


contingency irony solidarity 
cambridge uk cambridge university press 

sun microsystems 

sun developer network se download page java platform standard edition 
available online java sun com se download jsp 
accessed may 

young 

machine inside machine users models pocket calculators 
international journal man machine studies 
ppig university sussex www ppig org 
