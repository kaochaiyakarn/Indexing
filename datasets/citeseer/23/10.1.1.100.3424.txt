comparison structural csp decomposition methods georg gottlob nicola leone francesco scarcello inst fur inst fur informationssysteme isi cnr technische universitat wien technische universitat wien vienna austria vienna austria italy gottlob dbai tuwien ac leone dbai tuwien ac scarcello si deis compare tractable classes constraint satisfaction problems csps 
give uniform presentation major structural csp decomposition methods 
introduce new class tractable csps concept hypertree decomposition developed database theory 
introduce framework comparing parametric decomposition methods tractability criteria compare relevant methods 
show method hypertree decomposition dominates case general nonbinary csps 
constraint satisfaction problems instance constraint satisfaction problem csp constraint network triple var var finite set variables finite domain values finite set constraints 
constraint pair list variables length called constraint scope ary relation called constraint relation 
tuples indicate allowed combinations simultaneous values variables si 
solution csp instance substitution problem deciding csp instance solution called constraint satisfiability cs 
definition taken verbatim jeavons 
problems computer science mathematics formulated csps 
example famous problem graph colorability col elegantly formulated csp 
constraint satisfiability npcomplete problem 
known bibel gyssens dechter cs problem equivalent various database problems problem evaluating boolean conjunctive queries relational database maier equivalent problem evaluating join dependencies database 
constraint satisfaction organized follows 
section discuss tractability csps due restricted structure 
section briefly review known csp decomposition methods 
section describe new method hypertree decompositions 
section explain comparison criteria section comparison results general csps 
case binary csps briefly discussed section 
tractable classes csps effort spent ai database communities tractable classes csps 
communities obtained deep useful results direction 
various successful approaches obtain tractable csp classes divided main groups pearson jeavons 
tractability due restricted structure 
includes tractable classes csps identified solely base structure constraint scopes 
sq independently actual constraint relations rq 

tractability due restricted constraints 
includes classes tractable due particular properties constraint relations rq 
deals tractability due restricted structure 
structure csp best represented associated hypergraph corresponding primal graph defined follows 
csp instance var associate hypergraph var var denotes set variables scope constraint deal hypergraphs corresponding csps instances vertices hypergraph viewed variables constraint satisfaction problem 
term variable synonym vertex referring elements constraint hypergraph csp instance 
primal graph graph having set variables vertices edge connecting pair variables note constraints csp binary associated hypergraph identical primal graph 
basic fundamental structural property considered context csps conjunctive queries acyclicity 
recognized independently ai database theory acyclic csps polynomial solvable 
acyclic csp iff primal graph chordal cycle length greater chord set maximal cliques coincide edges hi beeri 
join tree jt hypergraph tree nodes edges vertex occurs edges connected occurs node unique path linking acyclic hypergraphs characterized terms join trees hypergraph acyclic iff join tree bernstein goodman beeri maier 
acyclic csp satisfiability tractable highly parallelizable 
fact problem complete low complexity class logcfl gottlob 
csps arising practice acyclic sense close acyclic csps 
fact hypergraphs associated naturally arising csps contain cycles small cycles transformed acyclic csps simple operations lumping small groups vertices 
consequently csp research ai database theory concentrated identifying defining studying suitable classes nearly acyclic csps equivalently methods decomposing cyclic csps acyclic csps 
decomposition methods order study compare various decomposition methods find useful introduce general formal framework notion 
hypergraph edges set edges var hypergraph var assume var variable occurs edge hypergraph simply represented set edges 
assume hypergraphs consideration connected primal graph consists single connected component reduced hyperedge contained hyperedge 
definitions results easily extend general hypergraphs 
set reduced connected hypergraphs 
decomposition method short dm associates hypergraph parameter called width decomposition method ensures fixed csp instance hypergraph solvable solvable time denotes size 
tractable class defined width 
collects set csp instances fixed solvable strategy typically polynomial depends parameter particular exists function instance trans formed time equivalent acyclic csp instance follows problems solvable 
dm complete note definitions holds jd min major tractable classes restricted structure fit framework 
particular shall compare decomposition methods biconnected components short freuder 
graph decomposed pair tree labeling function associates vertex biconnected component component remains connected vertex removal 
biconnected width hypergraph denoted bic maximum number vertices biconnected components primal graph 
cycle cutset short cutset dechter 
cycle cutset hypergraph set var induced var acyclic 
cutset width minimum cardinality possible cycle cutsets 
tree clustering short dechter pearl 
tree clustering method triangulation algorithm transforms primal graph csp instance chordal graph maximal cliques build constraint scopes acyclic csp equivalent 
tree clustering width short width acyclic hypergraph equal maximum cardinality cliques chordal graph treewidth treewidth robertson seymour 
omit formal definition graph treewidth 
treewidth hypergraph treewidth primal graph plus 
pointed treewidth equivalent methods 
hinge decompositions short hinge gyssens gyssens paredaens hypergraph var set variables var 
adjacent exists edge edges 
path sequence variables xi adjacent 
set var variables connected path component maximal connected non empty set variables var 
gottlob leone scarcello component edges edges hs edges proper subset edges containing edges 
connected components hinge exists edge var edges hinge minimal contain hinge 
definition hinge equivalent original gyssens gyssens paredaens 
hinge decomposition tree conditions hold vertices minimal hinges edge edges contained vertex adjacent vertices share precisely edge edges consists exactly variables shared 
variables shared vertices entirely contained vertex connecting path size cardinality largest vertex called degree precisely call hinge width shown gyssens paredaens csp instance hinge width cardinality largest minimal hinge hinge decomposition tree clustering short gyssens 
shown gyssens minimal hinges hypergraph decomposed means triangulation technique described tree clustering method 
leads method 
hinge tree hypergraph hinge minimum cardinality width hypergraph var 
define minimum hinge width hinge decompositions 
decomposition methods shown fixed csp instance deciding hypergraph width feasible polynomial time solving csps associated hypergraph width done polynomial time 
particular consists phases 
csp instance bounded width corresponding decomposition computed 
exploiting decomposition solved time methods phase consists solution acyclic csp instance equivalent 
cost phase independent constraint relations fact size hypergraph constants relative method methods 
observe computing width hypergraph general bound np hard methods polynomial hinge linear 
constraint satisfaction interesting methods explicitly generalize acyclic hypergraphs notion width freuder 
total ordering vertices graph defined wc 
width minimum widths possible total orderings fixed constant determined polynomial time graph width freuder observed naturally arising csps low width 
note bounded width sense structural property 
theorem shows bounded width entail tractability 
theorem constraint solvability remains npcomplete restricted csps primal graph width bounded 
proof 
col remains np complete graphs degree cf 
garey johnson 
graphs width 
theorem follows known natural encoding col csp 
freuder showed csp width relations enjoy property consistency solved backtrack free manner polynomial time freuder 
dechter pearl consequently introduce notion induced width roughly smallest width graph obtained triangulation methods primal graph csp ensures consistency 
graphs having induced width characterized partial trees freuder equivalently graphs having tree width arnborg 
follows fixed checking feasible linear time bodlaender 
bounded constant csp solvable polynomial time 
approach csps referred tractability method dechter 
note method implicitly hypergraph acyclicity triangulation methods enforce resulting graph acyclicity corresponding hypergraph 
noted dechter pearl dechter csp instance width hj 
hypertree decompositions csps new class tractable conjunctive queries generalizes class acyclic queries identified gottlob 
deciding query belongs class polynomial time feasible highly parallelizable 
section generalize notion wider framework hypergraphs show employ notion order define new decomposition method refer hypertree 
hypertree hypergraph triple rooted tree labeling functions associate vertex width hypertree decomposition example consider constraint scopes corresponding hypergraph 
clearly cyclic acyclic hypergraphs hypertree width 
shows complete hypertree decomposition having width easy see acyclic csps precisely csps hypertree width 
say csp instance bounded hypertree width hypergraph associated 
results gottlob follows bounded hypertree width efficiently decidable hypertree decomposition width efficiently computed 
show csp instance efficiently solvable bounded complete hd 
define acyclic csp instance equivalent size polynomially bounded size 
vertex decomposition hd define new constraint scope associated constraint relation projection join relations 
way obtain join tree acyclic hypergraph corresponds new csp instance set constraint relations size input size width hypertree decomposition hd 
construction acyclic csp easily show equivalent input csp instance efficient techniques available acyclic csp instances employed evaluation 
theorem csp width hypertree decomposition solvable logn time size comparison criteria comparing decomposition methods introduce sufficient exhibit class hypergraphs contained intuitively means class csp instances outperforms 
case say strongly generalizes mathematically preorder reflexive transitive antisymmetric 
say equivalent denoted hold 
decomposition methods strongly incomparable note strongly incomparable incomparable relations comparison results shows representation hierarchy dms determined relation 
element hierarchy represents dm apart containing tree clustering treewidth grouped equivalent easily follows observations section 
theorem pair decompositions methods represented holds gottlob 
leone scarcello directed path iff strongly generalizes 
linked directed path iff strongly incomparable 
fig 
gives complete picture relationships holding different methods 
constraint tractability hierarchy sketch proof theorem 
space reasons report succinct versions selected proofs 
detailed proofs results available full version gottlob 
circle hypergraph having edges hn defined follows graph consisting simple cycle edges circle 
note circle hypertree width width hypertree decomposition circle ra shown 
hypertree constraint satisfaction lemma hypertree 
proof 
hypertree 
hypergraph result application tree clustering method tree labeling function assigns vertex set variables set variables corresponds maximal clique identified tree clustering method 
define complete hypertree decomposition hd having tree output tree clustering method 
labelings defined procedure 
hd complete hypertree decomposition hypertree width smaller equal width 
hypertree 

ra primal graph circle clique ra variables 
need triangulation chordal graph 
circle clearly ra hypertree width 
lemma hinge strongly incomparable 
cause graphs triangulated way maximal cliques cardinality 
interestingly combination hinge strongly generalized method 
lemma proof 
proof hypertree similar lemma labelings initialized suitable way binary csps binary constraint networks constraints relations arity differences decomposition strategies highlighted section evident 
bounding arities constraint relations tractable classes decomposition strategies collapse 
particular shown full version gottlob ai binary constraints networks hold 
relationships decomposition methods remain general case fig 

differences decomposition strategies domain binary csps compare respective widths 
discussed decomposition method csp instance solvable time width corresponding decomposition computed noted section 
width measure efficiency decomposition method smaller efficient application strategy 
theorem acknowledgments research supported fwf austrian science funds project inf cnr italian national research council 
arnborg ai arnborg 
problems easy tree decomposable graphs 
algorithms 
beeri ai beeri fagin maier yannakakis 
desirability acyclic database schemes 
journal acm july 
bernstein goodman ra 
bernstein goodman 
power natural 
si am journal computing 
bibel bibel 
constraint satisfaction deductive viewpoint 
aij 
bodlaender bodlaender 
treewidth algorithmic techniques results 
proc 
mfcs bratislava 
lncs springer pp 

dechter dechter 
constraint networks 
encyclopedia ai nd ed wiley sons pp 

dechter pearl dechter pearl 
network heuristics csps 
aij 
dechter pearl dechter pearl 
tree clustering constraint networks 
aij 
freuder freuder 
sufficient condition backtrack free search 
acm 
freuder freuder 
sufficient condition backtrack bounded search 
acm 
freuder freuder 
complexity tree structured csps 
proc 
aaai 
garey johnson garey johnson 
computers intractability 
guide theory np completeness 
freeman comp ny usa 
gottlob ai gottlob leone scarcello 
complexity acyclic conjunctive queries proc 
focs pp palo alto ca 
gottlob gottlob leone scarcello 
hypertree decompositions tractable queries proc pods philadelphia may 
gottlob gottlob leone scarcello 
comparison structural csp decomposition methods tech 
rep dbai tr currently available web www dbai tuwien ac staff gottlob csp decomp ps gyssens ai gyssens jeavons cohen 
decomposing constraint satisfaction problems database techniques 
aij 
gyssens paredaens gyssens paredaens 
decomposition methodology cyclic databases 
advances database theory volume pp 

plenum press new york ny 
jeavons jeavons cohen gyssens 
closure properties constraints 
acm 
maier maier theory relational databases 
computer science press rockville md 
pearson jeavons pearson jeavons 
survey tractable constraint satisfaction problems csd tr royal holloway univ london 
robertson seymour robertson seymour 
graph minors ii 
algorithmic aspects tree width 
journal algorithms 
seidel seidel 
new method solving constraint satisfaction problems 
proc 
ijcai 
gottlob 
leone scarcello 
