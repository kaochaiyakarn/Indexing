june proceedings trim size gamot recomb rg gamot efficient genetic algorithm finding challenging motifs dna sequences maurer manderick computational modeling lab switch lab vrije universiteit brussel pleinlaan brussels mail vub ac weak signals mark transcription factor binding sites involved gene regulation considered challenging motifs 
identifying motifs unaligned dna sequences computationally hard problem requires efficient algorithms 
genetic algorithms ga inspired evolution nature class stochastic search algorithms applied successfully computationally hard problems including regulatory site prediction 
propose gamot efficient ga solving planted motif problems introduced pevzner sze 
show empirically algorithm able solve challenging problem instances short motifs efficiently able solve problems longer motifs 
gamot find planted motifs near linear computational time additional step creates highly fit population solutions evolutionary process applied 
comparison results state art algorithms vas projection 

weak signals genome regulating transcription neighboring genes representing binding site transcription factor challenging motifs identified 
efficient algorithms needed computationally hard task finding motifs unaligned dna sequences 
pevzner sze gave combinatorial description known planted motif problem pmp proposed challenge planted motif problem fixed unknown nucleotide sequence length motif consensus 
nucleotide sequences length containing variant alterations maximum points determine positions motif sequence 
challenge problem shortly involves finding motif length exactly point mutations dna sequences length 
problem hard signal weak applying probabilistic methods exhaustive search impractical motif long 
pevzner sze proposed algorithm constructs graph vertices corresponding substrings sample sequences edges similar substrings tackle challenge problem 
buhler june proceedings trim size gamot recomb rg tompa analyzed problem showed certain threshold maximum allowed mutations parameterization problem algorithm distinguish planted motif patterns occur randomly sequences 
example random motif length matches fixed motif probability substitutions allowed probability bigger matching probability substitutions allowed 
observation buhler tompa introduced additional challenging problem instances likelihood finding true motif sequences small 
proposed algorithm projection designed efficiently solve challenging problem instances planted motif model random projections 
algorithms proposed motif finding problems include exhaustive search algorithms suffix tree algorithm eskin mitra heuristic algorithms hertz stormo consensus bailey elkan meme 
algorithms literature provide results short motif sizes usually running times space requirements exponential guarantee finding solution 
leung chin proposed algorithms buhler tompa idea random projections solve problems longer motifs considered intractable algorithms 
basic voting algorithm takes motifs length input set calculates subset variants point mutations calculates occurrences variants input set help large hash tables 
length hash tables increase exponentially length motifs order avoid collisions 
vas algorithm solves projections length length motifs order finding longer motifs feasible 
issues approach 
firstly improved time complexity algorithm exponential nfl nt space complexity nt 
secondly solution quality reduced algorithm works shorter projections long motifs motif 
algorithm performance depends highly selection hash function right hash table size 
unfortunately hash function motifs guarantee collision free hashing shorter keys motifs considered random planted motif problems 
propose efficient genetic algorithm gamot solving challenging motif problems long motif sizes near linear time complexity linear space complexity 
compare results exhaustive searches previous applications ga state art algorithms vas projection show empirically algorithm able solve challenging problem instances efficiently 
june proceedings trim size gamot recomb rg 
ga motif finding genetic algorithms ga stochastic search algorithms inspired evolution nature applied successfully computationally hard problems including regulatory motif finding 
application ga task regulatory signals identification studied mironov 
approaches attacking motif finding problem grouped categories representation motifs 
group algorithms scoring matrix pssm representation tries obtain generative probabilistic representation represented signals frequencies nucleotides motif position retrieved alignment motifs 
second group algorithms consensus pattern comprises frequent nucleotide motif position advantage simple string representation 
mironov introduced gas representation formulations problem widely algorithms 
ga ga pssm chromosome represents alignment sequences 
algorithm tries find alignments maximize sum maximum frequencies nucleotides position alignment motif length 
data set sequences sequences length contain alignments motifs length second ga ga chromosome represents candidate consensus string length algorithm tries maximize score consensus string respect sequences data set 
consensus string length algorithm look best possible motifs 
clearly seen second algorithm operate smaller search space bigger values 
efficient algorithm gamot propose algorithm similar ga additional fast motif discovery step obtain highly fit set initial solutions special exploration operators explore search space motifs efficiently 

fast motif discovery drawback exhaustive search algorithms try possible motifs length means look consensus string motifs 
motif set sequences inevitable encounter motifs highly similar consensus pool sequences motif expected 
consequently considering motifs occurring sequences result search space trying motifs 
mutations planted motifs better score motifs possible algorithm select motif candidates algorithm 
fast motif discovery algorithm takes set dna contains sequences base pairs planted motifs length point mutations returns list candidate june proceedings trim size gamot recomb rg motifs fitness values certain threshold 
basic algorithm goes sequences set removing time set calculates fitness values occurrences strings length removed sequence regard remaining strings set 
algorithm algorithm selects motifs randomly sequences reduce time space complexity operation gets closer total length sequences number planted motifs selected motifs converge common expectation 
fitness function algorithm simplest form selected candidate motif remaining sequences set defined smallest hamming distance string possible choices starting points dna sequences 
best case variants actual motif smallest total distance returned list candidate motifs fast motif search algorithm 
approach difficulties case challenging problem instances arbitrary strings length sequence smaller distance planted motif mutations 
algorithm guarantee optimal solution 
useful generate set candidates local search algorithm ga algorithm fast motif discovery procedure fast motif discovery dna list sequence sequence dna pick sequence dna dna dna sequence remove sequence set candidate motif sequence get motif position fitness fitness candidate dna goodenough fitness insert candidate return return list candidate motifs procedure cost fast motif discovery algorithm provides excellent solution fitness evolutionary process 
contrast approaches genetic algorithm reconstructs original motif string initial set candidates evolutionary operators blindly trying positions maximize score trying motifs 
possible take strings occurring june proceedings trim size gamot recomb rg sequences initial set ones fitness values 
increase quality solutions cases increase time genetic algorithm weed unsuitable ones inside population 
exploration operators gamot guarantees motif instance planted motif exist initial set part 

genetic algorithm algorithm steady state ga proposed syswerda additional step creates initial population high fitness generating random individuals 
gamot algorithm algorithm takes set dna containing sequences returns consensus string length determining positions planted motifs sequences 
algorithm starts applying fast motif discovery problem returns list strings fitness values occurring sequences strings highest scores taken initial population guarantees start highly fit population number strings taken initial population depends population size parameter ga usually tuned depending problem instance 
extreme case population size selected number possible mers sequence smaller set likelihood solution closer strings restricted subset higher rest strings search space 
unfit strings initial set automatically selective pressure evolutionary algorithm gives chance solutions higher fitness considered crossover causing population dominated gradually fittest solutions generation 
selecting smaller portion initial set population may speed process highly challenging problem instances candidates may 
gamot able find solutions candidates removed initial set 
implementation fast motif discovery returns motifs scores upper percentile chosen population sizes give results planted motif problem experimentally 
creating initial population algorithm selects individuals population linear ranking 
whitley shown linear ranking gives better results compared proportional selection 
algorithm creates new candidate consensus string point crossover replaces worst individual newly created individual 
order explore solution space algorithm applies designated exploration operators 
operator mutate operator applied random intervals mutating positions random nucleotide arbitrary individual selected population 
second operator shift shifts nucleotides left right position achieve better alignment 
position june proceedings trim size gamot recomb rg opened shifting filled randomly selected nucleotide 
operator enables algorithm take advantage candidate motifs portion motif exists string 
algorithm gamot procedure gamot dna fast motif discovery dna collect candidates init population repeat select parents pi recombine try reconstructing original motif mutate explore shift update population pi fitness satisfactory reached max 
evaluations return best pi procedure algorithm performs steps discussed score best individual satisfactory certain number evolutions completed returns solution 
case possible initial estimation target fitness possible select condition stopping fitness population improve generations 
gamot returned consensus string best score additional methods applied find transcription factor binding sites sequences 
simplest method involves scanning sequences start position best motif sequence minimum hamming distance consensus string 
multiple motifs sequence motif threshold hamming distance defined 

experimental results compare performance gamot exhaustive search methods ga described earlier state art algorithms methodologies randomly generated test data 
generated random dna sequences length planted random motif length exactly random mutations sequences different values data sets generated different seeds ga state ofthe art mersenne twister random number generator guarantees dimensions avoid bias experiments 
datasets experiments june proceedings trim size gamot recomb rg table 
comparison exhaustive search ga gamot ga ga mss min min min min min hrs min min publicly available obtained email corresponding author 
measurements ibm computer intel pentium iii processor gb ram running windows xp operating system 

comparison exhaustive search implemented exhaustive search algorithms described jones pevzner 
algorithm brute force median string search mss tries possible motifs length finds minimal total distance 
second algorithm benchmarking improved version branch bound median string search algorithm 
algorithm speeds search median string search cutting branches search tree contain motifs total distances worse best solution far 
version added step reasonable initial estimation random guess starting infinite distance solution 
measured running time algorithm find exact solution problem instances 
algorithms score best individual equal score planted motif 
table shows average runtimes algorithms 
gamot able solve problems problems infeasible compute exhaustive search algorithms mss 

comparison ga ga implemented ga ga discussed see section solution performance table gamot finds planted motif faster ga ga algorithms faster exhaustive search methods comparison 
ga gives better results ga operates smaller search space 

comparison algorithms second set experiments compared gamot state art algorithms literature problem instances 
table table show average runtimes algorithms 
gamot able find solution faster projection vas faster returning solutions problem instances short planted motifs 
june proceedings trim size gamot recomb rg table 
speeds short motifs gamot projection table 
speeds longer motifs gamot projection min min min min min min min min min min problem instances longer motifs gamot finds solution faster 
solution time gamot increases linearly planted motif size gets longer 
table table shows side story algorithms literature find approximations actual solution 
compared quality solutions performance coefficient defined pevzner sze 

quality solutions denote set base positions occurrences planted motif denote corresponding set base positions occurrences predicted algorithm 
algorithm performance coefficient motif defined occurrences motif correctly performance coefficient achieves maximum value 
quality solutions shown table 
gamot finds exact solution performance coefficient problem instances 
clearly seen gamot able find solution problem instance times algorithms produce solutions poor quality problem complexity increases 

gamot parameters ga generic search algorithms applied problem domain 
efficiency ga depends tuning parameters problem domain instance 
known literature complexity problem length rep june proceedings trim size gamot recomb rg table 
quality solutions gamot projection na resentation critical role determining population size influential parameter performance ga run series experiments determining suitable problem sizes gamot algorithm 
results shown 
solution time population size 
population sizes different planted motif problems algorithm performance 
see problem complexity small problem population size selected small individuals 
problem complexity increases bigger june proceedings trim size gamot recomb rg table 
table gamot parameters 
parameter alue population sizes suitable problem population size gives results 
experiments optimal values shown graph 
summary gamot parameter values experiments table 
order increase selective pressure selection operator considers motifs fitnesses parameter upper percentile enabling gamot converge solution faster 
parameter gamot controls number individuals kept previous generation set obtaining results 
furthermore exploration operators gamot applied probability parameter experiments 
parameter fast motif discovery step set number sequences length sequence motif size 
parameters informational purposes 
better values different problem instances 

proposed efficient genetic algorithm planted motif problems shown empirically able find exact solution complex problem instances algorithms perform poorly 
secondly shown solution times algorithm smaller algorithms literature having compromise space complexity favor time complexity 
apparently gamot find planted motifs near linear computational time qualify method large scale motif identification projects longer motifs 
proposed algorithm achieves results firstly uses smaller search space consensus strings 
secondly additional step creates highly fit population solutions identifying candidate motifs inside sequences evolutionary process applied 
interesting note restriction simpler consensus string method impact quality solutions tested instances simulated data 
gamot algorithm advantages existing motif finding algorithms 
foremost gamot algorithm produces better solutions 
experiments gamot june proceedings trim size gamot recomb rg able achieve performance coefficient test cases failed achieve test cases 
secondly produces quality results shorter time algorithms comes challenging problem instances long motif sizes 
furthermore gamot suffer exponential space time complexity vas algorithm suffers 
clearly motif partitioning scheme reduce time space complexity vas algorithm causes algorithm sacrifice solution quality 
ga candidates computationally hard problems flavors introduced literature produce faster convergence solution 
quite suitable parallel computation 
flavor ga discussed possible achieve better results ga furthermore cases advisable tune parameters ga achieve better results 
results shown ga additional step selecting set candidate solutions improves performance simple ga fast motif discovery scoring function purpose 
possible replace merge fast motif discovery methods gibbs sampling projection apply ga refinement solution 
gamot algorithm finds consensus string quickly consensus string identify sites smallest distance consensus string finding transcription factor binding sites 
scheme extended translating alignment sites identified gamot pssm identification motifs initial query set sequences refinement predicted motif application find similar sites upstream sequences presumably sensitive pssm approach 
algorithm produces results simulated data equipped additional mechanisms suitable real life data finding transcription factor binding sites additional filters known unspecific repetitive elements better scoring function 
leung chin report results background sets 
incorporate methods testing algorithm benchmark data sets available 

aerts van loo moreau de moor genetic algorithm detection new modules sets genes 
bioinformatics 

bailey elkan 
unsupervised learning multiple motifs biopolymers expectation maximization 
machine learning 

gilbert 
approaches automatic discovery patterns 
journal computational biology 

buhler tompa 
finding motifs random projections 
journal computational biology 

eskin 
profiles patterns back branch bound algorithm finding near optimal motif profiles 
proceedings annual international conference research computational molecular biology recomb 

eskin uri mikhail gelfand pavel pevzner 
genome wide analysis june proceedings trim size gamot recomb rg bacterial promoter regions proceedings pacific symposium biocomputing psb 
hawaii january 
francis chin henry leung voting algorithms discovering long motifs proceedings third asia pacific bioinformatics conference january www cs hku hk chin pdf 
francis chin henry leung efficient algorithm string motif discovery proceedings fourth asia pacific bioinformatics conference taipei taiwan february accepted 
goldberg 
genetic algorithms search optimization machine learning addison wesley isbn 
goldberg deb clark 
accounting noise sizing populations 
whitley editor foundations genetic algorithms pages 
morgan kaufmann 

hertz stormo identifying dna protein patterns statistically significant alignments multiple sequences 
bioinformatics 


holland adaption natural artificial systems university michigan press ann arbor 

algorithm finding signals unknown length dna sequences 
bioinformatics 
suppl 

jones pevzner bioinformatics algorithms mit press cambridge mass 

pevzner 
finding motifs zone 
proc 
th annual international conference research computational molecular biology recomb 

matsumoto nishimura mersenne twister dimensionally uniform pseudorandom number generator acm trans 
modeling computer simulation vol 
january pp 
pevzner sze combinatorial approaches finding subtle signals dna sequences 
eighth international conference intelligent systems molecular biology 



spelling approximate repeated common motifs suffix tree 
lucchesi moura editors latin theoretical informatics lecture notes computer science pages 
springer verlag 



methods discovering novel motifs nucleic acid sequences 
comput 
appl 
biosci vol 

pp 

elena mironov genetic algorithms identification regulatory signals 
silico biology 
syswerda 
uniform crossover genetic algorithms 
schaffer editor 
proceedings rd international conference genetic algorithms pp 

lawrence associates 

thompson lawrence gibbs recursive sampler finding transcription factor binding sites nucleic acids research vol 

tompa exact method finding short motifs sequences application ribosome binding site problem 
proc int conf intell syst mol biol 

martin tompa nan li timothy bailey george church bart de moor eskin alexander martin frith fu james kent andrei mironov william stafford noble regnier nicolas simonis sinha gert jacques van mathias weng christopher chun ye zhou zhu 
assessment computational tools discovery transcription factor binding sites nature biotechnology 


van andre vides 
extracting regulatory sites upstream region yeast genes computational analysis oligonucleotide frequencies 
mol 
biol 
june proceedings trim size gamot recomb rg 

whitley ed schaffer proc 
rd int 
conf 
genetic algorithms fairfax va june genitor algorithm selective pressure rank allocation reproductive trials best san mateo ca morgan kaufmann 
