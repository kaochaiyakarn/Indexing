enhancing web services description discovery facilitate composition rajasekaran john miller verma amit sheth lsdis lab computer science department university georgia athens jam verma amit cs uga edu 
web services midst making transition promising technology widely industry 
efforts web services manual slowing changing dynamic businesses today 
contend expressive descriptions web services lead greater automation provide agility businesses 
meteor frontend tools source code annotation semantic web service description generation 
wsdl language created incorporating semantic descriptions industry wide accepted wsdl extending wsdl 
adoption service oriented architecture soa expected allow enterprises contract non critical functions 
new world economy business processes typically transcend departmental organizational boundaries 
web services expected provide ideal platform automate processes allow integration disparate platforms systems 
processes complex languages bpel ws required represent control execution 
current technology requires hard coding processes result difficult incorporate latest better solutions available runtime 
reason able accommodate new solutions dynamically difficulty automatically discovering integrating new services processes 
allow automatic dynamic composition business processes faster effective methods representing services suitable means automatically identify needed 
companies eager seamless integration solutions lack standards expose expressive representations service 
incurs disadvantages terms failure identified potential clients unexpected exceptions execution functionality service 
suggest means overcoming providing richer descriptions services offered 
facilitate understanding third party descriptions expressed standardized conceptualization application domain ontology 
core concept semantic web services sws 
discusses types semantic content required describe functional aspects service means incorporating information service description advantages integration provided method dynamic environment 
lower levels semantic web services utilize regular web service technologies soap simple object access protocol messaging wsdl web services description language service description 
higher level semantic expressive descriptions describe services 
propose mechanisms augmenting wsdl provide semantic descriptions enhancing uddi universal description discovery integration provide semantic discovery 
fig illustrates soa architecture adapted suit needs semantic web services sws includes annotated wsdl files enhanced uddi registry corresponding api service registry provider 
fig 

soa architecture service requestors depending business needs discover web services published uddi registries 
currently implemented version uddi provides search capabilities keyword taxonomy 
search results match keywords description published services search string 
pure keyword search fails retrieve services described synonyms search string 
singular plural word forms service description affect search result 
employing wild characters search helps increase recall rate necessitates human judgment filter relevant services 
recall precision keyword search unsuitable automation dynamic composition 
main reason dynamic composition automation involves discovering new services run time software components human interaction 
keyword search search results unsatisfactory user needs redefine keyword narrow search precisely define requirement 
requires manual filtering returned services choose service context service requestors request 
enable automation process require meaningful description service parameters processed automatically tools means process context description discovery engines 
discusses meteor meteor managing operations web services discovery engine improvement 
discovery engine provided features incorporate search syntax keyword matching semantics meaning 
consider scenario case dynamic qos supply chain service requestor searching service return quote hard drive keyword 
syntax search return services word description inputs outputs operation name 
generic term similar service offered providers electronics dealers hardware manufactures sale dealers respective businesses 
context searched absent syntax search lose precision search required service lost amidst large number returned results 
keyword search users employ specific terms search results returned empty different service providers may follow different naming conventions services 
naming conventions specific organizations developers generalized 
employing semantic search requestor required guess name service offered required provide context service 
search query annotated concept computer parts 
helps identify services offering required functionality follow different naming conventions 
example required service advertised uddi obvious reasons see syntax search fail 
service annotated concept similar concept employing reasoning methods subsumption relations identify service potential candidate 
reason direct parent domain ontology closely related service searched 
making semantics inputs outputs operation refine search results 
elaborates semantic information enhance discovery services composition 
currently companies starting business process definition standards rosettanet ebxml achieve inter operability 
provide standardized representation service functionalities message exchange formats 
standards provide concrete business transaction format lack logical reasoning inherent ontological representations 
overcome issue meteor employs ontologies standards rosettanet 
web ontology language owl represent ontologies 
approach helps semantic web services incorporate advantages extended business standards framework 
industry focuses inter operability issues means existing business standards academic research hand turned focus developing approaches tailored better service representation reasoning 
identifying potential research semantic web services committees formed streamline research ideas field 
owl wsmo meteor active research initiatives direction 
develop solutions problem 
meteor developed ls dis lab university georgia aims resolve reinforcing current industry standards power semantics 
organized follows section gives overview architecture 
discusses various modules meteor sys tem 
semantic web service designer module output generated annotated source code discussed section 
focus section semantic description generator wsdl enhancement wsdl 
sections elaborate publishing discovery modules framework 
implementation front meteor section 
research related discussed section 
section concludes giving overview contributions employed direction research 

meteor meteor project lsdis lab university georgia focused workflow management techniques transactional workflows 
follow project incorporates workflow management semantic web services called meteor 
key feature project usage semantics complete lifecycle semantic web processes represent complex interactions semantic web services 
main stages creating semantic web processes identified development annotation discovery composition orchestration 
key research direction meteor exploring different kinds semantics stages 
identified data functional quality service execution semantics different kinds semantics working formalizing definitions 
detailed explanation underlying conceptual foundation meteor 
architectural point view divide meteor main parts front back 
front focus covers development annotation discovery stages 
main components front semantic web service designer semantic description generator publishing interface discovery engine 
back meteor covers composition discussed 
semantic web service designer semantic web service designer meteor gui design develop semantic web services 
tool interface design services incorporation semantic description service developed simultaneously 
achieved means source code annotations discussed detail section 
user interface developed eclipse plug 
provides user tree representation interface ontology browser source semantic information 
user provides associations service parameters ontological concepts 
equivalent representation associations annotated source code output module 
semantic description interface service provides details implementation interface satisfy 
complete description semantics operation involves semantic description inputs outputs constraints satisfied exceptions thrown operation functional description operation 
source code annotation fig 

meteor architecture output semantic web service designer annotated source code 
oracle net offers features add annotations source code javadoc comments metatags respectively 
discuss source code annotation relation java general source code suitable language net 
represent annotations java employing meta tag feature new sdk jdk 
tags introduced language specifications jsr 
metadata facility java programming language jsr web services metadata java platform representation semantic content source code provide convenience developers semantic web services 
current practices developing web services start processing source code 
adhere standard developing semantic web services include annotations source code level 
complete example annotated source code interface appendix annotation tags corresponding semantic significance discussed 
operation tag value action attribute provides functional semantics operation parameters tag consists meta tags input parameters output parameters 
value type attribute refer semantic type closely defines input output parameter 
user needs ensure semantic data type match annotating 
exceptions tag consists exception meta tags 
represent multiple exceptions thrown operation 
constraints tag consists meta tags pre preconditions post post conditions 
value condition attribute define constraint operation satisfy pre post execution operation 
format pre post conditions annotated source code adapted design contract jml java modeling language 
discusses various issues considered representation pre post conditions 
constraints alternatively represented rule languages swrl 
swrl discusses built features syntax language 
detailed analysis processing rules utilize features offered swrl pending 
interface tag attributes tag provide interface specific annotations 
attributes valid implementations interface 
attributes descriptions extended provider need 
service tag attributes tag serve service specific annotations 
service described interface implemented different service providers 
tag represent provider specific parameters location qos quality service reliability 

semantic description generator basic tenet web services service requestor description wsdl files invoke 
wsdl provides information service operations expected inputs outputs operation 
requirements richer description find information insufficient user meteor 
propose extensions web service description ways annotated wsdl wsdl files 
files generated annotated source code semantic description generator module 
annotated wsdl wsdl document semantic features added permissible extensibility elements language 
semantic extensions meteor framework enhance discovery composition 
time generated annotated wsdl file adheres cur rent industry standard outside meteor framework service requestors unaware semantics 
flexibility demonstrates light weight approach methodology 
features wsdl language motivation creation discussed section 
third type file generated module set owl files associated annotated source code 
mentioned earlier owl research initiative direction developing semantic web services 
propose show completeness semantic description system generating owl files profile grounding partial process model 
owl files provide complex representation semantic descriptions 
generating owl files annotated source code means modeling business processes simpler approach 
owl provides semantic information service files 
profile owl describes functional input output preconditions effects non functional aspects service 

process owl describes service operations interaction protocol service 

grounding owl provides mapping process model concrete wsdl representation 

wsdl wsdl file service 
files required daml owl web service composer execute daml services 
currently integrated profile grounding wsdl descriptions 
investigating approaches representing interaction protocol services 
approach involves timed automata state machines represent interaction services 
wsdl discussed outputs semantic description generator wsdl semantically enriched wsdl document 
section describe motivation features wsdl 
central purposes wsdl describe interfaces known port types web services 
general service providers implementers standard interface extend standard interface develop 
broadly speaking interface contains set operations 
operation signature includes operation name input output exception messages 
messages types defined xml schema language 
schema language commonly xsd xml schema definition owl alternative 
wsdl types pushed completely outside standard types systems complex define exist accepted type systems xml world xsd owl 
client web service look interface find 
enables interface descriptions help discover candidate web services 
descriptions critical proper discovery web services 
adding semantics interfaces important task 
wsdl owl uml xmi possible type systems xsd 
wsdl inputs outputs expressed owl types rosetta net ontology xsd 
round allows mapping form type system important maintaining data integrity type systems providers requestors different 
transformation language java primitive types xml schema achieved employing relaxations primitives 
similar mapping xml schema owl owl java simple issue 
due richness owl may employ complex transformations switch different type systems 
complete mapping different type systems open research issue area 
employing basic transformation rules wsdl employed web service composition individual web services larger web processes 
new wsdl wsdl creators provided features external type system document 
raises research questions relation type system round 
commonly type systems owl xml schema web services developed languages net java 
complex user defined data types require service provider provide appropriate transformations mapping xsd types 
discussion mapping owl java data types 
annotating developer service provide type information 
type match data structure semantic meaning concept annotate 
user unable find suitable type developer define types extensions existing types 
necessary provide transformation rules map user defined types standardized recognized types 
simple transformations dollars may specified swrl dollar www net sd wsdl usa india parameter www net sd wsdl usa india represent web service operation return exchange rate required transformation operation input parameters usa india 
complex transformations may specified xslt extensible stylesheet language transformation 
developer provided choices define type type recognized ontology extend type provide downcast operation create type provide mappings standardized recognized types 
adhering transformation rules interoperation partners error prone 

publishing interface semantic descriptions generated need advertised readily accessible service requestors 
uddi registries offer support publishing service descriptions 
current version uddi offers little support exposing semantic information 
motivated development enhanced uddi essentially layer uddi capable handling semantic data 
upcoming provides better support organize semantic information 
enhanced uddi organized decrease search time increase precision operations service discovery 
internal organization uddi datastructures modified act place holders semantic information 
data structures discussed detail 
category bags uddi list name value elements implementation value attribute place holder semantic content 
meteor binding templates holds location domain specific models 
enables direct search services function particular geographic location domain 
category bag associated business service serves placeholder operation inputs outputs exceptions constraints oriented semantics 
service specific semantic information stored binding template falls business service 
abstraction data helps organize information effective retrieval discovery 
advertisement built annotated source code semantic descriptions serves input publishing interface 
discovery engine employs query similar advertisement find information enhanced uddi 
discovery engine shown fig front back require discovery engine module 
currently discovery supports keyword taxonomical search 
mentioned earlier insufficient dynamic automated environment 
meteor discovery method primarily semantic descriptions constraints advertised service provider 
supporting current keyword match web services description discovery engine improves employing heuristics subsumption relations data type matching requestor specified constraints provider advertised concepts common ancestor properties subclass match concepts 
inferencing employed constraints published service provider filter results discovery 
reasoning helps deal constantly changing needs dynamic environment 
query template construct query specifies functional aspects required service 
query template consists specifics service operation name operation action functional semantics input output name semantic type exception pre post conditions domain location 
query may generated automated tools built manually users 
discovery engine processes query discover appropriate services 
user query provides discovery engine specifications user annotated semantic type information 
effectiveness meteor discovery engine greatly attributed organization enhanced uddi 
discovery engine uses classes subsumption relation compare ontological concepts specified query advertised registry 
engages metrics obtained comparing alternative uddi registry service ontology logic 
way logical subsumption employed find appropriate matches discovery 
properties concepts matching cardinality data type distance common parent ranking relevant services discovered 
discovery results returned user tool ranked degree match 
specifics service reliability quality service deciding final rank services returned 
constraints operation play important role ranking services 
service parameters descriptions constraint analysis extensively composition business flows 
meteor discovery engine composition discussed detail 

implementation system overview implementation details discussed modules section 
semantic web service designer sws designer provides interface required create associations various service parameters ontological concepts 
semantic web service designer represents service interface form tree 
input output parameter nodes organized corresponding operation nodes 
ontology browser provided user helping navigate ontology choose appropriate semantic concept 
basic annotations generated user view annotated source code java editor 
direct editing source code optional user familiar format annotations 
color scheme java editor changed highlight annotations embedded source code 
syntax checker annotations employed user save annotated source code 
main modules semantic description generator document generator type converter validator 
semantic description generator takes input annotated source code 
annotations extracted source code means annotations api incorporated java reflection jdk 
depending users preference annotated wsdl wsdl owl generated 
table driven document generation approach adopted implementation 
tags associated wsdl stored table document generation 
helps code maintenance accommodating possible changes tag names 
semantic web services successfully invoked need system supported mappings different type systems 
main reason service descriptions available requestors wsdl documents wsdl offers support varied type systems 
service requestor discovers appropriate wsdl file mapping wsdl xsd data types appropriate java types essential successfully invocation service 
recursive definition complex data types provided types tag wsdl documents 
execution engine provided hashtable perform inverse look service execution 
correctness generated wsdl documents checked validators 
wsdl api check validity generated wsdl code 
publishing interface different sources annotated wsdl file annotated source file 
annotated source code provided appropriate wsdl file generated service published uddi 
pub builds service advertisement contains required semantic information service 
publisher equipped handle publish annotated un annotated representations service 
discovery engine provides interfaces interaction 
user interface suited humans build query template view results api composition tools 
functionality extended interfaces representation suit human interaction 
different criteria discovery relaxation constraints ranking schemes customized user tools employing discovery engine 
discovery engine called tool execution engine customized perform stringent matching 
automation requires near service match seamless execution absence human intervention 
backend meteor framework dedicated features provided front composition execution business processes 
process model helps capture semantic descriptions services help ontologies 
users specify local constraints service global constraints complete process 
constraints generic qos criteria cost availability reliability domain specific qos criteria may relevant 
process specification enhanced uddi get candidate services service templates process 
gives overview semantic descriptions help resolving inter service dependencies domain constraints captured ontologies 
modules backend explained 

related approach attach semantic descriptions services design time source code annotations 
discussed changes needed incorporate descriptions standards wsdl service registries uddi enhance discovery 
section presents ongoing research related 
describe methods semantically enhance uddi support service descriptions 
approach define functionality web service transformation inputs outputs discussed 
presents service templates discover suitable services composition business flow 
discussion semantic description generator gave overview closely related owl 
owl defines approach enable semantic web services 
believe approach lightweight easier apply 
developed tools generate owl files wsdl file 
approach tries adhere current standards trying maximize semantic representations required automation 
research initiative area done wsmf web services modeling framework 
wsmo web services modeling ontology developed encompass different aspects web service development 
aims solve interoperability issue means mediators goals pre post conditions described logic statements 
complexity logic serve disadvantage users unfamiliar rule lan guages 
approach involves representing constraints boolean expression annotated source code converting swrl rules wsdl documents 
representation enables developers easily understand constraints logical querying inference engines 

approach allows software developers incorporate semantic descriptions web services code development 
approach leverages annotation mechanism provided java programming language 
verified ideas implementing semantic web service designer source code annotation semantic description generator generation rich descriptions web services 
addition wsdl language created extending wsdl 
done part project university georgia 
add expressivity web service descriptions staying close accepted industry standards 
area involve deciding annotations required phases web service development protocol specification transaction management security capturing behavioral aspects process modeling web services part 
validation framework simulate validate composed workflows developed part meteor 

specification business process execution language web services version www ibm com developerworks library ws bpel 
web services description language wsdl note march www org tr note wsdl 
uddi version specifications www oasis open org committees uddi spec doc htm 
meteor semantic web services processes swp semanticweb org 

verma sheth patil miller scalable infrastructure registries semantic publication discovery web services journal information technology management appear 

verma sheth miller aggarwal dynamic qos supply chain semantic web services initiative architecture committee case april 

rosettanet lingua franca business www rosettanet org rosettanet rooms 
core component dictionary ebxml core components may version www ebxml org specs pdf 
owl web ontology language overview www org tr rec owl features 
daml services coalition daml web service description semantic web international semantic web conference iswc italy 

roman keller lausen wsmo web service modeling ontology wsmo deri working draft february www wsmo org 
web services description language wsdl version part core www org tr wd wsdl 
sheth kochut miller das lin lynch supporting state wide immunization tracking multi proceedings nd intl 
conf 
large databases vldb september 

semantic web process lifecycle role semantics annotation discovery composition orchestration invited talk www workshop services semantic web budapest hungary may 

aggarwal verma sheth miller milnor constraint driven web service composition meteor submitted ieee international conference services computing 

jdk java development kit java sun com se index jsp 
jsr java specification requests www jcp org en jsr detail id 
jsr java specification requests www jcp org en jsr detail id 

quel meyer design contract lessons ariane 
ieee computer 

design contract jml 

swrl semantic web rule language combining owl ruleml draft version march www daml org rules proposal 
sirin hendler parsia semi automatic composition web services semantic descriptions web services modeling architecture infrastructure workshop conjunction april pp 

xml schema part primer www org tr rec xmlschema 
rajasekaran miller verma sheth cost benefit analysis adding semantics web service description preparation 

pastor battle automatic mapping owl ontologies java www mindswap org www owl java 
pdf 

paolucci kawamura payne sycara semantic matching web services capabilities 
proceedings iswc international semantic web conference sardinia italy june 
springer 
paolucci kawamura payne sycara importing semantic web uddi 
proceedings web services business semantic web workshop caise pp 

uddi data structure www com downloads pdf web services datastructure pdf 
sycara paolucci ankolekar srinivasan automated discovery interaction composition semantic web services web semantics science services agents world web dec vol pp 


goodwin roeder method semantically enhancing service discovery capabilities uddi proceedings workshop information integration web ijcai mexico aug 

wsdl project www ibm com developerworks projects wsdl 
cardoso sheth miller arnold kochut quality service workflows web service processes journal web semantics april vol 
pp 

verma goodwin lee accommodating inter service dependencies web process flow composition aaai spring symposium semantic web services pp 

web services modeling framework electronic commerce research applications www wsmo org papers publications wsmf pdf appendix annotated source code java import java lang annotation import java lang reflect namespaces namespace name rosetta service extension true url lsdis cs uga edu projects meteor wsdl pips owl interface domain naics computer electronic product manufacturing description computer battery buy quote order status computer parts supplier public interface operation name action rosetta parameters name element rosetta name quote element rosetta operation name action rosetta parameters name order element rosetta name element rosetta exceptions exception element rosetta constraint pre condition order class 
