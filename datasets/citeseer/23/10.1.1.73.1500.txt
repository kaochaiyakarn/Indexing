gestures strings efficient online gesture spotting classification string matching thomas wearable computing lab eth rich rich switzerland ife ee ethz ch context awareness mechanism allows wearable computers provide information proactively unobtrusively minimal user disturbance 
gestures activities important aspect user context 
detection classification gestures may computationally expensive low power miniaturized wearable platforms may integrated 
introduce novel method online real time spotting classification gestures 
continuous user motion acquired body worn network inertial sensors represented strings symbols encoding motion vectors 
fast string matching techniques inspired bioinformatics spot trained gestures classify 
robustness gesture variability provided approximate matching efficiently implemented dynamic programming 
method successfully demonstrated spotting classifying occurrences trained gestures continuous recording complex bicycle maintenance task 
executes real time desktop computer fraction cpu time 
simple integer arithmetic operations required method ideally suited implementation body worn sensor nodes real time operation 
daniel wearable computing lab eth rich rich switzerland ife ee ethz ch categories subject descriptors pattern recognition implementation pattern recognition application information storage retrieval information search retrieval 
wearable computers embedded clothing seamlessly integrated devices carry may revolutionize way collaborate learn share experiences 
aim support users providing information proactively unobtrusively minimal disturbance 
key mechanism enabling wearable computers recognition user context location social interactions gestures activities 
continuously evaluating state user crossroads personal assistants pervasive computers may provide feedback information tailored user needs anytime 
physical activities gestures important aspect user context 
identifying gestures wearable computers may instance support workers industrial environments may enhance social interactions gerhard tr ster wearable computing lab eth rich rich switzerland ife ee ethz ch may provide insight affective disorders depression 
gestures characterized trajectory limbs cartesian space 
trajectories may acquired external absolute trackers ultra sound vision order unconstrained environments wearable computers tend rely sensors 
inertial sensors accelerometers gyroscopes worn limbs commonly purpose 
identification gestures depends nature 
periodic motions recognized classification signal features simple means nearest neighbor classifiers non periodic motions may detected hidden markov models hmms detect intentional gestures body worn sensors limb motions tracked vision systems 
real time continuous recognition activities gestures remains complex task tackled approach segmentation recognition 
various segmentation methods proposed keogh introduced theoretical framework segmentation time series data mining lee proposed threshold model hmms detect non gestures wilson discussed probability occurrence trained hmms segment gestures junker proposed segmentation closed motions 
investigated motion segmentation location information st ger explored sound segmentation 
isolated recognition segmented motion achieved hmms 
step approach may computationally expensive 
propose single step approach require explicit motion segmentation perform online real time gesture spotting classification continuous user motion 
related threshold hmms argue computational requirements suited low power devices described 
method relies fast string matching techniques applied strings symbols representing continuous motion 
strings abstraction motion 
despite variability gestures identical classes robust spotting possible approximate string matching efficiently implemented dynamic programming 
method related dynamic time warping dtw require costly arithmetic operations divisions may implemented entirely arithmetics 
ideally suited efficient implementation micro controllers available wearable sensor nodes 
demonstrate method spotting classifying occurrences trained manipulative hand gestures continuous sequence containing gestures predominant amount non gestures users performing bicycle maintenance tasks 
evidence strength method spot gestures continuous stream data classification method 
capacity spot gestures may segment data traditional isolated classification methods 
section describe exact approximate string matching techniques may efficiently implemented dynamic programming 
process converting limb trajectories cartesian space strings string matching applied explained section 
section describes results applying novel method real life bicycle maintenance task 
results discussed section conclude section 
string matching string matching techniques support information retrieval computational biology analysis dna protein sequences 
applied sequence symbols 
assume gestures represented strings shown section 
introduce theoretical framework string matching 
string sequence characters symbols finite alphabet 
general string matching problem find occurrences string referred pattern larger sequence symbols text string matching deals problems exact matching approximate matching 
consider approximate string matching allows cope variability pattern occurrences text 
string matching depth overview commonly deployed algorithms 
approximate string matching order allow certain degree deviation string potential occurrences text applied string leading substring allowed 
edit operations insertion symbol string deletion symbol substitution symbol symbol 
edit distance levenshtein distance characterizes difference strings 
minimum number edit operations transform string string 
general form edit distance obtained dedicated weights assigned available edit operations 
approximate matching consists finding substring matches best string weighted edit distance 
algorithm weighted edit distance computed dynamic programming allows efficient implementation 
computational problem formulated dynamic programming recurrence relation 
case weighted edit distance relation established computation represents minimum edit operation cost needed transform symbols string symbols string 
recurrence relation including insertion deletion cost substitution cost stated way see min expression handle substitution equality initial conditions recurrence relation account deletion costs transforming symbols string empty string insertion costs transforming empty string symbols string 
order calculate weighted edit distance string length string length recurrence relation needs invoked times 
seen easily costly multiplications divisions addition operations comparison minimum operation implemented comparisons 
computational complexity algorithm nm 
memory requirements store intermediate results general version algorithm stated nm 
application string matching edit distance gives similarity measure strings length length problem spotting gestures continuous stream data string pattern continuous motion user represented string 
process converting continuous motion string described detail section 
expression minimum weighted edit operation cost align string occurrence substring index 
lower cost higher likelihood having gesture occurrence continuous motion user 

gesture spotting classifi cation string matching section describes string matching spot occurrences gestures continuous stream data 
consider gestures carried hands refer manipulative gestures simply gestures 
sensor modules placed body acquire trajectory right hand 
trajectory referred continuous motion 
aggregated quantized encoded finite set symbols resulting motion string 
gesture class spotted motion string generic representation created referred template string 
templates generated training statistics collected spotting thresholds 
template strings continuously matched motion string spotting classification 
matching cost edit distance spot gestures classify 
illustrates procedure 
processing path template string training indicated dashed arrows 
solid arrows depict path taken continuous motion motion string template string occurrences spotted classified 
distributed sensor modules orientation trajectory calculation position trajectory aggregation direction vectors direction vector encoding filtering strings strings matching costs gesture template string matching generation template strings matching costs trained parameters spotting classification spotted gestures overview gesture spotting classification string matching trajectory calculation continuous stream orientation data acquired distributed set inertial sensor modules mounted lower arms upper arms torso body 
combining modules orientation data relative position arms respect torso computed including limbs torso dimensions 
assuming motion patterns hands indicator manipulative gestures considered relative position hands computed cartesian coordinates 
continuous stream relative positions referred trajectory dimensional space 
trajectory aggregation order transform trajectories coordinates continuous values set symbols appropriate string matching quantization required 
contiguous positions trajectories aggregated form trajectory segments 
segments transformed direction vectors encoded discrete symbols 
direction vectors represent motion direction trajectory segments 
aggregation modes investigated temporal aggregation segments identical temporal duration ts aggregated spatial aggregation segments spatial distance aggregated 
ts stands sampling period 
modes define start point trajectory segment aggregated 
point segment contiguous start point segment terms positions trajectory 
direction vector segment vectorial difference positions start points 
direction encoding direction vectors obtained previous steps quantized 
direction vector mapped entry codebook contains finite set unit direction vectors 
codebook vectors directionally uniformly distributed 
actual mapping direction vector codebook vector achieved finding closest codebook vector terms angular distance 
codebook vector corresponds character symbol 
neutral symbol representing null vector provided 
shows example trajectory segmented temporal aggregation 
start points example segment marked circles 
corresponding direction vector plotted bold arrow 
addition unitary codebook vectors illustrated cor responding symbols 
th symbol null vector shown 
example trajectory segment encoded symbol represents closest codebook vector 
process encoding motion string matching template strings calculating matching costs gesture classes depicted 
example shows trajectory cartesian space samples marked trajectory segment corresponding direction vector bold arrow start points circles 
codebook sphere codebook vectors including null vector overlaid show encoding segment symbol matching costs described section string matching method computation weighted edit distances 
required insertion deletion substitution costs angular relation codebook vectors represented symbols 
case symbols codebook vectors identical cost assigned 
cost angular relationship vectors associated 
assign exponentially increasing cost increasing angular distance vectors penalize large angular deviations 
vi vj fc exp equation calculates insertion deletion substitution cost symbols represent direction vectors vi vj function determine angle degrees vectors 
training training carried steps 
template string gesture class created represents training instances class 
weighted edit distance calculated combinations training instances 
training instance minimizes sum distances instances selected template string 
second step matching cost statistics template string training instances continuous motion motion string direction vector current sample template string template string ii continuous motion dimensions aggregated trajectory segments transformed direction vectors encoded symbols 
resulting sequence symbols called motion string 
gesture classes represented templates created training resulting template strings 
aligned motion string spotting approximate string matching allows matches insertions deletions substitutions 
gesture class threshold acquired training applied computed matching cost spot gesture occurrences 
class collected 
mean standard deviation matching cost computed gesture class class related threshold derived way parameter needs optimized individual data set 
spotting classification gesture spotting requires template string gesture class spotted 
matching cost template string motion string continuous data stream symbols computed resulting stream matching costs class 
cost streams local minima detected 
local minima threshold class see equation spotted occurrence particular class reported 
local minima thresholds anticipated points spotted occurrences 
implicit classification performed 
due particular template string length start point occurrence computed 
filtering spotting classification carried parallel gesture classes temporal collisions spotted gestures occur 
collisions detected monitoring reported gesture occurrences classes checking overlap 
collisions resolved comparing relative matching costs colliding spotted gesture occurrences defined absolute matching cost template string continuous stream symbols divided class dependent threshold occurrence lowest relative matching cost output filtering result classification colliding spotted gestures discarded 

experimental results bicycle maintenance task gesture spotting classification string matching continuous stream data validated data set consists manipulative gestures realistic setting 
data set comprises different distinguishable maintenance tasks bicycle maintenance scenario 
shows bicycle subjects performing task 
orientation data torso upper lower arms acquired inertial sensor modules sampling rate hz 
bicycle maintenance scenario tasks maintenance scenario selected demonstrate functionality novel method 
data set partitioned parts maintenance tasks data recording available contains repetitions manipulative gesture 
part train template strings thresholds gesture spotting 
second part data set consists test sequences contain gestures random order 
sequences validate method 
sequence contains occurrences gestures wish detect gestures form null class addition ordinary movements related gestures 
sequence close real life conditions gesture spotting 
improve realism user asked clean random bike parts random time test sequence interrupting ongoing gestures 
manipulative gestures considered number occurrences test sequence brackets pumping wheel turning turning mark back wheel open back light remove bulb insert bulb close back light 
sequences subject recorded leads occurrences gestures detect 
data subjects processed 
total adds minutes sequence data validation 
gesture spotting shows matching cost time step encoded symbol training sequence containing repetitions gesture template string derived training sequence 
points training occurrences sequence vertical lines match exactly spotted occurrences circles dashed horizontal line representing 
matching cost time seconds matching cost training data class pumping wheel repetitions temporal aggregation codebook size clearly seen data recorded repetitions training sequence spotted gestures matching cost threshold 
noise characteristic matching cost observed ranges 
template string lengths gesture classes spatial aggregation mm temporal aggregation pumping wheel turning turning mark open back light close back light 
results parameters temporal aggregation mm spatial aggregation codebook size 
illustrates spotting gesture occurrences class test sequence comprising different gestures explained section 
addition matching cost pitch angle right upper arm plotted upper curve 
matching cost clearly falls detection threshold occurrences ground truth indicated shaded areas 
shows close occurrence considered gesture 
evidences close match spotted location gesture ground truth corresponds time span arm performing periodic motions seen pitch angle signal 
spotting classification accuracy objective quality measure order evaluate performance spotting classification method 
counts number times gesture spotted string matching method corresponds ground truth defined human labeling data set 
order cope temporal inaccuracy labeling overlap parameter defines minimum overlap ratio spotted gesture ground truth gesture required say spotting matches ground truth 
ratio length ground truth gesture 
overlap needs exceed ground truth length obtain correctly spotted gesture 
spotted gesture assigned categories correct spotted gesture aligned correct corresponding ground truth gesture inserted spotted gesture correspond ground truth gesture deleted ground truth gesture spotted substituted ground truth gesture spotted classified incorrectly 
matching cost template string class pumping wheel test sequence temporal aggregation 
depicted sequence seconds length gesture occurrences marked shaded areas 
occurrences matching cost lower graph falls corresponding threshold shown dashed line 
addition pitch angle right upper arm plotted upper graph 
close gesture occurrence shaded area depicted testing sequence 
gesture class closing light opening light marking turning pumping substitution insertion deletion correct time seconds gestures classes spotted classified test sequence seconds 
spotted gestures depicted rectangles diagonal lines ground truth gestures bold rectangles 
find correct deletion insertion substitution 
correct events deleted events inserted events substituted events ground truth events correct rate deletion rate insertion rate substitution rate subject subject subject total table spotting classification results different subjects 
achieve results spatial aggregation mode mm 
illustrates spotting classification results test sequence 
ground truth gestures included sequence spotted classified correctly 
insertion gesture class occurs time 
gesture class deleted time 
substitution occurs class time 
general number correct deleted substituted gestures adds number ground truth gestures 
table shows spotting classification results test sequences different subjects 
average ground truth gestures spotted classified correctly 
interesting result comparatively low processing effort required string matching algorithms 
ground truth gestures deleted producing errors compensated 
deletion rate significantly varying different subjects 
insertion substitution errors coped additional postprocessing example additional classifier 
performance explained section computational complexity approximate string matching algorithm nm represents length template string length motion string 
algorithm applied symbol stream motion string gesture classes spotted 
defining average template string length required cpu time online implementation proportional template string lengths number gesture classes constant spotting procedure 
performance comparison reasons algorithms commonly segmentation processing stage spotting implemented applied data set sax approximates time series piecewise constant segments encoded discrete alphabet merges contiguous samples time series cost measure reached genetic algorithm ga approach uses evolutionary search find proper segmentation 
needs emphasized sax ga segment data stream implementation 
second costly processing stage similarity search needed spotting classification 
table indicates cpu time required algorithms pentium ghz gbyte ram process various sequences 
algorithms implemented matlab special optimizations 
execution time spotting classification method duration sequences 
means algorithm roughly times faster real time 
cpu time distributed key processing blocks see test sequence sequence duration cpu time string matching cpu time sax cpu time cpu time ga total table test sequence duration cpu time seconds spotting classification sequences 
results temporal aggregation 
spatial aggregation mm temporal aggregation follows aggregation direction vector encoding string matching spotting classification filtering 
expect reduce required cpu time considerably implementing algorithms 
ga require processing time implementation available real time execution computer 
sax times faster spotting classification method perform spotting classification segmentation continuous data stream 

discussion introduced new method online gesture recognition encodes gestures strings 
string matching template string ongoing motion string spot classify gestures 
method advantage requiring time consuming preliminary gesture segmentation contrast commonly methods isolated gesture recognition hidden markov models 
addition gestures easily processed online 
comparing continuous matching cost template strings trained thresholds indicates gesture occurrences 
spotting detection occurrence classification knowing class gestures occurred carried time 
string matching classify manipulative gestures 
motion string matched template strings parallel gesture may classified belonging classes matching costs detection thresholds computed training 
resolve gestures assigned class template lowest relative matching cost occurrence 
providing desired filtering sophisticated filter take account gesture length history previously spotted gestures 
classifier may second stage classification method string matching method comes ambiguous classification results potentially improving classification accuracy 
particular string matching may fast segmentation method provide isolated segments classifiers operating isolated gestures hmms 
string matching segmentation may optimized accordingly 
trying maximize correct classification minimizing insertions deletions substitutions string matching system may optimized minimize number deletions 
high insertion substitution rates critical handled second classifier long computing power available classify potentially reject spotted gestures 
deletions critical gesture spotted string matching particular occurrence lost regardless second classifier 
template strings generic representation class gestures stand 
currently generated selecting string training set gestures smallest matching cost strings 
constrain search optimal template string 
exhaustive search computationally prohibitive approach may synthesize generic gesture training class instances encode template string 
synthesis may done traversing sequence states hidden markov model trained training gestures class 
method successfully exploited program robots imitation 
generation user independent template strings may carried similarly 
currently trajectory right hand processed 
step find way combining processing trajectories conceivable different levels trajectory encoding performing spotting parallel trajectories 
performance comparison string matching method related approaches dynamic time warping dtw hmm spotting methods remains object 
computational complexity string matching approach anticipated lower dtw hmm 
new data sample dtw algorithm performed find optimal warping path costly string matching approach involves comparisons new data sample 
addition parameters endpoint detection defined hand complex automated way making dtw approach generic 
described complexity hmm spotting approach tn equals number observation steps equals number states hmm 
clearly computationally demanding complexity string matching approach accounts nm wherem corresponds number observed motion symbols equals length string template see section 
current implementation spotting classification done matlab special optimizations times faster real time desktop computer 
implementation particular need complex arithmetic operation divisions trigonometric functions implemented entirely integer arithmetic 
consequence string matching method suited implementation low power micro controller systems 
intend capitalize efficient method investigating online gesture recognition low power sensor nodes 

introduced time method online gesture spotting classification efficient string matching techniques similar bioinformatics 
continuous motion trajectories encoded sequence symbols representing direction motion vectors 
gesture templates strings describing gestures recognized matched online string symbols representing ongoing motion trajectory 
efficient approximate string matching algorithm dynamic programming spot gestures robust way allowing variability gestures class 
high degree match template gesture string user motion string indicates gesture occurrence corresponding class 
demonstrated new approach recognizing typical manipulative gestures carried bicycle maintenance setup motion trajectories worker right hand 
realistic sequences recorded typical bicycle maintenance tasks occurring random order various null class events worker maintenance activities 
detected occurrences classes gestures remaining worker activities part null class 
results showed new method able spot trained gestures continuous recording motion high success rate correct rate number misclassifications remained low 
addition processing times faster real time desktop computer implementation optimizations 
string matching method fast uses simple integer arithmetic operations costly division operations 
performance suited implementation low power sensor nodes may placed body integrated wearable computing 
approach may serve fast gesture segmentation spotting costly methods relying motion dynamics analysis hidden markov models 
real strength string matching gesture recognition realized 
envision high level activities composed sequences elementary activities gestures may spotted classified similar way introducing string matching operators apply groups symbols addition isolated symbols paving way hierarchical activity recognition 

billard schaal cheng 
discovering optimal imitation strategies 
robotics auton 
systems 
bobick wilson 
state approach representation recognition gesture 
ieee transactions pattern analysis machine intelligence dec 
billard 
recognition reproduction gestures probabilistic framework combining pca ica hmm 
proc 
nd int 
conf 
machine learning 
chambers venkatesh west bui 
hierarchical recognition intentional human gestures sports video annotation 
proc 
conference pattern recognition pages 
deng tsui 
hmm approach gesture segmentation recognition 
th international conference pattern recognition volume pages september 
abowd understanding context context awareness 
technical report georgia tech 
fu chung ng luk 
evolutionary segmentation financial time series subsequences 
proc 
congress evolutionary computation pages may 
gusfield 
algorithms strings trees sequences 
university press 
hausdorff 
peng goldberger stoll 
gait fall risk affective disorders preliminary study 
bmc psychiatry 
junker tr ster 
continuous recognition arm activities body worn inertial sensors 
proc 
int 
symposium wearable computers pages 
winters gavin 
wearable social networking 
chi human factors computing systems pages 
keogh chu hart pazzani 
online algorithm segmenting time series 
proc 
int 
conf 
data mining pages 
ko west venkatesh kumar 
online context recognition multisensor systems dynamic time warping 
conference intelligent sensors sensor networks information processing pages dec 
kim model approach gesture recognition 
ieee transactions pattern analysis machine intelligence oct 
levenshtein 
binary codes capable correcting spurious insertions deletions ones 

lin keogh lonardi chiu 
symbolic representation time series implications streaming algorithms 
proc 
th acm sigmod workshop research issues data mining knowledge pages 
lukowicz junker von 
distributed multi sensor system context aware wearables 
borriello holmquist editors proc 
th int 
conf 
ubiquitous computing pages heidelberg sept 
springer 
minnen starner essa isbell 
discovering characteristic actions body sensor data 
proc 
ieee international symposium wearable computing pages oct 
muthukrishnan 
simple practical sequence nearest neighbors block operations 
proc 
th annual symposium combinatorial pattern matching pages 
navarro 
flexible pattern matching strings 
university press 
junker lukowicz tr ster 
ultrasonic hand tracking augment motion analysis recognition manipulative gestures 
proc 
ieee international symposium wearable computing pages oct 
rabiner 
tutorial hidden markov models selected applications speech recognition 
proceedings ieee feb 
randell muller 
context awareness analysing accelerometer data 
proc 
th international symposium wearable computers pages 
st ger lukowicz tr ster 
sensors miniature networked 
proc 
rd int 
conf 
networked sensing systems pages san diego ca 
transducer research foundation 
st ger lukowicz tr ster 
implementation evaluation low power sound user activity recognition system 
proc 
th international symposium wearable computers pages los alamitos ca 
ieee computer society press 
starner weaver pentland 
real time american sign language recognition desk wearable computer video 
ieee transactions pattern analysis machine intelligence 
tr ster 
event activity tracking environments 
third international forum applied wearable computing march 
junker lukowicz tr ster 
combining motion sensors ultrasonic hands tracking continuous activity recognition maintenance scenario 
th ieee international symposium wearable computers october 
bussmann de vries martens van 
detection static dynamic activities accelerometers 
ieee transactions rehabilitation engineering 
wilson bobick 
parametric hidden markov models gesture recognition 
ieee transactions pattern analysis machine intelligence sep 
