trio system omar das sarma chris jennifer widom stanford university widom cs stanford edu introduce relational databases add uncertainty lineage data class concepts 
model underlies trio system development stanford 
describe model sql query language 
semantics defined formally operationally extends sql constructs querying lineage confidence values 
briefly describe initial prototype trio implementation encodes conventional relations automatically translates queries sql commands encoding 
conclude research directions trio system 
trio project stanford developing new kind database management system dbms data uncertainty data data lineage class citizens extended relational model sql query language 
earlier wid motivated need aspects coexist system detailed numerous potential applications including scientific sensor data management data cleaning integration information extraction systems 
examples highly simplified crime solver application just base tables owns owner car saw witness car capturing possibly uncertain car ownership information crime vehicle sightings 
call type relational database managed trio lineage database 
tothe best knowledge database formalism integrate uncertainty lineage 
rest section briefly motivate concepts survey related 
uncertainty 
uncertainty captured tuples may include alternative possible values optional confidence values associated alternative 
example witness saw vehicle honda confidence toyota confidence mazda confidence sighting yields tuple alternative values 
furthermore presence tuples may uncertain optionally specified confidence 
example witness may confidence saw crime vehicle saw definitely 
alternative tuple values confidences represents multiple possible instances database 
supported national science foundation iis iis boeing 
lineage 
lineage called provenance associates data item information derivation 
broadly lineage may internal referring data external referring data outside data producing entities programs devices 
simple example internal lineage may generate joining 
lineage associated identifies data derived 
useful feature internal lineage confidence value computed confidence data lineage 
example external lineage owns may populated various car registration databases lineage connect data original source 
varieties lineage discussed wid 
focus simple internal lineage 
queries 
precise semantics relational queries section section operational description sql query language conforms semantics 
intuitively result relational query result possible instances correspond applying possible instance internal lineage connects data result data derived suspects join query introduced lineage discussion 
confidence values query results defined standard probabilistic fashion 
pronounced trio query language adapts sql possible instances semantics straightforward natural manner 
includes simple powerful constructs querying lineage find witnesses contributing suspicion jimmy querying uncertainty find sightings querying find suspects lineage contains low confidence sightings ownerships 
prototype 
initial prototype trio built top conventional relational dbms delve storage access method query optimization issues inside system 
currently encode conventional relations way translation layer users view manipulate model aware encoding 
queries translated automatically sql commands encoding translation difficult complex 
confidence lineage queried simple built functions predicates 
furthermore lineage enables confidence values query results computed lazily noteworthy feature approach 
prototype described detail section 
related initial motivation pursue line research described wid followed exploration space models uncertainty emphasis usability study new theoretical problems space 
subsequently added lineage uncertainty proposing formalizing 
papers contain extensive discussion related room 
large body previous working studying representation schemes query answering uncertain databases including certainly limited bp bp fr gra gra il var 
bdm describes system handling imprecisions data research group considerable progress query answering probabilistic databases bdm dms ds ds 
data lineage introduced scientific data visualization system ws studied conventional relational databases bkt bkt bkt data warehouses cw cw 
ctv describe system developed data provenance lineage 
uncertainty lineage databases model primarily examples 
formal treatment appears 
extend standard sql multiset relational model alternatives representing uncertainty contents tuple annotations representing uncertainty presence tuple numerical confidence values optionally attached alternatives lineage connecting tuple alternatives alternatives derived 
discuss constructs define semantics relational queries 
alternatives relations comprised tuples called relations 
tuple consists alternatives alternative regular tuple schema relation 
example witness amy saw honda toyota mazda witness car amy honda amy toyota amy mazda tuple logically yields possible instances table saw alternative 
general possible instances relation correspond combinations alternatives tuples example second tuple alternatives possible instances altogether 
clearly tuple represented naturally attribute level tuple level uncertainty 
set notation denote write witness car amy honda toyota mazda wid call attribute level construct set 
sets convenient compact representation tuples readability space efficient storage plan support trio reasons 
sets expressive tuples tuple contains sets multiple attributes alternatives tuple represents possible combinations values sets dependencies attributes expressed sets 
annotations suppose second witness betty thinks saw car sure 
saw car definitely 
uncertainty existence tuple generally tuple denoted annotation tuple 
betty observation added witness car amy honda amy toyota amy mazda betty second tuple indicates entire tuple may may call tuple 
possible instances relation include combinations alternatives combinations inclusion exclusion tuples 
table possible instances choices amy car times choices betty saw 
example possible instance tuples amy honda betty instance just amy mazda 
confidences numerical confidence values may attached alternatives tuple 
suppose amy confidence seeing honda toyota mazda respectively betty confidence seeing vehicle 
witness car amy honda amy toyota amy mazda betty formalize interpretation confidences terms probabilities 
interpretations may imposed probabilistic current default trio 
sum confidences alternatives tuple tuple 
implicitly confidence denotes probability tuple 
possible instance relation probability defined product confidences alternatives comprising instance 
shown relation probabilities possible instances sum confidence tuple alternative respectively equals sum probabilities possible instances containing alternative respectively containing alternative tuple 
important special case tuple alternative confidence value may 
case corresponds traditional notion probabilistic databases cp ds 
simplicity subsequent discussions assume includes confidences data mixing matching generally straightforward 
lineage lineage recorded granularity tuple alternatives lineage connects tuple alternative tuple alternatives 
specifically define lineage function alternatives gives set alternatives alternative derived 
consider join followed projection produce person 
column id contain unique identifier tuple denote jth alternative tuple identifier sample data tables including lineage derived data suspects 
example lineage jimmy presence table suspects second alternative tuple second alternative tuple 
id saw witness car cathy honda cathy mazda id suspects person jimmy billy hank id owns owner car jimmy toyota jimmy mazda billy honda hank honda recall considering internal lineage 
expect types external lineage recorded tuple alternative granularity lineage types coarser granularity appropriate wid 
relational queries 
interesting important effect lineage imposes restrictions possible instances 
consider derived table suspects 
tuples combinations possible 
billy suspects alternative chosen tuple hank 
jimmy alternative chosen tuple case billy hank 
note choosing alternative guarantee jimmy presence suspects tuple 
roughly speaking tuple alternative possible instance alternatives lineage actual constraints somewhat complex see details 
summary add lineage combinations alternatives choices correspond valid possible instances 
possible instances determined choices tuple times choices including tuple 
note arbitrary lineage functions may model consider example tuple lineage directly transitively includes different alternatives tuple 
formally define behaved lineage show internal lineage generated queries behaved 
behaved lineage possible instances entire correspond possible instances base data data lineage seen example 
behaved lineage interpretation confidences carries directly combining confidences base data determines probabilities possible instances just 
discuss confidences derived data section 
relational queries section formally define semantics relational query 
trio sql query language section 
semantics relational queries quite straightforward parts possible instances interpretation lineage query results 
refer 
consider possible instances dn shown left side 
evaluate query possible instances result dn shown lower right corner 
example query joins relations saw logically join possible instances relations 
course generate possible instances operate query processing algorithm follows top arrow producing query result represents possible instances 
model query result just set tuples contains original relations new result relation lineage relations reflects derivation data approach necessary represent correct possible instances query result enable consistent querying original new relations 
example previous subsection result query owner saw owns demonstrates possible instances technically possible instances lower half contain lineage aspect critical see formal details 
interpretation lineage query result original data details left useful exercise reader 
lineage tuples query results defined different ways explored bkt 
far considered class queries subsuming spj queries union formally defined lineage straightforward result tuple alternative identifies unique combination base tuple alternatives derived 
trio query language section describe trio sql query language 
built functions predicates querying confidence values lineage uses syntax sql 
interpretation sql queries modified reflect semantics discussed previous section 
current implementation limit single block queries aggregation 
general form query select attr list new table xn predicate example join query written exactly expected select owns owner person suspects saw owns saw car owns car execute query regular sql possible instances portion produces expected set possible instances result 
importantly operational semantics query produces result including lineage correctly represents possible instances 
operational semantics provide operational description specifying direct evaluation arbitrary query corresponding upper arrow 
consider generic query block 
schema denote composition schema schema schema xn relation schemas just sql query processing 
predicate evaluated tuples schema attr list subset schema symbol just sql 
steps operational description evaluating query block 
sql database systems query processor rarely execute simplest operational description inefficient query plan execution technique translation approach described section produce result description 

consider combination xn tuples inx xn combination time just sql 

form super tuple alternatives schema schema 
alternative combination alternatives xn 

xn add 
set lineage alternative alternatives xn constructed 

retain alternatives satisfying 
alternatives satisfy predicate re finished alternative satisfy predicate add 

operating confidences compute confidence values remaining alternatives store eager confidence computation set confidence values null lazy confidence computation 
see section discussion 

project alternative attributes list generating tuple query result 
clause insert table 
leave reader verify operational semantics produces suspects result table shown example data section generally conforms formal semantics section 
querying confidences provides built accessing confidence values 
suppose want query sightings having confidence ownerships having confidence 
write select owns owner person suspects saw owns saw car owns car conf saw conf owns operational semantics evaluate alternatives step conf xi refers confidence associated xi component alternative evaluated 
note function may trigger confidence computations lazy case 
querying lineage querying lineage introduces built predicate designed join condition 
include clause query relations clause constraining joined tuple alternatives connected lineage 
example suppose want find witnesses contributing hank suspect 
write select saw witness suspects saw lineage suspects saw suspects person hank clause lineage suspects saw evaluates true pair alternatives lineage includes 
course write query directly base relations remembered computed predicate provides general construct insensitive query history 
addition derived relation layers lineage suspects suspects base relations 
general time may develop levels lineage transitive lineage predicate lineage evaluates true pair alternatives path lineage 
predicate introduces interesting evaluation issues 
current prototype keeps track lineage structure uses joins predicates 
final example incorporating lineage confidence query finds persons suspected high confidence ownership honda select owns owner suspects owns lineage suspects owns owns car honda conf owns current implementation generation trio prototype running built top conventional relational dbms represented relational tables queries commands rewritten automatically sql commands evaluated representation 
core system implemented python presents simple api extends standard python db api database access python analog jdbc 
trio api supports queries sql query results cursors enumerating tuple objects regular tuples tuple objects provide programmatic access alternatives including confidences lineage 
application built trio api generic command line interactive client similar provided dbms currently building postgres open source dbms 
intentionally rely postgres specific features porting dbms providing db api straightforward 
sections describe representation conventional relations rewrite techniques query processing 
representing relations relation lineage possibly confidences 
store data portion conventional table call extra attributes aid xid conf 
alternative original relation stored tuple unique 
alternatives tuple tuple identifier xid 
conf stores confidence alternative special values null denotes alternative confidence computed computed alternative lineage denotes alternative confidence value tuple denotes alternative confidence value tuple 
alternative alternatives similarly conf 
lineage information relation stored separate table lin aid table aid tuples denote contains lineage 
example encoded corresponding subset data section confidence values added illustrative purposes saw aid xid conf witness car cathy honda cathy mazda suspects aid xid conf person jimmy billy owns aid xid conf owner car jimmy toyota jimmy mazda billy honda lin suspects aid table aid saw owns saw owns trio implementation require relations uncertainty lineage conventional relations coexist relations queried 
currently single trio metadata catalog keeps track relations include uncertainty records general structure lineage database relations include lineage relations 
query processing trio system evaluates queries translating sql operations representation described previous section 
consider query result stored new relation rewritten query qr executed actual database 
qr result post processed order group alternatives tuples represented generate lineage table lin confidence values result tuples computed separately possibly requested user application 
detail phases describe trio produces transient results queries clause 
query rewriting 
consider time variant favorite join query select owns owner person suspects saw owns saw car owns car conf saw query translated sql query qr shown sample query result create table suspects select aid null xid null conf owner person saw aid saw aid saw xid saw xid owns aid owns aid owns xid owns xid saw owns saw car owns car conf saw aid xid conf person saw aid saw xid owns aid owns xid null null billy translation queries lineage predicates requires joining corresponding lin tables expected way details omitted 
post processing 
trio engine processes result table obtained translated query qr follows 
step performed simple automatically generated sql commands 

new xid generated column group alternatives result tuples 
recalling operational semantics section simple group query xid original tuples saw xid xid example sequence generate new xid 
lineage information aid values table names moved separate newly created table lin suspects example 

data needed steps attributes saw aid saw xid owns aid xid example removed query result table dropping corresponding columns 

metadata information added trio catalog new fact derived 
computing confidences 
lastly discuss confidences query results definition computation 
class queries considered far simple definition enabled lineage confidence tuple alternative query result product confidences base tuple alternatives denotes transitive closure 
example table suspects derived alternative tuple confidence 
definition consistent possible instances semantics standard interpretation probabilistic databases 
fact confidences computed lineage enables compute store confidence values lazily wish application typically confidence values uses selectively 
course compute confidences eagerly query execution options operational semantics section 
optimizations possible computing confidences new challenges arise extend class queries considered 
area constitutes important avenue current mentioned section 
transient query results 
far section assumed query results stored table 
trio supports conventional transient query results clause omitted translated query qr sorts result xid original tuples executed cursor writing result table 
trio returns cursor client 
client iterates cursor tuple objects lineage generated fly iterating cursor sorted qr result 
current directions theory great deal theoretical 
effectively nearly topic considered relational database theory reconsidered 
examples include certainly limited dependency theory database design query containment rewritings sampling statistics 
attempting address interesting relevant problems 
confidences currently exploring various algorithms optimizations computing confidences lazily memoization pruning lineage traversal 
studying fundamental tradeoffs lazy eager computation confidences 
updates formal query semantics language query 
process considering updates identifying formally defining appropriate set primitive update operations exposing sql data modification commands 
queries current trio prototype supports single block spj queries 
additional query constructs simply require additional programming constructs duplicate elimination aggregation negated subqueries require complex definitions implementation lineage 
plan add richer constructs querying uncertainty including top style queries confidence horizontal queries aggregate perform subqueries tuple alternatives 
storage auxiliary structures query optimization model introduces new options tradeoffs data layout new possibilities indexing partitioning materialized views new challenges query operators optimizations 
fully explore topics need move prototype away translation approach custom implementation inside dbms 
long term goals important features original trio proposal wid barely touched remain agenda continuous uncertain values intervals gaussians incomplete relations versioning various types external lineage 
addition uncertainty lineage introduces new challenges human programmatic interfaces 
applications needless say important long term goal deploy wide variety applications trio system test functionality scalability 
may develop specialized versions trio restricted extended functionality suited specific applications sensor data management data integration 
acknowledgments agrawal alon halevy entire trio group useful discussions 
abiteboul kanellakis grahne 
representation querying sets possible worlds 
theoretical computer science pages 
bhagwat tan 
annotation management system relational databases 
proc 
intl 
conference large data bases vldb 
das sarma halevy widom 
databases uncertainty lineage 
technical report stanford december 
available stanford edu pub 
bdm mathur re suciu 
system finding answers probabilities 
proc 
acm sigmod intl 
conference management data 
barbar garcia molina porter 
management probabilistic data 
ieee transactions knowledge data engineering october 
bkt buneman khanna tan 
data provenance basic issues 
proc 
intl 
conference foundations software technology theoretical computer science pages 
bkt buneman khanna tan 
characterization data provenance 
proc 
intl 
conference database theory icdt 
bkt buneman khanna tan 
propagation deletions annotations views 
proc 
acm intl 
conference principles database systems pods 
bp 
fuzzy model relational databases 
international journal fuzzy sets systems 
bp pu 
accessing imprecise data approach intervals 
ieee data engineering bulletin june 
cp 
theory probabilistic databases 
proc 
intl 
conference large data bases vldb 
ctv tan 
post system relational databases provenance 
proc 
acm sigmod intl 
conference management data 
cw cui widom 
practical lineage tracing data warehouses 
proc 
intl 
conference data engineering icde 
cw cui widom 
lineage tracing general data warehouse transformations 
vldb journal may 
cui widom wiener 
tracing lineage view data warehousing environment 
acm transactions database systems june 
das sarma halevy widom 
working models uncertain data 
proc 
intl 
conference data engineering icde april 
dms miklau suciu 
asymptotic conditional probabilities conjunctive queries 
proc 
intl 
conference database theory icdt 
das sarma widom 
representing uncertain data uniqueness equivalence minimization approximation 
technical report stanford 
available stanford edu pub 
ds suciu 
efficient query evaluation probabilistic databases 
proc 
intl 
conference large data bases vldb 
ds suciu 
answering queries statistics probabilistic views 
proc 
intl 
conference large data bases vldb 
fr fuhr 
probabilistic nf relational algebra imprecision databases 
unpublished manuscript 
gra grahne 
dependency satisfaction databases incomplete information 
proc 
intl 
conference large data bases vldb 
gra grahne 
horn tables efficient tool handling incomplete information databases 
proc 
acm intl 
conference principles database systems pods 
il imielinski 
incomplete information relational databases 
journal acm october 
lakshmanan leone ross subrahmanian 
flexible probabilistic database system 
acm transactions database systems september 
var vardi 
querying logical databases 
proc 
acm intl 
conference principles database systems pods 
wid widom 
trio system integrated management data accuracy lineage 
proc 
conference innovative data systems research cidr 
ws woodruff stonebraker 
supporting fine grained data lineage database visualization environment 
proc 
intl 
conference data engineering icde 

