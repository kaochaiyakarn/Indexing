knowledge representation ontologies logic ontologies semantic web languages stephan grimm pascal hitzler andreas abecker fzi research center information technologies university karlsruhe germany grimm abecker fzi de institute aifb university karlsruhe germany hitzler aifb uni karlsruhe de summary 
artificial intelligence knowledge representation studies formalisation knowledge processing machines 
techniques automated reasoning allow computer system draw knowledge represented machine interpretable form 
ontologies evolved computer science computational artefacts provide computer systems conceptual computational model particular domain interest 
way computer systems base decisions reasoning domain knowledge similar humans 
chapter gives overview basic knowledge representation aspects ontologies computer systems 
introducing ontologies terms appearance usage classification addresses concrete ontology languages particularly important context semantic web 
predominant ontology languages formalisms relation selection discussed detail 
knowledge representation branch symbolic artificial intelligence knowledge representation reasoning aims designing computer systems reason machine interpretable representation world similar human reasoning 
knowledge systems computational model domain interest symbols serve surrogates real world domain artefacts physical objects events relationships 
domain interest cover part real world hypothetical system desires represent knowledge computational purposes 
knowledge system maintains knowledge base stores symbols computational model form statements domain performs reasoning manipulating symbols 
applications base decisions domain relevant questions posed knowledge base 
motivating scenario illustrate principles knowledge representation chapter introduce example scenario taken travelling case 
scenario companies frequently stephan grimm pascal hitzler andreas abecker book business trips employees sending international meetings conference events 
scenario relevant case semantic web services companies desire automate online booking process want benefit high competition various travel agencies airlines sell tickets internet 
automation achieved computational agents deciding online offer travel agency fits request business trip knowledge offer request 
knowledge represented domain business trips flights trains booking companies employees cities source destination trip knowledge systems computational representation knowledge form statements domain interest 
examples statements business trips domain companies book trips employees flights train rides special kinds trips employees persons employed 
knowledge answer questions domain interest 
statements means automated deduction knowledge system example derive person flight booked employee booked flight person person employer 
way knowledge computational agent reason business trips similar way human 
example tell apart offers business trips offers vacations decide destination city requested flight close geographical region specified offer conclude participant business flight employee booked flight 
forms representing knowledge look current semantic web technologies cases knowledge representation appears different forms prevalent semantic networks rules logic 
semantic network structures rdf graph representations topic maps formalisation business knowledge comes form rules reading business rules logic programming formalisms 
logic realise precise semantic interpretation forms 
providing formal semantics knowledge representation languages logic formalisms lay basis automated deduction 
investigate forms knowledge representation 
semantic networks originally semantic networks stem existential graphs introduced charles peirce express logical sentences graphical node link diagrams 
similar notations introduced conceptual graphs differing slightly syntax semantics 
despite differences semantic network formalisms concentrate expressing taxonomic structure categories objects relations 
general notion semantic network abstracting different concrete notations proposed 
semantic network graph nodes represent concepts arcs represent relations concepts 
provide structural representation statements domain interest 
business trips domain typical concepts knowledge representation ontologies employee flight typical relations books 
shows example semantic network business trips domain 
person employee isa misterx isa ubiqbiz books location trip city flight books isa fl fig 

semantic network business trips uscity isa london isa new york semantic networks provide means natural language representing knowledge captured text form suitable computation 
knowledge expressed network coincides content natural language text 
employees companies persons persons companies legal entities 
companies book trips employees 
trips flights train rides start cities europe usa 
companies locations cities 
ubiqbiz books flight fl london new york typically concepts chosen represent meaning nouns text relations mapped verb phrases 
fragment books trip read companies book trips expressed binary relation concepts 
mandatory relation books lifted concept booking relations pointing employee trip respectively 
way ternary character expressed accurately original network information employee involvement booking implicit 
principle concepts relations semantic network generic stand relevant domain interest 
particular relations standard knowledge representation reasoning cases evolved 
stephan grimm pascal hitzler andreas abecker semantic network illustrates distinction general concepts employee individual concepts misterx represent concrete individuals objects domain interest serve classes group individuals certain properties common employees 
particular relation links individuals classes instantiation denoted isa misterx called instance concept employee 
lower part network concerned knowledge individuals reflecting particular situation employee misterx participating certain flight upper part concerned knowledge general concepts reflecting various possible situations 
prominent type relation semantic networks subsumption denote subsumption link connects general concepts expresses specialisation generalisation respectively 
network flight said special kind trip trip subsumes flight means flight trip trips flights train rides 
subsumption associated notion inheritance specialised concept inherits properties general parent concepts 
example network read located european city points location kind city kind location concept inherits property potential location concept location particular relations semantic network notations example partof denote part relationships semantic networks closely related form knowledge representation called frame systems 
fact frame systems semantic networks identical expressiveness different representation metaphors 
semantic network metaphor graph concept nodes linked relation arcs frame metaphor draws concepts boxes frames relations slots inside frames filled frames 
frame metaphor graph turns nested boxes 
semantic network form knowledge representation especially suitable capturing taxonomic structure categories domain objects expressing general statements domain interest 
inheritance relations categories represented derived subsumption hierarchies 
hand representation concrete individuals data values numbers strings fit idea semantic networks 
rules natural form expressing knowledge domain interest rules reflect notion consequence 
rules come form constructs allow express various kinds complex statements 
rules logic programming systems language prolog deductive databases business rules systems 
example rules expressing knowledge business trips domain specified intuitive reading 
knowledge representation ontologies flight trip person participates trip booked person employee fact person misterx participates flight booked ubiqbiz trip source destination cities close trip train part called body rule part called head 
typically rule knowledge representation systems operate facts formalised special kind rule empty body 
start set facts rule apply rules order derive new facts drawing 
intuitive reading natural language phrases suitable computation phrases formalised predicates variables objects domain interest 
formalisation rules typical style rule languages looks follows 
trip flight employee trip books person person misterx misterx fl flight fl books ubiqbiz fl ubiqbiz trip close logic programming systems rule read inverse implication starting head followed body indicated symbol resembles backward arrow 
formalisation intuitive notions text concepts relations semantic network case predicates linked variables constants identify objects domain interest 
variables start symbol take values constants occur facts 
rule captures inheritance subsumption trips flights stating flight trip 
rule draws status employment participants business flights 
facts rules able derive implicit fact misterx employee ubiqbiz 
rules express general domain knowledge rule interpreted part travelling policy stating trips close cities shall conducted train 
business rules example rule formalisms motivation capture complex business knowledge companies pricing models delivery policies 
rule knowledge representation systems especially suitable reasoning concrete instance data simple facts misterx 
complex sets rules efficiently derive implicit facts explicitly ones 
problematic complex general statements domain shall derived fit rule head 
stephan grimm pascal hitzler andreas abecker logic forms semantic networks rules formalised logic give precise semantics 
precise formalisation vague ambiguous problematic computational purposes 
just graphical representation semantic network example clear companies book flights employees employees partner companies 
clear fragment books trip books trips just 
rules despite formal appearance exact meaning remains unclear example forms negation introduced allow potential conflicts rules 
depending choice procedural evaluation flavour formal semantics different derivation results produced 
prominent fundamental logical formalism classically knowledge representation order predicate calculus order logic short choose formalism logic form knowledge representation 
firstorder logic allows describe domain interest consisting objects things individual identity construct logical formulas objects formed predicates functions variables logical connectives 
assume reader familiar notation order logic formalisations various mathematical disciplines 
similar semantic networks statements natural language expressed terms logical sentences objects domain interest appropriate choice predicate function symbols 
concepts mapped unary relations binary predicates 
illustrate logic knowledge representation parts semantic network precisely 
subsumption example directly expressed logical implication illustrated translation fragment 
employee person employee person due universal quantifier variable logical formula ranges domain objects reading employee person 
parts network restricted logical formulas shown example 
books trip books trip trip books graphical representation network fragment leaves details open logical formulas capture booking relation companies trips precisely 
formula states domain range booking relation companies trips respectively second formula sure trip exist booked 
particular complex restrictions range larger fragments network graph formulated logic intuitive graphical notation lacks expressivity 
example consider relations companies trips employees fragment 
knowledge representation ontologies books trip employee trip employee books employer logical formula expresses additional knowledge captured graph representation 
states trip employee participates trip employer participant booked flight 
rules formalised logic 
rule represented logical implication universally quantified variables 
example common formalisation rule trip source destination cities close trip train translation logical formula trip close 
typical rule systems interpret formula classical sense order logic employ different kinds semantics discussed section 
precise axiomatisation domain knowledge prerequisite processing knowledge computers meaningful way focus logic dominant form knowledge representation 
investigate different kinds logics formal semantics closely subsequent section 
context semantic web particular logical formalisms gained momentum reflecting semantic network rules forms knowledge representation 
graph notations semantic networks formalised description logics fragments order logic typical tarskian model theoretic semantics restricted unary binary predicates capture notions concepts relations 
hand rules formalised logic programming formalisms minimal model semantics focusing derivation simple facts individual objects 
description logics logic programming underlying formalisms various knowledge representation languages semantic web addressed section 
reasoning knowledge way humans process knowledge reasoning process reaching 
analogously computer processes knowledge stored knowledge base drawing deriving new statements follow ones 
basic operations knowledge system perform knowledge base typically denoted 
operation adds new statement knowledge base ask operation query known 
statements added knowledge base operation constitute explicit knowledge system domain interest 
ability process explicit knowledge computationally allows knowledge system reason domain interest deriving implicit knowledge follows told explicitly 
stephan grimm pascal hitzler andreas abecker leads notion logical consequence entailment 
knowledge base kb said entail statement follows knowledge stored kb written kb 
knowledge base entails statements added operation plus logical consequences 
example consider knowledge base sentences order logic 
kb person misterx participates misterx fl flight fl books ubiqbiz fl flight participates books employee person knowledge base kb explicitly states misterx person participates flight fl booked ubiqbiz participants flights employed booked flight employment relation holds companies employees persons different companies 
ask question misterx employed ubiqbiz saying ask kb misterx ubiqbiz answer 
knowledge base kb entails fact misterx employed ubiqbiz kb misterx ubiqbiz told explicitly 
follows general knowledge domain 
consequence ubiqbiz kb ubiqbiz reflected positive answer question ask kb ubiqbiz 
follows consequence fact employment holds companies employees 
important notion related entailment consistency satisfiability 
intuitively knowledge base consistent satisfiable contain contradictory facts 
add fact ubiqbiz person knowledge base kb saying tell kb person ubiqbiz unsatisfiable persons said different companies 
explicitly said ubiqbiz person time derived 
general unsatisfiable knowledge base useful logical formalisms entail arbitrary fact 
operation return positive result independent parameters clearly desirable knowledgebased system 
inference procedures implemented computational reasoners aim realising entailment relation logical statements 
derive implicit statements knowledge base check particular statement entailed knowledge base 
knowledge representation ontologies inference procedure derives entailed statements called sound 
soundness desirable feature inference procedure unsound inference procedure potentially draw wrong 
inference procedure able derive statement entailed knowledge base called complete 
completeness desirable property complex chain break single statement missing 
reasoning knowledge systems desire sound complete inference procedures 
logic knowledge representation formalisms order predicate logic prevalent single important knowledge representation formalism 
importance stems fact basically current symbolic knowledge representation formalisms understood relation order logic 
roots traced back ancient greek philosopher aristotle modern firstorder predicate logic created th century foundations modern mathematics laid 
order logic captures essence human reasoning providing notion logical consequence mentioned 
provides notion universal truth sense logical statement universally valid called tautology meaning statement true regardless preconditions 
logical consequence universal truth described terms model theoretic semantics 
essence model logical theory describes state affairs theory true 
tautology statement possible states affairs models 
logical consequence theory statement true models theory 
derive logical consequences theory process called deduction inferencing obviously central study logic 
deduction allows access knowledge explicitly implicitly represented theory 
valid ways deriving logical consequences theories date back greek philosophers studied 
heart known proof theory 
proof theory describes syntactic rules act theories allow derive logical consequences explicit recurrence models 
notion universal truth reduced syntactic manipulations 
allows model theory enables deduction symbol manipulation automated means 
obviously advent electronic computing devices th century automation deduction important influential field study 
field automated reasoning concerned development efficient algorithms deduction 
algorithms usually required sound completeness desired feature 
fact sound complete deduction algorithms exist order predicate logic reflected statement order logic semi decidable 
precisely logical theory denotes set logical formulas seen axioms theory mod 
stephan grimm pascal hitzler andreas abecker semi decidability order logic means exist algorithms theory query statement terminate positive answer finite time statement logical consequence theory 
note semi decidability termination required statement logical consequence theory termination correct negative answer guaranteed general order logical theories 
kinds theories sound complete deduction algorithms exist terminate 
theories called decidable certain obvious advantages including 
decidability guarantees algorithm comes back correct answer finite time 
semi decidability algorithm runs considerable amount time may terminate may terminate user know waited long answer 
decidability particularly important want reason question statement logical consequence theory 
experience shows practically efficient algorithms available decidable theories due effective heuristics 
case worst case complexity high 
description logics description logics essentially decidable fragments order logic just seen study important 
time description logics expressive major knowledge representation paradigm particular semantic web 
describe important influential description logics called alc 
description logics best understood restrictions extensions alc 
introduce standard description logic notation give formal mapping standard order logic syntax 
description logic alc description logic theory consists statements concepts individuals relations 
individuals correspond constants order logic concepts correspond unary predicates 
terms semantic networks description logic concepts correspond general concepts semantic networks individuals correspond individual concepts 
deal concepts talk individuals 
concepts named concepts anonymous composite concepts 
named concepts consist simply name say human mapped unary predicate noted practical limitations due fact computing resources limited 
theoretically sound complete terminating algorithms may run resource limits terminate answer 
precise exist description logics decidable 
exist straightforward fragments order logics 
general concern 
knowledge representation ontologies order logic 
composite concepts formed named concepts concept constructors similar formation complex formulas atomic formulas firstorder logic 
alc boolean constructors conjunction binary disjunction binary negation unary 
concepts concepts 
concept constructors nested arbitrarily 
translation boolean constructors order predicate logic obvious 
give example statement translates formula 
alc statements relate named anonymous concepts means inclusion inverse inclusion equivalence 
meaning order logic implication inverse implication equivalence 
occurring free variables universally quantified 
give example statement translates 
alc provides special classes shortcuts 
defined means equivalences arbitrary concept 
empty concept concept falls 
alc allows restricted quantifiers means called role restrictions 
role named entity translates binary predicate order logic 
semantic network paradigm roles relations concepts 
role named anonymous concept composite concepts formed 
role restrictions boolean constructors nested arbitrarily form anonymous concepts 
composite concept translates order logic translates 
alc tbox consists set statements form named composite concepts 
obviously tbox translated order logic inherits logical consequence relation 
give examples tbox statements business trips domain employee person encodes knowledge employee person trip person states trip booked person 
come individuals correspond constants order logic 
alc allows state individuals belong named composite concepts states individual belongs concept similarly statement role means individuals stand relation translation order logic obvious 
stephan grimm pascal hitzler andreas abecker alc abox consists set statements form named anonymous concept role individuals 
alc knowledge base consists alc abox alc tbox 
examples abox statements flight fl fl ubiqbiz obvious meanings 
alc allows define basic form knowledge bases 
mentioned appears somewhat akin semantic networks differs important respects alc comes precise formal semantics order logic expressive due concept constructors 
alc restricted expressiveness comparison knowledge representation formalisms 
apparent restricted kinds firstorder logical statements expressible alc 
order meet requirements practice necessary extend expressiveness alc 
extensions necessarily kind larger fragment order logic obtained 
just ways extending alc examine 
decidability preserving extensions alc seen decidability desirable property natural question arises extensions alc retain decidability 
extending alc staying order logic hand retaining decidability driving forces description logic research past 
briefly describe extensions 
comprehensive treatment description logics see 
additions alc retaining decidability 
roles binary predicates additional properties transitive symmetric inverse roles 
role described inverse role 
roles arranged hierarchically statement allowed roles translates order logic 
individuals compared stating explicitly individuals identical different 
allowed called nominals tbox 
nominals classes consist enumeration exactly elements class 
example statement says class contains exactly elements quantifiers generalised number restrictions yields anonymous concepts role positive integer 
describes set individuals equal individuals relation meaning second construction analogous 
note example equivalent 
roles ones described far called roles 
description logics additionally allow concrete roles allow assign datatype values integers strings individuals 
minor restrictions need respected include 
knowledge representation ontologies alc mentioned additions roughly constitutes description logic 
strange acronym comes certain agreed standard naming description logics letter stands specific group allowed constructor 
stands alc transitivity roles 
stands role hierarchies 
stand nominals inverse roles respectively 
stands number restrictions 
stands concrete roles datatypes 
non classical semantics essentially decidable fragment order predicate logic 
certain expressive features conveniently described means order logic 
study expressive features motivated artificial intelligence applications long history knowledge representation reasoning corresponding extensions alterations description logics developed 
general perspective expressive features obtained altering notion logical consequence 
recall order predicate logic statement logical consequence theory true models theory 
models theory turn interpretations states affairs theory true 
alternative notion logical consequence derived selecting interpretations theory true simply interpretations calling statements logical consequences true selected interpretations 
endeavour appears somewhat dubious provides general perspective expressive features knowledge representation reasoning 
important certainly corresponding selections interpretations clearly defined meaningful 
selection done conveniently means additional syntax cover additional expressive features important semantic web context 
reasoning expressive features computationally expensive fact known obstacle developments symbolic artificial intelligence 
means description logics fact show reasonable scalability despite high worst case complexities expressive knowledge representation features attractive practical purposes 
obvious importance identification tractable description logics done :10.1.1.11.4071
closed world assumption closed world assumption cwa understood computational reinterpretation negation 
roughly speaking assumption proven wrong 
assume example statement employee booked trip certain date available internal meetings day assume furthermore knowledge available employee misterx booked trip precisely corresponds order predicate logic equality 
care needs taken encoding number restrictions datatypes allowed required 
stephan grimm pascal hitzler andreas abecker certain day 
cwa conclude misterx available internal meeting particular day 
cwa perspective particularly natural database point view 
employee assumed booked trip booking database 
database describes closed world statements case explicitly known case 
treating semantic web knowledge cwa conceptually difficult cases 
comes open nature world wide web data constantly added changing 
particular piece knowledge retrieved semantic web safely assumed false information may contained web page included crawled 
situation treated open world assumption owa assumes drawn remain valid new information added 
semantics order predicate logic description logics operates owa 
knowledge person booked flight owa conclude person availability internal meeting example statement 
safe assume knowledge databases play natural role realisation semantic web come alongside knowledge sources open web 
restricting knowledge representation pure owa pure cwa settings insufficient basic framework open semantic web owa restricted cwa possible time 
integration known local closed world currently researched perspectives 
say section non monotonicity 
non monotonicity original motivation study non monotonic reasoning comes observation humans tend jump making day practical commonsense decisions 
book train trip conclude won arriving bus case base decisions knowledge simply assume true 
knowledge real world complete 
may turn example large power outage day trip trains won run substitute transported bus short notice 
jumping may necessary withdraw knowledge available 
example just withdraw knowledge arriving bus soon learn special circumstances 
sense commonsense reasoning non monotonic 
formally knowledge representation formalism called monotonic larger theory implies words addition knowledge invalidates drawn addition 
knowledge representation formalism non monotonic monotonic 
order predicate logic description logics monotonic 
formalisms operating cwa usually non monotonic database contain booking information misterx business trip certain date knowledge representation ontologies concluded misterx available internal meetings date appropriate rule booking information known added database earlier withdrawn 
strong relation cwa non monotonicity known inspired lines research areas 
historically major approaches non monotonicity briefly list 
default logic uses called default rules form expressing condition formulas case possible conclude 
give example statement fl trip foreign country statement fl train ride statement fl flight 
assume know fl trip foreign country 
knowledge fl flight train ride conclude default rule fl flight 
add knowledge fl train ride withdrawn 
sense default rule rule allows exceptions 
circumscription realises non monotonicity means condition logical predicates ensures cases truth falsity statement enforced case classical order predicate logic 
circumscription expressed means second order logic see section require extension syntax 
autoepistemic logic employs modal logic operator represent believed necessarily known 
historic approaches studied context description logics central respectively 
open quest find suitable semantic web applications 
particular importance obvious scalability requirements question formalism realises reasoning practically useful way 
historically area non monotonic reasoning received decisive impulses logic programming research discuss 
logic programming logic programming originally conceived way order predicate logic programming language 
order allow efficient computation formulas syntactically restricted called horn clauses 
additionally certain kinds logical consequences considered 
syntactically horn clauses understood rules 
example expression trip flight horn clause semantically equivalent respect fol trip flight 
turn interpreted rule trip flight page 
note semantics horn clause means order logic semantics logic programming rules usually understood different sense 
differences stems fact logic programming system stephan grimm pascal hitzler andreas abecker certain types logical consequences considered ground instances predicates 
example addition fl allow fl fol logic programming system 
fl flight fl possible fol derivable logic programming semantics 
second difference semantics concerns handling negative information 
example interested statement trip fl holds 
fol truth falsity statement derivable 
logic programming statement considered false 
handling negative information logic programming sense cwa information available considered trip 
logic programming semantics non monotonic just consider adding single fl knowledge base fl turns true 
insight triggered substantial research efforts relating logic programming nonmonotonic reasoning led non monotonic kinds negation logic programming paradigm see 
combine logic programming rules formalisms description logics constitutes research issue 
prominent approaches include creation hybrid systems interfacing logic programming systems description logic systems 
approaches simply go back horn clauses add fol statements description logic knowledge bases 
higher order logic feature considered important knowledge representation semantic web known metamodelling 
occurs description logic classes considered individual members meta classes properties shall attached entire classes means roles 
logically corresponds high order logics generally results loss decidability 
decidable fragments described 
give example consider international semantics knowledge management system business trips requires different languages spoken supported system 
may necessary represent knowledge concept flight called german 
represented concrete role statement flight 
data value type string concept flight appears syntactically individual 
notice data value directly assigned concept instances 
treatment inconsistencies point particular importance semantic web lies sensible treatment inconsistencies knowledge bases 
comes fact semantic web applications ground instance predicate atomic formula contain variable symbols 
knowledge representation ontologies necessary merge different knowledge bases different sources expected cases parts respective knowledge bases may conflict resulting inconsistency 
classical fol setting single inconsistency causes knowledge base entirely useless 
practical purposes possible rescue knowledge constructive way order draw meaningful knowledge 
exist basic approaches dealing inconsistency 
intuition inconsistencies point mistakes modelling repaired 
technically repairs done identifying maximal consistent subsets knowledge base drawing see 
approach called paraconsistent logics additional truth value represents contradiction see 
uncertainty knowledge acquired machine learning techniques 
knowledge base statements obtained way usually uncertain example probabilistic sense sense fuzzy logic 
efforts way provide methods tools representation reasoning uncertainty description logics 
give example consider business trips booking internet portal uses knowledge base providing personalised content user 
usage patterns ubiqbiz customers knowledge base knows probability ubiqbiz customer browsing portal interested booking flight able provide appropriate personalised content 
part sophisticated personalisation knowledge base treatment probabilities uncertainty values important 
ontologies information systems notion ontologies computational artefacts appeared artificial intelligence computer science ontology originally denotes study existence philosophy 
information systems ontologies conceptual models exists domain brought machine interpretable form means knowledge representation techniques 
section start general definition notion ontology elaborate appearance usage computer science 
ontology original meaning philosophy ontology branch metaphysics denotes philosophical investigation existence 
concerned fundamental questions kinds things 
dating back aristotle question exists lead studying general categories things exist 
ontological categories provide means classify existing things systematic organisation categories allows analyse world things structured way 
ontology categories referred universals concrete things serve classify referred particulars 
stephan grimm pascal hitzler andreas abecker philosophers concerned general top level hierarchies universals cover entire physical world 
examples universals occurring top level hierarchies general concepts substance physical object intangible object endurant perdurant 
philosophers argued appropriateness different categorisations general properties existing 
transferred knowledge representation computer science information systems benefit idea ontological categorisation 
applied limited domain interest scope concrete application scenario ontology restricted cover special subset world 
examples ontological categories business trips domain person trip flight examples particular individuals classified categories person misterx ubiqbiz particular flight fl 
general choice ontological categories particular objects domain interest determines things knowledge represented computer system 
sense ontology provides labels nodes arcs semantic network names predicates constants rules logical formulas constitute ontological vocabulary 
defining exists determines things predicated 
terms ontological vocabulary represent knowledge forming statements domain 
ontologies ontology studies exists domain interest ontology computational artefact encodes knowledge domain machine processable form available information systems 
definition ontology various application contexts different communities ontologies explored different points view exist definitions ontology semantic web community dominating definition ontology 
definition ontology 
ontology formal explicit specification shared conceptualisation domain interest 
definition captures characteristics ontology specification domain knowledge aspects formality explicitness shared domain specificity require explanation 
formality ontology expressed knowledge representation language provides formal semantics 
ensures specification domain knowledge ontology machine processable interpreted defined way 
techniques knowledge representation help realise aspect 
knowledge representation ontologies explicitness ontology states knowledge explicitly accessible machines 
notions explicitly included ontology part machine interpretable conceptualisation captures humans take granted common sense shared ontology reflects agreement domain conceptualisation people community 
larger community difficult come agreement sharing conceptualisation 
ontology limited particular group people community construction associated social process reaching consensus 
ontology specifies knowledge conceptual way terms symbols represent concepts relations 
concepts relations ontology intuitively grasped humans correspond elements mental model 
contrast weights neural network probability measures network fit conceptual symbolic approach 
ontology describes conceptualisation general terms capture particular state affairs 
making statements specific situation involving particular individuals ontology tries cover situations possible potentially occur 
domain specificity specifications ontology limited knowledge particular domain interest 
narrower scope domain ontology ontology engineer focus details domain covering broad range related topics 
way explicit specification domain knowledge modularised expressed different ontologies separate domains interest 
technically principal constituents ontology concepts relations instances 
concepts map generic nodes semantic networks unary predicates logic concepts description logics 
represent ontological categories relevant domain interest 
relations map arcs semantic networks binary predicates logic roles description logics 
semantically connect concepts instances specifying interrelations 
instances map individual nodes semantic networks constants logic 
represent named identifiable concrete objects domain interest particular individuals classified concepts 
elements constitute ontological vocabulary respective domain interest 
ontology viewed set statements expressed terms vocabulary notice notion explicitness different distinction explicit implicit knowledge introduced earlier 
implicit knowledge derived means automated deduction need included ontology computer system access 
knowledge explicitly stated logically follows stated means processed machine obvious human 
knowledge remains implicit modeller mind represented machine 
stephan grimm pascal hitzler andreas abecker referred axioms 
simple axiom example state employee involving instance concept 
complex axiom state employees particular trips booked imposing restriction relation concepts 
conceptual modelling ontologies similar modelling objectoriented software development designing entity relationship diagrams database schemas 
subtle twofold difference 
ontology languages usually provide richer formal semantics object oriented database related formalisms 
support encoding complex axiomatic information due logic notations 
ontology specifies semantically rich axiomatisation domain knowledge mere data object model 
second ontologies usually developed different purpose object oriented models entity relationship diagrams 
describe components information system executed machine schema data storage respectively ontology captures domain knowledge allows reason 
summary ontology information system conceptual executable model application domain 
machine interpretable means knowledge representation techniques applications base decisions reasoning domain knowledge 
appearance ontologies engineered processed information systems ontologies appear different forms related forms knowledge representation discussed 
knowledge engineer views ontology means graphical formal visualisation storage transfer encoded ontology language machine processable serialisation format 
reasoner turn interprets ontology set axioms constitute logical theory 
illustrate different forms appearance ontology engineering machine processing reasoning example 
business trips scenario introduced earlier involves domains interest 
hand reasoning business trips requires knowledge travelling infrastructure trains flights rental cars hand involves financial knowledge prices different currencies methods payment comes comparing different offers 
related domain geographic knowledge locations sources destinations trips pick example illustrate appearance ontologies 
different domains interest thought captured modularised set ontologies information system business trips scenario access 
geographic ontology suitable business trips booking system encodes countries continents geographic regions geographic features rivers roads rail tracks cities 
relates geographic features regions stating example city occupies certain region defines containment regions geographic region european city example contained europe 
general geographic concepts relations ontology determines concrete instances particular cities countries continents relates appropriately 
knowledge representation ontologies knowledge engineer ontology visualised form semantic network 
shows graphical visualisation example geographic ontology 
london berlin isa isa city uscity isa io io io newyork road infrastructure river geographic feature isa isa isa isa isa isa territory ocean lake isa isa land isa isa isa isa locatedin locatedin locatedin locatedin locatedin contains locatedin contains isa locatedin locatedin isa america fig 

graphical visualisation geographic ontology isa continent europe country io io io common ontology development environments visualisation presents knowledge engineer taxonomy subsumption hierarchy concepts ontology indicated isa links 
taxonomies exposed graph subconcepts linear planar regions subconcepts geographic features cities rivers geographic areas continents countries 
visualisation knowledge engineer see conceptual relations arcs pointing domain concept range concept 
relation locatedin location city country associated region located 
road river restricted located city lake located encompassing surface area 
graph shows concrete cities countries modelled instances respective concepts serve representatives particular geographic places ontology populated 
information ontology easily visualised graph shown 
detailed information complex axioms restrictions concepts date exist appropriate visualisation paradigm exposing fragments ontology formal language 
ontology engineering environments usually provide extra means displaying editing ontology graph produced plugin prot environment protege stanford edu plugins owl 
usa stephan grimm pascal hitzler andreas abecker complex axiomatic information special purpose ontology language logical formal notation 
environment exports ontology storage disk transfer wire information expressed ontology language supported tool 
way ontology appears developer ontology editor storage facility reasoner form ontology language constructs serialisation format suitable machine processing 
various ontology languages different knowledge representation formalisms investigate prevalent section 
illustrating fragment example geographic ontology choose owl ontology language 
listing displays part ontology encoded owl rdf serialisation format 
owl class rdf id city rdfs subclassof owl restriction owl onproperty rdf resource locatedin owl allvaluesfrom rdf resource owl restriction rdfs subclassof rdfs subclassof rdf resource infrastructure owl rdf resource road owl rdf resource owl class owl objectproperty rdf id locatedin rdf type rdf resource owl rdfs domain rdf resource rdfs range rdf resource owl inverseof rdf resource owl objectproperty rdf id london 
listing shows excerpt geographic ontology serialised parsed tools transferred network 
exhibits specification owl classes concepts properties relations individuals instances expressed tags attributes customised xml serialisation 
city concept defined subconcept infrastructure restriction relation locatedin instances values 
relation locatedin defined functional having unique value inverse proper domain range concepts 
london introduced instance 
ontology languages owl logical formalisms formal semantics language precisely defines meaning ontology terms logic 
reasoner ontology appears set logical formulas express axioms logical theory 
verify axioms consistent derive logical consequences 
form appearance ontology free syntactical graphical additions ambiguities reflects pure knowledge representation aspect 
description logic notation owl exemplify axioms example geographical ontology logical form 
dl formulas constitute definition european city 
dl web ontology language owl popular semantic web context described section languages 
knowledge representation ontologies locatedin locatedin contains contains locatedin continent continent europe city locatedin city locatedin contains locatedin europe quite sophisticated formula defines concept european city geographical region contained geographical region european continent 
translation order logic 
city locatedin contains locatedin europe prose reading european cities cities geographic regions located contained geographic region europe located allows knowledge system decide city european reasoning containment geographic regions 
logical form ontology set axioms constitutes explicit knowledge represented domain interest 
means automated deduction implicit knowledge form derived part ontology explicit specification 
usage ontologies ontology distinguished knowledge base supposed describe knowledge schema level terms conceptual taxonomies general statements data intensive knowledge base thought containing instance information particular situations 
take different perspective perceive relation ontology knowledge base connection epistemological specification domain knowledge technical tool reasoning 
point view ontology piece knowledge knowledge application pieces knowledge ontologies meta data 
properly cover domain interest schema level instance level information 
knowledge system needs consult ontology loads parts specification knowledge base pieces knowledge take account reasoning 
business trips booking system example probably combined geographical ontology financial public transportation comparing offers trips loading relevant domain knowledge knowledge base 
sense knowledge application uses ontology knowledge base 
computational domain model ontology various purposes depending application scenario 
distinguish different cases usage diverse levels follows 
stephan grimm pascal hitzler andreas abecker level knowledge connectivity application view ontology single isolated source knowledge stand fashion 
way expert system maintains highly specialised knowledge base answer questions domain interest simulating expert knowledge 
contrast ontology viewed relation sources knowledge ontologies meta data aligned ontology conceptual model 
information integration scenario example ontology supports interoperability different systems knowledge data level providing basic domain vocabulary 
level knowledge abstraction hand application process ontology schema level knowledge categories 
examples applications need automatically classify user defined concepts existing taxonomy build answers general domain questions 
hand ontology schema data intensive instance retrieval large knowledge databases 
level automation knowledge processing application intensive automated reasoning techniques order derive implicit knowledge axioms ontology answering sophisticated domain questions 
time ontologies documentation purposes targeting humans read specifications machines 
way documentation domain models benefits precise specification formal semantics ontology languages 
artificial intelligence research typical types applications evolved ontologies different ways 
list examples applications leverage formalised conceptual domain models ontologies provide 
information integration promising field application ontologies integrating heterogeneous information sources schema level 
different databases store kind information adhere different data models 
ontology mediate database schemas allowing integrate information differently organised sources interpret data source schema 
example geographic ontology integrate geographic databases different schemas example relating cities directly countries different entities modelling single entity geographic places property city country 
schema local entities relations mapped respective notions city country locatedin ontology realising unified querying reasoning information sources 
information retrieval motivated success key role google world wide web information www google com knowledge representation ontologies retrieval web documents major field application ontologies 
idea ontology information retrieval increase precision retrieval results account semantic information contained queries documents lifting keywords ontological concepts relations 
interpreted example geographic ontology query capital germany yield documents berlin capital germany 
false positive matches keyword retrieval systems typically produce documents german venture capital market filtered way 
semantically enhanced content management areas computation data computed annotated meta data various purposes 
ontologies provide domain specific vocabulary annotating data meta data 
formality ontology languages allows automated processing meta data grounding knowledge representation facilitates machine interpretability 
geographic concepts relations provided example ontology annotate manifold geographic content geographic books articles electronic library better find archive models geographic sites surveying mapping order better group relate providing easier access content 
knowledge management community portals companies organised associations communities practice individual knowledge viewed strategic resource desirable shared systematically maintained referred knowledge management 
ontologies provide means unify knowledge management efforts shared conceptual domain model connecting technical systems navigating storing searching exchanging community knowledge 
example ontology serve backbone geographic knowledge portal internet land surveying offices urban planning institutions interested community members provide access geography related resources 
expert systems various domains medical diagnosis legal advice case law desirable simulate domain expert asked sophisticated questions 
expert system achieved incorporating thoroughly developed domain ontology formalises expert knowledge 
domain specific questions answered reasoning highly specialised knowledge 
expert system geographical domain answer questions german city closest french border 
cities river flow 

types ontologies ontology research computer science ontologies considered means foster reuse knowledge system engineering turned different types ontologies exhibit different potential reuse 
stephan grimm pascal hitzler andreas abecker categorisation ontologies subject conceptualisation 
prominent insights respect published summarised 
top level ontology domain ontology task ontology application ontology fig 

types ontologies categorisation distinguishes types ontologies 
top level ontologies top level ontologies called upper ontologies foundational ontologies attempt describe general concepts shared domains applications 
borrow philosophical notions describing top level concepts things exist physical object object generic notions common sense knowledge phenomena time space processes usually thought extensively axiomatised 
due generality typically directly applications ontologies aligned 
prominent examples top level ontologies dolce 
domain ontologies task ontologies types ontologies capture knowledge specific domain discourse medicine geography knowledge particular task diagnosing configuring 
sense narrower specific scope top level ontologies 
ideal case conceptualisation domain ontology kept strictly task independent notions task ontology described neutrally respect domain 
done development domain ontologies medicine genetics geographic environment information tourism cultural heritage museum exhibits 
task ontologies devised scheduling planning tasks monitoring scientific domain intelligent computer tutoring missile tracking execution clinical guidelines application ontologies narrowing scope application ontologies provide specific vocabulary required describe certain task enactment particular application context 
typically domain task ontologies describe role domain entity plays specific task 
example particular physical entity knowledge representation ontologies engineering domain may play role replaceable unit maintenance task time play role spare resource configuration production process 
altogether say lattice indicated represents inclusion hierarchy lower ontologies inherit specialize concepts relations upper ones 
lower ontologies specific narrower application scope upper ones broader potential reuse 
ontologies semantic web context semantic web ontologies play particularly important key role 
idea semantic web annotate web content machine interpretable meta data computers able process content semantic level 
ontologies provide domain vocabulary terms semantic annotation formulated 
meta statements web content annotations refer commonly domain model including concepts relations instances domain ontology 
formality ontology languages allows reason semantic annotation different sources connected background knowledge domain interest 
couple characteristics web affect ontologies semantic annotation 
aspect natural content semantic web 
knowledge captured semantic annotation ontologies locally available single node spread different sites 
poses additional constraints ontologies semantic web account knowledge 
avoid need transfer relevant knowledge central location techniques allow modularisation reasoning process handling partial results computed locally subset relevant information 
issue addressed current research distributed reasoning 
related aspect content web created evolutionary manner maintained decentralised way 
central control semantic annotation ontologies evolve semantic web information ontology conflict information 
deal conflicting pieces knowledge techniques resolve situations preferring consistent sub view similar humans 
techniques subject investigation current research paraconsistent reasoning mentioned section 
extra chapter dedicated topic semantic annotation chapter usage ontologies annotating web content meta data semantic web context elaborated 
ontology languages ontologies available information systems various concrete ontology languages designed proposed standardisation 
section give overview prevalent ontology languages important context semantic web detail 
stephan grimm pascal hitzler andreas abecker hierarchy languages semantic web light widespread impact industrial usability standardisation ontology languages great importance semantic web community 
various different aspects considered language standardisation issues underlying knowledge representation formalism terms expressiveness computational properties web related features global unique identification xml serialisation syntax usability add ons inclusion strings numbers non functional meta data 
influence different research user communities manifold requirements resulted complex landscape multitude languages backed different past ongoing standardisation efforts 
open topic stimulating lively discussions current research languages best suited purpose efficiently implemented realised user friendly way technically semantically interoperable 
attempt sketch landscape languages giving overview important ontology languages respect current trends semantic web 
languages build achieved standards landscape perceived hierarchy languages semantic web 
hierarchical structure languages clearly layered top parallel branches cross relations languages formalisms 
major distinctions semantic web languages knowledge representation paradigm follow 
left hand side description logic family languages build various dl dialects rule extensions 
adhere classical model theoretic semantics order predicate logic open world assumption 
right hand side family logic programming languages build rules negation failure 
typically follow semantics minimal preferred models adhere closed world assumption 
languages main strands clearly assigned paradigm 
designed focus set aspects logically clear semantics attempts combine features worlds pure dl lp family languages understood properties terms computability inferential behaviour 
languages placed near top expressive languages placed close bottom meaning allow expressing complex knowledge richer inferencing sophisticated logical consequences expressive languages 
accordingly high expressivity language traded higher computational complexity decision procedures reasoning 
standardisation efforts considered highly desirable maintain decidability design goal semantic web ontology language shows boundary decidability languages meet goal 
different kinds arrows express relationship languages 
solid arrow denotes complete semantic expressive language expressive meaning expressed shall convey rough intuition relationships major languages respect underlying knowledge representation formalisms paradigms 
abstracts certain language details necessarily imprecise vague aspects 
expressive expressive classical semantics order predicate logic wsml dl swrl dl safe rules owl lite dlp owl dl wsml core knowledge representation ontologies wsml full owl full undecidable decidable rdf fig 

overview semantic web languages lp semantics wsml rule wsml flight logic lp datalog semantically embedded approximately sem 
emb 
syntactically embedded expressed means direct mapping languages constructs 
dashed arrow denotes weaker form embedding features expressive language completely fit expressive target language meaning principle approximately covered apart moderate deficiencies language constructs semantic interpretation 
dash dotted arrow denotes syntactic embedding language constructs syntactically expressive language directly expressive may semantically interpreted different way 
early initiative standardise language semantic annotation web resources world wide web consortium resulted rdf rdfs form established widely accepted standard encoding meta data 
rdf language described detail section 
express resources subsumption classes peculiar semantics fit classical lp style 
semantically restricted order setting rdf mapped formalism named description logic programs dlp interoperate dl lp reducing expressiveness intersection 
top rdf standardisation efforts produced owl family languages describing ontologies semantic web comes flavours increasing expressiveness 
expressive language variant owl full stephan grimm pascal hitzler andreas abecker semantically proper layering top rdf allowing features metamodelling reification 
expressive variants owl lite owl dl map certain description logic dialects fit classical semantics subsets order logic 
class membership subsumption relations inherited rdf owl offers construction complex classes simpler ones means dl style concepts constructors 
ongoing standardisation efforts owl dl currently prominent semantic web ontology language description logic paradigm section owl family described detail 
current trend research knowledge representation formalisms context semantic web integrate dl style ontologies lp style rules interoperable semantic level 
attempt semantic web rule language swrl extends set owl axioms include horn rules interpreted order semantics 
interoperability owl ontologies realised referring owl classes properties swrl rules combination owl dl swrl rules results undecidable formalism 
approach owl ontologies rules called dl safe rules extend dl knowledge bases way similar swrl 
dl safe rules preserve decidability resulting language imposing additional safety restriction swrl rules ensures applied individuals explicitly known knowledge base 
languages follow logic programming paradigm mainly stem deductive database systems apply rules facts stored database derive new facts means logical inferencing 
common declarative language deductive databases datalog syntactically similar prolog 
semantic web context logic prominent rule language combines logical formulas objectoriented frame description features 
logic programming variant logic lp adopts semantics datalog rules 
section investigate logic detail 
web service modeling language wsml family attempt standardise ontology languages web special focus annotating semantic web services 
wsml tries cover major aspects different knowledge representation formalisms various language variants spread scheme 
fit semantically existing languages similar formalisms dl lp strands 
closer look wsml family languages section 
rdf resource description framework rdf language recommended standardisation body representing information resources world wide web 
particularly intended representation meta data identifiable web resources title author web page topic copyright information electronic document retrievable web functionality access conditions web service 
abstracting retrievable electronically processable web resources identity rdf represent information just 
www org submission swrl knowledge representation ontologies sense rdf serve language represent knowledge meta data entities business trips domain 
rdf vocabulary description language rdf schema rdfs extension rdf facilitates formulation vocabularies rdf meta data 
rdf relate resources means properties rdfs introduces notions resource classes hierarchies 
combined rdf rdfs referred rdf provides simple ontology language conceptual modelling basic inferencing capabilities 
basic elements rdf approach representing meta data resources rdf main ideas 
identity uris uniform resource identifiers uris naming entities 
exhibit naming conventions allow partitioning names namespaces 
modelling ontologies rdf uris may identify kinds entities individuals person misterx ubiqbiz kinds things employee properties things mailbox values properties string mailto mrx ubiqbiz com 
uris resources uniquely identified web allows decentralised organisation knowledge commonly referenced resources 
sentences subject predicate object statements rdf form subject predicate object sentences referred rdf triples 
triple subject predicate object relates subject object predicate roles subject predicate object played resources identified uris 
subject resource described predicate specific property resource object serves value property resource 
examples triples rdf btr mrx btr btr ubiqbiz stating misterx employed ubiqbiz ubiqbiz com web mrx html btr btr mrx stating misterx author web page ubiqbiz web site 
examples btr refers namespace abbreviation business trips domain 
stephan grimm pascal hitzler andreas abecker graph representation triples taken form rdf graph nodes resource uris arcs properties 
node object position resources rdf literal represents data value string mailto mrx ubiqbiz com number 
furthermore rdf graphs support blank nodes represent anonymous resources 
knowledge representation view rdf graph seen semantic network similar depicted 
rdf web language various triples rdf graph originate different sites idea anybody state resource 
sense rdf designed capture knowledge meta data spread web 
xml serialisation web related aspect rdf xml serialisation format rdf graphs encoded machine processing transport wire 
example triples encoded rdf xml syntax 
rdf description rdf ubiqbiz com web mrx html btr rdf resource btr misterx rdf description rdf description rdf btr misterx btr rdf resource btr ubiqbiz rdf description descriptions resources encoded special xml tags rdf predefined vocabulary 
reification rdf allows statements statements referred reification 
reified statement resource represents occurrence rdf triple 
way meta statements formulated illustrated follows 
subject predicate object predicate object subject role played resource represents statement 
reification particularly interesting context semantic web statements things stated referring resources 
data structuring facilities furthermore rdf specifies elements represents basic data structures known programming languages containers collections 
containers realise open data structures ordered unordered sequences collections allow list structures closed stating members 
typing resources rdfs knowledge representation ontologies rdfs facilitates specification application specific ontological vocabularies form class property hierarchies top rdf resources 
purpose defines set reserved keywords rdf triples relate resources classes 
classes rdfs defines type system rdf resources introducing concept class 
reserved type indicate class membership resource certain type 
rdfs classes organised hierarchy types rdf resources 
reserved subclassof state subclass relationship types 
rdf graph illustrates typing resources 
btr mrx rdf type btr employee rdfs subclassof btr person resource represents misterx stated employee misterx member class employees subclass persons 
rdf constructs typing allow formulation subsumption hierarchies distinction instances concepts ontological sense 
rdf clear separation classes members 
rdf allows self classes members meta classes 
resource tagged class relating predefined meta class 
properties semantics rdf resource predicate position rdf triple member class rdfs property 
classes properties organised hierarchy means keyword rdfs subpropertyof 
example triple btr rdfs subpropertyof btr worksfor reflects fact anybody employed works 
predefined predicates rdfs domain rdfs range define domain range property 
setting range example btr resource fills object position rdf triple property predicate member class 
semantics rdf rdf comes formal semantics specified model theoretic way 
sketch basic ideas semantics defined giving intuition inferencing characteristics rdf 
logical terms rdf assertional language triple expresses positive ground proposition 
rdf graph set triples logical theory consists positive ground assertions 
concept negation express contradictory information language 
possible express infer example person male female way stating classes males females common resources members 
stephan grimm pascal hitzler andreas abecker semantics rdf characterised form axiomatic triples entailment rules derive new inferred triples 
yield set entailed statements rdf graph rdf rules exhaustively applied triples rdf axiomatic triples 
sense rdf semantics determines implicit knowledge derived explicitly stated assertions graph 
illustrate essential parts rdf semantics give examples entailment rules application triples 
example semantics class membership inheritance determined entailment rules applied triples rdf graph rdf 
rdf contains rdfs subclassof rdf type derive rdf type rdf contains rdfs subclassof rdfs subclassof derive rdfs subclassof reading derive triple part instantiation triples part 
variables occurring inside triples range rdf resource uris 
rule entails membership resources superclasses rule ensures transitivity subclass relationship 
previous triple misterx employee special kind person rule entail triple 
btr mrx rdf type btr person implementation rdf system include misterx result query asking persons 
example semantics domains ranges properties determined entailment rules 
rdf contains rdfs domain derive rdf type rdf contains rdfs range derive rdf type setting domain range employee btr follows btr employee rdfs domain btr emp rdfs range btr rules apply triple btr mrx btr btr ubiqbiz deriving misterx employee ubiqbiz 
entailment rules apply rdf meta vocabulary determining relationship predefined vocabulary resources rdfs class rdfs property 
example axiomatic triple rdf type rdfs range rdfs class triggers rule class membership assertion deriving referred type resource class 
software support rdf knowledge representation ontologies rdf language various web applications describing meta data number tools available support visual editing programmatic handling rdf descriptions 
common visual editors rdf prot focus shifted owl 
prot allows navigate edit rdf class hierarchy special support populating rdf schema instances customisable input forms 
ontology editors support rdf webode ontoedit kaon oi modeler 
memory processing data base storage rdf descriptions common tool suites sesame jena provide software libraries enable software developers process rdf descriptions applications 
comprise parsing serialisation rdf xml format memory object representation rdf descriptions data base persistency querying functionality including reasoning capabilities 
oracle include rdf support data base solutions owl web ontology language owl standardised consortium language semantic annotation web content widely accepted semantic web community 
important issue design owl trade expressivity language hand scalability reasoning 
owl comes different flavours owl lite owl dl owl full reflecting different degrees expressiveness 
design owl lite owl dl significantly influenced descriptions logics variants correspond description logic dialects shif respectively 
owl full contrary departs description logic semantics order provide compatibility rdf 
dl owl variants benefit understood computational properties decidability description logic owl full shown undecidable 
presentation owl focus owl dl prominent language variant support semantic web community 
protege stanford edu webode dia fi upm es index html ontoedit com sourceforge net projects kaon sourceforge net projects sesame jena sourceforge net see technical whitepaper www oracle com technology tech semantic technologies pdf semantic tech rdf wp pdf stands functional roles stated role relationships functional 
stephan grimm pascal hitzler andreas abecker syntax intuitive semantics owl standard defines different syntaxes rdf xml proprietary text format 
owl rdf xml syntax allows encoding owl ontology rdf framework rdf xml serialisation 
owl xml presentation syntax provides compact xml format owl ontologies independent rdf 
contrast machine oriented owl syntax serves human readable text format owl ontologies knowledge engineers 
popular way owl content reader scientific context dl formulas 
choose examples owl syntax compact description logic formal notation 
similar rdf owl provides syntactic modelling constructs basic elements ontology concepts relations instances 
owl called classes properties individuals respectively correspond concepts roles individuals description logics 
contrast rdf owl dl strictly separates classes individuals allows building complex classes simpler ones means class constructors 
go selection syntactic elements owl including various constructors 
example statement taken geographic ontology depicted give intuitive meaning natural language notations owl syntax dl formulas 
owl examples named classes usually introduced means class declarations correspond dl inclusion axioms atomic concept left hand side example 
continent geographic location different country class continent partial intersectionof country continent country class continent introduced partial declaration specifies necessary conditions 
means constructors intersectionof continent declared geographic region country 
syntactic construct states subclass relationship disjointness respective dl inclusion axiom 
necessary means continent geographic location country 
geographic location country necessarily continent partial class declaration works direction impose sufficient condition achieved keyword complete partial 
keyword complete specifies class equivalence 
individuals introduced class descriptions example 
europe particular continent individual europe type continent continent europe individual europe introduced instance class continent 
example shows instantiation previously declared named class class description type clause arbitrarily complex class constructors 
alternative way define class enumerate individuals shown example 
continents america europe africa asia australia continent america europe africa asia australia knowledge representation ontologies continent america europe africa asia australia class continent defined listing known members different continents 
similar classes properties introduced explicit declarations optional domain range classes modifiers shown example 
geographic regions general contain geographic regions objectproperty contains domain range inverseof transitive contains contains locatedin trans contains object property contains declared transitive containment relation geographic regions 
linked inverse property 
domain range clauses mapped appropriate dl inclusion axioms contains geographic region contained 
addition domain individuals owl offers called concrete domains properties alternatively range datatypes integer float string 
properties introduced complex class descriptions formed imposing restrictions 
example shows general subclass statement including restriction previously introduced property 
planar region contains planar linear regions subclassof restriction contains allvaluesfrom unionof contains planar regions restricted contain planar linear regions means restriction constructor 
allvaluesfrom clause requires values restricted property certain type specified disjunction means unionof constructor 
example states subclass relationship named class parameters clause arbitrarily complex class descriptions constructors 
statements class equivalence quite sophisticated example 
european city city geographic region contained europe intersectionof city restriction locatedin allvaluesfrom restriction somevaluesfrom restriction somevaluesfrom oneof europe city locatedin europe class set equivalent complex class description nested restrictions properties inverses 
city concluded european geographic region contained european continent 
restricts property exist value certain type oneof constructor creates class explicitly named individual similar enumerated class 
way restrict properties constrain cardinality shown example 
stephan grimm pascal hitzler andreas abecker city geographic location governed single country subclassof city city restriction maxcardinality cities restricted governed country means maxcardinality clause 
similarly minimal cardinality realised mincardinality clause combined require fixed cardinality 
usage introduced properties connect individuals individuals data values shown example 
munich german city inhabitants individual munich type city value germany value city munich munich germany munich individual munich stated city lies germany appropriate connection individual germany 
asserted integer value property 
model theoretic semantics exact semantics dl owl variants determined model theoretic semantics underlying description logic formalism 
owl ontology consists collection statements ones shown examples 
statements interpreted axioms dl knowledge base described section owl employs open world assumption 
table shows mapping owl syntax constructs corresponding description logic axioms 
working owl ontologies due connection owl description logics basic reasoning services available dl knowledge bases apply owl ontologies 
owl ontology checked consistency queried implicit knowledge 
ontology inconsistency consider owl ontology consisting statements 
subclassof city restriction maxcardinality individual nicosia type city value greece value turkey greece turkey statement taken says cities uniquely governed single country 
second statement says city nicosia governed greece turkey third statement assures different countries 
clearly contradiction owl ontology inconsistent 
verified reasoning service knowledge base satisfiability offered common description logic reasoners 
notice practical reasons inconsistent ontology quite useless allows conclude arbitrary statement 
nicosia capital cyprus split greek turkish part 
knowledge representation ontologies owl syntax dl syntax axioms class partial 
cn 
cn class complete 
cn 
cn 
subclassof 
cn cn 
cn ci cj objectproperty super 
super rn rn domain 
domain cn cn range 
range cn cn inverseof symmetric functional transitive trans subpropertyof 
rn rn individual type 
type cn cn value 
value rn 
rn 

ai aj descriptions class class owl thing class owl intersectionof 
unionof 
oneof 
restriction somevaluesfrom restriction allvaluesfrom restriction hasvalue restriction mincardinality restriction maxcardinality table 
translation owl syntax description logic formal notation ontology coherency kind problematic modelling ontologies introduce classes instances case owl ontology 
subclassof city restriction maxcardinality class complete intersectionof city restriction mincardinality statement taken restricts cities governed country 
second statement introduces class requiring split cities cities governed countries 
statement possible class instance valid model corresponding description logic knowledge base 
dl terms means concept unsatisfiable 
common description logic reasoners offer service checking concepts satisfiability 
ontology contains unsatisfiable concept class said incoherent 
contrast inconsistent ontologies incoherent ontology useless stephan grimm pascal hitzler andreas abecker reasoning tasks affected unsatisfiability particular class 
incoherence ontology indicates erroneous modelling unsatisfiable class assigned individual instance ontology inconsistent 
querying subsumption checking ontology consistency coherency main usage queried implicit knowledge 
notion entailment owl statement ask follows owl ontology corresponding dl axiom entailed respective dl knowledge base 
querying subsumption classes underlies important usage reasoning owl language classification 
owl ontology allows automatic classification classes explicitly put subsumption relation 
class complete intersectionof city restriction mincardinality class partial intersectionof city restriction somevaluesfrom oneof greece restriction somevaluesfrom oneof turkey greece turkey statement introduces split cities second statement introduces class cities governed greece turkey 
third statement assures involved countries distinct 
notice time ontology restrict cities governed single country 
knowledge specified ontology subclass dl reasoner derive statement subclassof logical consequence 
checking subsumption named classes owl ontology inferred class hierarchy established 
querying assertion kind statements owl ontology queried assertion axioms 
role assertions concept assertions ask hold respect owl ontology illustrated example 
subclassof restriction hasvalue euro individual germany type class partial intersectionof city restriction hasvalue germany individual munich type ontology states countries eu example germany official currency euro german cities example munich cities governed germany 
knowledge specified ontology follows munich governed germany dl reasoner derive statement individual munich value germany logical consequence munich assigned 
furthermore ontology allows conclude munich pay euro munich governed country euro official currency 
reasoner derive statement individual munich type restriction knowledge representation ontologies somevaluesfrom restriction hasvalue euro munich governed germany official currency euro 
iterating individuals owl ontology querying subsets named individuals certain properties achieved 
example query munich subsequently replaced named individuals retrieve cities pay euro 
software support owl owl technically built top rdf rdf specific tools readily applied parsing serialisation owl rdf xml format upgraded owl versions 
ontology editor prot supports owl comes variety plugins allow visualisation management owl ontologies 
addition different graphical views explicit class property hierarchies facilitates visual editing owl axioms enables embedding reasoning tools computing inferred subsumption hierarchies 
visual editors owl ontologies offer similar functionality commercial tools semantic works programmatic handling owl ontologies owl api jena software developers process owl descriptions applications 
provide means parsing serialisation different owl syntax formats memory manipulation ontologies 
owl expressive knowledge representation language reasoning plays important role number description logic reasoners available querying owl ontologies respect inferred knowledge verifying consistency 
common description logic reasoners semantic web context tableau calculus available systems support owl language racer fact pellet 
new dl reasoning algorithms deductive database technology devised development kaon system particularly optimised querying ontologies large boxes 
logic frame logic logic deductive object oriented database language aims combining declarative semantics expressiveness logic programming rich intuitive conceptual modelling capabilities provided frame systems 
www mindswap org origin com products html www com owl man ac uk api shtml www racer systems com fact owl man ac uk www mindswap org pellet kaon semanticweb org stephan grimm pascal hitzler andreas abecker significant language features logic comprise object identity complex objects classes inheritance polymorphic types rules queries 
aspects language conceptual modelling perceived logic modeltheoretic semantics sound complete resolution proof theory 
give short overview syntax informal semantics important features logic 
original specification logic semantics full version extension order logic 
systems support language implement full logic logic programming variant founded semantics 
logic rule lp style language widely perceived 
logic examples frame modelling logic allows describe objects identified object id grouping related information object called molecules 
example illustrates molecules describe objects business trips scenario 
ubiqbiz ubiquitous business newyork london singapore mrx 
mrx fifth avenue newyork 
ubiqbiz mrx fl 
example objects ubiqbiz described terms molecules assign values certain attributes legal name locations offices phone numbers associated employees 
values attributes logic allows objects data values strings numbers 
symbol denotes assignment single value symbol indicates assignment multiple values set valued attributes 
illustrated attribute attribute assignments molecules nested 
ontology point view objects example seen instances 
logic provides language features describing classes objects attached attributes relating class hierarchies shown 

string city number person 
person 
person string 
employee person 
employee 
booking person flight 
ubiqbiz 
mrx person 
fl flight 
booking 
knowledge representation ontologies example object described class objects appropriate attribute ranges 
symbol indicates single valued range symbol assigns set valued range attributes multiple values 
person declared subclasses means symbol denotes class inheritance build class hierarchies 
class employee turn subclass person additional attribute employment inherits attributes parent class person 
objects assigned classes symbol 
ontological view means relate instance concept 
symbol state ubiqbiz misterx person object serve class classes declared instances classes logic supports metamodelling facilities 
rules semantic web context logic primarily perceived language rule paradigm 
lp style rules form essential language feature deductive aspects logic 
indicate universal quantification involved variables symbol construct rules logic 
rule forall variables head body 
typical reading possible instantiation variables rule body derive corresponding instantiation rule head 
deriving new information rules extend logic object base intensional knowledge forming deductive closure 
example rule operates descriptions classes objects 
forall employee 
captures part inverse relationship attributes 
employee derived employed certain rule derives employee list employees particular 
complex example rule taken section 
forall employee person booking 
concludes person employee certain booking person particular 
concrete booking flight fl specified rule derive molecule stephan grimm pascal hitzler andreas abecker mrx employee ubiqbiz 
stating misterx employee ubiqbiz 
queries logic provides queries language element retrieval tuples objects 
objects bound possible instantiations variables occur query 
syntactically queries logic special kind rules empty head form 
forall variables body 
rules variables occur body query universally quantified 
tuple objects possible instantiation variables conform deductive closure object base tuple part result query 
example logic query forall employee ubiqbiz newyork 
asking ubiqbiz employees live new york 
applied described objects rules answer query object mrx misterx assigned address new york derived employee 
queries ask schema elements bind variables classes 
query asks classes misterx belongs 
forall mrx answer query set person employee classes 
negation failure semantics logic programming variant logic closed world assumption evaluation queries deductive closure object base 
example query forall employee 
asks employees yields mrx result 
stated employees information derived specified knowledge 
assumed employees 
furthermore negation operator bodies rules queries interpreted negation failure 
example query contains negation operator combined rule 
forall flight booking 
forall ubiqbiz 
asks employees ubiqbiz participate known flight yields set 
software support logic knowledge representation ontologies logic sets focus rule inferencing web aspects come web style xml serialisation format ontology languages semantic web 
syntax resembles style typical programming languages human readable people software development background 
support graphical editing tools logic ontologies typically developed text editors 
exception provides graphical editing capabilities logic rules ontology editors support logic export features 
major inference engines available perform reasoning logic rules freely available commercial ontobroker 
kaon system included support logic 
wsml wsmo initiative aims providing overarching framework handling semantic web services sws 
comprises wsmo conceptual model upper level ontology semantic web services wsml language execution environment 
wsmo web service modelling ontology described part iii chapter detail concerned ontology language aspects 
wsml web service modeling language language formally describe elements defined wsmo conceptual model providing syntax formal semantics 
wsml particularly designed describing semantic web services mere ontology language 
typical ontological notions provides language constructs goal web service interface choreography capability capture different aspects web service semantics 
corner stones wsmo domain ontologies semantically annotate web services 
wsml provides means describe ontologies ordinary ontology language 
interested description ontologies general ontology related part wsml 
syntax syntax wsml split conceptual part logical expression part 
conceptual syntax allows typical conceptual modelling concepts relations instances known frame systems information certain entity specified locally single syntactic construct 
logical expression syntax allows formulation complex axiomatic information logical formulas 
similar logic syntax www de content index eng html flora sourceforge net php ontobroker semanticweb org kaon semanticweb org www wsmo org stephan grimm pascal hitzler andreas abecker provides typical logical symbols different forms negation implication lp style rules constraints 
wsml supports datatypes integer float string user defined datatypes 
listing shows fragment example geographic ontology wsml syntax human readable serialisation 
concept inverseof locatedin oftype contains inverseof transitive oftype concept oftype float oftype float concept city infrastructure locatedin oftype oftype string oftype integer concept city instance europe continent instance munich city hasvalue nchen hasvalue axiom sufficient condition city locatedin hasvalue rc rc hasvalue re re hasvalue europe 
upper part shows conceptual syntax bold faced keywords defining concepts instances membership relations 
attributes relations defined scope concept restricted filled concrete values 
declared transitive inverse attribute constrained range type cardinality 
distinction oftype constructs wsml offers range constraints ensure attribute values certain type range restrictions style owl allow conclude information attribute values 
attribute ranges concepts datatypes integer float string 
lower part listing shows axiom defined logical expression form lp style rule variables preceded symbol 
rule concludes city european geographic region lies europe referring elements declared conceptual part 
human readable form forms serialisation wsml syntax similar different serialisation formats owl 
cover serialisation xml rdf 
semantics similar owl wsml comes various language variants different expressiveness reflect different knowledge representation paradigms 
basic expressive variant wsml core dlp common knowledge representation ontologies denominator description logic formalisms hand logic programming rule systems hand 
wsml core separately extended directions paradigms variants wsml dl wsml flight rule respectively 
ultimately vision wsml full semantically paradigms language order model theoretic semantics augmented non monotonic extensions typical lp style features default negation constraints 
current stage wsmo initiative ongoing effort semantics wsml full defined 
wsml language variants positioned respect different knowledge representation formalisms 
wsml core fig 

wsml language variants knowledge representation variant dlp fragment described 
offers basic conceptual modelling concepts attributes instances taxonomic hierarchies datatypes 
semantics defined mapping function free horn logic interpreted classical model theoretic way 
similar rdf allow express form negative information contradictory statements formulated 
wsml dl variant extends wsml core description logic formalism logic shiq 
sense wsml dl similar owl language 
wsml syntax provide variable free constructs typical dls 
stephan grimm pascal hitzler andreas abecker wsml dl logical expressions variables logical connectives interpreted order logic restriction allow unary binary predicates dl concepts roles 
wsml flight variant extends wsml core lp style rule language closed world semantics 
similar logic lp offers features negation failure constraints meta modelling 
semantics wsml flight defined mapping logic formulas interpreted perfect model semantics 
wsml rule variant extends wsml flight expressive logic programming features function symbols unsafe rules 
semantics founded semantics 
wsml full defined semantics wsml full envisioned combine wsml dl wsml rule 
candidate formalism achieve integration paradigms autoepistemic logic 
software support wsml wsml relatively new language tool development early stage 
tools available handling editing wsml ontologies driven wsmo initiative 
wsmo framework enables parsing serialisation memory processing wsml ontologies wsml elements 
web services modelling toolkit graphical editor allows visualisation manipulation wsml ontologies 
tools editing wsml elements wsmo studio dome outlook chapter overview topics knowledge representation ontologies semantic web languages 
want briefly sketch research usability issues knowledge technologies 
having reviewed various ontology languages knowledge representation paradigms seen multiple different ways approaching representation computational handling knowledge 
room research approach wsmo sourceforge net sourceforge net www org dome sourceforge net knowledge representation ontologies suitable kind application context 
current trend ontology languages perceive lp approaches particularly suitable data intensive retrieval tasks rule inferencing hand dl approaches automated classification satisfiability problems hand 
achieve wide spread ontologies established usable software artefacts interchanged traded parties similar computer programs forms electronic content 
principally plugged systems knowledge technology 
logics notions ontologies described typically technical onerous handle widely accepted 
overcome deficiency design methodologies higher level descriptive languages introduced logical details presenting user intuitive view domain knowledge 
analogous level abstraction achieved field software engineering higherlevel languages build machine codes assembler languages 
semantic web context techniques field artificial intelligence lexical methods natural language processing statistics methods machine learning 
symbolic knowledge representation ontologies exploit synergies techniques semantic web applications 
trend heavy weight semantics logical formalisms moving light weight semantics languages decreased expressive power applications precision exactness main focus 
sense applications prefer example rdf semantically richer owl due simplicity scalability issues 
space research finding right degree formality semantics particular application scenario 

antoniou 
nonmonotonic reasoning 
mit press 

baader brandt lutz 
pushing el envelope 
proceedings th int 
joint conference artificial intelligence ijcai edinburgh uk 
morgan kaufmann 

baader calvanese mcguinness nardi patel schneider editors 
description logic handbook 
cambridge university press january 

baader hollunder 
embedding defaults terminological knowledge representation systems 
journal automated reasoning 

bechhofer volz lord 
cooking semantic web owl api 
proc 
international semantic web conference iswc october sanibel island florida 

lutz wolter 
description logics circumscription 
proceedings th int 
conference principles knowledge representation reasoning kr 

brickley guha 
rdf vocabulary description language rdf schema 
www org tr rdf schema 

broekstra kampman van harmelen 
sesame generic architecture storing querying rdf rdf schema 
iswc proceedings international semantic web conference semantic web pages london uk 
springer 
stephan grimm pascal hitzler andreas abecker 
calvanese de giacomo lenzerini rosati 
dl lite tractable description logics ontologies 
proceedings th national conference artificial intelligence aaai 


corcho fern ndez pez mez rez 
vicente 
webode integrated workbench ontology representation reasoning exchange 
ekaw 

craig 
ontology 
craig editor routledge encyclopedia philosophy pages 
routledge new york 

decker erdmann fensel studer 
ontobroker ontology access distributed semi structured information 
semantic issues multimedia systems 
proceedings ds pages 

dimitrov 
wsmo studio integrated service environment wsmo 
proc 
nd wsmo impl 
workshop innsbruck austria 

donini nardi rosati 
description logics minimal knowledge negation failure 
acm transactions computational logic 

eiter tompits 
uniform integration higher order reasoning external evaluations answer set programming 
kaelbling editors proceedings th international joint conference artificial intelligence ijcai 

etzioni golden weld 
tractable closed world reasoning updates 
proceedings th international conference representation reasoning kr pages 
morgan kaufmann 

gangemi guarino masolo schneider 
ontologies dolce 
ekaw proceedings th int 
conference knowledge engineering knowledge management 
ontologies semantic web pages 
springer 

grosof horrocks volz decker 
description logic programs combining logic programs description logics 
proceedings www budapest hungary pages 
acm 

gruber 
translation approach portable ontology specifications 
knowledge acquisition 

guarino 
semantic matching formal ontological distinctions information organization extraction integration 
pazienza editor information extraction multidisciplinary approach emerging information technology number lncs pages 
springer verlag 

guarino 
formal ontology information systems preface 
guarino editor proceedings st international conference formal ontologies information systems fois trento italy pages 
ios press 

noy musen fergerson 
protege owl plugin open development environment semantic web applications 
proceedings rd international semantic web conference iswc 

haarslev ller 
description racer system applications 
international workshop description logics 

hayes 
rdf semantics 
www org tr rdf mt 

horrocks 
expressive description logic fact fiction 
proceedings th international conference representation reasoning kr pages 
morgan kaufmann 

horrocks patel schneider 
proposal owl rules language 
proceedings th international world wide web conference www 
acm 

hustadt motik sattler 
data complexity reasoning expressive description logics 
proceedings th international joint conference artificial intelligence ijcai edinburgh uk pages 
morgan kaufmann 
knowledge representation ontologies 
parsia sirin grau hendler 
web ontology editing browser 
journal web semantics 
dx doi org 

kifer lausen wu 
logical foundations object oriented frame languages 
journal acm july 

carroll 
rdf concepts syntax 
www org tr rdf primer 

lloyd 
foundations logic programming 
springer verlag 

brian mcbride 
jena implementing rdf model syntax specification 
semweb 
ceur ws org vol mcbride pdf 

mccarthy 
circumscription form non monotonic reasoning 
artificial intelligence 

minker 
logic databases past 
ai magazine 

moore 
semantical considerations nonmonotonic logic 
artificial intelligence 

motik 
properties metamodeling owl 
gil motta benjamins musen editors proceedings th international semantic web conference iswc volume lncs pages 
springer verlag 

motik sattler 
comparison reasoning techniques querying large description logic aboxes 
hermann andrei voronkov editors proc 
th int 
conf 
logic programming artificial intelligence reasoning lpar lncs november 
springer 

motik sattler studer 
query answering owl dl rules 
mcilraith plexousakis van harmelen editors proc 
rd int 
semantic web conf 
iswc pages hiroshima japan november 
springer 

pease 
standard upper ontology 
welty smith editors proceedings nd international conference formal ontology information systems fois 

patel schneider hayes horrocks 
owl web ontology language semantics syntax 
www org tr owl semantics november 

pepper moore 
xml topic maps 
www org 

reiter 
logic default reasoning 
artificial intelligence 

russel norvig 
artificial intelligence modern approach 
prentice hall 

sirin parsia grau katz 
pellet practical owl dl reasoner 
technical report university maryland institute advanced computer studies umiacs 
mindswap org papers pdf 

sowa 
knowledge representation 
brooks cole publishing pacific grove ca usa 

sure erdmann angele staab studer wenke 
ontoedit collaborative ontology development semantic web 
iswc proceedings international semantic web conference semantic web pages 
springer verlag 

jeffrey ullman 
principles database knowledge base systems volumes ii 
computer science press 

van harmelen huang stuckenschmidt sure 
framework handling inconsistency changing ontologies 
gil motta benjamins musen editors proceedings th international semantic web conference iswc volume lncs pages 
springer verlag 

yang kifer zhao 
flora rule knowledge representation inference infrastructure semantic web 
coopis doa odbase pages 

yue 
inconsistent owl dl ontology multi valued approach 
proceedings international conference semantics networked world munich germany 
springer verlag 
