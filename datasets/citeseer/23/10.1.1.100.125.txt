architectures negotiating agents ronald michael luck dept electronics computer science southampton university southampton uk ra ecs soton ac uk department information systems university melbourne melbourne australia edu au 
automated negotiation gaining interest issues relating construction negotiating agent architectures addressed sufficiently 
novel agent construction model enables development range agent architectures common set building blocks 
identify fundamental components needed generic classes negotiating agents simple negotiators argumentative negotiators model describe 
demonstrate model allows reuse fundamental components negotiation architectures 
multi agent environments agents need interact order achieve objectives improve performance 
type interaction gaining increasing interest negotiation 
adopt definition negotiation reconciles views proposed believe reasonable generalisation explicit implicit definitions literature 
negotiation form interaction group agents conflicting interests desire cooperate try come mutually acceptable agreement division scarce resources 
agents typically conflicting interests competing claims scarce resources means claims simultaneously satisfied 
resources taken general 
commodities services time needed achieve 
address problem number interaction decision mechanisms extensive implementing frameworks negotiation auction mechanisms evident example trading agent competition frameworks adopt heuristic bilateral offer exchange comprehensive comparison different approaches negotiation reader refer 

argumentation approaches gaining interest :10.1.1.145.2341
implemented systems cater sophisticated forms interaction argumentation 
reasons frameworks involve complex systems reasoning logical theories argumentation open research questions 
reason software engineering methodologies structure process designing implementing systems 
cases systems implemented ad hoc fashion 
aim address software engineering issues related development architectures negotiating agents ranging simple classical agents complex argumentative negotiators 
specifically advances state art automated negotiation ways 
presents novel agent construction model enables description range agent architectures common set concepts building blocks 
secondly uses agent construction model conjunction general negotiation framework design describe architectures generic classes negotiating agents simple negotiators argumentative negotiators 
demonstrates generic architecture argumentative negotiators achieved extending simple negotiator architecture reusing components shows modularity facilitated construction model 
presenting agent construction model section supported brief analysis engineering requirements model seeks fulfill 
section discuss negotiation framework presenting generic architecture basic negotiating agent 
explain construction model allow re basic negotiation architecture developing complex architecture agent performing argumentation negotiation 
engineering agent architectures section design approach applied specification architectures negotiating agents 
essence require agent construction model allows description development range architectures 
order achieve possible avenues explore 
option define generic agent architecture describe architectures terms generic architecture 
drawback approach may features architectures directly translated generic 
second option follow provide architecturally neutral model avoid translation problem 
challenge provide model specific aids construction agents 
model view range architectures common view agents loss expressive capability 
furthermore resulting model allow modular construction agents order meet general software engineering concerns delineate clearly different aspects architecture discuss 
fine grained approach leads better understanding functioning agent altered 
need able re configure resulting ar easily possible run time order deal dynamic complex dependencies develop heterogeneous computing environments 
smart agent construction model smart structured modular agent relationships types provides foundational agent concepts allow reason different types agents relationships single point view 
chose smart provides appropriate agent concepts restricting specific agent architecture 
furthermore smart successfully describe existing agent architectures systems 
avoid complete presentation smart focus just concepts agent construction model 
essence smart provides compositional approach description agents primitive concepts attributes actions 
attributes refer describable features environment actions change environment adding removing attributes 
agent described set attributes set capabilities capabilities actions agent perform 
agent goals goals sets attributes represent desirable states environment agent 
top basic concept agent smart adds concept autonomous agent agent generates goals motivations drive generation goals 
motivations preferences desires autonomous agent cause generate goals execute actions attempt achieve goals 
approach agent description fits requirement architecture neutrality sufficiently address requirements modularity runtime reconfiguration 
address issues decoupling different aspects agent component approach agent construction 
aspects construction model described 
decoupling description structure behaviour subsection describe extend smart provide flexible decoupling agent aspects 
smart allows systems specified observer point view terms attributes goals actions perform 
description show agents built behave 
words focus 
call descriptive specification essentially describes agent analysing underlying structures sustain description 
descriptive specification need ability specify systems structure individual components agents behaviour 
extend smart addition structural specification behavioural specification 
structural specification enables identification relevant building blocks different sets building blocks enable instantiation different agent types 
behavioural specification agent addresses process agent arrives decisions actions perform 
views descriptive specification provide complete picture system 
agent construction model described reflects concepts allowing direct access different aspects agents clear decoupling architectural level 
agent construction model fig 

agent shell basic principles model illustrated 
shell acts container components placed 
manages sequence components execute flow information components 
control policies relating permissions agent specific environment defined shell order independent agent architecture 
attributes describing agent defined part shell 
components encapsulate specific types actions agent perform grouped categories 
sensors dashed rectangles receive information environment rounded corner rectangles store information actuators continuous line rectangles perform actions affect environment controllers accented rounded corner rectangles main decision making components 
controllers analyse information delegate actions components 
dividing components categories high level design providing understanding architecture early low level design specific mechanisms controllers sensors actuators need defined 
component described types attributes stateless attributes refer persistent characteristics kind communication language agent uses situation attributes refer attributes describing component current state parties agent currently negotiating 
information flows links shell establishes components 
links uni directional relationships 
information flows links components packaged statements 
component acts producer statement consumer 
statements typed currently just types defined inform execute designers may choose define different ones depending application needs 
inform type statements component simply notifies component execute type statements component wants action performed component 
statements divided body predicates 
body carries main information update sensor predicates carry additional information source information specific conditions associated execution action 
sequence components execute defined execution sequence architecture 
execution component includes processing statements received dispatch statements performance needed actions 
execution sequence essential aspect agent architectures placing responsibility managing sequence shell easily reconfigure point agent operation 
agent design begins empty shell 
specialised defining control policies order meet application requirements demands environment operate 
shell specific attributes defined form part description agent outside world 
components loaded shell links execution sequence defined 
execution sequence place operational cycle agent 
agent lifecycle suspended stopped stopping execution sequence modified altering execution sequence modifying relationships components applying alternative control policies 
main benefits approach possible moment access views agents described previously 
descriptive specification obtained aggregating situation attributes stateless attributes component attributes contained shell structural specification components behavioural specification execution sequence links components 
negotiating agent architectures agent construction model place investigate suitability model specifying flexible negotiating agent architectures 
start describing negotiating agents discuss main components negotiation framework 
addition negotiating agents negotiation framework usually includes communication language interaction protocol 
example negotiation framework simple english auction protocol need communication language locution performative say express bids 
protocol set rules specify stage interaction locutions 
addition framework needs language representing information world agents agreements arguments 
information communication language locutions form utterances 
example bid sending receiving agents specification proposal 
negotiation framework usually includes various information stores needed keep track various information interaction 
information may include proposals different agents concessions committed 
framework needs set additional non protocol rules 
may include rules identify winner particular negotiation rules specify agents retract previous proposals 
focus attention construction agents framework 
address example protocols specified modular fashion investigated example locutions verified 
assume developers disposal definitions appropriate negotiating protocols domain ontologies communication languages deal problem framing mechanisms appropriate agent architecture 
note claim specified way describing negotiating agents 
attempt provide construction model generic capture variety negotiators 
basic negotiating agent basic negotiating agents include participating auctions engaged bilateral offer exchanges 
common aspect agents engage interactions primary type information exchanged agents proposals potential agreements 
call agents basic order distinguish agents engage sophisticated forms negotiation allow exchange meta information arguments 
proposed architecture basic negotiation agents illustrated described different views 
follow conventions described earlier illustrating different types components connecting arrows illustrate flow statements 
fig 

negotiating agent architecture descriptive specification description negotiating agent attributes capabilities goals motivations 
goals agent desired negotiation outcomes represented mental attitudes refer specific application domains 
architecture require explicit representation agent goals 
overarching goal achievement environmental state represents desired negotiation outcome agent 
desired state determined mechanisms proposal evaluator response generator components ultimately decide environmental state reached 
see access overarching architecturally neutral agent model allows reason things goals find explicit representation architecture 
attributes agent information stored interpreted inside components flows statements 
attributes include representations beliefs opponents environment mental attitudes negotiation protocols 
information explicitly represented components stateless information separated easily extract 
capabilities agent aggregation capabilities component understood case referring individual components architecture diagram 
possible architecture attempts represent main capabilities separate components clear various functionalities required 
alternative designs implementations literature combine number components representation opponents mental attitudes environment single component 
cases descriptive specification remains unaltered capabilities exist structural specification refers different components combine capabilities 
motivations agent agent autonomous form part agent mental attitudes ultimately guide agent decisions 
exactly defined depends application 
auction mechanisms example motivations represented form utility function 
structural specification structure agent refers components architecture 
messages received checked parsed interpreter 
proposals history keeps track various proposals received negotiation protocols contains rules relating negotiation protocols 
separating rules dictating protocol reasoning protocol easily extend agent handle different protocols 
opponent model keeps track opponent models environment model maintains information environment agent situated 
information agent preferences stored mental attitudes 
decisions taken controllers abstractly support different negotiation stages 
protocol reasoner checks proposal received opponent valid response negotiation protocol 
proposal evaluator evaluates proposal response generator generates appropriate response evaluation 
locution generator packages responses appropriate message format handles outgoing communication 
behavioural specification behaviour agent largely dictated flow information architecture 
begins message interpretation storage proposals history 
current proposal information history proposals sent protocol reasoner uses rules negotiation protocols check validity proposal 
valid forwarded proposal evaluator retrieves information opponent opponent model 
controller uses information information mental attitudes environment model proposal history evaluate proposal 
result evaluation sent response generator opponent model may updated 
controller uses information updated opponent model mental attitudes environment model order generate response 
takes account negotiation protocol rules order generate appropriate response 
response packaged appropriate format locution generator sent opponent 
argumentative negotiating agent instantiate architecture basic negotiating agent order provide generic description agents capable conducting argumentation negotiation abn 
argumentative negotiator shares components basic negotiator 
example needs able evaluate proposals generate proposals 
argumentative agents different exchange meta information arguments addition simple proposal acceptance rejection utterances 
arguments potentially allow agent justify negotiation stance ii influence negotiation stance :10.1.1.145.2341
may lead better chance reaching agreement higher quality agreements 
abn influencing negotiation stance takes place result providing new information may influence mental attitudes beliefs desires intentions goals 
force agent accept particular proposal concede difficult issue 
arguments range threats promises logical discussion agent beliefs underlying interests 
order facilitate abn logical communication language usually needs capable expressing wider range concepts 
example proposal represented agents proposal supporting argument denoting recipient accept proposal 
abn frameworks may allow agents explicitly request information 
may done example posing direct questions agent preferences beliefs challenging certain assumptions agent adopts 
interested structures agents shall discuss issues detail 
order capable engaging abn agent needs additional capabilities 
argument evaluation component encompasses ability agent assess argument may cause updates mental state 
fundamental component allows negotiators positions change 

argument generation component allows agent generate possible arguments support proposal individual piece meta information 
locution generated may question opponent 

argument selection number possible arguments 
example agent able promise threat opponent 
separate component needed allow agent choose preferred argument 
selection analysis expected influence argument commitments ties 
fig 

argumentation negotiation agent architecture shows specification argumentative agent construction model 
components basic negotiating agent complemented additional capabilities needed abn 
note diagram simplified clarity bidirectional link stands pair unidirectional links 
furthermore link negotiation protocol response generator argument generator omitted course necessary 
show descriptive behavioural specification changed 
structural specification changes adding new components deal abn 
descriptive specification crucial difference simple negotiation agent abn agent arguments opponents change agent mental attitudes agent goals motivations may change new information obtained 
result aspect descriptive specification dynamic ability refer changing descriptive specification directly run time extracting relevant attributes crucial 
descriptive specification include new decision making capabilities agent 
behavioural specification flexibility provided agent construction model particularly evident 
agent essentially links information flows simply extended links new controllers refined changes execution sequence 
opponent model mental attitudes environment model updated evaluation argument received proposal evaluated 
response sent directly opponent arguments may attached proposal argument generator argument selector components 
response generator argument generator negotiation rules order determine type responses possible 
automated negotiation gaining increasing interest growth matched appropriate agent oriented software engineering methodologies cater variety negotiating agent architectures 
taken step enabling effective design negotiating agents negotiation capabilities defined modular fashion allowing reuse dynamic reconfiguration recovery 
furthermore initial implementations construction model shown practical development process greatly aided ability separate concerns different agent views 
sets ground investigation formal specification verification negotiating agent architectures appropriate conceptual models empirical analysis direct implementation models 
brings closer possibility negotiating agent construction toolkits allow designers easily configure negotiators application requirements 

bartolini preist jennings 
architecting reuse software framework automated negotiation 
proc 
aose pages 

inverno luck 
engineering agentspeak formal computational model 
journal logic computation 

inverno luck 
understanding agent systems 
springer verlag 

faratin 
automated service negotiation autonomous computational agents 
phd thesis ucl queen mary westfield dept electronic engineering 

wooldridge jennings 
multi issue negotiation time constraints 
castelfranchi johnson editors proc 
aamas pages 
acm press 

jennings faratin parsons sierra wooldridge 
automated negotiation prospects methods challenges 
int 
journal group decision negotiation 

jennings parsons noriega sierra 
argumentation negotiation 
proc 
int 
workshop multi agent systems pages boston usa 

parsons sierra jennings 
agents reason negotiate arguing 
journal logic computation 

prakken vreeswijk 
logics defeasible argumentation 
gabbay guenthner editors handbook philosophical logic volume pages 
kluwer nd edition 

sonenberg dignum 
interest negotiation 
proc 
aamas appear melbourne australia 

sierra jennings noriega parsons 
framework argumentation negotiation 
singh rao wooldridge editors intelligent agent iv proc 
atal volume lncs pages 
springer 

tac 
trading agent competition 
world wide web www sics se tac 

walton krabbe 
commitment dialogue basic concepts interpersonal reasoning 
suny press albany ny usa 
