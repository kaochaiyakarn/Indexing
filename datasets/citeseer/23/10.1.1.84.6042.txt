finding regulatory motifs maximum density subgraphs eugene brian naughton douglas brutlag identification represented imperfectly conserved motifs genomic dna problem important biological applications discovery regulatory elements determine timing location level gene transcription 
experimental techniques chip chip microarrays identify sets genomic regions enriched binding sites transcription factor mined computationally associated binding motif 
problem tackled times number disparate methods :10.1.1.25.1002
thorough examination field published 
broad classes motif finding methods probabilistic discrete word 
popular probabilistic methods model motifs position specific scoring matrices pssm 
consensus uses greedy strategy attempt maximize information content position specific scoring matrix pssm 
alignace gibbs sampling strategy search space possible pssms 
meme models motifs similarly searches motifs strategy expectation maximization em 
second class motif finding methods discrete word searches 
diverse array methods including clustering methods projection word enumeration methods chip chip specific motif finding algorithm 
popular approaches built assumption probability nucleotide position motif independent nucleotides positions 
shown evidence dependencies positions transcription factor binding sites 
zhou liu evidence statistically significant dependencies motifs 
analysis yeast multicellular eukaryotic motifs confirms results shown 
fig 
example regulatory motif nucleotide dependencies accurately described simple pssm model 
better model motifs follow simple pssm model algorithms model motifs bayesian network framework approach uses simpler model pairwise dependencies 
approaches provide added expressive power due training issues computational complexity widely real life applications 
reexamine motif finding problem novel graphtheoretic perspective addresses problem nucleotide dependencies natural way 
formulate motif finding search maximum density subgraph graph nodes words input sequences edges connect similar words 
resulting optimization performed polynomial time 
motifcut tool motif finding formulation 
method considered non parametric rely specific generative model 
motifcut required minimal training exhibits comparable running time leading motif finding algorithms 
tested simulated real yeast data showed performs significantly better previous leading approaches 
overview motifcut algorithm step motifcut converts input sequences collection mers 
collection contains occurrences mers sequences overlap duplicate considered distinct mer 
words mer nucleotide position input sequences 
mers form set vertices graph representing input 
pair vertices vi vj create edge weight wij 
weight function number mismatches vertex mers normalized respect nucleotide background distribution similar mers connected higher weight edges 
background distribution find probability mers appearing random input 
weight edges connecting pair mers appear background weighted 
dependencies essential known genomic sequences certain dimers common gc content indicate 
general motif viewed set mers elements set exhibit higher degree pairwise similarity expected background distribution 
edge graph representation measure pairwise similarity expect sets mers representing motif occurrences recognizable portions graph greatest edge density 
insight basis algorithm 
notion subgraph density defined various ways computationally tractable options 
common definition graph density graph density number vertices total weight edges 
build formulation define motif finding input sequences search maximum density subgraph mds argmax 
methods provide evidence choice reasonable bio yap adr yeast motifs nucleotide dependencies 
diagram shows graphs real yeast motifs adr yap 
node corresponds motif occurrence 
edges connect pairs mers identical differ mutation 
model motif pssm compute probability specific mer generated pssm 
number motif instances convert probabilities expected number occurrences mer 
number compared actual number occurrences 
graphs mers occur frequently expected colored red mers occur frequently colored green cases observed expected numbers equal colored blue 
graphical representation pssm generated motifs single dense center corresponding maximum likelihood mers density mers decreases center 
pssm model fit yap motif adr motif 
motif dependency atg cat pssm aaa ccc ttt ggg subgraph candidate mer incorrect dependencies ctt nucleotide dependencies mds 
alignment mers left represents motif consisting motif occurrences 
artificial motif perfectly conserved nucleotide dependencies positions 
example mer right appropriate dependencies candidate motif 
standpoint pssm center top mer appears candidate motif instances 
contrast create edge mers mutation distance fewer nucleotides edge motif candidate connected motif set graph representation 
example demonstrates nucleotide dependencies ignored pssm representation implicitly incorporated graph representation motif 
logical data 
search efficiently maximum density subgraphs genomic sequences introduce optimizations discuss methods 
mds formalization main advantages pssm methods existing methods general motif model nonparametric principle accommodate complicated hard parametrize structures real motifs nucleotide dependencies 
fig 
illustrates nucleotide dependencies lead mer incorrectly identified motif occurrence pssm definition motifcut algorithm deals problem 
problem specific optimizations motifs efficiently located large inputs optimization problem define explicitly solved polynomial time algorithm guaranteed trapped local optima input size increases 
results synthetic data test performance motifcut ran series tests popular motif finding algorithms currently available meme alignace 
selection algorithms largely extensive performance analysis 
algorithms study considered best performance yeast 
chose mer size limitations prevent discovering real yeast motifs 
tool instance operate motifs odd length mer sizes greater prevent real yeast data 
algorithms suffer limitations included meme meme chose include meme demonstrated significantly better performance yeast 
included absent performance comparison tests demonstrated best performance previous methods 
experiment consisted running algorithms synthetic data set 
reasons synthetic data benchmarking 
obviates problem obtaining sufficient test cases allows gauge performance function specific input parameters 
eliminates possibility algorithm parameters known yeast motif annotations 
confident incorrectly identified motif false positive real data motifs annotated 
synthetic data generated background sequences rd order markov model 
dependencies estimated intergenic regions yeast genome 
generated sets pssms sizes fixed information contents bits respectively pssm representation motif nucleotide position viewed bits information predicts specific nucleotide type probability analogously values equally information content position 
motif size run experiments inputs consisting nucleotides respectively subdivided sequences 
test instances motif randomly seeded input necessarily sequence results runs tests 
score results compute pssm top motifs returned algorithm calculate value pearson correlation seeded motif pssm 
value correlation higher commonly threshold strong statistical similarity consider seeded motif correctly identified 
possible algorithm find true motif positions shifted left right 
scoring purposes allow nucleotide uniform shifts entire motif set 
size maximum allowable shift depends mer size 
seen fig 
motifcut performs better methods tests randomly generated data 
algorithms experience significant performance drop ratio number motif occurrences length input sequence decreases 
motifcut follows pattern alignace meme motifcut meme log odds ratios algorithms synthetic data set 
demonstrating gradual performance decay algorithms 
approach uses novel interpretation motif finding problem expected lower correlation motifs motifcut located algorithms 
way measure correlation algorithms performance log odds ratio 
test runs calculate probability motif correctly identified simultaneously algorithms 
divide probability expected probability assumption algorithm independence derived fraction motifs algorithm 
log ratio measure similarity algorithms value indicates total independence value signifies amount observed overlap twice expected overlap assuming independence 
measure pearson correlation strongly performing algorithms priori high similarity 
motifs may extremely easy locate may identifiable statistical methods 
correlation algorithms instances misleading virtually methodology independent 
log odds ratio restricted input motifs algorithm missed algorithm 
table shows log odds ratios pair algorithms 
seen table motifcut results significantly different algorithms 
approach motif finding departed linear complexity sampling heuristics 
running time motifcut scale real life applications implemented series problem specific optimizations mds algorithm sub quadratic 
details optimizations discussed methods 
fig 
demonstrates running times algorithms synthetic test data 
algorithm benchmark running time input sequences length base pairs 
type averaged running time mers size 
seen figures motifcut running time comparable algorithms 
yeast data synthetic data convenient testbed gives control aspect input exhibits limited fidelity real task 
benchmark performance algorithm real data tested motifcut algorithms set experimentally verified yeast motifs obtained genome wide study reported previously 
mer size input size input size mer size mer size input size alignace meme motifcut performance motif finding algorithms synthetic data 
graphs axis represents input size nucleotides axis represents percentage motifs correctly identified 
motif considered correctly identified pearson correlation seeded motif greater 
alignace meme motifcut kb kb kb running time comparison 
axis input size axis time seconds average task completes 
values averaging running time mers sizes 
alignace meme motifcut meme table shows log odds correlation values motifs algorithms real yeast data 
motifs identified chip chip experiment having value conserved yeast genome 
shown fig 
motifcut significant lead methods identifying yeast motifs 
case synthetic data accepted top results algorithm 
motifs identified algorithms 
similarly synthetic data find motifcut identifies motifs correlated algorithms shown table 
methods graph construction main idea motifcut algorithm formulate motif finding problem finding maximum density subgraphs mds specially constructed weighted graph set vertices corresponds alignace meme motifcut performance algorithms real yeast data 
axis graph represents percentage motifs identified pearson correlation greater annotated motif pssm 
grey level represents percentage motifs algorithms 
set mer occurrences input set undirected edges represents nucleotide similarities mers 
graph denote collection mer occurrences corresponding binding sites specific transcription factor denote background mers 
output motifcut set vertices best prediction set sn set input sequences 
sequence si array nucleotides si ai ai aim 
start constructing collection multiset mers encountered input including repeats overlaps 
vertex vl uniquely identified starting position 
position corresponds particular nucleotide aij input sequence vl aij aij aij size mers 
edge set created pairwise evaluation similarity pair mers weighted graph simplicity view fully connected graph graph edge pair vertices concentrate assigning appropriate weight edge 
edge weight wij pair vertices vi vj defined follows wij vi vj vj vi vi vj formula background normalization function rigorously defined background normalization 
estimate quantities follows estimate probability vi vj took account mer size hamming distance number mismatches vi vj 
generated random pssms specific information content selected empirically reflect average conservation rates yeast motifs 
values curated databases real motifs extrapolated information content asymptotic behavior 
generated instances bp long input sequences rd order markov background entire yeast genome input implanted occurrences motifs generated pssm 
resulted input graphs containing vertices vi number vertices vj mismatches vi number vertices vj mismatches vi 
combination estimate vi vj plot vi vj number nucleotide mismatches vj vi approximated sigmoid 
parameters determined mer size number nucleotide mismatches vi vj 
vi vj zl depend size mer seen results approximation fig 
fall range observed yeast data 
probability vi straightforward application nth order markov dependency assumed input vj ait ait ait ait vj order markov dependency size input ensure sufficient sampling 
finding maximum density subgraph find maximum density subgraph modified parametric flow algorithm 
example fractional programming 
solved iterative application push relabel algorithm find max flow mincut 
parametric flow algorithm modifying original graph adding additional vertices source sink 
compute graph density 
vi connected vertices sum weights adjacent edges vi vi 
probability number mismatches probability mer belonging motif mutation distance motif mer 
probability vi vj plotted red line function number mutations vj vi estimated simulated pssms 
blue area range values probability motifs observed yeast promoter regions 
example mer size amount empirical data size greatest 
vi connected vi edge weight vi vi connected edge weight vi 
new graph execute push relabel algorithm 
algorithm finds maximum flow graph finding minimum cut 
minimum cut partitions graph disconnected subgraphs 
partition includes sink includes source 
discard elements connected sink recompute new value remaining elements rerun algorithm 
algorithm converge polynomial number steps set vertices constitute maximum density subgraph 
rigorous treatment algorithm defer reader gallo 
algorithm finding mds simple easy implement running time number vertices number edges 
time complexity great large data sets 
overcome limitation define set subgraphs vi vertex vi 
subgraphs represents neighborhood vertices vi induced vertices directly connected vi edge weight greater threshold including vi fig 

graph fully connected motif set exists minimal instance motif instances motif directly connected edge weight greater equal means instances motif appear single neighborhood minimum allowed weight equal construction neighborhood subgraph 
starting complete graph temporarily discard edges weight depicted light grey picture 
vertex turn chosen colored red center neighborhood 
vertices connected central vertex define induced subgraph subgraph reintroduce edges lower weight vertices central vertex form neighborhood subgraph circled red line 
find maximum density subgraph neighborhood green vertices 
process repeated vertex mer input 
property proper choice find mds local neighborhood contain motif set 
assume motif set produces highest density subgraph neighborhood motif instance produce density density highest neighborhoods 
speed algorithm want set high possible decreasing sensitivity motif detection 
picked heuristic approach 
compute appropriate threshold function motif length generated motifs synthetic pssms size various information contents bits information implanted kb random sequence 
information content motifs content detected running mds entire graph picked highest sensitivity decrease 
selecting vertices connected vi edge weight mer size obtain neighborhood graph vi 
note induced graph defined include edges connecting pairs nodes neighborhood vi including edges weight 
neighborhood subgraph vi find maximum density subgraph vi associated density isolate argmax vi subgraph candidate motif set refined 
refinement step set candidate mer occurrences starting point finding elements constitute real set binding sites 
empirically find false positives set 
eliminate false positives find subset minimizes entropy entire set 
entropy set computed follows log aji log aji 
optimization proceeds greedy leave fashion finds locally optimum subset 
process terminates convergence achieved 
note log term ensures set shrink single mer 
practice interested finding single motif candidate set input sequences 
achieve performing refinement step returning user specified number top scoring neighborhoods 
ensure returned results contain neighborhoods primarily consisting vertices representing uniform shift bp vertex set neighborhood 
background normalization function assigning weights edges critical effectiveness method real biological data 
particular real dna irregularities mer distribution high gc content low complexity regions 
accounted precisely abnormalities emerge dense regions graph obscure presence real motifs 
compensating irregularities computing edge weights discussed graph construction 
intuitively compensation absence true motif vertices vi vj corresponding densities approximately equal 
achieve defined function equation empirically 
constructed input sequences rd order markov irregularities varying severity gc content 
attempted different families functions exponential polynomial logarithmic functions definition results densities sufficiently normalized vj vj example normalization works practice displayed fig 
set sequences gc content 
seen normalization densities display high degree variation result motif instances background words 
normalization background mers induce approximately equal densities result motif mers clearly discerned 
choice density function results demonstrate objective function subgraph density motifcut effective separating motifs background 
clear priori optimum choice density function 
function canonical definition graph density functions equally meaningful 
general definition density exponent range 
value fundamentally changes results optimization fig 

instance applying unweighted graph problem equivalent determining size maximum clique 
output largest connected component graph 
optimization problem values intractable 
fact non trivial formulation problem remains tractable exponent value algorithm 
realistically objective function provide evidence choice close optimal 
ideally pick exponent densities motifs separated possible maximum densities subgraphs background 
asked question best exponent real yeast data 
promoter sets containing motif computed density motif subgraph 
ideally compute maximum density background subgraph 
possible arbitrary problem intractable 
relied sampling random subgraphs 
yeast input benchmark values values vertices ordered predicting mer specific density value 
graph mers sorted predicted maximum density red line density calculated mer nucleotide composition distribution background 
blue lines indicate actual maximum density values obtained neighborhood appropriate mer 
graph shows effect normalization predicted maximum density 
red line demonstrates normalized predicted value blue lines actual value obtained 
cases obvious outliers instances motif 
maximum density subgraph different exponent values 
assume edges graph weight mds exponent size blue vertices density 
mds exponent shown green vertices include clique size density 
picked random subgraphs size ranged measured density values 
combination subgraph size exponent mean standard deviation density values 
resulting distribution served estimate distribution densities background subgraphs 
hypothesized subgraph size optimal choice ratio motif density standard deviation background density maximum 
exponent recorded minimum ratio value produced background subgraphs size fig 

plotted minimum value creates curve fig 
red line 
optimal choice exponent curve corresponds highest point 
fig 
plot average yeast motifs normalize curve peak 
peak intuitively correspond optimal value exponent find 
value remarkably close canonical value motifcut 
argument precise estimation objective function yeast data set provides explanation strong performance motifcut 
motifcut novel graph approach motif finding 
demonstrated better performance leading motif finding algorithms simulated motifs experimentally derived yeast motifs 
performance motifcut appears scale input size 
important feature motifcut formulation markedly different commonly pssm models result motifs finds significantly different 
originally computational tools detect motifs standard deviations normalized standard deviations exponent values exponent values optimal exponent value 
graph depicts example sampling output particular input adr 
axes exponent values ranging 
axis number standard deviation subgraphs specific size subgraph generated motif occurrences 
blue line represents sample output particular size subgraph 
sizes range 
red line indicates minimum number standard deviations specific value exponent 
graph depicts minimum values exponent averaged yeast motifs 
image red line represents exponent motifcut green line represents optimal value 
yeast data set pssm diffused consensus possible imposing assumptions motif structure motifs missed 
substantial evidence cis regulatory elements evolve parallel binding factors 
example see effect transcription factor rpn binding site cerevisiae 
sequences related binding sites substantially different 
graph formulation possible mers subgraph substantially different mers connect sufficiently 
related substantially different mers part motif exist set intermediary mers 
source code executables motifcut available gnu public licence motifcut stanford edu 
laboratory supported part nsf ef nih hg nsf career award alfred sloan fellowship 
brutlag laboratory supported stanford biochemistry department 
li wh patterns nucleotide substitution functional genes 
mol 
evol 
pv lapedes stormo gd probabilistic code dna recognition proteins egr family 
mol 
biol 

gordon db mccallum fraenkel flexible object oriented framework analyzing transcriptional regulation dna sequence motifs 
bioinformatics 

karlin compositional differences eukaryotic genomes 
proc natl acad sci 
epstein microarray technology enhanced versatility persistent challenge 
current opinion heller dna microarray technology devices systems applications 
annual rev biomed 
eng gallo tarjan fast parametric maximum flow algorithm applications 
siam computer science pevzner sze combinatorial approaches finding subtle signals dna sequences 
eighth international conference intelligent systems molecular biology 
hughes tavazoie church computational identification cis regulatory elements associated functionally coherent groups genes saccharomyces cerevisiae 
mol 
biol 
stormo ann spec method discovering transcription factor binding sites improved specificity 
pacific symposium biocomputing 
hertz stormo identifying dna protein patterns statistically significant alignments multiple sequences 
bioinformatics frith hansen weng finding functional sequence elements multiple local alignment 
nucleic acids res 
bailey elkan value prior knowledge discovering motifs meme 
third international conference intelligent systems molecular biology 
eskin pevzner finding composite regulatory patterns dna sequences 
bioinformatics supplement higher order background model improves detection promoter regulatory elements gibbs sampling 
bioinformatics van andre vides extracting regulatory sites upstream region yeast genes computational analysis oligonucleotide frequencies 
mol 
biol 
hendrix golden smith transcription facto binding site identification self organizing map 
bioinformatics gelfand mironov gibbs sampler identification symmetrically structured spaced dna motifs improved estimation signal length validation binding sites 
web discovery transcription factor binding sites set sequences regulated genes 
nucleic acids res 
sinha tompa program discovery novel transcription factor binding sites statistical 
nucleic acids res 
sinha blanchette tompa probabilistic algorithm finding motifs sets sequences 
bmc 
friedman probabilistic models identifying regulation networks 
zhou liu modeling motif dependence transcription factor binding site predictions 
bioinformatics 
apr agarwal bafna detecting non adjacent correlations signals dna 
recomb liu brutlag liu discovering conserved dna motifs upstream regulatory regions expressed genes 
pac symp 
hughes tavazoie church computational identification cis regulatory elements associated groups functionally related genes saccharomyces cerevisiae 
mol biol 
mar 
johnson church nucleotide transcription factor binding sites exert independent effects binding affinities transcription factors 
nucleic acid research shaw mcgregor dover mcgregor coevolution dependent promoters inception regulatory incompatibilities species higher 
evolution development july computational prediction transcription factor binding site locations 
genome biol 
dec osborne osborne biochemistry specificity regulation gene expression coevolution regulatory dna element binding protein 
biochemistry april moses chiang fraser eisen conservation evolution cis regulatory systems fungi 
biol 
nov wang stormo combining phylogenetic data genes identify regulatory motifs 
bioinformatics dec 
liu brutlag liu algorithm finding protein dna binding sites applications chromatin microarray experiments 
nat 
aug liang algorithm finding fuzzy dna motifs 
comput biol mar 
friedman kaplan modeling dependencies protein dna binding sites 
recomb osborne specificity regulation gene expression coevolution regulatory dna element binding protein 
proc natl acad sci 
stormo identifying protein binding sites unaligned dna fragments 
proc natl acad sci feb 
sinha tompa program discovery novel transcription factor binding sites statistical 
nucleic acids res 
jul pevzner finding motifs zone 
bioinformatics 
oct buhler tompa finding motifs random projections 
comput biol 

harbison ct transcriptional regulatory code eukaryotic genome 
nature buhler tompa assessing computational tools discovery transcription factor binding sites 
nature biotechnology jan 
