international journal satellite communications networking int 

commun 
network 
doi sat tcp hybla tcp enhancement heterogeneous networks carlo rosario deis bologna university viale bologna italy summary heterogeneous networks tcp connections incorporate terrestrial satellite radio link greatly respect entirely wired connections longer round trip times rtts 
cope problem new tcp proposal tcp hybla discussed 
stems analytical evaluation congestion window dynamics tcp standard versions tahoe reno newreno suggests necessary modifications remove performance dependence rtt 
tcp hybla performance firstly evaluated case ideal channel correlation analytical simulation data 
realistic situations require adoption benchmark network topology careful ns simulation set examined 
particular tcp hybla performance compared achievable tcp standard presence congestion link losses separately jointly considered 
examined cases superiority tcp hybla evident greatly reduces severe penalization suffered wireless especially satellite tcp connections 
worth noting tcp hybla semantics tcp compatible promising enhancements 
copyright john wiley sons key words tcp ip congestion control wireless communications 
current versions tcp protocol tahoe reno newreno suffer performance problems connections characterized relatively high link error rates long propagation delays encompass terrestrial satellite radio links 
tcp protocol basically designed recover congestion situations losses tcp segments due errors transmission link erroneously ascribed congestion problems causing totally inappropriate activation congestion avoidance mechanisms 
problem addressed proper modifications tcp protocol simplistically enforcing reliability lower layers possible 
stressed case channel radio connections penalized long propagation delays 
due tcp window transmission algorithm triggered acknowledgment ack arrivals depends network delays 
long round trip times rtts reduce congestion window cwnd growth rate result significant correspondence carlo deis bologna university viale bologna italy 
mail deis unibo copyright john wiley sons throughput degradation unfair sharing available bandwidth resources wired connections connections incorporate radio link usually characterized longer rtts especially satellite legs involved 
case performance degradation direct consequence intrinsic behaviour tcp protocol resolved introducing proper modifications tcp congestion control algorithm 
aim tcp hybla proposal 
years solutions proposed improve tcp performance wired wireless links 
suggestions focus limited modifications standard procedures tuning tcp parameters envisage alternative tcp procedures 
category advantages larger slow start initial window ss iw pointed modifications ss threshold packet spacing envisaged prevent early buffer overflow 
lines minor modifications fast retransmit algorithm suggested adoption sack selective ack option quickly recover multiple losses 
category proposals characterized major tcp modifications 
tcp vegas aims preventing congestion losses exploiting dynamic estimation available bandwidth 
positive results may achieved wired networks maximum cwnd increase rate left unaltered respect standard leaving basically unresolved performance penalization suffered long rtt connections 
tcp replacement slow start fast recovery algorithms sudden start rapid recovery procedures rely dummy segments probe bandwidth availability network 
tcp requires routers connection implement priority mechanism ip layer discard dummy segments presence congestion 
interesting proposal tcp westwood introduces modification fast recovery algorithm called faster recovery 
contrast tcp standard halves congestion window duplicate acks blindly fixes slow start threshold tcp westwood attempts select slow start threshold consistent actual available bandwidth 
may offer advantages presence link errors address tcp bias connections long rtts 
proposals rely splitting connections isolate wireless legs modification lower layers tcp spoofing 
promising intrinsically lead infringement semantics tcp presents disadvantages security privacy issues 
lot interesting contributions literature comprehensive solution performance disparity due different rtts far reached 
tcp hybla protocol aims providing assembling set techniques solve aforementioned rtt disparity problem 
key element modification standard rules congestion window increase obtained indications analytical study congestion window dynamics 
enhancements introduced considered extension constant rate additive increase policy floyd discussed 
shown presence losses due congestion link errors copyright john wiley sons int 

commun 
network 
tcp hybla proposed modifications cwnd growth policy highly benefit adoption sack option timestamps contrast provide limited gain satellite connections associated tcp standard 
important advantages obtained implementing packet spacing techniques removing transmission burstiness reduce probability buffer overflow intermediate routers allows tcp hybla avoid limitations introduced original constant rate algorithm 
numerical results obtained analytically means ns simulator show large improvement long rtt connections performance effectively achieved penalizing network performance hybla proposal requires point modifications semantics tcp protocol 
organized follows 
section congestion control loss recovery algorithms tcp standard protocol analysed 
section tcp hybla proposal introduced preliminary performance evaluation ideal channel 
section benchmark network topology simulation set specified 
section simulation results referring congestion link losses discussed section fairness friendliness tcp hybla tcp newreno investigated 
issues related rtt discussed section drawn section 
tcp algorithm tahoe reno newreno new connection established sender probes bandwidth availability gradually increasing congestion window value slow start phase starting initial value typically equal maximum segment size mss congestion window increased mss bytes non duplicate ack received 
congestion window reaches value slow start threshold ssthresh source switches congestion avoidance ca phase congestion window increased mss bytes new ack received 
real channel rise continues size receiver buffer advertised window reached segment lost 
case action taken recovery procedure depends specific tcp version adopted 

slow start congestion avoidance algorithms expressing value congestion window mss units standard cwnd update rules previously described wi wi ss wi wi ca index denotes reception ith ack 
note actual transmission tcp segments occurs relation window size min cwnd advertised window advertised window corresponds receiver buffer size 
carry analytical investigation impact rtt tcp congestion control convenient temporarily consider ideal channel losses adopt continuous model describe congestion window evolution time 
note ss phase cwnd update rule results discrete exponential increase rtt congestion window doubled rtt copyright john wiley sons int 

commun 
network 
ca phase leads approximately linear increase time growth mss bytes rtt 
denoting cwnd expressed segments tg time ssthresh value reached rtt tg ss tg rtt tg ca tg rtt log evident lower rtt higher congestion window increase rate 
value congestion window bytes wb obtained multiplying sender mss assumption bits fill mss segments 
shows wb different rtts having assumed example mss bytes relatively low value realistic links chosen sake clearness graphic representation 
note consequence different rtts standard congestion control algorithm causes different congestion window growth rates different values tg inspection apparent severe penalization affects slower connections cwnd practice increases longer time scale 
performance comparison useful calculate amount data transmitted standard tcp source transmission start td introduce expression segment transmission rate amount segments transmitted second rtt straightforward calculate td td dt rtt ln tg tg ln rtt rtt tg ss tg ca congestion window kbyte rtt ms rtt ms rtt ms elapsed time ms 
tcp standard congestion window evolution time rtt values 
copyright john wiley sons int 

commun 
network 
tcp hybla curves obtained 
discussion essential note presence rtt amount data transmitted connections longer rtts lower congestion window evolution time 
consequence order instantaneous transmission rate invariant rtt necessary compensate different congestion window evolutions time resulting different rtts explained tcp hybla section 

loss recovery mechanisms various versions tcp essentially differ loss recovery mechanism implement tackle packet losses real channels 
limit recall main features tcp newreno recovery phase basically maintained tcp hybla mandatory implementation couple additional features 
start assuming segment dropped 
consequence new duplicate dupack segment generated receiver time new segment arrives 
reception third dupack triggers sender fast retransmit fast recovery procedures starting recovery phase 
segment retransmitted ssthresh approximately updated half cwnd value loss detection old cwnd cwnd reduced ssthresh plus mss 
additional dupack increments cwnd mss triggers transmission new segment cwnd exceeds old cwnd 
reception non duplicate ack may determine consequences 
ack partial confirms part segments flight loss detected recovery phase terminated unacknowledged segment retransmitted cwnd amount data acknowledged new segment sent allowed new cwnd value 
partial ack arrival recovery phase resets retransmission timer 
ack confirms segments flight loss detected recovery phase ends cwnd ssthresh value sender restarts transmission congestion avoidance phase 
multiple losses occur window newreno remains recovery phase lost packets recovered retransmission time rto expires 
newreno able recover packet rtt time spent recovery phase excessive long rtts penalizing wireless connections throughput 

tcp hybla algorithm 
slow start congestion avoidance algorithms basic idea tcp hybla obtain long rtt connections satellite wireless instantaneous transmission rate comparatively fast tcp connection wired 
equation suggests goal achieved steps making independent rtt time scale modification compensating effect division rtt 
steps better described introducing accurately max mss number segments sent acknowledged 
copyright john wiley sons int 

commun 
network 
normalized round trip time defined rtt rtt rtt round trip time connection aim equalize performance 
step performed multiplying time time elapsed reaching ssthresh achieving independent rtt 
multiplying congestion window resulting step including original ssthresh independent rtt 
rt rtt tg ss tg rr rtt tg ca superscript identifies hybla proposal 
consequence modification introduced second step switching time tg defined time congestion window reaches value rg rtt tg rtt log congestion window evolution time rtt values considered having chosen rtt ms comparison purposes 
segment transmission rate bh rtt tcp hybla assumes expression rtt tg ss rtt tg tg ca rtt rtt clearly independent rtt equal segment transmission rate tcp standard connection 
congestion window kbyte rtt ms rtt ms rtt ms ref 
elapsed time ms 
tcp hybla congestion window evolution time rtt values 
copyright john wiley sons int 

commun 
network 
simple derive analytical expression amount segments transmitted tcp hybla connection dt rtt tg ss ln tg ln rtt tg tg ca rtt clear tcp hybla performance depend actual value rtt anymore 
observation confirmed numerical results reported tcp standard tcp hybla performance compared different rtt values ideal channel conditions 
amount transmitted data tcp standard connections decays rtt tcp hybla connections performance 
far feasibility proposed approach concerned observe hybla congestion window dynamic obtained modifying congestion window update rules follows ss ca maintaining ack mechanism congestion window update tcp standard 
note ca update rule similar constant rate algorithm hand consider slow start phase 
important difference actual implementation tcp hybla sets minimum value transmitted data kbyte tcp hybla hybla rtts ms newreno rtt ms newreno rtt ms newreno rtt ms elapsed time ms 
tcp hybla vs tcp standard transmitted data rtt values ideal losses channel 
copyright john wiley sons int 

commun 
network 
way tcp hybla simply behaves standard tcp fast connections connections rtt rtt maintain standard increase rate 
addition initial cwnd original ssthresh multiplied size transmission buffer manage larger burstiness tcp hybla transmission 
note expressions hold true assumption sender limited congestion window advertised window 
assumption fulfilled limitation imposed receiver removed increasing window ensuring ceiling transmission rate connections 
note sole modification receiver side mandatory 

loss recovery mechanism comparing congestion control algorithm tcp hybla tcp standard evident result larger average cwnd 
consequently case multiple losses window frequent particular long rtt connections considered 
phenomenon may result harmful slow average transmission rate adoption proper countermeasures order 

sack option 
overcome tcp newreno recovering multiple losses window sack option proposed 
sack procedure data receiver inform sender segments successfully delivered allowing sender recover packet rtt 
performance tcp reno sack option tcp newreno compared means simulations sack ability recover multiple losses shorter time confirmed 
consequently sack option included recommended tcp hybla proposal 

retransmission timeout timestamps 
standard tcp uses retransmission timer ensure data delivery absence feedback remote receiver 
duration timer referred rto retransmission time computation current estimation smoothed value rtt srtt rtt variation rttvar 
parameters calculated sender deriving rtt estimations acks arrival time 
retransmission timer expires rto usually doubled exponential back policy new rto value computed 
necessary wait ack non retransmitted packet timestamps 
second alternative largely implemented widespread operating systems greatly preferable dealing large number packet retransmitted time event may excessively postpone rto update 
investigated point means simulation observing severe penalization longer rtt connections unlucky circumstances may stall unacceptable prolonged time 
contrast tcp hybla initial window increment proportional actual rtt 
result possible adopt larger initial cwnd network larger cwnd compensates longer rtt leaving constant 
copyright john wiley sons int 

commun 
network 

implementation features tcp hybla 
slow start threshold initial estimation 
prevent channel feeding slow start phase consequent burst losses slow start threshold initial setting suggested implemented tcp hybla 
short observing delay receptions acks corresponds consecutively transmitted segments possible calculate connection start rough estimate channel bandwidth delay product derive appropriate initial slow start threshold value 

burstiness packet spacing 
obtain satisfactory segment transmission rate presence long rtts acceptable throughput large independently tcp version adopted deduced 
unfavourable circumstances large may result bursty transmission possible consequent performance degradation 
burstiness channel eliminated origin spreading cwnd segments rtt suggested 
considered possibility recommended option tcp hybla indicated packet spacing 
note technique eliminates motivation upper bound cwnd ca increase set dealing constant rate policy consequent performance loss 

performance evaluation ideal channel assess accuracy continuous time model representing discrete ack congestion control algorithm preliminary ns simulation performed considering ideal channel congestion link error losses large bandwidth gb available 
simulation data compared analytical results plotted 
packet spacing option adopted amount transmitted data provided simulation increases rtt steps alternatively crossing analytical curve result bursty transmission 
contrast packet spacing option adopted simulation data presents continuous slope transmission burstiness removed crossing analytical curve due small delay data delivery necessarily introduced packet spacing option 
cases difference analytical data modest tends disappear short time 
state independently packet spacing adoption accuracy continuous time analytical model satisfactorily confirmed simulation data 
dealing ideal channel worth noting study connection start interest cwnd tend rapidly receiver window connections 
reason figures performance evaluated terms total number transmitted packets vs elapsed time connections reporting throughput goodput see average value functional describing transient processes 
contrast long connections average values interest evaluating performance real channel losses due congestion link errors necessary define network topology simulation environment 
copyright john wiley sons int 

commun 
network 
transmitted data kbyte rtt ms hybla analytical hybla ns hybla packet spacing ns elapsed time ms 
tcp hybla comparison analytical simulation data transmitted data connection start ideal losses channel 

topology simulation setup insert hybla modifications ns simulator necessary write new software module standard variants tcp existing packages 
basic network topology considered simulation runs shown minor variants introduced necessary 
foreground tcp connection composed wired legs wireless link satellite link background traffic represented entirely wired connections 
connections share bottleneck link limited bandwidth deliberately chosen study congestion effects located routers 
follow red random early detection policy better performance ensuring fairness competing tcp connections reducing burstiness impact moderate queues lengths seg maxth seg minth seg simulation hosts follow simple dt drop tail 
considered red policy generally beneficial dealing simulations reduces variance simulation results 
way propagation delay wireless link varies way rtt foreground connection ranges ms considered comparison purposes wired connections ms corresponding case geo satellite link 
wired links supposed error free uniformly distributed error model packet error rate range adopted forward reverse links radio leg 
link characteristics reported 
tcp connection persistent ftp file transfer process considered 
performance evaluated terms goodput amount acknowledged packets divided transfer process time tcp hybla requires estimation wireless connection rtt derive suitable value rtt chosen simulations equal rtt wired connections sake comparison estimation provided tcp versions implemented ns simulator 
simulations variants tcp protocols examined copyright john wiley sons int 

commun 
network 
foreground source background sources mb ms error free tcp hybla mb ms error free mb variable delay variable loss rate mb ms error free 
benchmark network topology simulation setup 
tcp newreno tcp newreno collection bug fixes refinements tcp reno fast recovery congestion avoidance policies tcp sack reno congestion avoidance algorithm combined sack option loss recovery tcp vegas proposed variant tcp standard aiming preventing congestion losses means dynamic estimation available bandwidth tcp hybla sack partial version proposal tcp newreno include sack option tcp hybla proposal advantages provided packet spacing evaluated separately protocol modifications 
tcp hybla results refer option recommended explicitly stated 

performance evaluation foreground sink background sinks 
performance presence congestion wireless tcp connection variable rtt wired tcp connections fixed rtt ms simultaneously active 
focus attention presence congestion wireless link considered momentarily error free losses ascribed presence shared wired link acts network bottleneck 
situation standard tcp suffers serious performance problems longer rtt connection wired connections share allowable bandwidth 
quantify problem assess effectiveness countermeasures introduced tcp hybla protocol goodput wireless connection reported function rtt variants tcp 
note performance wired links deliberately reported intelligibility reasons 
substantially independent copyright john wiley sons int 

commun 
network 
goodput mbit round trip time ms maximum fair share hybla hybla sack vegas newreno sack 
performance different tcp versions presence congestion 
rtt close reported maximum fair share capacity bottleneck link divided number sharing connections 
inspection observations 
longer wireless connection rtt worse performance tcp standard newreno fast goodput degradation rate 
problem described known literature 

tcp reno sack option presents performance tcp newreno sack option effective presence congestion 

tcp vegas performs slightly better tcp newreno 

tcp hybla sack option shows evident performance improvement performance dependent rtt 

tcp hybla sack option proves effective effects long rtt congestion losses substantial performance independence rtt achieved wireless connection longer penalized 
additional comments required 
far observation concerned thorough analysis simulation data allowed discover reasons sack option ineffective presence severe congestion 
basically due fact slow start congestion avoidance algorithms left unaltered 
sack faster recovering multiple losses steady state reached average value wireless connection cwnd usually low long rtt connections due inadequate tcp standard congestion control policies 
result multiple losses relatively rare sack benefits scarce 
fact tcp vegas leaves unaltered maximum cwnd growth rate tcp standard justifies limited improvement achieved wireless connection observation 
regarding observation decision leave temporarily apart sack option motivated desire quantifying performance improvement due modifications congestion control policy 
note reasons reported copyright john wiley sons int 

commun 
network 
tcp hybla section modifications assure desired performance independence rtt ideal channel absence losses nature 
leaving unaltered loss recovery mechanism connection requires rtt recover packet loss causing aforementioned non compensated penalty longer rtt connections 
provided tcp protocol able assure satisfactory transmission rate multiple losses frequent wireless connection requires larger cwnd assure transmission rate see 
tcp hybla benefits highly inclusion sack option observation 

performance presence link losses full understanding influence link errors tcp performance convenient leave congestion problem temporarily apart 
wireless connection considered active losses consequence non null packet error rate 
tcp distinguish origin packet losses link errors cause spurious interference congestion control mechanism corrupted packet causes unnecessary halving cwnd 
consequences erroneous interpretation highlighted performance wireless connection reported versus rtt tcp versions considered considering packet error rate 
examining curves observations 
origin problem completely different results qualitatively reported congestion case just discussed 
superiority tcp hybla apparent performance gain higher rtt ms respect newreno 

performance improvement due inclusion sack option tcp hybla evident congestion case 

tcp hybla provides satisfactory goodput mbit theoretical capacity channel mbit far reached 
goodput mbit tcp hybla round trip time ms hybla hybla sack vegas newreno sack 
performance different tcp versions presence residual link errors copyright john wiley sons int 

commun 
network 
comments order 
regarding point observed superiority hybla version stems improved congestion control mechanism basically succeeds effects rtt 
concerning second observation significant advantages sack option may justified assumption uniform distribution packet errors simulation 
realistic correlated fading environment benefit provided sack option greater 
failure reaching theoretical goodput limit wireless connection apart small percentage corrupted packets due aforementioned tcp inability discriminate origin losses 
regard worth noting tcp hybla aims performance independent rtt version directly eliminate consequences link errors wireless legs 
overcome problem necessary modify depth tcp algorithm introducing possibility discriminating congestion error losses example introducing nack suggested 
effective improvements obtained introducing different slow start threshold setting policy loss envisaged tcp westwood 
worth noting tcp hybla compatible enhancements 

performance congestion link losses congestion link errors clear basis previous considerations tcp standard versions unable provide satisfactory performance long rtts 
reason prefer focus promising performance tcp hybla version considering topology adopted congestion case introducing non null 
results reported plotting goodput wireless connection vs rtt 
useful straight line maximum fair share defined congestion case drawn 
inspection observations goodput mbit maximum fair share hybla hybla hybla round trip time ms 
tcp hybla performance presence congestion residual link errors packet error rates 
copyright john wiley sons int 

commun 
network 

packet losses due link errors causes significant performance degradation respect congestion case 

worsening performance due simultaneous presence congestion link errors lower sum disjoint spurious cwnd reductions caused link errors presence congestion positive side effect lowering probability packet overflow 
general comment conclude observing tcp hybla offers satisfactory performance rtt case combined presence congestion moderate percentage link errors standard tcp versions unable cope impairments separately considered 

fairness friendliness fairness friendliness important features version tcp protocol 
fairness refers capacity assure fair band subdivision competing connections version protocol friendliness indicates ability different protocol variants 
tcp standard versions known fair long competing connections similar rtts usually case heterogeneous networks wireless connections highly penalized 
behavior described goodput tcp newreno connections reported pie chart referring simulation set considered previously congestion case different newreno residual capacity newreno tcp hybla newreno newreno newreno newreno 
tcp newreno unfairness presence links different rtts 
normalized bottleneck link nominal capacity 
copyright john wiley sons int 

commun 
network 
newreno residual capacity newreno hybla newreno hybla hybla 
tcp hybla fairness friendliness presence links different rtts 
normalized bottleneck link nominal capacity 
number wireless wired connections rtt ms rtt ms respectively 
apparent wireless connections starve short rtt connections share majority bottleneck link capacity 
contrast adoption tcp hybla wireless connections leads totally different situation reported 
tcp hybla connections goodput proving fairness hybla proposal provide performance tcp newreno wired connections despite different rtts giving clear indication tcp hybla friendliness 
challenging situations considered congestion half connections wireless long rtt large burstiness may cause efficiency loss represented relatively high residual capacity difference nominal bottleneck link capacity sum 
residual capacity mainly packet retransmissions gives idea bandwidth wasted protocol inefficiencies exacerbated bursty nature traffic 
packet spacing spreading cwnd segments rtt eliminates origin transmission burstiness 
adopting option hybla connections considered obtained results show great reduction residual capacity corresponding goodput improvement competing connections 
simulation results figures provide evidence effectiveness tcp hybla 
implementation proposal cause instability network objected tcp hybla fair possible competing wireless connections adopting tcp standard 
apparent unreasonable pursue friendliness connections case suffer starvation wired connections consequence limits standard protocol 
copyright john wiley sons int 

commun 
network 
adoption faster growth rate cwnd compensated motivated longer rtt increased burstiness long rtts due better efficiency protocol effectively contrasted adoption packet spacing 

rtt choice newreno newreno residual capacity tcp hybla newreno hybla hybla 
round trip time related issues hybla 
packet spacing effectiveness reducing residual capacity 
tcp hybla fairness friendliness presence links different rtts 
normalized bottleneck link nominal capacity 
packet spacing enabled 
value important issue deserves discussed detail 
implications clear consider tcp hybla connection aims performing standard tcp connection rtt rtt consequence tcp hybla connection friendly competing standard tcp connections long rtt comparable rtts 
case entity greater usual unfairness tcp standard connections different rtts 
worth stating tcp hybla aim perfect equalization tcp connections open network task really problematic require centralized control 
considers realistic goal reduction performance penalization long rtt connections especially satellite affected 
aim best rtt choice wireless satellite connections rtt connection decreased additional delay due radio link 
additional delay may hard estimate conservative sensible choice rtt example average percentile value wired connections rtts assure significant copyright john wiley sons int 

commun 
network 
boost wireless links performance causing real inconvenience wired links network 
note contrast connections fast rtt rtt slowed tcp hybla behaves standard tcp additional improvements sack timestamps packet spacing 

rtt estimate sensibility order determine value tcp hybla estimate connection rtt provided tcp standard algorithm sufficient granularity implementations 
problem correct rtt estimate addressed literature scope 
important note tcp hybla robust respect large inaccuracies estimate 
realize sufficient observe reasonable errors rtt equivalent far parameter concerned choice slightly different rtt observe case time variability rtt estimate conservative choice selection minimum rtt value order effectively compensate fixed time components rtt propagation time time possibly spent interleaving decoding variable components buffer queues 
prevent network case increasing congestion additional delays due buffer queues result slow transmission rate 
note satellite connections fixed components dominant respect time spent buffer queues practical differences minor 

tcp hybla tcp enhancement proposed represents promising solution problem performance disparity heterogeneous networks due different rtts 
proposals new algorithm analytical study congestion window evolution time function connections delays 
having modified standard congestion control algorithm accordance suggestions arising analysis adopted sack option timestamps packet spacing reduce impact multiple losses inappropriate timeouts burstiness respectively 
result minor modifications tcp hybla achieves goal substantial reduction performance disparity long rtt connections satellite 
clear advantage tcp hybla respect tcp standard versions presence congestion link errors shown discussed details friendliness fairness properties 
worth noting tcp hybla semantics tcp protocol compatible promising tcp enhancements 

hu li satellite internet tutorial 
ieee communication magazine 

polyzos gc tcp performance issues wireless links 
ieee communication magazine 

barakat altman tcp performance heterogeneous network survey 
ieee communication magazine 

allman floyd partridge increasing tcps initial window 
request comment september ietf 
copyright john wiley sons int 

commun 
network 
tcp hybla 
barakat altman improving tcp ip satellite links 
proceedings ieee globecom 

hoe jc 
improving start behavior congestion control scheme tcp 
proceedings acm sigcomm 

mathis mahdavi tcp selective acknowledgment options 
request comment october ietf 

brakmo ls peterson ll 
tcp vegas congestion avoidance global internet 
ieee journal selected areas communications 

tcp new congestion control scheme satellite ip networks 
ieee acm transactions networking 

gerla mascolo ren wang 
tcp westwood congestion control wired wireless networks 
wireless networks journal 

henderson tr katz rh 
transport protocols internet compatible satellite networks 
ieee journal selected areas communications 

allman performance tcp spoofing satellite networks 
proceedings ieee milcom 

rtt invariant congestion control scheme heterogeneous ip networks 
proceedings ist summit mobile wireless communications 

floyd connections multiple congested gateways packet switched networks part way traffic 
acm computer communications review 

henderson tr mccanne katz rh 
improving fairness tcp congestion avoidance 
ieee globecom 

ns network simulator ver 
lbl url www mash cs berkeley edu ns 

allman stevens tcp congestion control 
request comment april ietf 

floyd henderson newreno modification tcp fast recovery algorithm 
request comment april ietf 

transmission control protocol darpa internet program request comment september 

chan acf tsang dhk gupta tcp transmission control protocol wireless links 
proceedings ieee vehicular technology conference 

lakshman tv madhow performance tcp ip networks high bandwidth delay products random loss 
ieee acm transactions networking 

stevens tcp slow start congestion avoidance fast retransmit fast recovery algorithms 
request comment january ietf 

fall floyd simulation comparison tahoe reno sack tcp 
computer communication review 

allman computing tcp retransmission timer 
request comment november ietf 

aggarwal savage anderson understanding performance tcp pacing 
proceedings ieee infocom 


packet spreading techniques avoid bursty traffic satellite tcp connections 
proceedings ieee vtc spring accepted publications 

hasegawa murata analysis dynamic behaviors tcp connections sharing tail drop red routers 
proceedings ieee globecom 

padhye firoiu towsley df kurose jf 
modelling tcp reno performance simple model empirical validation 
ieee acm transactions networking 

karn partridge improving round trip time estimates reliable transport protocols 
acm transactions computer systems 
authors biographies carlo born bologna italy 
received dr ing degree cum laude electronic engineering university bologna bologna italy 
department electronics computer science systems university research associate 
main scientific interests field terrestrial satellite cellular mobile radio systems special emphasis spectrum efficiency multiple access techniques spread spectrum systems 
integration internet wireless communications led devote research activity development network protocols satellite wireless applications 
participated international research projects author international publications topics 
member ieee communications society 
copyright john wiley sons int 

commun 
network 
rosario graduated telecommunications engineering university bologna italy 
advanced research center electronics systems information communication technologies university bologna currently phd candidate 
interests involve study evaluation transport protocol performance wireless network congestion control algorithms unicast multicast protocols traffic shaping retransmission techniques arq data carousel packet coding transport layer 
areas interest mobile ip security ip networks 
copyright john wiley sons int 

commun 
network 

