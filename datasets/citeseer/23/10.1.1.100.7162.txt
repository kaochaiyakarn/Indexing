software agents overview nwana intelligent systems research advanced applications technology department bt laboratories heath ip re mail info bt uk tel fax knowledge engineering review vol 
pp 
october november 
cambridge university press agent software rapidly developing area research 
overuse word agent tended mask fact reality truly heterogeneous body research carried banner 
overview presents typology agents 
places agents context defines goes inter alia overview critically rationales hypotheses goals challenges state art demonstrators various agent types typology 
attempts explicit usually implicit agents literature 
proceeds overview general issues pertain types agents typology 
largely reviews software agents contains strong opinions necessarily widely accepted agent community 
main goal overview rapidly evolving area software agents 
overuse word agent tended mask fact reality truly heterogeneous body research carried banner 
places agents context defines goes inter alia overview critically rationales hypotheses goals challenges state art demonstrators prototypes various agent types currently investigation 
proceeds overview general issues pertain classes agents identified 
speculates agents research short medium long terms 
largely reviews software agents 
broad range agent types provide definition agenthood juncture 
defer issues section typology agents 
breakdown follows 
section notes situation smart agents research broad field distributed artificial intelligence dai provides brief history 
section identifies scope applicability agents research notes diverse range interested parties 
core critical overview agent typology section section provides view smart agents identifies different types agents fall agents banner warns truly smart intelligent agents exist 
aspiration agent researchers 
section overviews general issues agents speculates briefly agents short medium long terms 
section concludes 
software agents history context software agents evolved multi agent systems mas turn form broad areas fall dai distributed problem solving dps parallel ai pai 
multi agent systems inherit dai motivations goals potential benefits 
example distributed computing software agents inherit dai potential benefits including modularity speed due parallelism reliability due redundancy 
inherits due ai operation knowledge level easier maintenance reusability platform independence huhns singh 
concept agent context traced back early days research dai carl hewitt concurrent actor model hewitt 
model hewitt proposed concept self contained interactive concurrently executing object termed actor 
object encapsulated internal state respond messages similar objects actor computational agent mail address behaviour 
actors communicate message passing carry actions concurrently hewitt 
broadly purposes split research agents main strands spanning period current day second current day 
strand smart agents begun late current day concentrated mainly deliberative type agents symbolic internal models type collaborative agents 
deliberative agent possesses explicitly represented symbolic model world decisions example actions perform symbolic reasoning wooldridge 
initially strand concentrated macro issues interaction communication agents decomposition distribution tasks coordination cooperation conflict resolution negotiation goal specify analyse design integrate systems comprising multiple collaborative agents 
resulted classic systems actor model hewitt mace gasser lesser corkill mice durfee montgomery mcs doran contract network coordination approach smith davis smith mas dai planning game theories rosenschein zlotkin rosenschein rosenschein zlotkin 
macro aspects agents gasser terms emphasises society agents individual agents micro issues relate specifically 
case issues summarised chaib draa 
bond gasser gasser huhns 
strand include ms decker lesser decker carver carver lesser levitt archon wittig jennings note game theoretic arguably classed macro approach may lie micro spectrum 
addition macro issues strand characterised research development theoretical architectural language issues 
fact works evolve naturally exclusively investigation macro issues 
summarised wooldridge jennings edited collections papers wooldridge jennings wooldridge 

evidently distinct strand research development software agents range agent types investigated broader 
complementary wooldridge jennings placing emphasis strand naturally overlap overviews broadening typology agents investigated agent researchers 
may argue strand arises everybody calling agent resulting inevitably 
viewpoint key motivation overview extensive goes agent banner 
essentially point addition investigating macro issues theories architectures languages trend investigation broader range agent types classes 
context summarised table 
strand emphasis major strand macro issues bond gasser gasser huhns chaib draa 
gasser 
theories architectures languages strand diversification types agents investigated wooldridge jennings wooldridge 
covers 
table brief history software agents context investigating software agents 
eschew answering question futuristic sense favour providing flavour scope research development underway universities industrial organisations 
range firms universities actively pursuing agent technology quite broad list growing 
includes small non household names icon verity medium size organisations carnegie mellon university cmu general magic massachusetts institute technology mit university london real big apple bt daimler benz dec hp ibm lotus microsoft oracle sharp 
clearly companies means completely homogeneous particularly reuters dow jones appended list 
scope applications investigated developed arguably impressive really range mundane strictly speaking agent applications moderately smart 
lotus example providing scripting language forthcoming version notes allow users write individual scripts order manage mails calendars set meetings view people really need smart agents 
smart spectrum likes sycara visitor hosting system cmu 
system task specific information specific agents cooperate order create manage visitor schedule cmu 
achieve agents access line information resources order determine visitor areas interest name organisation resolve inevitable inconsistencies ambiguities 
information garnered including visitor status organisation projects working 
second information gathered visitor retrieve information rank telephone number mail address personnel databases order determine appropriate attendees faculty 
third visitor hosting agent selects initial list faculty contacted composes messages dispatches calendar agents faculties asking willing meet visitor time 
faculty calendar agent mail composed 
fourth responses collated 
fifth visitor hosting agent creates schedule visitor involves booking rooms various appointments faculty members 
naturally system interacts human seeks confirmation refutations suggestions advice 
agree demonstrator pretty smart derives fact value gained individual stand agents coordinating actions working cooperation greater gained individual agent 
agents really come element 
examples applications described application domains agent solutions applied investigated include workflow management network management air traffic control business process re engineering data mining information retrieval management electronic commerce education personal digital assistants pdas email digital libraries command control smart databases scheduling diary management notes years time new development affected consumer products contain embedded agent systems 
potential agent technology report ovum market research titled intelligent agents new revolution software ovum 
firm apparently predicted market sector totals agent software products usa europe worth year contrast estimated computed figures quoted 
predictions overly optimistic 
king notes telecommunications companies bt working incorporating smart agents vast networks entertainment television retail firms exploit agents capture program viewing buying patterns respectively computer firms building software hardware tools interfaces harbour numerous agents reinhardt reports ibm plans may done launch system ibm communications systems ics agents deliver messages mobile users form want fax speech text depending equipment user carrying time pda portable pc mobile phone 
bt laboratories carried agent related research similar idea message routed nearest local device may may belong intended recipient message 
case recipient agent negotiates agents permission facilities takes consideration issues costs bandwidth negotiations 
mit pattie maes group investigating agents match buyers sellers build coalitions people similar interests 
drawing biological evolution theory implement demonstrators user possesses fittest agents agents reproduce fittest survive serve masters weaker ones purged 
important note demonstrators converting real usable applications provide greater challenges anticipated currently unforeseen 
essential message section agents stay diversity wide range applicability broad spectrum companies investing 
move information age information organisation invest agent technology may committing commercial hara 
agent 
chance agreeing consensus definition word agent ai researchers arriving artificial intelligence nil 
postings software agents mailing list agents eng sun com prove 
couple postings financial legal aspect definition agents 
reasons difficult define precisely agents 
firstly agent researchers term way fuzzy logicians ai researchers example term fuzzy logic widely everyday parlance travel agents estate agents secondly software word agent really umbrella term heterogeneous body research development 
response agent researchers lack definition invent synonyms arguable solve just add confusion 
synonyms including knowledge robots softbots software robot robots robots personal agents autonomous agents personal assistants 
fair reasons having synonyms 
firstly agents come physical guises example inhabit physical world factory say called robots inhabit vast computer networks referred softbots perform specific tasks called autonomous agents refer typically mobile agents robots operate dynamic uncertain environments 
secondly agents play roles personal assistants expert knowledge specific domain 
furthermore due multiplicity roles agents play plethora adjectives precede word agent drawn king search agents report agents presentation agents navigation agents role playing agents management agents search retrieval agents domain specific agents development agents analysis design agents testing agents packaging agents help agents 
king futuristic provides role specific classification agents metaphorical word fine 
view gives currency refer just agent 
example considers print monitors open printing fax agents albeit simple ones 
wayner write somewhat metaphor pervasive re waiting advertise computer switches empowerment agents 
tend word slightly carefully selectively explain 
really define agent referring component software hardware capable acting order accomplish tasks behalf user 
choice say umbrella term meta term class covers range specific agent types go list define agent types 
way reduce chances getting usual prolonged philosophical sterile arguments usually proceed definition old software conceivably agent software 
typology agents section attempts place existing agents different agent classes goal investigate typology agents 
typology refers study types entities 
dimensions classify existing software agents 
firstly agents may classified mobility ability move network 
yields classes static mobile agents 
secondly may classed deliberative reactive 
deliberative agents derive deliberative thinking paradigm agents possess internal symbolic reasoning model engage planning negotiation order achieve coordination agents 
reactive agents originate research carried brooks agre chapman 
agents contrary internal symbolic models environment act stimulus response type behaviour responding state environment embedded ferber 
brooks argued intelligent behaviour realised sort explicit symbolic representations traditional ai brooks :10.1.1.12.1680:10.1.1.110.6657:10.1.1.18.4669
thirdly agents may classified ideal primary attributes agents exhibit 
bt labs identified minimal list autonomy learning cooperation 
appreciate list contentious proposal 
claiming necessary sufficient set 
autonomy refers principle agents operate need human guidance invaluable 
agents individual internal states goals act manner meet goals behalf user 
key element autonomy ability take initiative acting simply response environment wooldridge jennings :10.1.1.119.2204
cooperation agents paramount raison tre having multiple agents place contrast having just 
order cooperate agents need possess social ability ability interact agents possibly humans communication language wooldridge jennings :10.1.1.119.2204
having said possible agents coordinate actions cooperation nwana 
lastly agent systems truly smart learn react interact external environment 
view agents disembodied bits intelligence 
attempt define intelligence maintain key attribute intelligent ability learn 
learning may take form increased performance time 
minimal characteristics derive types agents include typology collaborative agents collaborative learning agents interface agents truly smart agents 
collaborative agents smart agents cooperate autonomous learn collaborative learning agents interface agents part view agent typology emphasise distinctions definitive 
example collaborative agents emphasis cooperation autonomy learning imply collaborative agents learn 
likewise interface agents emphasis autonomy learning cooperation 
consider lie outside intersecting areas agents 
example expert systems largely autonomous typically cooperate learn 
ideally view agents equally aspiration reality 
truly smart agents exist maes notes current commercially available agents barely justify name adjective intelligent 
foner wrote applies today 
find little justification commercial offerings call agents 
tend excessively software conclude agent simultaneously failing provide sort discourse social contract user agent 
barely autonomous regularly scheduled batch job counts 
degrade gracefully inspire trust justify trivial delegation concomitant risks foner 
effect foner assert arguments commercial offerings agents suffer logical fallacy assume trying prove circular arguments 
applies agents literature 
principle combining constructs far static mobile reactive deliberative conjunction agent types identified collaborative agents interface agents static deliberative collaborative agents mobile reactive collaborative agents static deliberative interface agents mobile reactive interface agents categories quite may necessary classify existing agents 
example lashkari 
aaai collaborative interface agents classification translates static collaborative interface agents 
fourthly agents may classified roles preferably roles major ones world wide web www information agents 
category agents usually exploits internet search engines lycos spiders 
essentially help manage vast amount information wide area networks internet 
refer class agents information internet agents 
information agents may static mobile deliberative 
clearly pointless making classes minor roles report agents presentation agents analysis design agents testing agents packaging agents help agents list classes large 
included category hybrid agents combine agent philosophies single agent 
attributes agents consider secondary mentioned 
example agent versatile goals engage variety tasks 
agent benevolent non helpful antagonistic altruistic 
agent lie knowingly truthful attribute termed veracity 
trust agent risk delegate tasks 
temporally continuous 
degrade gracefully contrast failing drastically boundaries 
researchers attributing emotional attitudes agents get fed asked thing time time 
role emotion constructing believable agents bates 
agents mentalistic attitudes notions beliefs desires intentions referred typically bdi agents rao georgeff 
attributes provide stronger definition agenthood 
essence agents exist truly multi dimensional space dimensional matrix classify incomplete inaccurate 
sake clarity understanding collapsed multi dimensional space single list 
order carry move knowledge agents know currently wish aspire 
ensuing list degree arbitrary believe types cover agent types investigated currently 
left collaborative learning agents see grounds know existence agents collaborate learn autonomous 
identify types agents collaborative agents interface agents mobile agents information internet agents reactive agents hybrid agents smart agents applications combine agents categories refer heterogeneous agent systems 
applications exist relatively 
overview briefly systems section 
issue note completeness sake agents need benevolent 
quite possible agents may competition quite antagonistic 
view competitive agents potential subclasses types 
possible competitive collaborative type agents competitive interface agents competitive information agents critique typology definition agenthood typology agents bound contentious 
official reviewers took issue suggestions opinion debatable unclear 
reviewer reviewer claimed confused agents defined information agents interface agents collaborative agents types sort technology underpins agents mobile agents reactive agents hybrid agents 
preferred dimensional classification 
second reviewer mentioned similar point alluded different classification 
large degree disagree criticism fully 
believe attempted unsuccessfully pre criticism 
firstly group information agents interface agents collaborative agents large group view explained earlier collaborative agents interface agents defined information agents defined 
secondly agree fully assertion mobile agents reactive agents hybrid agents underlying technologies implementing classes 
reviewer interface agents collaborative agents implemented reactive technology 
simply disagree viewpoint 
explain reactive agents example distinct philosophy hypothesis stand rest 
surveyed area technologies building software agent systems nwana wooldridge 
agree general thrust argument degree example fully accept reviewers viewpoint mobility necessary condition agenthood point implicit section explain 
thirdly address issues discuss individual types fully rest 
fourthly point explicitly section agents exist truly multi dimensional space sake clarity understanding collapsed multi dimensional space single list 
produce list set criteria included properties agents prefer see autonomy cooperation learning constructs static mobile deliberative reactive major roles information agents hybrid heterogeneous 
previous version hierarchical breakdown turned clear 
literature equally contentious 
example wooldridge jennings broadly classify agents gopher agents service performing agents proactive agents 
believe general simplistic classification 
reasons opted flat breakdown 
fair apart typology reviewers complementary 
typology critics reviewer pointed agree agents literature categorised types think types faulty 
deliberately traded accuracy clarity 
typology highlights key contexts word agent software literature 
agents general noted software component fall intersecting areas count agent 
case word agent came computing ai minsky society mind formulate theory human intelligence 
minsky refer basic entities 
explain mind show minds built stuff parts smaller simpler consider smart 
simpler particles agents compose minds 
subject book minsky 
clearly minsky word agent quite distinct 
furthermore noted earlier expert systems meet preconditions agenthood knowledge system applications 
modules distributed computing applications constitute agents huhns singh explain 
modules rarely smart robust agents degrade gracefully 
second agent systems generally communication involves involves high level messages contrast low level messaging distributed computing 
high level messaging leads lower communication costs easy concurrency 
lastly importantly agent applications operate typically knowledge level newell symbol level case distributed computing applications 
case modules distributed computing applications autonomous sense described earlier agent applications 
majority software applications may ruled set agentbased applications grounds expert systems distributed computing applications 
panoramic overview different agent types section turn overview types agents identified typology previous section bar smart agents 
summarises types lists order surveyed 
particular overview terms essential metaphors hypotheses goals motivations roles prototypical examples potential benefits key challenges general issues particular agent type 
overview shaded type smart agents grounds aspiration agent researchers reality 
collaborative agents interface agents mobile agents agent typology information agents reactive agents hybrid agents classification software agents heterogeneous agent systems smart agents collaborative agents overview shown collaborative agents emphasise autonomy cooperation agents order perform tasks owners 
may learn aspect typically major emphasis operation 
order coordinated set collaborative agents may negotiate order reach mutually acceptable agreements matters 
classified strand see section investigated class agents 
noted earlier ai researchers providing stronger definitions agents attribute mentalistic notions beliefs desires intentions yielding bdi type collaborative agents 
class collaborative agents may perceived broad church 
brief key general characteristics agents include autonomy social ability responsiveness 
able act rationally autonomously open time constrained multi agent environments 
tend static large coarse grained agents 
may benevolent rational truthful combination 
typically currently implemented collaborative agents perform complex learning may may perform limited parametric rote learning 
hypothesis goal hypothesis rationale goal having collaborative agent systems specification goal dai noted huhns singh 
paraphrasing authors may stated creating system interconnects separately developed collaborative agents enabling ensemble function capabilities members 
formally agent max agent represents value 
arbitrary definition involving attributes speed worst case performance reliability adaptability accuracy combination 
motivation motivation having collaborative agent systems may include specialisation motivations dai solve problems large centralised single agent due resource limitations sheer risk having centralised system allow interconnecting interoperation multiple existing legacy systems expert systems decision support systems provide solutions inherently distributed problems distributed sensor networks cf 
durfee air traffic control provide solutions draw distributed information sources distributed line information sources natural adopt distributed collaborative agent approach provide solutions expertise distributed health care provisioning enhance modularity reduces complexity speed due parallelism reliability due redundancy flexibility new tasks composed easily modular organisation reusability knowledge level resources research issues understanding interactions human societies 
prototypical example cmu system project cmu directed tom mitchell katia sycara objectives investigate methods automated negotiation collaborative agents order improve robustness effectiveness scalability maintainability see url 
project applies collaborative agents domain organisational decision making infosphere refers essentially collection internet heterogeneous resources 
infosphere ripe application class agents inherently distributed set line information sources 
user user user task layer query layer proposed solution infosphere reply bn distributed system architecture adapted sycara interpretation emphasis 
distributed collaborative agent architecture layers abstraction layer contains task specific collaborative agents second layer contains information specific collaborative agents see 
architecture develop visitor hosting system described briefly earlier 
task specific agents depicted task assistants perform particular task user arranging appointments meetings task specific agents 
agents coordinate schedule plans context 
collaborate level order resolve conflicts integrate information 
order garner information required level request information information specific agents depicted information assistants 
information specific agents turn may collaborate layer order provide information requested back layer requesting agent 
source information databases infosphere 
ultimately task agent proposes solution intermediate user 
task specific agents knowledge sycara model task domain knowledge perform task knowledge gather information task knowledge task specific information specific agents coordinate order meet task protocols enable coordination agents lastly strategies conflict resolution information fusion 
possess learning mechanisms agent needs learn preferences user 
contrary information specific agents know knowledge databases associated addition details size average time takes answer query monetary costs query processing knowledge access databases knowledge resolve conflicts information fusion strategies protocols coordination relevant software agents 
agents smart cache answers frequently asked queries induce database regularities inter agent interactions 
main rationale architecture provide software agents retrieving filtering fusing information distributed multi modal sources agents assist decision making 
sycara colleagues hypothesised order meet goals need distributed collection collaborative agents gather filter fuse information addition able learn interactions 
agents communicate kqml finin wiederhold mail negotiate order reach agreements cases conflicts 
layered architecture clearly modular modular sycara colleagues introduced connectionist modules design systems 
clearly sophistication architecture left interesting details agents learn 
individually agent consists planning module linked local beliefs facts database 
local scheduler coordination module execution monitor 
agents task plans coordinate plans agents schedule monitor execution local actions 
interestingly architecture central planner agents engage coordination communicating constraints expectations relevant information 
architecture shows clearly collaborative agents operate concert ensemble functions capabilities individual agent set 
apart visitor hosting system systems developed architecture methodology domains financial portfolio management emergency medical care electronic commerce sycara 
addition domains ripe exploiting collaborative agents including workflow management network management control telecommunication networks business process engineering 
domains collaborative agents may provide added value current single agent applications 
brief critical review collaborative agent systems useful pieces collaborative agents 
important point re emphasise fact classified strand see section exploited collaborative deliberative agents may fully collaborative defined spirit 
example agent durfee distributed vehicle monitoring system blackboard knowledge source task identify vehicle track acoustic data 
agents shared global knowledge problem solving strictly speaking autonomous cooperation quite basic proceeds common blackboard 
certainly strand testbeds mace gasser mcs doran steel deliberative agents planning modules underpin coordination cooperation set ups operating 
case mcs non linear planners 
planning prototypes include hayes roth guardian architecture cohen phoenix system 
bt labs prototype collaborative agent systems developed adept prototypes 
adept brien wiegand employs collaborative agents application area business process reengineering demonstrates collaborative agents perform decentralised management control consumer electronics typically pdas pcs integrated services provided network operator 
regards collaborative agents stronger definitions mention earlier rao georgeff characterisation rational agents terms mental attitudes beliefs desires intentions rao georgeff 
attitudes typical epistemic logics 
stronger definitions collaborative agents progress 
useful piece research attributes mentalistic notions collaborative agent system design shoham agent oriented programming 
agent mental state described beliefs decisions capabilities obligations shoham language introduces epistemic deontic modal operators notions 
order agents reason mentalistic attitudes logics operators describing developed 
agent frameworks mentalistic attitudes include bratman irma jennings grate grate environments 
exploits cohen levesque classic 
key criticism collaborative agents levelled researchers stems grounding deliberative thinking paradigm dominated ai research years 
researchers particularly reactive agents camp believe intelligent behaviour generated sort explicit symbolic level representations reasoning prevalent ai brooks :10.1.1.12.1680:10.1.1.110.6657:10.1.1.18.4669
object agents having internal representation actions goals events required planning module determine sequence actions achieve goals 
researchers agre chapman challenged usefulness having elaborate plans argue rational goal directed activity need organised plan 
concede people plans argue real life moment moment improvisation plan dependent situation relevant agent physical social world 
clearly criticism targeted entire deliberative school ai impacts deliberative collaborative agents 
contend deliberative agents result brittle inflexible demonstrators slow response times 
viewpoint led birth reactive agents paradigm situated action theory discussed 
regards stronger collaborative agent definitions bdi agents rao georgeff acknowledge main criticisms levelled theirs bratman 
traditional planning researchers classical decision theorists question necessity having epistemic attitudes beliefs desires intentions dai researchers sociological bias question 
secondly logics underpinning agents second order modal logics investigated fully relevance practice questionable 
rao georgeff tackle issues 
proceed describe bdi agents simplifying assumptions theoretical framework applied large scale applications case oasis air traffic management application prototype successfully tested sydney airport 
prototype tested aircraft agents global agents handle issues including trajectories coordination georgeff 
full implementation progress 
emphasised research stronger definition agents relatively infancy 
criticisms collaborative agents challenges addressed collaborative agent researchers 
collaborative agents key challenges despite successful demonstrators system agents deployed real industrial settings situation changing built auspices archon project wittig jennings couple built involvement mike georgeff space shuttle malfunction handling system agent royal australian simulator georgeff 
problems mention 
note necessarily specific collaborative agents engineering construction collaborative agent systems system step direction research 
paraphrase bt prof robin smith move away point solutions point problems design methodologies meta tools allow quicker implementation collaborative agent systems smith inter agent coordination major issue design systems 
coordination essential enabling groups agents solve problems effectively 
clear theory coordination anarchy deadlock set easily collaborative agent systems 
furthermore agents totally truthful negotiating allowed lie suits 
coordination required due constraints resource boundedness time 
experimental formal required address issues coordination negotiation 
stability scalability performance issues issues acknowledged tackled collaborative agent systems research 
empirical investigations need carried establish suitable minimum levels performance clearly systems stable 
alternatively need proven formally 
issues non functional crucial legacy systems thorny issue legacy systems problem 
established techniques methodologies integrating agents legacy systems required systems learn 
learning lead instability 
appropriate architectures different types problems 
ensure agent spend time learning participating set 
evaluation collaborative agent systems problem outstanding 
verified validated ensure meet functional specifications 
unanticipated events handled properly 
trust systems run power stations nuclear installations chemical plants 
despite criticisms collaborative agents agent camps industrial applications benefit significantly just way applications benefit reactive agents 
example bt see potential major role managing telecommunications networks business process management nwana 
interface agents overview interface agents emphasise autonomy learning order perform tasks owners 
pattie maes key proponent class agents points key metaphor underlying interface agents personal assistant collaborating user environment 
note subtle emphasis distinction collaborating user collaborating agents case collaborative agents 
collaborating user may require explicit agent communication language required collaborating agents 
interface agents adapted maes depicts functioning interface agents 
essentially interface agents support provide assistance typically user learning particular application spreadsheet operating system 
user agent observes monitors actions taken user interface watches shoulder user learns new shortcuts suggests better ways doing task 
user agent acts autonomous personal assistant cooperates user accomplishing task application 
learning interface agents learn typically better assist user ways maes shown observing imitating user learning user receiving positive negative feedback user learning user receiving explicit instructions user learning user asking agents advice learning peers 
cooperation agents limited typically asking advice getting protracted negotiation deals case collaborative agents 
learning modes typically rote memory learning parametric techniques evolutionary learning introduced 
summary learning interface agent opposed kind agent uses machine learning techniques pseudo intelligent user interface actions foner 
hypothesis goal objective interface agents research maes sees alan kay dream having indirectly managed human computer interfaces kay 
argument goes follows 
current computer user interfaces respond direct manipulation computer passive waits execute highly specified instructions user 
provides little proactive help complex tasks carrying actions searches information may take indefinite time maes 
millions untrained users attempting computers networks tomorrow 
user issuing direct commands interface engaged cooperative process human software agents initiate communication perform tasks monitor events 
cooperation human agent benefit human application 
goal migrate direct manipulation metaphor delegates tasks proactive helpful software interface agents order accommodate novice users 
hypothesis agents trusted perform tasks delegated users 
specifically certain conditions interface agent program acquire knowledge needs assist user 
agent minimum background knowledge learns appropriate behavior user agents maes 
goes explain preconditions need fulfilled suitable application domains firstly substantial repetitive behaviour application learning agent able learn secondly repetitive behaviour potentially different different users knowledgebased approach 
motivation recap interface agent quasi smart piece software assists user interacting computer applications 
motivating underlying principle interface agents inherent merit 
boring laborious tasks particularly exclusively user interface delegated interface agents order eliminate tedium humans performing manual sub operations say 
motivating reason choice domains maes group tackled dissatisfaction ways tasks domains handled currently 
example explains valuable hours wasted managing junk mail scheduling rescheduling meetings searching information heaps title captures succinctly motivation agents reduce information overload maes 
benefits roles general benefits interface agents threefold 
user application developer 
secondly agent adapt time user preferences habits 
know different users community may shared agents learn peers 
understood better discussing roles maes team mit building interface agents 
far team constructed demonstrator agents roles eager assistants kozierok maes guides memory aids rhodes starner filter critics sheth maes matchmaking referrals foner buying selling behalf chavez maes entertainment maes 
overview briefly 
kozierok maes describe interface agent calendar agent scheduling meetings application provided scheduling software package 
calendar agent assists role assisting user scheduling meetings involves accepting rejecting scheduling negotiating rescheduling meeting times 
really comes element learn time preferences commitments user attend meetings friday prefers meetings morning learning techniques employed memory learning reinforcement learning 
describes agent called letizia keyword heuristic search agent assists web browsing 
letizia role guide 
users operate favourite browser netscape state interests explicitly traditional search engines webcrawler lycos 
user remains idle search progress likewise search engine idle whilst user browsing interface 
essentially letizia provides cooperative search user 
browsers encourage depth browsing letizia conducts breadth search concurrently useful locations user may interested 
guessing user intention proceeding search search engine 
guesses user intentions inferring browsing behaviour keeps returning particular page enter page hotlist download article 
user actions immediately search 
doing able recommend useful serendipitous locations 
remembrance agent rhodes starner attached currently emacs editor 
user composes mail message say agent able carry keyword search retrieve relevant mails directory relating mail composed 
really successful recommends continuously invaluable documents mails files forgotten example composing new document 
conceivably browsing web writing case remembrance agent may recommend researchers papers consulted 
role clearly memory aid 
sheth maes maes describe news filtering agent called newt role helping user filter select articles continuous stream usenet netnews 
idea user create news agents agent sports news financial news train example presenting positive negative examples retrieved 
message content keyword exploits information author source 
newt complicated user population information filtering agents evolve time genetic computing techniques 
similar new mit investigating agents breed environment information agents feedback information returned progressively return quality information rest see moukas 
foner reports lite matchmaking agent prototype goals scenarios include able match buyers sellers item introducing finding grouping people compatible professional personal interests building coalitions people interested topics 
user community agent 
agents able carry referrals fashion word mouth recommendations people daily 
deals currently text electronic mail messages contents user files directory example users deemed share interest granule interest granule may represent fact user reads regularly newsgroups politics say 
matchmaking presents challenging problems covered foner 
chavez maes describe preliminary ideas kasbah classified ads service www incorporates interface agents 
kasbah meant represent market place web site kasbah agents acting behalf owners filter ads find users may interested proceed negotiate buy sell items 
kasbah agents may render middlemen brokers redundant 
means entertainment selection agent maes believes best potential application domains killer application 
example ringo system shardanand maes maes personalised recommendation system music albums artists exploits interface agents 
agents social filtering user agent finds agents correlated recommends films users user 
agents ringo working similar word mouth approach 
maes describes alive system virtual environment allows wireless full body interaction human participant virtual world inhabited autonomous agents 
presents challenging illustration autonomous interface agents may entertainment 
essentially alive demonstrates agents form link animated characters artificial life models entertainment industry 
hope clear potential interface agents large 
demonstrators evaluated users results far main quite promising 
example ringo people shardanand maes 
order emphasise distinction agent types quite fuzzy lashkari collaborative interface agents presents framework multi agent collaboration discuss results demonstrator interface agents electronic mail 
emphasises cooperation agents typical interface agents 
brief critical review interface agent systems reader gets impression interface agents research proceeds maes group mit state certainly case 
biased bt ready access close links pattie maes demonstrators 
interface agents include dent 
schlimmer 
dent 
example describe personal learning apprentice agent research done cmu 
calendar apprentice agent cap kozierok maes calendar agent assists user managing scheduling meetings 
philosophies essentially key difference learning techniques dent apprentice uses back propagation neural network decision tree learning techniques calendar agent kozierok maes uses memory reinforcement learning 
mitchell 
summarise results user years experience cap learned evolved set rules model scheduling preferences users 
rules augmented edited users 
schlimmer lang describe learning apprentice interface agents 
may differentiate agents performances 
key criticism interface agents far tend function stand fashions engage restricted task specific communication identical peers lashkari authors begun addressing issue 
necessarily bad useful interface agents able negotiate peers collaborative agents 
furthermore mitchell 
note remains demonstrated knowledge learned systems cap significantly reduce users workload 
key motivation having interface agents place maes 
wayner cite bob balaban systems architect lotus notes argues apparently people need smart agent look shoulders guess desires proactively take action 
quoted saying know exactly want arguing need agent try learn behaviour 
viewpoint may dismissed outright interface agent researchers balaban point remains people want need interface agents 
appears 
may just working hypothesis 
interface agents challenges section challenges interface agents include demonstrating knowledge learned interface agents truly reduce users workload users want carrying hundreds experiments various machine learning techniques including soft evolutionary learning techniques domains determine learning techniques preferable domains analysing effect various learning mechanisms responsiveness agents extending interface agents able negotiate peer agents enhance continually competence interface agents users trust build time maes 
issues maes notes include guaranteeing users privacy legal may ensue fielding agents 
extending range applications interface agents innovative areas entertainment alive doing 
having stated denying fact interface agents deployed real applications short term simple operate limited domains general require cooperation agents 
mobile agents overview mobile agents computational software processes capable roaming wide area networks wans www interacting foreign hosts gathering information behalf owner coming back home having performed duties set user 
duties may range flight reservation managing telecommunications network 
mobility necessary sufficient condition agenthood 
mobile agents agents autonomous cooperate albeit differently collaborative agents 
example may cooperate communicate agent making location internal objects methods known agents 
doing agent exchanges data information agents necessarily giving information away 
important point public perception agents popular computing press synonymous mobile agents 
example peter wayner agent text agent texts currently titled agents unleashed public domain look agent technology mobile agents 
whilst unleashed title gives away subtle wayner accused reinforcing view agents equals mobile pieces software 
myth mobile agents equals telescript current leading mobile agent operating environment invented general magic mountain view ca 
clever marketing general magic managed put mobile agents map link name simultaneously inextricably 
mobile agent demonstrators applications telescript exist 
hypothesis motivation benefits key hypothesis underlying mobile agents agents need stationary idea significant benefits accrued certain applications static agents favour mobile counterparts 
benefits largely non functional mobile agents static ones costs move high 
example consider scenario borrowed wayner user required write program allow home computer flight reservation accessing airline reservation databases 
lists preferences non smoking departure am baltimore arrival austin noon connection changes chicago hare 
static single agent program need request flights leaving times databases may total take kilobytes 
require list connections proceed narrow search 
actions involves sifting plenty extraneous information clog network 
probably paying network time 
consider alternative 
encapsulates object oriented style entire program agent consumes probably roams network airline reservation systems arrive safely queries databases locally returns ultimately home computer schedule may confirm refute 
alternative obviates high communications costs shifting possibly kilobytes information local computer presumably cope 
mobile agents provide number practical non functional advantages escape static counterparts 
motivation include anticipated benefits 
reduced communication costs may lot raw information need examined determine relevance 
transferring raw information time consuming clog networks 
imagine having transfer images just pick 
natural get agents go location local search pruning transfer chosen compressed image back network obviates need costly network connections remote computers required remote procedure calls rpc 
provides cheaper alternative pay increasingly network bandwidth time users 
certainly charged byte bandwidth maintain bandwidth free 
example due colleague barry crabtree 
limited local resources processing power storage local machine may limited processing storing results search necessitating mobile agents 
easier coordination may simpler coordinate number remote independent requests collate results locally 
asynchronous computing set mobile agents results back mailbox say time 
may operate connected 
provides natural development environment implementing free market trading services 
new services come go dynamically flexible services may exist inferior ones providing choices consumers 
flexible distributed computing architecture mobile agents provide unique distributed computing architecture functions differently static set ups 
provides innovative way doing distributed computation 
lastly mobile agents represent opportunity radical attractive rethinking design process general 
turns conventional design process head truly innovative products emerge mobile agent technology 
mobile agents brief telescript view telescript interpreted object oriented remote programming language allows development distributed applications see url 
interpreter runtime development environment telescript language called telescript engine host support simultaneously multiple telescript engines 
summarises part view telescript architecture 
shows just telescript engines integrated operating system programming interface called telescript application programmer interface api 
telescript development environment downloaded freely url comprises engine browser cloud manager debugger associated libraries 
local agent process telescript engine telescript api server operating system places mobile agent going wan part view telescript architecture adapted wayner telescript applications consist telescript agents operating world cyberspace places engines clouds regions 
objects 
example place instance class engine definition inherits operations called place 
top class telescript object hierarchy process 
telescript engine multitasking interpreter run multiple processes switches preemptively 
engine host multiple agents share data information 
furthermore place process contain arbitrary number depth places 
shows local agent process 
agent processes place processes objects contain processes go place place note places unique network addresses shown 
agent requiring service defined place go place call operations cf 

effect remote programming telescript language concepts places agents go 
go primitive allows inter process communication 
agent processes meet place meet command services 
setting communication channel basis cooperation 
agents moving places exploit services implemented places 
go requires destination space host engine packages agent data stack instruction pointer ships destination place may vast wan 
destination telescript enabled engine checks authentication free execute new place 
finishes returns original host having performed task required owner 
non cooperation occurs place refuses accept incoming agent process 
free market model services located places agent processes go negotiate services pay return owners 
mobile agent applications mobile agent applications currently abound increase short medium term especially general magic release telescript development environment public domain open telescript initiative 
commercial application sony magic link pda personal intelligent communicator pic see url 
essentially assists managing user mail fax phone pager linking user telescript enabled messaging communication services america online services 
example carry text graphics sound 
magic link operates magic cap software platform magic cap user send executable agents telescript processes mail network 
users connect sony link pdas services supports magic cap mail messaging provides platform application exploit email telescript mobile agents 
plu mentions france telecom member general magic alliance access telescript technology prototyped services telescript 
demonstrators mobile telescript agents integrate railway car services prototype able propose optimal solution depending price time 
noted section ibm plans launch ics system uses mobile agents providing communications super service capable translating communications service medium mobile desktop pda fax speech text write applications pipeline 
telescript technology evolving active web tool technology see url 
brief critical review mobile agent systems telescript system permits agents roam place place 
late siemens developed application called intelligent moving processes wolfson 
computer programs interpreted machine move statement encountered 
move statement causes packaging program data instruction pointer just telescript package target machine 
target process process program resumes execution new location 
languages support mobile agent system development notably java sun microsystems 
java programming language similar syntax similar ways smalltalk 
important point mobile agent systems need constructed agent oriented system telescript 
wayner shows examples mobile agents scripted xlisp 
languages consider include agent tcl safe tcl 
couple years ago bt labs steward prototyped mobile agent system controlling telecommunication networks 
system written completely 
system types mobile agents provide different layers control system 
node network represented table storing neighbouring node traffic routed order traffic reach particular destination node 
agents control congestion making alterations tables order route traffic away congested nodes 
prototype demonstrated ensemble mobile agents control congestion circuit switched communications network 
fact novel application won authors prestigious british computer society bcs award 
key criticism mobile agents undoubtedly security 
example bt labs operate firewall prevents internal networks reached outside 
thought allowing mobile agents roam networks benign send shivers spines 
telescript agents write system memory disk safer viruses 
careful roaming agents may leave 
furthermore range applications mobile agents situation certainly changed time published 
mobile agents challenges wayner lists major challenges 
include 
usual exhaustive 
transportation agent move place place 
pack move 
authentication ensure agent says representing claims representing 
know navigated various networks infected virus 
secrecy ensure agents maintain privacy 
ensure read personal agent execute gains 
ensure agent killed contents core dumped 
security protect viruses 
prevent incoming agent entering endless loop consuming cpu cycles 
cash agent pay services 
ensure run run bill behalf 
addition performance issues effect having hundreds thousands millions agents wan 
interoperability communication brokering services provide brokering directory type services locating engines specific services 
execute agent written agent language agent engine written language 
publish subscribe services support broadcasting necessary coordination approaches 
having listed noted addressed successfully development environments various techniques including ascii encoded safe tcl scripts mime compatible mail messages transportation public key private key digital signature technology authentication cash secrecy providing limited interpreted languages prevent illegal instructions executed security example environments typically allow agent write memory viruses 
result software hardware new consumer electronics products exploit mobile agentbased services currently pipeline 
information internet agents overview information agents come sheer demand tools help manage explosive growth information experiencing currently continue experience henceforth 
information agents perform role managing manipulating collating information distributed sources 
proceed clarify fine distinction information agents earlier classed interface collaborative agents 
example section saw presence information specific collaborative agents distributed architecture see 
section described briefly sheth maes news filtering agent newt helps filter select articles continuous stream usenet netnews 
discussed briefly letizia search agent remembrance agent 
attempt argue researcher class agents information agents 
interface collaborative agents started quite distinct explosion www applicability vast wan significant degree overlap 
inevitable especially information internet agents defined different criteria 
defined contrast collaborative interface agents defined attributes see 
interface agents built mit media labs example autonomous learn employed www roles sense information agents 
subtle distinction clarified 
hypothesis motivation benefits information starved knowledge john 
similarly vis vis www case data starved information 
underlying hypothesis information agents ameliorate certainly eliminate specific problem information overload general issue information management information era 
agree tom henry vice president quoted saying biggest challenge create simple user interface information search retrieval information agents natural people picking phone reading newspaper 
henry quoted article context assistant agents believe ultimate goal information agents 
information agents put personal newspaper just want 
information agents endowed capabilities knowing look find information collate 
case having information agents clearer 
davies weeks report volume scientific corporate technical information doubling years 
years doubling years years 
trend suggests doubling year 
information accessible electronically www phenomenal growth years 
nicholas head mit media labs claimed talk bt labs web doubling days 
arguable believe overly optimistic explosive growth information www 
motivation developing information internet agents twofold 
firstly simply need demand tools manage information explosion 
www benefit just way benefiting search facilitators spiders lycos 
bob johnson analyst notes agents going way search internet matter better internet may organised keep pace growth information 
secondly vast financial benefits gained 
recall netscape grew relative obscurity dollar overnight netscape mosaic client offers generally browsing capabilities albeit add ons 
builds killer application usable netscape equivalent proactive dynamic adaptive cooperative agent www information manager certain reap enormous financial rewards 
furthermore spent internet users purchasing air tickets including hotel bookings car 
compares significantly european market totals see url information agents noted earlier information agents varying characteristics may static mobile non cooperative social may may learn 
standard mode operation 
internet agents mobile may able traverse www gather information report retrieve home location 
norm 
depicts typical static ones 
shows information agent typically browser netscape uses host internet management tools spiders search engines order gather information 
information agent may associated particular indexer spider 
spider indexer able search www depth store topology www database management system dbms full index urls wais 
search indexing engines spiders lycos webcrawler similarly build index 
currently spiders www 
user agent program local cache spider world wide web www lycos webcrawler dbms wais url search robot view information agents adapted user information agent requested collate information subject issues various search requests url search engines meet request 
search may done locally local cache 
information collated sent back user 
prototypical example internet softbot etzioni weld describes state art agent called internet softbot software robot 
fully implemented agent allows user high level request softbot able search inference knowledge determine satisfy request internet 
doing able tolerate ambiguity omissions inevitable errors user request 
etzioni weld strong analogy real robot order describe softbot interface internet 
example describe softbot effectors include ftp telnet mail numerous file manipulation commands including mv compress 
sensors provide softbot information external world include internet facilities archie gopher unix commands mv compress example determine user mail address 
contribution softbot designers view threefold 
firstly provides integrated expressive interface internet 
secondly chooses dynamically facilities invoke sequence 
thirdly uucp gateway goes search able backtrack facility run time order try alternative meet goal 
quite important softbot goal driven 
prima facie softbot presents menu interface users compose queries users allowed order logic notation supports negation conjunction quantification disjunction studies shown uncomfortable 
core softbot goal driven planner 
translates filled menu form softbot goal tries satisfy 
able handle tasks send budget memos mitchell cmu get ginsberg technical reports aren stored locally 
clearly disambiguation softbot exactly intended recipient memos 
softbot execute finger mitchell cmu edu inter alia resolve 
example softbot need ftp utility find retrieve ginsberg papers papers stored locally combination universal quantification negation issue ftp commands retrieve 
brief planner core module able decompose complex goal expression simpler ones go solve 
resolves issues interactions subgoals detects automatically 
softbots may implemented host problems including filtering mails scheduling meetings performing system maintenance tasks 
classed softbot information agent interface agent learning crucial feature limited memory learning 
example returning example earlier softbot able record familiar cmu obviating need carry disambiguation process time similar query received 
brief critical review information agents expect information agents major growth area couple years 
bt labs davies weeks designed implemented jasper agent jasper acronym joint access stored pages easy retrieval 
jasper agents behalf user community users able store retrieve summarise inform agents information useful www 
user works jasper agent profile interests built dynamically keywords 
effect jasper agent able sit side user suggest interesting www pages 
suggestions set keywords user interesting www pages suggested users community 
pages summarised keywords extracted index pages 
user keywords match closely page summary page url mailed particular user 
information agents built particular information filtering 
example webwatcher spider eichmann metacrawler url 
strictly speaking agents metacrawler certainly meta search engine provides interface search engines www 
query submitted translated forwarded search engines results returns user 
spiders agents explore autonomously topology web generally learn collaborate spiders 
key problem static information agents keeping indexes date environment prone complete chaos 
researcher etzioni weld eichmann voiced concerns ethics information agents 
return briefly ethical issues 
probable majority information agents mobile variety similar reasons mentioned section 
able navigate www store topology database say home site 
local database may queried sql 
information agents challenges section 
regards challenges information agents believe essentially similar interface mobile agents 
information agents static challenges interface agents apply see section 
mobile challenges mobile agents applicable see section 
likewise criticisms information agents similar interface mobile agents depending static mobile respectively 
reactive software agents overview reactive agents represent special category agents possess internal symbolic models environments act respond stimulus response manner state environment embedded 
reactive agents dates back research brooks agre chapman theories architectures languages sorts agents developed 
important point note reactive agents languages theories architectures fact agents relatively simple interact agents basic ways 
complex patterns behaviour emerge interactions ensemble agents viewed globally 
maes highlights key ideas underpin reactive agents 
firstly emergent functionality mentioned dynamics interaction leads emergent complexity 
priori specification plan behaviour set reactive agents 
secondly task decomposition reactive agent viewed collection modules operate autonomously responsible specific tasks sensing motor control computations 
communication modules minimised quite lowlevel nature 
global model exists agents global behaviour emerge 
thirdly reactive agents tend operate representations close raw sensor data contrast high level symbolic representations abound types agents discussed far 
hypothesis motivation benefits essential hypothesis reactive agent systems specification physical grounding hypothesis confused physical symbol system hypothesis 
traditional ai bets holds necessary sufficient condition physical system demonstrate intelligent action physical symbol system 
contrary physical grounding hypothesis challenges long held view arguing flawed fundamentally imposes severe limitations symbolic ai systems 
new hypothesis states order build system intelligent necessary representations grounded physical world brooks :10.1.1.12.1680:10.1.1.110.6657:10.1.1.18.4669
hypothesis quite radical turns literally physical symbol system hypothesis head 
brooks argues hypothesis obviates need symbolic representations models world best model 
furthermore model kept date system connected world sensors actuators 
reactive agents hypothesis may stated follows smart agent systems developed simple agents internal symbolic models derives emergent behaviour interactions various modules 
important note current reactive software agents necessarily possess actuators sensors connect physical world brooks insist 
titled intelligence robots etzioni argued software environments circumvent thorny peripheral research issues inescapable physical environments 
essence physical grounding hypothesis holds reactive agents explicit symbolic representations explicit symbolic reasoning emergent functionality 
reactive agents simple easy understand cognitive economy ferber low remember little 
situated plan ahead revise world models actions depend happens moment 
key benefits motivates reactive agents addition hypothesis mentioned earlier hope robust fault tolerant agent systems agent may lost catastrophic effects 
benefits include flexibility adaptability contrast inflexibility slow response times brittleness classical ai systems 
benefit hoped type address frame problem pylyshyn far proved intractable traditional ai techniques nonmonotonic reasoning 
reactive agent applications stated relatively number reactive software agent applications 
partly due reason standard mode operation tend depend reactive agent architecture chosen 
describe briefly architectures 
explore wander avoid obstacles brook subsumption architecture celebrated brook subsumption architecture 
brook architecture implement physical robots tightly connecting perception action exploited purely reactive software agents 
architecture consists set modules described subsumption language augmented finite state machines 
triggered action input signal exceeds threshold dependent values suppression inhibition signals 
note represent processing units architecture symbols classical ai 
modules grouped placed layers asynchronously modules higher level inhibit lower layers see 
layer hard wired purpose behaviour avoid obstacles enable control wandering 
architecture construct mobile robots mit 
steels uses similar agents brooks order investigate cooperation distributed simulated robots self organisation 
arguably basic reactive architecture situated action rules turn derives carried suchman 
situated action agents act essentially ways appropriate situation situation refers potentially complex combination internal external events states 
situated action agents pengi video game designed part agre doctoral thesis agre sonja chapman 
researchers philips research laboratories uk implemented situation action language called rta programming language graham wavish 
language implement characters computer games integrated cd titles wavish graham 
rosenschein proposed language modal logical formalism turn paradigm called situated automata 
agents written language compiled digital circuits implement reactive agent system 
summary applications reactive software agents exist currently situation change millenium 
favourite application area games entertainment industry course multi pound industry 
example philips researchers working digital video graphics reactive agent animations wavish graham 
brief critical review reactive agents reactive agent systems simulate types artificial worlds natural phenomena 
example ferber describes simulate ant societies ant modelled agent limited ecosystem composed kinds agents fish 
explains reactive agents computer virtual laboratory researcher modify experimental parameters validate model qualitative quantitative data 
nwana describes simulation children playground implemented agent behaviour language able pre cursor rta wavish graham 
alive interactive environment mentioned briefly earlier autonomous system employs real sensors form camera 
criticisms levelled reactive software agents architectures 
firstly noted applications 
secondly scope applicability currently limited mainly games simulations 
brooks robots deliver useful industrial applications envisage exploited certain applications toys domain 
fair early days research arguably symbolic ai start delivering useful industrial applications late early decades symbolic ai born 
clear need expand range languages theories architectures applications reactive agent systems 
thirdly obvious design systems intended behaviour emerges set agents 
agents required application 
currently allowable tell agents achieve goal genetic algorithms find dynamics interaction loop servo loop involving system environment converge desired goal 
interaction process comes rest fixed pattern goals achieved maes 
time consuming trial error attendant problems 
fourthly systems extended scaled debugged 
happens environment changed 
brooks acknowledges questions frequently asked attempts tackle 
find responses convincing applications improve trust reactive agent hypothesis 
issue entire physical grounding hypothesis 
brooks nouvelle ai researchers argue physical symbol system hypothesis implicitly includes number largely unfounded great leaps faith brooks :10.1.1.12.1680:10.1.1.110.6657:10.1.1.18.4669
hope speak soon applies physical grounding hypothesis 
etzioni challenged brooks assertion way progress ai study intelligence bottom concentrating physical systems mobile robots situated world autonomously carrying tasks various sorts brooks :10.1.1.12.1680:10.1.1.110.6657:10.1.1.18.4669
furthermore maes pointed situated agents important limitations precisely lack explicit goals goal handling capabilities requiring designers systems hard wire action selections 
example notes correctly effort expended pengi researchers analysing strategies playing game hard wired pengi 
planning approach leaves agent situated agents approach leaves designers 
maes opted hybrid approach agent network architecture 
implemented agent set competence modules strips fikes nilsson pre post conditions 
modules get activated activation level real value exceeded level represents relevance module situation 
module higher activation level influence agent behaviour 
modules linked implicitly various links successor link occurs module post condition happens pre condition module reactive agents challenges list criticisms exhaustive provides challenges reactive agent researchers address 
summary see main challenges include expanding range number applications reactive agents methodology need clearer methodology facilitate development reactive software agent applications 
may may require development associated theories architectures languages 
current approaches sadly trial error non functional issues issues scalability performance need addressed important clearer methodologies developed evaluated 
despite challenges expect applications hand crafted medium term 
hybrid agents overview hypothesis motivation benefits far reviewed types agents collaborative interface mobile internet reactive agents 
debates better academic sterile early get 
type promises strengths deficiencies trick maximise strengths minimise deficiencies relevant technique particular purpose 
frequently way doing adopt hybrid approach maes brought strengths deliberative reactive paradigms 
hybrid agents refer constitution combination agent philosophies singular agent 
philosophies include mobile philosophy interface agent philosophy collaborative agent philosophy key hypothesis having hybrid agents architectures belief application benefits accrued having combination philosophies singular agent greater gains obtained agent entirely singular philosophy 
having hybrid agent architecture meaningless 
clearly motivation expectation hypothesis proved right ideal benefits set union benefits individual philosophies hybrid 
consider obvious case constructing agent collaborative deliberative reactive philosophies 
case reactive component take precedence deliberative brings benefits robustness faster response times adaptability 
frame problem better ameliorated reactive component 
deliberative part agent handle longer term goal oriented issues 
typically hybrid architectures having layered architecture evidenced muller interrap ferguson touring machines hayes roth architectures 
describe briefly 
hybrid agent architectures case reactive agents just hybrid agent architectures 
prototypical example hybrid example muller layered interrap architecture shown developed german research centre ai 
architecture implements layered approach agent design 
agent kb agent control unit social model sg ps mental model sg ps world model sg ps perception communication action cooperative planning layer local planning layer behaviour layer world interface body interrap hybrid architecture fischer architecture construct agent autonomous robot 
shown consists agent knowledge base associated control unit sitting top perception action component handles low level communications 
control layers architecture behaviour layer bbl local planning layer cooperative planning layer cpl 
clearly architecture deliberative reactive philosophies 
reactive part framework allows efficiency reactivity robustness implemented bbl contains set patterns behaviour effect situation action rules 
describe agents reactive skills implements fast situation recognition order react time critical situations 
intermediate implements local goal directed behaviour topmost cpl enables agent plan cooperate agents order achieve multi agent plans resolve conflicts 
cpl allow deliberation 
layers different models agent knowledge base bbl cpl operate world mental social models respectively 
interrap layer consists processes sg ps interact neighbouring layers 
layers asynchronously 
interrap architecture evaluated constructing forks application simulates robots working automated loading dock environment 
details interrap architecture redesign completed results evaluation consult muller 
muller fischer 

ferguson touringmachines architecture example hybrid architecture dynamic rational mobile agents ferguson word mobile refer mobile agents telescript agents mobile agents autonomous robots :10.1.1.35.7370
architecture similar brook subsumption architecture see consists control layers reactive layer planning layer modelling layer concurrently 
key distinction touringmachines brook subsumption architecture hand interrap horizontal architectures vertical architecture 
means layers touringmachines subsumption architecture access perception sensing data layers contribute actions shown bottom layer interrap receives acts perceptual data see 
achieve coordination touringmachines ferguson control rules capable suppressing input certain layer similar suppression inhibition mechanisms subsumption architecture 
hayes roth integrated architecture intelligent agents consists layers physical layer performs perception action coordination senses interprets filters reacts dynamic environment agent embedded cognitive layer receives perceptual input physical controller construct evolving model perform interpretation reasoning planning 
goal provide architecture constructing adaptive intelligent agents operate specialised challenging niches argues ai agents necessity niche bound knowledge bound 
fundamental theoretical concept underlies architecture captures succinctly construct agent dynamically constructs explicit control plans guide choices situated triggered behaviors 
physical layer implements reactive situated behaviour cognitive layer performs longer term deliberative planning scheduling drawing evolving model 
hayes roth largely design proposal aiming provide sophisticated adaptive intelligent versatile coherent agents hayes roth reports architecture implemented implement experimental agents 
example reports agent guardian constructed niche intensive care unit icu monitoring 
guardian currently able monitor order continuously sensed patient data variables occasionally sensed ones 
new demonstrator guardian development monitor order variables 
reports begun applying architecture niches including adaptive intelligent robots 
hayes roth 
report evolving testbed application animated improvisational theatre children 
idea animated characters hybrid agents display spontaneous situated opportunistic goal directed behaviour 
agents collaborate directed improvisation goal animated characters produce joint performance follows script directions engaging manner 
hybrid architectures review obvious procedural reasoning system prs oasis prototype rao georgeff mentioned section implemented 
main prs georgeff ingrand 
hybrid system circa musliner 
brief critical review hybrid architectures challenges hybrid agent architectures relatively numbers case having overwhelming 
usually typical criticisms hybrid architectures general necessarily ones reviewed 
firstly usually translates ad hoc designs attendant problems 
secondly hybrid architectures tend application specific reasons 
thirdly theory underpin hybrid systems usually specified 
see challenges hybrid agents research quite similar identified reactive agents see section 
addition expect see hybrids philosophies reactive deliberative ones 
example scope hybrids singular agent combining interface agent mobile agent philosophies enable mobile agents able harness features typical interface agents combination 
heterogeneous agent systems overview heterogeneous agent systems hybrid systems described preceding section refers integrated set agents belong different agent classes 
heterogeneous agent system may contain hybrid agents 
classes discuss motivation benefit example challenges 
hypothesis motivation benefits genesereth ketchpel articulate clearly motivation heterogeneous agent systems 
essential argument world abounds rich diversity software products providing wide range services similarly wide range domains 
programs isolation increasing demand interoperate hopefully manner provide added value ensemble individually 
hypothesis plausible 
new domain called agent software engineering invented order facilitate interoperation miscellaneous software agents 
key requirement interoperation heterogeneous agents having agent communication language acl different software agents communicate 
potential benefits having heterogeneous agent technology standalone applications provide value added services enhancing order participate interoperate cooperative heterogeneous set ups legacy software problem may ameliorated obviate need costly software rewrites new leases life getting interoperate systems 
heterogeneous agent technology may cushion lessen blow effect routine software maintenance upgrade rewrites agent software engineering provides radical new approach software design implementation maintenance general software interoperability particular 
ramifications moving passive modules traditional software engineering proactive agent controlled ones clear methodology tools clearer 
genesereth ketchpel note agent software engineering compared object oriented programming agent object provides message interface internal data structures algorithms 
note key distinction object oriented programming meaning message may differ object object principle polymorphism agent software engineering agents common language agent independent semantics 
highlight important questions raised new agent oriented software engineering paradigm 
include appropriate agent communication language 
agents capable communicating language constructed 
communication architectures conducive cooperation 
addressing issues acl agent communication language developing part darpa initiative 
acl inter alia consists knowledge interchange format kif knowledge query manipulation language kqml finin wiederhold ontolingua gruber 
heterogeneous agent systems commence provide specific definition word agent agent software engineering 
defines software agent communicates correctly agent communication language genesereth ketchpel 
new agents constructed abide dictum putting heterogeneous set possible trivial 
legacy software need converted software agents 
authors note ways doing conversion 
firstly legacy software may totally rewritten meet criteria agenthood costly approach 
secondly transducer approach may 
transducer separate piece software receives messages agents translates legacy software native communication protocol passes messages program 
likewise translates program responses acl sent agents 
favoured approach situations code may delicate tamper unavailable 
lastly approach wrapper technique 
approach code injected program order allow communicate acl 
wrapper access directly modify program data structures 
clearly approach requires code available offers greater efficiency transduction approach 
agents available possible architectures choose agents handle coordination groups agents rely special system programs achieve coordination 
disadvantage communication overhead ensure scalability necessary requirement agents 
consequence federated approach see preferred typically 
agent facilitator agent agent agent agent facilitator federated system adapted genesereth ketchpel federated set agents distributed machines agents 
agents communicate directly intermediaries called facilitators similar wiederhold mediators 
essentially agents autonomy facilitators able locate agents network capable providing various services 
establish connection environments ensure correct conversation agents 
archon wittig architecture 
brief critical review heterogeneous agent systems pact acronym palo alto collaborative testbed exemplifies heterogeneous agents approach 
interesting experiment begins examine technological sociological issues building large scale distributed concurrent engineering systems 
approach integrate existing multi tool systems frameworks developed anticipation subsequently integrated cutkosky 
prototype built integrated legacy concurrent engineering systems common framework 
specifically involved agent programs executing fifteen workstations microcomputers 
agents organised hierarchy facilitators see 
agents communicate agents facilitators 
pact experiment part darpa knowledge sharing effort 
related area heterogeneous agent systems new discipline intelligent cooperative information systems born seeks integrate information systems software engineering databases ai information agents 
papazoglou 
describe framework integrates geographically dispersed database knowledge base systems 
agent attached database information system behave front ends transduction approach 
framework allows requests global piece information cuts databases 
requests need decomposed information agents sub requests disseminated appropriate systems responses collated 
similar architecture carnot architecture huhns mcc addressing problem logically unifying physically distributed heterogeneous information 
essential component carnot agents extensible service switches communication legacy systems 
essentially facilitators enable syntactic semantic communication heterogeneous information systems 
agent software engineering paradigm global schema describe information databases 
communication information systems say follows query local context translated global schema turn gets translated local context vice versa 
heterogeneous agent systems ongoing need methodologies tools techniques standards achieving interoperability heterogeneous information sources 
challenges met captured succinctly questions posed genesereth ketchpel noted section 
evidenced underway 
concludes panoramic overview different classes agents identified section 
general issues agents smart agents stay 
unleashed technologies disappear norman 
agree fully sentiments believe agent technology passing fad 
overviewed broad range goes banner agents 
outlined various promises challenges 
apart technical issues range societal social ethical problems looming 
donald norman writes probably major software manufacturers exploring intelligent agents 
myths promises reality colliding 
main difficulties foresee social technical 
intelligent agents interact people importantly people think agents norman 
disagree norman regards major technical hurdles ahead shown previous section extremely demanding technical issues resolved agent classes reviewed 
agree poses extremely pertinent question 
issues society grapple various thorny 
include privacy ensure agents maintain needed privacy acting behalf 
responsibility goes relinquished authority relinquish responsibility software agent implicitly aware authority transferred 
come back home long hard day proud owner car negotiated bought courtesy kasbah software agents 
ensure agent run run huge credit card bill behalf 
legal issues imagine agent probably bought shelf customised offers bad advice peer agents resulting liabilities people responsible 
wrote agent 
customised 

envisage new legislation need developed cover software agents 
ethical issues need considered 
david eichmann concerned ethics software agents proposed agent information service user agents gather information www 
include agents identify moderate pace frequency requests server limit searches appropriate servers share information respect authority placed server operators agent services accurate date 
etzioni weld proposed including safety agent destructively alter world agent leave world agent limit consumption scarce resources vigilance agent allow client actions unanticipated results 
issues critical immediately medium long terms 
short term expect basic agent software rolled basic interface agents mail filtering calendar scheduling agents 
basic mobile agent services provided short term 
predict comfortably vendors claim products agent certainly 
example hearing compression agents system agents disk operating systems respectively done past 
warns danger customers may disappointed gap press reports smart agents handling half reality rules message routing 
medium term years decent agent applications rolled classes agents overviewed 
collaborative agents integrated heterogeneous agent applications doing limited real workflow air traffic management controlling real telecommunication networks say just simulations 
useful limited interface agents available perform roles including eager assistants www guides memory aids entertainment www filters critics 
ringo system marketed firefly agents boston agents 
open sesame interface agent employs neural network learning technique market charles river analytics cambridge ma 
mobile information agent applications languages soon rolled vendors 
expect reactive hybrid agent technology start delivering real everyday industrial applications period 
furthermore medium term expect www degree enabling agents different classes play role paying services performing restricted buying selling behalf kasbah agents propose 
start seeing proliferation specialist agents conferences agents aviation industry agents law envisage new domain agent software engineering grow strength strength 
long term years expect see agents approximate true collaborate learn addition autonomous settings 
possess rich negotiation skills may demonstrate may referred arguably emotions 
caution usage words agent literature abounds vocabulary subtle complex meanings human context smith 
stage society need confront legal ethical issues bound follow large scale fielding agent technology 
long term agents provide design approach constructing complex pieces software 
writes fly intelligent agents smart software walk 
view different metaphor argue limited software agents just crawl research laboratories apart interface information agents long way walking 
summary believe greif agents enormous effect appear everyday products evolutionary process revolutionary predicted press coverage 
example ovum figures quoted suggest fold increase agents market europe usa year years time suggests revolution 
greif notes correctly agents initially leverage simpler technologies available applications word processors spreadsheets knowledge systems 
agents gradually evolved complicated applications 
hope optimistic claims agent technology moderated 
sad fact voices confident agent technology come doing real research know real technical social ethical challenges 
postscript diverse literature order overview single rapidly evolving area software agents 
wooldridge jennings attempted similar extensive review area theories architecture languages angle :10.1.1.119.2204
overviewed area viewpoint clear diversity agents investigated universities research laboratories worldwide 
hope provides useful contribution understanding exciting field software agents 
conclude arguably controversial casual postscript 
word agent currently popular computing press artificial intelligence ai computer science communities 
technical concept metaphor 
problems faced titles including artificial intelligence far ambitious claims precede real technical follows subject tends attract just jump order quick buck motives coupled contentious word intelligent intelligent agent prima facie generates unrealistic expectations state art 
exaggerated claims expectations eventually real excellent achievements match hype 
short promised little delivered 
usually quite predictable interest area soon research funding gradually rapidly disappears 
eventually leave search leave real researchers pick pieces 
fate agents research passing fad 
hopefully 
things serious agent researchers 
firstly drop intelligent intelligent agents done title connotation expectations 
secondly attempt ensure possible publish articles agents popular press reviewed interest area superficial 
possible experts usually get asked review articles go press 
thirdly experts engage domain lastly critical progress area order provide realistic appraisal state art 
overview attempted abide principles doctrine 
reader judge successful meeting principles 
acknowledge encouraging write particularly provision fraction literature referenced 
david griffiths encouraged writing article 
informal discussions barry crabtree mark wiegand paul brien robin smith shaped views 
barry robin divine ndumu brian provided feedback improved quality 
lastly acknowledge comments anonymous reviewers anonymous 
author bears responsibility misunderstandings errors 
views expressed author necessarily bt plc 
funded bt laboratories 
agre 
dynamic structure everyday life ph thesis department electrical engineering computer science mit 
agre chapman 
pengi implementation theory activity proceedings th national conference artificial intelligence san mateo ca morgan kaufmann 
steel 
integrating planning execution monitoring proceedings th national conference artificial intelligence aaai st paul mn 
freitag mitchell 
webwatcher learning apprentice world wide web proceedings symposium information gathering heterogeneous distributed environments aaai press 
steward 
mobile software agents control telecommunications networks bt technological journal april 
bates 
role emotion believable characters communications acm 
bond gasser 
readings distributed artificial intelligence san mateo ca morgan kaufmann 
bratman israel pollack 
plans resource bounded practical reasoning computational intelligence 
brooks 
robust layered control system mobile robot ieee journal robotics automation 
brooks 
elephants don play chess maes 
ed designing autonomous agents theory practice biology engineering back london mit press 
brooks 
intelligence representation artificial intelligence 
brooks 
intelligence reason proceedings th international joint conference artificial intelligence menlo park ca morgan kaufmann 
jones 
lessons open sesame 
user interface learning agent proceedings international conference practical application intelligent agents multi agent technology paam london april 
carver lesser 
testbed fa distribution situation assessment extensions model external evidence proceedings st international conference multi agent systems icmas san francisco usa june 
carver lesser 
sophisticated cooperation distributed problem solving proceedings th national conference artificial intelligence anaheim 
chaib draa moulin 
trends distributed artificial intelligence artificial intelligence review 
chapman 
vision instruction action london mit press 
chavez maes 
kasbah agent marketplace buying selling goods proceedings international conference practical application intelligent agents multi agent technology paam london april 
cohen levesque 
intention choice commitment artificial intelligence 

design interacting agents interfaces brouwer 
eds human machine communication educational systems design nato asi series series computer systems sciences heidelberg springer verlag 
cutkosky engelmore fikes genesereth gruber tenenbaum weber 
pact experiment integrating concurrent engineering systems ieee computer january 
davies weeks 
jasper communicating information agents proceedings th international conference world wide web boston usa december 
davis smith 
negotiation metaphor distributed problem solving artificial intelligence 
decker 
distributed artificial intelligence testbeds hare jennings 
eds foundations distributed artificial intelligence chapter london wiley forthcoming 
decker lesser 
designing family coordination algorithms proceedings th national conference artificial intelligence washington 
dent mcdermott mitchell zabowski 
learning apprentice proceedings th national conference artificial intelligence san jose california aaai press 
doran choo li 
mcs multi agent testbed developments experiments 
ed cooperating knowledge systems heidelberg springer verlag 
durfee 
mice flexible testbed intelligent coordination experiments proceedings distributed artificial intelligence workshop 
durfee lesser corkill 
coherent cooperation communicating problem solvers ieee transactions computers 
eichmann 
spider balancing effective search web load proceedings international conference world wide web geneva switzerland may 
eichmann 
ethical web agents proceedings nd www conference www ncsa uiuc edu sdg etzioni 
intelligence robots reply brooks ai magazine 
etzioni weld 
softbot interface internet communications acm 
ferber 
simulating reactive agents hillebrand 
eds agent simulation artificial life amsterdam ios press 
ferguson 
architecture adaptive rational mobile agents werner demazeau 
eds decentralized ai proceedings rd european workshop modelling autonomous agents multi agent worlds maamaw amsterdam elsevier 
ferguson 
touringmachines architecture dynamic rational mobile agents phd thesis computer laboratory university cambridge uk 
fikes nilsson 
strips new approach application theorem proving problem solving artificial intelligence 
finin wiederhold 
overview kqml knowledge query manipulation language department computer science stanford university 
fisher muller 
unifying control layered agent architecture technical report tm german research center ai dfki gmbh 
foner 
agent anyway 
sociological case study agents memo mit media lab cambridge ma 
foner 
multi agent referral system matchmaking proceedings international conference practical application intelligent agents multi agent technology paam london april 
gasser 
social conceptions knowledge action dai foundations open systems artificial intelligence 
gasser huhns 
distributed artificial intelligence san mateo ca morgan kaufmann 
gasser herman 
mace flexible testbed fo distributed ai research huhns 
ed distributed artificial intelligence research notes artificial intelligence london pitman chapter 
gasser rosenschein ephrati 
multi agent systems tutorial st international conference multi agent systems san francisco ca june 
georgeff 
agents motivation essential technology real world applications international conference practical applications intelligent agents multi agent technology london uk th april 
georgeff ingrand 
decision making embedded reasoning system proceedings th international joint conference artificial intelligence detroit mi menlo park ca morgan kaufmann 
genesereth ketchpel 
software agents communications acm 
graham wavish 
simulating implementing agents multiple agent systems proceedings european simulation multi copenhagen june 
greif 
desktop agents group enabled products communications acm 
gruber ontolingua mechanism support portable ontologies ksl stanford university knowledge systems laboratory 

vendors agent technology seminar intelligent agents business applications november london 
hayes roth 
integrated architecture intelligent agents sigart bulletin 
hayes roth 
architecture intelligent systems artificial intelligence 
hayes roth van gent 
multiagent collaboration directed improvisation proceedings st international conference multi agent systems icmas san francisco usa june 
schlimmer 
machine learning apprentice completion repetitive forms proceedings th ieee conference artificial intelligence applications orlando florida ieee press 
hewitt 
viewing control structures patterns passing messages artificial intelligence 
huhns singh 
distributed artificial intelligence information systems tutorial june university keele uk 

baby steps byte march 
huhns jacobs shen singh 
integrating enterprise information models carnot proceedings international conference intelligent abd cooperative information systems ici cis 
jennings 
specification implementation belief desire joint intention architecture collaborative problem solving journal intelligent cooperative information systems 
jennings varga fuchs 
transforming standalone expert systems community cooperating agents international journal engineering applications artificial intelligence 
jennings mamdani varga 
archon develop real world dai applications electricity transportation particle accelerator control ieee expert special issue real world applications dai systems 
rosenschein 
action planning embedded agents maes 
ed designing autonomous agents theory practice biology engineering back london mit press 
kay user interface personal view laurel 
ed art computer interface design reading mass addison wesley 
king 
intelligent agents bringing things life ai expert february 
kozierok maes 
learning interface agent scheduling meetings proceedings acm sigchi international workshop intelligent user interfaces florida 
lang 
newsweeder learning filter netnews proceedings machine learning conference 
lashkari metral maes 
collaborative interface agents proceedings th national conference artificial intelligence seattle wa aaai press 
lesser corkill 
functionally accurate cooperative distributed systems ieee transactions systems man cybernetics 
levitt cohen kunz nass christiansen jin 
virtual design team simulating organisational structure communication tools affect team performance carley 
eds 
computational organisation theory san francisco lawrence erlbaum 
lieberman 
letizia agent assists web browsing proceedings ijcai aaai press 
maes 
ed designing autonomous agents theory practice biology engineering back london mit press 
maes 
situated agents goals maes 
ed designing autonomous agents theory practice biology engineering back london mit press 
maes 
agents reduce information overload communications acm 
maes 
intelligent software scientific american september 
maes 
artificial intelligence meets entertainment lifelike autonomous agents communications acm november 
minsky 
society mind new york simon schuster 
mitchell caruana freitag mcdermott zabowski 
experience learning personal assistant communications acm 
moukas 
amalthaea information discovery filtering multiagent evolving ecosystem proceedings international conference practical application intelligent agents multi agent technology paam london april 
muller 
conceptual model agent interaction 
ed proceedings nd international working conference cooperative knowledge systems keele university centre 
muller thiel 
modelling reactive behaviour vertically layered agent architectures wooldridge jennings 
eds 
intelligent agents lecture notes artificial intelligence heidelberg springer verlag 
musliner durfee shin 
circa cooperative intelligent real time control architecture ieee transactions systems man cybernetics 
newell 
knowledge level artificial intelligence 
norman 
people interact agents communications acm 
nwana 
simulating children playground able working report department computer science keele university uk 
nwana 
potential benefits software agent technology bt internal technical report project intelligent systems research aa bt labs uk 
nwana lee jennings 
coordination software agent systems british telecommunications technology journal october 
nwana wooldridge 
software agent technologies british telecommunications technology journal october 
brien wiegand 
agents change business process management british telecommunications technology journal october 
ovum ovum report intelligent agents new revolution software 
papazoglou sellis 
organisational framework cooperating intelligent information systems intelligent cooperative information systems 
plu 
software agents telecommunications network environments seminar intelligent agents business applications november london 
pylyshyn 
ed robot dilemma frame problem problem artificial intelligence norwood nj ablex 
rao georgeff 
bdi agents theory practice proceedings st international conference multi agent systems icmas san francisco usa june 
reinhardt 
network byte october 
rosenschein 
rational interaction cooperation intelligent agents phd thesis stanford university 
rosenschein zlotkin 
rules encounter designing conventions automated negotiation computers cambridge mit press 
rhodes starner 
remembrance agent continuously automated information retrieval system proceedings international conference practical application intelligent agents agent technology paam london april 
shardanand maes 
social information filtering automating word mouth proceedings chi denver may sheth maes 
evolving agents personalised information filtering proceedings th ieee conference artificial intelligence applications 
shoham 
agent oriented programming artificial intelligence 
smith 
contract net protocol high level communication control distributed problem solver ieee transactions computers 
smith 
software agent technology proceedings ofthe international conference practical applications intelligent agents multi agent technology london uk 
smith 
personal communication 
steels 
cooperation distributed agents self organisation demazeau muller 
eds decentralized ai proceedings st maamaw amsterdam elsevier 
suchman 
plans situated actions problem human machine communication cambridge cambridge university press 
sycara 
intelligent agents information revolution seminar intelligent agents business applications november london 
winter crabtree 
agents mobility multimedia information proceedings international conference practical application intelligent agents agent technology paam london april 
url www cs cmu edu afs cs cmu edu project theo www html 
url www com 
url www sel sony com 
url www metacrawler com 
url haas berkeley edu agents wavish graham 
roles skills behaviour wooldridge jennings 
eds 
intelligent agents lecture notes artificial intelligence heidelberg springer verlag 
wavish graham 
situated action approach implementing characters computer games applied ai journal appear 
wayner 
free agents byte march 
wayner 
agents unleashed public domain look agent technology boston ma ap professional 
wayner 
agents change byte march 
wiederhold 
mediators architecture information systems ieee computer 
wittig 
ed 
archon architecture multi agent systems london ellis horwood 
wolfson voorhees 
intelligent routers proceedings th international conference distributed computing systems dcs newport beach ca june ieee computer society press 
wooldridge 
developing agents proceedings seminar agent software april london 
wooldridge jennings 
intelligent agents theory practice knowledge engineering review 
wooldridge jennings 
eds 
intelligent agents lecture notes artificial intelligence heidelberg springer verlag 
wooldridge mueller tambe 
intelligent agents ii lecture notes artificial intelligence heidelberg springer verlag 
zlotkin rosenschein 
negotiation task sharing autonomous agents cooperative domains proceedings th ijcai detroit michigan 

