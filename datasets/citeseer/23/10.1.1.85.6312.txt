logic programming detect activities pervasive healthcare henrik christensen center pervasive computing university aarhus dk denmark tel mail hbc daimi au dk 
experience case study logic programming pervasive computing project healthcare domain 
expert system detect healthcare activities pervasive hospital environment positions people things tracked 
detected activities activity driven computing infrastructure provides computational assistance healthcare staff mobile pervasive computing equipment 
assistance range simple activities fast log electronic patient medical record system complex activities signing medicine specific patients 
describe role logic programming infrastructure discuss benefits problems logic programming pervasive context 
pervasive computing new interesting topic computer science 
promise bring computing assistance anytime 
perspectives fantastic challenges 
report pervasive healthcare project presently working center pervasive computing university aarhus 
research objectives pervasive healthcare project experiment enhancing quality everyday healthcare activities utilizing pervasive computing technology 
project collaboration aarhus county hospital aas danish developing electronic patient medical record epr system aarhus county 
patient medical records county hospital 
records inherent problems 
bad handwriting introduces errors repetitive data manually copied records difficult keep date records get lost significant amount time spent simply finding records carried lot 
electronic patient medical record system overcomes data loss consistency problems 
new problems arise 
mobility easy access primary advantages records 
contrast laptop computers heavy carry personal digital assistants pdas small screens stationary computers enforce log log procedures ensure data security privacy substantial time wasted constantly keying username password finding patient data 
healthcare project designed activity driven computing infrastructure everyday healthcare activities define basic computational services provided staff 
designed collaboration nurses doctors aarhus county hospital evaluated workshops 
central infrastructure activity discovery component expert system monitors movement people things environment combines information context information heuristics processes guess occurring activities 
project main research objective study architectures pervasive computing rule logic programming turned strong natural paradigm detecting human activity pervasive computing environment 
insight experiences contribution user interface aspects reported 
setting stage conduct research experimental multidisciplinary manner participation industrial partners 
project team consists computer scientists various backgrounds computer supported collaborative cscw humancomputer interaction hci software architecture distributed computing industrial developers clinicians hospital 
research focus primarily directed directions software architectures support healthcare pervasive ubiquitous computing environment cscw hci issues context 
plans venture area logic programming start project 
research methods include ethnographic observations clinical scenario design methods 
cornerstone design validation effort workshops clinicians perform role playing games situations prototypes test feasibility semi realistic situations 
prototypes characterized number properties limited functionality functionality usually limited typically implement just required role play fixed number scenarios 
example prototype deals activities concerning medicine schema patients medical record data included patient care activities disregarded 
limited datasets data role plays usually hard coded prototype read simple files utilizing database technology 
size data limited instance prototype knows nurses doctors patients medicine 
limited dataset suffices role playing number situations known set users 
basic premise prototypes validate underlying usage principles sound context addressing architectural qualities performance modifiability scalability point highperformance reliable secure system interesting impossible solve right problems users 
premises important understand discussion 
main contribution find logic programming approaches promising computing contexts centered human activities contrast prevailing document centered paradigm known office environment lot issues remains investigated realistic deployment situation respect scalability performance 
activity driven healthcare scenario idea functionality activity driven computing infrastructure small example may helpful 
pervasive environment assume kind pervasive infrastructure place healthcare environment 
specifically assume computing devices readily accessible 
envision clinicians may carrying pdas tablet computers 
laptop quality computers built hospital beds touch sensitive screens keyboards 
large computer screens built walls conference rooms 
devices connected reliable high bandwidth network 
location awareness 
persons relevant artifacts wear devices allow computing infrastructure monitor movements location 
pervasive healthcare environment scenario illustrates type activities computing infrastructure able infer 
scenario nurse andersen going give clock medicine patients 
carries medicine patients hansen jensen 
approaches hansen lies bed puts hansen medicine tray table bed touch sensitive computer screen 
activity driven computing infrastructure constantly monitors movements people things detects nurse andersen near hansen bed hansen near bed hansen medicine tray near bed 
fact infers activity simply log nurse andersen epr hansen bed computer 
fact guesses activity log epr fetch patient record hansen 
furthermore combines facts context data heuristics time noon medical record shows today clock medicine hansen infers additional activities log epr show today medicine schema hansen log epr record clock medicine today taken hansen signed nurse andersen 
activity fetches relevant data nurse change data epr contrast activity shortcut fetches data records epr prescribed medicine taken patient 
activities forwarded hansen bed computer appear buttons dedicated activity bar 
activity bar akin task bar known windows platform 
activity bar visible visually operationally disrupt computer display 
nurse andersen clicks button marked show today medicine schema hansen 
activates activity means forwarded epr system enacted medicine schema data fetched user interface formatted show proper part schema 
sign medicine interrupted phone call leaves room 
nurse longer vicinity bed activities removed activity bar epr system closed hansen bed computer avoid confidential data seen 
minutes nurse christensen arrives hansen bed 
infrastructure performs computation outlined forwards activities activity bar important change log signing behalf nurse christensen course 
nurse asks hansen taken hansen confirms chooses record clock medicine today taken hansen signed nurse christensen activity required changes epr 
scenario hopefully shows important benefits 
proposing activities saves times daily healthcare lot tedious typing user interface navigation avoided 
secondly attention moved handling computers real issue patients 
activity driven computing infrastructure logical view architecture diagram shown fig 

major components responsibilities tag scanner wlan monitor bluetooth components handles hardware generate location movement events sent location server 
location server receives events tag enter tag leave hardware maps hardware ids logical ids 
events sent context server 
context server maps logical ids physical location information knowledge physical location scanners knowledge tag person thing wearing 
activity discovery component adc infer possible activities information location context server heuristics recurring activities healthcare 
created stored activity store 
activity store detected activities activities explicitly created healthcare staff stored 
storing activity manager notified new activities 
fig 

logical view infrastructure 
activity manager receives notifications new activities forwards activities pervasive computing equipment accurately activity bar running device near person activity relates 
activity bar receives activities presents non healthcare staff 
separate application resembles task bar known windows operating system 
activities activated user explicitly selects typically clicking icon activity activity bar 
activation activity forwarded proper application typically epr system fetches relevant data formats user interface properly 
electronic patient record system third party database application handling patient record information 
accepts activities activity bar fetches data formats user interface specifications activity 
detailed description design provided 
prototype implementation workshop experiments conducted radio frequency identity rfid tags 
tags cheap weigh grams thin easily glued medicine tray worn clinician coat 
rfid tag unique bit identity 
tag scanner able detect bit identity tag enters scanners detection area meters leaves detection area 
events denote tag enter tag leave events respectively 
pervasive computing equipment simulated workshop experiments laptop computers 
snapshot evaluation workshop seen fig 

fig 

snapshot workshop showing prototype rfid setup 
left see icode tag scanner tags top 
upper taped cardboard nurse personal tag 
medicine tray tag glued bottom 
right partially covered nurse back laptop computer displays activity bar epr system responds activities guessed activity driven computing infrastructure 
logic programming activity discovery prototype implementation java standard edition 
developing team consisted experienced object oriented programmers limited knowledge logic programming 
detecting activities cumbersome procedural object oriented programming paradigm point view 
activities happen number persons things meet time space conditions met time day personal preferences state patient record data 
activities interrelated interact complex ways 
idea rule inference engine serve better inferring possible activities writing object oriented paradigm java 
wanted experiment logic programming lp approach opportunistic way goal clarify lp ease enhance ability express detect human activities context concern really find best lp system 
search internet lead jess java expert system shell ideal primarily due strong seamless integration java 
jess originally developed java implementation clips added special features years 
discussing design detail outline jess way 
modeling jess jess expert system production system variant 
production system defined terms rules productions database current assertions facts stored working memory knowledge base 
note facts jess ground facts contain variables 
rules parts left hand side lhs right hand side rhs 
lhs conjunction pattern elements matched facts knowledge base 
rhs contains directives modify knowledge base adding removing facts external side effects invoking java methods 
production systems different prolog stated jess manual prolog really answering queries jess acting response inputs exactly need pervasive healthcare context 
jess contains data structuring mechanisms feel familiar object oriented programmers template construct define structured objects fields denoted unordered facts jess define single inheritance hierarchies 
demonstrate jess general way describe couple simple examples 
shown object defined person person class slot id slot name patient extends person patient class slot person template define facts persons contains unique identity id string 
patient fact addition contains identity bed 
templates define patient knowledge base imperative assert patient name hansen id key point design events location context server modeled event templates corresponding facts inserted knowledge base occur 
move entity id moved location slot location slot id extends move person moved location extends move equipment sort moved location note inheritance simply classify move events moves persons equipment defining type slot 
simple example rule combine facts patient movement person report patient location patient id id name name id id location location printout patient name moved location location crlf identifier id pattern elements lhs identical values order rule fire 
familiar chr language rule look quite familiar 
surprise jess chrs rule forward chaining systems main differences jess state preserving rete match algorithm chr state treat algorithm 
rules fired inference engine explicitly activated imperative jess 
simple jess session example may look jess facts initial fact patient id name hansen total facts 
jess assert id location fact jess run patient hansen moved location prototype rhs typically contains java method invocations described section 
modeling healthcare activities basic idea adc knowledge base containing facts persons equipment rules describe possible activities 
context server generates events sends adc 
adc inserts facts knowledge base runs inference engine 
rule fires callback java code generate activity objects handling activity driven infrastructure 
example scenario section describe rule infers activity log epr show today medicine schema jess syntax show medicine schema activity location loc id staff id location loc id patient id id location loc pattern elements ensure nurse doctor location loc patient place final element ensures computing device running activity bar 
rhs callback java created parameters 
complicated rules prototype shown document medicine handle case medicine tray seen location associated patient clinician location loc id eid tray id eid location loc id staff id location loc id patient id id location loc corresponds activity nurse christensen scenario section presence medicine tray associated patient nurse infer activity record patient taken medicine 
activity discovery component combines person equipment move facts facts electronic patient record system heuristics recurring processes infer healthcare activities 
power logical programming paradigm truly shows 
rule demonstrates fairly simple rule encodes complex error prone piece code procedural language correctly handles complex situations time modeled prototype 
nurses attending patient time gets opportunity initiate activity running activity bar programs location activity pops activity bar computers location allowing nurse choose computer 
note case includes mobile computers pdas special case 
procedural language rule complex write iterated account combinations persons 
handling low level processing implementation effort quickly showed low level processing context server easily expressed rules 
location context server perform processing basically transform data lower higher levels abstraction 
location server notified hardware level bit tag ids seen tag scanner inserts fact logical identities tag scanner values knowledge base 
location server uses knowledge base convenient database 
context server turn maintains facts physical location scanners identity tags worn persons things 
rules retract facts replace facts describe person thing moving new physical location 
rules map hardware events events high semantic contents 
possible activity modeling focused medication nurses activities project far 
obviously types activities detected high probability 
admitting patient hospital means assigning bed ward 
nurse patient undefined bed assignment happen near bed nurse assign bed patient 
nurses maintain lists tasks may triggered location visited person nearby 
graphical user interface epr system may change situation instance physicians different setups working ward doctors conferences department activity discovery component infer location physicians propose change epr setup 
physician ward round approaching bed patient adc may trigger activity case new lab results come visited patient 
metrics outlined section focused functionality user perspective considered architectural issues depth 
current prototype knowledge base contains facts role play scenarios rules 
run time performance memory requirements response time issues worry 
issues course addressed activity driven infrastructure going deployed realistic setting 
hospital aarhus county hospital knowledge base able handle large number concrete objects 
aarhus county hospital beds wards employees 
admissions hospital treatments consulted department types treatments 
patients day 
top need objects facts model locations computational devices activity bar programs running interesting equipment medicine wheel chairs beds devices 
put obvious single centralized expert system able cope large set data 
regarding complexity rules pretty straight forward indicated examples described 
cases need control order rules fire introduce pseudo facts purpose guaranty ordering 
discussion pervasive computing associated anytime computing 
bringing computing everyday endeavors change way perceive computers 
shift mainframes desktop computers changed view document centered perspective 
think pervasive computing change perspective human activity centered perspective activities decide information relevant combination equipment order manipulate 
activity driven computing infrastructure rule approach wider applications just healthcare 
prototype evaluated perspectives functionality perspective modifiability maintenance perspective 
functionality perspective tested scenarios evaluation workshop 
scenarios small role plays take known job situation starting point 
situation rewritten envisioned full scale software solution clinicians asked play situation prototype 
feedback clinicians positive 
limited scope handling medicine related activities activity discovery component guessing relevant activities clinicians speed gave handling epr system important 
situations prescribing medicine physicians activity guessing difficult fewer rule thumb happens fewer physical triggers specific locations instance medicine prescribed patient corridor patient bed 
modifiability maintenance perspective programmers felt jess gave number benefits difficult achieve 
gave declarative way describing activities easier write maintain corresponding procedural code 
exception cases ordering rule firing controlled programming bit tedious 
secondly gave confidence programming complete rule engine ensures possible combinations tried 
benefit short easier maintain code code fewer errors 
third knowledge base common database information shared location server context server activity discovery component simplified programming method invocations components costly creation subsequently garbage collection objects avoided replaced modifying shared facts 
expert system problems 
consideration presently scalability 
infrastructure rules inferred single centralized knowledge base 
essence rule engine infers activities global knowledge 
question scales realistic setting large hospital large number facts dealt knowledge base 
faster algorithms rete reported threat find speed memory main issue important concern expert system single point failure 
fails reason consequences clinicians problematic 
speculative idea abandon idea global knowledge base favor hierarchy knowledge bases local facts 
instance may knowledge base ward maintains facts ward 
facts events interesting outside ward knowledge base inform parent knowledge base chain responsibility design pattern 
way failure knowledge base local effects computational demands memory processor speed lessened 
note programming point view programming model jess feels flat compared object oriented programming model 
mentioned separate components share knowledge base 
components implemented classes distinct java packages ensuring encapsulation information hiding hierarchical naming scheme 
jess code component stored distinct files weak modularity shows file level 
jess language level templates facts rules single flat name space information hiding 
object oriented programmers primitive fear lack proper scoping encapsulation difficult maintain large amounts jess code 
problem brings doubts scalability approach 
acknowledge may expert system programming languages better modularization support aware 
related relates aspects research pervasive ubiquitous computing 
research focused intelligent environments 
easyliving explores vision intelligent extent activity aware home 
activities simpler ones encountered healthcare example tom logged desktop computer moved wall computer move computing session wall computer 
level complexity easily expressed procedural object oriented paradigm easyliving employ lp techniques activity detection 
projects concerned environments devices adapting user context notably user location example exhibition guide location notification systems commotion location composite devices 
argument goes rules simple require lp techniques 
jaffar describe interesting healthcare system employs lp component 
system centered patient treatment medication 
basically workflow system physicians prescriptions generate series items similar notion activities concerning giving medicine patients documenting inserted nurses lists 
items associated timestamp indicating initiated completed 
considered unavoidable issue workflow activities organized natural ordering time 
lp component generate items activities basis doctors prescriptions tracking people artifacts case 
system rigid focused nurses schedule strongly dictated single artifact prescription 
contrast approach tries help clinicians situation may doing supposed computer system 
summary described experiences logic programming techniques pervasive computing 
research domain healthcare objective support everyday activities healthcare augment patient record data quality particular ease speed epr systems 
approach design experiment activity driven computing infrastructure 
location awareness pervasive computing devices infrastructure able qualified guesses activities propose healthcare staff 
activities embody epr data user interface setup inferred expert system 
declarative rules define activities terms location persons things heuristics recurring processes 
logic programming approach benefits compared imperative programming approach 
identified weaknesses approach primarily concerning single point failure scalability 
notion centralized knowledge base may scale large organizations 
lack language primitives jess expressing modularity information hiding poses scalability problem programming effort 
find expert systems important role play activity centered pervasive computing 
activity driven computing infrastructure designed implemented collaboration jakob claus anders olsen 
anders olsen contributed significantly introducing jess location context server components 
anonymous reviewers valuable comments especially maria garcia de la banda providing guidance preparing final version 


scenario design cooperative systems re designing hospital information system denmark 
group decision negotiation volume pages 
kluwer academic publishers 


interwoven artifacts coordinating distributed collaboration medical care 
submitted cscw conference 

christensen 
supporting pervasive collaboration healthcare activity driven computing infrastructure 
submitted cscw conference 

christensen 
middleware pervasive healthcare white 
banavar editor advanced topic workshop middleware mobile computing 
www cs arizona edu mmc program html heidelberg germany nov 

kant martin 
programming expert systems ops 
addison wesley 

brumitt meyers krumm kern shafer 
easyliving technologies intelligent environments 
thomas gellersen pages 


scenario design envisioning technology system development 
john wiley sons 

center pervasive computing 
www pervasive dk 

christensen 
theme administration documentation medicine 
report evaluation 
technical report pb center pervasive computing aarhus denmark 
www pervasive dk publications 

christensen 
supporting human activities exploring activity centered computing 
submitted ubicomp conference 

clips tool building expert systems 
www net clips clips html 

dey abowd 
context aware system supporting reminders 
thomas gellersen pages 

easy living 
research microsoft com easyliving 

forgy 
rete fast algorithm pattern object pattern match problem 
artificial intelligence 

friedman hill 
jess rule engine java platform 
herzberg ca sandia gov jess 

fr 
theory practice constraint handling rules 
journal logic programming 

gamma helm johnson vlissides 
design patterns elements object oriented software 
addison wesley 

ginsberg 
essentials artificial intelligence 
morgan kaufmann publishers 

jaffar maher neumann 
architecture prototype implementation system workflows medical information systems 
proceedings nd hawaii international conference system sciences 

schmandt 
location aware information delivery commotion 
thomas gellersen pages 

miranker 
treat better match algorithm ai production systems 
proceedings sixth national conference artificial intelligence pages 

oppermann specht 
context sensitive nomadic exhibition guide 
thomas gellersen pages 


pham schneider goose 
exploiting location composite devices support facilitate situated ubiquitous computing 
thomas gellersen pages 

pervasive healthcare 
www healthcare pervasive dk 

thomas gellersen editors 
proceedings handheld ubiquitous computing volume lecture notes computer science bristol uk sep 
springer verlag 

weiser 
computer science issues ubiquitous computing 
communications acm july 
