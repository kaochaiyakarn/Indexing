behaviour tpc benchmark wang richard bunt department computer science university saskatchewan campus drive sk canada email wang bunt cs ca may report analyzes behaviour ibm db running line transaction processing benchmark tpc 
behaviour different tables different object types data index studied 
effect number users examined 
correlated exist tables 
period correlated affected type tables type objects data index number users 
different tables exhibit different behaviour depends accessed applications 
data pages index pages exhibit different behaviour 
index pages tables similar locality 
behaviour different tables data index pages buffer pool effectively partitioned group pages similar properties partition 
database system database resides disks managed dbms database management system 
database item accessed dbms disk page item resides main memory 
buffer pool caches disk blocks memory maintained dbms 
disk pages read buffer pool written back disks buffer pool 
access time difference memory disks larger larger proper design buffer pool management algorithm important performance dbms 
key design buffer pool management strategies understanding database applications refer pages databases 
empirical studies database behaviour past mainly focused hierarchical network model database systems 
conflicting results reported 
report behaviour ibm db relational dbms running tpc benchmark oltp workload studied 
implications behaviour design buffer pool management strategies discussed 
section presents related behaviour database systems 
section describes environment study including brief oltp workload tpc benchmark 
section discusses trace collection procedure 
section presents trace characteristics revised january related implications design tuning buffer pool management strategies 
section 
related understanding database applications pages key design successful buffer pool management strategies 
empirical studies database behaviour years focused mainly hierarchical dbms systems network model dbms systems 
conflicting results reported 
randomness 
study behaviour network model database system showed databases showed locality 
physical sequentiality 
application study single user retrieval line application 
size databases small 

sequentiality 
studied line control system running ims hierarchical dbms 
results showed lack locality transaction strong sequentiality 
sequentiality prefetching techniques proposed improve performance 

weak locality 
database showed locality programs general 
contrary locality came inter transaction 
studied behaviour batch programs running network model dbms locality database 
sequentiality 

strong locality 
study behaviour ims clear evidence locality hierarchical database systems 
furthermore locality database observed regular predictable exploitable programs general 
workload studied generated batch programs dealt typically expensive time consuming applications 
study confirmed strong locality 

diversity 
showed diversity behaviour relational dbms 
locality different depending query types 
behaviour relational dbms analyzed operation set relational databases 
sequential random hierarchical model behaviour database operations 
summarize previous studies shown database behaviour diversity depending different applications dbms systems 
characteristics mix different patterns 
environment study oltp workload relational model proposed relational dbms dominate dbms versus hierarchical network model dbmss simplicity relational model high level query language sql 
large database applications relational dbmss oltp important type workload 
oltp class database software manages applications typically data entry retrieval transactions industries 
oltp cornerstone businesses business 
transactions oltp simple 
execution time transaction short seconds 
upper bounds requirements response time transactions 
oltp application terminals connected central database servers network environment study shown 
client server model typically oltp applications 
different terminals initiate various transactions server independently 
database server updated frequently transactions 
due intensive nature oltp applications large buffer pools disks database server oltp application 
terminal terminal ether power oltp transactions tpc benchmark network col database server architecture oltp application terminal terminal tpc benchmarks developed transaction processing performance council tpc widely accepted testing performance database systems transaction processing 
tpc non profit founded define transaction processing database benchmarks 
tpc benchmark represents oltp workload 
tpc benchmark models order processing operations wholesale supplier geographically distributed sales districts associated warehouses 
regional warehouse sales districts 
district serves customers 
supplier items sale 
warehouses maintain stocks items 
shows tpc business environment 
warehouse populated mb data benchmark running 
scale tpc benchmark expressed number warehouses 
basic transactions represent essential performance characteristics application defined benchmark 
transactions listed table 
performance tpc expressed transactions minute defined number new order transactions executed minute 
table tpc transactions name characteristic percentage new order read write mid weight payment read write light weight order status read mid weight delivery read write stock level read environment study customer warehouse customer customer items warehouse warehouse district district district district district district customer tpc business environment customer customer database tpc benchmark consists tables 
relationships tables defined entity relationship diagram 
tpc tables relationships numbers entity blocks represent number rows table 
numbers factored number warehouses illustrate database scales 
numbers relationship arrows represent cardinality relationships average number children parent 
plus symbol indicates rows added table benchmark environment study runs 
order simulate skewness distribution accesses real applications non uniform distributed random number generator populate database generate transactions 
non uniform random function defined random random 
stands bitwise logical operation 
stands modulo 
random stands randomly selected uniformly distributed number 

runtime random constant affect distribution numbers affects hot values generated numbers 
tpc benchmark special rules way selecting alter performance 

constant affect skewness distribution random numbers generated 
integer lower bits value returned random affected 
affected bits probability value probability value value logical operation uniformly distributed bits 
larger value skewed distribution function generates 
district populated customers unique random names customers function select name names remaining customers 
shows cumulative density function popularity names initial database population 
popular name customers 
cross shows names customers 
cumulative density function proportion unique name distribution popularity name execution benchmark item table accessed new order payment order status transactions item id selected function 
customer selected customer table new order transaction function select random customer id customer selected payment order status transaction selected name generated function time selected customer id generated function time 
cumulative density functions popularity traces customers items referenced tpc transactions shown 
item id distribution skewed customer id distribution 
shown item ids attribute customer ids attribute 
cumulative density function item id client id proportion unique name distribution popularity item id client id system configuration experimental setup dbms studied research ibm db windows version 
benchmark runs ibm pc server discus lab 
machine configured mhz processors mb ram gb hard disks attached pci wide ultra scsi buses running windows nt server 
data transfer rate scsi bus mb second 
disks ibm st wc disks ibm 
disks rpm average seek time ms 
focus study server activities remote terminal emulators required tpc generate tpc transactions 
transactions generated dbms server tpc driver program think time transactions 
think time transactions removed test maximum throughput dbms achieve 
tpc driver program implements tpc benchmark developed ibm toronto lab 
tpc benchmark running users send oltp transactions dbms 
tpc database warehouses created test machine 
disk machine log file db 
buffer pool db configured mb large compared size database 
database created physical disks disks gb needed hold database gb 
get best throughput software raid raid organize multiple disks 
traces order trace buffer pool activities provide input simulator tpc benchmark executed 
execution benchmark disk pages may need fixed buffer pool 
trace point placed upper layer dbms buffer pool shown catch fix requests 
done changing source code db ibm toronto software lab utilize db trc tool coming db 
traces dbms fix requests tpc upper dbms layer buffer pool disks trace collection point trace point shows traces collected 
trace turned db trc shared memory trace buffer created 
requests passing trace point recorded trace buffer 
trace buffer hold trace information needed simulator time trace buffer full tpc driver program suspends notify db trc dump trace file resumes 
modification tpc driver program possible collect traces length 
db trc control information trace buffer disk driver db trace collection structure trace records necessary information related fix requests 
table presents fields trace record 
fix mode defines kinds fix exclusive shared 
page fixed exclusive mode read updated fix period 
page exclusive fix time 
page fixed shared mode read updated fix period 
multiple agents fix page shared mode time 
overhead associated data collection process system runs slowly recording trace 
reason orders aggregated fix requests agents buffer pool tracing tool turned may different tracing tool turned 
orders requests agent buffer pool trace characterization table important fields trace field value type type request fix user id user sends request object type type requested page index data table id table id requested page belongs page number logical page number requested page fix mode fix exclusive share modified page modified change 
agent db unique agent id stored record trace 
trace obtained separated sub traces agent ids sub trace contains records agent 
sub traces simulator 
order simulator compute throughput number transactions finished minute times transaction recorded tpc program 
transaction information inserted trace timestamp 
trace analysis collected pc server running tpc benchmark discus lab 
number warehouses tpc database 
trace includes buffer pool requests transactions 
trace characterization section analyzes behaviour traces collected 
presence locality common assumption designing replacement algorithm focus characterization 
locality different tables objects data indexes studied 
sequential access tpc benchmark accesses non uniformly distributed random sequentiality traces discussed 
explains lru stack depth analyze locality traces 
analyzes characteristics single user 
analyze characteristics users 
lru stack depth lru stack depth reflect locality particular trace 
measuring lru stack depth referenced pages ordered recency 
lru stack searched requested page 
lru stack depth number pages smaller recency page 
page moved top stack 
page stack lru stack depth infinite 
page referenced twice row immediate re noted 
buffer pool replacement algorithm immediate re buffer hit change behaviour buffer pool 
existence immediate re may locality trace appear better immediate re removed discussions 
cumulative density function lru stack depth probability describe locality lru stack depth 
buffer pool size buffer pool hit ratio buffer pool managed lru algorithm 
trace characterization characteristics single user tpc benchmark characteristics change time users identical characteristics 
trace records user 
preliminary analyses traces showed records user characteristics trace user 
records user analyses subsection long period characterize behaviour accurately 
characteristics shows lru stack depth distribution single user 
buffer hit ratio buffer pool size 
implies locality trace 
vertical line curve means pages infinite stack depth 
infinite stack depths generated page referenced time 
distinct pages 
cumulative density function characteristics different tables lru stack depth lru stack depth tables tpc benchmark see 
experiments behaviour table show exhibit different locality 
tables organized categories table focus discussions 
table tables different locality locality name tables excellent warehouse orderline district item order stock bad history customer shows lru stack depth tables warehouse orderline excellent locality 
warehouse stack depth greater 
warehouse smallest table pages 
warehouse accessed frequently transactions 
locality table due large part high popularity pages table 
orderline pages stack depth 
new order transaction new records inserted orderline 
records searched transactions 
result locality observed orderline 
trace characterization cumulative density function warehouse orderline lru stack depth lru stack depth warehouse orderline tables tables district item order stock locality 
lru stack depth plots similar shape 
clarity data tables item order stock plotted 
item table non uniformly distributed random access 
locality due highly skewed distribution accesses shown 
cumulative density function item stock order lru stack depth lru stack depth stock order tables shows locality history customer poor locality 
shows history locality pages infinite stack depth 
data appended history table accessed tpc benchmark 
pages customer infinite stack depth 
customer referenced non uniformly distributed 
exhibits poor locality non uniform random function customer table skewed see 
show sharp increase buffer pool hit ratio tables buffer size pages reflected knee figures 
page contains table rows index values upper layer dbms typically accesses database page times short interval 
called correlated 
period correlated occur called period correlated 
sharp increase buffer pool hit ratio caused correlated 
sharp increase trace characterization cumulative density function history customer lru stack depth lru stack depth history customer table reflect real locality page long term need considered designing buffer pool replacement algorithms 
lru algorithm parameter define period correlated re occurring period counted th 
algorithm length short term queue reflects estimation period correlated 
importantly figures show different tables different characteristics 
caused different ways applications operate tables 
data table accessed highly skewed manner item high popularity hot data cause high locality page table 
behaviour table guide partitioning buffer pool 
tables locality get high hit ratio small buffer pool 
hit ratio increase buffer pool space tables 
hand hit ratio tables poor locality keeps increasing buffer pool large 
result buffer pool need partitioned partitions tables locality put small partition tables poor locality put large partition 
characteristics data indexes structures data pages index pages different 
data pages linear structure stored sequentially disks 
accesses data pages random sequential exhibiting locality 
index pages employ tree structure facilitate fast search key values 
accesses index pages start root go levels tree search fails appropriate leaf reached 
different behaviour expected data pages index pages 
shows stack depth distribution data pages index pages 
data pages infinite stack depth locality index pages better 
analysis behaviour data pages index pages guide partitioning buffer pool 
data indexes different behaviour put different buffer pools managed dynamic partition algorithm 
recall shows customer table poor locality 
lru stack depths data pages index pages table shown 
nearly data pages infinite stack depth index pages locality similar index pages 
fact index pages similar access patterns 
trace characterization cumulative density function index data lru stack depth lru stack depth data indexes cumulative density function customer data customer index lru stack depth lru stack depth table customer characteristics multiple users analyses requests generated single user 
users dbms time case tpc benchmark different users share pages database 
aggregate behaviour affected sharing 
workload change time requests sent user analyses 
shows lru stack depth trace user users 
buffer pool larger pages hit ratio trace users similar trace user 
tpc benchmark users access database pattern defined non uniform random generator 
similar single user case sharp increase buffer pool hit ratio small buffer pool sizes pages indicates correlated 
correlated different users interleave period correlated increases number users increases 
seen knee occurs larger buffer pool size 
buffer pool replacement algorithm needs estimate period correlated lru parameter tuned summary workload get performance 
summary cumulative density function users users lru stack depth lru stack depth users report analyzes behaviour tpc benchmark 
correlated exist tables 
period correlated affected type tables type objects data index number users 
period correlated parameter buffer pool replacement algorithm lru parameter tuned factors 
different tables exhibit different behaviour depends accessed applications 
data pages index pages exhibit different behaviour 
index pages tables similar locality 
behaviour different tables data index pages buffer pool effectively partitioned group pages similar properties partition 

chou dewitt 
evaluation buffer management strategies relational database systems 
proceedings th international conference large data bases vldb pages stockholm sweden august 
codd 
relational model data large shared data banks 
communications acm 
loomis 
logical internal physical behavior database systems 
acm transactions database systems june 
johnson shasha 
low overhead high performance buffer management replacement algorithm 
proceedings th international conference large data bases vldb pages santiago de chile chile september 
kearns 
locality hierarchical database systems 
ieee transactions software engineering se march 
kearns 
diversity database behavior 
proceedings acm sigmetrics international conference measurement modeling computer systems volume acm sigmetrics performance evaluation review pages berkeley ca may 
neil neil weikum 
lru page replacement algorithm database disk buffering 
peter buneman sushil jajodia editors proceedings acm sigmod international conference management data washington may pages 
rodriguez 
empirical data behavior data base systems 
computer november 
smith 
sequentiality prefetching database systems 
acm transactions database systems september 
transaction processing performance council 
www tpc org 
tpc benchmark www tpc org 
tpc benchmark www tpc org 
verkamo 
empirical results locality database referencing 
proceedings acm sigmetrics international conference measurement modeling computer systems volume pages austin tx august 
