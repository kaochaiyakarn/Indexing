trace driven analysis long term evolution gnutella peer peer traffic william chandra university notre dame notre dame usa cse nd edu 
peer peer applications gnutella evolving address observed performance issues 
analyze gnutella behavior 
time protocol evolved address problems overhead overlay maintenance query traffic bandwidth 
goal understand newer protocols address prior concerns 
observe new architecture alleviated bandwidth consumption low capacity peers increasing bandwidth consumption high capacity peers 
measured decrease incoming query rate 
highly connected ultra peers maintain connections forward queries increasing outgoing query traffic 
show changes significantly improved search performance 
effective success rate experienced forwarding peer increased 
queries forwarded peer result query hits 
average query size bytes neighbors ultra peer results gb wasted bandwidth hour session 
outline solution approaches solve problem systems viable diverse range applications 
years peer peer systems popular platforms distributed decentralized applications 
applications gnutella kazaa overnet edonkey widely behavior performance studied widely :10.1.1.160.7346
gnutella popular shown suffer problems free riding users high bandwidth utilization poor search performance 
number users network growing ultra peer architecture dominant solving problems bandwidth utilization search performance increasingly important long term viability gnutella filesharing applications 
analysis trends gnutella traffic 
examined large scale macro behaviors determine supported part national science foundation iis cns 
gnutella traffic evolves long term 
captured traffic compare message rate bandwidth utilization queueing properties gnutella message type determine changes characteristic behavior gnutella traffic long term 
percentage bandwidth consumed message type changed considerably 
studied localized behavior query success rate experienced peers forwarding queries network 
overwhelming majority queries forwarded peer yield query hits back forwarding peer 
show earlier changes gnutella protocol achieved intended benefits alleviating poor search performance high bandwidth utilization 
gnutella overview describe gnutella system 
gnutella popular filesharing application 
gnutella users connect form overlay network 
overlay search content shared peers 
gnutella protocol distributed decentralized protocol 
peers issue request messages flooded neighbors 
neighboring peer turn forwards request neighbors specified time live ttl reached 
flooding mechanism allows reaching peers quickly overwhelm available network bandwidth 
describe major versions gnutella protocol 
protocol original gnutella protocol assumed gnutella peer equal terms capacity participation 
protocol specified major messages ping pong query 
protocol specified messages push requests messages rare represent significant percentage messages sent gnutella network 
ping pong control messages gnutella clients discover peers network 
ping query messages flooded neighbor 
flooding continues ttl request reached 
responses pong messages routed back originator path request 
peer receives query message evaluates query string determines shared content satisfy query 
peer sends back message path received query 
message contains information number objects match query ip address port peer objects located set results including file name size matching object 
protocol gnutella popular size network amount traffic network increased 
increase network traffic coupled poor internet connections users overwhelmed peers terms routing processing messages 
order overcome performance limitations original protocol introduced 
new ultrapeer architecture reduced incoming query message rate lowering bandwidth requirements process queries 
show architecture change eliminate problem high bandwidth consumption shifted different place network 
specifically protocol requires ultrapeers maintain connections 
related saroiu ripeanu studied aspects gnutella file sharing network 
authors discovered new clients tended connect gnutella peers connections 
led overlay network graph representation node degree distribution power law graph 
authors identified users share content free ride large percentage nodes poor network connectivity 
problem free riding gnutella revisited 
authors greater number users percentage total users free riding gnutella 
queries forwarded free riding users yield responses 
free riding users degrade high level utility system low level performance closely related 
aim analyze evolution tier architecture respect topological properties network 
authors measured increase number nodes network showed nodes began transition protocol network unbalanced respect number leaf ultra peers 
showed modifications major gnutella client software rapid adoption rate users helped restore overlay desired properties 
similar analyze gnutella evolution architecture 
focuses evolution traffic characteristics query performance 
allows better understanding effects architectural changes system 
understanding evolution system workload enables better decisions changes system facilitates better modeling simulation large scale networks 
results methodology captured traces weeks may june october june september 
modified source code open source gnutella client written java log traffic network 
client connect network log incoming outgoing message passed 
important note traffic capturing client actively probe system logs messages receives forwards 
log entry contained fields timestamp gnutella message id message direction incoming outgoing message type ttl hops taken size message 
addition logging incoming outgoing messages client logged queries query responses separate log files 
queries logged query string 
case query responses log contained gnutella message id original query peer id matching objects located list matching objects includes filename size file 
original protocol separate classes peers 
traces collected client running regular peer 
protocol peers classified leaf ultra peers 
traces captured client acting ultra peer 
client allowed run hours day logs partitioned hour interval ease processing 
traces give insight evolution gnutella traffic years 
data traces evaluate design choices 
interest space results hour trace typical weekday 
day week thursday traces year 
analysis days show similar results weekends showing traffic weekdays 
summary data average number messages incoming outgoing handled client hour interval 
average file size hour trace mb mb 
represents gb data hour period 
hour trace saw different peers directly connected 
client saw different peers directly connected period 
traces saw fewer peers studies show network grown time 
reduction number peers seen client attributed trend longer session times 
sessions lasted minutes 
sessions lasted longer minutes 
longer session times imply slower churn rate connections node client see connections session times peers longer 
important note data shows characteristics consistent evolution protocol respect ttl hops taken messages 
bandwidth data somewhat skewed 
investigation data revealed client attempted act ultra peer able maintain connections 
contrast client able maintain connections consistently 
traces client running leaf node show different behavior significant reduction bandwidth leaf nodes 
message ttl analysis table 
mean ttl left hops taken different message types hour period data messages control messages query messages ttl left hops taken ttl left hops taken ttl left hops taken ttl number hops taken give indication far messages travel network 
table shows mean ttl number hops taken different classes messages hour trace traffic 
messages travel hops network 
messages required hops reach logging client arrived mean ttl left 
similarly messages travel hops network requiring hops reach client arriving ttl 
contrast traffic travels hops network requiring hops reach client arriving mean ttl left 
change attributed protocol 
new protocol typically restricts initial ttl message hops reduce burden network due flooding ultra peers neighbors 
closer inspection ttl left hops taken different types messages reveals change traffic characteristics different message types 
control messages ping pong traveled network propagated peers 
average control traffic mean hops taken mean ttl left 
contrast control traffic mean hops taken mean ttl left 
messages arrive node similar distances expected propagated far 
control traffic query traffic expected propagated node 
addition ttl left query traffic remained fairly stable 
note trend 
control messages traveled deep network hops compared hops 
contrast query messages traveled hops hops 
shows query messages travel deep network 
attributed transitioning current state protocol 
protocol specification sets guidelines values set initial ttl message 
vendors gnutella clients begun set lower ttl values query messages continued ttl control messages 
vendors transitioned lower ttl values messages 
figures show hourly mean ttl hops taken control query traffic respectively 
traffic represents data hour traces 
note ttl left hops taken message remain relatively constant day bandwidth consumption number nodes network fluctuate day 
observation develop traffic models simulating filesharing workload 
ttl traffic traffic hour day ttl left hops taken traffic traffic hour day hops taken fig 

mean hourly ttl hops taken incoming control messages hour period traffic 
bandwidth analysis section analyze traces identify changes bandwidth consumption 
track bandwidth utilization control ping pong query queries query hits route table update messages 
limit control messages basic ping pong messages overwhelming majority non query messages 
additionally tracking route table updates separate basic control messages determine behavior network evolved respect message type 
note show bandwidth consumed peers downloading objects 
examined bandwidth utilization tracking bandwidth requirements message type 
shows bandwidth utilization message type hour period traffic respectively 
query traffic dominates bandwidth utilization 
amount query traffic ttl traffic traffic hour day ttl left hops taken traffic traffic hour day hops taken fig 

mean hourly ttl hops taken incoming query messages hour period traffic 
varies different times day control traffic remains relatively stable entire day 
traffic exhibits different properties 
query traffic represents significantly bandwidth going query traffic dominant consumer bandwidth 
control traffic incoming outgoing plays larger role current protocol route table update traffic 
changes bandwidth day pronounced incoming outgoing query traffic control traffic remains relatively constant day 
increase route table update traffic attributed fact clients new protocol 
clients moved new protocol see rise number route table update messages sent system 
evolution gnutella protocol network results traffic characteristics different 
control route table updates represent small percentage total bandwidth utilization 
control traffic significantly prominent respect percentage bandwidth utilization 
additionally route table updates non trivial message category messages virtually non existent 
characteristics query traffic change dramatically 
query traffic incoming outgoing dominates bandwidth utilization 
query traffic consumes large percentage bandwidth 
outgoing query traffic consumes large amount bandwidth 
incoming query traffic uses bandwidth control traffic 
result evolution protocol specification 
protocol establishes ultra peers peers neighbors 
ultra peers collect information files shared leaf nodes information respond queries 
saw earlier message ttl decreased protocol fewer messages sent network 
additionally query routing protocol attempts minimize bandwidth kbps control traffic control traffic query traffic query traffic traffic traffic hour day traffic bandwidth kbps control traffic control traffic query traffic query traffic traffic traffic hour day traffic fig 

hourly bandwidth different message types hour period traffic 
note curves wrap value hour period 
due gathering procedure required client shut hour trace processing 
client get restarted hour order accommodate processing 
problem fixed data capturing process 
number query messages sent 
node current protocol receive fewer incoming query messages 
ultra peers connections propagating queries neighbor results outgoing query traffic utilizing large percentage total bandwidth 
outgoing query bandwidth large absolute terms improvement relative outgoing query bandwidth reduced kbps kbps node ultra peer connections 
leaf peers benefit situation fewer connections receive incoming queries 
query traffic analysis previous section showed evolution bandwidth utilization different message types 
section show evolution query traffic 
interested examining relationship number query messages sent received success rate 
table shows summary query traffic measurements traces traffic 
values table typical hour interval 
query traffic constituted large component bandwidth 
see table peer receive query messages hour interval approximately queries second 
number significantly reduced queries hour interval queries second 
mean query message size bytes traffic queries second corresponds incoming data rate kb kbps 
data rate overwhelm home dial connections 
table 
query traffic summary hour trace 
queries received mean queries second query message size including header successful queries success rate mean queue time successful queries mean outgoing messages query mean outgoing bytes query kb kb kb mean outgoing query bandwidth kbps kbps kbps current state network reduced number queries received node expense requiring large number connections ultra peer nodes 
large number connections turn results large outgoing bandwidth utilization 
query basis traffic generated kb query traffic generated kb query 
query propagated peers average query propagated mean peers 
note bandwidth utilization lower compared 
client able operate ultra peer able maintain connections 
metrics incoming query rate consistent trend 
investigate ability network successfully resolve queries 
see success rate doubles 
success rate remarkably low 
success rate implies queries reach node resolved node propagates query 
means node utilizing bandwidth process queries effort wasted queries 
hour interval node receives approximately queries average size bytes 
queries propagated approximately neighbors resulting gb outgoing data gb wasted success rate 
limitations study described conducted single ultrapeer university campus 
may representative global behavior gnutella 
performed measurements peer broadband network different service provider observed similar results reported 
broadband studies conducted measurement analysis 
ascertain consistency results broadband users results measurement analysis gnutella filesharing network 
showed gnutella architecture changed help alleviate query bandwidth utilization success rate queries shown significant improvements 
additionally bandwidth utilization problem alleviated low capacity peers leaf peers high capacity peers ultra peers experience increase query bandwidth utilization 
increase bandwidth occurs due large number neighbors connected ultra peers 
findings indicate despite efforts improve performance gnutella search performance limited design protocol 
investigating approach exploits underlying characteristics queries distribution objects system order improve search performance 

gnutella protocol 
dss clip com pdf 

gnutella protocol 
rfc gnutella sourceforge net src rfc draft html 

krishna gummadi richard dunn stefan saroiu steven gribble henry levy john zahorjan 
measurement modeling analysis peer peer file sharing workload 
proceedings nineteenth acm symposium operating systems principles pages 
acm press 

daniel hughes geoff coulson james 
free riding gnutella revisited bell tolls 
ieee distributed systems online june 

kazaa media desktop 
www kazaa com index htm 

overnet 
www overnet org 

gnutella client 
de 

yi qiao 
structured unstructured overlays microscope measurement view systems people 
proceedings usenix annual technical conference 

amir daniel reza rejaie 
long term evolution tier gnutella overlay 
ieee internet 

ripeanu foster iamnitchi 
mapping gnutella network properties large scale peer peer systems implications system design 
ieee internet computing journal 

stefan saroiu krishna gummadi steven gribble 
measurement study peer peer file sharing systems 
proceedings multimedia computing networking mmcn san jose ca usa january 
