network comput 
neural syst 
spikenet event driven simulation package modeling large networks spiking neurons arnaud delorme simon thorpe de route de toulouse cedex france arno salk edu thorpe ups fr biological neural network models face problem scalability limited computational power today computers 
difficult assess efficiency models solve complex problems image processing 
describe problem tackled event driven computation 
neurons emit discharge processed long average spike discharge rate low millions neurons billions connections modeled 
describe underlying computation implementation mechanism spikenet neural network simulation package 
type model build biologically compliant computationally efficient synaptic weights propagated second standard desktop computer 
addition large networks set small time steps ms significantly increasing computation time 
example method applied solve complex cognitive tasks face recognition natural images 
keywords event driven integrate fire parallel processing neural network biological simulations large simulations real time processing 

currently large number different software packages simulating neural networks 
designed simulating networks artificial neurons attempt model detailed biophysics neurons 
underlying units structure outputs typically consist single continuous value range 
systems widely applications wide range engineering financial areas regard useful tools computational 
spectrum sophisticated programs exist genesis neuron performing detailed biophysical simulations take account factors dendritic structure complex channel kinetics level detail difficult simulate large networks 
article describe spikenet object oriented neural network simulation package written code lies extremes 
spikenet available public download gnu public license 
sufficiently biologically realistic examine role temporal properties synchronous asynchronous spiking neurons sufficiently simple allow real time simulation large scale networks neurons 
spikenet uses event driven computation computationally efficient approach propagate spike lists neural networks 
briefly spikenet package intend describe details underlying computation 
note describes version spikenet available public download 
second version developed collaboration spikenet technology www spikenet technology com different objectives 
case underlying computational architecture considerably revised allow specific image processing applications run efficiently 
versions share number fundamental features precise details implementation vary considerably 
detail implementation spike propagation spikenet analyze implications biological modeling 
focus spikenet performance simulating largescale model organized groups neurons compare spikenet capacities event driven approaches 

methods spikenet development spikenet started laboratory initially application process natural images large networks integrate fire neurons 
spikenet spikes propagate event driven way time step activated neurons processed 
event driven approaches spikes propagated immediately buffered lists propagated 
neurons organized homogenous maps allow definition common basis neurons receptive field rf shifted depending neuron location 
features form basis computational power spikenet compared neural simulator packages 

neuronal units basic objects spikenet dimensional arrays call neuronal maps relatively simple leaky integrate fire neurons 
unit characterized small number parameters membrane potential threshold cases membrane time constant 
units model neurons behavior relevant biological computational perspective 
leaky integrate fire neurons lay detailed biological models 
biological modeling conductance hodgkin huxley hh models 
regain interest neurons due simplicity fact facilitate mathematical analysis populations spiking neurons computationally efficient hh neurons 
biological modeling tool neurons minor modifications model accurately single hh neurons 
jaffe provided evidence dendritic architecture neurons tends normalize synaptic integration single compartment simplification neurons unreasonable 
give rigorous definition neurons describe implementation spikenet 
membrane potential evolves firing threshold dv dt gl vl gl vl parameters conductance reversal potential voltage dependant leak current 
synaptic current due action neurons network capacitance membrane 
membrane potential reaches threshold spike emitted instantaneously reset resting membrane potential 
quiet conditions leak currents membrane potential real neurons converge equilibrium state 
updating membrane potentials neurons time step result dramatic increase computation time especially processing millions neurons lose efficiency gained event driven propagation spikes 
alternate solution update membrane potentials time neurons stimulated presynaptic spike 
absence stimulation assuming sub threshold dynamics membrane potential decays need calculated lead discharge 
knowing membrane time constant gl time lag incoming spikes allow calculate decrease membrane potential current time time update neuron synaptic current seen weighted sum equation incorporate changes membrane conductance higher biological plausibility equation syn spike syn wi respectively connection strength input neuron date discharge set afferent neurons 
vi reversal potential conductance synapse input neuron formula covers excitatory inhibitory synapses 
implementation spikenet simplest form step function moment discharge occurs value time step current leak output neuron result equation independent time step value 
biological plausibility implement simple double exponential decay function complex non linear behaviors 
neurons affected incoming spikes afferents 
certain input cells example retinal ganglion cell determined spike timing direct calculation depends stimulus 
electrophysiological studies shown cell behavior inputs visual system approximated simple delay integrate fire neuron input current proportional activation value location 
context retinal ganglion cells perform local contrast extraction mexican hat convolution image value calculate latency unit spike earliest latencies correspond cells value convolution highest longer latencies correspond lower activation levels 
discretize process time sort activation values determine order neurons discharge 
sorting procedure represents lot computing time large input arrays algorithm regular sampling activation values sampling rate high obtain exact order 

neuronal projection spikenet neurons integrating activity receptive fields standard simulator packages event driven propagation activity means spiking neurons update target neurons 
need mechanism convert synaptic receptive fields efferent projections presynaptic neurons 
spikenet connections usually homogeneous means inside neuronal array map neurons share synaptic weights processing separate zones input space 
transforming input synapses output ones neuronal array maps equal sizes achieved mirroring convolution 
fact spikenet uses homogeneous projections understood biological point view 
example mammalian primary visual cortex generally assumed neurons detect orientation different locations visual field similar properties 
computer implementation possible synaptic pattern connectivity neurons 
hand neuron neuronal map receptive field synaptic weights non homogeneous receptive field case reconstruct lists output synapses neuron individually 
homogeneous implementations allow simulate neurons connections non homogeneous ones mainly focus homogeneous projections neuronal maps size 
note concerning neuronal map size spikenet implement projection neuronal maps different size case mechanism converts rfs efferent synaptic projections considerably complicated 
spike 
illustration homogeneous receptive field output neuron 
transformation rf projection field input neuron event driven propagation 
convolution synaptic weight mirrored 
illustration spike propagation gray levels output neurons representing different synaptic weights taken random case 
want emphasize computational purposes zero weights removed projection field 
computation seen matrix multiplications application dimensional arrays representing consecutive values pattern synaptic weights axis 
structure speed computation receptive fields ii facilitate development highly efficient vectored array computation opengl multimedia instruction sets sse altivec 

propagation spikes parallel applications describe dynamics spike propagation network core algorithm 
show algorithm extended parallel applications asynchronous communications processors preventing synchronization problems 
similar identical approaches implemented parallel virtual machine environment 
computation simple involves transfers lists spike 
described previously neurons organized topologically organized dimensional arrays neuronal maps 
maps organized circular list time step shown table 
map processed sequentially checking spikes triggered afferent maps previous time step 
input spikes propagated output maps output neuron membrane potentials modified checked see threshold exceeded 
map finishes processing removed circular list 
time step propagation finishes circular list collapses 
table illustrates propagation simple model neuronal maps processed remote computer 
propagation map centered processing maps just pick information need spikes locations maps 
input maps network maps purely passive simply store spikes lists provided processing maps 
information available network map receive list spikes network processing map skipped map remains circular list processed turn 
case parallel implementation accesses network asynchronous loop means occur time just suspend current computation affecting 
main loop time step organize neuronal map pointers circularly include maps afferent maps projecting 
pointer pointer map loop reset afferent map processing flags map map map processed number afferent maps false number maps circularly organized test circular list empty number afferent maps pointer scan afferent maps pointer available pointer afferent map spike list pointer map processed test afferent spike list available pointer process afferent spike list pointer afferent map process spike list pointer map processed true update afferent map flag istrue pointer map processed test afferent map flags remove map pointed pointer circular map list pointer map pointer circular list decreases number pointer circular list pointer map pointer circular list go map circular list processors code interrupt processing asynchronously network interruption remote map store incoming spike list local map local map local processor spike list repository map perform processing available spike list maps process efferent maps table 
pseudo algorithm depicting algorithm implemented spikenet process lists spike 
line note incoming spike lists processed neurons discharge added list spike map processed cases inhibition process little bit complicated 
list spike processed maps time step 
processing input neuronal maps described simply involves making available pre computed list spikes time step 
case parallel implementation list spikes dispatched network soon processing map terminated 
asynchronous processing lists spike provided processors network 
complex glance algorithm simple neuronal maps time steps pick lists spikes afferents propagate 
organized neuronal maps circular list collapses time step case parallel implementation allow processors skip nodes input spike lists ready 
note intra map connections processed exactly way external map connections object oriented approach map processes different lists spikes way regardless origin 
neuronal processing inside map construction lists spike map performed standard fashion 
neurons projecting neuron fires added list spikes map belongs 
time step weight synapse neuron neuron added target neuron potential spikenet tests see potential neuron exceeded threshold 
neuron potential reset subtracting threshold neuron added list neurons fired current time step map belongs 
note standard event driven approaches propagation spikes fully asynchronous require time step occur 
discuss section approach relevant processing neuronal maps spikenet 

illustration spikenet algorithm 
example simple model local maps retina map map remote map named network map processed computer 
arrows indicate direction projections neurons map 
flow information map centered view 
time step maps organized circular list 
time box map represents list spikes simplicity dt 
processing time step local map map perform computations 
remote computer sends results time step provides list spikes network map 
information received asynchronous way local processor meaning waiting delay associated communication 
circular list shrinks map completes computation removed circular list network maps really computation local computer inserted circular list better readability 
circular list collapses maps finished processing input spikes 
point algorithm proceeds time step 

learning algorithms implementing learning algorithms imposes constraints spikenet learning mechanisms update synaptic weights neuron depending history input synaptic spikes neuron 
instance neurophysiological studies shown synapse plasticity depends relative timing presynaptic postsynaptic spikes 
need keep synapse activated convenient way keep pre synaptic spikes 
keeping previous presynaptic times discharge spikenet easily reconstruct history synapse update synaptic parameters depending history 
implemented mechanism simulation emergence orientation selectivity primary visual cortex 

results performance spikenet implemented various applications spikenet ranging face detection recognition natural images unsupervised learning primary visual cortex motion processing visual areas 
spikenet mainly model feedforward propagation visual system suited simulate network organized topological maps 
specifically designed purpose spikenet model randomly connected networks neurons 
spikenet designed computationally efficient 
advantages comes efficient ram 
number parameters neuron kept low neuron require little bytes memory depending type numerical precision required 
importantly shared synaptic weights homogeneous projections means set weights neurons array 
shared weights neuronal maps biologically unrealistic instance visual system neurons similar selectivity different positions visual field 
result perfectly reasonable simulate networks tens millions neurons billions synapses standard desktop computers 

result simulation real time variable number integrate fire neurons variable number synapses dt ms 
neurons implement equation decay function simulating fast shunting inhibition explained text 
simplicity model layers neuronal maps size layer emitting spikes second integrating spikes neuron count second layer taken account 
fixed number synaptic connection determined number neurons simulate real time hz 
considered conditions neuron separate set synaptic weights neuron set synaptic weights shifted depending position neuron neuronal map individual weights able go certain number synapses memory limitations computer 
cases relation roughly linear implies computation time depends number synapses updated 
shared weights computation efficient reaches maximum synapses neuron optimal cache memory processor 

real time computation speed main advantage spikenet computation speed potential application real time modeling 
simple integrate fire neurons spikenet update roughly connections second sensitivity parameter modulate effect synaptic input standard mhz macintosh powerpc processor 
sufficient model network neurons real time time step millisecond assuming connections neuron average firing rate spike second value reasonable estimate average firing rate cortical neurons 
note conventional neural network simulation approach recalculate unit time step computational power allow connections calculated millisecond connections neuron limit real time simulation neurons 
typically complexity spike propagation algorithm number synapses updated second 
event driven implementations complexity depend time step value long synapses updated time step ndt 
increasing time resolution ms ms virtually effect computation time number spikes propagated change 
large network neurons discharging hz connected neurons connections processed second get time steps low assuming ndt significant impairment computation time 
performance clearly optimal shared weights neuron set weights obviously increases ram usage considerably speed drops factor 
adding decays equation simulate leaky nature synaptic integration process adds roughly computation time 

propagation set face images belonging learning base test bases 
global result network superimposed input image 
size image pixels requires network containing roughly neurons connections 
correct detection neuron selective particular face discharge region located center face 
black squares indicate correct recognition white ones false recognition 
despite size network simulation completed minutes cpu time modest desktop computer macintosh mhz 
network shows high resistance noise image degradation 
adapted 
entering details variation performances spikenet function parameter modifications result application 
simulation represents propagation feed forward wave spikes visual system architecture containing neurons connections details simulation see 
comparison biological modeling software problems simulate small groups neurons supercomputers 

parallel application running spikenet standard desktop machine reasonably quick described previously nature spikenet ideal candidate implementation parallel hardware 
factor usually prevents large scale parallel hardware amount communications needed processors 
problems sees little speed computation split processors 
spikenet information needs transferred processors lists spikes 
format spikenet means identity neuron fired transmitted bytes network neurons firing average spike second simulated real time saturating bandwidth cluster processors linked conventional fast ethernet technology mbytes second 
implemented spikenet cluster linux machines 
implementation parallelization described previous paragraphs asynchronous unix interruption tcp ip communicate processor 
preliminary simulations observed typically efficacy parallelization fast ethernet perfect parallelization 
higher levels parallelization need assessed detail working developing broadcast techniques udp minimize network load 

accuracy algorithm concerning accuracy spike integration membrane potential variation spikenet error order time step value dt lower modifications 
neuron fires time dt local error firing time order dt generated firing occurs systematically time dt assuming delay connection 
leads error membrane potential time dt epsp delivery date 
hansel proposed interpolate membrane potential variations time dt order calculate better approximation date discharge neurons 
global error order dt spikenet reset membrane potential neurons easily modified fit better approximation 

discussion showed spikenet able simulate efficiently networks large number neurons 
simplicity homogeneity algorithm appealing question biological plausibility neurons model real neuron behavior 
try justify simplifications look possible extensions integrate fire approach 

model approximation network behavior leaky neurons cover currently known neural network behaviors 
example oscillations alpha rhythms similar recorded brain observed populations neurons 
second golomb able find connectivity schemes neurons behave bistable units may form basis short term memory 
model hippocampus neurons behave associative memory converge stable attractors 
neural networks model macroscopic behavior real neural systems simulate behavior individual neurons 
instance leaky neurons model accurately real neuron spike discharges lateral geniculate nucleus authors argued simplification model unable capture underlying dynamic spike discharge 
low frequency discharge neurons indistinguishable hh neurons including rough dynamics voltage dependant channels 
shown adding bimodal intrinsic properties voltage dependant channels active membrane potential crosses threshold modeling continuous changes parameters real hh models action potential possible mimic real hh dynamics great accuracy 
comparison simple models imprecise lack duration action potential 
adding properties spikenet straightforward transient activation channels occurs time discharge onset 
discharge reset neuron potential calculated depending time lag separating current update process similar equation 
basic cellular model interesting including sensitivity parameter modulates effect incoming action potentials 
feature implement rank order coding scheme originally proposed thorpe 
scheme image propagation sensitivity parameter initially fixed decreases fixed percentage incoming impulse resulting progressive post synaptic neuron thought terms fast shunting inhibition visual system 
mechanism implemented extended version equation details see 
net result mechanism activation maximal spikes arrive order weights highest weight synapses activated 
parameters calculated rapidly including example calcium concentration 
neurons modeled updated time neuron receives spike 
long solution deterministic calculated difference update time incoming spikes process similar equation 
global analytical solution set differential equations governing neuron behavior calculated time step difference solution calculated derivative methods 
stimulation neuron compute underlying dynamics standard techniques order euler slightly modified second order runge kutta integration algorithm 
seen limitation spikenet process neurons discharge locked delayed discharge locked mean spikes triggered subthreshold dynamics 
possible model noisy integrate fire neurons 
real neuron behavior modeled accurately introducing noise neuronal potential keeping fixed threshold simply introducing noise threshold 
spikenet approximation model noisy neurons introducing random walk neuronal thresholds time neurons updated 
noise introduced synaptic connections latency input spikes 
detailed study necessary determine extent spikenet able simulate noisy integrate fire neurons accurately 

implementation delays synaptic dynamics real neural systems models spike stimulate efferent neurons different delays synapses activated just spike discharge activated 
simple way implementing delays postpone propagation lists spikes see del implemented similar mechanism delaying individual spikes 
spikenet delays discretized term time steps simplification restrictive see large increase number time steps impair computation speed 
standard time steps values spikenet range ms ms order accuracy needed model mechanisms 
illustrated delayed propagation associated stored lists spikes previous time steps 
synaptic models complex internal dynamics go simple full open closed synapses 
instance want implement alpha synapses conductance decreases exponentially transient rises 
dynamic synapses switch different states 
implement mechanisms discretize time maximum sampling rate number time steps second 
shown equivalent propagating different delays propagating spikes different times different synaptic weights 
delayed synaptic propagation standard time steps sufficient accuracy mechanisms 
delayed propagation take additional time compute simulation complex synaptic dynamics strongly impair computation speed speed virtually proportional number events synapses 

comparison software packages 
propagation delayed synapses 
square represents neuron upper neuron projects lower map neurons 
left upper neuron spikes connections processed current time step 
right synapses processed time steps introducing delay synapse propagation 
complex synaptic dynamics 
propagating synaptic weight different delays gray bars approximate synapses complex conductances dark curve brightest bars processed darkest ones 
comparing spikenet neural simulation packages quite hard 
packages typically model detailed neuronal mechanism standard techniques review bit outdated reflects state biological modeling software see deal entities hardly linked real neuron firing rates 
spikenet simulators lie extremes 
spikenet far aware event driven software package kind available public download internet event driven approaches developed 
compared event driven approaches map centered processing technique prevents problems inherent synchronization parallel program flows 
alternate solution implemented propagate list spikes eventdriven way soon lists spikes generated propagated network 
lists spikes organized stack filled initially input lists spikes 
time map generates list spike spikes stack propagated popped touched targets 
standard event driven approach may efficient process individual neuron activity may optimal neuronal maps neurons map supposed updated synchronous fashion 
map connected map spikes propagated 
problem implementation maps recurrent excitations indefinitely excite blocking computation implement controls counteract side effect behaviors 
parallel applications purely event driven approach generate strong synchronization problems case small groups neurons gra mann personal communication 
map centered processing solution developed holds advantages parallel applications 
processing cluster processors preserves structure single processor propagation computation cluster processors implemented new kind map network repository maps provide lists spikes just input map main circular list remains blind minor change 
limited bandwidth clusters processors spike propagation uniformly distributed time 
case map centered solution implemented sequential processing maps lists spikes sent continuously network asynchronous way 
structure helps storing lists spike previous time steps learning biological modeling purposes 
difference spikenet neural network packages concerns scale simulations 
instance simulation sizes spikenet order magnitude larger event driven approaches 
event driven approaches authors aimed modeling detailed networks intermediate size 
instance network described contained neurons total connections 
computer similar processing power network simpler units neurons synaptic connections 
neural network packages memory organization processing spikenet suitable compute visualize results large neural networks 
computational power biological relevancy large networks fire neurons simulating event driven computation popular understanding behavior real neural networks 
assuming internal neuron dynamic deterministic showed implementation done highlighted benefits 
believe approach time labeled lists spikes simple straightforward 
homogeneous connections neuronal maps allowed scale network millions neurons billions connections far currently achievable neural network package 
primarily designed tool modeling biological neural networks level performance obtained spikenet variety tasks processing architectures developed spikenet perform cases substantially better conventional image processing techniques 
commercial www spikenet technology com produced highly optimized version spikenet specifically designed image processing applications differs number ways version described 
particular commercial version lacks open architecture publicly available version making difficult investigate novel network architectures connection patterns 
hand commercial version uses particular set predefined processing strategies possible specific computational techniques go sorts performance levels described 
versions share underlying features relying relatively sparse spiking event driven simulation techniques allow simulation large networks highly interconnected arrays neural processing elements 
wish roland suri paul comments manuscript 
supported inria institut national de recherche en informatique automatique 
hines neuron simulation environment neural comput vol 
pp 

bower book genesis exploring realistic neural models general simulation system second edition ed springer verlag new york 
watts event driven simulation networks spiking neurons advances neural information processing systems vol 

san mateo ca morgan kaufmann publishers pp 

delorme thorpe spikenet simulator modeling large networks integrate fire neurons neurocomputing vol 
pp 

fast digital simulation spiking neural networks integration int neural syst vol 
pp 

del efficient event driven large networks spiking neurons dynamical synapses neural comput vol 
pp 

thorpe rapid visual processing spike asynchrony neural information processing system vol 
michael thomas ed mit press pp 

recherches sur des comme une physiol 

gen vol 
pp 

hodgkin huxley quantitative description membrane current application conduction excitation nerve physiol 
london vol 
pp 

gerstner population dynamics spiking neurons fast transients asynchronous states locking neural comput vol 
pp 

hansel meunier numerical simulations integrate fire neural networks neural comput vol 
pp 

conductance integrate fire models neural comput vol 
pp 

kistler gerstner van hemmen reduction hodgkin huxley equations single variable threshold model neural computation vol 
pp 

jaffe passive normalization synaptic integration influenced dendritic architecture neurophysiol vol 
pp 

reich victor knight power ratio interval map spiking models extracellular recordings neurosci vol 
pp 

goddard hood parallel genesis large scale modeling computational neuroscience trends research plenum publishing ny pp 

goddard hood howell hines de portable large scale plug play modelling neurocomputing vol 
pp 

regulation synaptic efficacy coincidence postsynaptic aps science vol 
pp 

delorme thorpe network integrate fire neurons rank order coding spike timing dependant plasticity emergence orientation selectivity neurocomputing vol 
pp 

delorme van thorpe rapid object recognition asynchronous feedforward processing th european conference visual perception trieste italy 
van delorme thorpe face processing spike biosystems vol 
pp 

delorme thorpe motion processing spike neuron ninth annual computational neuroscience meeting 
delorme thorpe face recognition spike neuron resistance image degradation neural network vol 
press 
alexander wright aldous alpha rhythm emerges large scale networks realistically coupled model cortical neurons network vol 
pp 

golomb ermentrout continuous traveling pulses neuronal networks delay spatially decaying connectivity proc natl acad sci vol 
pp 

mcnaughton path integration cognitive mapping continuous attractor neural network model neurosci vol 
pp 

hopfield herz rapid local synchronization action potentials computation coupled integrate fire neurons proc natl acad sci vol 
pp 

reich victor knight kaplan response variability timing precision neuronal spike trains vivo neurophysiol vol 
pp 

thorpe spike arrival times highly efficient coding scheme neural networks parallel processing neural systems hartman eds 
amsterdam elsevier 
tsodyks pawelzik neural networks dynamic synapses neural comput vol 
pp 

de consumer guide neuronal modeling software trends neurosciences vol 
pp 

delorme thorpe spikenet event driven simulation package modeling large networks spiking neurons world wide web publication ed 

