space efficient algorithms data streams histograms paul van tilburg department mathematics computer science eindhoven university technology paul net february survey looks algorithms deal massive data sets streaming data particular 
addition reviewing data streaming models common problems applications space efficiency required explores technique constructing approximate representations data set summarising frequency values called histograms 
types histograms discerned discussed separately optimal equi width biased histograms 
field information processing database systems particular algorithms deal massive data sets 
eventually leads problem data storable anymore situation takes long retrieve entire data set just parts 
means data processed flows 
streaming algorithms algorithms process data flowing fashion single pass cases multiple passes 
data stream defined sequence data items read algorithm 
definition basis term data stream 
data streaming models area streaming algorithms discussed section 
explores area data stream algorithms general section introduce data stream models discuss common space efficient algorithms 
interesting area applied considered 
section focuses creating approximate space efficient representations data set constructing histograms 
data set distribution representing histograms large database systems useful monitor database contents query execution processing optimised 
occurring usage histograms monitoring internet traffic 
internet packet headers contain source destination addresses 
histogram packet destinations router real time routing load balancing decisions 
able log traffic space constraints routers summarise traffic space efficient manner keeping count traffic unfeasible 
types histograms different purpose discussed separately optimal equi width biased histograms 
section section contain concluding remarks related 
common algorithms section focuses part algorithms common data stream models 
models space efficient algorithms commonplace famous discussed approximate difference algorithm fk approximation frequency moments algorithm 
henzinger introduce dichotomy data stream algorithms characterise algorithms 
pass multi pass algorithm algorithm processes items data stream multiple iterations respectively 

deterministic randomised algorithm algorithm yield fixed result random element yielding different results 

exact approximate algorithm algorithm yield optimal solution approximation optimal solution 
guha koudas mention important distinction data stream algorithms considered 
agglomerative fixed window algorithm algorithm considers items start stream considers elements due memory constraint 
deal pass algorithms algorithms consider data streaming fashion processing 
case histogram constructing algorithms 
discussed algorithms deterministic randomised exact agglomerative 
data stream models able talk data streams model 
muthukrishnan presents common models deal data streams 
models input data stream items 
underlying signal function 
number signal elements arbitrary range ai denote state ai received 
models give interpretation items ai relate elements signal time series model ai corresponds increasing order number items received possible values items 
example data stream stock values amount ip traffic certain router received minutes 
cash register model ai increment value elements item seen tuple inci element indexed increment inci 
mean arriving item ai ai inci 
popular data stream model 
possible application model monitoring ip traffic 
destination hosts 
turnstile model model known names name suits intuition model 
turnstile model general version cash register model 
considers increments elements updates fully suit dynamic situations inserts deletes 
model inspired subway train station keep track number people station counting people moving station 
ai update value elements means ai tuple updi element index update updi 
item arrived ai ai updi 
strict version turnstile model assume ai turnstile model suit application histogram construction trying approximate number entries certain database inserted deleted 
note case just count incoming traffic cash register model suffice 
specific form turnstile model assume usage strict turnstile model 
histogram construction instantiate model number signal elements value range difference algorithm difference algorithm solves problem data streams ai bi compute difference ai bi functions space efficient way 
algorithm categorised pass randomised approximate agglomerative algorithm earlier dichotomy 
practical application algorithm indicate extent amount traffic differ different routers different time intervals 
algorithm algorithm shown algorithm listing assumes input stream arbitrary interleaving data streams assumes maximal value number items known 
data stream items ci ai bi arrive considered tuple ci ci 
sample spaces indexed ranges specified algorithm defines family random variables vi variable vi value constructed seeds si turn derived master seed random variables constructed way bad wise independent section 
sample space algorithm keeps running sum initialised 
algorithm difference algorithm difference ci log zk pick master seed sk implicitly defines vi tuple ci log zk zk return ci vi algorithm encounters tuple ai add ai vi running sum sample spaces 
conversely tuple bi encountered algorithm subtracts bi vi effect contains sum ai bi random variables cancelling min ai bi variables 
result know ai bi terms squares random variables contribute square running sum 
cross terms vi contribute approximation 
steps algorithm described simultaneously performed sample spaces indexed log ensure performance requirements met 
output median average square running sums zk sample spaces 
performance feigenbaum algorithm performance data stream items ai bi maximal value algorithm computes probability approximation difference functions space log log log time log log log log log process item 
proof algorithm meets performance section 
correctness discuss sketch correctness proof show algorithm outputs random variable avg probability 
full proof see section 
know zk max ai bi min ai bi vi min ai bi vi vi added max ai bi added 
compute 
relabelling indices pairwise independence vm compute vm vm 
vm bad wise independence properties random variables vi compute 
bi ai var 
yk avg zk average var yk know pr yk var yk chebyshev inequality 
yk median iff yk half probability happens chernoff inequality 
frequency moments frequency moments provide generic way looking properties stream data items 
cash register model frequency moments data stream numbers fk kth power amount occurrences frequency value 
aj number distinct values data stream 
length stream 
note contains approximated histogram data stream 
fk captures skew data 
algorithm alon basic algorithm determining approximation fk data stream 
provide optimised version optimisation suggestions discussed 
basic approach similar difference algorithm attempt computation random variable algorithm fk approximation algorithm fk approximation ci log kn choose random 

aq ap xk rk factor return xk pr yk fk fk expected value equals fk 
algorithm shown algorithm listing pass randomised approximate agglomerative algorithm 
var yk assumes median yk log 
chernoff inequality probability half yk variables deviate fk fk 
considering space wise performance variable costs log log space log kn variables 
space usage algorithm log log log performance correctness proof sketch follows show algorithm performance data stream items maximal value algorithm computes approximation frequency moment fk way fk fk probability space log log log correctness correctness proof fk approximation algorithm follows exactly structure proof difference algorithm 
shows random variables xk sample spaces expected value xk fk computes kn likewise defines yk average xk kn know expected value variance yk xk fk var yk kn chebyshev inequality probability approximation histogram algorithms histograms approximate representation data set summarising counting number occurrence value set called value frequency 
histogram captures distribution data stream item values 
useful applications histograms data streams visualisations data distributions statistical analysis database engines histogram optimise query executions approximately processing queries 
mentioned earlier histograms useful traffic logs summarise ip traffic 
babcock discern types histograms discuss separately remaining part section optimal histograms approximations distribution values minimising error function pairwise considers estimated number occurrences values real number occurrences 
equi width histograms histograms domain split buckets number occurrences bucket uniform buckets 
biased histograms histograms frequencies values threshold kept exact manner frequencies threshold approximated 
histograms called iceberg querying 
types optimal histogram common discussed 
optimal histograms numerous space efficient algorithms devised deal approximating data distribution 
heuristics provable quality guarantees 
jagadish give algorithms guarantees 
define data stream defined earlier models 
set values ai 

denote frequency occurs data stream fv 
define ordered value frequency vector 
fm distinct values 
histogram data distribution 
splitting frequency vector intervals called buckets 
fact discussing optimal histograms sure values frequencies values bucket approximate real data distribution 
jagadish propose kinds histograms space bounded histogram limit length histogram algorithm find minimises error function error bounded histogram limit error algorithm find smallest histogram error 
discuss algorithms kind second kind please refer section 
histograms algorithms require error function need common way define error real value frequency approximated value frequency 
common way squared error fk fk sum squared error defined interval sse avg avg algorithm optimisations sse error metric 
note error metric just easily 
algorithm algorithm algorithm listing basic optimal algorithm discussed 
pass deterministic exact agglomerative algorithm 
algorithm define sse represent smallest sse prefix vector buckets 
algorithm uses dynamic programming technique determine smallest sum square error sse sse optimal sse histogram 
computation set bucket boundaries sb updated reflect situation smallest sse 
algorithm space bound histogram algorithm space bound histogram sse min sse sse update sb accordingly return sb note computation sse table lookups values known 
algorithm explicitly mention boundary cases calculated trivial compute 
performance algorithm calculates value sse frequencies buckets performs nb calculations sse computation sss considers possible values ultimately select minimum value takes constant time computed lookup sse call sse 
space bound histogram algorithm uses time 
evidently uses log space sum square errors frequency value bucket 
value frequency values consequently sum square error storable log bits 
optimisations optimisation algorithm proposed section compute sse iterating 
exact details omitted result inner loop terminated sse calculated possible values algorithm takes time 
second optimisation proposed section partition frequency vector disjoint chunks arbitrary call space bound histogram algorithm chunks 
dynamic programming determine buckets divided chunks 
jagadish ascertain running time approximation approach uses time 
algorithms noted subsection numerous algorithms available problem 
famous algorithm fast algorithm gilbert algorithm set related algorithms contrived basic algorithm require space explain 
essence uses array sketches approximate result data stream updates see turnstile model constructs histogram desired accuracy number buckets time process updates maintain sketch time construct histogram space sketch bounded poly log log 
equi width histograms equi width histograms quite different kind algorithms deal problem 
paradigm solve problem quantile approach 
quantile divides data set equal sized partitions clearly analogous equi width histogram data set represented value frequencies 
greenwald khanna pass approximate agglomerative algorithm computes approximate quantile summary sequence elements precision worst case space requirement log 
algorithm keeps data structure tree tuples 
data item ai arrives algorithm create tuple ti ai supporting data rank insert tree accordingly 
th arrival data item inserted tree compressed deleting merging tuples 
times algorithm answer quantile query approximation number element arrived moment query 
specifics algorithm please refer 
biased histograms biased histograms iceberg queries database systems 
iceberg queries range huge amount data items answer frequently occurring data items certain threshold relatively small 
main problem queries target data items queries ranges time big fit memory 
fang strategies algorithms deal efficiently iceberg queries 
algorithms space efficient algorithms multi pass deterministic approximate 
note case iceberg queries fixed window notion bound memory 
data items meet threshold virtually omitted approximated 
discusses various space efficient algorithms 
difference fk approximation algorithms vast number data items compute property data stream space efficient way 
looked histograms represent data distribution space efficient way 
discussed briefly numerous algorithms available constructing histograms 
distinguished kinds histograms optimal histograms optimal histograms common 
subtopic surpassed multidimensional histograms 
thorough formal study kind histograms algorithms applications related data streams discussed please refer 
alon matias szegedy space complexity approximating frequency moments stoc proceedings eighth annual acm symposium theory computing 
babcock babu datar motwani widom models issues data stream systems proceedings acm sigmod sigact sigart symposium principles database systems 
fang shivakumar garcia molina motwani ullman computing iceberg queries efficiently proceedings rd international conference large data bases 
feigenbaum kannan strauss viswanathan approximate difference algorithm massive data streams ieee symposium foundations computer science pp 

gilbert guha indyk kotidis muthukrishnan strauss fast small space algorithms approximate histogram maintenance proceedings fourth annual acm symposium theory computing 
greenwald khanna online computation quantile summaries proc 
acm sig mod intl 
conf 
management data 
guha koudas approximating data stream querying estimation algorithms performance evaluation proc 
intl 
conf 
data engineering 
henzinger raghavan rajagopalan computing data streams 
hv jagadish koudas muthukrishnan poosala sevcik suel optimal histograms quality guarantees proceedings rd international conference large data bases 
muthukrishnan data streams algorithms applications publishers 
guha indyk koudas dynamic multidimensional histograms proceedings acm sigmod international conference management data 

