semantic wiki collaborative knowledge formation sebastian schaffert andreas gruber rupert knowledge information systems group salzburg research austria 
explore apparent problems adopting semantic technologies content management investigate methodology tool overcome barriers 
approach tries benefit networked collective intelligence social software obvious need methodologies defined explicit semantics information knowledge systems order support business processes 

semantic web 
years various approaches investigated called semantic web initiative view making meaning web data normally amenable human readers accessible machines 
semantic web research major research endeavours information technology world wide covering wide range technologies 
gartner report shows technologies close plateau productivity business rule engines infancy just emerging corporate semantic web 
particularly interesting term semantic web disappeared report peak hype cycle 
reflects perception semantic web collection technologies mature single technology 
semantic web gaining significant attention academia industry amount knowledge available formal representations accessible machines small compared traditional web 
major reason semantic web technologies tools require considerable technical expertise suited users outside field computer science 
knowledge engineering tools semantic web currently single user provide support collaborative creation formal knowledge 
hard domain experts knowledge engineers knowledge engineering tasks 
gartner hype cycle special report www gartner com social software 
hand social software wikis weblogs years significantly simplified creation content traditional web wikipedia known representative 
social software heavily collaboration users 
sense social software helps realise original vision web space participate 
dynamic nature growing amount content growing need semantics space partly machine accessible efficient searching navigation content feasible 
semantic web social software 
developments combining semantic web social software appears natural 
hand social software support creation semantically enriched content lowering technical barriers allowing domain knowledge experts collaborate 
hand social software benefit semantic annotations allow easier searching navigation integration content 
various sources see big step evolution web 
example nova convergence web social software semantic web 
typepad com nova weblog html nova article aim investigate social software help semantic web take 
short summary different knowledge representation formalisms section preliminary results done methodology helps users decide kind knowledge representation technology choose sections 
introduce semantic wiki system called ikewiki developed tool collaborative creation formal knowledge section 

knowledge models knowledge represented different levels formality wide variety formalisms 
languages owl rdf considered state art semantic web formalisms xml xml schema topic maps relational databases situations better suited knowledge representation 
term semantic web commonly associated complex formal ontologies successful knowledge models tend simple specific 
example known dublin core foaf models lom news ml examples simple successful knowledge models domains 
thesauri wordnet dmoz successfully state art software applications 
jim hendler little semantics goes long way 
hand complex knowledge models dolce widely accepted commercial settings research projects prototypes possibly gain acceptance near 
knowledge models known different names 
foundational domain sector group application ontology refer knowledge models level generality granularity scope 
term list thesaurus taxonomy ontology segment range knowledge models richness formal semantics 
ontology classification matrix step designing knowledge system identify kind knowledge modelled 
insight knowledge engineer decision modelling languages tools 
general distinguish different types knowledge models intended usage ontologies semantic models describing thematic part world 
top level ontologies concentrate semantic principles domain ontologies concentrate features specific certain domain 
avoid redundancy need ontology alignment scopes different domain ontologies overlap 
application service profiles aim capture semantics needed provide functionality 
typically combine semantic statements different domains different ontologies 
scopes different application profiles typically overlap especially applications business sector 
section propose scheme classifying ontologies properties scope expressiveness acceptance 
model nicola guarino traditional known scheme classifying ontologies widely accepted dimensional matrix scope formalisation 
extension splits scope dimension aspects model scope model acceptance 
conference chair opening speech international semantic web conference sanibel island florida usa october matrix model acceptance model scope level expressiveness sections explain dimensions detail 
final section provides example classifications known knowledge models 

scope model scope refers areas semantics interest model 
important understand scope restrict observable individuals observable features individuals 
individuals features inside model scope described invisible model 
model scope dimension model acceptance model scope top level ontologies core derived domain ontologies specific extensions level expressiveness classification scheme scope dimension intended ontologies 
application profiles typically include semantics different classifications defined scope dimension 
scope top level ontologies includes axiomatic concepts relations global relevance space time matter event action gies called foundational ontologies term usually indicates higher level expressiveness really convey intended meaning 
example simple list axiomatic terms serve top level ontology 
may top level ontologies scope means different top level ontologies integrated 
practice opt single top level ontology building application profiles 
scope domain level ontologies includes generic specific concepts relations specific thematic area 
tasks weather date time zones food examples generic domains wine beer pizza domains specific ones 
scope domain ontologies different domains wine beer overlap 
different domain ontologies domain similar scopes describe knowledge different semantics 
means alignment typically necessary domain ontologies describing domain typical example oo domain model relational data model require alignment mapping frameworks 
domain ontologies distinguish sub types core domains defining semantics dependent semantics domains derived domains combining extending definitions parent domains scope derived domains specific union scopes parent domains 
definition application profile important domain ontologies participating defining profile overlapping scopes 
implies domain ontologies toplevel ontology ontology domain 
specific extensions domain ontology build scope classification category 
extensions usually defined context distinct usage general knowledge model 
typically includes additional constraints existing resources new concepts properties valid context actual application 
independent possible application profiles ontologies described constitute interdependent framework call ontology stack 
stacks common strongly believe definition frameworks necessary improve granularity interoperability re usability ontologies 
ontology stacks improve semantic interoperability application profiles stack 

level expressiveness expressiveness dimension dubbed level formalism defined 
matrix existing classification scheme expressiveness dimension 
add aspect purpose category providing criterion required expressiveness 
scheme corcho shown 
model expressiveness dimension model acceptance model scope term list thesaurus informal hierarchy light weight ontologies formal taxonomy frame class property range value restriction heavy weight ontologies limited logical constraints expressive constraints level expressiveness corcho distinguishes main groups light weight ontologies heavy weight ontologies defines sub categories level expressiveness 
term list controlled vocabulary contains list keywords 
lists typically restrict possible values properties kind instance data domain 
thesaurus defines relations terms proximity terms 
informal taxonomy defines explicit hierarchy generalisation specialisation strict inheritance instance subclass necessarily instance superclass 
available dictionaries dmoz members category 
formal taxonomy contrast defines strict inheritance hierarchy 
frame class property ontology similar object oriented models 
class defined position subclass hierarchy properties 
properties inherited subclasses realised instances 
range value restriction defines addition restrictions defined properties 
possible restrictions data type domain 
logic constraints property values may restricted 
expressive ontology languages order logic constraints 
constraints may include disjoint classes disjoint coverings inverse relationships part relationships adequate level expressiveness knowledge model driven requirements usage 
john harris layers anatomy ontology 
apart layers zero ontology definition language operational data layers define possible purposes semantic model 
knowledge model part model data 
typically instances case semantics defined model annotate instances built part model 
common term lists thesauri taxonomies 
knowledge models purposes referred controlled vocabularies 

knowledge model data structure 
model mainly operational data application means instances created semantics defined model 
knowledge models referred data models typically implemented database management systems 
expressiveness needed knowledge model data structure approximately border light heavy weight ontologies 
practice relational objectoriented hierarchical models define models rdfs owl dl frequently 

knowledge model assertions define constraints 
case knowledge models particular ontologies application gain information individuals analysing constraints defined model integrity checking inferencing 
imposes highest requirements expressiveness model 
models requiring additional checks usually referred domain models typically hard coded business logic applications 
corresponding realisation semantic web technologies encode semantics formal ontology language order logic generic rule inference engine semantics operational 

model acceptance acceptance dimension useful classification knowledge models processes importance ontology engineering 
aspect clear target communities application knowledge model 
second aspect deals various methods building consensus specific community 
involved communities include intended users developers system 
far web distributed systems concerned wide acceptance important criterion successful applications 
model acceptance dimension model acceptance world model scope group sector individual community level expressiveness acceptance dimension ranges individual different levels communities worldwide acceptance model 
important notice transition higher level requires different methods tools 
individual seen starting point knowledge model creation process intended user 
knowledge model development start scratch attempts solve modeling problem done individual 
group level requires collaboration members group developers domain experts essential quality assurance knowledge model 
deployment application knowledge model level requires economic measurements models 
new kinds collaboration different stakeholders various methods integrated 
different stages development clearly defined life cycle model 
sector level applications needed user scenario includes sector 
consequently standardisation important condition reach level 
development knowledge models world level controlled various criteria scope methodology diffusion market mechanisms community needs 
perception impossible describe explicit constructive processes needed reach level 

classification examples matrix classify knowledge models section 
classification mainly expressiveness acceptance dimensions 
scope dimension importance analyse internal structure ontology stack main focus examples 
height vertical lines mark core category scope dimension associated knowledge model 
classification examples model acceptance world sector group dublin core card model scope individual term list top level ontologies core domain derived domain specific extensions thesaurus informal hierarchy word net dmoz taxonomy frame restriction dolce limited logical constraints expressive constraints level expressiveness lom lom austrian meta data cc pp specification learning materials dublin core card classified term lists define attributes value constraints card uses 
acceptance dublin core card near world different sectors various applications 
wordnet dmoz directory define informal hierarchies 
acceptance sector specific widely dublin core card 
ieee lom learning object metadata standard learning sector defines hierarchy elements value types value ranges 
cc pp standard defines frame structure rdfs 
primarily create instances profiles multimedia devices smart phones set top boxes 
dolce descriptive ontology linguistic cognitive engineering highly formalised ontology particulars intended system top level ontologies 
specific extension lom dublin core standard austrian metadata specification represents application profile 
lom standard basis classification model adds country specific taxonomy acts controlled vocabulary fill attributes defined lom 
org wg lom addition defines cardinality constraints identify optional required fields 
knowledge model classified heavy weight ontology 
acceptance dimension classified accepted level specific case sector country 
furthermore important notice different parts application profile possible create different external views export models 
omitting cardinality constraints taxonomy possible define lom compliant export models 
categorisation export model equal lom standard 
means accepted learning sector applicable interoperability applications sector 
conclude plane spanned expressiveness acceptance dimensions important measure complexity expect implementing semantic applications 
explains relatively simple models dublin core card high levels acceptance 
furthermore observable newer standards cc pp news ml come higher degree expressiveness indicating increasing need formalise semantics business sectors order increase effectiveness reduce costs 

methodology adequate tools gold rush phase semantic web cost perspective unsuccessful developments intelligent applications ontologies returning methodological questions 
sort vu ontology engineering software engineering methods architectures requirements analysis object oriented analysis design design patterns useful ontological engineering 
previous sections showed typical properties different knowledge models 
contrast methodology identify necessary characteristics knowledge model answer questions specify knowledge model 
ontology engineering infancy methodologies building ontologies serve basis integrated approaches important parts methodologies missing 
particular acceptance dimension far received little attention main distinguishing features ontologies compared domain models 
communities supposed accept knowledge model possibility contribute knowledge design process 
known knowledge engineering methodologies tools provide support collaborative 
diligent methodology provides process distributed engineering knowledge structure building local adaption analysis revision local update locally defined ontologies 
summarise methodology tools allow creation schemata scratch analyzing documents repeated occurrences databases management sense making processes concepts noticed emerging problems tools give support designing implementing ontologies support activities ontological life cycle defined software engineering methods ontology editors evaluated michael denny described having multi user support 
simple support collaboration cvs simple user management 
ontology editors provide basic collaborative features simple user management communication features notification changes instant messaging annotations views 
tools provide advanced capabilities allow collaboration subject experts engineers different views defined models 

semantic wikis introduce idea semantic wikis means support knowledge engineers task formalising knowledge 
conclude section presentation semantic wiki called ikewiki 

wiki idea traditional web called wiki systems successful enabling non technical users create web content 
wiki hawaiian quick fast essentially collection web pages allows users add content browser interface 
content usually expressed simplified hypertext format wiki syntax easier html humans grasp 
change wiki edits completely unrestricted usually edits undone rollback mechanism 
collaborative knowledge creation central aspect wiki system 
wiki pages accessible usable time content constantly evolves 
groupware content knowledge management tools wiki system gives users complete freedom content development process rigid workflow access restrictions predefined structures 
users need adapt practice dictate system allow practice define structure 
important different domains require different kinds workflow 
wiki systems currently wide variety purposes including encyclopaedia systems collect knowledge certain area unrestricted wikipedia community effort contributions wide range users software development collaboratively create documentation collect ideas track bugs today high profile open source projects apache mozilla wikis coordination project knowledge management brainstorming exchange ideas coordination activities coordination records meetings notepad common information items personal knowledge management sketchpad collect elaborate personal ideas addresses dates tasks bookmarks 
semantic wikis arguably wikis changed way content authored web 
sense helped realise original vision traditional web allowing participate freely share information 
leads question semantic wikis help realise semantic web way 
possible advantages semantic wikis include lowering technical barrier non technical users hiding extent complexity semantic web technologies rdf owl supporting evolution knowledge expressiveness axis cf 
section informal text formal ontologies similar representations allowing instant access usability knowledge completely formalised allowing collaborative creation knowledge model acceptance axis section domain experts ontology experts giving freedom knowledge creation process users org en main page www wikipedia org number systems integrate semantic web technologies traditional wiki systems currently development 

ikewiki ikewiki ike knowledge wiki fast prototype wiki system currently developed salzburg research 
ikewiki serves purposes annotate existing data semantic terms typing relationships pages improve searching navigation create instance data existing ontology limited tool creating editing ontologies 
purposes followed time possibly users different roles different levels experience knowledge engineering 
complex knowledge engineering tasks probably require kind collaboration 
ikewiki design goals compatibility syntax look feel existing systems currently wikipedia allows users take existing knowledge wikipedia import ikewiki formalising knowledge straight away compatibility existing semantic web technologies currently ikewiki uses rdf owl storing reasoning formal knowledge immediate exploitation existing formal knowledge enhanced navigation editing users need get instant reward additional effort put formalising knowledge easy access frequent tasks give users full capabilities complexity desire feeling application web site user interface support user wiki syntax providing modern graphical interaction system editing knowledge creation ikewiki supposed open community process experts different fields collaborate 
domain expert describing domain knowledge ikewiki point expertise knowledge technologies sufficient 
necessary knowledge engineering expert join help create formal representations 
constantly updated overview wiki org index php semantic wiki state art 
implementation ikewiki implemented java web application running tomcat server jena rdf library storing metadata 
upto date technologies ajax user interaction 
system freely available lesser gnu general public license ikewiki 

acknowledgments research partly funded projects fit semantic systems eu ist fp semantic knowledge systems 
authors rich morin cross readers suggesting important improvements article 

guarino formal ontology information systems pp 
www loa cnr papers fois pdf corcho fern ndez pez mez rez methodologies tools languages building ontologies 
meeting point 
data knowledge engineering pp 

john harris judging success ontology www net entries judging success ontology html 
version stand 
im des wissenschaft und dr robert fl www 
understanding ontological development 
communications acm 
april vol 
pp 

aldo gangemi ontology design patterns semantic web content 
proceedings iswc lncs pp 

mateo und survey ontology creation methodologies 
international journal semantic web information systems 
idea group publishing 
michael denny ontology tools survey revisited 
www xml com lpt html visited www loa cnr dolce html suo ieee org suo evaluations www cyc com 
