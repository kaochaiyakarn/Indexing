business process model transformation issues top adversaries encountered defining model transformations marion women postgraduate college internet technologies wit institute software technology interactive systems vienna university technology austria wit tuwien ac gerhard business informatics group big institute software technology interactive systems vienna university technology austria big tuwien ac keywords model transformation business process modeling languages due widespread meta modeling concepts model transformation techniques reached certain level maturity czarnecki 
defining transformations application areas case business process modeling challenge current transformation languages provide general solutions support issues specific distinct area 
aim providing generic solutions model transformation problems distinct area horizontal business process model transformations 
step endeavor reports pressing problems encountered defining business process model transformations 
companies discovered benefits business process modeling bpm business process bp models moved luxury article everyday necessity years 
companies thousands models describe business 
business changes years business business interoperability came new inventions communication companies merge arises need keep existing business models date synchronize translate contemporary bpm language 
facilitate scenarios model transformation technique bp models needed 
moment done area model transformations mts 
main research interest lies technical aspects mts example transformation languages verification model transformations 
model transformation languages atl zivin qvt omg frameworks general purpose programming languages java provide solutions research partly funded austrian federal ministry education science culture european social fund esf vii 
correspondences suited horizontal transformations case transforming bp models 
defining transformation bpm languages difficult task domain specific problems remain solved 
bpm languages distinct purpose illustration processes 
provide similar concepts modeler 
particular elements attributes express concept different bpm languages 
assumption exist generic solutions occurring problems currently developing framework provides solutions typical transformation problems applied generic meta model contains concepts participating bpm languages 
best knowledge supporting definition transformation problems distinct domain 
contribution overview problems confronted defining model transformations area bpm 
step focus control flow part bpm languages critical part defining bp model transformations 
reminder structured follows 
section puts context related 
section introduces different business process modeling bpm languages inspected section discuss pressing model transformation issues 
section summarizes gives insight ongoing 
related research differences equalities business process modeling workflow languages 
different focus analyzed compared languages 
wil van der aalst concentrated workflow systems developed workflow van der aalst resource russell data patterns russell 
patterns build analyze workflow bpm languages concerning expressiveness 
example 
russell white white inspected business process management notation bpmn uml activity diagram ad find far wf patterns represented languages aim assessing weaknesses strengths bpmn ad coverage business process modeling problems 
mendling epcs analyzed regard representation wf patterns 
additionally extended epc epc mendling developed covers wf patterns 
developed framework defines system architecture enterprise 
uses basic questions comprehensive view enterprise 
framework evaluate bpm languages example uml 

list compared different bpm languages 
focus lay business process context perspective evaluated expressive bpm languages modeling business goals metrics 
st compares epcs uml ad 
comparison structured syntax semantic pragmatic languages 
central question left open uml ad replace epcs long run 
focus important keep care case transforming business process models different bpm languages 
compares syntax semantics means meta model elements concepts provided control flow part different bpm languages specific focus differences languages differences affect model transformation 
business process modeling languages bpm languages adonis standard modeling language business process modeling notation bpmn event driven process chains epc uml activity diagrams ad inspected concerning bp model transformation issues described 
concepts illustrated meta models capture basic control flow part defined aalst basic control flow patterns language 
small core part bpm language taken demonstrate differences languages concerning model transformation 
inspections remaining concepts bpm languages scope 
adonis standard modeling language adonis standard modeling language provides different kinds model types cover different business aspects 
bp model model business processes control flow aspect 
furthermore integrate organizational information aspect 
focuses control flow aspect concentrate bp model see fig 

adonis graph structured bpm language implies example element process model 
integral model element activity 
sequence activities modeled means successor represents control flow adonis bp model 
depict process call process element sub process call 
control objects model flow control 
adonis bp model provides special element modeling merges alternative control flows 
furthermore decision element decision distinguish alternative split multiple alternative split 
adonis standard language business process meta model successor cond expression activity start business process model flow objects control objects called process sub process call decision parallel split parallel join sub parallel activity process start decision split join successor part adonis bp meta model concrete syntax uml activity diagram uml ad omg specification omg 
meta model fig 
contains small part uml language basic control flow elements uml activity modeling bp models 
opaque action activity edge controlflow guard string activity node control node opaque action activity action final node action activity final initial node join fork decision merge flow node node final control flow part uml ad meta model concrete syntax activity denotes different adonis bpmn bp model 
central element opaque action model activities process 
call behavior action represents concept sub process call 
control nodes structure process 
fork node join node provided express concurrent flow decision node merge node model alternative flow 
initial node marks process model 
ad differs final nodes flow final node ffn activity final node 
ffn mark final distinct flow means reached remaining tokens process proceed 
marks process means reached remaining tokens process killed immediately 
activity edge considered control flow connect activity nodes form flow control process 
business process modeling notation bpmn omg primarily introduced business process management initiative bpmi org adopted specification object management group omg 
designed graphical language describe business process models map business process execution language bpel web services ibm 
meta model illustrated fig 
shows elements model control flow aspect 
business process modeling notation task sequence flow condition string start event event sub process event parallel fork parallel join start event business process diagram exclusive xor event gateway decision task inclusive activity sub process decision merge parallel sequence xor fork join flow part bpmn meta model concrete syntax bpmn task central element process model 
sub process model sub process process model 
gateways depict different flows parallel alternative process 
model process model events 
core elements connected sequence flow form process model 
event driven process chains event driven process chains epcs keller introduced keller ttgens scheer 
epcs basically model processes 
focus main elements model integral control flow aspect bpm see fig 

event driven process chains control flow event process flow objects logical operator xor basic function event basic function complex function epc business process function xor complex function xor control flow part epcs meta model concrete syntax function describes activity 
creates changes information objects certain time 
event represents bp state related point time seen passive element compared function active element compare mendling ttgens 
model sub process call complex function 
logical operators elements structure proceed bp model 
epcs provide specific element indicate bp model therefor event 
event elements allowed front xor element 
function event elements alternate proceed bp model connected control flow 
restriction epcs branches parallel alternative split merged kind operator 
model transformation issues taken control flow aspect small part bpm language descriptions may sound similar lot differences concerning representation concepts 
introducing transformation issues consider differences bpm languages handled model transformation 
model transformations aim preserving semantics model 
unfortunately high ambition achieved 
possible example missing corresponding semantic concept stage requirements avoid loss information transformation 
obtained annotating target model elements example inserting information annotation attribute element reasons documentation back transformation 
possible alternative ask user provide user interaction decide happen distinct case 
happen target model semantically enriched mandatory elements target meta model 
case new information existing information created 
transformation issues encountered definition transformations bpm languages introduced section 
issue described name participating elements problem description 
different kinds examples provided establish understanding transformation problem 
illustrate solutions atl known transformation languages 
solutions look different transformation languages qvt problems remain 
decision un ambiguity adonis element decision express inclusive exclusive alternatives 
ads exclusive split modeled decision node inclusive split fork node guard conditions departing control flows 
bpmn epcs provide distinct element concept inclusive exclusive xor bpmn xor epcs 
transformation problem case transforming adonis models epc models decide decision exclusive inclusive split 
distinction depending conditions outgoing edges decision adonis main problem decide value cond attribute departing successors decision exclusive inclusive 
transformation problem illustrated means example transformation code atl adonis decision transformed epc xor rule decision xor adonis decision outgoing conditions epc xor rule decision adonis decision outgoing conditions epc function decides conditions exclusive 
unfortunately straightforward implementation various kinds exclusive conditions 
example true false antonyms general 
possibility check conditions words encyclopedia contains antonyms example wordnet miller 
invisible merger bpm languages inspected offer possibility model merger alternative split implicitly distinct element 
adonis mergers flows split decision implicitly modeled explicit merge element provided 
bpmn choice modeling explicit exclusive xor merger left user 
case transformation problem decide position process model implicit exclusive inclusive merge example see fig 

position xor merge inserted target model 
assigned download print known author 
update cv reviewed papers review fast review carefully invisible merge adonis reviewed central questions solve transformation problem find invisible mergers find corresponding split elements 
suggestion solve problem algorithm detects positions model successor leads element 
algorithm follow control flow backwards finds common split element 
easy case block structured models 
faced bpm language allows modeling graph structured models case languages algorithm provides partial solution 
powerful solution approach 
mandatory events epcs events mandatory 
required function event events functions alternate flow process model 
restriction epcs allowed model event followed xor element see semantics epcs keller mendling ttgens semantically corresponding element adonis bpmn intermediate events ad receive events specified 
concept events bpmn ad differs concept events epcs 
epcs events business states meaning process distinct state furthermore events mark process 
bpmn ad events represent external triggers model external influences interaction process 
events bpmn ad assigned interaction aspect bpm taken consideration 
activity start transformation problem decide insert events process model sure target model valid state transformation 
possible straightforward solution convert example activity adonis event function connected control flow 
avoid having events followed xor 
result invalid epc process models 
example problem shown transformation adonis decision parallel join model fragment fig 
epc model fragment fig 

start decision adonis model fig 
violates syntax epc new activity start decision parallel join workaround xor triggered 
source target possible solution ina ad multiple start objects invalid epc model alternating event function bpmn xor start durch 
condition violated models ways 
split second event fol events mandatory events functions alternate flow process model 
solution partially satisfying review modeler necessary 
model workaround transformation cycle fig 
shows problem resulting workaround xor neces triggered 
sary transforming ad model initial nodes bpmn model part source target back 
model fig 
semantically equivalent syntactically different model part fig 

new different start objects ad bpmn epcs possible define multiple start objects process model 
semantics multiple start objects different 
ad initial nodes activated process starts 
means initial nodes mark process depict events trigger process 
contrast activation start events epcs bpmn sufficient trigger process 
semantics multiple start events bpmn changes outgoing flows start events leading activity implies parallel join front activity 
process starts start events activated 
adonis common start element allowed 
leads different semantical problem areas 
difference semantics start objects ad compared start objects bpm languages 
different semantics multiple start objects 
case multiple start events exclusive alternative semantics bpmn see fig 
possible create common initial node ad target model proceeding decision node see fig 

decision annotated condition checks trigger process 
workaround preserves information bpmn semantics possible 
transforming activity ad back bpmn workaround needs taken account original model reconstructed 
xor start durch 
source target source target different model structure ad back transformation bpmn split merge unambiguity problem considered sight provided logical operators lo bpm languages equivalent solution trivial transformation 
epcs element depict splits mergers distinct lo 
bpmn parallel fork join different elements 
problem case models bpm languages decide lo branch control flow process model transforming language requires distinction 
control flow elements leading departing lo taken consideration 
different cases distinguished 
lo incoming outgoing control flows 
lo incoming outgoing control flow 
lo incoming outgoing control flows 
case transform split object 
case lo transformed join merge object 
case operator split elements split element parallel split adonis parallel fork bpmn fork node ad join fork element parallel join connected control flow edge 
lo xor transformation leads decision element incoming outgoing successors case adonis bpmn objects merge node control flow decision node ad 
atl transformation code example defines solutions transformation epc adonis rule epc incoming size outgoing size ps adonis 
rule epc incoming size outgoing size pj adonis 
rule epc incoming size outgoing size psp adonis suc adonis successor adonis 
transformation reverse direction may optimized reestablish original model 
case corresponding transformation rule merges parallel split successor parallel join element 
rule atl match element part require complex solution algorithm atl 
join specification problem problem observed ads 
contrary adonis bpmn epcs provide possibility express inclusive alternative merge ads semantically correct way depict mergers 
problem express inclusive alternative merge ads 
white possible incorrect terms semantics executable workflow model attempt cover inclusive alternative merge ads see fig 

solution problem transformation definition lays derivation join spec expression derived departing edges corresponding inclusive alternative split 
atl transformation code example comprehensive illustrate 

bb join spec incorrect attempt capture synchronising merge taken alternative ask user decide transform problem 
bp models designed executing directly 
support understanding business processes furthermore provide adequate documentation business processes 
solution fig 
satisfying business people 
different final nodes action activity final initial node join fork node ad provide possibility model different kinds nodes activity final node flow final node ffn 
semantics nodes follows ffn reached remaining tokens model succeed 
contrary reached remaining tokens processed killed immediately 
bpm languages element corresponding ffn 
semantically equivalent 
problem regarding ad decide transform 
ffn transformed element bpm languages 
transformed element adonis decision merge bpmn epc semantics process model different 
solutions annotation object target language attribute annotations provided 
second creation additional activity function task called terminate process integrated front object 
introduced transformation problems observed defining model transformations bpm languages 
focused transformation basic control flow aspect bpm languages encountered non trivial problems 
similar different bpm languages suggest provide general solutions arising problems 
reduce effort defining bp model trans formations number times wheels reinvented 
transformation issues illustrated categorized different areas 
transformation requirements raise problems implementation level technical complexity example decision un ambiguity invisible merger problem 

transformation requirements raise problems concerning feasibility situated application level contain application complexity example different final nodes join specification problem 
technical complexity affects model transformation languages 
general transformation languages atl zivin qvt omg programming languages java provide comprehensive unspecific possibilities define transformations 
unspecific sense provide language define special 
problems application level conceptual nature hardly solved technical inventions 
provided second level mechanisms user interaction solve problem supports user transformation 
adversaries technical level attacked example providing reusable general solutions distinct problems area bp model transformation 
zivin 

atlas model management architecture 
technical report 

adonis user manual iii adonis standard modeling method 
czarnecki 

feature survey model transformation approaches 
ibm systems journal pages 


investigation applying uml framework 
information systems frontiers 
ibm 
business process execution language web services version 
ibm 
keller ttgens scheer 
modellierung auf der epk 
technical report institut wirtschaftsinformatik universit saarbr cken 
list 

evaluation conceptual business process modelling languages 
sac proceedings acm symposium applied computing 
mendling neumann ttgens workflow pattern support event driven process chains epc 
proceedings nd gi workshop xml bpm th gi conference btw 
mendling neumann ttgens 

event driven process chain 
mendling ttgens 

epc modelling implicit arc types 
proceedings nd international conference information systems technology applications 
miller fellbaum 

wordnet lexical database english language 


structural patterns transformation business process models 
pages 
omg 
mof qvt final adopted specification 
object management group 
omg 
uml superstructure specification 
object management group 
omg 
business process modeling notation specification 
object management group www bpmn org 
russell ter hofstede edmond van der aalst 

workflow data patterns 
technical report queensland university technology 
russell van der aalst ter hofstede edmond 

workflow resource patterns identification representation tool support 
proceedings th conference advanced information systems engineering caise 
russell van der aalst ter hofstede 

suitability uml activity diagrams business process modelling 
proceedings rd asia pacific conference conceptual modelling 
st 

comparison epc uml activity diagrams 
epk gesch mit 
van der aalst ter hofstede kiepuszewski barros workflow patterns 
distributed parallel databases 
white 

process modeling notations workflow patterns 

van der aalst dumas ter hofstede russell 

pattern analysis uml activity diagrams 
proceedings th international conference conceptual modeling er 
van der aalst dumas ter hofstede russell 

suitability bpmn business process modelling 
proceedings th international conference business process management 


framework information systems architecture 
ibm system journal 
