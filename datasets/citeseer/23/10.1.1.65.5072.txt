soundness formal encryption presence key cycles pedro ad bana jonathan herzog andre scedrov center logic computation ist lisboa portugal department mathematics university pennsylvania philadelphia usa mitre pad math ist utl pt bana scedrov math upenn edu mitre org 
formal computational models cryptography contain notion message equivalence indistinguishability 
encryption scheme provides soundness indistinguishability mapping formal messages computational model equivalent formal messages mapped indistinguishable computational distributions 
previous soundness results limited apply key cycles 
demonstrate encryption scheme provides soundness presence key cycles satisfies introduced notion key dependent message kdm security 
show soundness presence key cycles kdm security implies implied security chosen ciphertext attack cca 
soundness key cycles possible new notion computational security possible previous notions relationship formal computational models extends chosen ciphertext security 
security blob theoretical computer science model computation attempted define way 
area cryptographic protocols models noteworthy natural definitions rigorous proofs 
models computational model derived complexity theory 
definitions phrased terms asymptotic behavior turing machines main partially supported fct bd 
additional support feder fct project mat feder fct project mat 
partially supported osd onr cip sw uri software quality infrastructure protection diffuse computing onr 
additional support nsf cns 
partially supported osd onr cip sw uri software quality infrastructure protection diffuse computing onr osd onr cip sw uri trustworthy infrastructure mechanisms experimentation diffuse computing onr 
additional support nsf ccr cns 
proof technique reduction 
models formal model dolev yao model named genesis field formal methods 
definitions phrased terms process algebras state machines particularly non deterministic ones uses different proof methods including automated ones 
consider relationship models precisely relationship simplified formal model technique abadi rogaway computational implementation model 
key differences representations messages powers give adversary 
computational model messages families probability distributions bit strings indexed security parameter 
adversary modeled algorithm realistic computational power probabilistic polynomial time 
formal model imposes great deal structure 
messages expressions built particular grammar 
atomic messages symbols representing keys random values texts 
complex messages built simpler ones operations pairing encryption 
adversary limited power manipulate expressions separating concatenation decrypting encryption knows needed key 
despite differences certain intuitions translated models expected way 
particular carefully chosen conditions indistinguishability messages mapped directly model 
formal model abadi rogaway expressions thought indistinguishable adversary called formally equivalent differences lie encryption terms decrypted formal adversary 
computational model hand messages families probability distributions bit strings 
indistinguishability computational messages captured standard notion computational indistinguishability indistinguishability efficient algorithm 
relating models 
computational encryption scheme fixed intuitive function establishes relationship models 
function called interpretation maps formal expression ensemble indexed security parameter probability distributions bit strings 
encryption scheme particular interpretation function ask pairs equivalent formal messages map indistinguishable probability distribution ensembles 
say soundness holds implies formal model faithful abstraction computational model sense security formal model implies security computational 
soundness result type due abadi rogaway encryption setting 
demonstrated soundness holds security level computational encryption algorithm type property particular kind soundness piece larger definition convenient shorthand soundness mean soundness message indistinguishability 
devising 
result translated public key setting setting consider micciancio warinschi 
soundness setting guaranteed encryption schemes satisfy standard definition chosen ciphertext security cca notation 
power chosen ciphertext security confirmed subsequent extensions 
original result abadi rogaway extensions including cca security share common limitation necessarily apply presence key cycles 
persistent question 
formal message contains key cycle contains encryption terms 
mn kn mi ki denotes encryption message mi public key ki mi contains key necessary decrypt mi ki mn contains key necessary decrypt 
simplest key cycle message denotes private decryption key associated encryption key complex key cycles possible 
formal model distinction messages posses 
presence key cycle prevent formal expression interpreted computational distribution ensemble natural way 
soundness result abadi rogaway subsequent soundness demonstrations described section known hold messages 
fact stronger results assume private symmetric keys encrypted :10.1.1.4.5735
question key cycles interesting right implications larger context 
standard security definitions computational encryption cca security obviously imply security presence key cycles 
formal model hand assumes key cycles weaken encryption way 
issue key cycles may represent gap formal computational models shed light general relationship 
gaps models 
majority results relating models show formal model sound respect standard definitions computational model notable exceptions 
aspects formal model shown overly strong relative computational model 
example original soundness results abadi rogaway assumed formal encryption concealed aspects plaintext 
particular result requires symmetric encryption hides things length plaintext 
unfortunately achieved contexts 
soundness contexts considered micciancio warinschi laud bana micciancio ad bana scedrov require weaker notion formal equivalence 
keeping complex formal model addresses weaknesses 
hand aspects formal model shown overly weak compared computational 
canetti herzog backes pfitzmann example demonstrated formal definition secrecy context key exchange protocols strictly weaker computational definition 
protocols may satisfy formal notion security computational 
having demonstrated gap authors close providing strictly stronger formal definition abstracts computational definition demonstrably faithful way 
gaps formal computational models uncovered 
cases resolution forced changes formal model 
resolution problem key cause changes formal model time naturally resolved modifications computational model 
alternate approach 
laud proposed solution problem key cycles takes approach 
laud solution provides soundness presence key cycles weakening notion formal equivalence 
assumed key cycles break encryption formal adversary strengthened able see inside encryptions key cycle 
soundness presence key cycles naturally holds assumption feel price paid high 
formal equivalence reflect ability formal adversary distinguish messages turn reflect actual extent computational adversary distinguish messages 
unreasonable cryptographer point view priori assume computational adversary break key cycles 
propose demonstrate soundness presence key cycles weakening encryption formal model strengthening computational 

resolve issue soundness presence notion key dependent message kdm security asymmetric encryption 
definition introduced simultaneously black rogaway shrimpton consider right camenisch lysyanskaya anonymous credential system 
demonstrate points 
expected predicted black new definition strong provide soundness presence keys cycles 
kdm secure encryption scheme provides soundness existing formal model 

soundness requires new computational definitions security 
demonstrate soundness kdm security imply implied chosen ciphertext cca security strongest known definition security standard computational model 
problem key cycles genuine gap formal computational models time original abadi rogaway result advances computational model repaired 
soundness presence stronger notion security plaintext awareness known defined generally random oracle model regarded non standard 
see herzog liskov micali fuller discussion alternate definition 
key cycles demonstrates relationship formal computational models case asymmetric encryption chosen ciphertext security 
limitations 
note results contain limitations 
firstly consider passive adversary 
secondly kdm security implemented random oracle model non standard variation computational model 
lastly weakened version formal model encryptions reveal length plaintext key encrypt 
rephrased language abadi rogaway consider type encryption type noted limitations smaller may 
consider passive adversary solely simplicity 
expect results extended consider active adversaries original abadi rogaway result regard step extension 
secondly random oracle 
definition kdm security founded standard computational model rely random oracle 
lastly issue type vs type encryption orthogonal 
express definitions results style type encryption reasons keeping extensions type security guaranteed standard computational definitions 
definitions chosen ciphertext security priori conceal encryption key length plaintext 
results map directly type analogies provided computational encryption scheme length key concealing kdm secure 
overview 
discussion previous section 
section modified versions abadi rogaway soundness definition result 
mentioned consider encryption schemes reveal key encrypt length plaintext 
show adaptive chosen ciphertext security ensure soundness presence key cycles section 
soundness key cycles demonstrated computational definitions available abadi rogaway new definitions necessary 
notion kdm security section show strong imply soundness presence key cycles section 
show section kdm security fact new notion implies implied cca security 
finish discussion relationships different security notions show soundness imply semantic security ind cpa security notation 
conclude section discussion 

done author visiting student university pennsylvania 
want black gordon lysyanskaya shrimpton unruh valuable comments informative discussions 
joint done protocol exchange meetings 
organizing meetings providing conducive encouraging atmosphere 
lastly anonymous referees extensive comments suggestions 
previous intended bridge gap cryptographic formal models started independent approaches including lincoln mitchell mitchell scedrov canetti pfitzmann waidner abadi rogaway 
formal terms nested operations considered specifically symmetric encryption adversary restricted passive eavesdropping security goals formulated indistinguishability terms 
extended terms general programs restriction passive adversaries remained 
discuss extensions 
papers consider specific models specific properties guttman thayer zuck specifically consider strand spaces information theoretically secure authentication 
process calculus analyzing security protocols protocol adversaries may arbitrary probabilistic polynomial time processes introduced 
framework provides formal treatment computational model security properties formulated observational equivalences 
mitchell ramanathan scedrov framework develop form process bisimulation justifies equational proof system protocol security 
approach pfitzmann waidner starts general reactive system model general definition cryptographically secure implementation simulatability composition theorem notion secure implementation 
definitions secure function evaluation computation set outputs set inputs 
approach extended synchronous asynchronous systems known reactive simulatability framework universal composability framework 
detailed comparison approaches may 
soundness result formal model active attacks achieved backes pfitzmann waidner reactive simulatability framework :10.1.1.4.5735
result comprises arbitrary active attacks holds context arbitrary surrounding interactive protocols independently goals wants prove surrounding protocols particular property preservation theorems simulatability proved integrity secrecy 
original result considered public key encryption digital signatures soundness result extended symmetric authentication symmetric encryption respectively :10.1.1.3.4629:10.1.1.4.5735
concurrently extension asymmetric encryption passive attacks :10.1.1.4.5735
asymmetric encryption active attacks considered random oracle model 
laud subsequently cryptographic underpinning formal model symmetric encryption active attacks 
enjoys direct connection formal proof tool specific certain confidentiality properties restricts surrounding protocols straight line programs specific language 
herzog micciancio warinschi give cryptographic underpinning active attacks 
results narrower specific public key encryption consider simpler real implementations :10.1.1.4.5735
relies stronger assumption subsequently weakened herzog 
approach restricts classes protocols protocol properties analyzed 
subsequently extended micciancio prove soundness group key distribution protocol presence cpa secure scheme 
cortier warinschi automated tools proving symbolic integrity specific secrecy proofs sound respect computational model case protocols nonces signatures asymmetric encryption see relationship symbolic cryptographic secrecy 
bana ad bana scedrov extend original abadi rogaway result weaker encryption schemes 
laud corin consider extensions composite keys baudet cortier kremer consider extensions equational theories static equivalence 
impagliazzo suggest formal logic reasoning probabilistic polynomial time indistinguishability 
datta derek mitchell shmatikov describe cryptographically sound formal logic proving protocol security properties explicitly reasoning probability complexity actions malicious attacker 
concurrent independent linking symbolic cryptographic secrecy properties 
cortier warinschi shown symbolically secret nonces computationally secret indistinguishable fresh random value view cryptographic adversary 
backes pfitzmann canetti herzog established new symbolic criteria suffice show key cryptographically secret 
backes pfitzmann formulate property preservation theorem formal model concrete implementation canetti herzog link criteria ideal functionalities mutual authentication key exchange protocols 
backes pfitzmann additionally provided new definition secrecy payloads application data reactive framework pointed sufficient symbolic criteria derive payload cryptographically secret 
cryptographically sound security proofs needham schroeder lowe protocol concurrently independently 
conducts proof deterministic symbolic framework proof second done scratch cryptographic approach hand second proves stronger properties shows chosen encryption insufficient security protocol 
relation models way research regarding direction completeness 
interpretation enforces completeness formal messages equivalent interpretations indistinguishable 
micciancio warinschi show sufficiently strong encryption scheme enforces completeness indistinguishability properties horvitz gligor strengthened result giving exact characterization computational requirements encryption scheme completeness holds 
shown bana ad bana scedrov com holds general class weaker encryption systems 
briefly mention simulatability results shown completeness implicitly establish notion simulatability 
discuss completeness 
stress aforementioned results hold presence key cycles 
mentioned problem addressed laud different way address 
computational soundness indistinguishability start presenting formal model describe computational model fairly standard way 
introduce notion soundness consider equivalent formal expressions represent indistinguishable computational distribution ensembles 
general entirely identical treatment abadi rogaway exceptions deal asymmetric encryption formal encryptions reveal keys encrypt formal expressions associated length formal model model messages expressions defined high level abstraction 
simplest expressions symbols atomic keys bit strings 
complex expressions created simpler ones encryption concatenation defined black box constructors 
definition expressions 
keys 
infinite discrete set symbols called set encryption keys keys 
corresponding set decryption keys 
blocks finite subset define set expressions exp grammar exp keys keys blocks exp exp exp keys denote keys set encryption keys occurring keys set decryption keys expressions form called encryption terms 
expressions may represent single message sent execution protocol entire knowledge available adversary 
second case expression contains messages sent far additional knowledge adversary possession public keys compromised private keys 
wish define formal expressions indistinguishable adversary 
intuitively occurs differences messages lie encryption terms adversary decrypt 
order rigorously define notion need formalize encryption term undecryptable adversary turn requires define set keys adversary learn expression 
expression contain keys clear 
adversary learn keys decrypt encryption terms expression reveal keys 
repeating process adversary learn set recoverable decryption keys definition visible subterms recoverable decryption keys 
vis exp visible subterms smallest set expressions containing 
vis vis vis 
vis vis vis 
keys set recoverable decryption keys vis keys allows identify encryption terms expression opaque adversary protected non recoverable decryption key 
wish say expressions equivalent differ contents opaque encryption terms 
computational realities force add ways opaque encryption may leak information reveal key encrypt reveal length plaintext 
second condition requires notion length added formal model definition formal length 
introduce function symbol fresh letter identities blocks iff ki kj ki ki ki 
introduce function order able express encryption operation may leak information length 
note blocks just equality implies identical type trees 

addition lengths formal model fairly necessary soundness computational encryption hide length plaintext 
recall goal define formal equivalence messages 
requires define observable adversary expression 
order express define called pattern expression expressions considered equivalent patterns roughly speaking identical definition pattern 
define set patterns pat grammar pat keys keys blocks pat pat pat keys keys exp pattern expression denoted pattern derived replacing encryption term vis keys 
patterns defined way blocks keys keys iff identical 
form iff form sense definition 
form iff form 
form iff form symbol pattern reveals expression encrypted key length 
abadi rogaway replace undecryptable terms 
complication remains define formal equivalence 
consider formal expressions differ names keys identical keys corresponding identical keys place 
hand keys say meaning randomly drawn key key generation algorithm 
matter replace 
appearance new key expression just means freshly generated key matter name give 
matters identical keys expression differing ones 
wish formalize notion equivalence way renaming keys yields equivalent expression 
formal expressions equivalent patterns differ names keys 
definition key renaming function 
bijection keys keys called key renaming function 
expression pattern denotes expression pattern obtained replacing occurrences keys including occurrences indices occurrences keys able formalize symbolic notion equivalence definition equivalence expressions 
say expressions equivalent denoted exists key renaming function pattern pattern 
main focus key cycles definition key cycles 
formal message contains key cycle contains encryption terms 
mn kn mi ki denotes encryption message mi public key ki mi contains key necessary decrypt mi ki mn contains key necessary decrypt case say key cycle length computational model fundamental objects computational world strings strings families probability distributions strings 
families indexed security parameter parameters roughly understood 
distribution families indistinguishable efficient algorithm determine distribution value sampled definition negligible function 
function said negligible written neg nc nc 
definition indistinguishability 
families indistinguishable written ppt adversaries pr pr neg model pairing injective pairing function strings strings strings length result depends length paired strings 
encryption scheme triple algorithms key generation encryption decryption plaintexts ciphertexts publickey nonempty subsets strings 
set coins probability field stands coin tossing randomness 
definition encryption scheme 
computational asymmetric encryption scheme triple parameters coins publickey key generation algorithm security parameter publickey plaintexts coins ciphertexts encryption function strings plaintexts publickey coins plaintexts 
algorithms computable polynomial time size input counting coins 
reason set parameters usually represented insist publickey plaintexts coins stands binary length insist plaintexts 
lastly insist elements support length length depends 
relating models order prove relationship formal computational worlds need define interpretation expressions patterns 
encryption scheme picked define interpretation function assigns expression pattern family random variables takes values strings 
abadi rogaway interpretation defined algorithmic way 
full formalism appendix informal overview 
expressions blocks interpreted strings key interpreted running key generation algorithm pairs translated computational pairs formal encryptions terms interpreted running encryption algorithm 
denote distribution ensemble interpretation patterns interpretation expressions interpretation pattern security parameter binary length samples due assumptions encryption schemes 
call sequence interpretation 
pattern family random variables interpretation distribution ensemble distributions define notion soundness 
definition soundness 
say interpretation sound encryption scheme provides soundness interpretation resulting encryption scheme expressions primary result abadi rogaway symmetric case soundness guaranteed sufficiently strong cryptography called type expressions key cycles 
subsequent translates result setting asymmetric encryption derives similar soundness property absence key cycles guaranteed chosen ciphertext security 
subsequent confirms chosen ciphertext security suffices extensions long key cycles prohibited 
section show prohibition necessary presence key cycles chosen ciphertext necessarily guarantee soundness 
chosen ciphertext security section show notions security standard results abadi rogaway published strong ensure soundness case key cycles 
possible construct encryption schemes satisfy standard notions security particular cca notation fail provide soundness presence key cycles 
definition ind cca adaptive chosen ciphertext security 
computational public key encryption scheme provides indistinguishability adaptive chosen ciphertext attack ppt adversaries sufficiently large security parameters pr ad mi ad neg oracle returns returns returns 
adversary assumed keep state invocations 
required length 
adversary able learn ciphertext contains plaintext plaintext adversary knows public key encrypt adversary choose messages long messages length adversary request receive decryption ciphertext 
definition shown strictly stronger definitions including semantic security 
guarantee soundness obviously access private keys messages submitted oracles depend private keys 
key dependent messages considered captured theorem 
cca security imply soundness 
exists encryption scheme secure chosen ciphertext attack exists encryption scheme secure chosen ciphertext attack provide soundness 
motivate proof simple example time pads 
form symmetric encryption rest discusses asymmetric encryption main ideas translate example time pad 
consider key cycle length expression interpreted time pads sequence elements note equivalent expression interpretation family uniformly random distributions 
equivalent expressions yield easily distinguished distribution families 
similar argument cca encryption schemes time pads suffice prove theorem 
cca secure encryption scheme cca encryption scheme constructed provide distinguishable interpretations expressions 
proof 
cca secure encryption scheme 
construct second cca secure encryption scheme follows receive input encryption key message test decryption key associated encryption schemes key pairs recognizable number theoretic properties 
case test conducted sub algorithm select random plaintext test decryption key associated output compute output acts exactly plaintexts encryption keys unrelated cca secure 
kdm secure 
formal expression expression expressions equivalent easily distinguished distribution family output decryption key second outputs ciphertext 

note example proof expression contains key cycle length 
key cycles length 
time pad fails provide soundness interpretation pair completely correlated distributions interpretation pair independent distributions 
question public key setting remains open 
known cca secure encryption scheme fails provide soundness key cycles length 
cca security implies number definitions see appendix easily conclude definitions imply soundness corollary 
soundness implied nm cca security ind cca security nm cpa security ind cpa semantic security 
soundness key cycles demonstrated notions security available time 
section show soundness property met new computational definitions 
kdm security soundness key cycles kdm security section showed standard notions security strong enforce soundness presence key cycles 
key dependent message kdm security introduced black weaker form camenisch lysyanskaya strong enforce soundness case 
note camenisch lysyanskaya provided natural application kdm security credential system interesting revocation properties kdm security independent interest 
kdm security strengthens ind cpa semantic security weaker form definition adversary access decryption oracles 
semantic security allows adversary submit messages encrypted 
kdm strengthens allowing general submissions 
particular kdm security adversary submit fixed messages functions decryption keys 
precisely kdm security defined terms oracles faked follows suppose fixed security parameter family keys ei di adversary query oracles providing pair constant length deterministic function defined sequence oracle receiving input returns ej oracle faked receiving input returns ej 
challenge facing adversary decide interacted oracle oracle faked formally definition kdm security 
asymmetric encryption scheme 
oracles faked defined 
say encryption scheme kdm secure ppt adversaries sufficiently large security parameters pr pr faked neg 
note known implementations kdm security random oracle model definition founded standard model 
note definition phrased terms indistinguishability 
imagine analogous definitions phrased terms non malleability exploration scope 
soundness key cycles main soundness result encryption scheme kdm secure satisfies soundness 
theorem kdm security implies soundness 
computational encryption scheme 
kdm secure provides soundness 
theorem holds expressions encryption cycles 
proof case somewhat reduced hybrid argument 
standard hybrid argument abadi rogaway prove soundness result patterns put security proven soundness holds consecutive patterns soundness holds case directly prove indistinguishable pattern 
holds pattern differs pattern name keys pattern indistinguishable pattern result follows 
kdm security show pattern indistinguishable 
proof 
arbitrary key denote index expression set formal decryption keys function defined keys keys keys takes values publickey keys takes values define function fm coins strings number encryptions inductively way blocks fb strings fb keys fk strings fk keys strings keys strings coins coins strings 
defined fm fn coins coins strings 
defined fm 
prove pattern 
suppose pattern means adversary distinguishes distributions pr pr pattern non negligible function 
show contradicts fact system kdm secure 
construct adversary distinguish oracles faked denote oracles 
publickey array public keys outputs 
keys keys 
consider algorithm algorithm keys convert return algorithm convert keys return keys return blocks return convert convert return keys convert return keys coins fm return algorithm applies distinguisher distribution distribution pattern faked distinguish pattern distinguish faked assumed faked distinguished pattern 
similar manner show pattern 
easy see pattern pattern patterns differ 

result powerful implications 
extensions abadi rogaway result simply rely soundness black box assumption hindered key cycles 
removing key cycle restriction abadi rogaway result removed extensions 
consider example non malleability results herzog 
setting adversary wish distinguish expressions transform expression expression formal adversary limited power produce formal messages set called closure denoted 
soundness non malleability property computational adversary interpretation produce interpretation expression outside 
herzog shows soundness non malleability property directly implied soundness indistinguishability messages definition 
show kdm security soundness message indistinguishability result herzog shows provides soundness non malleability properties 
strictly new notion provide brief propositions black claimed informally notion kdm security orthogonal previous definitions security 
particular claim kdm security implies implied chosen ciphertext security cca 
proved directly theorem corollary previous theorems corollary 
cca security imply kdm security 
exists encryption scheme secure chosen ciphertext attack exists encryption scheme secure chosen ciphertext attack kdm secure 
theorem 
kdm security imply nm cpa security 
encryption scheme kdm secure nm cpa secure 
proof 
easily seen inspecting kdm secure encryption scheme black random oracle model 
trapdoor permutation generator 
produces pairs encodes trapdoor permutation encodes inverse encryption algorithm input selects random bit string returns pair ro ro random oracle input returns ro 
scheme nm cpa secure simple change ciphertext associated message ciphertext related message 
note encryption provides confidentiality essentially applying random time pad 
changing single bit second component ciphertext changes bit plaintext 
ro encryption easily create ro bit wise complement 
decrypts kdm secure encryption scheme provide ciphertexts 
due various relations security notions see appendix corollary corollary 
kdm security implies nm cca security cca security 
conclude discussion relationships different notions security showing soundness imply ind cpa theorem 
soundness imply ind cpa 
exists encryption scheme provides soundness exists scheme provides soundness ind cpa 
proof 
sound encryption scheme 

input pair public key plaintext plaintext security parameter case outputs fixed bit string length 
corresponding modified decryption algorithm 
encryption scheme sound interpretation expression respect indistinguishable interpretation expression respect reason security parameter string encrypted differently de note respective interpretations 
public private key trivially block interpretations hit security parameter negligible probability 
expression hits security parameter negligible probability hits security parameter negligible probability 
similarly pairing 
induction interpretations expression indistinguishable 
hand easy see ind cpa secure adversary submits candidate messages security parameter outputs certainly able determine messages encrypted 
statements summarized appendix considered computational soundness formal encryption 
property states formal equivalence symbolic expressions implies computational indistinguishability symbolic expressions interpreted computational encryption scheme 
computational soundness proved abadi rogaway assumption key cycles computational encryption scheme satisfies strong version semantic security called type sense abadi rogaway 
considered modification logic case key revealing message length revealing asymmetric encryption schemes corresponds called type sense abadi rogaway 
presence key cycles proved computational soundness property follows key dependent message kdm security proposed black 
far know time order achieve soundness computational model strengthened formal model weakened 
shown computational soundness property implies implied security chosen ciphertext attack cca 
contrast previous results forms soundness implied cca security 
presents directions research 
firstly questions kdm security independently soundness considerations remain unanswered 
implementation kdm security standard model remains natural candidates instance cramer shoup 
conversely remains natural non constructed example encryption scheme secure sense cca kdm secure 
constructed examples encryption schemes fail provide kdm security key cycles length 
may possible cca security implies kdm security key cycles length 
lastly similar questions posed setting symmetric key encryption course investigation currently investigating 
regard soundness hand desirable extend results passive adversary setting active adversary 
show relationship formal computational models requires security 
demonstrates kdm security necessary show sufficient conjoined cca security 
investigation complete additional properties revealed necessary soundness fully explored 

abadi 
formal eavesdropping computational interpretation 
proc 
th international symp 
theor 
aspects comp 
software tacs springer lncs vol 
pp 


abadi rogaway 
reconciling views cryptography computational soundness formal encryption 
cryptology 
prelim 
version ifip tcs 

ad bana scedrov 
computational information theoretic soundness completeness formal encryption 
proc 
th ieee computer security foundations workshop csfw pp 
ieee comp 
soc 
press 

backes jacobi 
cryptographically sound machine assisted verification security protocols 
proc 
th annual symp 
theor 
aspects comp 
sci 
stacs springer lncs vol 
pp 


backes pfitzmann 
cryptographically sound security proof needham schr eder lowe public key protocol 
ieee selected areas communications 
prelim 
version 

backes pfitzmann 
symmetric encryption simulatable dolev yao style cryptographic library 
proc 
th ieee computer security foundations workshop csfw 
full version eprint 

backes pfitzmann waidner 
symmetric authentication simulatable cryptographic library 
proc 
th european symp 
research comp 
security esorics springer lncs vol 
pp 

extended version eprint 

backes pfitzmann waidner 
secure asynchronous reactive systems 
eprint 

backes pfitzmann 
relating symbolic cryptographic secrecy 
ieee trans 
dependable secure computing 
full version eprint 

backes pfitzmann waidner 
composable cryptographic library nested operations 
proc 
th acm conf 
computer communications security ccs pp 
acm press 
full version eprint 

bana 
soundness completeness formal logics symmetric encryption 
phd thesis university pennsylvania 
available eprint 

baudet cortier kremer 
computationally sound implementations equational theories passive adversaries 
icalp springer lncs vol 
pp 
appear 

bellare desai pointcheval rogaway 
relations notions security public key encryption schemes 
crypto springer lncs vol 
pp 

full version available www cs ucsd edu users mihir papers relations html 

black rogaway shrimpton 
encryption scheme security presence key dependent messages 
proc 
th annual international workshop selected areas cryptography sac springer lncs vol 
pp 


beaver 
secure multiparty protocols zero knowledge proof systems tolerating faulty minority 
cryptology 

camenisch lysyanskaya 
efficient system non transferable anonymous credentials optional anonymity revocation 
eurocrypt springer lncs vol 
pp 


canetti 
security composition multiparty cryptographic protocols 
cryptology 

canetti 
universally composable security new paradigm cryptographic protocols 
nd ieee symp 
foundations comp 
sci 
focs pp 
ieee comp 
soc 
press 
full version eprint 

canetti herzog 
universally composable symbolic analysis cryptographic protocols case encryption mutual authentication key exchange 
eprint 

canetti goldreich halevi 
random oracle methodology revisited 
proc 
th annual acm symp 
theory computing stoc pp 
acm press 

cortier warinschi 
computationally sound automated proofs security protocols 
proc 
th european symp 
programming esop springer lncs vol 
pp 


cramer shoup 
practical public key cryptosystem provably secure adaptive chosen ciphertext attack 
crypto springer lncs vol 
pp 


datta sters mitchell ramanathan 
relationships notions simulation security 
nd theory cryptography conference tcc springer lncs vol 
pp 


datta derek mitchell shmatikov 
probabilistic polynomialtime semantics protocol security logic 
icalp springer lncs vol 
appear 

dolev yao 
security public key protocols 
ieee trans 
information theory 
prelim 
version focs 

guttman thayer zuck 
faithfulness protocol analysis message authentication 
proc 
th acm conf 
computer communications security ccs pp 
acm press 

goldwasser levin 
fair computation general functions presence majority 
crypto springer lncs vol 
pp 


herzog 
computational soundness formal adversaries 
master thesis mit 

herzog 
computational soundness standard assumptions formal cryptography 
phd thesis mit 
available theory lcs mit edu papers herzog phd pdf 

herzog liskov micali 
plaintext awareness key registration 
crypto springer lncs vol 
pp 


horvitz gligor 
weak key authenticity computational completeness formal encryption 
crypto springer lncs vol 
pp 


impagliazzo 
logics reasoning cryptographic constructions 
proc 
th ieee symp 
foundations comp 
sci 
focs pp 
ieee comp 
soc 
press 

laud 
encryption cycles views cryptography 
proc 
th nordic workshop secure systems univ studies pp 


laud 
symmetric encryption automatic analyses confidentiality active adversaries 
proc 
ieee symp 
security privacy pp 
ieee comp 
soc 
press 

laud corin 
sound computational interpretation formal encryption composed keys 
proc 
th international conf 
information security cryptology springer lncs vol 
pp 


lincoln mitchell mitchell scedrov 
probabilistic polynomial time framework protocol analysis 
proc 
th acm conf 
computer communications security ccs pp 
acm press 

micali rogaway 
secure computation 
crypto springer lncs vol 
pp 


micali rackoff sloan 
notion security probabilistic cryptosystems 
siam computing 

micciancio 
adaptive security symbolic encryption 
proc 
nd theory cryptography conference tcc springer lncs vol 
pp 


micciancio warinschi 
completeness theorems abadi rogaway logic encrypted expressions 
computer security 
prelim 
version wits 

micciancio warinschi 
soundness formal encryption presence active adversaries 
proc 
st theory cryptography conference tcc springer lncs vol 
pp 


mitchell ramanathan scedrov 
probabilistic polynomialtime calculus analysis cryptographic protocols 
full revised version available theory stanford edu people publications htm 
prelim 
report fossacs springer lncs vol 


pfitzmann waidner 
cryptographic security reactive systems 
dera rhul workshop secure architectures information flow entcs 
www elsevier nl cas tree store tcs free pc menu htm 

pfitzmann waidner 
composition integrity preservation secure reactive systems 
proc 
th acm conf 
computer communications security pp 
acm press 
extended version ibm research report rz www zurich ibm com security models 

pfitzmann waidner 
model asynchronous reactive systems application secure message transmission 
proc 
ieee symp 
security privacy pp 
ieee comp 
soc 
press 

sahai 
non malleable non interactive zero knowledge adaptive chosen ciphertext security 
th ieee symp 
foundations comp 
sci 
focs pp 
ieee comp 
soc 
press 

warinschi 
computational analysis needham schr eder lowe protocol 
proc 
th ieee computer security foundations workshop csfw pp 
ieee comp 
soc 
press 
computational definitions security asymmetric encryption schemes standard computational notions security asymmetric encryption schemes 
see relationships 
interpretation algorithm pattern define interpretation algorithm init keys plaintext nm cca ind cca soundness nm cca ind cca nm cpa ind cpa brs brs kdm contributions represented dashed arrows 
fig 

relation different security notions algorithm convert keys return keys return blocks return convert return convert return return note expressions simply patterns symbols form appear interpreted algorithm 

