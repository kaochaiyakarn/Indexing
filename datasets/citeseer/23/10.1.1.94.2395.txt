journal software vol 
february model driven security engineering trust management sectet ruth breu michael hafner research group quality engineering university innsbruck austria email ruth breu hafner uibk ac service oriented architectures underlying technologies web services web services orchestration opened door wide range novel application scenarios especially context inter organizational cooperation 
remaining obstacles widespread techniques security 
companies organizations open systems core business processes partners high level trust guaranteed 
emergence web services security standards provides valuable effective paradigm addressing security issues arising context inter organizational cooperation 
low level abstraction standards unresolved issue inaccessible domain expert remains major obstacle aligning security objectives customer needs 
complexity implementation easily prone error 
sectet model driven security engineering framework workflows facilitates design implementation secure inter organizational workflows 
contribution objectives 
high level domain specific language called sectet pl part sectet framework sectet pl policy language influenced object constraint language interpreted context uml models 
detail meta object facility metamodels integration business requirements security requirements 
model driven architecture paradigm describe transformation high level security models low level web services standard artefacts help eclipse modelling framework 
index terms domain specific language model driven architecture model driven engineering service oriented architecture service oriented architectures underlying technologies web services web services orchestration opened door wide range novel application scenarios especially context inter organizational cooperation 
providing solution interoperability concerns advent web services standards paved way integration business processes 
due flexibility hand business partners having common business goals connect enterprise applications regardless platform technology 
hand modeling permissions ml world breu hafner appeared proceedings international symposium frontiers availability reliability security fares conjunction international conference availability reliability security ares ieee 
academy publisher decentralized management increased exposure enterprise applications requires thorough investigation security implications 
access control privacy issues major concern distributed applications 
applications built web service technologies plenty standards ws trust trust negotiation ws security fulfilment security requirements confidentiality integrity access control markup language xacml specification access policies name 
open standards enable agreement inter operability technical level different proprietary applications built 
low level abstraction standards unresolved issue inaccessible domain expert remains major obstacle aligning security objectives customer needs 
complexity implementation easily prone error 
web services security standards distinct inter operability oriented focus standards heterogeneity underlying middleware platforms design intent model high level security concepts application domains 
enormous growth standards vexing problem 
intricate interdependencies standards dependencies xpath xquery xacml require considerable amount time mastering standards daunting task 
pressing need develop techniques complexities underlying security architectures web services security standards 
order provide satisfying alignment high level security concepts application domains corresponding implementation stakeholders involved realization distributed system domain experts software engineers common understanding security requirements appropriate level abstraction 
means security concepts confined high level descriptions lowlevel implementations 
strong binding high level security models underlying implementation required abstraction techniques 
years important goal software researchers develop techniques model domain con journal software vol 
february cepts terms design intent underlying implementation environment 
effective complexity management techniques play significantly important role development accurate reliable maintainable information systems increasingly larger complex distributed nature 
context model driven engineering mde promising approach treats models important artefact software development precisely problem solution domain different level abstractions defines methodologies level abstraction provides techniques lower level abstraction defining relationships participating models 
approach mde pillar aspects 
aspect domain specific language dsl helps model concepts specific application domains online health care services domain specific languages formalized metamodels describe relationships concepts domain 
aspect transformation engine analyzes various aspects models problem domain synthesizes implementation artefacts models problem domain 
software design framework omg called model driven architecture considered implementation mde 
mda framework software functionality modelled standard modelling language uml platform independent model pim transformed platform specific models psms 
mda paradigm considers models essential part definition software visual aid understanding communication 
appropriate solution complexities underlying platform remaining expressive model complex business scenarios 
specialize concept mde model driven security engineering providing framework security concepts application domain modelled uml dsls pim abstraction level merged business requirement models 
security enhanced transformed different open standard specifications psm turn configure component architecture 
summary contributions include focusing security concepts domain pim abstraction level making clear separation security models underlying security architectures providing representation underlying security artefacts responsible configuration security components relying direct code generation resolving model dependencies integrating security models business requirement models model application level metamodel level providing explicit highlevel transformations platform independent dsl supporting models platform specific security models 
academy publisher rest structured parts part section ii presents conceptual foundations framework dsl context case study health care domain 
second part section iii elaborates parts domain architecture metamodels section iii serve common syntactical semantic base transformation workflow section iii high level security models transformed low level security artefacts 
section iv summarizes related section drawn 
ii 
conceptual foundations significant characteristic mde ability generate deliverable products models 
dsls approach mde possible build larger accurate reliable maintainable software systems 
mda standards possible ways creating dsl base definition dsl directly meta object facility mof termed heavyweight extensions 
way mof provides common syntactical semantic base dsl conceptual elements domain 
dsl range specific elements radar systems broad component middle ware applications built platforms ejb ccm web services 
sectet project cluster model driven security engineering framework facilitates design implementation secure inter organizational workflows 
soa paradigm objective sectet framework design implement interorganizational workflows peer peer environment central control 
case studies domain health care government education gave opportunity apply sectet framework real life scenarios 
framework weaves ideas mda mde web services standards inter organizational workflow conceptual framework sum parts 
framework caters needs broader domain termed security critical inter organizational workflows scenarios 
component application domains scope sectet framework broader domain 
believe security concepts authentication authorization fundamentally different application domains 
example fundamental concept authorization called role access control rbac general security concept specialized different application contexts 
similarly sectet framework represents highlevel repository security concepts realized specific component application domains 
sense languages defined broader domain termed dsls 
security requirements workflow security requirements access control modelled dsls design journal software vol 
february level seamlessly integrated security patterns business requirements models 
trust management module focus deals realization dynamic security requirements module composed major components 
objective modelling component trust management module clear separation concerns appropriate level abstraction integrate appropriate modelling techniques 
pim abstraction level component models domain concepts uml profile called sectet uml 
profile model business requirements data type static security requirements roles respective hierarchies 
order model dynamic security requirements sectet uml combined dsl called sectet pl sectet pl predicative language object constraint language ocl style tightly integrated uml de facto standard modelling 
uml model property check pim level guiding principle design sectet pl due restricted semantic scope generation dynamic security policies sectet pl specifications intuitive 
sectet pl predicates positive negative permissions specified respect uml class diagram 
due flexibility dynamic security requirements specified sectet pl transformed middle ware object oriented security platform 
sectet pl successfully applied extensions multiple dynamic security requirement specification domains attribute delegation rights privacy enhanced access control 
psm abstraction level modelling component defines domain specific web service security standard metamodels described section iii 
transformation component trust management module incorporates transformation patterns 
model model pattern deals transformation high level access requirement models low level xacml policy metamodel operational transformations query view transformations qvt mda standard 
model code pattern uses xacml policy metamodel instances generate xacml policy files 
elucidation main definitions problem domain sections endure highlighting sectet uml sectet pl example medical domain 
definitions problem domain partner application workflow conceived service provider attribute authority 
particular partner possesses resource security requirements access control privacy delegation rights dependent calling subject profiles accessed object attributes current system state 
academy publisher 
model views available web service termed service provider partner attributes service requestor clarified called attribute authority 
global workflow specifies message exchange protocol service provider attribute authority distributed environment 
types model views depict global workflow cf 
fig 
generally sub models workflow view depict message exchange protocol cooperating partners focus security requirements confidentiality integrity nonrepudiation 
particular global workflow model specifies message exchange cooperating partners local workflow model describes application workflow logic 
interface view partner contributes services outside data type authorization requirements 
specifying minimum set requirements interface view describes partner services independent usage scenario 
sectet uml uml profile trust management conceive application workflow network partners cooperating controlled way calling services exchanging documents 
model views depict specific application domain scenario specifying messages partner exchanges services agreed contribute workflow additional constraints security requirements 
trust management main focus concentrate interface view 
table shows stereotypes map model elements interface view representation uml cf 
fig 
interface view sub model document model describes data type view documents travelling journal software vol 
february partners profiles users form uml class diagram 
talk documents order stress interpret class diagram usual object oriented setting context xml schema 
shows example document model web service focusing profiles users 
classes document model stereotype 
stereotype indicates attribute values corresponding entity distributed means corresponding entity patient data possessed partner hospital workflow 
attributes entities available locally requested attribute requesting service corresponding partner 
entities document model contain attribute stereotype key physician disease stereotype indicates corresponding attribute unique serves primary key entity 
key attribute navigation locate particular object entity 
class actor generalizes callers web service actor classes physician patient specializations actor 
document model contains context function classes time 
classes contain query functions give date time domain specific values 
inter academy publisher 
sample document model 
sample interface model role model face defines external functions verify relationship caller web service particular elements document model 
external functions section ii 
interface view sub model interface model defines set uml operations component offers clients 
shows interface model web service 
data types parameters operations web service interface basic data types classes document model 
document model provides data type view attributes callers web services documents travelling partners inter organizational workflow 
interface model document model create web service description language wsdl file describing interfaces web facing components 
sub model role model cf 
fig describes roles having access web services expressed uml class diagram 
role model access model aggregate rights particular role 
scenario hospital represents partner role stereotyped sub roles specific domain hospital represented domain roles stereotyped 
role journal software vol 
february navigation expressions table sectet pl set typed variables 
set typed navigation expressions defined follows 
type expression type navigation expression class type attribute type class navigation expression type navigation expression class type association class class bas depicted role navigation expression type multiplicity set 
navigation expression type set attribute type class navigation expression type set 
navigation expression class type set association class class depicted role navigation expression type set 
navigation expression type class inheritance relation navigation expression type yn tn query operation interface document model en expressions type tn resp en navigation expression type navigation expression type set attribute class boolean expression select boolean expression navigation expressions type set respectively 
returns entity type boolean expression true undefined entity exists select returns entities type boolean expression true 
class document model subject map expression type permission predicates navigation expressions type permission predicate 
additionally usual comparison operators expressions type integer real provided 
navigation expression type set attribute class forall boolean expression permission predicate 
permission predicates permission predicates 
permission predicate variable type navigation expression type permission predicate 
stands human system 
association role authenticates node way actors authenticate freely chosen 
notice difference role model standing calling physician document model standing internal representation physician data partner node 
sub model access model extends operation definition interface model permission section 
section specifies rules conditions role role model permitted prohibited call specific web service interface model 
rules described predicative language sectet pl described section 
predicative specification access rights sectet pl sectet pl predicate language ocl style allowing specification fine grained data dependent access permissions roles 
originally developed goal integrating aspects authorization case development language sectet context specify permissions calling web services 
approach model driven sense generate platform independent xacml policies predicative specifications cf 
section iii 
academy publisher access model operation op interface model associated set rules structure context webservice op xn tn perm 
positive rule perm describes condition role permitted call web service op 
negative rule describes condition role prohibited call web service op 
conditions permission predicates formal parameters web service xn tn 
permission predicates allow navigation xml documents comparison expressions connection predicates logical operators 
language permission predicates defined table current core version sectet pl simple type system supports basic types class types set type usual operators arithmetic operators union notempty mentioned table 
examples refer document model interface role model figures respectively 
rule person identified patient number allowed appointment weekdays 
journal software vol 
february context string string day string day saturday day sunday example constraint depends internal representation calling actor 
underlying xml documents provided parameters web services side special construct subject map side supported library external functions 
document model hosts library external functions interface stereotyped external 
stereotype indicates corresponding interface transformed xml schema refers security infrastructure order verify certain relationship caller web service particular element document model 
identification variables subject associated external functions distinguish different types callers subject map allows connection calling actor internal representation business logic enabling permissions actor access data 
rule association calling physician patient required identity passed parameter 
order provide connection subject map construct mapping calling actor internal representation class physician 
rule physician modify medical record designated primary care physician 
context string perm ph subject map physician ph patients select notempty permission prohibition expressions special construct subject map authenticates caller web service way authentication done freely chosen checks caller specified role maps internal representation document model 
case caller belongs domain subject map requests attribute values locally corresponding domain attribute requesting service 
examples show combination positive negative permissions 
rule nurse read medical records patient specialization 
shall permitted read medical records patient patient disease marked confidential 
context string string academy publisher perm nr subject map nurse nr patients 
select area nr specialization notempty nr subject map nurse nr patients 
select confidential true notempty general evaluation strategy set permissions prohibitions referring role role operation op permission conditions prohibition conditions connected logical leading access condition rule administrator allowed check medical records working hours 
context string string perm time time account inheritance relations roles positive permissions formula extended permissions referring superior roles connection logical 
means positive permissions inherited negative permissions inherited 
concept inheritance permissions presence role hierarchies extensively elaborated model constraint role access control 
fail safe defaults principle result evaluation exception cases rule applied direct permission inherited permission 
iii 
domain architecture section explains parts domain architecture 
part discuss integration sectet uml sectet pl metalevel 
second part elaborates transformation platform independent models platform specific models qvt transformations 
show information captured platform specific models translated executable web services artefacts 
metamodels metamodel defines schema specification additional semantics existing information 
meta object facility mof omg standard journal software vol 
february provides framework management metadata 
context mda mof integration dissimilar metamodels syntactic validation instance models 
pim abstraction level domain model cf 
fig uses mof framework integration business requirements document interface model access control requirements role access model metalevel 
caller service represented class credentials corresponding assigned 
permission prohibition true associated case operation 
domain model model elements elements models proxy classes 
example operation service attributes actor datatype document model 
represents super class defines structure sectet pl expressions please refer table syntax sectet pl expressions 
psm abstraction level modelling component defines domain specific web service security standard metamodels 
instance domain specific xacml policy metamodel cf 
fig extends general xacml policy model rps pps 
policy sets define structure xacml policies domain 
xacml container holds policy elements external policies 
elementary units policy rule elements evaluated academy publisher 
domain model attributes omitted brevity 
xacml metamodel 
target architecture journal software vol 
february basis content form input decision request rule combining algorithm specified attribute policy element 
xacml data flow model policy enforcement point pep acts security gateway domain boundaries cf 
fig 
intercepts request coming outside queries policy decision point pdp access rights sending xacml request 
pdp looks policies apply request matching target defines set subject resource action elements met policy rule 
authorization decisions additional characteristics subject role resource system environment date time attributes named values known types 
predicate statement attributes evaluated true false 
optionally rule encapsulate condition boolean function subject resource action environment attributes functions attributes 
policy verified applicable request rules evaluated 
condition evaluates true rule effect returned permit deny 
transformations 
transformations workflow transformations play key role mda paradigm generate target platform specific models source platform independent models 
omg adopted specification transformation dissimilar metamodels called query view transformation qvt 
qvt specification defines flavours transformations declarative imperative 
declarative transformations relationship source model target model defined relations core language 
languages support complex object matching source target models describe relationships variables terms relations 
imperative transformations explicit sequence steps defined generate target model source model 
describes transformation process workflow 
role access model domain model transformed xacml metamodel academy publisher qvt operational transformation language 
transformations xacml metamodel populated domain specific parts xacml metamodel instances generated eclipse modelling framework emf 
instances xacml metamodel transformed xacml policy files language 
sections sketch high level view transformation process particularly focusing transformations 
goal provide transformation process efficiently visibly possible 

simplified instance domain model model model transformations 
shows simplified instance domain model cf 
fig 
model instance positive permission false associated assigned instance 
contains syntax tree constraint defined rule cf 
section ii 
way domain model provides common syntactical semantic base sectet pl expressions 

example transformation pattern shows example transformation pattern uses operational mappings qvt 
line defines typed candidate models parameters dm type policies 
journal software vol 
february starting point operational transformation function main called entry operation 
case main function retrieves objects type applies mapping operation called objects type line 
corresponding mapping operation defined line implements mapping source model elements target model elements 
general mapping operations populate attributes target model elements source model element attribute values 
example case set rps self self refers instance source meta class represents concatenation 
operational language defines alternative method mappings called object expression 
object expression facilitate creation model elements mapping operations 
example object expression defined line creates instance populates attributes name contextual parameter self 
way high level conciseness achieved 
mapping contains call mapping operation line self 

sectet pl prototype order transform sectet pl expressions associated permission object cf 
fig black box operations 
qvt specification black box operations considered java native interface jni methods allow domain specific libraries algorithms calculate complex model property values source model 
calculated values populate target model elements 
black box operations coded programming language mof bindings 
way specification complex domain specific algorithms syntax semantic analysis sectet pl expressions case optimal languages done qvt transformation languages general best suited coding algorithms 
consequently complexity academy publisher 
xacml metamodel instance length qvt scripts reduced significantly implementation parts transformation opaque 
instance mapping operation line contains black box operation returns depending status transformation 
black box line takes object ast expressions performs syntax semantic analysis populate target model elements xacml metamodel generated values form xpath expressions 
black box operation implemented prototypical tool cf 
fig uses antlr compiler program generate syntax tree sectet pl expressions 
tool performs semantic analysis predicates model information specified xmi files 
shows instance xacml metamodel defined 
defines role subject attribute target 
applicable xacml request possessing role 
contains negative generated element xacml 
sub contains positive general 
case returns true general applicable 
shows instance xacml metamodel case journal software vol 
february 
positive permission policy set contains sub policy defines permissions 
policy permissions defined xacml rules 
target rules contain web service operation name resource action attributes respectively 
contains constraint combination designator attributes constraint form condition functions 
model code transformations 
eclipse modelling framework emf generate domain specific instance models xacml metamodel 
xacml metamodel drawn rational rose imported emf 
imported metamodel populated domain specific values transformed xacml policy files template language 
information done please refer 
shows excerpt language script transform xacml instance model cf 
xacml policy files 
script starts import statement line import instance model packages case academy publisher 
language script data definition statement define line defines link metamodel class template defined 
definition statement expand statement line defines definition block different variable context rps case works subroutine 
line defines corresponding definition block expand statement defined line 
definition block starts file statement line redirect output body statements specified target 
attribute instance filename xml file statement 
subject target populated name attribute corresponding instance line 
foreach statement iterates element target instance model generates specified output foreach line iterates policy defined output names element 
shows example generated xacml metamodel instance namespaces omitted journal software vol 
february brevity 

sample xacml role policy set iv 
related compared approaches support policy language specification dynamic constraints primary goals different existing approaches intend apply model driven engineering techniques advance aspects access control 
best knowledge approach model transformation high level access models low level web services models 
trust management approaches proprietary standards trust xml framework trust negotiations peer peer environments 
intended open environments internet entities prior knowledge 
trust supports different strategies trust negotiations 
important features trust strategy ordering credentials disclosed modeling framework support moment 
trust notion modeling low level abstraction inaccessible domain expert 
major drawback trust lack full support open standards policy exchange management different domains difficult 
disclosure policy type safe cause inconsistencies trust management scenarios 
authors describe proprietary xml framework defines mapping strangers roles credentials 
prototype called trust establishment te support sensitive credentials 
means assigning roles strangers basic te assumptions credentials disclosed privacy requirements hinder suitability distributed environments 
keynote known trust management language 
main feature support distributed authorization delegation policies 
policies called assertions contain description authorizer constraints licensees rights delegated 
keynote language addresses rights delegation aspect trust management scenario specification academy publisher delegation policies proprietary languages compared open standards xacml profile rights delegation restricts usability 
approaches require counterpart trust establishment scenario fully rely syntax semantics devised trust policies restricted usability 
policymaker referee suggest programming language express trust policies open standard digital certificates 
approaches primarily concerned specification trust policies public key authorization authentication consider modeling higher level abstraction 
authors logic framework regulate service access control information release open environments 
framework supported portfolio service protection language specification access policies services information release 
provides logical definition actual language provided 
prototype available 
logic programming specification trust management requirements provides powerful mechanism prove correctness system specifications difficult understand obscure transcription 
logic mechanism incorporated standard framework 
authors highlighted negotiation aspects trust management scenario model driven framework 
uml activity diagrams express trust negotiations different partners 
approach lacks support high level policy language specification context dependent complex trust policies 
compared model driven security aspect framework presents approach application pattern software development recurring problems domain security 
basic idea approach capture expert knowledge security domain available developers security pattern software development 
approach provides depth view security patterns development ontology knowledge base sorting relationships different existing security patterns 
author uses patterns systematically capture knowledge security issues model level semantics remain close technical level 
author address transformation way 
author verification framework uml models enriched security properties uml profile called 
framework stores models xmi files format meta data repository mdr queried java metadata interfaces jmi different analyzers 
analyzers perform static dynamic analysis models different security properties confidentiality integrity compared approaches framework domain specific focused journal software vol 
february automatic generation standard security artefacts specified early phases software development 
objective develop high level languages executable security requirements distributed system specified higher level abstraction 
proposes uml notation access control rbac provides code generation exclusively object oriented platforms ee net 
approach advantage environment web services standards case policy exchange management domain boundaries easier 
mda frameworks provide means realize metamodels transformation template languages 
comparison parameters corresponding framework flexible accommodate domain specific frameworks sectet framework support mda related standards 
open source mda framework provides facilities apache velocity template language 
framework uses metadata repository mdr storing metadata set access mdr 
major drawback framework complexity involved defining domain specific extensions 
writing new trivial job 
framework provides generic solution domain specific engineering 
reason open modelling frameworks eclipse modelling framework tools 
template language provides intuitive way generate kind data specified models 
mda frameworks support qvt transformations 
model driven security engineering framework sectet framework particularly focusing trust management issues 
primary goal sectet framework align high level security objectives business services underlying implementation form privacy security trust pst technologies 
provide specification dynamic constraints policies highlevel language sectet pl important advantages sectet pl tightly integrated uml models de facto standard modelling combines predicative language high level abstraction underlying platform independent access policy standard xacml 
brings great potential extensions ranging combination access models property check access models level 
integration security models business models generation security artefacts language 
academy publisher currently working lines 
pushing implementation model transformation engine mof qvt emf research purposes extending tool support perform visible qvt transformations 
secondly extending sectet pl specification rights delegation obligation information filtering separation duty constraints 
web service security specifications available www oasis open org specs index php 
object management group www omg org 
model driven architecture www omg org mda 
business process modeling defining domain specific modeling languages uml profiles fa lncs pp 
hafner breu breu security architecture inter organizational workflows putting ws security standards isbn 
meta object facility omg adapted specification available note www omg org docs ptc pdf balasubramanian gokhale developing applications model driven design environments computer vol 

france rumpe domain specific modeling editorial software system model journal 
hafner breu sectet extensible framework realization secure inter organizational workflows appear journal internet research 
breu hafner weber nowak model driven security inter organizational workflows pp 

breu hafner modeling permissions ml world ieee ares isbn 
breu breu hafner nowak web service engineering advancing new software engineering discipline pp 

hafner breu breu nowak modelling inter organizational workflow security peer peer environment proceedings ieee international conference web services 
washington dc usa ieee computer society pp 

hafner breu model driven security web services mds ws obj id 
hafner breu modeling authorization soa application scenario iasted conf 
software engineering pp 

hafner breu mof domain architecture model driven security models pp 

role access control rbac csrc nist gov rbac 
predicative language specification access rights available uibk ac pdf 
model driven security engineering realization dynamic security requirements collaborative systems phd symposium ieee acm models lncs 
journal software vol 
february uml ocl specification www omg org docs ptc pdf 
hafner breu framework modeling restricted delegation service oriented architecture pp 

query view transformation omg adapted specification available www omg org docs ptc pdf 
web service description language wsdl available www org tr wsdl 
wsdl july webservices xml com pub ws html 
breu actor centric modeling user rights fase pp 

hafner breu constraint role access control sectet model driven approach proceedings acm pst international conference privacy security trust october th november st 
wikipedia org 
xacml specification set available www org committees tc home php wg abbrev xacml 
www eclipse org emf 
language available www eclipse org gmt doc pdf xml path language xpath specifications available www org tr xpath 
www antlr org 
emf example available www eclipse org gmt doc pdf trust peer peer framework trust establishment ieee transactions knowledge data engineering vol 
pp 

herzberg mass ravid naor access control meets public key infrastructure assigning roles strangers sp proceedings ieee symposium security privacy 
washington dc usa ieee computer society 
blaze feigenbaum ioannidis keromytis keynote trust management system version united states 
xacml administration policy working draft december www org committees documents php wg abbrev xacml 
yu winslett seamons supporting structured credentials sensitive policies interoperable strategies automated trust negotiation acm trans 
inf 
syst 
vol 
pp 

blaze feigenbaum lacy decentralized trust management tech 
rep 

chu feigenbaum lamacchia resnick strauss referee trust management web applications world wide web vol 
pp 

samarati regulating service access information release web ccs proceedings th acm conference computer communications security 
new york ny usa acm press pp 

benatallah casati model driven trust negotiation web services ieee internet computing vol 
pp 

schumacher security engineering patterns lncs isbn 
secure systems development uml isbn 
basin uml modeling language model driven security th academy publisher international conference uml dresden germany 
available org 
mdr org www com sc phd student university innsbruck austria 
joining group prof dr ruth breu lecturer institute management sciences pakistan 
got phd scholarship higher education commission pakistan phd abroad 
focus phd application model driven techniques realization complex access control patterns restricted delegation rights privacy enhanced access control 
current research interests include trusted computing policy model extension security enhanced linux 
prof dr ruth breu head research group quality engineering 
researcher university passau technische universitt spent years industry working consultant area software engineering 
research group quality engineering currently members focuses novel usage scenarios models areas security engineering governance model quality assessment 
dr michael hafner gained industry experience automotive telecommunications sector activity technical consultant systems integration big companies joining group professor ruth breu university innsbruck researcher 
dissertation focused model driven development secure inter organizational workflows service oriented architectures 
michael hafner responsible design realization sectet framework technical project manager project 
