comparing conceptual divisive agglomerative clustering learning taxonomies text 
application clustering methods automatic taxonomy construction text requires knowledge tradeoff effectiveness quality result ii efficiency run time behaviour iii traceability taxonomy construction ontology engineer 
line original conceptual clustering method formal concept analysis automatic taxonomy construction compare hierarchical agglomerative clustering hierarchical divisive clustering 
order reduce efforts engineering large ontologies years seen surge interests learning ontologies text general learning taxonomies concept hierarchies particular 
principle paradigm exploited approaches derive knowledge texts analyzing certain terms 
distributional hypothesis assumes terms similar extent share similar linguistic contexts gives rise various methods cluster terms linguistic context form corresponding taxonomies 
spite increased interest ontology learning spite growing number approaches investigated see drawbacks currently prevailing field 
ontology engineers interested applying methods lack adequate comparison order choose available methods 

set unsupervised methods automatic taxonomy construction far focused agglomerative clustering methods efficient partitional clustering methods conceptual clustering leads easily traceable taxonomy construction investigated small extent respectively 
examine different clustering paradigms exploit distributional hypothesis automatically construct taxonomies 
provide original conceptual clustering method formal concept analysis automatic taxonomy construction compare standard hierarchical agglomerative clustering bi section kmeans instance divisive algorithm 
discuss approaches comparing dimensions effectiveness quality result ii efficiency runtime behaviour iii traceability taxonomy construction ontology engineer 
base discussion manually aifb university karlsruhe germany cimiano staab hotho aifb de philipp cimiano andreas hotho steffen staab built gold standard ii results literature iii qualitative discussion easy ontology engineer comprehend taxonomy constructed particular way corresponding method 
reminder organized follows section describes text processing methods describe terms linguistic context 
section introduces different clustering paradigms concretely approaches consider comparison 
section compares different approaches 
concluding discuss related section 
text processing describe linguistic context term syntactic dependencies establishes head subject object pp complement verb 
represent term context vector entries count frequency syntactically dominating verbs 
order determine frequencies dependencies automatically parse text trainable statistical left corner parser parse trees extract syntactic dependencies verb subject object pp complement verbs head subject object pp complement looking lemma lexicon provided take instance sentences people book hotels 
man drove bike beach 
parsing sentences extract syntactic dependencies left get pairs right book subj people book subj people book obj hotels book obj hotel drove subj man drive subj man drove obj bike drive obj bike drove beach drive beach furthermore output parser erroneous derived verb object dependencies correct ii derived dependencies interesting sense help discriminate different objects weigh verb object dependencies regard certain information measure 
consider verb object relations information measure threshold 
earlier www ims uni stuttgart de software en html see cogsci uiuc edu corpora treebank html main difference earlier performed lemmatization improved accuracy syntactic dependency process yielding better results 
follows experimented different information measures conditional probability works 
calculate conditional probability certain multi word term appears head certain argument position verb number occurrences term argument position verb number occurrences argument position verb 
clustering approaches different methods proposed literature address problem semi automatically deriving concept hierarchy text clustering 
grouped classes similarity methods hand set theoretical approaches hand 
methods adopt vector space model represent word term vector containing features attributes derived certain corpus 
type methods characterized similarity distance measure order compute pairwise similarity distance vectors corresponding terms order decide semantically similar clustered 
experiments example measure similarity terms cosine angle vectors representing similarity clustering algorithms categorized agglomerative bottom divisive top 
prominent examples type method 
contrast set theoretic approaches partially order objects inclusion relationship feature sets 
follows describe different clustering approaches experiments set theoretic approach fca similarity approaches viz 
hierarchical agglomerative clustering algorithm bi section kmeans instance divisive algorithm 
formal concept analysis formal concept analysis fca uses order theory analyze correlations objects features 
fca identifies data description called formal context set features bijectively correlated set objects 
correlated pair called formal concept 
formal concepts partially ordered equivalent 
objects conceptually clustered iff formal concept 
illustrate fca brief example 
corpus text tourism may derive features described section construct vector representation objects apartment car bike trip excursion 
representation features joinable table 
describes objects booked 
furthermore rent car bike apartment 
drive car bike may ride bike 
eventually derived corpus may join excursion trip 
binary representation objects fca constructs lattice formal concepts 
lattice corresponding running ex reader referred formal definition formal context formal concept subconcept superconcept relation formal concepts 
joinable apartment car motor bike excursion trip table 
tourism domain knowledge formal context excursion joinable trip apartment 
lattice concept hierarchy tourism example ample depicted left 
order interpret taxonomy apply rules 
introduce taxonomy concept labeled formal concept iff 
order order lattice 

introduce taxonomy concept object label 
order formal concept formal concept 
traceability fca method derive taxonomy object terms partially verb identifiers 
view taxonomy quite natural interpreting terms logical subsumption observe verb concept identifiers status concept identifier extensional point view 
going cases may exist appropriate hypernym language label certain concept verb identifier necessary 
example easily replace identifiers joinable activity wheeled vehicle vehicle respectively 
certainly difficult replace meaningful term denoting extension things 
fca method allows tracing reasons taxonomy constructed way efficiency notice literature runtime fca exponential minimum number objects number features 
general time complexity worst case number terms ordered set features typically set terms ordered 
hierarchical agglomerative clustering hierarchical agglomerative clustering compare similaritybased bottom clustering technique term forms cluster 
algorithm iterates step merges similar clusters available arrives universal cluster contains terms 
experiments different strategies calculate concept explorer software produce visualization see sourceforge net projects 
bike car similarity clusters complete average single linkage 
strategies may similarity measure terms cosine measure experiments measure similarity non trivial clusters different ways 
single linkage defines similarity clusters equal considering closest pair clusters 
complete linkage considers dissimilar terms 
average linkage computes average similarity terms clusters 
reader note prohibit merging clusters similarity order universal cluster root 
traceability 
similarity measures high dimensional space vector representations consider consequences agglomerative clustering typically hard trace ontology engineer 
insight constructed taxonomy usually restricted understanding initial merges individual terms small sized clusters meaningful concrete text corpus 
efficiency 
time complexity naive implementations hierarchical agglomerative clustering algorithms number terms 
optimized implementations achieve cf 

time complexity single linkage linkage metric 
bi section kmeans shown bi section kmeans variant kmeans fast divisive clustering algorithm :10.1.1.125.9225
frequently outperforms standard kmeans agglomerative clustering techniques 
bi section kmeans defined outer loop standard kmeans 
order generate clusters bi section kmeans repeatedly applies kmeans 
bi section kmeans initiated universal cluster containing terms 
loops selects cluster largest variance calls kmeans order split cluster exactly subclusters 
loop repeated times non overlapping subclusters generated 
similarity measure cosine measure defined 
bi section kmeans randomized algorithm produce runs average obtained results 
traceability 
concerning traceability bi section kmeans shares problem similarities high dimensional space difficult understand 
contrast agglomerative algorithms bi section kmeans may incur similar terms split different clusters wrong decision upper level generalization may jeopardize intuitive clusterings lower level 
efficiency 
time complexity bi section kmeans algorithms number terms number clusters 
setting interested complete tree terms produced bi section kmeans 
equal complexity 
evaluation order evaluate different clustering approaches compare automatically generated concept hierarchies hand don experiments possible select largest cluster splitting 
crafted ontology tourism domain 
ontology comparison study modeled german experienced ontology engineer 
manually added english labels concepts german label english counterpart result concepts came english label 
resulting tourism domain ontology comprised concepts 
task evaluating follows concepts ontology aim reproduce hierarchy applying clustering techniques 
line evaluating similar automatically produced hierarchies hierarchy 
approaches compare similarity ontologies 
ontologies compared lexical semantic level 
approach comparison lexical overlap taxonomic similarity ontologies 
core ontological model base evaluation defined follows definition core ontology core ontology structure consisting set called concept identifiers ii partial order called concept hierarchy taxonomy 
map terms concepts clustering approaches neglect fact terms polysemous 
lexical overlap lo lexical recall lr ontologies measured follows introduce lexical recall measures recall ontology terms concepts appear arguments certain verb results syntactic dependency extraction process results set variant lexical recall introduced order penalize system producing information terms dataset 
order compare taxonomy ontologies semantic sc 
semantic concept defined set super subconcepts 
example semantic bike concept hierarchy right 
comparing similarity automatically clustered ontology human modeled order fair comparison exclude concepts automatically created hierarchy ii concepts partially material thing standard computing semantic 
ontologies consider common concepts semantic concepts direct counterpart english 
principle fca able account polysemy terms gloss aspect 

taxonomic overlap ontologies computed follows follows defined follows compare calculating order balance lexical recall taxonomic overlap compute measure 
particular evaluate automatically produced ontology evaluating terms able order hierarchically calculating taxonomy able reproduce balance values measure described 
henceforth stand proxy respectively 
results domain specific text collection texts acquired www com www de 
furthermore general corpus british national corpus 
left shows values lexical measures lo lr lr results fca approach 
obviously lexical recall measures lr lr decrease higher thresholds conditional probability information cut lexical material 
contrast observe lexical overlap lo increases proportionally threshold 
reason higher threshold smaller automatically produced ontologies get 
best results measures lr lr lo 
left shows results taxonomic lr lr lr lr lo lo threshold modified semantic threshold 
results lexical taxonomic measures threshold fca approach lap calculated size automatically acquired hierarchy concepts explains lo threshold 
reason maximum lexical recall lr started threshold threshold lexical recall lr takes account concepts common ontologies 
right shows measures different combinations 
measures ordered bottom fairness system 
best result base measure get best result impressive 
compared agglomerative hierarchical clustering algorithm bi section kmeans get results depicted best result achieved fca approach mentioned followed agglomerative clustering approach complete linkage average linkage single linkage 
bi section kmeans achieves best result 
important mention threshold elements common features anymore produced hierarchies flat terms directly root node agglomerative approaches just binary tree produced random splits case bi section kmeans 
result constitutes baseline compare 
lr fca complete linkage bi section kmeans threshold 
comparison results threshold fca approach hierarchical agglomerative clustering complete linkage bi section kmeans discussion 
order compare performance approach human performance task interpret results regard study 
study subjects asked model taxonomy basis lexical entries relevant tourism domain 
taxonomic overlap manually engineered ontologies reached average 
clear automatic approach derive conceptual hierarchy set concepts definitely limits 
assuming lr humans task modelling concept hierarchy able order terms question get artificially creating human recall measuring approaches fall short 
order fully comparable perform additional experiment humans hierarchically order terms appearing dataset 
hand conclude problem automatically constructing hierarchies text clustering techniques inherently hard seen fact best approach just baseline strategy corresponding putting terms root node 
comparison 
shown different clustering approaches compared exhibit similar effectiveness automatically creating taxonomy text 
novel approach fca achieve slightly better results clustering approaches 
general approaches fall short human achievement appear support shown results average single linkage similar ones complete linkage 
human ontology engineer 
furthermore table summarizes previous sections highlights fact approach benefits drawbacks 
main benefit fca generate clusters formal concepts specific provides intensional description clusters contributing better understanding ontology engineer compare left 
contrast similarity methods provide level traceability due fact numerical value similarity high dimensional vectors drives clustering process remains opaque engineer 
agglomerative divisive approach different respect initial merges small size clusters correspond high degrees similarity understandable splitting clusters aims minimizing cluster variance harder trace 
clear disadvantage fca size lattice get exponential size context worst case resulting exponential time complexity compared agglomerative clustering bi section kmeans re spectively 
experiments fca showed near linear time complexity due fact vector representations terms extremely sparse 
effective efficiency traceability ness fca near linear empirical agglomerative fair clustering complete average single bi section weak fair kmeans table 
trade offs different taxonomy construction methods related doubt lack evaluation standards comparative field learning concept hierarchies text clustering 
mention related approaches briefly review evaluation methodology 
exist approaches distributional hypothesis clustering techniques derive term hierarchies text certain syntactic dependencies 
faure 
iterative bottom clustering approach nouns appearing similar contexts 
step cluster similar extents argument position verbs 
approach unsupervised user validate built clusters iteration 
results give number relevant clusters produced terms accuracy dependence percentage corpus 
pereira 
top clustering approach build unlabeled hierarchy nouns 
approach verb object relations represent context certain noun 
evaluate results hand considering entropy produced clusters indirect way context linguistic decision task 
caraballo uses agglomerative technique derive unlabeled hierarchy nouns data conjunctions nouns appositive constructs 
evaluates approach presenting hypernyms hyponym candidates users validation 
interesting approach incremental conceptual clustering category utility quality measure maximized 
fisher evaluates system context diagnosis prediction task medical domain 
clear evaluation methodologies comparable evaluation method 
corroborates initial claim lack comparative field help ontology engineer choose appropriate methods 
step direction 
interesting framework corresponding workbench mo allowing users design conceptual clustering methods assist ontology building task 
particular compare different representations pruning parameters distance measures 
framework principle general integrate different clustering methods results agglomerative clustering algorithm 
outlook comparison different clustering approaches regard task automatically learning taxonomies textual data 
comparison novel knowledge 
approaches examine comparable performance regarding task consider 
regardless performance approach benefits 
novel approach fca advantage produces clusters intensional descriptions clusters facilitating understanding 
benefit bi section means certainly efficiency 
furthermore proposed systematic way evaluating ontology learning algorithms comparing human modeled ontology 
sense aim establish baseline research 

research reported partially financed eu ist projects dot kom ist swap ist 
bisson nedellec canamero designing clustering methods ontology building mo workbench proceedings ecai ontology learning workshop 
caraballo automatic construction hypernym labeled noun hierarchy text proceedings th annual meeting acl 
cimiano hotho staab clustering ontologies text proceedings lrec 
day edelsbrunner efficient algorithms agglomerative hierarchical clustering methods classification 
duda hart stork pattern classification john wiley sons 
faure nedellec corpus conceptual clustering method verb frames ontology proceedings lrec workshop adapting lexical corpus resources sublanguages applications ed 
fisher knowledge acquisition incremental conceptual clustering machine learning 
ganter wille formal concept analysis mathematical foundations springer verlag 
harris mathematical structures language wiley 
hindle noun classification predicate argument structures proceedings annual meeting acl pp 

maedche staab measuring similarity ontologies proceedings ekaw 
springer 
pereira tishby lee distributional clustering english words proceedings st annual meeting acl 
steinbach karypis kumar comparison document clustering techniques kdd workshop text mining :10.1.1.125.9225
