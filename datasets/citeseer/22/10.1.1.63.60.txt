design principles application integration paul erik department information systems sciences stockholm university royal institute technology kista sweden dsv su se 
application integration major trend information technology today 
number principles design validation presentation process models align applications organisation business processes 
design principles divided groups 
group consists guidelines obtain different views models facilitate different stakeholders business managers designers operators common models process languages 
second group principles consists guidelines check completeness process models 
presents process description language bml business model language tailored modelling application integration 
background major trends information technology today web enterprise software packages application integration 
web provides environment link customers suppliers partners internal users 
enterprise software packages offer integrated environment support business processes functional divisions organisations 
packages enterprise resource planning erp example sap manage back office requirements packages provide front office capabilities customer services 
common web applications enterprise software packages need application integration 
application integration required connect front office systems back office systems transfer business processes web create extended supply chains involving customers partners suppliers 
application integration needed wrapping legacy systems migrating new environments 
demand application integration move process orientation organisations 
traditionally organisations functionally divided companies separated departments market production service 
functional organisation shown number weaknesses 
particular requires huge administration handle issues crossing functional borders considerable resources allocated tasks create value 
order overcome problems functional organisation companies concentrating business processes set related activities create value customers 
processes cross internal borders organisation external borders organisations 
business function support business process business process fig 

traditional function oriented structure left relation business functions systems 
right process oriented organisation requires integration systems 
supporting cross functional processes raises new demands systems applications 
traditionally applications built departments functions companies 
result relation functions applications function supported system applications 
architecture satisfactory process oriented organisations support business processes full applications integrated see fig 

handle integration applications efficient way technologies tools methodologies required 
main technology process brokers called process management systems aim aligning applications organisation business processes 
process broker provides integrated graphical environment process logic connecting applications encapsulated 
process broker enables users visualise construct analyse simulate execute processes application integration 
utilising process broker technology application integration complex design activity 
requires adequate methodological support structured easily understandable models produced 
purpose contribute methodological support introducing number principles design validation presentation process models aligning applications organisation business processes 
result joint project royal institute technology aims developing technology methods modelling language bml application process integration 
remainder organised follows 
section provides brief overview different architectures application integration particular process broker architecture 
section discusses characteristics problems application integration 
section describes related research process modelling languages section describe process modelling language bml business model language remainder 
classification messages processes base proposed design principles described section 
section design principles modelling examples 
section summarise give suggestions research 
architecture problems architectures application integration integration applications supported different architectures 
architecture integrating applications point point solution application directly connected application see fig 
left 
solution small number applications number applications increases number connections quickly overwhelming 
message broker architecture reduces complexity see fig 
middle 
main idea reduce number interfaces introducing central message broker easier support interfaces 
applications changes format connection changed message broker 
application application application application application message broker application application process broker application application ad application application person fig 

point point strategy integrate applications left 
middle message broker architecture reduces number interfaces 
right process broker collect process logic broker 
process broker see fig 
right extension message broker 
addition handling format conversions process broker encapsulates process logic connecting applications 
process logic resides place possible study analyse change processes graphical interface 
visualisation reduces complexity enables different categories people take part process design 

problems application integration process broker technology requires methodological support designers construct models align applications business processes 
experiences real world modelling study european telecommunication demonstrate problems modelling application integration 
telecom intended handle integration applications means process broker aimed facilitating complex interaction administrative technical applications 
problems noticed summarised follows unstructured complex models 
application integration results highly unstructured complex models 
reason exception handling describes applications human users respond expected way large part application integration specification easily obscures main business logic 
furthermore extensive communication process broker different applications tends conceal essential business logic 
redundancy 
process broker maintain control external applications means applications updated broker notified 
consequence desirable maintain redundant information duplicates parts information external applications 
redundant information enables process broker maintain complete correct easily available record interactions customers 
duplication information requires mechanisms handling possible inconsistencies 
incomplete models 
models application integration tend large complex risk designers overlook parts models needed maintain completeness consistency 
communication stakeholders 
possible distinguish kinds stakeholders domain experts business managers owners external applications business technical designers operators handle day today operations 
different stakeholders require different views system time need able communicate common models languages 
rest try address problems proposing set design principles application integration 
introduce process language called bml argue facilitates communication stakeholders 
table summarises problems identified addressed 
table 
table shows section identified problems attended 
section section section choice process view problems language bml classification guidelines unstructured complex models redundancy section completeness guidelines incomplete models communication stakeholders related process orientation important trends management practice research 
authors hammer davenport advocated radical change functional perspective process focussed perspective order improve customer satisfaction shorten lead times increase productivity handle technological development 
initially process orientation achieved attention manufacturing discipline years gained prominence information systems community 
number languages methodologies process specification design proposed 
languages petri nets uml activity diagrams 
distinction drawn activity oriented communication oriented process languages 
activity oriented process language uml activity diagrams epc intended handling arbitrary processes including material processes involving physical actions 
activity oriented language diagrams usually represent mix automated manual actions 
communication oriented language hand focuses communicative processes describing interaction people systems terms sending receiving messages provides opportunity support communication means information technology 
communication oriented languages heavily influenced speech act theory 
systems communication speech act oriented approach coordinator developed winograd flores supported communication process place 
idea applying speech act approach information systems analysis design employed speech act office modelling approach project middle eighties 
ideas developed business action theory demo dynamic essential modelling organisations approach 
believe communication oriented approach particularly suitable application integration process brokers application integration basically consists interchange messages systems people 
technology related process broker workflow management system 
generation workflow systems early supporting communication people concentrating document routing 
generation workflow technologies put business processes focus 
involving automatic actors automation processes facilitated 
step workflow systems implement enterprise wide workflow solutions provide tools managing processes 
process management includes process modelling process reengineering process implementation automation 
process broker seen step process management providing modelling simulation capabilities process broker enables rapid modifications business processes flexible way handling application integration 
marketplace new breed middleware technologies focused enterprise application integration emerged 
message broker vendors provide functionality enable applications interoperate minimum custom coding 
major products ibm mqseries integrator entire broker software ag 
message broker vendors adding process modelling simulation capabilities products moving process broker market 
major products market model manager software technology hp 
bml language application integration visualise application integration need process description language 
section briefly introduces language bml business model language developed 
language similarities sdl specification description language adapted application integration 
bml communication oriented process language see section means focuses describing interaction systems sending receiving messages 
language suitable application integration process brokers 
important advantage bml language business specification design operation systems 
means language different phases system life cycle feasibility analysis requirements specification design implementation phases operation phase 
enables different categories stakeholders language different purposes 
language directly implementation language extent replace ordinary programming language 
advantages bml capability describe partition interaction interfaces processes concurrently 
concurrency common application integration example applications updated parallel 
possibility partitioning bml reduces complexity handling large systems creating manageable understandable parts limited dependencies 
bml describe structure behaviour system kinds graphical diagrams 
structure system visualised static diagram see fig 
describes processes static mode 
static diagram describes messages sent processes processes environment external applications people 
dynamic behaviour system described process diagrams see fig 

diagrams seen templates visualising order messages shall sent received 
process diagram number process instances created runtime 
process instances execute independently communicate sending receiving messages asynchronously 
instance input queue see left fig 
received messages stored 
process instance waiting stable state perform transition state 
transition initiated message input queue chosen consumed 
customer process application application process process fig 

static diagram bml structure processes system 
process process application process process wait event fig 

process instance input queue 
process example fig 
process instance starts start state circle name 
messages process process initiate transition 
message queue consumed process instance performs transition state wait event 
transition message sent process message queue 
message initiate transition wait event message discarded 
message queue initiate transition wait event wait event state specified example 
transition data manipulated decisions new process instances created messages sent process instances process instance 
important feature bml data model examples 
process diagram data model describes structure type meaning data handled diagram 
data model describes structure data different messages 
main bml symbols see fig 
wait event start 
process instance waiting wait event state message received timer expired 
wait event symbol name starting state 

describes flow process instance 
receive message 
describes consumption message input queue 
send message 
describes sending message 
automated business activity 
describes operations performed process instance 
automated business decision 
control flow dynamically changed depending different business rules 
start timer expire timer 
application integration notion time important timers occur frequently obtain delays supervision 
timer started provided timeout value 
starting represented full time timeouts time application human actor 
symbols external actors 
wait event message message wait event receive message send message decision condition automated business decision timer start timer timer application activ ity operation automated business activity person expire timer application human agent fig 

symbols bml classifications messages processes classification messages section introduce classification messages basis formulating design principles section 
classification speech act theory 
experience users find difficult classify messages directly basic speech act types 
introduce set message types closely related messages typically application integration 
study speech acts active research area analytical philosophy world war ii influential approach date speech act theory developed john searle 
searle proposes taxonomy speech acts consisting classes directives 
called illocutionary points speech act 
assertive speech act purpose convey information state affairs world agent speaker hearer 
example raining speech act purpose commit speaker carry action bring state affairs 
example promise home clock directive speech act speaker requests hearer carry action bring state affairs 
example please bring salt declarative speech act speaker brings state affairs mere performance speech act 
example pronounce husband wife expressive speech act purpose express speaker attitude state affairs 
example coffee searle classification speech acts give list message types frequently occur application integration 
message types requests information services responses requests 
identify messages reserving booking releasing resources 
difference reserving booking reserving preliminary stage booking 
reservation followed booking cancelation reserved resource 
distinction important system automatically cancel reserved resources booked certain time 
example person reserve telephone numbers certain time choose book numbers 
reserved numbers booked time limit automatically released persons reserve book numbers 
message types information request 
information request directive speech act sender asks receiver piece information 
example telephone number help desk 
service request 
service request directive speech act sender asks receiver carry service 
typical examples services deliver product get authorisation booking resource 
contrast information request service request ask information state affairs requires state affairs changed 
example provide new telephone subscription 
reservation request 
reservation request special service request sender asks receiver reserve resource period time meaning resource reserved booked period time 
example reserve different telephone numbers customer choose 
booking request 
booking request special service request sender asks receiver resource available sender 
example book telephone number customer chosen 
information confirmation 
information confirmation assertive speech act sender response information request provides receiver piece information 
example telephone number help desk 
service confirmation 
service confirmation assertive speech act sender response service request informs receiver required service carried 
example provided new telephone subscription 
reservation confirmation 
reservation confirmation special service confirmation sender response reservation request informs receiver required reservation 
example telephone number reserved customer chosen book number certain time limit passed 
booking confirmation 
booking confirmation special service confirmation sender response booking request informs receiver required booking 
example telephone number booked 
service promise 
service promise speech act sender response service request commits carry required service 
example delivery department promises send ordered telephone 
notification 
notification assertive speech act sender informs receiver changes state affairs 
example customer started subscription 
cancel reservation 
cancel reservation directive speech act sender asks receiver cancel previous reservation 
example release reserved number 
cancel booking 
cancel booking directive speech act sender asks receiver cancel previous booking 
example release booked number 
classification processes section introduce classification processes 
purpose support designer building structured easily understandable application integration models 
classification identifies types processes largely independent combined clear simple interfaces 
possible partition system processes manageable understandable parts 
starting point classification customer actor process create value 
emphasising customer distinguish customer oriented processes directly interact customer processes support customer oriented processes various ways processes manage technical informational aspects 
classification identifies types processes customer process 
customer process focuses interaction customer 
customer process may contain messages customer process types external actors applications people customer 
purpose customer process show business logic customer point view 
interface process 
interface process handles interaction external applications people customer 
interface process may contain messages types processes external applications people 
interface process interacts exactly external application person 
purpose interface processes insulate interfaces external applications main business logic 
example format messages sent external application changes data model interface process modified customer processes left untouched 
subtypes interface processes request process 
request process handles information service requests processes 
release process 
release process handles cancel reservations cancel bookings processes 
synchronisation process 
synchronisation process number interface processes 
may contain messages different types processes external applications people 
purpose synchronisation process encapsulate piece business logic typically synchronisation process takes care request customer process invoking synchronising number interface processes 
maintenance process 
maintenance process handles internal storage information duplicates information external applications see redundancy section 
subtypes maintenance processes update process 
update process takes care notification customer synchronisation process stores information carried notification 
consistency process 
consistency process process checks inconsistency internally stored information information external applications 
consistency process takes appropriate action inconsistency detected 
typical structure model process classification shown fig 

customer process contains main business logic respect customer 
interacts synchronisation processes interface processes order take care customer requests 
sends notifications customer interaction maintenance processes shown fig 

believe structure supports flexibility stability understandability separating main business logic technical informational aspects 
design principles section designer automatically arrive application integration model proposed structure 
design principles section introduce number design principles form guidelines design validation presentation application integration models 
guidelines divided groups 
group consists guidelines obtain different views process models second group consists guidelines check completeness process diagrams 
main idea guidelines group view guidelines obtain series views processes starting customer oriented view business level 
view means process broker seen mediator customer value created set applications people see fig 

note customer communicate directly applications people process broker 
customer process broker application application application person fig 

customer communicate directly applications people process broker 
succeeding views add details moving business perspective technical perspective 
view extension previous adding subprocesses introducing new components existing diagrams 
note process broker contains modelled processes example process broker internal system external system represented applications people 
purpose guidelines second group completeness guidelines support designer creating processes include complete discourse structures fragments 
particular completeness guidelines ensure requests handled appropriate way outstanding bookings reservations taken care cases exception 
view guidelines section number views supporting top approach 
view illustrated means telephony case customer wants order subscription 
view 
customer interaction 
view models interactions process broker customer messages exchanged customer broker flow control 
view process diagram 
order initiated request number proposals order initiated request number proposals customer response customer number proposals order state information delivery customer process order subscription process fig 

static diagram view customer customer customer customer number proposals customer response nr chosen customer reporting order state false true subscription ok fig 

order subscription process view 
false true customer information delivery tasks designer view clarify process initiated messages customer sends process broker messages process broker sends customer 
information designer constructs static diagram see fig 

corresponding process diagram shown fig 

order subscription process initiated receives message called order initiated customer 
furthermore customer asks number telephone number suggestions request number proposals 
answer process broker message number proposals 
customer choose numbers ask telephone number suggestions satisfied suggested 
receiving message customer customer response evaluated decision point nr chosen 
customer chosen number process instance follows false path back customer ask numbers 
customer chosen number order taken care 
process broker inform customer status order reporting order state 
order approved customer get information subscription information delivery 
view 
broker requests 
view extension view describes process broker produces messages sends customer 
send message symbol broker view pair send message symbol receive message symbol added 
customer customer number handling number handling customer customer order initiated request number proposals request number proposals number proposals number proposals customer response update applications update applications customer order order answer reporting order state subscription ok false true fig 

order subscription process view 
customer information delivery nr chosen thing designer creating view determine messages sent process broker produced means send message symbols view identified analysed 
send message symbol number proposals fig 
send message symbol request number proposals receive message symbol number proposals added see symbols surrounded upper dotted box fig 

note dotted boxes part bml notation examples help reader identify extensions new view introduced 
send message receive message symbols upper dotted box represent messages sent received new subprocess number handling process 
view applications integrated visible 
visible view introduced subprocesses modelled 
false true view 
external system interaction 
subprocess introduced view specified 
information service requests responses included view 
order subscription process number handling process view order subscription request number proposals nr application request number proposals subscription ok nr application number proposals false true information delivery order subscription number proposals customer customer number handling number handling customer customer order initiated request number proposals request number proposals number proposals number proposals customer response update applications update applications customer order order answer reporting order state update applications process view order subscription order update nr application book nr update reg application register customer update nr application book nr answer update reg application register customer answer applic answered customer false true fig 

process diagrams view 
nr chosen false true order subscription order answer view models interaction applications integrated 
simplest case subprocess interface process communicates exactly application see section 
example interface process number handling process top fig 
call application nr application returns answer number proposals 
number handling process forwards answer process invoked subprocess order subscription process 
cases convenient introduce levels subprocesses 
subprocess specified requires interaction applications designer construct synchronisation process see section 
synchronisation process update applications process bottom fig 
invokes subprocesses 
subprocesses update nr application process update reg application process relation synchronisation process update application process shown static diagram fig 

invoked subprocesses interface process look interface process number handling process fig 

customer number proposals request number proposals order state book nr information delivery number proposals order initiated request number proposals customer response number proposals customer process order subscription process interface process nr handling process register customer answer register customer interface process update reg application process register customer answer register customer request number proposals reg application interface process update nr application process order answer order fig 

static diagram view 
nr application book nr answer book nr book nr answer synchronisation process update applications process view 
exception handling 
view specifies exception handling 
receive message symbol sender external application human actor start timer expire timer added behaviour exception raised see dotted boxes fig 

order subscription request number proposals nr application request number proposals timer wait event timer nr application number proposals fig 

number handling process view 
order subscription number proposals answer time order subscription number proposals ok views specify normal course events 
view designer specifies handle exceptions situations actor replied request pre specified time limit 
means designer extend interface process diagrams adding start timers expire timers behaviour timer expired 
furthermore designer may extend process diagrams higher level synchronisation customer processes order describe handle error messages interface processes 
example shown fig 
describing interface process number handling process returns message number proposals answer time order subscription process timer expired 
order subscription process handle answer time message 
note timer symbols interface processes customer process 
situation occurs designer wants system handle situations customer answer time 
view wait event state symbols added receive message symbol see dotted box fig 

note receive message symbol request number proposal state symbol start symbol 
wait event start symbols described section 
view 
resource releasing 
view adds messages type cancel reservation cancel booking 
process completed intended necessary release resources reserved booked process 
releasing resources handled view extending process diagrams accordingly introducing certain release interface processes see section 
fig 
messages delete booking delete registration sent release interface processes delete nr application process delete reg application process see dotted box 
view 
notifications 
view adds messages type notification 
main types situations notifications required 
exception occurred customary inform operator event may take appropriate action 
secondly notification may sent maintenance process see section redundantly stores information essential states affairs 
order subscription order update nr application book nr completeness guidelines update reg application register customer answer ok false true wait event order subscription order answer ok order subscription order answer ok update nr application book nr answer update reg application register customer answer delete nr application delete booking fig 

update application process view 
applic answered delete registration false delete reg application completeness guidelines exploit fact messages typically occur certain dialogue structures 
simple dialogue structure consists pair question followed answer 
known dialogues structure conversation basic action introduced winograd flores consists steps request negotiation fulfilment 
guidelines preliminary result research 
research produce additional guidelines 

process diagram information request service request followed corresponding information confirmation service confirmation respectively 
pair request confirmation optionally followed notification 

process diagram reservation request followed corresponding booking request actor 

process diagram reservation request followed corresponding cancel reservation 
process instance typically takes path intermediate request satisfied 

process diagram booking request followed corresponding cancel booking 
process instance typically takes path intermediate request satisfied 
true concluding remarks research addressed methodological support modelling aligning application integration business processes 
main contribution guidelines introduced ways 
design 
designer utilise view guidelines constructing process diagram view gradually refine set diagrams view obtained 
furthermore designer completeness guidelines guide design individual process diagram 
secondly guidelines support validation verification 
checking completeness guidelines designer ensure essential parts discourse structures exception handling omitted 
thirdly guidelines presentation purposes 
business oriented users choose see top view views technical designers implementers proceed lower views 
category stakeholders layered views help understand system allowing focus essential business perspective proceed technical perspective 
different categories users example customers business technical designers possibility suggest input right level modeling process 
business designers probably want concentrate important parts business processes clarify want main business logic 
intend follow research goes directions 
compare designers suggested view guidelines designers 
possibility different kinds stakeholders design models 
empirical study give input refined additional design principles 
direction find dialog structures produce additional completeness guidelines validation models 
obtain complete methodology need guidelines helping design data models describe structure type meaning data handled process 
performed part swedish national board industrial technical development sponsored project process broker 
authors grateful jan owe mikael nilsson christer valuable suggestions knowledge 
tank colleagues royal institute technology especially andersson prasad commenting earlier versions 



url www com solutions 
atwood bringing process automation bear task business integration 
technology 
url www com products whitepapers html 
ki lyytinen speech act office modelling approach 
acm transactions office information systems 
vol 

sdl applications protocol specification 
carl verlag prentice hall international uk 
butterworth automating business processes mission critical distributed applications 
fort software 
url www forte com product downloads html 
davenport process innovation reengineering information technology 
business school press boston 
dietz modelling communication organizations 

ed linguistic instruments knowledge engineering 
elsevier science publishers 
dietz business modeling business redesign 
proceedings th hawaii international conference system sciences 
iee computer society press 
entire broker 
software ag 
url www com solutions default htm 
software 
url www com products alli series html georgakopoulos hornick overview workflow management process modeling workflow automation infrastructure 
distributed parallel databases green ontological analysis integrated process modelling 
proceedings th international conference caise 
springer verlag heidelberg generic business frameworks action modelling 
proceedings conference language action perspective 
springer verlag hammer reengineering 
manifesto business revolution 
new york hp overview 
hewlett packard 
url www ice hp com cyc af dir pdf jablonski bussler workflow management 
thomson london lind reconstruction different business processes theory method driven analysis 
proceedings conference language action perspective 


ed workflow integrating enterprise 
butler group report 
mqseries integrator ibm 
url www ibm com software ts mqseries process broker architecture system integration homepage process broker project 
url www dsv su se arrange index html reisig petri nets 
springer verlag berlin wide area workflow management creating partnership st century 
springer verlag sheer aris business process modelling 
springer verlag berlin searle speech acts essay philosophy language 
cambridge university press winograd flores understanding computers cognition new foundation design 
ablex norwood 
enterprise application integration 
url www com eai survival html nilsson business model language model manager copyright 
