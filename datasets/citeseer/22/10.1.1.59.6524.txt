mumoc active infrastructure open video caching paolo antonio luca foschini dipartimento di elettronica informatica sistemistica universit di bologna viale bologna italy phone fax deis unibo advances networking content delivery systems enabling new challenging provisioning scenarios growing number users access video demand vod possibly moving different points attachment internet different access terminals 
calls novel middlewares capable supporting personalized vod access dynamically activating intermediate nodes vod servers clients 
proposes mumoc dynamic flexible overlay infrastructure distributed caching vod prefixes vod metadata 
achieve openness easy interoperability legacy vod services mumoc adopts standard xml formats dublin core mpeg represent vod metadata 
experimental results show mumoc significantly reduces bandwidth utilization user perceived delays 
addition notwithstanding dynamic building overlay network application level approach introduced overhead compatible strict requirements imposed multimedia distribution best effort internet 

provisioning multimedia data internet challenging service scenario 
peer peer file sharing applications gnutella kazaa pastry addressed issue storing large amounts mainly multimedia data largely decentralized way trying provide online content preview facilities downloaded data kazaa 
solutions widened interest multimedia data sharing internet current scenarios applications produce internet traffic 
problem significantly complex video demand vod streaming applications best effort internet instance users demand low playback delays nance negotiated quality provisioning notwithstanding internet latency loss rates 
addition diffusion networked computing environments home office open public spaces proliferation wireless enabled portable devices identify novel provisioning scenarios huge number users willing ubiquitous continuous access streaming services 
users demand possibility move different internet attachment points change access terminals having service adapted runtime characteristics access environment preserving session state 
issues motivate novel highly flexible middleware level approaches support service provisioning 
dynamic distributed infrastructures support multimedia content dissemination adaptation efficiently active participation service points intermediate nodes path clients servers 
words middleware support active services services resulting cooperation interworking middleware service components distributed service paths clients servers traversed service flows 
particular active services improve vod streaming best effort internet primarily support prefix caching online caching initial part vod flows intermediate traversed nodes allow fast playback startup reduction vod startup delays case prefix cache hit active infrastructure achieve interoperability providing open standard representations available vod flows simplify interworking legacy vod systems 
presents mum open caching mu moc active infrastructure distributed caching significantly extends mobile agent ubiquitous multimedia middleware mum possibility caching multimedia prefixes metadata descriptions vod prefixes full vod flows highly interoperable way 
mumoc automatically deploys caching mid components needed provisioning depending client location 
caching vod flows rapidly exhaust storage capacity proxy nodes multimedia caches usually store portions vod streams proxies 
similarly primary idea mumoc support distributed replication storage seconds prefix popular vod contents intermediate nodes client server paths 
particular client requires vod flow mumoc routes request server intercepts incoming vod flow caches prefix proxy node locality currently providing network connectivity client 
addition mumoc caches metadata describing available vod contents distributed cache disseminates vod metadata goal reducing response time vod retrieval 
mu moc metadata represented interoperable xml format combines dublin core standard mpeg increase openness mumoc solution simplify integration legacy vod services 

mum active middleware overview mumoc provides open caching vod prefixes metadata integrated mum active middleware dynamic quality service qos tailoring adaptation multimedia flows 
section gives brief overview mum design guidelines functions provide needed background fully understanding mumoc proposal 
detailed description mum scope 
best effort internet lacks infrastructure support effective delivery information streams ongoing research struggling solve problem 
ubiquitous computing complicates scenario possibly mobile users willing access services ubiquitously switch working sessions runtime terminals different capabilities maintain sessions open temporarily disconnected 
issues call support capable dynamically extending traditional internet infrastructure needed depending client points attachment motivated mum design implementation 
primary design guideline mum exploit proxy middleware components dynamically deploy client server path activating intermediate nodes traversed vod flows active middleware 
mum proxies participate service delivery playing dual role client server passing pipeline service data received previous middleware component service path 
interposition proxies distribution paths starts recognized effective solution ubiquitous service provisioning generation internet 
mumoc solution vod caching permits maintain vod prefixes metadata locally activated intermediate node integrates dynamically deployed infrastructure mum proxies better described 
mum middleware implemented top soma mobile agent ma platform 
ma implementation permits move middleware components session state provision time depending location client requests vod flows 
ma programming paradigm recognized effective solution middleware supports mobility enabled provisioning environments ma properties mobility asynchronicity autonomy 

mumoc solution open caching introduce functions mumoc middleware sketching actual vod streaming usage scenario depicted 
networked colleges libraries university campus interested collaboratively providing vod streaming service recorded lessons semester 
instance imagine cs lesson held morning engineering college stored college vod server 
afternoon bob goes central library access wi fi laptop recorded morning lesson missed 
bob request produces streaming vod flow engineering college vod server network locality currently provides connectivity bob laptop step 
mumoc enables bob rapidly find vod flow suitable qos characteristics exploits bob request operate side effect vod service provisioning prefix caching lesson central library proxy cache 
suppose afternoon alice goes engineering library personal digital assistant pda asks vod understood points morning lesson 
mumoc active middleware browse metadata describing disseminated vod prefixes full vod flows mumoc discover node close client central library holds prefix requested vod content frame size large alice limited pda display 
case mumoc commands prefix streaming central library proxy possibly activates caching prefix engineering library node step 
mumoc downloads rest flow suffix engineering college forwards alice device step 
bob 
central library eng 
library alice 

root 
colleges eng 
college server component proxy cache component client component 
mumoc university campus usage scenario exemplified usage scenario mumoc assist multimedia delivery integrated networks wireless access points extends accessibility traditional wired internet infrastructure 
core mumoc distribution network consists set fixed hosts interconnected wired broadband lans wired hosts compose overlay network logically organized tree 
hosts structured location abstractions defined mum framework tree leaves paths 
client terminals possibly differentiated limited local resources access core overlay wired wireless connectivity play role leaves vod distribution tree 
mumoc aims reducing server proxy transmission costs primarily bandwidth consumption client perceived delay vod startup prefix caching client vicinity sketched example original batching solution 
traditional batching techniques server side batch consecutive requests received specified time interval 
mumoc employs proxy batching technique takes advantage cached vod prefixes proxy nodes 
indicate technique suffix batching 
proposes similar solution proxies shares mumoc assumption general internet service provisioning scenario service paths usually unicast enabled contrast batching techniques require ubiquitous availability multicast support 
activates proxy node receives request prefix stored locally prefix streaming client ends receives requests clients located locality 
referring university usage scenario suppose request cs lesson received central library node 
case cache hit prefix caching node client locality immediately starts streaming vod prefix client properly schedules suffix download server avoid client side visualization discontinuity prefix terminates 
successive requests vod flow clients locality suggests providing clients immediately locally cached prefix anticipating suffix transmission separate channel soon suffix starts received proxy node 
rapidly note approach focuses reducing transmission costs server proxy path assuming local proxy client transmission costs significantly lower wired wireless integrated networks campus wide streaming scenario 
solution proposed requires large storage capacity client devices buffer suffixes unsuitable wired wireless deployment environments 
section details original extensions mumoc proposes traditional strategy 
mumoc implements distributed replicated vod metadata repository provide high metadata availability reduce delay startup requested vod flow 
fact vod metadata crucial mu moc middleware instance anytime client requires multimedia presentation mumoc looks corresponding metadata distributed repository determine vod flow available qos characteristics vod metadata exploited guide service adaptation support session continuity 
frequent usage vod metadata mumoc operations middleware decides perform metadata caching potentially wired node overlay infrastructure maintain high replication degree metadata frequently requested vod flows better explained section 
mumoc design implementation section presents architecture mumoc active middleware describes primary design implementation choices 
additional implementation details code mumoc prototype available lia 
deis unibo research mum 
mumoc architecture mumoc middleware organized main modules local prefix cache metadata browser organized layers mechanisms facilities depicted 
multimedia title description possibly hints desired vod quality metadata browser mb module returns full metadata available multimedia presentations match searching criteria 
module offers functions metadata querying inserting deleting 
mb component locally hosts partial replica metadata available vod contents see section coordinate distributed mb browser components retrieve needed vod description 
particular local mumoc metadata repositories extend mum repositories new functions store metadata standard open extensible formats 
local prefix cache module maintains prefixes intermediate nodes client server paths 
mechanisms layer module consists different components devoted caching vod prefixes enforcement 
rapidly observe mumoc modules implemented terms mas implementation permits achieve extreme flexibility extensibility 
instance better detailed section mumoc extends base strategy support client devices limited memory capabilities insufficient suffix buffering dynamically interposing ma client prefix caching proxy ma called shadow proxy acts fixed network behalf limited client device performs needed suffix buffering client vicinity 

content cache content cache module offers functions online vod prefix download enforces vod prefix replacement strategies implements different original extensions proposed mumoc 
caching enabled proxy content cache core 
mumoc dynamically deploys caching enabled proxy served vod flow achieve flow adaptation tailoring 
caching enabled proxy exploits main components shown cache manager cache writer transmission scheduler 
addition proxy agent middleware component part mum architecture realizes necessary signaling client proxy server execution sends caching enabled proxy endpoint communication channel served client receive suffix 
signaling path stream path caching enabled proxy cache writer prefix store proxy agent cache manager transmission scheduler pr prefix pr pr list 
architecture mumoc content cache cache manager offers apis proxy 
particular apart methods cache writer access cache manager exposes callbacks notify caching enabled proxy relevant events arrival suffix flow proxy 
transmission scheduler handles requests schedules server proxy proxy client transmissions 
cache writer intercepts incoming vod flows saves prefix store local file system 
note mumoc intercepts vod flow transmitted server client require additional transmission 
demonstrated analytical experimental results prefix caching especially conjunction reactive transmission schemes reduces client perceived startup delay bandwidth occupation 
prefix length significantly influence reduction transmission costs 
mumoc chooses adopt fixed prefix length seconds minimum cache slot caching enabled proxies seconds 
fact previous experiments accomplished mum project demonstrated interval seconds sufficient configure proxy server service path common application scenarios 
cache replacement mumoc implements proportional priority strategy greedy algorithm assigning prefix number cache slots proportional product vod size popularity 
strategy achieves sub optimal results requires simple processing limited set information 
requires client devices open communication channels proxy get prefix pre fetches suffix flow buffers locally client node 
prefix visualization ended client goes suffix download starts employing buffered vod data continue multimedia visualization interruptions 
mumoc proposes implements significant original extension technique order support client devices limited storage capabilities introduced example section 
case vod flow request served employing mumoc deploys activates agent wired node network locality client currently connected mu moc builds extended service flow pipeline including case server proxy agent client commands start prefix streaming 
suffix starts received proxy suffix forwarded charge buffering prefix transmission client merges prefix suffix order avoid perceivable interruptions vod flow client 
note original extension require client buffering client device requires transmission channel 
observe ubiquitous computing middleware vod transformations needed client server path dynamically vod flow fit specific hardware software characteristics served client terminal desirable cache prefix adapted vod flow allow fast playback startup case new requests similar client terminals 
mumoc recognizes opportunity capable locally caching adapted prefixes exploiting fly vod transcoding functionality provided mum 
addition way mumoc take advantage cached adapted prefix suffix adaptation advance smoothing issues due long service path configuration complex vod transcoding 

metadata browser distributed mumoc metadata browser mb exploits node organization location abstractions 
mb component runs tree node may communicate mbs parent children nodes depicted 
node maintains metadata vod presentations stored sub tree 
instance metadata stored include metadata replicated nodes bn 
consequence root node caches metadata presentations stored system 
observe generate excessive load root node vod metadata limited size especially compared vod prefixes 
instance size second prefix mpeg vod flow frame size frame rate frames second kb associated metadata exceed kb 
mbc mb client node mb mb node root node node am mbc client mb node bn mb 
mumoc metadata browser addition mumoc stores root node metadata exploiting lightweight directory access protocol ldap service may deployed different distributed nodes case large number available vod flows consequent large size corresponding metadata 
mumoc clients exploit lightweight client called metadata browser client mbc simply access disseminated vod metadata possibility locally hosting metadata repository order minimize utilization usually limited client storage 
mumoc client looking specific vod title initiates metadata query 
vod title metadata repository wired node client currently attached query propagated recursively mumoc tree mb component respond 
network traffic response time reduced case metadata cache hit contributes accelerate playback startup 
vod prefix elimination occurs corresponding vod metadata discarded mb distributed implementation 
removal protocol proceeds follows vod metadata discarded node vod prefix stored delete request forwarded root 
case insertion new vod metadata mumoc immediately propagates metadata node vod flow added ldap enabled root node 
increases vod metadata availability making new metadata rapidly visible deployment environment 
addition mb offers functions evaluate convenience caching specified vod prefix node 
particular browser controls vod prefix characteristics proxy cache node reachable hops 
instance request specified vod prefix occurs node browser checks associated prefix stored nodes 
cached prefix vod prefix replicated saved 
vod metadata mb distributed repository represented standard interoperable format illustrated section 

metadata implementation high heterogeneity multimedia formats transport protocols storage solutions motivates definition adoption standards describe multimedia contents independently specific technology commercial product 
sake openness interoperability mumoc combines mpeg multimedia picture experts group mpeg dublin core dc representation formats describe vod flows available distribution network 
hand dc adoption permits largely interoperable large set web library resources maintain backward compatibility solutions developed past museum oriented information retrieval 
hand dc sufficient describe complex multimedia content mu moc conjugates mpeg standard similarly research efforts area 
dc widely adopted xml standard maintain library museum bibliographic metadata 
dc developed networked resources mainly texts images support representation multimedia specific metadata describe possibly complex articulated composed multimedia contents 
instance dc distinguish images moving ones uses poor expressive internet media types mime describe multimedia object formats 
mpeg provides rich complete set items describe audiovisual data 
instance defines types multimedia content image video audio audiovisual multimedia type supports additional descriptions exploited data format medium type file format type coding 
exhaustive description mumoc dc extended schema available lia deis unibo 
research mum adoption open interoperable metadata mumoc twofold objective simplifies dynamic selection suitable different versions vod content different qos levels depending user terminal characteristics specified terms standard profile metadata second facilitates integration legacy vod systems services potentially accelerating acceptance diffusion mumoc middleware proposal 

experimental results section presents experimental results mumoc performance executing simple vod lesson streaming service built top mumoc caching middleware actual deployment environment network lab 
considered usage scenario similar section students willing access vod flows registered lessons 
participating node hosting mumoc middleware may publish vod contents downloading simply registering mumoc mb 
client nodes host simple mumoc application client look requested flow command delivery starts playing soon possible download 
testbed consists set sun blade workstations equipped mhz processor mb ram connected mbps ethernet lan 
workstations equipped sunos operating system java virtual machine jvm version exploit java media framework jmf performance pack solaris version multimedia streaming library 
heterogeneous clients limited hardware software capabilities represented laptops exploiting ieee connectivity equipped windows jvm version jmf performance pack windows 
experiments mainly intended measure user perceived delays different situations order evaluate feasibility approach quantitatively measure benefits overhead due mumoc middleware particular exploitation jmf multimedia streaming library 
reported results average values set runs 
experiment disabled mu moc caching functions evaluate configuration activation time middleware components metadata querying vod flow retrieval vod streaming 
average value time interval metadata vod flow request visualization start client shown ms case nodes organized level tree 
interval demonstrated mainly composed video frame activation client ms metadata query ms rtp session configuration including server endpoint signaling rtp client creation ms player initialization ms rendering initialization ms mumoc disabled time interval shown linearly grow clientserver distance table additional ms traversed node mumoc overlay network 
second experiment objectives evaluating mumoc content cache activation time startup delay increase case activated cache cache case mumoc signaling rtp client server activation shown ms creation requires ms third experiment activated distributed caching mumoc metadata experiencing startup time increase ms hop distance requesting client node mb component maintains matching metadata table 
mumoc mb works fixed threshold measured service path activation experiment decreases ms part time due metadata browsing 
considered fourth case users exploiting access terminals limited capabilities 
specific performance case activation time demonstrated ms ms spent additional mumoc signaling rtp client server activation due added traversed middleware component 
table sums average times registered user perceived startup delays different situations 
delay directly related low performance jmf libraries create initialize java processor player objects establish rtp sessions 
contrary overhead introduced distributed coordination mumoc middleware demonstrated limited acceptable examined cases 
experimental results confirm feasibility interposition proposal added delay largely compensated possibility exploit serving access terminals limited buffering capabilities reducing bandwidth consumption 
table 
average times user perceived startup delays infrastructure required time msec configuration service path activation cache metadata browser service path activation activation metadata browser vod lesson cached reachable node important showed row table prefix cache hits significantly reduce playback delays perceived users 
addition case cache overhead introduced mumoc prefix caching middleware limited 
mumoc guideline pervasively distributing network processing workload different localities distribution tree permits limit overhead achieve scalability 
summary experimental results mumoc performance shown encouraging mumoc active middleware imposes user perceived delay common application scenarios usual values ensuring performance results compatible constraints soft real time vod distribution usual internet transmission rates 

related distribution multimedia content internet significantly changes usual web caching scenario 
peer peer file sharing content networks high bandwidth availability users imposing workloads experienced internet infrastructure 
exploitation distributed caching shown potential improving service performance response times research activities focused proposing interesting effective solutions caching replacement positioning distributed cache coordination 
specific aspect distributing replicas vod flow parts set nodes solutions started investigate usage vod prefixes collaborative caching vod segments 
particular proposes caching solution frame granularity level showing effectiveness prefix exploitation 
research group investigated achieve optimal prefix positioning server batching architecture 
collaborative caching solution exploits peer topeer organization cache video segments different peers 
mumoc approach similar points view cache distribution application level overlaying 
mumoc aims disseminating replicas vod prefixes metadata minimize network traffic reduce vod starting delay improve scalability decentralized local access 
nowadays growing research industrial interest enhancing expressiveness interoperability multimedia content descriptions 
mumoc exploits results obtained researches integrating dc mpeg provide open extensible format vod metadata 
best knowledge mumoc middleware original implementing caching vod prefixes metadata integrating active overlay infrastructure mobile access vod flows adapted fly 

mumoc realizes open interoperable way overlay network distributed caching capable reducing client experienced response time prefix techniques 
experimental evaluation mumoc prototype shown notwithstanding flexible ma application level approach introduced overhead widely compatible usual requirements internet vod distribution 
encouraging results stimulating investigation extension current mumoc prototype 
particular working fully supporting user roaming mobility guarantee mobile users wi fi access terminals continue receive served vod flow noticeable interruptions handoff ieee cells 
primary idea exploit hand original lightweight techniques predict cells visited mobile users hand proactive anticipated buffering predicted localities 
partially supported italian web minds project italian cnr strategic manet project 
www gnutella org www kazaa org rowstron druschel pastry scalable distributed object location routing large scale peerto peer systems 
acm conference distributed systems platforms 
saroiu analysis internet content delivery systems usenix operating systems design implementation 
wang iceberg internet core network architecture integrated communications ieee personal communications vol 

foschini mum middleware provisioning continuous services mobile users ieee international symposium computers communications 
stefanelli ubiquitous provisioning internet services portable devices ieee pervasive computing vol 

bai ito qos control video audio communication conventional active networks approaches comparison ieee communication surveys vol 
duchamp general purpose proxies solved unsolved problems ieee hot topics operating systems 
stefanelli mobile agent middleware mobile computing ieee computer vol 

fuggetta picco vigna understanding code mobility ieee transactions software engineering vol 

ma shin multicast video demand services acm computer communication review vol 

bing optimal proxy cache allocation efficient streaming media distribution ieee info com 
sen rexford towsley proxy prefix caching multimedia streams ieee infocom 
archive dstc edu au mpeg ddl org www net au index html www org mobile lau kumar venkatesh generalised cost aware caching scheme caching continuous media objects best effort network environments ieee international workshop distributed computing 
nahrstedt qos aware middleware support collaborative multimedia streaming caching service elsevier microprocessors microsystems vol 

hunter enhancing semantic interoperability multimedia core ontology ieee transactions circuits systems video technology vol 

