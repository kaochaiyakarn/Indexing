learning effective surface text patterns information extraction jan korst philips research laboratories prof aa eindhoven netherlands jan korst philips com novel method identify effective surface text patterns internet search engine 
precision criteria identify effective patterns candidates 
aspect frequency occurrence 
pattern relate diverse instances expresses non functional relation 
learned surface text patterns applied ontology population algorithm learns new instances classes new relations 
experiments methods 
ravichandran hovy method automatically learn surface text patterns expressing relations instances classes search engine 
method training set identifies natural language surface text patterns express relation instances 
example born proved precise pattern expressing relation instances mozart class person class year 
address issue learning surface text patterns observed drawbacks ravichandran hovy respect application patterns general information extraction setting 
drawback ravichandran hovy focus surface text patterns answer called questions voorhees 
assumption instance related exactly instance class 
general information extraction setting assume relations functional 
second drawback criterion selecting patterns precision issue pattern effective 
call pattern effective links different instance pairs excerpts search engine 
ontology model information domain interested 
goal populate ontology information extracted 
ontology instances class related relation multiple instances class 
example identify classes movie actor acts relation relation 
general multiple actors star single movie single actor stars multiple movies 
domain independent method learn effective surface text patterns representing relations 
patterns highly usable formulate criteria select effective ones 
show patterns populate ontology 
identification effective patterns important want perform queries search engine possible limit services 
organized follows 
defining problem section discussing related section algorithm learn effective surface text patterns section 
discuss application method ontology population algorithm section 
section early experiments 
sections handle 
problem description consider classes cq ca corresponding non empty sets instances iq ia elements sets iq ia instances cq ca respectively known 
sets complete possible instances corresponding class set consider relation classes give non empty training set instance pairs tr iq ia instance pairs known related 
problem classes cq ca sets instances iq ia relation set related instance pairs tr learn effective surface text patterns express relation say example consider classes author book title relation written 
assume know related 
leo war peace nter grass die 
want find natural language phrases relate authors titles books wrote 
query pattern combination name author eco wrote want search results query contain books author 
population ontology seen generalization question answering setting 
question answering interested finding possible instance pairs pairs fixed instance author book pairs pairs containing fixed author 
functional relations ontology correspond questions population classes person country born relation 
non functional relations identify answers list questions example name books written louis ferdinand line countries border germany 
related brin identifies patterns discovery relations web brin 
describes website dependent approach identify hypertext patterns express relation 
web site patterns learned explored identify instances similarly related 
agichtein gravano system combined named entity recognizer 
craven ontology populated crawling website 
tagged web pages sites rules learned extract information website 
research named entity recognition addressed nineties message understanding conferences chinchor continued example zhou su 
automated part speech tagging brill useful technique term extraction frantzi domain closely related recognition 
terms extracted predefined part speech structure adjective noun combination 
methods discussed extract information natural language texts part speech tags hyponym patterns 
referred ravichandran hovy method identify surface text patterns web search engine 
extract patterns expressing functional relations question answering setting 
selection extracted patterns precision patterns 
example pattern born identified pattern pair mozart salzburg compute precision number excerpts containing mozart born salzburg divided number excerpts mozart born 
information extraction ontologies creation closely related fields 
reliable information extraction need background information ontology 
hand need information extraction generate broad highly usable ontologies 
overview ontology learning text buitelaar 
early hearst describes extraction text patterns expressing wordnet relations hyponym relations corpus 
focusses merely identification text patterns phrases containing instances related pair 
patterns multiple pairs suggested usable patterns 
knowitall hybrid named entity extraction system etzioni finds lists instances class web search engine 
combines hearst patterns learned patterns instances class identify extract named entities 
uses adaptive wrapper algorithms crescenzi mecca extract information html markup tables 
cimiano staab method search engine verify hypothesis relation 
example interested hyponym relation candidate instance pair river nile relation search engine query phrases expressing relation rivers nile 
number hits queries measure determine validity hypothesis 
korst method described populate ontology queried text patterns 
algorithm extracts instances search results having submitted combination instance pattern query search engine 
extracted instances retrieved excerpts formulate new queries identify extract instances 
algorithm algorithm learn surface text patterns relations 
google tm retrieve patterns 
algorithm training set tr instance pairs related 
training set chosen instance pairs typical relation discover relation expressed natural language texts web section 
section address problem selecting effective patterns total set patterns 
identifying relation patterns generate list surface text patterns algorithm 
evaluation purposes compute frequency pattern 
step formulate queries tr 
interested phrases sentences keywords expressions style appear titles webpages option 
gives search results queried expression bodies documents titles 
query 
regular expression operator accepted google 
placeholder zero words 
step send queries google collect excerpts pages returns query 
step extract phrases matching queried expressions replace names classes 
step remove phrases sentence 
step normalize phrases removing mark ignored google 
google case insensitive ignores punctuation double spaces translate phrases normal form simplest expression query leads document retrieved 
step update frequencies normalized phrases 
step repeat procedure pair tr 
generated list relation patterns frequencies retrieved google excerpts 
selecting relation patterns list relation patterns interested effective ones 
interested precise ones 
example retrieved pattern dd mars proved precise pattern expressing relation person vincent van gogh place birth 
clearly rare phrase unsuited mine instance pairs relation general 
hand high frequency pattern guarantee effectiveness 
frequently occurring pattern born london querying england suited find london born persons general pattern unsuited narrow express relation person country origin 
observations account formulate criteria selecting effective relation patterns 

patterns frequently occur web increase probability getting results querying pattern combination instance 

pattern precise 
query pattern combination instance iq want search results containing instances ca 

relation functional pattern wide spread search results querying combination pattern instance iq distinct related instances ca possible 
measure criteria scoring functions relation patterns 
freq number occurrences excerpts algorithm described previous subsection 
instances iq calculate follows 
fi fo fi number google excerpts querying combination containing instances ca 
fo total number excerpts 

number distinct instances class ca querying pattern combination larger choose testset subset iq reliable measures precision spreading 
number google queries increases number patterns instance add calculate score patterns multiplying individual scores score freq efficiency reasons compute scores patterns highest frequencies 
problem remains recognize possible multi word instance google excerpts 
ontology alignment setting sets ia iq expanded problems trivial determine ia accompanied queried expression 
setting instances ca known complete list books written world solve problem stages 
identify rules class extract candidate instances 
additional google query verify candidate instance class ca 
identifying candidate instance identification multi word terms issue research 
setting allow elaborate techniques identify candidate instances 
additionally perform check extracted term 
class create rules identify candidate instances focus high recall 
current experiments simple term recognition rules regular expressions 
example identify candidate instance class person queried expression accompanied capitalized words 
identifying instance class relation interested question extracted term instance class ca 
example term godfather term belong class movie 
relation viewed hyponym relation 
verify hypothesis instance ca hyponym relation patterns 
fixed set common patterns expressing hyponym relation hearst cimiano staab see table 
class names plurals 
patterns acceptance function cq cq including tand cq example tand cq tand cq tand table hearst patterns instance class relation 
cq number google hits query pattern combined term plural form class name cq 
threshold chosen 
calculating sum google hits queries known instances class 
figures threshold chosen minimum sums 
note term preceded followed fixed phrase queries 
guarantee full term interested 
example extracted term los los angeles city falsely identify los city los follow fixed 
number google hits expression number google hits querying expression followed expression identify term instance class ca add term set ia relate instance iq pattern find proven effective pattern express different relation instance pairs training set 
reduce amount google queries list terms belong ca 
terms occur multiple times excerpts checked 
clause combine individual queries 
check number hits query exceeds threshold 
amount google queries phase equals amount distinct terms extracted 
surface text patterns information extraction having method identify relation patterns focus utilizing patterns information extraction texts search engine 
ontology represent information extracted 
suppose ontology classes 
corresponding instance sets 
classes relations defined index number classes 
non empty sets contain training set instance pairs relations 
instance maintain list expressions query 
initially empty 
step algorithm learn surface text patterns relation steps algorithm performed criterion reached new instances instance pairs 
step select relation instance ii ij exists pattern expressing queried combination step construct queries patterns send queries google 
step extract instances excerpts 
step add newly instances corresponding instance set add instance pairs 
step exists instance formulate new queries repeat procedure 
learn new patterns extracted instance pairs repeat procedure 
note instances class cx learned algorithm applied relation input algorithm applied relation populate sets iz 
experiments section discuss experiments conducted 
experiment involves identification effective hyponym patterns 
second experiment illustration application learned surface text patterns information extraction 
assuming relation pair classes 
index distinct multiple relations ci cj 
learning effective hyponym patterns interested effective surface text patterns intuitive formulations relation test case compute effective patterns hyponym relation test set names countries 
experiment set follows 
collected complete list countries world cia world factbook iq set countries ia set countries country 
set tr consists pairs countries country ia apply surface text pattern learning algorithm set tr 
algorithm identified patterns 
computed frequently patterns 
table give effective patterns algorithm 
consider patterns boldface true hyponym patterns 
focussing patterns observe groups hearst patterns 
pattern freq prec spr countries countries small country country code country map countries including country country country flag countries neighboring countries country name republic country book poor country country countries country code calling independent country surrounding countries poorest countries countries countries country countries countries table learned hyponym patterns scores 
hearst patterns show effective 
observation useful want minimize amount queries hyponym patterns 
expressions properties hold www cia gov cia publications factbook country countries example existence country code dialing trivially identified manually useful reliable patterns 
combination adjective common pattern occurring times list 
plan identify adjectives google excerpts part speech tagger brill 
applying learned patterns information extraction text retrieval conference trec question answering track contains list question example band members voorhees 
illustrate ontology population algorithm context list question answering small case study 
note consider processing question research 
inspired questions countries burger king located interested populating ontology restaurants countries operate 
identify classes country restaurant relation located classes 
hand algorithm instances country instances restaurant mc donald 
add instance pairs relation algorithm 
pairs subset country size compute ranked list patterns 
extract terms consisting capitalized words 
test set threshold number google results queries extracted terms 
small test names international restaurant branches appropriate threshold 
algorithm learned ranked list surface text patterns table list instances restaurant table 
instances names large international chains burger king 
expected names geographic locations names famous chinese french 
category false instances filtered number common words 
populate ontology relations burger king instances country effective patterns 
pattern prec spr freq ca restaurants cq ca restaurants cq ca hamburger chain occupies villages modern day cq ca restaurant cq ca restaurants cq ca hamburger restaurant southern cq table top learned patterns ca cq relation 
chinese bank denny pizza hut kentucky fried chicken subway bell continental wendy long john silver hotel burger king japanese west bp world brazil san francisco leo victoria new york lyons felix roy california pizza kitchen marks cities emperor friendly harvest friday new york vienna montana louis xv red mark italia french tim table learned instances restaurant 
algorithm returned instance pairs countries related burger king 
burger king website list countries hamburger chain operates 
countries identified 
implies results precision recall 
falsely related countries eastern europe locations burger king said plans expand empire 
novel approach identify useful surface text patterns information extraction internet search engine 
argued selection patterns effectiveness pattern occur frequently precise wide spread represents non functional relation 
criteria combined scoring function select effective patterns 
www com method arbitrary relations relations link instance multiple instances 
patterns information extraction 
combine patterns instance offer expression query search engine 
excerpts retrieved extract instances simultaneously instance pairs 
learning surface text patterns efficient respect number queries know instances classes concerned 
part algorithm linear size training set 
furthermore select frequent patterns perform queries compute score patterns 
setting incomplete perform check unique term identified candidate instance excerpts queries 
number queries extracted unique candidate instance fully depends rules identify candidate instance 
apply learned patterns ontology population algorithm 
combine learned high quality relation patterns instance query 
way perform range effective queries find instances class simultaneously find instance pairs relation 
experiment identification hyponym patterns showed patterns identified intuitively reflect relation considered 
generated ranked list hyponym patterns 
experiment restaurant ontology illustrated small training set suffices learn effective patterns populate ontology precision recall 
algorithm performs respect recall instances big international restaurant branches 
identification instances open improvement additional check filter falsely identified candidate instances 
currently check extracted term instance class querying hyponym patterns 
find instances related surface text pattern accept instances instance pair 
find mozart born germany mozart born austria extracted instance pairs added ontology 
need post processing remove falsely instance pairs 
know relation functional select frequently occurring instance pair 
process identifying instance text needs research especially method identify instance class relations querying hyponym patterns 
challenge lies area improving precision output ontology population algorithm 
additional filtering techniques elaborated identification techniques expect able improve precision output 
plan research check functions enumerations candidate instances known instances class 
example enumeration chinese mc donald google burger king mcdonald gives hits 
experiment extraction hyponym patterns suggests ranking hearst patterns effectiveness 
knowledge effectiveness hearst patterns utilized minimize amount queries 
investigate ways compare methods systems trec setting web corpus 
acknowledgments colleagues bart bakker anonymous reviewers useful comments earlier versions 
agichtein gravano 

snowball extracting relations large plain text collections 
proceedings fifth acm international conference digital libraries 
brill 

simple rule part speech tagger 
proceedings third conference applied natural language processing anlp pages trento italy 
brin 

extracting patterns relations world wide web 
webdb workshop sixth international conference extending database technology edbt 
buitelaar cimiano magnini editors 

ontology learning text methods evaluation applications volume frontiers artificial intelligence applications 
ios press 
chinchor editor 

proceedings seventh message understanding conference muc 
morgan kaufmann fairfax virginia 
cimiano staab 

learning 
sigkdd explorations newsletter 
craven dipasquo freitag mccallum mitchell nigam slattery 

learning construct knowledge bases world wide web 
artificial intelligence 
crescenzi mecca 

automatic information extraction large websites 
journal acm 
etzioni cafarella popescu shaked soderland weld yates 

unsupervised named entity extraction web experimental study 
artificial intelligence 
frantzi 

automatic recognition multi word terms nc value method 
international journal digital libraries 
korst 

automatic ontology population 
proceedings seventeenth belgium netherlands conference artificial intelligence pages brussels belgium 
hearst 

automatic acquisition hyponyms large text corpora 
proceedings th conference computational linguistics pages morristown nj usa 
hearst 

automated discovery wordnet relations 
christiane fellbaum editor wordnet electronic lexical database 
mit press cambridge ma 
ananiadou 

automatic discovery term similarities pattern mining 
proceedings second international workshop computational terminology taipei taiwan 
ravichandran hovy 

learning surface text patterns question answering system 
proceedings th annual meeting association computational linguistics acl pages philadelphia pa voorhees 

overview trec question answering track 
proceedings th text retrieval conference trec gaithersburg maryland 
zhou su 

named entity recognition hmm chunk tagger 
proceedings th annual meeting association computational linguistics acl pages philadelphia pa 
