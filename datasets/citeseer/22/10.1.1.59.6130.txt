arxiv cs ai feb appear theory practice logic programming defeasible logic programming argumentative approach alejandro garc guillermo simari cs uns edu ar grs cs uns edu ar departament computer science engineering universidad nacional del sur bah argentina reported introduces defeasible logic programming delp formalism combines results logic programming defeasible argumentation 
delp provides possibility representing information form weak rules declarative manner defeasible argumentation inference mechanism entailed 
delp argumentation formalism deciding contradictory goals 
queries supported arguments defeated arguments 
query succeed argument warranted argument supports undefeated warrant procedure implements dialectical analysis 
defeasible argumentation basis delp allows build applications deal incomplete contradictory information dynamic domains 
resulting approach suitable representing agent knowledge providing argumentation reasoning mechanism agents 
research nonmonotonic reasoning logic programming argumentation provided important results seeking develop powerful tools knowledge representation common sense reasoning 
advances areas leading important useful results areas development intelligent agents multi agent system applications 
reported introduces defeasible logic programming delp formalism combines results logic programming defeasible argumentation 
delp provides possibility representing information form weak rules declarative manner defeasible argumentation inference mechanism entailed 
weak rules key element introducing defeasibility pollock represent relation pieces knowledge defeated things considered 
believe common sense reasoning defeasible way explicitly programmed 
defeat result global consideration corpus knowledge agent performing inference 
defeasible argumentation provides tools doing 
alejandro garc guillermo simari defeasible argumentation relatively young area mature provide solutions areas 
argumentative systems applied developing applications legal systems negotiation agents decision making prakken vreeswijk ches evar garc 
show delp considers kinds program rules defeasible rules representing weak tentative information mammal fly denoted flies mammal strict rules representing strict sound knowledge mammal dog dog mammal 
syntactically symbol distinguishes defeasible rule strict 
pragmatically defeasible rule represent defeasible knowledge tentative information may posed 
defeasible rules add new representational capability expressing weaker link head body rule 
defeasible rule head body understood expressing reasons believe antecedent body provide reasons believe consequent head simari loui 
strong negation allowed head program rules may represent contradictory knowledge 
strong negation introduced extensions logic programming extensions handle contradictory programs way feel improved 
delp incorporates argumentation formalism treatment contradictory knowledge 
formalism allows identification pieces knowledge contradiction 
dialectical process deciding information prevails 
particular argumentation definition inference relation possible incorporate treatment preferences elegant way 
delp query succeed argument warranted 
intuitively argument minimal set rules derive 
warrant procedure involves looking counter arguments defeat donald nute nute remarks inference defeasible blocked defeated way 
weak rules provide locus blocking defeating occur 
query succeed supporting argument defeated 
order establish non defeated argument argument rebuttals counter arguments defeaters considered counter arguments criterion preferred defeaters take form arguments defeaters defeaters may exist 
manner starting argument query dialectical analysis consider defeaters defeaters defeater 
delp provides warrant procedure implements dialectical analysis 
query warranted argument supports undefeated warrant procedure 
dialectical analysis certain constraints imposed problematic situations producing infinite sequence defeaters 
delp manage defeasible reasoning handle contradictory programs allowing representation defeasible non defeasible knowledge 
discuss briefly extend delp considering default negation 
defeasible logic programming argumentative approach resulting approach suitable representing agent knowledge providing argumentation reasoning mechanism agents 
garc particular application multi agent system stock market domain developed delp 
agents knowledge specified form defeasible logic program agents reason delp order reach decisions buying selling stocks 
brewka states brewka argumentation plays central role communication human artificial agents ubiquitous task professional everyday life 
agree brewka necessary take logical procedural character argumentation seriously 
remarkable nute defeasible logic nute extensions defeasible logic antoniou antoniou defeasible argumentation formalisms loui prakken sartor vreeswijk consider defeasible rules representing knowledge 
formalisms priority relation rules program order decide rules contradictory consequents 
organized follows 
section introduces language delp default negation 
section defeasible argumentation formalism developed 
comparison criteria introduced 
dialectical procedure obtaining warrant developed section 
section delp default negation considered 
implementation issues applications described section section related surveyed 
language delp language defined terms disjoint sets set facts set strict rules set defeasible rules 
language delp literal ground atom negated ground atom represents strong negation 
literals variables 
definition fact fact literal ground atom negated ground atom 
definition strict rule strict rule ordered pair denoted head body member head literal second member body finite non empty set literals 
strict rule head body 
ln written 
ln 
definition defeasible rule defeasible rule ordered pair denoted head body member head literal second member body finite non empty set literals 
defeasible rule head body 
ln written 
ln 
syntax strict rules correspond basic rules lifschitz call strict emphasize difference defeasible ones 
observe alejandro garc guillermo simari strong negation may head rules 
examples strict rules innocent guilty dead alive 
syntactically symbol distinguishes defeasible rule strict 
pragmatically defeasible rule represent defeasible knowledge tentative information may posed 
strict rule represent non defeasible information bird penguin expresses penguins birds defeasible rule represent defeasible knowledge flies bird expresses reasons believe bird provide reasons believe flies birds presumed fly usually bird fly symbols denote meta relations sets literals interaction language symbols 
particular contraposition program rules 
examples follow standard typographic conventions logic programming extending conveniently representing delp rules 
program rules non empty body 
observe strict rule empty body represented fact defeasible rule empty body fact 
example express defeasible reasons believe information defeasible fact 
defeasible rule empty body introduced approaches called presumption nute garc garc 
technical reasons develop core delp considering presumptions added extension delp see section 
defeasible rules default rules 
default rule 
justification part consistency check contributes control applicability rule 
defeasible rule represents weak connection head body rule 
effect defeasible rule comes dialectical analysis inference mechanism involves consideration arguments counter arguments rule included 
defeasible rule need encode particular check 
advantage notorious beliefs supported knowledge represented default rules change 
changes lead re representing new beliefs modifying justification part rules lead re representation cascade effect see brewka eiter 
changes knowledge represented defeasible rules general reflected sole addition new defeasible rules representation 
knowledge base changes frequently defeasible rules better alternative 
example introduce illustrative example comparing defaults defeasible rules 
interested reader referred nute comparison nonmonotonic theories 
definition defeasible logic program defeasible logic program abbreviated de possibly infinite set facts strict rules defeasible rules 
program distinguish subset facts strict rules subset defeasible rules 
required denote 
defeasible logic programming argumentative approach strict defeasible rules ground 
usual convention lifschitz examples schematic rules variables 
schematic rule ground stands set ground instances de schematic rules define lifschitz ground ground order distinguish variables elements schematic rule denote variables initial uppercase letter 
delp possible answers query undecided unknown see definition 
introduce examples defeasible logic programs anticipating results approach 
sections explain mentioned results obtained 
example follows de sets separated convenience presentation bird chicken bird penguin flies penguin chicken tina penguin tweety scared tina flies bird flies chicken flies chicken scared nests trees flies show sections delp answer flies tina answer flies tina 
answer flies tweety answer flies tweety 
example consider de adapted prakken vreeswijk gun lives chicago gun lives chicago pacifist lives chicago nixon pacifist quaker pacifist republican quaker nixon republican nixon show example expected result obtained answer pacifist nixon undecided answer pacifist nixon undecided 
case approaches problem propagation indecision answer gun nixon undecided 
result happen delp see example 
example consider de alejandro garc guillermo simari approaches literal accepted proved rule head rule contradicts 
observe literals strict rules contradictory literals derived 
delp kind contradiction strict rules discovered answer literals undecided 
see section details 
example de represents information stock market domain buy stock price buy stock price risky risky fusion risky closing risky fusion strong price acme fusion acme steel strong steel explain answer buy stock acme 
define constitute defeasible derivation 
sections proof procedure defeasible argumentation formalism defined 
definition defeasible derivation de ground literal 
defeasible derivation denoted consists finite sequence 
ln ground literals literal li sequence li fact exists rule ri strict defeasible head li body 
bk literal body element lj sequence appearing li 
de derivation literal called defeasible show may exist information contradiction prevent acceptance valid 
program expressed schematic rules ground obtaining defeasible derivations 
example defeasible logic programming argumentative approach considering example sequence chicken tina bird tina flies tina defeasible derivation literal flies tina obtained set rules bird tina chicken tina flies tina bird tina observe exists defeasible derivation flies tina sequence chicken tina flies tina 
observation defeasible derivation monotonic de set program rules defeasible derivation defeasible derivation observation program facts defeasible derivation obtained 
literal defeasible derivation observe defeasible derivation defeasible strict rules kind rule 
follows call strict derivation derivation strict rules facts 
instance literal flies tweety strict derivation formal definition follows 
definition strict derivation de literal defeasible derivation ln say strict derivation denoted fact rules obtaining sequence ln strict rules 
symbol denote complement literal respect strong negation literals contradictory complementary 
flies tina flies tina contradictory literals 
definition contradictory set rules set rules contradictory exists defeasible derivation pair complementary literals set 
observe de example contradictory set rules flies tina flies tina defeasibly derived see example happens de example buy stock acme buy stock acme 
strong negation program rules enriches language expressiveness allows represent contradictory knowledge 
general useful defeasible logic program contradictory set rules 
set facts strict rules defeasible logic program represent non defeasible information posses certain internal coherence 
observation required parenthesis distinguishing rule 
alejandro garc guillermo simari note set de corresponds logic program strong negation 
contradictory set de answer lit extended logic programming 
convention de set non contradictory 
set assumed non contradictory contradictory 
form de may contain contradictory information 
observe set non contradictory program contradictory literals flies tina flies tina defeasible derivation case contradictory goals defeasibly derived formalism deciding needed 
delp uses defeasible argumentation formalism order perform task 
strong negation introduced extended logic programming gelfond lifschitz 
formalism pair contradictory literals derived set lit literals derived considering analysis 
suppose regard example extended logic program considering rules strict rules 
program extended logic program clearly program pair complementary literals flies tina flies tina derived 
answer set calculated gelfond lifschitz lit 
deciding contradictory goals formalism priority relation program rules need included program nute antoniou antoniou prakken sartor kakas dimopoulos kakas see section 
delp priority relation needed deciding contradictory goals 
characteristic maintains declarative nature knowledge represented delp interaction pieces knowledge expressed language way result influence corpus agent knowledge 
reason burden defeasible inference falls language processor system figures interactions knowledge encoder programmer 
programmer evoke behavior representation order add procedural control defeasible rules 
shown section priorities defeasible rules delp alternative comparison approach 
defeasible argumentation section defeasible argumentation formalism introduced 
formalism evolved simari loui simari garc delp framework 
central notion formalism notion argument 
informally argument minimal non contradictory set rules derive 
delp answers queries supported argument 
de contradictory answers queries supported non contradictory set rules 
formal definition follows 
defeasible logic programming argumentative approach definition argument structure literal de 
say argument structure set defeasible rules 
exists defeasible derivation 
set non contradictory 
minimal proper subset satisfies conditions 
short argument structure simply argument minimal non contradictory set defeasible rules obtained defeasible derivation literal literal called supported notion adapted argument structure definition simari loui 
note strict rules part argument structure 
example consider defeasible logic program example 
literal flies tina supported argument structure flies tina chicken tina flies tina literal flies tina argument structures support flies tina bird tina flies tina flies tina chicken tina scared tina flies tina observe delp construction argument structures nonmonotonic 
adding facts strict rules program may cause argument structures invalidated contradictory 
example consider program 
argument structure longer argument structure set contradictory set 
approaches defeasible argumentation argument construction monotonic contradictory arguments considered self defeating arguments arguments defeat 
condition previous definition prevents occurrence self defeating argument structures 
come back issue section 
observation exists strict derivation exists unique argument structure exists defeasible derivation contradictory observation subset 
argument structure unique condition definition minimality superset argument structure 
example literal flies tweety strict derivation flies tweety unique argument structure 
alejandro garc guillermo simari interesting note strict derivation derivation defeasible derivation set defeasible rules see observation exists defeasible derivation set contradictory argument structure obtained condition definition argument structure satisfied 
definition sub argument structure argument structure sub argument structure important note union arguments argument 
argument structures set improper argument minimal contradictory see example 
example consider de argument structures obtained consider set 
exists defeasible derivation argument structure contradictory defeasible derivation observe minimal set defeasible rules provides argument structure proper subset argument structure 
shown example possible argument structures contradictory literals 
considering literal supported argument arguments contradict exist 
situation clear interesting preference criterion deciding arguments counter arguments 
issue explored section introduce graphical representation arguments follows 
arguments depicted triangles 
upper vertex triangle labeled argument set defeasible rules argument associated triangle 
sub arguments represented smaller triangles contained triangle corresponds main argument issue 
shows graphical representation argument sub arguments rebuttals counter arguments delp answers queries supported arguments 
argument may defeated arguments 
informally query succeed defeasible logic programming argumentative approach fig 

argument sub argument supporting argument defeated 
order establish non defeated argument argument rebuttals counter arguments defeaters considered counter arguments criterion preferred counter arguments arguments may exist defeaters 
suggests dialectical analysis formally introduced sections 
notion rebuttal counter argument introduced 
definition disagreement de 
say literals disagree set contradictory 
complementary literals trivially disagree set contradictory 
furthermore literals complementary disagree 
example literals disagree contradictory 
show notion disagreement allow find direct indirect conflicts arguments 
definition counter argument say counter argues attacks literal exists sub argument disagree 
counter argues literal called counter argument point sub argument called disagreement sub argument 
left gives graphical representation argument counterarguments conditions definition 
example continuing example flies tina chicken tina flies tina counter argument flies tina bird tina flies tina vice versa 
note particular case disagreement sub argument argument 
consider argument structure nests trees tina nests trees tina flies tina flies tina bird tina argument structure flies tina chicken tina flies tina counterargument nests trees tina attacking inner point counterargument point flies tina 
alejandro garc guillermo simari shown previous example counter argument attack directly attack inner point distinguish direct attack indirect attack 
shows cases 
fig 

indirect attack left direct attack right interesting property counter argument notion 
counter argument counter argument point direct attack counter argument see right 
case counter argument attacking inner point disagreement sub argument counterargument see left 
example argument counter argument complementary flies tina flies tina 
example show argument counter argument supporting literals complementary 
disagreement arises 
example consider 
program counter argument literals disagree 
observation shown literal strict derivation supported proposition states de literal argument structure counter arguments 
words strictly derived literals 
proposition exists possible counter argument argument structure proof suppose exists counter argument contradictory set contradictory set 
contradictory argument structure condition definition argument hold 
proposition shows argument structure counter arguments proposition states counter argument argument structure defeasible logic programming argumentative approach proposition argument structure counter argument argument structure proof suppose exists counter argument contradictory set contradictory set 
set argument condition definition argument hold 
argument structure counter arguments attacking different points different counter arguments attacking point show order verify argument associated counter arguments bk examined defeasible potential reason rejecting bi better unrelated bi candidate defeating argument better bi bi taken consideration defeater informal discussion shows convenience introducing preference order arguments 
comparing arguments definition formal criterion comparing arguments central problem defeasible argumentation 
existing formalisms adopted different solutions 
argumentation systems usually assume ordering set possible arguments dung vreeswijk kowalski toni bondarenko 
instance dung approach argumentation framework pair args attack args set possible arguments attack binary relation args 
attack argument attacks argument formalisms explicit priorities program rules 
conflict rules solved 
approach prolog nute defeasible logic nute extensions defeasible logic antoniou antoniou logic programming negation failure kakas dimopoulos kakas 
prakken sartor possible reason defeasibly priorities rules 
alternative specificity criterion poole explicit order rules arguments need 
formalisms comparison criterion gelfond lifschitz 
introduce criteria comparing arguments 
specificity second priorities program rules 
generalized specificity formally define particular criterion called generalized specificity allows discriminate conflicting arguments 
intuitively notion specificity favors aspects argument prefers argument alejandro garc guillermo simari greater information content rules direct 
words argument deemed better precise concise see example 
definition characterizes specificity criterion defined poole extended defeasible argumentation simari loui simari 
adapted fit delp framework 
stated means defeasible derivation means strict derivation definition specificity de set strict rules including facts 
set literals defeasible derivation considered set facts 
argument structures obtained strictly specific denoted conditions hold 

exists mentioned possible defeasible derivation literal set rules facts 
set possible defeasible derivation 
possible set literals facts 
holds say set activates activation set example consider program example argument structure flies tina chicken tina flies tina strictly specific flies tina bird tina flies tina direct observe uses strict rule bird tina chicken tina 
example activation set activates set bird tina activates activate program argument structure flies tina chicken tina scared tina flies tina preferred information literals chicken tina scared tina observe activation set contains literals chicken tina scared tina set chicken tina activates activate strictly specific definition equi specificity arguments equi specific denoted iff literal strict derivation literal strict derivation 
defeasible logic programming argumentative approach lemma equi specificity equivalence relation 
proof trivial definition 
proposition shows strictly derived literals equi specific 
proposition proof empty 

observe contradictory contradictory 
proposition argument structures equi specific disagree 
proof 
suppose disagree set contradictory 
contradictory argument structure satisfy condition argument definition 
argument comparison rule priorities formalisms define explicit priorities rules priorities deciding competing 
priorities usually embedded derivation mechanism competing rules compared individually derivation process 
formalisms derivation notion bound single comparison criterion 
delp order decide competing arguments support compared 
comparison criterion independent derivation process replaced modular way 
introduce particular comparison criterion uses form ordering rules priority example 
show comparison criterion arguments rule priorities formulated 
assume explicit priorities defeasible rules program 
strict rules represent sound information priorities 
priorities allowed defeasible rules 
showed proposition literal strict derivation counter argument 
implicitly strict derivation preferred arguments defeasible rules 
comparison criteria defined 
priority criterion defined example 
definition de preference relation explicitly defined defeasible rules 
argument structures argument preferred alejandro garc guillermo simari 
exists rule ra rule rb ra rb 
example consider de priority buy stock price buy stock risky risky fusion price acme fusion acme steel buy stock price buy stock risky criterion definition argument structure buy stock acme risky acme risky acme fusion acme steel buy stock acme preferred buy stock acme price acme buy stock acme sophisticated criterion obtained combining defined 
example considering generalized specificity argument preferred existing priorities 
defeaters argumentation lines argument structure counter argument arguments compared order decide prevails 
counter argument better comparison criterion called proper defeater 
argument better worse blocking situation occurs say blocking defeater better considered defeater preference criterion required comparing arguments notion defeating argument formulated independently particular criterion 
away comparison criterion assuming exists comparison criterion arguments denote 
examples rest assume means strictly specific defined 
definition proper defeater argument structures 
proper defeater literal exists sub argument counter argues observe previous definition argument structure compared disagreement subargument defeasible logic programming argumentative approach example example counter argument proper defeater observe proper defeater definition blocking defeater argument structures 
blocking defeater literal exists sub argument counter argues unrelated preference order example nixon diamond provides example blocking defeaters 
consider de example 
argument structures obtained pacifist nixon quaker nixon pacifist nixon pacifist nixon republican nixon pacifist nixon argument blocking defeater vice versa 
shown delp answer query pacifist nixon undecided 
definition defeater argument structure defeater 
proper defeater 
blocking defeater defeater argument structure identified proper blocking 
show distinction considered warrant procedure 
interesting note argumentation formalisms distinction proper blocking defeaters consider proper defeaters 
proposition shows argumentation process possible attack subargument argument equi specific proposition defeater proper blocking corresponding disagreement subargument case proof proposition shows disagree 
counter argument order establish argument structure non defeated defeaters considered 
suppose defeater argument structure defeaters may exist 
manner sequence argument structures created element sequence defeats predecessor 
formalize notion 
alejandro garc guillermo simari definition argumentation line de argument structure obtained argumentation line sequence argument structures denoted element sequence ai hi defeater predecessor ai hi fig 

argumentation line defined argumentation line result infinite sequence arguments 
section impose restrictions argumentation lines finite sequences allowed 
argumentation line argument supporting main query argument ai hi defeats predecessor ai hi supporting argument interfering argument supporting argument interfering 
argumentation line split disjoint sets supporting arguments interfering arguments 
definition supporting interfering argument structures 
argumentation line define set supporting argument structures 
set interfering argument structures 
argument structure defeaters generate different argumentation line 
observe argumentation lines arguments defeater generating argumentation lines starting example consider program defeats defeats point argumentation lines 
suppose defeats defeat argumentation lines starting show process considers possible argumentation lines needed 
defining process introduce restrictions argumentation lines 
defeasible logic programming argumentative approach acceptable argumentation lines section show undesirable situations may arise argumentation line leading infinite sequence defeaters 
impose certain constraints argumentation lines order avoid problematic situations 
situations reported simari 
related literature argument structure said self defeating defeater 
self defeating argument structure argumentation line starting infinite see 
fig 

infinite argumentation line self defeating argument approaches defeasible argumentation deal self defeating arguments 
stated arguments delp self defeating 
proposition delp argument structure self defeating 
proof assume self defeating defeater exist counter argument point contradictory 
contradictory argument structure 
problematic situation mentioned henry prakken prakken vreeswijk reciprocal defeaters 
happens pair arguments defeat 
example shows case defeats attacking subargument defeats attacking subargument fig 

reciprocal defeaters example consider de 
argument proper defeater vice versa 
observe 
alejandro garc guillermo simari strictly specific subargument strictly specific clearly situation undesirable leads construction infinite sequence arguments 
reciprocal defeaters detected avoided 
analysis prompted henry prakken led investigate types undesirable situations argumentation 
circular argumentation obtained argument structure reintroduced argumentation line defend 
shows example circular argumentation 
argument reintroduced line supporting argument leading infinite argumentation line 
circular argumentation discussed simari particular case fallacious argumentation 

fig 

circular argumentation order avoid circular argumentation need impose condition argument reintroduced argumentation line 
subtle case circular argumentation happens subargument 
shows situation argument defeater disagreement sub argument 
line argument reintroduced defeater allowing cycle detected broken reintroduced fallacious situation subargument defeated earlier line 

fig 

circular argumentation sub argument different undesirable situation shown 
argument supporting interfering argument 
situation arises supporting argument subargument literal contradictory arguing favor argument 
defeasible logic programming argumentative approach argument avoided sound argumentation line 
clearly agreement supporting arguments respectively interfering argumentation line 
expressed formally notion argument concordance proposed simari recalled 
definition concordance de 
arguments concordant iff set non contradictory 
generally set argument structures ai hi concordant iff ai non contradictory 
fig 

contradictory argumentation line 
case shown cycle detected broken disallowing argument fallacious move argument set supporting arguments non concordant 
observe status argument line change depending criterion hand allow just forbid argument line defeated hand forbidden argument line defeated 
establish condition set supporting arguments argumentation line concordant hold set interfering arguments 
argument example allowed 
different ill formed situation corresponds blocking defeater defeat blocking defeater 
consider de dangerous tiger tiger hobbes dangerous baby baby hobbes dangerous pet pet hobbes dangerous hobbes baby hobbes supports dangerous hobbes 
argument dangerous hobbes tiger hobbes blocking defeater argument dangerous hobbes pet hobbes blocking defeater 
argumentation line may obtained 
observe defeater introduced line 
argumentation line accepted defeats 
blocking argument defeating blocking defeater blocked 
equivalent accepting blocking situation having arguments dangerous hobbes preferred having just argument contrary 
order problem alejandro garc guillermo simari argument ai hi blocking defeater ai hi construction argumentation line proper defeater defeating ai hi delp undesirable situations mentioned avoided requiring argumentation lines acceptable defined 
definition acceptable argumentation line 
ai hi hn argumentation line 
acceptable argumentation line iff 
finite sequence 

set supporting arguments concordant set interfering arguments concordant 

argument ak hk subargument argument ai hi appearing earlier 

argument ai hi blocking defeater ai hi ai hi exists ai hi proper defeater ai hi interesting note changes definition acceptable argumentation line may produce different behavior formalism 
definition way tuning system obtain different results 
warrant dialectical analysis delp literal warranted exists non defeated argument structure order establish non defeated set defeaters considered 
defeater argument structure defeaters turn considered 
stated example argumentation line arise leading tree structure call dialectical tree 
definition dialectical tree argument structure program dialectical tree denoted defined follows 
root tree labeled 
non root node tree labeled hn 
hn sequence labels path root bk qk defeaters hn defeater bi qi argumentation line hn bi qi acceptable node child ni labeled bi qi defeater hn bi qi acceptable leaf 
previous term justification 
decide adopt term warrant order unify terminology approaches 
defeasible logic programming argumentative approach dialectical tree node root represents defeater proper blocking parent leaves correspond non defeated arguments 
path root leaf corresponds different acceptable argumentation line 
show example dialectical tree provides structure considering possible acceptable argumentation lines generated deciding argument defeated 
call tree dialectical represents exhaustive dialectical analysis argument root 
fig 

dialectical tree example example consider de literal supported exist defeaters starting different argumentation lines proper defeaters blocking defeater 
observe argument structure counterargument defeater specific 
defeaters exist argumentation line ends 
argument structure blocking defeater note disagreement subargument introduced produces argumentation line acceptable 
argument structure defeaters introduced proper defeater blocking defeater 
lines split argumentation lines 
argument blocking defeater introduced line observe blocking defeater introduced argumentation line acceptable 
dialectical tree shown 
alejandro garc guillermo simari observation subtree dialectical tree node descendants dialectical tree 
suppose build acceptable argumentation line defeater included line unacceptable 
subsequence mentioned line defeater included example shows 
example consider de 
blocking defeaters blocking defeaters 
consider dialectical tree argumentation line argument structure included tree defeater blocking blocking situation occurs argument structure included defeater argumentation line 
node subtree dialectical tree defeaters tree 
fig 

marked dialectical tree example order decide root dialectical tree defeated marking process defined 
nodes recursively marked defeated undefeated follows procedure marking dialectical tree dialectical tree corresponding marked dialectical tree denoted obtained marking node follows 
leaves marked 
inner node marked iff child marked 
node marked iff child marked 
defeasible logic programming argumentative approach procedure suggests bottom marking process able determine marking root dialectical tree 
shows dialectical tree applying marking procedure 
notion warrant defined terms marked dialectical tree follows 
definition warranted literals argument structure associated marked dialectical tree 
literal warranted iff root marked 
say warrant proposition literal strict derivation de warranted 
proof observation exists strict derivation exists unique argument structure proposition exists possible counter argument defeaters warranted 
approaches dung toni kakas antoniou pollock prakken sartor idea argument defeated exists defeater defeated approaches notions argument defeater argumentation process differ 
example toni kakas similar tree structure developed computing acceptability semantics negation failure arguments correspond set default negated literals 
prakken sartor dialogue tree pollock inference graph introduced 
see section discussion related approaches 
interesting note notions acceptable argumentation line dialectical tree provide flexible structure defining different argumentation protocols considering different strategies accepting defeaters argumentation 
advantage formalisms changing protocol means changing system 
notion warrant define modal operator belief bh means warranted bh means warranted 
definition answer queries answers delp interpreter defined terms modal operator terms possible answers query bh warranted bh complement warranted undecided bh warranted 
unknown language program 
observe symbol corresponds classical negation meta language modal operator alejandro garc guillermo simari example consider de example 
literal language program answer query unknown 
answer undecided shown dialectical tree literal warranted literal warranted argument structure supporting 
argument defeaters warranted answer query 
answer query 
example regarding de answer flies tina answer flies tina 
considering program answer pacifist nixon undecided answer pacifist nixon undecided 
case example answer buy stocks acme answer buy stocks alfa unknown 
example de example argument structures obtained gun nixon gun nixon pacifist nixon pacifist nixon gun nixon lives chicago nixon gun nixon lives chicago nixon pacifist nixon pacifist nixon quaker nixon pacifist nixon republican nixon pacifist nixon quaker nixon pacifist nixon blocking defeater pacifist nixon vice versa delp answer query pacifist nixon undecided 
argument structure gun nixon proper defeater gun nixon observe pacifist nixon blocking defeater gun nixon pacifist nixon subargument gun nixon argument behaving gun nixon called makinson schlechta zombie argument alive blocked argument pacifist nixon fully dead defeating argument gun nixon stated prakken vreeswijk case argumentation formalisms arguments warrant 
delp gun nixon defeated gun nixon gun nixon turn defeated pacifist nixon gun nixon argument pacifist nixon defeat pacifist nixon argumentation line acceptable see condition definition 
warrant gun nixon 
example defeasible logic programming argumentative approach de argument structures obtained consider potential warrant literal proper defeater defeated turn proper defeater argumentation line acceptable literal warranted 
consider potential warrant literal stated proper defeater note defeated strict rule 
consider 
defeats introduced circularity restriction 
acceptable literal warranted 
accepting render literals warranted 
happen delp satisfy concordance restriction acceptable argumentation lines 
observe concordant concordant 
warrant procedure pruning order decide literal warranted de warrant procedure find argument structure established definition root marked 
introduce section procedure deciding literal warranted 
procedure explore general dialectical tree answers computed efficient way 
program argument structures ai literal warrant procedure construct possible argument structures consider turn exploring associated dialectical tree 
optimization similar spirit oscar pollock 
observe marked dialectical tree left resembles minimax tree artificial intelligence game trees 
nodes marked tree nodes marked 
note marking dialectical tree nodes contributing decision procedure marking changing marking dialectical tree root 
example left left child root root alejandro garc guillermo simari matter marking children root 
don care node obviously belongs branch may pruned 
pruning process similar pruning mini max tree 
clearly marking procedure node labeled siblings pruned 
left shows marked dialectical tree argument structure example pruned tree depth order right 
pruned pruned fig 

marked dialectical tree example left pruned right query warrant procedure try generate argument structure warrant procedure try build defeater counter argument point see example 
defeater exists try build defeater building form argumentation line 
dialectical tree generated depth manner considering left right acceptable argumentation line 
dialectical tree argumentation lines leaves tree finish supporting interfering argument 
example shows dialectical tree constructed depth manner considering supporting interfering arguments possible argumentation line marking procedure pruning done building tree 
example suppose order find warrant argument acceptable argumentation line built see situation acceptable argumentation line ends supporting argument marking procedure establishes point 
warrant process finish defeaters consider 
process continue expanding argumentation lines 
note defeaters considering change status 
tree pruned point considering defeaters 
previous analysis apply undefeated defeater mark change 
reason defeasible logic programming argumentative approach ii fig 

argumentation lines example procedure look possible defeater creating new argumentation line see ii 
defeater defeaters argumentation line interfering argument see ii 
pruning effected defeaters modify status 
defeater creating case new argumentation line 
shows prolog specification top level warrant procedure pruning 
predicates warrant defeated specify perform dialectical analysis 
query warranted argument defeated 
predicate find argument developed simply builds argument query 
predicate defeated receives argument argumentation line tries find defeater checking acceptable part argumentation line 
acceptable succeeds returns newline adding 
argument defeated exists defeater turn defeated call defeated newline 
defeater looks argument counter argues disagreement sub argument 
argument defeater better predicate better succeeds argument better second regarding chosen comparison criterion 
observe pruning performed calling defeated recursively prolog negation failure 
alejandro garc guillermo simari warrant warranted literal find argument argument defeated support 
defeated defeated defeated find defeater defeater acceptable newline acceptable line defeated newline 
defeated find defeater defeater find better 
better fig 

specification warrant procedure pruning delp extensions delp default negation discussed alferes logic programs deductive databases generally non monotonic theories various forms default negation major distinctive feature assumed default assumed absence sufficient evidence contrary 
delp absence sufficient evidence means warrant 
default negation assumed literal warranted 
discuss briefly extend delp default negation 
detailed definition extended delp comparison approaches preparation 
delp extended consider default negation characteristics formalism just described affected 
correct treatment default negation delp considerations required 
default negation allowed preceding literals body defeasible rules cross railway tracks train coming defeasible rules default negation called extended defeasible rules 
reason allowing default negation strict rules twofold 
hand strict rule completely strict head derived assuming 
hand set strict rules facts contradictory set cases 
extended defeasible logic program set facts strict rules extended defeasible rules 
decision assuming extended literal carried dialectical process definition defeasible derivation definition modified extended delp 
change reflects extended literal body rule literal ignored adapted example attributed john mccarthy gelfond lifschitz 
defeasible logic programming argumentative approach definition extended defeasible derivation extended defeasible logic program ground literal 
defeasible derivation denoted consists finite sequence 
ln ground literals literal li sequence li fact exists rule ri strict defeasible head li body 
bk literal body ones preceded default negation element lj sequence appearing li 
definition argument structure extended order avoid self defeating arguments shown example 
consider set defeasible rules 
de including rules possible obtain defeasible derivation assuming 
argument structure new kind self defeating argument avoid 
observe new condition 
definition extended argument structure literal extended defeasible logic program 
argument structure ground literal set extended defeasible rules 
exists defeasible derivation 
literal defeasible derivation defeasible rule containing body 

non contradictory 
minimal proper subset satisfies conditions 
extended delp default negated literals point attack argument 
phan dung dung points default negated literals assumptions derivation 
acceptance derivation depends acceptance assumptions 
dung defines notion ground attack argument ground attack contains default negated literal argument assumption attacked argument supports literal 
extend notion defeat incorporating dung notion ground attack 
similar done prakken sartor 
say argument structure attack assumption extended literal body defeasible rule notion defeater extended considering new kind attack 
definition argument structure defeater proper defeater blocking defeater attack assumption alejandro garc guillermo simari new definition defeater default negated literals new points attack 
dialectical analysis carried default negated literals defeated arguments 
easy see delp negation satisfies coherence principle established alferes pereira pereira alferes warranted assumed 
claim negations needed representing knowledge natural manner 
approaches literature kakas dimopoulos kakas wang tried define default negation terms strong negation 
follows proposed transformations counterexamples showing fail 
approach logic programming default negation kakas dimopoulos kakas priority relation rules deciding competing rules 
approach remove default negation transformation rule transformed rules 
derivable rule derivation hand derivable rule blocks 
approach derivable transformation literal derivable original program derivable transformed 
new derivable literal may cause unexpected results shown example compare de default negation program obtained transformation cited 
program priority 
example observe argument argument literal warranted 
transformed program literal warranted warrant literal allows build argument defeats argument comments transformation cited reported wang 
wang priority logic programming defined transformation rule transformed new symbol 
addition literal program new rules generated refer interested reader wang details transformation 
follows example de transformation example defeasible logic programming argumentative approach example transformed program new literals derived may interact parts program 
delp presumptions defeasible rule empty body called presumption nute 
approach rule express defeasible reasons believe 
extending delp consider presumptions straightforward 
show slight modifications need formalism 
extended defeasible logic program set facts strict rules defeasible rules presumptions 
denote set defeasible rules presumptions 
definition defeasible derivation extended order consider presumptions 
definition condition changed li fact presumption 
major difference respect regular de presumptions defeasible rules body 
extended de 
facts defeasible derivations arguments obtained 
example de defeasible derivation obtained 
argument structures facts presumptions 
presumptions special case defeasible rules notion argument structure remains intact 
argument structure set set defeasible rules include presumptions 
definitions disagreement counter argument defeater dialectical tree warrant procedure affected inclusion presumptions 
comparison criterion affected 
example shows specificity criterion defined problems argument contains presumptions 
example consider extended de 

argument structures obtained alejandro garc guillermo simari observe fact presumption clearly argument facts presumptions 
case definition behaves expected states specific cases definition behave correctly 
observe fact fact presumption information 
definition states incomparable 
reason presumptions body set activates 
examples analyzed garc 
comparison criterion rules priorities criterion find way preferring fact presumption 
argument fact argument presumption example equal strength 
simple way solving problems mentioned establishing arguments facts preferable arguments presumptions 
extension comparison criteria consider presumptions currently study 
implementation applications interpreter delp implemented prolog web see cs uns edu ar delp html 
machine called jam justification machine garc designed implementation delp extension warren machine wam 
prototype implementation jam virtual machine developed subject research 
applications deal incomplete contradictory information easily modeled delp programs 
defeasible argumentation basis delp allows building applications dynamic domains information may change 
defeasible logic programming representing knowledge providing inference engine applications 
concrete application delp garc multi agent system stock market domain developed 
application consists deliberative agents monitoring stock market performing actions retrieved information 
agents reason delp capable formulating arguments counterarguments order decide buy sell stock 
applications progress 
related delp combines defeasible argumentation logic programming 
areas developed related approaches 
comment differences defeasible reasoning formalisms logic programming related 
defeasible logic programming argumentative approach defeasible logic argumentation nute prolog nute nute introduce defeasible reasoning programming specificity 
prolog syntax strict defeasible rules strong negation 
prolog rules allow default negation 
language prolog provides facilities define defeater rules sick birds fly 
purpose defeater rules account exceptions defeasible rules 
antoniou shown defeaters simulated means strict defeasible rules nute sense 
delp need supplied defeater rules 
system find counterarguments arguments able build decide defeat relation comparison criterion 
delp programmer need encode explicit exceptions 
important difference prolog approach way contradictory treated 
prolog notion argument 
order decide contradictory prolog compares pair rules delp arguments support compared 
comparing pair rules may problematic show 
consider program example 
prolog literal accepted proved rule head rule contradicts 
literals disagree literals derivable 
delp argument blocking defeater disagree 
fails warranted answer undecided 
answer undecided 
problematic situation comparing rules considering rest program follows 
approaches consider better body information 
may true depending basis literal instance consider program 
obtained strictly true information 
rules basis literal major difference prolog dialectical analysis treatment circular argumentation lines 
interested reader referred prakken vreeswijk features nute discussed 
nute defeasible logic grigoris antoniou david billington michel maher guido governatori extended nute approach see antoniou antoniou 
unfortunately problems mentioned prolog inherited 
defeasible argumentation formalism developed simari loui inspired part pollock defeasible reasoning pollock 
pollock changed way argument warranted adopting alejandro garc guillermo simari multiple status assignment approach pollock pollock 
pollock developed computer program lisp called oscar pollock performs defeasible reasoning 
oscar arguments sequences linked reasons probabilities comparing competing arguments 
way similar nute defeater rules explicit undercutting defeaters expressed language 
inference graph oscar evaluating status arguments 
pollock argues human reasoning defeasible different senses 
distinguishes defeasible may unwarranted relative larger set inputs defeasible may retracted result reasoning new input 
oscar argument may justified stage reasoning unjustified additional input 
argument warranted reasoner reaches stage new stages reasoning argument remains undefeated 
notion warrant coincides 
oscar bottom procedure computing justified warranted arguments 
dung dung proposed general framework completely abstracts notions argument defeat 
contrast approach defining object language representing knowledge concrete notion argument defeat dung approach assumes existence set arguments ordered binary relation defeat 
defines various notions argument extensions aim capture various types defeasible consequence 
inspired legal reasoning prakken sartor prakken sartor developed argumentation system uses language extended logic programming 
introduce dialectical proof theory argumentation framework fitting format developed dung kowalski 
dung bondarenko 
inspired legal reasoning protocol dispute different dialectical tree 
proof formula takes form dialogue tree branch tree dialogue proponent opponent 
proponent opponent different rules introducing arguments leading asymmetric dialogue 
prakken prakken generalized system default logic language 
kowalski toni kowalski toni outlined formal theory argumentation defeasibility stated terms non provability claims 
argue defeasible reasoning rules form understood exact reasoning rules form shown stands defeasible non provability claims 
brewka proposal new formal notion argument systems focuses capturing aspects realistic argumentation processes 
main interest capture logic procedural aspects argumentation 
underlying language approach preferential default logic 
related approaches defeasible argumentation verheij verheij unique multiple status assignments arguments analyzed depth prakken vreeswijk defeasible logic programming argumentative approach vreeswijk vreeswijk bondarenko bondarenko loui loui 
details surveys defeasible argumentation prakken vreeswijk ches evar 
logic programming gelfond lifschitz logic programming classical negation introduced 
complementary literals derived program contradictory literal program derived 
common sense reasoning typically tentative information representation kind information leads cases inconsistent knowledge bases extended logic program usually derive language 
problem attacked inoue extended logic programming default assumptions considered 
approach resembles defeasible argumentation system unfortunately preference criterion deciding contradictory explanations considered 
kakas semantics default negation called acceptability semantics introduced previous works default negation abductive logic programming eshghi kowalski dung kakas 
sets default negated literals considered extensions program notion attack sets defined 
extension acceptable iff attack acceptable 
fixpoint operator acceptability 
introduce general theory acceptability binary relation attack lp defined priority relation program rules 
toni kakas toni kakas developed proof procedure acceptability semantics mentioned 
approach tree structure similar dialectical tree developed 
approaches share idea having tree children nodes attack father node 
intended application trees computing semantics default negation nodes tree sets abducibles default negated literals dialectical tree tree arguments 
consider strong negation approaches difficult compare 
kakas dimopoulos kakas logic programming negation failure introduced 
program consists set basic rules ln li literals strong negation irreflexive antisymmetric priority relation program rules 
claim default negation removed program transformation 
problem transformation see example new literals derivable may cause derivations blocked 
problems transformation reported wang 
proof procedure similar prolog 
dimopoulos kakas comparison defeasible logic antoniou comparison defeasible logic courteous logic programs 
main result antoniou defeasible logic prove sceptical 
gelfond son alejandro garc guillermo simari system investigate methodology reasoning prioritized defaults language logic programs answer set semantics developed 
system allows representation defeasible strict rules representation order rules 
way defeasible inferences obtained similar antoniou approach comparison systems 
defeasible rules considered defaults default theory 
defaults defeasible rules explained nute 
introduce illustrative example adapted covington 
example consider de 
left knowledge represented default theory right 
shell shell shell shell shell shell fred fred delp program argument shell fred specific argument shell fred 
warrant shell fred 
default logic extensions shell fred shell fred 
reason defaults express connection 
capture con shell default changed shell exception explicitly encoded default 
delp exceptions discovered warrant procedure 
comparison unfair default logic selection mechanism 
brewka eiter default logic extended order handle priorities developing prioritized default logic pdl 
approach properties relevant argumentation explicit representation preferences reasoning preferences 
approach explicitly argument prioritized default theories extend default theories adding strict partial order defaults ordering define preferred extensions 
pdl satisfies reasonable principles preference handling distinguishes pdl approaches 
ordering defaults enforced problems similar mentioned comparing rules 
important difference consider sets default rules introducing strict rules done 
brewka comparison variant defeasible logic called ambiguity propagating antoniou prioritized version founded semantics extended logic programs brewka 
shows condition preferences admitted defeasible rules defeasibly provable literals defeasible logic variant defeasible logic programming argumentative approach true prioritized founded semantics 
shows desirable obtained founded semantics variant defeasible logic obtain 
prioritized logic program plp program pair finite set rules form bm acyclic preference relation plp rule said defeated literal bi clearly default negated literals program rule defeated 
represents difference delp counter arguments defeaters defined term strong negation 
plp default negated literals point attack delp arguments attacked arguments 
comparison brewka translation defeasible rule 
default logic extended rule default negation 

note translation captures attack rule attack argument see example program 
distinguishing feature delp property argument reinstatement 
example consider de argument literal proper defeater argument turn defeated proper defeater attacks argument inner point third argument warrant set warranted literals order encode program plp translation suggested brewka priority rules deleted derived literals facts priorities added program rules deleted derived literals argument reinstate argument formal comparison formalism approaches cited issue research 
alejandro garc guillermo simari defeasible logic programming combines logic programming defeasible argumentation provides possibility representing information form defeasible strict rules declarative manner 
query warranted argument supports undefeated dialectical analysis 
dialectical analysis certain constrains imposed different kinds fallacious argumentation 
delp manage defeasible reasoning perform contradictory programs 
defeasible argumentation basis delp allows build applications deal incomplete contradictory information dynamic domains information may change 
delp representing agent knowledge providing inference engine 
new applications delp progress 
expect feedback pursue extensions 
garc simari model parallel defeasible logic programming proposed 
existing forms parallel logic programming new sources implicitly exploitable parallelism considered building arguments parallel searching defeaters parallel building dialectical tree parallel 
implementation parallel delp preparation 
extension delp presumptions study 
reader may noticed dialectical tree associated warrant procedure quite large non trivial situations 
effort expended implementation put task performing efficient search garc simari done 
acknowledgments authors grateful rgen dix gelfond ron loui francesca toni hassan kaci grigoris antoniou simon parsons john pollock veronica dahl paul helpful comments suggestions 
wish especially carlos ivan ches evar helpful discussions anonymous referees useful suggestions 
partially supported de ciencia cnica universidad nacional del sur 
alferes jos pereira luis 

contradiction avoidance equals removal part lecture notes computer science 
alferes jos pereira luis przymusinski 

strong explicit negation nonmonotonic reasoning logic programming 
lecture notes computer science 
antoniou grigoris billington david maher michel 

normal forms defeasible logic 
pages proceedings international joint conference symposium logic programming 
mit press 
antoniou grigoris maher michael billington david 

defeasible logic versus logic programming negation failure 
journal logic programming 
defeasible logic programming argumentative approach antoniou grigoris billington david governatori guido maher michael rock andrew 

family defeasible reasoning logics implementation 
pages proceedings european conference artificial intelligence ecai 
antoniou grigoris billington david governatori guido maher michael 

representation results defeasible logics 
acm transactions computational logic 
billington david de koen nute donald 

modular translation defeasible nets defeasible logics 
journal experimental theoretical artificial intelligence 
bondarenko andrei toni francesca kowalski robert 

framework non monotonic reasoning 
proceedings nd 
international workshop logic programming non monotonic reasoning 
bondarenko andrei dung phan kowalski robert toni francesca 

argumentation theoretic approach default reasoning 
artificial intelligence 
brewka gerhard 

founded semantics extended logic programs dynamic preferences 
journal artificial intelligence research 
brewka gerhard 

dynamic argument systems formal model argumentation processes situation calculus 
journal logic computation 
brewka gerhard 
aug 
relation defeasible logic founded semantics 
proceedings lpnmr 
brewka gerhard eiter thomas 

prioritizing default logic 
pages lldobler steffen ed computational logic papers honor wolfgang bibel 
dordrecht boston london kluwer academic publishers 
ches evar carlos maguitman ana loui ronald 

logical models argument 
acm computing surveys 
ches evar carlos dix rgen frieder simari guillermo 

relating defeasible normal logic programming transformation properties 
theoretical computer science 
accepted publication 
covington michael nute donald andre 

prolog programming depth 
prentice hall 
dahl veronica 

logic programming languages 
wiley encyclopedia electrical electronics engineering 
dahl veronica paul li 

assumption grammars natural language processing 
fourteenth international conference logic programming 
dimopoulos yannis kakas 

logic programming negation failure 
pages proceedings th 
international symposium logic programming 
cambridge ma mit press 
dix rgen 

semantics logic programs intuitions formal properties 
pages fuhrmann andr rott hans eds logic action information 
new york de gruyter 
dix rgen frieder 

framework incorporate non monotonic reasoning constraint logic programming 
journal logic programming 
dung phan 

negation hypothesis abductive foundation logic programs 
proceedings th 
international conference logic programming 
paris france mit press 
dung phan 

argumentation semantics logic programming ex alejandro garc guillermo simari plicit negation 
pages proceedings th 
conference logic programming 
mit press 
dung phan 

acceptability arguments fundamental role reasoning logic programming 
proceedings th 
international joint conference artificial intelligence ijcai chamb ry 
dung phan 

acceptability arguments fundamental role nonmonotonic reasoning logic programming person games 
artificial intelligence 
eshghi kowalski robert 

abduction compared negation failure 
proceedings th 
international conference logic programming 
lisbon portugal mit press 
garc alejandro july 
defeasible logic programming definition implementation 
phil 
thesis computer science department universidad nacional del sur bah argentina 
garc alejandro dec 
defeasible logic programming definition operational semantics parallelism 
ph thesis computer science department universidad nacional del sur bah argentina 
garc alejandro simari guillermo 

parallel defeasible argumentation 
journal computer science technology special issue artificial intelligence computation 
journal info edu ar 
garc alejandro simari guillermo ches evar carlos aug 
argumentative framework reasoning inconsistent incomplete information 
workshop practical reasoning rationality 
th biennial european conference artificial intelligence ecai 
garc alejandro paul simari guillermo aug 
deliberative stock market agents defeasible logic programming 
proceedings engineering societies agents world workshop ecai 
gelfond michael 

logic programming reasoning incomplete information 
annals mathematics artificial intelligence 
gelfond michael lifschitz vladimir 

logic programs classical negation 
pages warren szeredi 
eds th international conference logic programming 
mit press 
gelfond michel son tran 

reasoning prioritized defaults 
pages lecture notes artificial intelligence selected papers workshop logic programming knowledge representation 
inoue 

extended logic programming default assumptions 
proceedings th 
international conference logic programming 
kakas kowalski robert toni francesca 

abductive logic programming 
journal logic computation 
kakas mancarella paolo dung phan 

acceptability semantics logic programs 
pages proceedings th 
international conference logic programming 
santa margherita italy mit press 
kowalski robert toni francesca 

argumentation 
artificial intelligence law 
li pereira luis dahl veronica 

refining action theories abductive logic programming 
selected extended papers ilps workshop logic programming knowledge representation 
lifschitz vladimir 

foundations logic programs 
pages brewka 
ed principles knowledge representation 
csli pub 
defeasible logic programming argumentative approach loui ronald 

alchourr von wright conflict norms 
pages nute donald ed defeasible deontic logic vol 

synthese library 
loui ronald july 
progress room testbed public interactive semi formal legal argumentation 
proceedings th 
international conference intelligence law 
makinson david schlechta karl 

floating zombie paths deep difficulties directly skeptical approach defeasible inference nets 
artificial intelligence 
nute donald 

defeasible reasoning philosophical analysis prolog 
pages fetzer 
ed aspects artificial intelligence 
kluwer academic pub 
nute donald 

basic defeasible logic 
del cerro luis ed intensional logics programming 
oxford press 
nute donald 

defeasible logic 
pages gabbay hogger robinson eds handbook logic artificial intelligence logic programming vol 
oxford university press 
pereira luis alferes jos 

contradiction avoidance equals removal part ii 
lecture notes computer science 
pollock john 

defeasible reasoning 
cognitive science 
pollock john 

cognitive carpentry blueprint build person 
mit press 
pollock john 

oscar general purpose defeasible reasoner 
journal applied non classical logics 
poole david 

comparison theories preferring specific explanation 
pages proc 
th ijcai 
ijcai 
prakken henry 

logical tools modelling legal argument 
study defeasible reasoning law 
kluwer law philosophy library 
prakken henry sartor giovanni 

argument logic programming defeasible priorities 
applied non classical logics 
prakken henry vreeswijk gerard 

logical systems defeasible argumentation 
gabbay ed handbook philosophical logic nd ed 
kluwer academic pub 
simari guillermo loui ronald 

mathematical treatment defeasible reasoning implementation 
artificial intelligence 
simari guillermo ches evar carlos garc alejandro oct 
focusing inference defeasible argumentation 
iv congress artificial intelligence 

simari guillermo ches evar carlos garc alejandro nov 
role dialectics defeasible argumentation 
xiv international conference computer science society 
toni francesca kakas 

computing acceptability semantics 
pages proceedings rd 
international workshop logic programming non monotonic reasoning 
lexington usa springer verlag 
verheij bart 
dec 
rules reasons arguments formal studies argumentation defeat 
ph thesis maastricht university holland 
vreeswijk gerard 

argumentation systems 
artificial intelligence 
wang jia li yuan 

logic programming default negation revisited 
pages proceedings ieee international conference intelligent processing systems 
ieee 
