mailrank ranking spam detection paul alexandru research center university hannover deutscher expo plaza hannover germany de social networks combat spam 
investigates feasibility mailrank new email ranking classification scheme exploiting social communication network created email interactions 
underlying email network data collected email contacts mailrank users updated automatically email activities achieve easy maintenance 
mailrank rate sender address arriving emails emails trustworthy senders ranked classified spam non spam 
presents variants basic mailrank computes global reputation score email address personalized mailrank score email address different mailrank user 
evaluation shows mailrank highly resistant spammer attacks obviously considered right application scenario 
mailrank performs sparse networks small set peers take part ranking email addresses 
categories subject descriptors discrete mathematics graph theory information systems information storage retrieval systems software information systems database management security integrity protection general terms algorithms experimentation measurements keywords email reputation spam mailrank personalization 
scientific collaboration email tremendous increase unsolicited email spam past years rendered email communication spam permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
cikm bremen germany copyright acm xxxxx xx xx xx 
rg diederich research center university hannover deutscher expo plaza hannover germany diederich de wolfgang nejdl research center university hannover deutscher expo plaza hannover germany nejdl de filtering impossible 
currently spam emails outnumber non spam ones called ham emails 
existing spam filters system mozilla junk mail control exhibit problems classified main categories 
maintenance initialization adaptation filter operation spam filters rely certain amount input data maintained contentbased filters require keywords rules spam recognition blacklists populated ip addresses known spammers bayesian filters need training set spam ham messages 
input data created filter cold start problem adapted continuously counter attacks spammers 

residual error rates current spam filters eliminate spam problem completely 
non negligible number spam emails reaches user called false negatives 
second ham messages discarded anti spam system considers spam 
false positives especially annoying sender email recipient community known user known somebody user knows directly 
high probability email received somebody social network receiver ham message 
implies social network formed email communication strong foundation spam detection 
existed perfect anti spam system additional problem arise high volume email users simply get ham emails 
cases automated support email ranking highly desirable 
reputation algorithms useful scenario provide rating email address subsequently sort incoming emails 
ratings gained ways globally personally 
main idea global scheme people share personal ratings single global rating called reputation inferred email address 
implementation scheme example network reputation algorithms collaborative filtering techniques 
case personalized scheme ratings called trust case typically different email user depend personal social network 
scheme reasonable people presumably high global reputation linus tor apache org www org www mozilla org start extra junk control html important personal context user compared persons project manager 
propose mailrank new approach ranking classifying emails address email senders 
central procedure collect data trusted email addresses different sources create graph social network derived user communication circle 
mailrank variants apply power iteration algorithm email network graph basic mailrank results global reputation known email address personalized mailrank computes personalized trust value 
mailrank allows classify email addresses spammer address non spammer address additionally determine relative rank email address respect email addresses 
analyzes performance mailrank scenarios including sparse networks shows resilience spammer attacks 
organized follows section provides information existing anti spam approaches trust reputation algorithms description pagerank approaches personalizing 
sect 
describe proposed variants mailrank evaluate sect 

results summarized sect 

background related anti spam approaches high relevance spam problem attempts counter spam started past including law initiatives 
technical anti spam approaches comprise basic approaches content approaches header approaches protocol approaches approaches sender authentication approaches social networks content approaches analyze subject email email body certain keywords statically provided dynamically learned bayesian filter patterns typical spam emails urls numeric ip addresses email body 
advantage content schemes ability filter quite high number spam messages 
example recognize spam appropriately trained bayesian filter available static rules 
main drawback set static keywords adapted continuously high spam recognition rate decrease 
header approaches examine headers email messages detect spam 
schemes collect email addresses known non spammers decrease number false positives content schemes 
contrast blacklist schemes store ip addresses email addresses forged easily known spammers refuse accept emails 
manual creation lists typically highly accurate puts quite high burden user maintain 
pgp key servers considered manually created global 
automatic creation realized instance previous results content filter done called 
blacklists difficult maintain especially faced attacks spammers want get email addresses list list blacklist 
protocol approaches propose changes utilized email protocol 
challenge response schemes require manual effort send email particular recipient 
example sender go certain web page activate email manually involve answering simple question solving simple mathematical equation 
sender added recipient emails sent activation procedure 
activation task considered complex spammers usually try send millions spam emails 
automatic scheme approach receiving email server requires unknown sending email server resend email 
prevent spammers forging identity allow tracking approaches sender authentication proposed 
basically add entry dns server announces designated email servers particular domain 
server reverse lookup verify received email came email servers 
sender authentication requirement approaches spammers just known email addresses line 
implemented large email providers aol yahoo requires mechanisms blacklist effective spam filtering spammers easily set domains dns servers 
approaches started exploit information social networks spam detection 
social network approaches construct graph vertices represent email addresses 
directed edge added nodes sent email roychowdhury initially classify email addresses clustering coefficient graph subcomponent spammers coefficient low typically exchange emails 
contrast clustering coefficient subgraph representing actual social network non spammer colleagues friends high 
scheme classify emails correctly ham spam leaving remaining emails examination approaches 
spammers attack scheme cooperating building social networks 
golbeck hendler propose scheme rank email addresses exchange reputation values 
main problem approach attack resilience verified 
trust reputation algorithms trust reputation algorithms increasingly popular rank set items web pages web reputation people social reputation example selling products online auctions 
main advantage designed high attack resilience 
web reputation schemes result single score web page 
pagerank computes scores means link analysis graph inferred link structure web 
main idea page high rank sum ranks backlinks high 
page set input links output links pagerank score computed formula damping factor usually necessary guarantee convergence limit effect rank sinks simple attack pagerank 
intuitively random surfer follow outgoing link current page probability projects com get bored select random page probability vector entries equal number pages web graph 
achieve personalization random surfer redirected preferred pages modifying entries distributions vector proposed biases set ham pages order identify web spam gives additional importance hubs pages collecting links important pages web personalized pagerank uses new approach focuses user profiles 
personalized pagerank vector computed user 
personalization aspect stems set hubs user having select preferred pages 
page auxiliary called basis vector precomputed 
preference set expressed linear combination basis vectors 
avoid massive storage resources basis hub vectors decomposed partial vectors encoding part unique page computed run time hubs skeleton capturing interrelationships hub vectors stored line 
section discusses adapted email ranking classification scenario 
social reputation schemes usually designed networks 
provide useful insight utilizing link analysis construct reputation systems identifying different attack scenarios 
presents categorization trust metrics fixed point personalized trust algorithm inspired spreading activation models 
viewed application pagerank sub graph social network 
builds web trust asking user maintain trust values small number users 
algorithm power iteration designed application context semantic web composed logical assertions 
eigentrust pure fixed point pagerank distributed computation reputation values environments :10.1.1.11.4846
algorithm approach 

mailrank order compute rank email address mailrank collects data social networks derived email communication mailrank users aggregates single email network 
depicts example email network graph 
node represents email address node email ad sample email network dress 
sent emails sent emails communication acts interpreted trust votes depicted arrows 
building email network graph power iteration algorithm compute score email address 
subsequently purposes classification spam ham emails build ranking remaining ham emails 
computation includes email addresses voters actively participating mailrank users email addresses specified votes 
necessary email users participate mailrank benefit example specify vote receives vote achieve score spammer 
mailrank advantages shorter individual cold start phase 
mailrank user know email address mailrank provide rank long mailrank user provided information 
called cold start phase time system learn functional reduced successful anti spam approaches bayesian filters trained single user case individual filter group users example case wide filter mailrank requires single global cold start phase system bootstrapped 
sense similar globally managed requires administrative efforts manage list additionally provide information email address classification bad 
high attack resilience 
mailrank power iteration algorithm typically highly resistant attacks 
discussed mailrank particular section 
partial participation 
building power law nature email networks mailrank compute rank high number email addresses subset email users actively participates mailrank 
stable results 
social networks typically stable computed ratings email addresses change slowly time 
spammers need behave quite time achieve high rank 
resolve spam problem entirely worst case spammer example buy email addresses people behaved time increase cost new email addresses 
reduce load email servers 
email servers don process email body detect spam 
significantly reduces computational power spam detection compared example content approaches collaborative filters 
personalization 
contrast spam classification approaches distinguish spam non spam ranking approaches easily enable personalization features 
important certain email addresses newsletters people consider spammers don deal cases mailrank user decide score threshold email addresses considered spammers 
thresholds determine spammers don know non spammers 
furthermore want give importance relatives manager unrelated persons globally high reputation linus torvalds 
scalable computation 
power iteration algorithms shown computationally feasible large graphs presence personalization 
counter forms spam 
receiving spam phone calls example possible spam internet telephony www infoworld com article html analyze content call accepting rejecting 
best caller identifier available similar sender email address 
mailrank analyze caller identifier decide caller spammer 
sections provide information central aspect mailrank data algorithm data stored ranks generated computing global personalized reputation scores 
bootstrapping email network trust reputation algorithms necessary collect personal votes possible order compute relevant ratings 
collecting personal ratings require manual user interactions order achieve high acceptance system 
similarly system maintained little effort having rating email address computed automatically 
achieve goals existing data inferred communication dynamics exchanged emails 
results global email social network 
distinguish information sources best serving purposes 
email address books 
addresses bn address book considered trust vote 

fields outgoing emails cc bcc 
sends emails regarded trusting voting input data typically accurate manually selected contain spammer addresses accurate data address books address books comprise old outdated information normally information available address book entry created modified 
furthermore address books private released manually owner accessible mailrank system 
contrast data fields extracted automatically light weight email proxy deployable machine 

created anti spam tools contain list email addresses emails received plus score email address determines mainly spam ham emails received associated email address 
email addresses high score regarded trusted 
basic mailrank main goal mailrank assign rank email address known system rank decide email coming spammer build ranking filtered non spam emails 
basic version comprises main steps 
determine set email addresses high reputation social network 

run power iteration algorithm email network graph biased determined set compute final mail rank score email address 
regarding attack resilience important biasing set include spammer 
efficient way counter malicious collectives spammers trying attack ranking system :10.1.1.11.4846
principle possible methods determine biasing set manually automatically semiautomatically 
manual selection guarantees spammers biasing set way counter malicious collectives entirely 
automatic selection avoid possibly costly manual selection biasing set 
semi automatic selection biasing set described automatic selection propose biasing set verified manually free spammers 
propose heuristics determine biasing set automatically determine size biasing set adding ranks nodes highest rank sum ranks nodes equal total rank system 
additionally limit minimum total number email addresses graph manner limit biasing set reputable members social network power law distribution email addresses 
exclude spammers effectively spammer email addresses constitute majority graph 
result mailrank algorithm final vector mailrank scores tag incoming email email proxy non spammer final score sender email address larger threshold spammer final score sender email address smaller unknown email address known system user adjust preferred filtering level 
algorithm effectively compute transitive closure email network graph starting biasing set 
sufficient detect spammers user reachable biasing set issued vote 
possible detect spammers non spammers vote spammers computer non spammer infected virus 
case non spammers low rank risk counted spammers 
basic mailrank algorithm summarized alg 

algorithm 
basic mailrank algorithm 
client side vote sent mailrank server comprises addr hashed version email address voter hashed version email addresses votes sent email server side combine received data global email network graph 
markov chain transition probability matrix computed foreach known email address registered address user submitted votes foreach trust vote tji foreach known address tji number known addresses 
determine biasing set popular email addr 
manual selection automatic selection semi automatic selection initialize vector scores error precision threshold output global mailrank vector 
classify email address mailrank network spammer non spammer threshold values determined extensive simulations shown 
allow new unknown users participate mailrank automatically generated email sent unknown user encouraging join mailrank challenge response scheme bringing non spammer area reputation scores 
mailrank personalization shown experiments section basic mailrank performs spam detection highly resistant spammer attacks 
limitation general respect user ranking 
specifically address users generally communicate persons ranked average respect rankings 
users prefer acquaintances ranked higher unknown users ones achieve higher reputation network 
clear difference user communication partners ones higher rank easily recognizable 
personalizing user acquaintances tackles aspects 
main effect boosting weight user votes decreasing influence votes 
direct communication partners achieve higher ranks initially highest ones 
due rank propagation votes high influence 
captured user requirements mentioned focus attention final design issue system scalability 
simply biasing mailrank user acquaintances scale computed preference set registered user 
jeh widom proposed approach calculate personalized pagerank vectors adapted scenario millions subscribers 
achieve scalability resulting personalized vectors divided parts common users precomputed stored offline called partial vectors captures specifics preference set generated run time called hubs skeleton 
define restricted set users rankings biased shall call set hub set note 
partial vector hub skeleton user additional regular user registers personalized ranking vector generated reading precomputed partial vectors corresponding preference set step calculating hubs skeleton step tying parts step 
algorithm step called selective expansion step named repeated squaring mathematically reduced biased pagerank 
decreases computation error faster iterations efficient works output input 
final phase sub vectors resulted previous steps combined global 
algorithm depicted lines 
clearer collected important definitions relies table 
term description set set users 
hub set subset users 
preference set set users personalize 
preference vector preference set weights 
personalized pagerank vector importance distribution induced preference vector 
basis vector ru preference vector single nonzero entry hub vector ru basis vector hub user partial vector ru hubs skeleton ru hubs skeleton construct hub vector 
partial vectors construct hub vector 
table terms specific personalized mailrank 
note original algorithm proven equivalent biased pagerank 
preserves useful properties pagerank algorithm convergence presence loops voting graph resistance malicious attacks scalable 
algorithm 
personalized mailrank 
initializations user compute partial vector hubs skeleton 
approximation basis vector corresponding user error computation 
initialize initialize selective expansion compute partial vectors qk formulas dk dk qk ek xq ek ek qk ek xq qk ek choice dk ek converge ru partial vector corresponding repeated squaring having results step input compute hubs skeleton ru 
represented final vectors calculated qk dk ek dk ek ek xq ek ek step refers hub users computation consider components regarding users significantly decreases computation time 
vector ui rp ru xp computed hubs skeleton 
constructed ru rh rp rp ru xh mailrank system architecture mailrank composed server collects user votes delivers score known email address email proxy client side interacts mailrank server 
mailrank server collects input data votes mailrank users run mailrank algorithm 
votes assigned lifetime identifying deleting email addresses haven long time detecting spammers behave time get high rank start send spam emails 
mailrank proxy resides user email client regular local email server 
performs tasks receiving outgoing email extracts user votes available input data listening ongoing email activities analyzing existing sent mail folders 
sends votes mailrank server forwards email local email server 
increase efficiency votes submitted expire sent 
privacy reasons votes encoded hashed versions email addresses 
receiving email proxy queries mail rank server ranking sender address cached locally classifies ranks email accordingly 
extensions prototype secure signing schemes enable analyze outgoing incoming emails extracting votes submitting mail rank server 
helps bootstrap system initially introduces votes spammers mailrank 
votes positive aspect increase score spam recipients non spammers 
spammers face difficulties attack system increase rank 
mailrank spammer attacks definition spammers send similar message typically millions recipients 
run different strategies choose sender address new random email address spam message send message millions recipients analysis performed large university institutions germany spammer addresses 
manner trying circumvent blacklists email addresses 
furthermore addresses sending spam emails non spammers 
second email addresses known non spammers forging sender address assuming addresses spam detection tools 
sender authentication schemes listed sect 
prevent forging sender address installed email server required scheme 
sender authentication counteract common spamming strategy 
soon mailrank service widespread spammers surely try attack order increase rank address es 
identified simulated ways attacking mailrank example spammers issue votes spammer addresses non spammer addresses 
algorithm ensures possible change score votes issuing 
attacks reasonable spammers vote spammer address increase rank forming malicious collective cf 
fig 

comparable link farming web order attack pagerank 
extensive amount identifying attacks power iteration algorithms see example threat represent social reputation schemes significantly reduced 
malicious collective nodes vote node increase rank node node votes node email address sending spam emails 
possible attack non spammers vote spammers 
counter incidental votes spammers misconfigured vacation daemon additional confirmation process required vote particular email address analyzing incoming votes raises security issues need ensure sender vote recipient vote email faked 
achieved relying extending current sender authentication solutions 
refer reader discussion attacks environments networks useful starting point analyzing attacks mailrank scheme 
move address spammer non spammer 
spammers pay non spammers send spam behalf 
attack successful initially rank non spammer addresses decrease time spammers due limited life time votes 
discuss simulations attack scenarios section 

experimental results real world data email networks unavailable privacy reasons 
small studies exist data gathered log files student email server wide server cases analyzed email network graph exhibits power law distribution going exponent going exponent links 
able vary certain parameters number spammers evaluated mailrank extensive set simulations power law model email network characteristics mentioned literature studies 
additionally exponential cut tails ensure node links nodes reflects nature true social contacts 
noted graph consisted non spammers threshold set 
scenario virus infections sufficient detect spammers ensure falsely classified 
furthermore repeated simulations times different randomly generated email networks determine average values 
personalization brought significant improvement creating user specific rankings email addresses resulted minor improvements spam detection omitted due space limitations 
analysis focused issues effectiveness case sparse mailrank networks nodes submit votes receive votes exploitation spam characteristics attacks mailrank 
sparse mailrank networks sparse mailrank networks certain amount email addresses receive votes provide owners participate mailrank 
case graph regarded spammers achieve low score 
simulate sparse mailrank networks created full graph described subsequently deleted votes certain set email addresses 
removal models votes deleted nodes 
bottom nodes top protected vote deletion 
avg nodes having average number outgoing links protected vote deletion 
model theoretical expect highly connected non spammers register system protected votes top nodes methods deleted depicts percentage non spammers regarded spammers depending percentage nodes deleted votes error bars point showing minimum maximum simulation runs 
non spammers regis simulated non spammers obtained similar results 
behavior observed real life systems gnutella network www gnutella com 
bottom avg refer non protected nodes 
non spammers considered spammers bottom random avg number non spammers nodes deleted outlinks sparse mailrank networks tered system classified spammers non reputable mailrank users send emails 
studies shown people usually exchange emails partners scenario theoretical 
power law distribution email communication expected system run intentionally allowed temporary anomalies graph 
high deletion rates resulted non spammers classified spammers mailrank performed especially realistic avg scenario bigger error observed theoretical random scenario expected random removal may result deletion high rank nodes contributing links social network 
error rate decreases fast removal approaches number nodes known system decreases exploitation spam characteristics monitor current spammer activities sending emails non spammers emails votes spammers introduced system 
way spammers contribute improve spam detection capabilities mailrank new spammer email addresses emails introduced mailrank network higher increase score receiving non spammers 
seen set simulations non spammer addresses varying number spammers cf 
fig 
rank top non spammers increases linearly number spammer addresses included mailrank graph 
attacking mailrank order able attack mailrank spammers receive votes mailrank users increase rank 
long votes spammers achieve null score easily detected 
leaves ways attacks formation malicious collectives virus infections 
malicious collectives 
goal malicious collective cf 
fig 
aggregate score node push biasing set 
manually selected biasing set prevent techniques identify web link farms employed see example 
furthermore require mailrank users willing submit votes manually users pointing registered user deleted registered user longer known system 
cumulative rank top non spammers rank number non spammers number spammers rank increase non spammer addresses malicious collectives push spammer biasing set rank highest spammer size biasing set number collectives automatic creation biasing set register email address es 
impedes spammers automatically register millions email addresses mailrank increases cost forming malicious collective 
determine cost manual registration simulated set malicious users shown fig 

resulting position node node pushed biasing set depicted fig 
email network non spammers malicious collectives nodes increasing number collectives axis 
large scale spammer collectives system relatively easy attacked 
users manually register system forming collective sufficient size practically 
real scenario malicious collective case pushing node biasing set impossible shown fig 
difficult malicious collective push node biasing set collectives exist network 
spammers registered system implicitly vote non spammers sending spam emails 
virus infections 
possible attack mailrank virus worm technology infect non spammers vote spammers 
simulated attack newman studies showed connected members social network anti virus applications worms spread fast 
sim position rank list non spammers evaluation virus attack non spammer spammer highest position spammer number non spammers rank email addresses voting spammers simulation results virus attack ulation results shown fig 
varying amount voting spammers 
non spammers infected vote spammers significant difference ranks non spammers spammers spammer manages get higher rank non spammers 
non spammers infected spammer highest rank starts move rank list upper line fig 
descends rank 
clear separation spammers threshold values employed mail rank score users considered non spammers beneath considered spammers members having score classified unknown 

investigated feasibility mailrank new email ranking classification scheme intelligently exploits social communication network created email interactions 
resulting email network graph power iteration algorithm rank trustworthy senders detect spammers 
mail rank performs presence sparse networks case low participation rate effectively distinguish spammer email addresses non spammer ones users participating actively 
mailrank resistant spammer attacks fact property spammer email addresses introduced system performance mailrank increases 
encouraging results currently investigating improvements algorithms 
intend move centralized system distributed system scalable large scale deployment 
currently investigating dns system computation handled distributed manner servers 
approach consider email client peer network run distributed approach mailrank 

roychowdhury 
leveraging social networks fight spam 
ieee computer 
paul alexandru daniel wolfgang nejdl 
finding related pages link structure www 
proceedings rd ieee wic acm international web intelligence conference sep 
clausen 
cost attack pagerank 
proc 
international conference agents web technologies internet commerce gold coast 
bornholdt 
scale free topology email networks 
physical review 

new standards help curb spam 
ieee computer pages february 
golbeck hendler 
reputation network analysis email filtering 
proc 
conference email anti spam mountain view ca usa july 
gray 
personalised collaborative spam filtering 
proc 
conference email anti spam mountain view ca usa july 
gy garcia molina 
combating web spam 
proceedings th international vldb conference 
huberman adamic 
information dynamics networked world 
complex networks lecture notes physics 

benchmark comparison switch anti spam 
technical report april 
jeh widom 
scaling personalized web search 
proc 
th intl 
www conference 
kamvar schlosser garcia molina :10.1.1.11.4846
eigentrust algorithm reputation management networks 
proc 
th intl 
www conference 
kong roychowdhury 
ego share information manage spam 
technical report university california usa 
preprint 
newman forrest 
email networks spread computer viruses 
physical review 
page brin motwani winograd 
pagerank citation ranking bringing order web 
technical report stanford university 

overview spam blocking techniques 
technical report networks 
resnick varian 
recommender systems 
communications acm 
richardson agrawal domingos 
trust management semantic web 
proceedings nd international semantic web conference 
wu 
attacking statistical spam filters 
proc 
conference email anti spam mountain view ca usa july 
wu davison 
identifying link farm spam pages 
proc 
th intl 
www conference 
acm press 
ziegler lausen 
spreading activation models trust propagation 
proc 
ieee intl 
conference technology commerce service 
