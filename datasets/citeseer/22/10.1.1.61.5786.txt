architecture hybrid creative reasoning unformatted version am cardoso costa machado francisco pereira paulo gomes centro de inform tica sistemas da universidade de coimbra de coimbra portugal machado dei uc pt creativity remarkable characteristics human mind 
natural artificial intelligence research groups working study proposal adequate computational models creativity 
artificial creative systems potentially effective wide range artistic architectural engineering domains detailed problem specification virtually impossible conventional problem solving produce useful solutions 
study may contribute understanding mechanisms human creativity 
text propose computational hybrid architecture creative reasoning aimed empowering cross contributions case reasoning cbr evolutionary computation ec 
provide long term memory complement adaptive ability 
background knowledge provided memory mechanism exploited solve problems inside domain problems imply inter domain transfer expertise 
architecture result synthesis motivated observation strong similarities computational mechanisms systems developed far explored 
propose mechanisms may supported common knowledge representation formalism appears adequate considerable range domains 
furthermore consider architecture may explored unifying model creative process contributing deepening theoretical foundations area 
creativity viewed remarkable characteristics human mind 
study challenge scientists researchers specially areas cognitive science psychology 
years growing number artificial intelligence groups working study proposal adequate computational models creativity 
result endeavor new ai area emerging usually named creative reasoning cr 
artificial creative systems potentially effective wide range artistic architectural engineering domains detailed problem specification virtually impossible conventional problem solving produce useful solutions 
study may contribute understanding mechanisms human creativity 
explanation models originated psychology cognitive science fields proposed creative process ones suggested dewey guilford 
generally split process steps may summarized differences ones problem formulation knowledge assimilation conscious unconscious search solution proposal solution verification proposed solution 
models may constitute important source inspiration computational models creativity 
relevant studies de bono concepts lateral vertical thinking relation creativity 
may look sources inspiration human creativity 
look nature see living species struggle permanently life 
neo theory revising darwin ideas light modern genetics give scientific framework explains life forms survive adapting environmental changes 
center process mechanism selects fittest individuals genetic material 
putting parts different individuals give rise new better 
clearly way producing innovative solutions 
nature capable producing creative solutions 
difficult question answer 
fact biological adaptive processes limitation long term memory view limited memory mechanism memory important part creative process 
want computational model creativity inspired nature introduce memory element 
points hybrid solutions 
past creative systems case reasoning cbr evolutionary computation ec techniques proposed 
cbr approaches explore previous knowledge explanatory capabilities 
difficulties exploring large search spaces 
hand ec approaches efficient dealing complex search spaces explore parallelism natural way 
lack long term memory architecture hybrid creative reasoning incorporation problem specific knowledge interpretation results problematic 
text propose computational hybrid architecture creative reasoning aimed empowering cross contributions cbr ec 
provide long term memory complement adaptative ability 
background knowledge provided memory mechanism exploited solve problems inside domain problems imply inter domain transfer expertise 
architecture result synthesis motivated observation strong similarities computational mechanisms systems developed far explored 
propose mechanisms may supported common knowledge representation formalism appears adequate considerable range domains 
furthermore consider architecture may explored unifying model creative process contributing deepening theoretical foundations area 
remaining document organized follows 
section give presentation background concepts cbr ec 
familiar techniques may safely skip section 
section state art creative systems hybrid systems resort cbr ec 
section give overview systems developed team cbr ec approaches 
systems motivate presentation section common representation formalism unifying hybrid architecture 
section devoted presentation example illustrates application proposed architecture creative reasoning 
section improvements architecture currently exploring 
section draw 
background section intended readers cbr ec 
briefly basic concepts cbr ec focusing main steps basic cycles main issues representation 
case reasoning case reasoning cbr uses past experience solve new problems 
cbr system experience stored way cases form case library 
cases episodic chunks knowledge resolution new situation 
problem solving process cbr premise identical problems identical solutions 
cbr system new problem solve retrieves cases similar problem descriptions 
selected cases different target problem modified order fit 
modification retrieved case called adaptation 
new case created adaptation evaluated may stored case base 
reasoning steps illustrated iterative nature process outlined 
case representation crucial cbr case representation delimits cbr steps 
example cases efficiently retrieved important features problem description represented 
cases represented attribute value pairs hierarchies concepts objects object oriented style textual description causal models combination 
case retrieval phase cbr systems decide cases best candidates solve target problem 
ways doing ones indexing scheme set indexes associated case retrieve case metric function nearest neighbor assess similarity target problem case problem description 
advantages disadvantages 
case adaptation unexplored phases cbr 
may explained complex domain dependent nature adaptation process 
general terms adaptation cbr system identify differences target problem cases problem description apply modification operators change case solution 
operators production rules formulas heuristics specific procedures 
evaluation solutions generated adaptation important provide feedback system 
phase new solution evaluated accordingly evaluation result stored case library user rejected leads system back adaptation phase 
evaluation done automatically human 
case learning step introduces flexibility capability adapt new situations 
phase feedback gathered evaluation phase stored order similar situations 
things learned new case created solve target problem basic obvious 
things learned instance new adaptation operators cases solution failed 
summary cbr provides fast reasoning mechanism specially suited domains causal model evaluation algorithmic methods exist avoid previous failure situations 
cases useful interpretation ill defined concepts 
main drawbacks cbr difficult right index selection 
solution space focused case points constraining possible solutions 
architecture hybrid creative reasoning case learning evolutionary computation target problem retrieval adaptation evaluation new case 
cbr cycle 
years new paradigm problem solving called evolutionary computation ec emerged 
ec viewed set stochastic search procedures inspired biological principles natural selection genetics 
historically sets divided families evolution strategies evolutionary programming genetic algorithms genetic programming 
spite differences instances general algorithm procedure ec evaluate criterium false select op modification evaluate merge start set candidate solutions called population usually defined randomly 
element initial population called individual evaluated fitness function gives measure quality element 
individual fact aggregate smaller elements units called genes 
gene different values alleles 
algorithm enters cycle order generate new population 
start probabilistically selecting fittest individuals 
undergo modification process genetic inspired operators crossover mutation eventually alter alleles genes 
old new populations combined result generation turn evaluated 
cycle stops certain condition achieved instance pre defined number generations 
selection mechanism introduces possibility exploiting promising parts search space 
crossover operator works exchanging genetic material individuals mutation operator modifies alleles individuals 
way promote exploration different areas search space 
balance exploitation exploration essential success ec algorithm 
important aspect question manipulated 
algorithm just described generally low level representation individual called genotype 
complex problems fitness function acts high level representation individual phenotype 
necessary decoders genotypes phenotypes 
outside scope text refer variants ec algorithm 
interested reader deeper idea ec algorithms proposed practical applications back 
success ec algorithms linked ability solve difficult problems 
problems search space large multi modal domain knowledge scarce difficult obtain 
case ec proves efficient traditional algorithms 
creative systems hybrid systems state art multiple approaches creative reasoning diversity applications explored researchers area 
section give overview state art computational creativity focusing paradigms domains applied successful experiences 
overview works combine cbr ec hybrid way 
architecture hybrid creative reasoning creative systems ai techniques applied tasks usually considered require creativity design music composition image generation scientific discovery architecture 
paradigms purpose case reasoning 
thoroughly applied example creative design generally defined cognitive task knowledge mapping process problem solution spaces missing 
solutions generated creative design define new classes artifacts expanding space known designs 
exploration process designers old solutions solve new problems suggests suitability cbr problem 
creative design old solutions changed novel ways novel situations 
researchers cbr paradigm framework building systems tackle task 
interesting cbr works area kolodner wills apply case indexing accordingly various perspectives order allow search case memory represented different way light current problem kolodner propose computational model accounts opportunistic behavior considered characteristic creative behavior sycara thematic abstraction hierarchy influences retrieval method 
framework case organization provides main mechanism cross contextual reminding important creative design 
stress importance composition multiple cases case parts 
cbr area find works music composition pereira chapter applies musical analysis structures build new musical pieces 
structures considered decomposable case 
expressive performance cbr interesting 
cases consist information extracted spectral analysis performances scores 
set cases system infers set possible expressive transformations new phrase 
case reasoning applied architecture believe promising paradigm kinds creativity demanding tasks 
nature known creative surprising evolutionary computation paradigms mean implement computational creativity 
difficulty creating evaluation function domains image music generation led frequently interactive evolution 
systems user evaluates individuals guiding evolution 
great potential countless developed applications show 
field music applied evolution rhythmic patterns melodies jazz composition systems 
works dawkins uses evolve artificial creatures aesthetic preferences user sims todd rooke machado resort evolve images baker evolve human faces examples application field image generation 
successfully applied fields design animation 
far know field image generation attempt automate fitness assignment baluja 
results produced system uses neural networks evaluate images disappointing 
attempts automate fitness assignment musical field 
examples type gas evolve thematic connections melodies uses gas generate musical spector resort genetic programming evolve programs generate jazz melodies input jazz melody papadopoulos gas evolve jazz melodies progression chords 
spite numerous applications wiggins studied performance type systems defends approaches ideal simulation human musical thought 
cbr ec approaches resolution tasks demanding creativity 
techniques currently knowledge systems harold cohen aaron ed burton rose visual arts pachet roy music mathematical models markov chains assist music composition grammars works cope music architecture 
hybrid systems cbr ec systems try combine cbr ec 
done sushil louis workers built cigar system ramsey 
main idea cigar base cases initialize population ec algorithm typical adaptation 
cases solutions old problems obtained running ga see 
architecture hybrid creative reasoning ga module ga solutions cbr module case index initialization pop case base 
cigar system louis system solve similar problem set similar problems 
studied cases inject population coming base cases ones chosen 
studied possibility injecting cases initial population intermediates ones 
problem domains test ideas combinational circuit design open shop scheduling re scheduling function optimization 
results showed judicious choice combination cbr ec gave better results 
authors idea injecting new random generated individuals population certain times 
instance eshelman algorithm named chc replaces mutation operator standard genetic algorithm insure population diversity restarting process applied population 
definition new individuals generated randomly ones kept previous generation important issue relevant deal creative systems 
far know tried hybrid system produce creative solutions 
goldberg states forms adaptation go innovation 
suggests ways achieved remapping primitives changing representation performing metaphorical transfer transfer solution known problem domain 
creative reasoning years authors centered research development cbr ec approaches creative reasoning 
section detail main applications developed far 
common characteristics works particularly concerns adoption tree knowledge representation constitute basis hybrid architecture propose subsequent sections 
creative reasoning cbr capability reminding previous experiences draw analogies current situation case reasoning framework support creative design 
subsections approaches creative reasoning cbr developed far 
main systems im generic creative reasoning shell creator creator ii creative design systems area digital circuit design system uses cbr creating new musical pieces 
im im generic creative reasoning shell uses cbr main reasoning mechanism 
reasoning cycle comprises steps problem definition space initialization problem solving verification evaluation 
step comprises problem specification user states new problem terms goals constraints 
initialization phase system clusters cases different sets called reasoning space 
spaces allow gradual exploration case library enabling system generate new designs 
problem solving phase reasoning operators applied old solutions generation new ones 
solution generated specific space system switches space list created initialization phase 
solution generated spaces search user asked give solution problem 
solution generated verified evaluated 
step internally validated failure cases verification 
failure cases represent constraints generation new solutions 
failure case triggered new solution solution rejected 
solution passes internal validation user asked accept reject new case 
rejects new solution user asked explain rejection terms failure cases 
process returns problem solving step 
phase called evaluation user decision originality validity case 
case representation important cbr system determines capabilities system 
im case represented triple respectively set facts representing problem solution descriptions set rules representing causal justification detailed description see 
fact composed function name functor arguments equal greater zero 
justification architecture hybrid creative reasoning causal tree linking problem facts solution facts rules 
case library comprises failure cases representing design constraints 
case retrieval consider spaces knowledge space space ii space iii space iv 
space comprises cases possessing set common properties concerning target problem 
space forms cluster case library 
definition space done terms characteristics cases space share target problem 
creativity seen result reasoning spaces cases increasingly away target problem 
system goes space space iv drifts away problem trying find nontrivial solutions 
retrieval process starts cases space going space space reaches space iv 
space comprises cases functor arguments pairs belonging problem description match new problem 
space considered space normally associated current problem 
current cbr systems cases space 
cases functors describing problem component match new problem belong space ii 
space related problems similar target problem 
space called innovation space parametric adaptations usually done resulting novel value known functor 
space iii contains cases explanation rules functor arguments pairs matching target problem 
space iii defined causal knowledge similarities cases target problem important 
space usually associated creative solutions bizarre ones 
space iv gathers cases contain explanation rule functor arguments pair matching target problem 
space iv speculation space cases remote similarities target problem constraints relaxed 
relaxation allows system explore cases considered distant target problem 
knowledge causal knowledge comprised explanations 
describe adaptation mechanisms im called adaptation operators 
operators modify cases current space order solve new problem 
cases generation new case called source cases 
selection cases adaptation performed metric 
cases selected set cases current working space 
space possesses set predefined adaptation operators 
operators accordingly type cases space comprises 
operators space iv powerful operators space obvious situation cases space iv similarities problem 
order reach valid solution difficult adaptation operations done 
associated operator capabilities complexity computational process originated operator cognitive risks involved probability generating creative solution 
solution case belonging space need modified order solution target problem 
metric selection best case solution target problem 
cases space ii different values regarding problem description 
order meet target problem requirements necessary modify old case solution 
solution derived old case propagation differences old problem old solution 
causal knowledge guide propagation process 
selected case chosen metric function measures similarity cases target problem 
space iii generates new solutions splitting merging case pieces 
im starts selecting similar case set episodes comprising space iii 
splits case pieces selecting pieces match part target problem 
pieces merged form new case 
problem description new case missing parts regard target problem cases selected contribute case pieces complete 
pieces cases relevant new case merged 
space iv adaptation operators applied sequence 
splitting merging operators set 
operators elaboration reformulation substitution generalization 
elaboration comprises relaxing strengthening constraints described case problem order match target problem description 
case solution suggested new solution 
reformulation involves changing new problem description constraints imposed failure cases 
substitution comprises replacing functor arguments pair past case order similar new problem 
solution results substitution new problem 
generalization involves considering values initially considered problem description past case assuming case solution remains unchanged 
solution created verified failure cases 
solution matches failure case rejected 
solutions system assumes correct current knowledge shown user 
creator creator ii creator case creative design system domain digital circuit design 
creator comprises different modules reasoning knowledge base evaluation meta control 
system developed having models case representation formalism 
reasoning module responsible problem elaboration retrieval relevant cases adaptation cases 
knowledge base comprises case base general domain knowledge memory structure 
hierarchies functions structures substances general domain knowledge 
important purposes construction memory structure 
memory structure main goals index cases allow space exploration 
evaluation module architecture hybrid creative reasoning verifies validates generated solutions meta control module controls ordinates modules 
evaluation module adaptation processes implemented creator ii successor creator 
framework design cases represented form models 
models component substance ontology developed bylander chandrasekaran 
case comprises parts problem specification explanation design solution 
explanation form causal chain representing design behavior 
case solution describes design structures accomplish functionalities described target problem 
problem specifications related design function explanation design behavior solution design structure 
problem specification comprises set high level functionalities set functional specifications fss held design 
functionalities help user specifying design problem 
function decomposed subfunctions fs 
fs defined detail accordance input output substances 
design problem represented tree functionalities leaves fss high levels tree represent 
leaf tree represents fs schema comprising initial behavior state final behavior state behavioral constraints external stimulus design structural constraints 
design solution form hierarchy device structures 
structure viewed set device structures substances flow 
structure schema comprises information structure class substructures super structures relations properties functions 
shows high level representation arithmetic logic unit alu node tree represents structure 
structures corresponding structure schema 
arithmetic functions alu logic functions add subtract xor representation arithmetic logic unit alu creator 
case explanation describes causal behavior design terms directed graphs dgs 
nodes dg represent behavioral states edges represent state transitions 
substance schemas compose behavioral state 
substance schema characterizes properties property values substance 
state transition represents conditions transition behavioral states occurs 
memory structure supports case retrieval comprises substructures hierarchy fss graph nodes represent cases links describe functional differences cases 
hierarchy functions index structure selection starting cases 
starting cases fss common target problem 
cases starting points exploration case graph 
leaves hierarchy nodes describe instance 
nodes called list functions lf comprise set fss 
nodes extracted cases index case belong connecting hierarchy functions graph cases 
cases connected difference links represent differences problem description cases linked 
difference link created cases connects fs common 
difference link connecting cases comprises parts set fss belong case don belong second set fss belong second case don belong set fss common cases 
reminding useful experiences case system critical issue 
accuracy case retrieval case creative reasoning important important capability explore solutions 
framework accuracy achieved functional indexes space exploration takes place difference links graph cases 
fss defined target problem probes retrieve set starting cases 
best starting case selected starting point search space 
search space represented graph cases 
exploration performed difference links necessary go case 
important feature exploration algorithm selection cases accordingly adaptation strategy generation new solution 
retrieval algorithm explores case graph searching cases features suitable adaptation method applied 
retrieval adaptation guided process defined smyth keane differences process 
adaptation strategies considered framework thematic abstraction composition 
thematic abstraction adaptation strategy generates new solution single case 
consists transfer knowledge case target problem order create new design 
composition strategy deals multiple cases 
splits merges case pieces generating new solutions multi case strategy 
architecture hybrid creative reasoning features im designed creative problem solving domains knowledge represented hierarchically structured cases 
framework deeply tested music domain implementation generated pieces music small case base compositions century portuguese baroque composer carlos 
case consists highly detailed analysis layers abstraction piece music progressively subdivided thematic groupings harmonic melodic rhythmic principles music theory 
result strictly hierarchical structure complemented causal links establish non hierarchical relations see 
kind structured organization common music artistic domains architecture literature visual arts 
generally case complete piece music represented set interrelated nodes case pieces extracted music analysis 
music structure section part section section music part section section section 
global parts representation musical piece sections phrases sub phrases cells notes generation composition consists creation new structure applying case pieces case base 
generation taken top left right sequence illustrated starts choosing temporally preceding nodes 
sequence generation musical piece key point systems similarity metric 
measurement selects nodes apply avoid new composition 
unfortunately fortunately formulas evaluate solution musical domain 
don clear definition choice specific situation composition new music 
clear notion context structure determinant choice set composition rules help evaluation adaptation 
similarity metric apply takes main aspects node account intrinsic properties internal attributes melodic contour defines context causal links connected attributes parents position structure 
applying similarity metric orderings select node choosing similar similar avoid candidate list 
output compositions project comparable professional composer interesting specially account library cases 
particular example performance introductory part compositions 
carlos pieces similar introductory part able generate new structures different correct style solutions 
creative reasoning genetic programming stated ec great potential creative reasoning 
section brief comprehensive description nevar neuro evolutionary art 
nevar evolutionary art tool inspired works sims dawkins allows evolution populations images initial iterative evolution 
presentation underlying model follow 
finish section showing experimental results drawing remarks 
representation gp applications nevar individuals represented trees 
genotype individual symbolic expression represented tree 
trees constructed lexicon functions terminals 
internal nodes functions leaves terminals 
nevar function set composed mainly simple functions arithmetic trigonometric architecture hybrid creative reasoning logic operations 
terminal set composed variables constants scalar values vectors interpretation genotype results phenotype nevar image 
easiest way explain achieved example 
lets consider function 
function represented tree 

representation form tree 
visualize function 
hypothesis making graphic 
option view graphic top indicate value function color 
value correspond luminance black luminance white values represented intermediate luminance values 
approach yields image similar 
examples expressions images generated 

graphic 
color graphic function 
dimensional vectors necessary produce color images dimension vector corresponds color channel red green blue 
mod xor 
simple functions corresponding images 
genetic operators nevar kinds genetic operators recombination mutation 
recombination operator standard gp crossover operator exchanges sub trees individuals see individuals select randomly crossover points node pa pb nodes roots sub trees swap sub trees obtaining new individuals 

example crossover individuals mutation operators similar ones sub tree swap randomly select mutation points exchange corresponding sub trees 
sub tree replacement randomly select mutation point replace de corresponding sub tree randomly created 
node insertion randomly select insertion point new randomly chosen node 
necessary create required arguments randomly 
node deletion dual node insertion 
node mutation randomly select node change value 
operators induce changes phenotype level 
show examples application crossover operator 
seen crossover images produce interesting unexpected results 
architecture hybrid creative reasoning additionally cases images incompatible images combined result bad images 

top row images 
bottom row examples results generate crossover color images available www dei uc pt fig htm give examples images generated mutation 
results operation give quite unexpected results 

top row original image 
bottom rows mutations original image 
images generated node mutation node insertion node deletion sub tree swap subtree replacement color images available www dei uc pt fig htm model nevar assignment fitness user key role 
interaction human computer poses problems 
instance populations large number individuals big runs 
unfeasible expect human willing evaluate individuals population period populations 
produce appealing images nevar evolutionary steps low number individual evaluations 
fact nevar interactive tool advantage skilled user guide evolutionary process extremely efficient way 
predict images compatible detect evolutionary process stuck local optimum words user change evaluation criteria specific context evaluation place 
design nevar took consideration aspects 
shows model nevar 
call experiment set populations initial particular gp run 
nevar implements parallel evolutionary algorithm sense different independent experiments running time 
asynchronous meaning experiment population example population 
additionally transfer individuals experiments migration transfer individuals population 
experiment migration experiment pop 
pop 
experiment pop 
pop 
experiment pop 
pop 
pop 
migration pop 
pop 
current pop 
current pop 
current pop 
user evaluation genetic operators new population 
evolutionary model nevar 
active experiment depicted gray 
illustrate utilization model example 
suppose user creates start different experiments initial architecture hybrid creative reasoning population randomly generated size initial population size 
user focuses efforts experiment evaluates individuals successive populations generated nevar 
user finds images likes adds images current population case population experiment point user feels evolutionary process benefit population generated combination individuals current population individuals previously transferred population adds individuals current population evolutionary process continues 
user certain point chooses focus experiment nevar generate new population current population composed exclusively individuals transferred initial population experiment random exclusively composed fit individuals originally generated experiments 
fact experiment seen database images may initialize experiments 
may generalize approach organizing gallery images 
stated nevar allows migration experiments 
feature important due limited size population allows revival images previous populations 
possible go back previous population change evaluation individuals allows exploration different evolutionary paths 
give examples images generated nevar 
images exhibit art aesthetics artificial life nicholas curator took place center digital arts ucla 

images art aesthetics artificial life exhibit color images available www dei uc pt fig htm results achieved nevar clearly show power potential interactive evolution techniques advantages reuse past solutions images 
galleries images play increasingly important role generation new images 
chosen representation allows recombination images interesting ways yielding unexpected fit images 
results show isn necessary resort complex primitives fractals complex functions generate complex interesting images 
necessary set simple functions combined complex ways 
unifying architecture analysis previous described section took point realized possible settle common framework architecture hybrid creative reasoning representation language objects manipulated algorithms different domains 
common representation language emerged set hierarchical structured objects 
defined precisely means grammar partially show traditional bnf formalism structure node node structure node name name attribute attribute type attrib name type attrib link value link value possible common language represent objects different domains 
objects represented figures fact instantiations described non terminals name value depend domain 
main advantages adoption representation permits full integration ec cbr mechanisms architecture inclusion objects different domains knowledge base 
characteristic implementation transfer mechanisms possible explored section 
proposed architecture builds representation models creative process iterative sequence steps resembles models proposed psychologists guilford dewey mansfield busse poincar 
main goal propose new ideas transformations hierarchical structured objects contained knowledge base kb 
quality new idea depends novelty suitability solve problem 
key modules play central role process selector generator 
intended produce ideas hierarchical structured objects exploring knowledge space 
second manipulates selected ideas proposes new ones user typically human user 
conveniently feed generator module fluent capability produce wide variety ideas expenses cognitive risks 
second module contribute control quality proposed ideas may adopt strategies may try increase novelty proposed ideas recombining act increase appropriateness adapting problem solve 
kb initially set knowledge filler may controlled human user act autonomously 
may fill kb domain knowledge randomly create necessary structures 
kb may evolve process 
done feedback controller may feed kb new ideas proposed generator 
similarly knowledge filler feedback controller may act autonomously 
knowledge filler knowledge base feedback controller selector ideas generator new ideas 
proposed architecture draw parallelism proposed architecture way ec cbr solve problems see table 
ec population kb evaluated individuals ideas selected fitness function 
may seen selection process 
genetic operators play role generator proposed ideas fed back kb 
cbr cases ideas case base kb selected metric 
adaptation operators transform generate selected cases 
proposed cases may fed back kb 
table 
hybrid architecture ec cbr proposed architecture evolutionary case reasoning computation knowledge base population case base selector evaluation selection selection metric fitness function generator genetic operators adaptation operators crossover mutation 
architecture may explored ways 
objects may produced manipulated cbr ec mechanisms 
may cbr selector apply genetic operators generator improve diversity 
may fitness function select ideas adaptation operators gain adequacy 
may change mechanisms selector generator cycle choice combination may depend evaluation intermediate results specific goals mind 
section show example architecture may deal creative problem solving proposed common knowledge representation 
example example illustrates possible way combining ec cbr framework proposed hybrid architecture showing case library retrieval metric coupled ec system 
consider case library images user chooses images see 
similarity metric system compares chosen image images database 
example architecture hybrid creative reasoning sake simplicity decided root mean square error similarity metric 
worth noting measure isn adequate goals 
probably best metric takes account similarity genotypes individuals 
considering individuals represented graphs trees particular case instance hamming distance maximal common sub graph metrics 

cases case library 
selected image score color image available www dei uc pt fig htm similar images initialize de ec algorithm 
images added initial population 
example number images added including image selected user 
population see composed images case library eleven randomly created images population size set sixteen 

initial population 
images retrieved case library similarity metric images randomly created color image available www dei uc pt fig htm point system uses ec process create new populations images 
process similar described earlier user assignment fitness genetic operators ones previously described 
see generated population 
numbers bellow images indicate fitness score assigned image user 
show twentieth population evaluated 

population number color image available www dei uc pt fig htm 
population evaluated color image available www dei uc pt fig htm evolutionary process place images fitness score threshold value added case library feeding case library best individuals 
show partial snapshot case library populations 
row images comprises images added case library generated populations 

snapshot case library populations color image available www dei uc pt fig htm verify proposed model way speed significantly process image generation 
architecture hybrid creative reasoning improvements proposed architecture opens exciting range research opportunities 
currently exploring ways best produce creative systems improved capabilities 
unifying characteristics architecture leads situation different domains represented principles coexisting environment 
creativity researchers guilford intuition ability interrelate ideas different domains determinant creativity outcome 
fact core creative products artistic scientific lies exactly association apparently unrelated ideas 
human inhabits heterogeneous world survival depends understanding processing complex widespread information 
takes architecture improved creative add process interrelate different domains coexist knowledge base 
metaphor theories centre mainly understanding metaphors establishing correspondences concepts domains involved metaphor star wars king arthur saga veale keane establish correspondences concepts stories 
project named dr pereira cardoso explore metaphor theories search cross domain mappings translations concepts domains 
translations necessary apply cases dr cbr project domain 
think ability establish cross domain transfer knowledge vital development 
feature systems able explore wide varied spaces get ideas apparently sterile grounds 
improvement exploring comes observation framework cases may represented hierarchies leaf nodes represented trees making level case representation 
representation flexible solve problems different levels granularity 
gives possibility exploit case representation evolutionary adaptation viewpoints allowing different representation levels complex reasoning processes 
level representation associated functional description case level associated structural behavioral aspect node associated 
example kind representation return case section describing arithmetic logic unit alu 
shown level representation describes alu divided 
leaf nodes hierarchy attached tree representing function implementation 
instance describes implementation xor alu 
dual representation enable stage evolutionary process 
evolve functional description case evolve structure associated function node 
alu example reach different alu finer level evolve xor implementation 
xor nand nand nand nand nand 
representation xor node 
creative reasoning increasingly challenging research groups mainly area artificial intelligence 
computational models proposed inspired cognitive biological models wide range artistic architectural engineering domains application explored 
diversity computational approaches problem case reasoning evolutionary computation common techniques opinion promising ones 
ec techniques offer diversity adapting environmental changes efficient dealing complex search spaces explore parallelism natural way 
cbr techniques explore previous knowledge versatile ways explanatory capabilities 
argue creative reasoning benefit cross contribution techniques 
years separately explored cbr ec computational approaches creativity 
section briefly results achieved focusing developed applications domains design music composition image generation 
efforts key ideas emerged representation formalisms architecture hybrid creative reasoning generalized common knowledge representation second strong similarities computational mechanisms 
result synthesis proposed section hybrid architecture empowers cross contributions cbr ec 
architecture builds mentioned common representation language 
proposed architecture illustrated example section fully integrates ec cbr techniques may typical mechanisms paradigms core modules selector generator 
generic characteristics representation language computational mechanisms allow application wide range domains 
spite creativity oriented architecture features leads believe may prove useful problem solving tasks 
framework enables coexistence objects multiple domains knowledge base providing means explore advanced concepts metaphoric transfer 
dewey 

think 
boston heath 
boston usa 
guilford 

intelligence creativity educational implications 
san diego ca robert knapp 


art thought 
nova harcourt brace 
de bono 

el lateral 
manual de la 
barcelona spain paid 
spanish goldberg 

design innovation lessons genetic algorithms lessons real world illigal report february department general engineering university illinois urbana 
kolodner 
case reasoning 
morgan kaufman publ san mateo ca 
aamodt plaza 
case reasoning foundational issues methodological variations systems approaches 
vol back fogel michalewicz 
eds 

handbook evolutionary computation oxford university press new york 
rechenberg 

cybernetic solution path experimental problem translation royal aircraft uk 


evolution als der forschung der diplomarbeit universitat berlin 
fogel 

autonomous automata industrial research 
holland 

adaptation natural artificial systems university michigan press michigan 
koza 

genetic programming programming computers means natural selection mit press cambridge ma usa 
gero 

computational models creative design processes 

ed artificial intelligence creativity pp 

kluwer academic publishers dordrecht 
gero 

creativity design 

ed artificial intelligence creativity pp 

kluwer academic publishers dordrecht 
kolodner wills 
case creative design 
aaai spring symposium ai creativity stanford ca 
kolodner 

creative design reasoning understanding 
proceedings international conference case reasoning iccbr providence rhode island usa 
sycara 
influences thematic abstraction creative multiple cases 
proceedings european workshop case reasoning springer verlag washington dc 
sycara 
case representation indexing innovative design reuse 
proceedings workshop th international joint conference artificial intelligence paris france morgan kaufmann publishers 
pereira macedo cardoso 

composing music case reasoning 
proceedings computational models creative cognition mind ii 
dublin ireland 
mantaras serra 
case reasoning system generating expressive musical performances 
proceedings international computer music conference 
thessaloniki greece 
gross 
supporting creative architectural design visual 
gero ed rd international conference computational model creative design hi 
island australia 


genetic algorithm tool melodic development 
international computer music conference 
alberta canada 

genetic algorithm generating jazz 
international computer music conference aarhus denmark 
jacob 

composing genetic algorithms 
international computer music conference 
alberta canada 
dawkins 

blind watchmaker norton new york 
sims 

artificial evolution computer graphics 
acm computer graphics 
todd latham 

evolutionary art computers academic press uk 
rooke 

evolutionary art steven rooke www com 
machado cardoso 

nevar 
evolutionary design computers cd rom bentley 
ed 
morgan kaufmann 
san francisco california usa 
baker 

evolving line drawings harvard university center research computing technology technical report tr 
bentley 
ed 

evolutionary design computers morgan kaufman publ san francisco california usa 
graf banzhaf 

interactive evolution simulated natural evolution 
artificial evolution lutton ronald schoenauer snyers 
eds vol 
springer verlag france 
pp 

architecture hybrid creative reasoning angeline 

evolving fractal movies 
genetic programming proceedings annual conference eds koza goldberg fogel riolo mit press stanford university ca usa pp 



animated artificial life 
virtual worlds synthetic universes digital life complexity 
ed 
new england complex systems institute series complexity 
perseus books pp 

baluja todd 

automated artificial evolution computer generated images 
connection science 
goldberg 

genetic algorithms computer assisted composition 
genetic algorithms applications proceedings fourth international conference genetic algorithms urbana champaign illinois usa 
pp 



bach box evolution part harmony genetic algorithms 
ieee conference evolutionary computation 
orlando usa 
spector alpern 

criticism culture automatic generation artworks 
proceedings twelfth national conference artificial intelligence aaai press mit press seattle washington usa pp 

spector alpern 

induction recapitulation deep musical structure 
proceedings international joint conference artificial intelligence ijcai workshop music ai montreal quebec canada 
papadopoulos wiggins 

ai methods algorithmic composition survey critical view prospects 
aisb symposium musical creativity wiggins 
ed 
edinburgh uk 
wiggins phon 

evolutionary methods musical composition 
international journal computing anticipatory systems 

aaron code meta art artificial intelligence harold cohen 
freedman 
new york computer science 
usa 
burton 

representing representation artificial intelligence drawing 

ed computers art 
intellect books 
exeter uk 
pachet roy 

formulating constraint satisfaction problems part relations case automatic 
workshop ecai 
constraint techniques artistic applications brighton uk 


markov chains aid computer assisted composition 
musical praxis 
cope 

computer modeling musical intelligence emi 
computer music journal 


exercises formal composition environment planning planning design pp 

louis mcgraw wyckoff 

cbr assisted explanation ga results journal experimental theoretical artificial intelligence 
louis xu 
genetic algorithms open shop scheduling 
proceedings isca th conference computers applications pp 
louis johnson 

solving similar problems genetic algorithms case memory 
back 
ed 
proceedings th international conference genetic algorithms icga east lansing michigan usa 
morgan kaufmann pp 
louis zhang 

sequentially metric case injected genetic algorithms applied tsps 
banzhaf 
eds proceedings genetic evolutionary computation conference gecco orlando florida usa 
morgan kaufman publishers california usa 
pp 
ramsey 

case initialisation genetic algorithms 
forrest 
ed proceedings fifth international conference genetic algorithms icga urbana illinois usa 
morgan kaufmann san mateo california 
pp 
eshelman 

chc adaptive search algorithm safe search engaging non traditional genetic recombination 
rawlings 
ed 
foundations genetic algorithms morgan kaufman san francisco usa 
pp 

gomes costa 
case model creative processes 
wahlster wolfgang ed proceedings th european conference artificial intelligence 
west sussex john sons 
macedo costa 

reasoning cases imperfectly described explained 
wess althoff richter eds topics case reasoning selected papers european workshop case reasoning kaiserslautern springer verlag 
costa 

similarity metric retrieval cases imperfectly explained 
wess althoff richter eds topics case reasoning selected papers european workshop case reasoning kaiserslautern springer verlag 
goel 
representation design functions experience design 
brown waldron yoshikawa eds intelligent computer aided design pp 

elsevier science publishers amsterdam 
shankar goel penberthy 
model approach blame assignment design 
proceedings nd international conference ai design pp 
kluwer dordrecht 
bylander chandrasekaran 
understanding behaviour consolidation 
proceedings ninth international joint conference artificial intelligence los angeles ca usa 
morgan kaufman 
smyth keane 
experiments adaptation guided retrieval case design 
veloso manuela aamodt eds topics case reasoning proceedings international conference case reasoning 
berlin springer verlag 
macedo pereira cardoso 

computational model creative planning 
schmid jf wysotzki eds 
mind modelling cognitive science approach reasoning learning discovery pp 
science publishers 
germany 
macedo pereira cardoso 

experimental study similarity metric retrieving pieces structured plan cases role originality plan case solutions proceedings nd international conference case reasoning iccbr brown university providence rhode island usa lecture notes artificial intelligence lnai springer verlag 
mansfield busse 

psychology creativity discovery 
chicago nelson hall 
poincar 

foundations science 
lancaster pa science press 
architecture hybrid creative reasoning 

psychology inventor study 
washington dc inventors publishing macedo cardoso 

labelled adjacency matrices labelled directed multigraphs algebra hamming distance procs 
nd iapr tc workshop graph representations gbr austria 
guilford 

nature human intelligence 
mcgraw hill new york 
veale keane 

metaphor memory symbolic connectionist 
issues metaphor comprehension 
proceedings european conference artificial intelligence workshop neural symbolic integration amsterdam 
indurkhya 

metaphor cognition kluwer academic publishers dordrecht netherlands 
pereira cardoso 

dr searching new ideas environment proceedings th cognitive science natural language processing ireland 
