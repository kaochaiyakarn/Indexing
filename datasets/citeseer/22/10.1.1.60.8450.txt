weakly supervised approaches ontology population itc irst povo trento italy yahoo uk weakly supervised approach automatic ontology population text compare unsupervised approaches 
experiments populate part ontology named entities 
considered high level categories geographical locations person names sub classes category 
sub class list training examples syntactically parsed corpus automatically learn syntactic model set weighted syntactic features words typically occur certain syntactic positions members class 
model classify unknown named entities test set 
method weakly supervised annotated corpus learning process 
achieved promising results accuracy outperforming significantly previous unsupervised approaches 
automatic ontology population op texts emerged new field application knowledge acquisition techniques see buitelaar 
accepted definition op task useful approximation suggested bontcheva cunningham ontology driven information extraction place template filled goal task extraction classification instances concepts relations defined ontology 
task approached variety similar perspectives including term clustering 
lin bernardo magnini itc irst povo trento italy magnini itc poesio term categorization 

different task ontology learning ol new concepts relations supposed acquired consequence changing definition ontology see instance velardi 
op defined scenario 
set terms tn document collection terms supposed appear set predefined classes cm denoting concepts ontology term ti assigned proper class purposes experiments assume classes mutually disjoint ii term assigned just class 
defined op shows strong similarity named entity recognition classification nerc 
major difference nerc occurrences recognized term classified separately op term independently context appears classified 
information extraction nerc particular addressed means supervised approaches ontology population typically attacked unsupervised way 
authors pointed 
cimiano lker main motivation fact op set classes usually larger fine grained nerc typical set includes person location organization gpe class kind entities 
addition definition set classes changes new ontology considered making creation annotated data impossible practically 
demand weakly supervised approaches op propose method called class example learns classification model set classified terms exploiting lexico syntactic features 
approaches consider pair wise similarity terms cimiano lker lin class example method considers similarity term ti set training examples represent certain class 
results great number class features opens possibility exploit statistical data frequency appearance class feature different training terms 
order show effectiveness class example approach compared different approaches class pattern unsupervised approach style hearst ii unsupervised approach considers word class pivot word acquiring relevant contexts class refer method class word 
results comparison show class example method outperforms significantly methods making appealing considering need supervision 
class example method propose applicable general show usefulness applied terms denoting named entities 
motivation choice practical value named entity classifications instance applications questions answering information extraction 
named entity classes including names writers organizations dynamically change time impossible capture static ontology 
rest structured follows 
section describes state art methods ontology population 
section presents approaches task compared 
section introduces syntactic network formalism representation syntactic information exploited class word class example approaches 
section reports experimental settings results obtained discusses approaches 
section concludes suggests directions 
related main paradigms distinguishing ontology population approaches 
ontology population performed patterns hearst relying structure terms velardi 
second paradigm task addressed contextual features cimiano lker 
pattern approaches search phrases explicitly show relation words ant insect ants insects 
phrases appear frequently text corpus 
reason approaches web 
velardi experimented head matching heuristics term head term relation example christmas tree kind tree 
context feature approaches corpus extract features context semantic class tends appear 
contextual features may superficial fleischman hovy syntactic lin poesio 
comparative evaluation cimiano lker shows syntactic features lead better performance 
feature weights calculated machine learning algorithms fleischman hovy statistical measures point wise mutual information jaccard coefficient lin 
hybrid approach pattern term structure contextual feature methods cimiano 
state art approaches may divided classes different training data unsupervised approaches see cimiano details supervised approaches manually tagged training data 
fleischman hovy 
stateof art unsupervised methods low performance supervised approaches reach higher accuracy require manual construction training set impedes large scale applications 
weakly supervised approaches ontology population section ontology population approaches 
unsupervised pattern approach described hearst refer class pattern ii feature similarity method reported cimiano lker refer class word 
describe new weakly supervised approach ontology population accepts training data lists instances class consideration 
method call class example 
class pattern approach approach described hearst 
main idea term belongs class text corpus may expect occurrence phrases 
experiments ontology population patterns described hearst plus pattern 


np 
np 
especially including np instance test set concept instantiated patterns searched corpus 
pattern instantiated concept term appears corpus assume belongs example term classified concept mountain instantiated patterns mountains pattern text considered mountain 
algorithm assigns term categories choose occurs term 
class word approach cimiano lker describes unsupervised approach ontology population vector feature similarity concept term classified example order conclude appropriate instance class mountain method finds feature vector similarity word word mountain 
instance test set assigned classes set features collected corpus classification algorithm classify corpus foreach vt ector corpus foreach vc ector corpus foreach classes csim vt vc return classes classify unsupervised algorithm ontology population 
applied 
problem approach context distribution name different context distribution class word mountain 
single word provides limited quantity contextual data 
algorithm context vectors vt vc feature vectors elements represent weighted context features corpus term concept word mountain 
cimiano lker evaluate different context features prove syntactic features best 
experimental settings considered features extracted corpus parsed dependency parser 
original approach relies pseudo syntactic features features extracted dependency parse trees 
virtually words connected syntactically term modifiers 
syntactic feature pair word syntactic relation lin 
feature types order features directly connected training test examples dependency parse trees corpus second order features connected training test instances indirectly skipping word verb dependency tree 
example consider sentences edison invented edison created 
edison name classified order features name exist invent subject create subject 
second order feature extracted object subject times word edison 
experiments second order features considered words governed verb subject name training test instance example edison 
weakly supervised class example approach approach put forward uses processing stages relies syntactic features extracted corpus 
class example algorithm receives additional input parameter sets training examples class training sets simple lists instances terms denoting named entities context acquired automatically semi automatically existing ontology gazetteer 
facilitate acquisition class example approach imposes restrictions training examples ambiguous different frequencies 
appear corpus experimental settings twice 
example class mountain training examples everest loa algorithm learns training set train single feature vector vc called syntactic model class 
algorithm statement vc ector corpus substituted vc train corpus 
class set syntactic features collected finding union features extracted occurrence corpus training instance train 
feature vector vc constructed feature corresponding coordinate vc value value equal feature weight 
weight feature fc calculated steps 
occurrence fc training set calculated weight fc train log fc fc fc probability feature fc occurs fc probabilities fc appear corpus syntactic features lexical element noun syntactic features 
parameter reflects linguistic intuition nouns informative verbs adjectives cases represent generic predicates 
values automatically learned training data 

normalize feature weights observed vary lot different classes class find feature maximal weight denote weight max fc weight fc weight feature fc normalized dividing fc weight fc 
obtain final weight fc divide fc number classes feature appears 
motivated intuition feature appears syntactic models classes class predictor 
weight fc fc classes fc classes fc number classes fc syntactic model 
shown classification uses similarity function sim vt vc arguments feature vector term vt feature vector vc class defined similarity function dot product feature vectors sim vt vc vc vt vectors vt binary feature value feature features syntactic model vectors vc receive weights approach described section 
representing syntactic information class word class example methods syntactic features main source information syntactically parsed corpus 
parsed half gigabyte news corpus minipar lin 
statistically dependency parser reported reach precision recall press texts 
minipar generates syntactic dependency structures directed labeled graphs loves loves jane loves jane john mary john john mary syntactic graphs syntactic network 
vertices represent words edges represent syntactic relations subject object modifier examples dependency structures shown represent sentences john loves mary john loves jane labels edges stand subject object respectively 
syntactic structures generated minipar tree cycles appear cases 
order extract information parsed corpus choose model representing dependency trees allows search efficiently syntactic structures calculate frequencies 
building classic index word level option search syntactic structures words 
hand indexing syntactic relations word pair relation words useful resolve problem cases search complex structures relation words example find words syntactically related named entity composed words search syntactic structures consists vertices edges 
order trace efficiently complex structures corpus put forward model representation set labeled graphs called syntactic network short 
model inspired model earlier model allows efficient construction representation 
scope represent set labeled graphs aggregate structure isomorphic sub structures overlap 
represents syntactically parsed text corpus vertices labeled words text edges represent syntactic relations corpus labeled accordingly 
example shown syntactic graphs merged aggregate representation 
vertices labeled equal words merged generalizing vertex 
example vertices label john merged vertex john 
edges merged similar way loves john loves john represented edge loves john 
vertex labeled additionally numerical index unique graph set 
numbers vertices show vertices merged corresponding synt net vertices 
example vertex loves set means vertices merged 
similar way edge loves john labeled pairs indices shows represents edges edge vertices edge 
properties important isomorphic sub structures graphs represented mapped structure 
allows easily find occurrences multiword terms named entities 
second numerical indices vertices edges efficiently calculate structures connected syntactically training test terms 
example try calculate constructions word mary appears considering 
directly observe relation loves mary labeled pair relation appears corpus 
tracing numerical indices vertices edges find path mary john loves 
path passes numerical indices means appearance structure john loves mary corpus spanning vertices 
path numerical indices mary jane means appear syntactic construction corpus 
built incrementally straightforward manner new vertex edge added network merged identical vertex edge exists 
new vertex edge added network 
time necessary building proportional number vertices edges represented graphs depend complexity 
efficiency model representing searching labeled structures appropriate representation syntactically parsed corpus 
properties order trace efficiently occurrences named entities parsed corpus calculate frequencies find syntactic features occur named entities frequencies cooccurrences 
model allowed extract complex second order syntactic features connected indirectly terms training test set 
experimental settings results evaluated approaches described section 
evaluation settings experiments 
source features news corpus half gigabyte 
corpus parsed minipar syntactic network representation built dependency parse trees produced parser 
syntactic features extracted synt net 
considered high level named entity categories locations persons 
fine grained sub classes taken consideration 
locations mountain lake river city country persons writer athlete actor inventor 
class consideration created test set named entities wordnet internet sites wikipedia 
class example approach provided training data resources 
wordnet primary data source training test data 
examples extracted automatically 
mountain lake river city country locations macro locations micro writer athlete actor inventor persons macro persons micro total macro total micro category location category person table performance class example approach 
internet get additional examples classes 
created automatic text extraction scripts web pages manually filtered output necessary 
totally test data comprised named entities ambiguous appeared twice corpus 
class example approach provided training set names 
requirement names training set appear twice parsed corpus 
allowed ambiguous manual post processing filtering carried data 
context feature approaches class word class example type syntactic features classification function described section 
done order compare better approaches 
results comparative evaluation shown table 
approach measured macro average precision macro average recall macro average measure micro average class word class example micro equal accuracy percent instances classified correctly 
row shows macro macro macro micro class patterns class word class example class example sec 
ord 
results obtained superficial patterns 
second row presents results class word approach 
third row shows results class example method 
fourth line presents results approach second order features person category 
class pattern approach showed low performance similar random classification macro micro 
patterns succeeded classify correctly instances classes river city 
class city patterns reached precision recall class river precision high recall 
class word approach showed significantly better performance macro micro class pattern approach 
performance class example macro micro higher performance class word increase macro micro 
row table shows second order syntactic features augment performance class example method terms micro average vs 
detailed evaluation class example approach shown table 
table show performance approach second order features 
results vary different classes highest measured class country lowest class inventor 
class inventor exception classes measure 
difference may observed location person classes approach performs significantly better locations vs macro vs micro 
different classes different number training examples observed performance class depend size training set 
think variation performance categories due different specificity table comparison different approaches 
textual contexts 
consequence classes tend occur specific syntactic features classes true 
additionally measured performance approach considering location person 
purpose run experiment results fine grained classification grouped obtained classes 
results shown rows table turns class example method difference location person test instances classified correctly categories 
new weakly supervised approach ontology population called class example confronted methods 
experimental results show class example approach best performance 
particular reached accuracy outperforming experimental framework stateof art class word method 
location names method reached accuracy 
experiments comparable state supervised approaches fine grained named entity classification 
fleischman similar accuracy 
hand weakly supervised class example approach requires training data list terms class consideration 
training examples automatically acquired existing ontologies sources approach imposes virtually restrictions 
weakly supervised methodology applicable larger scale supervised approaches having significantly better performance unsupervised ones 
experimental framework syntactic features extracted dependency parse trees put forward novel model representation syntactically parsed corpus 
model allows performing comprehensive extraction syntactic features corpus including complex second order ones resulted improvement performance 
empirical observations described lead performance ontology population system improves increase types syntactic features consideration 
consider applying ontology population methodology semantic categories experiment types syntactic features types feature weighting formulae learning algorithms 
consider integration approach question answering information extraction system perform fine grained type checking 
poesio 

value clustering evaluation 
proceedings emnlp pages barcelona spain 
magnini sebastiani 

expanding domain specific lexicons term categorization 
proceedings sac pages 
bontcheva cunningham 

semantic web new opportunity challenge hlt 
proceedings workshop hlt semantic web web services iswc 
buitelaar cimiano magnini editors 

ontology learning text methods evaluation applications 
ios press amsterdam netherlands 
cimiano lker 

large scale open domain ontology named entity classification 
proceedings pages bulgaria 
cimiano thieme staab 

learning taxonomic relations heterogeneous sources evidence 
ontology learning text methods evaluation applications 
ios press 
fleischman hovy 

fine grained classification named entities 
proceedings coling taipei taiwan august 
fleischman 

automated subcategorization named entities 
th annual meeting acl student research workshop toulouse france july 
hearst 

automated discovery word net relations 
wordnet electronic lexical database 
mit press 
lin 

automatic retrieval clustering similar words 
proceedings coling acl montreal canada august 
lin 

dependency evaluation mini par 
proceedings workshop evaluation parsing systems granada spain 
de rijke 

type checking open domain question answering 
proceedings ecai 
dagan coppola 

scaling web acquisition entailment relations 
proceedings emnlp barcelona spain 
velardi neri 

evaluation methodology automatic population domain ontologies 
buitelaar cimiano magnini editors ontology learning text methods evaluation applications 
ios press 
