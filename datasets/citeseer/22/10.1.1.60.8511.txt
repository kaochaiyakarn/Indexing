case cooperative incentive coupling distributed clusters rajiv ranjan rajkumar buyya aaron harwood department computer science software engineering university melbourne victoria australia raj cs mu oz au interest grid computing grown significantly past years 
management distributed cluster resources key issue grid computing 
central management resources effectiveness resource allocation determines utility system 
propose new grid system consists grid federation agents couple distributed cluster resources enable cooperative environment 
agents computational economy methodology facilitates qos scheduling cost time scheduling heuristic scalable shared federation directory 
show simulation users local popular resources experience higher cost longer delays users qos demands federation better met 
federation average case message passing complexity seen scalable jobs system may lead large numbers messages scheduled 
clusters computers emerged mainstream parallel distributed platforms highperformance high throughput high availability computing 
grid computing extends cluster computing idea wide area networks 
grid consists cluster resources usually distributed multiple administrative domains managed owned different organizations having different resource management policies 
large scale growth networks connectivity possible couple cluster resources part large grid system 
large scale resource coupling application management complex undertaking introduces number challenges domain security resource policy heterogeneity resource discovery fault tolerance dynamic resource availability underlying network conditions 
existing approaches resource allocation grid environment non coordinated 
non coordinated system application schedulers resource brokering system perform scheduling related activities independent schedulers system 
directly submit applications underlying resources account current load priorities utilization scenarios application level schedulers 
clearly lead utilization bottleneck valuable resources leaving largely underutilized 
furthermore brokering systems ordination cooperative mechanism exacerbates load sharing utilization problems distributed resources suboptimal schedules occur 
resources grid clusters supercomputers managed local resource management systems condor pbs 
resources loosely coupled form campus grids multi clustering systems sge allow sharing clusters owned organization 
words systems allow combination way autonomous system support create environment cooperative federation clusters refer grid federation rest 
furthermore users application level schedulers submit jobs having knowledge response time service utility 
jobs queued relatively excessive times processed leading degraded qos 
mitigate long processing delay enhance value computation scheduling strategy priorities competing user jobs indicate varying levels importance 
widely studied scheduling technique priority queues 
effective schedulers require knowledge users value computations terms qos requirements usually varies job job 
schedulers provide feedback signal prevents user submitting unbounded amounts 
currently system centric approaches legion condor netsolve punch pbs sge provide limited support qos driven re source sharing 
system centric schedulers allocate resources parameters enhance system utilization throughput 
scheduler focuses minimizing response time sum queue time actual execution time maximizing resource utilization system specifically applied user basis user oblivious 
treat resources scale worth results different applications value reality resource provider may value resources differently different objective function 
similarly resource consumer may value various resources differently may want negotiate particular price resource 
users unable express valuation resources qos parameters 
furthermore system centric schedulers provide mechanism resource owners define shared access conditions sharing occurs 
overcome shortcomings non coordinated system centric scheduling systems propose new distributed resource management model called grid federation 
grid federation system defined large scale resource sharing system consists cooperative federation term legion system confused definition distributed clusters policies defined owners shown fig 
fig shows model grid federation shared federation directory 
enable policy transparent resource sharing clusters define model new rms system call grid federation agent gfa 
currently assume directory information shared efficient protocol peer peer protocol 
case system provides decentralized database efficient updates range query capabilities 
systems condor flock manually configured static resource information significant disadvantage building large grid systems 
individual access directory information interface shown fig subscribe quote unsubscribe query 
concerned specifics interface consider implications required message passing messages sent undertake scheduling 
approach considers emerging computational economy metaphor grid federation 
case resource owners clearly define shared grid federation maintaining complete autonomy dictate access get incentives leasing resources federation users 
adopt market economic model resource allocation proposed framework 
user centric models described targeted clusters 
commonly economic models resource allocation includes commodity market model posted price model bargaining model contract net model auction model bid proportional resource sharing model community coalition model monopoly model 
mainly focus commodity market model 
model resource price demand supply value grid federation 
economy model driven resource allocation methodology focuses optimizing resource provider objective functions ii increasing user perceived qos value qos level indicators qos constraints 
key contribution includes proposed new distributed resource management model called grid federation provides decentralization shared federation directory gives site autonomy scalability ii ability ordinate resource management iii incentives resources owners share resources part federation iv access larger pool resources users 
demonstrate simulation feasibility effectiveness proposed grid federation 
rest organized follows 
section summarize grid federation section deals various experiments conducted demonstrate utility 
concluding remarks section 
grid federation models section provides comprehensive details proposed grid federation including models budget deadline calculations simulations section 
general grid federation scheduling technique define grid federation shown fig architectural framework enables logical coupling cluster resources 
grid federation supports policy transparent sharing resources qos application scheduling 
propose new computational economy metaphor grid federation 
computational economy enables regulation supply demand resources offers incentive resource owners leasing promotes qos resource allocation 
framework consists cluster owners resource providers users resource consumers 
users topologically distributed having different performance goals objectives strategies demand patterns 
focus optimizing resource provider objective resource consumer utility functions quoting mechanism 
distributed information sharing grid federation facilitated federation directory 
assume directory information shared user user negotiate gfa cluster gfa cluster schedule user subscribe efficient protocol peer peer protocol 
federation directory maintains quotes advertised costs gfa federation 
quote consists resource description ri cluster cost resource ci configured respective cluster owners 
ri ci gfa determine cost executing job cluster time taken assuming cluster load 
actual load cluster needs determined dynamically load lead changes time taken job completion 
assume ci remains static simulations 
gfa query federation directory find th fastest cluster th cheapest cluster 
assume query process optimal takes log messages query directory system 
consider number additional messages satisfy grid federation scheduling process 
model grid bank entity provides services credit management grid federation 
fig user local gfa submitting job 
user job qos satisfied locally gfa queries federation directory obtain quote st fastest st cheapest cluster 
case federation directory returns quote advertised gfa 
gfa sends negotiate message enquiry qos guarantee terms response time gfa 
gfa load complete job deadline gfa queries federation directory nd cheapest fastest gfa 
query negotiate process gfa cluster quote unsubscribe grid bank query shared federation directory internet 
grid federation negotiate gfa cluster gfa cluster user schedule user quotes negotiate repeated gfa finds gfa schedule job example job scheduled cluster 
federation user express willing pay called budget required response time called deadline job number say job qos satisfied job completed budget deadline satisfied 
cluster federation resource set ri contains definition resources owned cluster ready offered 
ri include information cpu architecture number processors ram size secondary storage size operating system type ri pi includes number processors pi speed underlying interconnect network bandwidth assume ram correct operating system conditions cluster owner charges ci unit time unit instructions mi executed mi 
job consists number processors required pi job length li terms instructions budget bi deadline maximum delay di communication overhead write ji represent th job th user th resource 
capture nature parallel execution message passing overhead involved real application considered part total execution time communication overhead remaining computational time 
consider network com munication overhead parallel job ji randomly distributed processes 
words don consider case parallel program written hypercube mapped mesh architecture 
assume communication overhead parameter scale way clusters depending total data transfer involved parallel job execution ji rk time job ji pi li bi di execute resource rm ji rm li associated cost pi ji rm cm ji rk li pi 
si time ji submitted system job completed time si di qos driven resource allocation algorithm grid federation consider deadline budget constrained dbc scheduling algorithm cost time optimization scheduling 
federation user specify optimization strategies jobs optimization time oft give minimum possible response time budget limit optimization cost ofc give minimum possible cost deadline 
job arrives gfa called local gfa done 
set 
oft required job query federation directory th fastest gfa ofc required query th cheapest gfa 
refer result query remote gfa 

local gfa sends message remote gfa requesting guarantee time complete job 

remote gfa confirms guarantee job sent process iterates step 
recall assume query takes log messages simulation study times iteration undertaken job basis gfa basis 
remote gfa decision immediately receiving request accept job 
job qos parameters satisfied iterating greatest gfa feasibly complete job job dropped 
effectively job ji requires ofc gfa rm chosen ji rm min ji rm ji rm si di similarly oft gfa chosen ji rm min ji rm ji rm bi user budget deadline simulations section trace data job characteristics trace data include user specified budgets deadlines job basis 
case forced fabricate quantities include models 
user allow job user budget eq 
bi ji rk 
words total budget user simulation unbounded interested computing budget required schedule jobs 
deadline job eq 
di ji rk 
words assign times value total budget deadline job compared expected budget spent response time originating resource 
experiments analysis workload resource methodology trace simulation evaluate effectiveness proposed system qos provided resource allocation algorithm 
workload trace data obtained 
trace contained real time workload various resources supercomputers deployed cornell theory center ctc sp swedish royal institute technology kth sp los alamos national lab lanl cm lanl origin cluster lanl origin nasa ames nasa ipsc san diego supercomputer center sdsc par sdsc blue sdsc sp see table 
workload trace record usage data collection parallel jobs submitted various resource facilities 
job arrives allocated index resource cluster name table 
workload resource configuration trace date processors mips rating jobs quote price network bandwidth gb sec ctc sp june may kth sp sep aug lanl cm oct sep lanl origin nov apr nasa ipsc oct dec sdsc par dec dec sdsc blue apr jan sdsc sp apr apr processors period time leaves system 
job workload associated arrival time indicating submitted scheduler consideration 
experimental trace data include details network communication overhead involved different jobs artificially introduced communication overhead element total parallel job execution time 
simulator implemented grid sim toolkit allows modeling simulation distributed system entities evaluation scheduling algorithms 
enable parallel workload simulation extended existing alloc policy space shared entities 
simulation environment models basic entities addition existing entities local user population models workload obtained trace data gfa generalized rms system gfa queue placeholder incoming jobs local user population federation gfa shared federation directory simulates efficient distributed query process peer topeer 
evaluating qos driven resource allocation algorithm assigned synthetic qos specification resource including quote value price cluster owner charges service having varying mips rating underlying network communication bandwidth 
simulation experiments conducted utilizing workload trace data total period days simulation units resources 
consider resource sharing environment experiments independent resource experiment federation economy experiment federation economy experiments 
experiment independent resources experiment resources modeled independent entity federation 
workload submitted resource processed executed locally possible 
experiment consider user request served requested deadline rejected accepted 
experiment evaluate performance resource terms average resource utilization amount real resource simulation period excluding queue processing idle time job acceptance rate total percentage job accepted conversely job rejection rate total percentage job rejected 
result experiment table 
experiment federation experiment analyzed workload processing statistics various resources part grid federation economic model 
case workload assigned resource processed locally 
case local resource available online scheduling performed considers resources federation decreasing order computational speed 
quantify jobs depending processed locally migrated federation 
table describes result experiment 
experiment federation economy experiment study computational economy metaphor grid federation 
order study economy resource allocation mechanism necessary fabricate user budgets job deadlines 
trace data indicate qos parameters assigned eqs 
jobs resources 
performed experiment scenarios users seek ofc seek ofc seek oft users seek oft 
table 
workload processing statistics federation index resource cluster name average resource utilization total job total job accepted total job rejected ctc sp kth sp lanl cm lanl origin nasa ipsc sdsc par sdsc blue sdsc sp fig describes result experiment 
experiment message complexity respect jobs experiment consider total incoming outgoing messages gfa various message type includes negotiate reply job submission messages containing actual job job completion message containing job output 
quantify number local messages sent gfa undertake local job scheduling remote messages received gfa schedule job belonging remote gfa federation 
experiment conducted user populations explained experiment 
fig describes result experiment 
experiment message complexity respect system size experiment measures system performance terms total message complexity involved system size grows 
case consider average max min number messages sent recv job basis 
note case messages undertaken schedule job involves traversing entries gfa list 
accomplish larger system size replicated existing resources accordingly shown table 
experiment conducted user populations explained experiment 
fig describes result experiment 
java simulation tool prohibited scaling system 
results observations experiment observed resources remained underutilized 
experiment observed resource utilization resources increased compared experiment part federation instance resource utilization ctc sp increased 
trends average resource utilization vs resource name 
jobs vs resource name 
resource utilization job migration plot index resource cluster name table 
workload processing statistics federation average resource utilization total job total job accepted total job rejected 
jobs processed locally 
jobs migrated federation ctc sp kth sp lanl cm lanl origin nasa ipsc sdsc par sdsc blue sdsc sp observed resources refer fig 
interesting observation regarding migration jobs resources federation load sharing 
characteristic evident resources including ctc sp kth sp nasa ipsc ctc total jobs schedule observed refer table fig executed locally remaining jobs migrated executed remote resource federation 
ctc executed remote jobs migrated resources federation 
federation load sharing lead decrease total job rejection rate observed case resource sdsc blue job rejection rate decreased 
note average job acceptance rate resources federation increased federation federation 
job trace preferable resources migrate jobs 
words job trace shows potential resource sharing increase utilization system 
experiment measured computational economy related behavior system terms supply demand pattern resource owner incentive earnings user qos constraint satisfaction average response time average budget spent varying user population distribution profiles 
study relationship resource owner total incentive user population profile 
total incentive earned different resource owners varying user population profile seen fig 
result shows expected owners resources got incentive users sought oft total incentive grid dollars scenario compared ofc total incentive grid dollars scenario 
oft observed uniform distribution jobs resources refer fig resource owner got incentive 
ofc observed nonuniform distribution jobs federation refer fig 
observed resources including ctc sp lanl cm lanl origin sdsc par sdsc blue earned significant incentives 

remote jobs processed average resource utilization vs resource name total incentive grid dollars vs resource name 
supply demand pattern plot observed resource utilization statistics refer fig 
faster resources kth sp nasa ipsc sdsc sp remained largely underutilized get significant incentives 
worst case scenario terms resource owner incentive resources 
furthermore results indicate imbalance resource supply demand pattern 
demand high cost effective resources compared time effective resources resources remained largely underutilized 
case majority jobs scheduled cost effective computational resources lanl cm lanl origin sdsc par sdsc blue 
user population distribution scenario resource owners federation received incentive total incentive grid dollars better resource utilization refer fig 
scenario shows balance resource supply demand pattern 
conclude resource supply number resource providers demand number resource consumers qos constraint preference pattern determine resource owner incentive resource usage scenario 
measured users qos satisfaction terms average response time average budget spent ofc oft 
observed users received better average response times excluding rejected jobs sought oft scenario jobs compared ofc scenario 
lanl origin excluding rejected jobs average response time users simulation seconds scenario reduced oft 
users spent budget case oft compared ofc refer fig 
shows users get utility qos constraint parameter response time ready spend budget 
note fig includes expected budget spent response time rejected jobs assuming executed originating resource 
fig depicts number jobs rejected various resources economy scheduling 
experiment consider average response time average budget spent fastest nasa ipsc cheapest resource lanl origin part grid federation federation 
observed average response time nasa ipsc federation simulation seconds compared simulation seconds oft part federation refer fig 
accordingly lanl origin average budget spent federation grid dollars compared grid dollars ofc part federation refer fig 
clearly suggests federation resource sharing leads better optimization objective functions users resources federation may disadvantage users belong efficient resources terms 
jobs rejected vs resource name average response time simulation units vs resource name average budget spent grid dollars vs resource name 
supply demand pattern plot 
messages users seek ofc vs resource name 
messages seek ofc seek oft vs resource name 
messages users seek oft vs resource name 
local remote message complexity plot time cost 
experiment measured total number messages sent received various gfa federation varying user population profiles 
fig shows plot local remote message count various federation economy scheduling 
scenario users seek ofc observed resource lanl origin received maximum remote messages messages refer fig followed lanl cm second cheapest 
lanl origin offers cost case gfa federation attempted migrate jobs lanl origin leading increased inflow remote messages 
scenario users seek oft observed maximum number remote messages resource nasa ipsc refer fig followed sdsc sp second fastest 
resources time efficient attempted transfer jobs 
total messages involved case compared ofc 
happened resources lanl origin lanl cm computational nodes fewer number negotiation messages undertaken gfa job scheduling 
scenario seek ofc seek oft observed uniform distribution local remote messages federation refer fig 
suggests resource supply demand pattern directly determines total number messages undertaken job scheduling computational economy grid system 
experiment measured proposed system scalability increasing numbers resource consumers resource providers 
part experiment concerned measuring average number messages required schedule job federation system scales 
observed system size ofc scheduling required average refer fig messages compared oft refer fig 
system scaled resources average message complexity job increased ofc compared oft 
suggests ofc job scheduling required number messages oft job scheduling need determine due factors budgets deadlines assigned jobs 
note average message count grows relatively slowly exponential growth system size 
expect average message complexity system scalable large system size 
analysis required understand message complexity case 
maximum message count suggests parts system scalable need avoid worst cases incorporating intelligence shared federation directory 
averaged budget spent users federation ofc federation 
messages job users seek ofc vs system size 
messages job seek ofc seek oft vs system size 
messages job users seek oft vs system size 
average message complexity job increasing system size dependent resources 
observed ofc average budget spent grid dollars included expected budget spent rejected jobs originating resource compared federation 
popular resource lanl origin average budget spent local users ofc compared federation 
similarly averaged response time users federation oft federation 
observed oft average response time simulation units included expected response time rejected jobs originating resource compared federation 
popular resource nasa ipsc average response time local users oft compared federation 
clearly suggests users local popular resources experience higher cost longer delays federation resource sharing users qos demands federation better met 
proposed new computational economy distributed cluster resource management system called grid federation 
federation uses agents maintain access shared federation directory resource information 
cost time scheduling algorithm applied simulate scheduling jobs iterative queries federation directory 
results show users popular fast cheap resources increased competition therefor harder time satisfy qos demands general system provides increased ability satisfy qos demands users 
result qos resource allocation algorithm indicates resource supply demand pattern affects resource provider incentive 
clearly users seeking time cost optimization slowest expensive resource owners benefit 
mix users seeking time seeking cost optimization resource providers gain benefit federation 
study extent user profile change pricing polices resources leads varied utility system 
study shared federation directory dynamically updated pricing policies lead ordinated qos scheduling 
analyzed resource supply demand pattern affects system scalability performance terms total message complexity 
general scheduling heuristic lead excessive messages excessive directory accesses expect system scalable 
clear popular resources bottlenecks system intend research ways avoid bottle behavior principally coordination shared federation directory 
proposed grid federation conjunction scalable shared federation directory favourable model building large scale grid systems 
www cs huji ac il labs parallel 
abramson buyya giddy 
computational economy grid computing implementation nimrod resource broker 
generation computer systems fgcs journal volume issue pages elsevier science netherlands october 
alexander buyya 
gridbank grid accounting services architecture distributed systems sharing integration 
workshop internet computing commerce proceedings th annual international parallel distributed processing symposium ipdps ieee computer society press usa april nice france 
allen 
probability statistics queuing theory computer science applications 
academic press 
bode halstead kendall jackson 
pbs portable batch scheduler maui scheduler linux clusters 
proceedings th linux showcase conference atlanta ga usenix press berkley ca october 
buyya abramson giddy stockinger 
economic models resource management scheduling grid computing 
special issue grid computing environment journal concurrency computation practice experience volume issue wiley press 
buyya 
toolkit modeling simulation distributed resource management scheduling grid computing 
journal concurrency computation practice experience pages 
cai frank chen szekely 
maan multi addressable network grid information services 
proceedings fourth ieee acm international workshop grid computing 
casanova 
netsolve network server solving computational science problem 
international journal supercomputing applications high perfomance computing pages 
chapin grimshaw 
legion resource management system 
proceedings th workshop job scheduling strategies parallel processing san juan puerto rico april springer berlin 
chun culler 
decentralized secure remote execution environment clusters 
proceedings th workshop communication architecture applications network parallel computing toulouse france 
livny van dantzig pruyne 
worldwide flock load sharing workstation clusters 
generation computer systems vol 

foster kesselman 
grid blueprint new computing infrastructure 
morgan kaufmann publishers usa 

sun grid engine creating compute power grid 
proceedings ieee acm international symposium cluster computing grid 
iamnitchi foster 
fully decentralized resource discovery grid environments 
international workshop grid computing denver 
avery ranka 
policy scheduling simple quality service grid computing 
proceedings th international parallel distributed processing symposium ipdps 
kapadia fortes 
punch architecture web enabled wide area network computing 
cluster computing journal networks software tools applications pages 
litzkow livny 
condor hunter idle workstations 
ieee 
moore 
peer peer building secure scalable manageable networks 
mcgraw hill osborne 
ranjan harwood buyya 
grid federation economy distributed resource management system large scale resource coupling 
technical report grids tr grid computing distributed systems laboratory university melbourne australia 
stonebraker devine litwin pfeffer sah staelin 
economic paradigm query processing data migration 
proceedings rd international conference parallel distributed information systems austin tx usa september ieee cs press 
waldspurger hogg huberman kephart stornetta 
spawn distributed computational economy 
ieee transactions software engineering vol 
ieee cs press usa february 
weissman grimshaw 
federated model scheduling wide area systems 
proceedings fifth ieee international symposium high performance distributed computing hpdc pages august 
wolski plank bryan 
market formulations controlling resource allocation computational grid 
international parallel distributed processing symposium ipdps san francisco ca april 
