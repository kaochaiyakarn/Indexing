requirements reuse improving information systems security practitioner approach ambrosio nicol fernando garc software engineering research group 
departamento de inform tica sistemas universidad de 
campus de 

spain um es innovative secure 
de la madrid spain fernando garcia es www es information systems security issues usually considered system developed completely rarely design coding testing deployment 
considering security system development begun appreciated particular system requirements specification phase 
practical method elicit specify system software requirements including repository containing reusable requirements spiral process model set requirements documents templates 
method focused security information systems reusable requirements repository contains requirements taken magerit spanish public administration risk analysis management method conforms iso common criteria framework 
information system including security requirements pass risk analysis management study performed magerit 
requirements specification templates hierarchically structured ieee standards 
show case study system regional administration aimed managing state subsidies 
keywords requirements engineering requirements reuse security common criteria framework risk analysis management methods 
increasing interest information systems security issues 
instance president information technology advisory committee stated need scalable information infrastructure techniques ensure united states information infrastructure including communications systems internet large data repositories emerging systems reliable secure grow smoothly accommodate massive numbers new users applications requiring high bandwidth anticipated decades 
nowadays information systems vulnerable threats new viruses worm viruses propagate internet threats brought unacceptable employees internet resources non business activities accidental deliberate disclosure sensitive information hacking failure observe personal data privacy laws leading country fines important administrative sanctions strikes loss key personnel threats information systems need able cope 
addition general acceptance commerce digital signature perform administrative commercial transactions means security information systems needs reliable 
security breakdown result serious problems organization example survey uk organizations shows occurrence security failure business contingency plan leads shutdown cases uk businesses suffered important security breach years 
large number methods regulations concerning security organizations appeared response situation 
particular importance iso common criteria framework ccf national risk analysis management methods uk college technology art risk analysis management method marion france analyse de optimisation par niveau magerit de de del de spanish public administration adaptation ccf 
information systems development field requirements form foundation rest software development process building high quality requirements specification essential ensure product satisfies users needs 
drawing specification quality requirements difficult task 
ieee standard requirement quality correct unambiguous complete consistent ranked importance stability verifiable modifiable traceable 
agree mili exist alternatives software reuse realistic approach bring gains productivity quality software industry needs 
agreed see example benefits reuse greater abstraction level increased code designs specifications reused 
usual practice early steps information systems development pay attention aspects reliability availability integrity security issues usually considered system deployed best system design coding testing 
proposal consider information systems security requirements engineering re process 
approach reuse security requirements compatible magerit ccf subset collected reusable requirements repository 
approach complements siren simple reuse software requirements general purpose re method requirements reuse see currently defining 
explains inclusion requirements repository controls risk levels information system built information system fulfill demands risk analysis performed magerit 
approach applied real case study concerning information system regional government shown 
re standards recommended practices ieee ieee 
guidelines structure requirements specification documents irs requirements reuse srs sts reusable requirements repository requirements documentation requirements engineer requirements validation domain analysis magerit requirements elicitation analysis negotiation stakeholders 
brief summary proposal requirements reuse security field 
structure requirements specification documents explained section 
structure follows section justifies interest problem addressed proposal section includes brief description magerit structure determines structure security requirements repository section summarizes re process siren section describes case study 
section shows outlines research 
reasons study research lessons learned risk analysis management project developed magerit regional government explained section 
research offers combination re reuse information systems security order improve information systems quality productivity 
re security essential reason proposal need include security explicitly information systems development re process improve information systems quality attributes security safety reliability robustness 
sommerville claims high percentage system malfunctions result errors specification design 
example specification may incomplete describe behavior system required critical situations 
study errors embedded systems lutz concludes 
difficulties requirements key root cause safety related software errors persisted integration system testing 
widespread internet rise active multidisciplinary research concerning security issues researchers re focus commerce internet issues agree ant remains need apply proven re methods field 
interesting approaches integration structured systems analysis design method magerit standard development method spanish public administration similar 
approaches relate standard information systems development methods including requirements specification standard risk analysis management methods address entire system development life cycle 
provide reusable requirements repository support reuse security safeguards re process 
criticism concerns policy framework interpreting risk ecommerce security non standard framework risk analysis commerce addresses entire system development life cycle 
plan phase includes requirements definition step provide specific guidance translate security recommendations requirements safeguards example integration magerit 
chung ant focused previously proposed goal re frameworks security field specifically addressing commerce security issues built approach 
think approaches complementary explain magerit place perform risk analysis manage risk reusing magerit compatible security requirements 
analogously specify goals system developed means goal frameworks mentioned operationalize goals making security requirements reuse generic security design knowledge magerit 
able specify relationships security needs functional non functional requirements 
jones carrying project aimed defining framework trust requirements business 
framework contains major elements stakeholders business list common business process models conceptual model elements involved business transaction 
authors seek develop list generic requirements business adapted specific projects means framework 
purpose similar research focuses specifically business focused information systems security general 
research early stage list requirements list categories generic requirements 
security standards adequately address re process 
consider significant part study fenton neil lacks safety related standards applicable security standards particular iso common criteria framework 
particular agree fenton neil requirements imposed standards imprecise ii standards complex difficult 
fact fenton neil show process improving safety related standards improvement structure writing requirements standards impose 
authors claim safety standards conceived evaluate systems created consider problem providing security new systems 
re process improvement proposal addresses improvement information systems quality improvement quality re process 
section deal improvement quality re process means main processes life cycle standards quality standards 
extent life cycle processes standards iso quality standards iso provide precise guidelines identifying problems planning improvements life cycle processes systems software particular iso include section specifically devoted re 
contrast capability maturity models cmm iso spice software process improvement capability determination provide guidelines improve quality life cycle processes 
cover re process 
circumstance led sommerville sawyer propose requirements engineering process maturity model defined set practices re allowed organizations assessed levels initial repeatable defined 
level organizations defined re process level organizations defined standards requirements documents requirements descriptions introduced policies procedures requirements management 
levels correspond cmm levels 
level assigned organizations defined re process model practices techniques active process improvement program place objectively estimate new tools techniques 
third level corresponds cmm levels 
incremental adoption re practice guide 
guide proposal siren contains spiral process model see section practice guidelines see table 
magerit define standard document structure document easy change uniquely identify requirement define policies requirements management define standard templates requirements description language simply consistently concisely organize formal requirements inspections define validation checklists checklists requirements analysis plan conflicts conflict resolution table sommerville sawyer top guidelines 
magerit information systems risk analysis management method spanish public administration compatible iso common criteria framework 
show translated security measures stated magerit reusable security requirements 
magerit source reusable security requirements repository 
magerit specifies risk analysis performed selecting required security requirements see section 
section summarizes basic elements magerit brief description evolution risk analysis management methods 
studies evolution information systems security design methods 
generation methods analyzing risk information systems appeared united states early checklists 
mid appeared second generation formalized methods headed british 
late began appear third generation methods linked information systems development methods closer security legislation regulations rd generation security methods take account personal data protection laws regulations security field 
new version integrated version magerit integrated pertain generation 
organizational problems considered third generation security reconciled functionality system security aspects taken account stages development process 
magerit fact applied steps information systems security management risk analysis management 
starting objectives strategy policy security existing information systems organization magerit applied order study risks affect information system environment ii propose countermeasures safeguards adopted register prevent avoid reduce control risks evaluated 
countermeasures collected information systems security plan put practice followed maintenance stage 
application magerit iterative new risk analyses periodically performed new countermeasures proposed maintenance 
risk analysis management model magerit includes submodel elements providing basic entities related information system risk analysis assets threats vulnerabilities effects risks countermeasures submodel processes describing stages security project developed planning risk analysis risk management recommendation countermeasures 
risk analysis magerit involves major steps identification assets organization resources information system may directly belong information system just information system environment ii study vulnerabilities assets threats iii estimation risk related assets threats vulnerabilities associated threats qualified likelihood occurring iv proposal countermeasures managing risk 
countermeasures manage threats transitively linked assets 
indicated section translated magerit countermeasures security requirements 
security requirements linked assets 
risk analysis performed know assets useful structure security requirements repository section conform structure assets magerit order find suitable security requirements countermeasures 
interest briefly outline organization assets magerit 
assets organization functions information information system environment 
magerit assets hierarchy 
shows magerit organizes assets layers information system environment layer includes facilities containing information system furniture supplies 
information system layer includes information related software hardware personnel information system 
information layer includes information managed information system applications data metadata data structures data dictionaries 
organization functions layer justifies usefulness information system providing purpose describes assets services produced information system users information system services 
assets layer describes assets usually intangible fit lower layers instance organization credibility individual privacy 
layer refined blocks homogeneous assets 
block divided sub blocks 
instance shows structure information system layer 
initials maintaining structure magerit asset hierarchy security requirements repository explained section 
security services magnetic storage servers internet services firewall proxy hw ms hw lan wan architecture hw hw peripherals communication services hardware control systems applications hw office software layer information system software sw sw sw csa sw sw sw sw cs sw sw requirements layer requirements block external software personnel applications tailored development si sw adm sw os sw av sw os ac access control sw os rm rights management sw os activity logs operating systems detailed requirements blocks 
extract magerit information system layer 
siren approach requirements reuse proposal called siren simple reuse software requirements method re requirements reuse 
purpose development requirements reuse identify descriptions systems totally partially minimal number modifications reducing total effort development 
view requirements reuse produce benefit design code reuse traceability relationships see section established high level requirements system architecture implementation built 
system requirement reused subsequent development process speeded 
lot complex techniques reusing requirements exist see classification siren proposal requirements reuse emphasizes simplicity practical 
siren conforms known software engineering standards requirements specification section 
requirements textual format include kind objects complementary information instance tables schemas type 
siren encompasses process model guidelines techniques tools 
guidelines siren provides consist hierarchy requirements specification documents templates document section 
serve structure reusable requirements repository section 
siren process model section discussion tools support process section 
requirements documents hierarchy siren requirements documents hierarchy propose depicted 
accordance consider document correspond different specification level different objectives users 
irs interface requirements specification ieee std 
system requirements specification ieee std 
ieee std 
srs software requirements specification ieee std 

siren requirements documents hierarchy 

system requirements specification system test specification sts software test specification describes function performance computer system constraints govern development information data control input output system 
serves foundation hardware engineering software engineering database engineering human engineering 
ieee include functions capabilities system ii business organizational user requirements iii safety security privacy protection requirements iv human factors engineering requirements operations maintenance requirements vi design constraints 
features ieee details specific contents template referencing ieee std guide developing system requirements specifications guidance specifying system requirements outline 
outline basis siren template 
srs 
software specification requirements srs functions performance allocated software part system engineering refined establishing complete information description detailed functional description representation system behavior indication performance requirements design constraints 
srs includes requirements software functionality external interfaces performance design constraints software attributes portability maintenance security availability reliability 
software requirements directly derived system requirements hierarchical vision 
siren srs template ieee std template proposed robertson robertson 
sts 
system software testing specifications requirement srs quantifiable order subsequently validated see instance robertson robertson sommerville 
requirement srs needs linked testing criteria called fit criteria sts documents respectively 
testing criteria specify check system software implemented fulfills requirements defined 
believe useful security field security plan organization specified directly 
plan include list security questions related personnel organization functions may easily checked 
irs 
interface requirements specification requirements related interfaces software elements software users included srs 
order produce documents useful collect information separate document called irs 
traceability relationships section need established srs modules interfaces described 
irs template structure srs section specifying interfaces 
documents hierarchy definition evolution types documents delivered project 
project manager analysts decides hierarchy depending project dimension complexity system developed system requirements specification system test specification unique necessary problem simple clear requirements supported software 
ii software requirements specification srs compulsory divided sub documents srs subsystem module 
iii contrast interface requirements specification irs optional interface requirements numerous order avoid producing long srs 
case included srs 
iv software test specification sts srs hierarchy 
definition hierarchy documents performed iteratively re process 
hierarchy usually begins see section srs corresponding sts 
subsequently hierarchy documents vary gradually re process instance srs split sub documents subsystem identified 
contents requirements repository repository contains requirements specific domains profiles 
siren domains consist requirements belonging specific application field accounting finance 
siren profile hand consists homogeneous set requirements applied variety domains information systems security personal data privacy law 
structure domains profiles repository see determined previous requirements specification documents hierarchy 
types requirements repository parameterized kind requirement contains parts adapted application developed time 
example srs security manager shall check user identifiers time months detect ones time months 
requirement chosen parameterized part instantiated information brackets replaced specific value current project 
requirement represents example 
requirements management tools allow inclusion points labels example improve legibility 
non parameterized requirements applied directly project concerning profiles domains repository 
requirements examples non parameterized requirements 
recommendations ieee standard requirement attributes identification unique priority criticality viability risk source depend project 
attributes shown included repository 
approach requirements labeled way profile domain location document shown time 
instance label srs refers security requirement software requirements specification document srs located section deals system attributes section related security particular confidentiality 
srs 
specific requirements software system attributes security confidentiality srs user 
security profile srs 
specific requirements software systems requirements security confidentiality srs user 
srs audit 
srs bd database 
reusable requirements repository srs 
specific requirements software system attributes security confidentiality srs audit 
personal data protection profile srs 
specific requirements software system attributes security confidentiality srs bd database 
profile reusable requirements repository composed profiles domains 
profile domain view global repository 
srs document shown 
additional attributes defined security profile magerit location values initials specify position security requirement magerit asset hierarchy see 
example initials sw firewall sub block information system layer value attribute requirements 
way security profile requirements repository may sorted criteria structure requirements specification documents structure magerit asset hierarchy 
level providing analyst information requirements included 
possible values attribute security profile compulsory recommendable optional 
traceability relationships requirements repository collected see ramesh jarke general discussion traceability 
current siren model trace established requirements belonging different documents see 
traces imply inclusive exclusive dependencies inclusive trace requirements means satisfy needs satisfied reuse implies reuse shows example inclusive trace requirements srs 
observe achieved shown accomplished order fulfil fulfilled 
depends transitively 
system requirements specification 
system capabilities 
conditions constraints 

physical 

construction 
documents shall kept lock key office hours 

policy regulation 
authorized user information system shall know duties related access controls information responsibility 
conditions stated authorized users password properly 
authorized users moment disregard information manage 
authorized users follow security measures enforced avoid unauthorized accesses information managed 
trace 
srs software requirements specification 
specific requirements 

software attributes 

security 

confidentiality 
srs operating systems shall provide password mechanisms control limit access users 
trace srs operating system shall provide programs verify quality passwords access control system 
password said quality fulfils features minimum number characters 
numeric characters alphanumeric characters 
shall changed time days general users time days users privileges 

examples system software srs requirements 
labels abbreviations 
exclusive trace requirements means mutually alternative 
example shown 
possible configure firewall different ways time requirements selected security needs specific project 
srs 
firewall configuration screened host 
exclusions srs srs 
firewall configuration screened subnet 
exclusions srs 

example exclusive trace requirements srs 
section srs deals design constraints includes subsection 
related applications 
traceability followed forwards backwards requirement 
development system forward traces linking requirements rest development artifacts analysis design implementation models aiding evolution maintainability system 
process model sommerville re basically comprises phases requirements elicitation ii requirements analysis negotiation iii requirements documentation iv requirements validation 
agree authors spiral life cycle shown suitable way cope re process possible obtain complete set requirements single iteration 
model adapted siren take account requirements reuse explicitly re process 
reuse requirements requirements document validation report repository improvement elicitation validation informal requirements draft requirements document analysis negotiation documentation 
spiral model re adapted siren 
agreed requirements order security profile properly elicitation phase start studying threats assets system 
risk concerning assets estimated depending threats vulnerability assets 
set requirements repository selected establish countermeasures required manage risk analyzed 
siren process model shown detail 
requirements documents templates section guide requirements engineers elicitation phase encompass aspects taken account write requirements specification 
divide phase activities requirements selection 
approach reuse consists providing analyst specification documents templates filled requirements 
domains profiles related current project analysts rest stakeholders reuse requirements repository suitable specific application developed 
noticed requirement reused requirements related means inclusive dependence selected 
addition care computer aided requirements engineering tool supporting process ensure exclusive requirements inserted specification 
specific requirements elicitation 
meetings rest stakeholders analysts gather informal requirements problem domain requirements drafts contain specific knowledge system going developed 
requirements repository initially specific problem hand 
templates reused requirements informal requirements documents input analysis negotiation activity aim discover problems system requirements reach agreements changes satisfy stakeholders 
negotiation remove redundancy inconsistency 
activity agreed requirements identified specified detail documentation activity 
activity leads draft requirements documents follow selected documents hierarchy 
draft requirements validated stakeholders validated requirements documents containing needs constraints information system produced 
documents new spiral re process starts 
eventually validated requirements documents considered complete go development process 
reusable repository security profile data protection repository improvement validated requirements documents 
ir syr srs sts empty templates irs srs going analysis design implementation 
requirements selection sts specific requirements elicitation validation ir syr srs filled templates reused requirements sts irs informal requirements draft requirements documents srs sts analysis negotiation documentation 
siren approach requirements reuse 
agreed requirements stakeholders analyst important point proposing waterfall model 
specification documents evolve rest life cycle instance design specification enriched requirements related technological environment user manuals organization appearance 
agree nuseibeh re architecture design processes concurrent influence 
potentially inherent problem requirements specification premature design 
particular security requirements tend propose design solutions password validation may appropriate irs srs sts circumstances 
approach security requirements specify countermeasures prescribed magerit risk analysis 
magerit risk analysis management determines security mechanism circumstance 
way security information system relies magerit risk management proper design implementation security requirements 
repository shall considered final static product evolutionary product enriched new requirements development current system considered forthcoming applications 
furthermore requirements repository modified order improve quality 
aim repository improvement activity 
tools support process previous section need tools managing requirements supporting reuse 
commercially available tools managing requirements core doors quality systems software qss requisite pro rational provided required functionality 
tools share problem parameterized requirements exclusive relationships section supported 
addition lack features supporting reuse 
context considering implementation tool 
want evaluate sommerville recommendation easiest way provide reuse means documentary database requirements searched key words parameterized exclusive requirements easily implemented 
requisite pro widespread value money integrated rest rational development tools easy 
case study said section approach stems lessons learned development project 
project regional government contracted research group develop risk analysis magerit regional information systems telecommunications office risto 
staff risto interested improvement security systems information constantly available regional government offices huge amount resources equipment people money involved risto 
figures enable reader realize critical security breach regional government roughly employees budget year nearly risto employs people budget 
risk analysis took year involved analysts stakeholders 
stakeholders included roles managers administrative staff final users technical staff 
results study realized cost implementing countermeasures reduce risk critical assets identified lower assets developed account security issues countermeasures magerit linked threats assets think implementation countermeasure depends specific asset threatened countermeasures linked assets 
lead definition siren security profile section structured line magerit asset hierarchy 
repository helps security issues explicit early steps system development process 
considered interesting validate proposal new case study 
preferred carry new case study regional government order knowledge gained previous project working security consultants office selected 
wanted participate requirements specification new information system define security requirements development process 
new information system secure proper implementation requirements 
case study regional ministry labor welfare satisfying requirements stated selected experiment approach 
project dealt specifically management state subsidies awarded put effect activities including promoting business realm career advice rural development plans occupational safety health measures 
group formed people research group working analyst regional government working stakeholders 
worth pointing activities carried group performance risk analysis detect security needs threats critical assets countermeasures 
asset critical valuable barely threatened little value heavily 
value asset calculated loss cause failed value asset accumulated value shown 
example estimated value power hub accumulated value corresponding function weighted sum values assets rely power hub assets involved shown reasons simplicity 
values prioritize asset countermeasures related 
estimated values accumulated values app oracle servers sub network unix power hub switch com servers structured hardware servers lan wan software custom built application software dbms software operating system optical fibre communication equipment custom built app oracle database management system power hub operating system hp ux servers hp ux logic sub network communication twisted pair app oracle unix servers subnetwork power hub switch com structured 
accumulated values extract asset hierarchy case study 
preserve privacy name assets ip addresses changed 
case study information constantly available identified main threats concerning magerit lan wan architecture block assets logic malfunctions main supplies services interruption 
instance power hub assets threatened 
asset critical communication systems depend accumulated value high 
countermeasure defined reduce risk precaution care communication equipment dealt recommendations avoiding malfunctions communication equipment duplicating strategic elements cleaning security areas 
selection security requirements repository related countermeasures defined critical asset 
security requirements selected priority level compulsory recommendable optional course budget assigned development information system 
requirements selection stakeholders negotiated requirement time selected 
case previously mentioned critical asset power hub security requirements corresponding countermeasure selected 
maintainability contract electronic equipment shall include clause enforcing supplier commitment solve failure time minutes 
critical asset cheaper hub security requirement simply keep duplicate asset change fails 
number requirements security profile reused shown table 
noted percentage reuse high requirements information layer includes requirements concerning personal protection data legally enforced spain 
environment requirements selected satisfied existing environment buildings rooms furniture inclusion constitute additional cost 
requirements organization functions layer selected scope concerns security policies exceed case study 
requirements layer chosen totals chosen environment information system information organization functions intangible asset total table results application siren security requirements siren security profile useful developing secure information system account security issues re process overlooked improving productivity decrease time dedicated re process 
experience positive parties goal research group transference knowledge university industry order validate academic research practice regional government counterpart approach useful 
suggested inclusion new attribute called responsible indicate person team charge realization requirement 
way workload member team controlled 
experience shown approach re process realistic starting point organization applied re method 
agree development method complicated engineers commit working repeatable process achieved 
level organization see section reach easily level applying siren approach 
presents practical approach managing security information systems re process 
believe helps development complete robust information systems 
approach general purpose process requirements reuse called siren shortens development process analyst starts reusable set requirements 
siren security profile risk analysis management method magerit conforming ieee common criteria framework 
siren provides spiral model process sommerville proposal enriched explicitly reuse account 
immediate benefit information system development inclusion security requirements ensures proper implementation system fulfill demands risk analysis performed magerit 
defined process siren provides requirements specification documents hierarchy system software tests ieee specification standards 
ieee standard srs extended items template maintaining conformance standard 
inclusion system tests specification document dealing particular security interest serve checklist encompasses information system features checked considered secure 
traceability relationships requirements repository imply inclusive exclusive dependence relationships 
approach tested case study regional government simplicity process fast implication staff involved proved 
mentioned section requirements imposed security standards generally imprecise 
likewise think security requirements expressed natural language may imprecise 
step consider manage imprecision informally basic practice guidelines section regarding requirements writing ii repository improvement activity siren process model iii fit criteria included sts documents section 
conscious complete imprecision management requires advanced techniques formalize functional non functional requirements 
lines research tackle problem case driven development process functional requirements mapped cases scenarios 
interest research group consists formalization uml unified modeling language see required link requirements particular critical formal models obtained rigorously validated verified 
needed specify interactions security requirements types non functional requirements functional requirements 
extent adopt formal framework integrating goals goals refinement requirements models kaos methodology knowledge acquisition automated specification software methodology goal requirements analysis method nfr methodology non functional requirements order capture evaluate alternative goals decomposition 
chung example adapted nfr framework security field 
inconsistency management interesting aspect considered 
inconsistency appear example domains profiles mutually exclusive 
think defined profiles coming magerit personal data protection law inclusive exclusive dependencies avoid inconsistencies 
inconsistencies easily avoided real applications dealing multiples formalized perspectives system 
link siren requirements specification rest development artifacts analysis design implementation think integration siren rest development process improve usefulness approach 
regard necessary study combination siren methods unified process previous research dealing conceptual modeling integration evolutionary prototypes formal requirements specifications realize rigorous seamless design concurrent definition cases conceptual models business model 
research partially financed cicyt science technology joint committee spanish ministry science technology project tic simple reuse software requirements rigorous modeling 
vicente regional ministry labor welfare regional government jos manuel university collaboration useful comments research 


president information technology advisory committee 
interim report president 
setting federal research priorities findings recommendations 

www gov ac interim 
pmc 
effective internet acceptable usage policy organisations 

th international conference electronic commerce bled 
slovenia 

pp 


law december protection private data individuals spain 
ley org de de de de datos de car personal en espa 

spanish 
real june ruling security measures automated files containing private data individuals passed 
real de de por el que se el de de de los que datos de car personal 

spanish 

information security breaches survey 

www uk 
iso iec std 

evaluation criteria information technology security 


subject guide version version 
central computer telecommunications agency security privacy group government london 

marion version 
la commission du club de la des syst mes information fran ais 

map 
de de del de espa ol magerit 

spanish 
sommerville requirements engineering 
processes techniques 
john wiley sons 

robertson robertson mastering requirement process 
addison wesley 

sommerville software engineering th edition 
pearson education limited 

ieee std 
guide software requirements specifications ansi 
institute electrical electronics engineers ieee software engineering standards collection 


mili mili mili reusing software issues research directions 
ieee transactions software engineering 


reed requirements classification reuse crossing domains boundaries 

th international conference software reuse 
springer lecture notes computer science 


pp 


ant ai jb 
strategies developing policies requirements secure electronic commerce systems 

st acm workshop security privacy commerce ccs 
athens greece 


lutz analyzing software requirements errors safety critical embedded systems 

requirements engineering re 
san diego ca 

pp 


farmer mills version models methods second edition 
ncc blackwell 

map 

de 
de estado para la 
superior de inform tica 
spanish 
policy framework interpreting risk ecommerce security 
technical report center education research information assurance security 
purdue university 

www purdue edu techreports public pdf 
chung dealing security requirements development information systems 
rolland eds 
th international conference advanced information systems engineering caise 
spring verlag 
paris 
berlin 

pp 


jones morris trust requirements business 
communications acm 


fenton neil strategy improving safety related software engineering standards 
ieee transactions software engineering 


ieee eia std 
industry implementation international standard iso iec 
standard information technology software life cycle processes volume customer terminology standards 
institute electrical electronics engineers ieee software engineering standards collection 


iso international quality management 
th edition 
iso international organization 

sommerville sawyer requirements engineering practice guide 
john wiley sons 

mc weber cv capability maturity model guidelines improvement software process 
addison wesley 

el melo spice 
theory practice software process improvement capability determination 
ieee computer society 

information systems design methods implications information systems development 
computing surveys 


requirements spectrum 

regional symposium systems engineering society australia se 
australia 


pressman rs software engineering 
practitioner approach 
fifth edition 
mc hill 

ieee eia std 
guide information technology software life cycle processes life cycle data 
institute electrical electronics engineers ieee software engineering standards collection 


ieee std 
guide developing system requirements specifications 
institute electrical electronics engineers ieee software engineering standards collection 


ja 
role requirements reuse protecting personal data 

th world multiconference systemics cybernetics informatics sci 
orlando florida usa 


ramesh jarke models requirements traceability 
ieee transactions software engineering 


nuseibeh weaving requirements architectures 
ieee computer 



core 

www com 
quality systems software 
doors 

www com 
rational software 
requisite pro 

www rational com 


www es 
magerit risk analysis management regional information systems telecommunication office 
contract 
autonomous community software engineering research group university 


method object oriented project 
journal object oriented programming 


fern ndez intuition rigorous 
foundations uml verification tools 
fm eds 
th int 
sym 
software reliability engineering 
ieee computer press 
san jos california 

pp 


fern ndez improving system reliability rigorous software modeling uml case 

ieee aerospace conference track software computing 
ieee computer society 
montana usa 


dardenne van lamsweerde fickas goal directed requirements acquisition 
science computer programming 


chung nixon yu mylopoulos non functional requirements software engineering 
kluwer academic publishers 

jacobson booch rumbaugh unified software development process 
addison wesley longman 
nicol garc combining formal specifications design contract 
journal object oriented programming 


garc ort nicol case conceptual models business modeling 
laender storey vc eds 
th international conference conceptual modeling er 
springer 
salt lake city utah usa 

pp 

legends 
brief summary proposal requirements reuse security field 
structure requirements specification documents explained section 

magerit assets hierarchy 

extract magerit information system layer 

siren requirements documents hierarchy 

reusable requirements repository composed profiles domains 
profile domain view global repository 
srs document shown 

examples system software srs requirements 
labels abbreviations 

example exclusive trace requirements srs 
section srs deals design constraints includes subsection 
related applications 

spiral model re adapted siren 

siren approach requirements reuse 

accumulated values extract asset hierarchy case study 
preserve privacy name assets ip addresses changed 
table legends table sommerville sawyer top guidelines 
table 
results application siren security requirements 
