simplification compression scenes jarek rossignac gvu center georgia institute technology atlanta usa geometric complexity models scientific industrial medical military applications significantly exceeds complexity rapidly downloaded internet displayed interactive rates personal workstations 
situation change need higher levels accuracy models complexity industrial scientific data sets increase faster rate network bandwidth cpu speed graphics hardware performance 
solution requires intelligent techniques compress scenes fast transmission network phone line auxiliary datastructures adaptive resolution techniques avoid processing displaying geometric detail frame 
tutorial discusses representation schemes polyhedra presents advances compression reviews various graphics acceleration schemes teaches specific techniques constructing exploiting multi resolution lod models 
jarek rossignac tutorial eurographics table content 

simple datastructure triangulated meshes 
topological characterization polyhedra topological concepts definitions topological closure interior boundary dimensional homogeneity regularization boolean operations connectedness holes handles non manifold conditions betti number genus euler characteristic topological domains simplicial complexes space decomposition polygon definition polygons open sets properties polygons canonical representation polygons validity model semantic interpretations polygonal representation polyhedron representing restricted classes polyhedra non manifold boundary representations boundaries curved objects 
modeling approximations error measures modeling sequence approximations geometric visual errors distances deviations sets hausdorff estimate geometric error offsets error bound vertex displacement error bound distances supporting planes minimizing color errors 
compression approaches cost storing polyhedral models table independent triangle descriptions vertex triangle tables triangle strips deering generalized strips hoppe progressive meshes taubin rossignac topological surgery 
graphic acceleration techniques cost factors acceleration techniques meshing storing transformed vertices smart caching pre fetching frustum culling pre computed visibility jarek rossignac tutorial eurographics back face culling images textures levels detail 
simplification algorithms mesh reuse static versus adaptive resolution models incremental simplification steps edge collapse vertex triangle flat region decimation criteria error estimates simplification step hausdorff local curvature tolerance zone distance planes optimal vertex placement minimize distance minimize distance plane minimize volume change topological changes merging components removing handles removing bridges 
examples simplification approaches de rose surface fitting varshney envelopes rossignac borrel vertex quantization grading triangulation clustering synthesis elimination adjustment normals generation new triangle strips runtime level selection advantages implementation low tan improvements ronfard rossignac edge collapsing volume preserving simplification taylor face merging hoppe scaleable models 
adaptive surface tesselation lindstrom adaptive terrain models 

bibliography jarek rossignac tutorial eurographics 
computer graphics helps communicate concepts inspect medical cad models interact education entertainment software 
canned video sequences animations may effective cases interactive graphics needed better understand nature scene locate areas interest inspect detail 
interactive inspection effective coupled direct manipulation user controls position objects view interactively moving input devices watching effect motion screen realtime 
term direct manipulation implies user gestures interpreted natural metaphor easy predict effect example user may change view dragging projection selected point model screen 
realtime visual feedback help precise adjustment positions orientations manipulated objets view 
direct manipulation increases ease enhances productivity exploiting natural ability visual cues controlling gestures 
closed loop involving hand modeling animation software graphics human vision effective graphic feedback instantaneous 
delays gestures resulting image lead overshooting reduce feeling control users productive 
effective exploitation models requires graphic response time milliseconds 
response time combines costs processing input signals accessing necessary geometry rendering displaying resulting image screen 
highly complex scenes display cost dominated data access surface rendering 
graphic applications surfaces objects approximated polygons triangles 
complexity number triangles boundary object varies greatly object object scene statistical distribution complexity space objects vary application area 
example mechanical assemblies may involve large numbers small components modeled thousands triangles precisely approximate curved shapes holes matching pins 
architectural models hand may involve large objects relatively simple flat surfaces requiring triangles 
current generation models vehicles city districts involve triangles 
models sufficiently precise visual inspection design general crude precise analysis planning assembly manufacturing processes 
naive approach rendering scene requires perform steps frame necessarily order 
transform vertex triangle entire scene appears correct place viewer coordinate system defined viewing transformation controlled user application 
transform associated vertex normals transformation 
compute vertex colors current view vertex normals position light sources 
clip polygons interior viewing frustum avoid overflow integer computations 
scan convert polygon compute color surface depth pixels covered projection clipped polygon 
time pixel visited depth corresponding point polygon compared depth stored buffer represents smallest depth surface point encountered far scan converting initial subset faces scene 
color buffer buffer updated new point visible lies front previously stored points pixel 
naive approach render scene comprising triangular faces frames second require orders magnitude performance increase current generation hardware 
increase anticipated decade complexity scenes increase faster medical construction architecture mechanical cad scientific geo science military simulation applications 
furthermore popularity graphics entertainment potential impact generation graphic user interfaces challenging developers support interactive graphics capabilities increasingly complex models personal computers portable devices 
techniques eliminate unnecessary rendering steps lead dramatic performance improvements reduce hardware costs graphics 
techniques require complex algorithmic preprocessing compromise quality accuracy images 
relative impact software techniques accelerating rendering scenes depends complexity characteristics jarek rossignac tutorial eurographics model lighting model image resolution hardware configuration 
acceleration techniques include hierarchical culling memory management visibility computation reduced resolution accuracy model simplification images textures perturbation maps optimization rendering library 
techniques combined achieve orders magnitude performance acceleration discussed 
various graphics acceleration approaches adaptive resolution techniques gained popularity 
objects features appear small screen away viewer perspective projection project peripheral lower resolution part human retina away line sight may displayed substitute models significantly fewer triangles similar appearance 
techniques precompute simplified models automatically called simplification algorithms 
strive minimize number triangles preserving prescribed geometric visual accuracy 
techniques reviewed details tutorial 
abundance importance complex databases major industry segments exploitation internet distribute share data exacerbated need effective geometric compression technique significantly reduce time required transmit models digital communication channels amount memory disk space required store models 
studies compression decompression techniques complex triangulated models published 
storage reduction rates achieved current generation compression schemes reach orders magnitude standard formats 
anticipate considerable progress front near 
combination adaptive resolution compression techniques eventually produce new generation representation schemes suitable scaleable access internet interactive rendering large spectrum graphics hardware 
notes organized follows 

simple datastructure triangulated model 
motivate illustrate concepts developed notes 

review simple topological concepts important characterize kinds shapes represented data structures 
formal characterization essential understand limitations simplification compression algorithms 
readers familiar concepts may want skip section 
list various factors limit accuracy polyhedral models discuss error measures 
notions guide evaluation bit efficient representation schemes simplification algorithms 

analyze storage requirements triangulated polyhedra study lossy loss compression approaches 

overview various graphics acceleration techniques 

introduce categorization simplification algorithms detail 
jarek rossignac tutorial eurographics 
simple datastructure triangulated meshes consider simple data structure triangular meshes 
vertex table contains coordinates vertices model 
coordinate 
stored byte floating point number 
triangle table contains definition triangles represented supporting vertices 
vertex 
stored byte integer index vertex table 
example shows data structure may represent tetrahedron 
jarek rossignac tutorial eurographics triangulated polyhedra may conveniently represented arrays 
top left describes vertices storing coordinates floating point numbers 
second top right triangles storing triangle indices supporting vertices array 
indices may stored integer numbers number vertices polyhedron interpretation datastructure semantics representation defines corresponding geometry 
example datastructure may represent set edges bottom left union triangles bottom right certain conditions solid bounded triangles 
note define geometric shape data structure associated semantic interpretation formally defines corresponding guides development correct algorithms perform computations corresponding 
example 
data structure may represent union edges triangles depicted symbolically wireframe tetrahedron left may represent union triangular faces solid bounded faces depicted right engineering drawing solid hidden line dashed 
tutorial help reader answer questions 
represented similar data structures 
bits necessary representing object vertices triangles different datastructures compression schemes 
particular datastructure suited fast rendering 

topological characterization polyhedra section attempt provide reader concepts necessary discuss validity domain geometric representations associated data structures 
tools reader able formulate precisely kind may represented modeling system understand limitations system 
topological concepts pertinent modeling graphics introduced intuitive level 
precise definitions reader consult standard textbooks geometry topology 
practitioners solid modeling distinguish topology geometry model 
geometric representation captures precise shape face curve model topological representation focuses properties invariant continuous deformations independent precise shape geometric components 
incidence graph capture topological relations primitive entities faces edges vertices model object boundary 
incidence graph may contain ordering information accelerates applications traverse adjacent boundary elements 
topological concepts definitions topological space set choice class subsets open sets called neighborhood points point neighborhood intersection neighborhoods point contains neighborhood point 
dimensional euclidean space models discussed constructed 
simplification geometric entities considered behaved 
example surfaces curves fill space 
topological closure interior boundary interior set set points having neighborhood 
intuitively interior threedimensional set set points surface precisely boundary defined 
set open equal interior equivalently contains neighborhood points 
loosely speaking sub manifold subset space smooth surface smooth portion curve 
supporting manifold called carrier solid space supporting manifold face dimensional surface contains face surface needs flat live supporting manifold curve segment edge dimensional curve contains edge 
assume supporting manifold face curve unique known 
case curves surfaces modeling graphics 
set relatively open respect supporting manifold point exists open ball strictly positive radius included assume specified term open edge face means relatively open respect supporting manifold 
entire space open ball sphere boundary 
surface open ball looks disk boundary 
far geometric modeling concerned set open includes bounding faces edges vertices 
face open include bounding edges vertices 
similarly edge open include bounding vertices points 
note edge forms closed loop open 
note edge endpoints open relatively supporting curve 
relative interior set respect supporting manifold largest relatively open subset speaking edges faces assume specified term interior refers relative interior respect supporting manifold 
practically interior solid volume solid bounding faces edges vertices 
interior face face bounding edges vertices 
interior edge edge bounding vertices 
note interior face curve respect supporting manifold empty set open ball fits curve surface 
example relative interior triangle triangular face bounding edges vertices interior triangle relative empty 
relative complement cs set supporting manifold set points relative exterior es set relative interior relative complement jarek rossignac tutorial eurographics relative boundary bs set set points open ball supporting manifold contains points complement basically boundary adjacent complement supporting manifold 
boundary triangle union edges vertices 
note boundary triangle respect union relative interior triangle relative boundary open ball centered point triangle intersects triangle complement closure ks set union relative boundary 
example closure open face face plus bounding edges vertices 
open disk center point ks disk bounding edge center point included 
set crack missing internal face closure operator fill crack remove boundary making part closure set relative 
dimensional homogeneity subset full dimensional contains dimensional part part contains ball positive radius 
subset surface full dimensional relatively surface contains disk positive radius 
note non empty open subsets full dimensional respect supporting manifolds 
set homogeneously dimensional points lie closure interior respect dimensional carrier 
example set homogeneously contain dangling faces edges vertices bound dimensional parts 
disk edge sticking homogeneously 
regularization boolean operations regularization operation takes returns regularized rs closed homogeneously dimensional 
regularization returns closure interior solid rs 
set regular rs 
regularization removes dangling faces edges isolated vertices fills cracks puts tight skin object 
modeling systems restrict representation domains algebraic set bounded infinite regular sets semi algebraic expression expressed unions sets defined locus points coordinates satisfy system polynomial inequalities 
example union difference spheres semi algebraic sets 
boolean set theoretic operators may combine arbitrary sets popular operators union intersection difference 
defined follows 
unfortunately set theoretic intersection difference operators applied sets return regular sets 
may produce dangling faces missing ones 
regularized boolean version operators combines set theoretic operators post regularization operations 
specifically 
boundary result set theoretic boolean regularized boolean operation sets included union boundaries problem computing boundary result may decomposed phase splitting boundaries places intersect topology intersection changes second phase selects appropriate pieces split boundaries correspond particular operation 
note applied regular set theoretic union operation returns regular sets 
imply boundary union simpler compute boundary intersection difference 
consider cubes glued common face 
set theoretic intersection returns common face may discarded regularization operation interior empty 
computing boundary intersection compute intersection boundary object object apply regularization process remove portions resulting boundary bounding full dimensional intersection solids 
consider set theoretic union cubes 
interior common face part interior result boundary 
removed apply regularization order obtain precise representation boundary result 
graphics correct shaded images union solids may produced simply displaying solids hidden surface elimination process rossignac 
boundary evaluation necessary 
jarek rossignac tutorial eurographics connectedness holes handles connected points exists curve segment connects points 
note solid set needs connected 
sets disjoint intersection empty 
union disjoint sets may form connected set 
example consider union open ball boundary 
interior connected interior connected 
example union cubes touching vertex interior connected 
sets quasi disjoint interiors disjoint closures 
example cubes glued common face quasi disjoint 
hole bounded non infinite set bounded connected component complement dimensions term hole distinguished term handle hole denotes tunnel way set handle tea pot 
number holes set important assessing sets homeomorphic may deformed smooth transformation 
set simply connected handles closed curve inside set may contracted single point performing smooth deformation maintains curve inside 
example sphere simply connected torus 
similarly face simply connected hole 
note volume interior hole ball hole center form smaller ball simply connected hand infinite cylinder coaxial cylindrical hole simply connected 
non manifold conditions set said closed manifold point construct open ball positive radius intersection homeomorphic smoothly deformable open ball intersection open ball linear half space set points coordinate equal zero 
example union closed cubes touching vertex manifold set open ball centered common vertex intersect cones homeomorphic ball half ball 
note interior set manifold connected solid 
boundary bs manifold set forms manifold surface point bs construct open ball positive radius intersection bs homeomorphic open disk 
authors say manifold manifold boundary self intersect 
betti number genus zero betti number denotes number connected components set 
betti number called connectivity specifies number handles set 
may defined maximum number cuts set disconnecting producing separate pieces 
cut set may viewed surface swept drawing closed curve boundary solid contracting single point maintaining inside set 
example connectivity ball solid torus surface torus zero betti number closed surface twice zero betti number solid bounded surface 
second betti number denotes number holes 
genus surface maximum number closed curves contained may subtracted disconnecting 
genus denotes number handles closed surface may mapped continuous bijection genus 
genus closed surface half betti number equal betti number set bounded surface 
euler characteristic euler characteristic manifold cw complex set bounded manifold surface dimensional cells connected components interior complex faces edges vertices topological invariant independent subdivision equal 
similarly dimensional manifold closed surface boundary faces edges vertices euler characteristic euler number equal jarek rossignac tutorial eurographics euler equation states euler characteristic equal alternate sum betti numbers 
number connected components plus number holes number shells surface bounding set set number handles entire set 
surface number shells equal number holes maximum number cuts surface twice number handles 
euler equation surface 
consequently euler characteristic surface twice euler characteristic solid bounded surface 
readily available representation complex may easily computed separating connected components formulae yield practical means computing connected component 
formulae restricted manifold sets extended non manifold cw complexes incorporating counts various manifold situations additional cones faces incident vertex 
polyhedron triangulated manifold faces split triangles edges face edge shared adjacent triangles 
words twice triangles vertices additional handle shell introduces additional vertices 
topological domains subsection reviews modeling schemes compares coverage type geometries represent 
simplicial complexes simplex convex hull linearly independent points face simplex convex hull spanned points simplex simplex 
simplices closed homeomorphic closed ball 
boundary simplex homeomorphic sphere 
simplicial complex finite union simplices glued pair simplices disjoint share common face face face 
polytope simplicial complex union sets simplices 
cw complex finite union mutually disjoint relatively open cells homeomorphic open ball dimension having boundary union sets cells complex 
intersection closure cells empty union cells complex 
cw complexes generalize notion simplicial complexes cells restricted simplices points line segments triangles tetrahedra may include relatively open sets arbitrary shape arbitrary finite number bounding simplices faces provided cells holes cells holes handles 
serious limitation simplicial cw complexes lack closure boolean operations 
example difference cw complexes triangle point inside triangle represented cw complex 
popular geometric primitives cylinders cones represented directly simplicial complexes cw complexes faces edges vertices simply connected 
artificial bridge edges cut faces introduced lead inconsistencies semantic interpretation associated datastructures 
geometric complexes introduced rossignac connor rossignac generalize concept cw complexes allowing cells open sets arbitrary genus restricted homeomorphic open balls 
example torus may represented geometric complex cells interior boundary 
simplicial complexes cw complexes geometric complexes closed contain boundaries cells 
selective geometric complex rossignac extends notion geometric complex associating cell attribute stating cell active contributes final set 
jarek rossignac tutorial eurographics example open sphere center point may modeled cells interior point bounding sphere central vertex 
interior active 
structured topological complexes rossignac extend concept replacing attribute color vector color view 
view divides entire space features feature union cells color view 
provide natural general representation composite objects regions different materials 
provides multiple coherent views object complement may partitioned solid surface features relevant various application areas 
distinct cells simplicial cw geometric complex adjacent share bounding cells 
cell incident cell bounding cell space decomposition set geometric primitives may impose decomposition underlying dimensional euclidean space cells geometric complex select subset interest active cells particular feature view stc 
describe informally ways defining decompositions 
single primitive decomposes space parts interior boundary contained boundary contained exterior interior exterior open sets may decomposed connected components may difficult distinguish components 
boundary boundary cp may decomposed singularity free dimensionally homogeneous subsets identifying extracting non manifold singular components cusps self crossings geometric continuity topological manifold properties supporting geometry vanish considering connected components rest sets 
sets singular points may recursively decomposed manner dimensionally homogeneous sets 
maximally connected components decomposition may identified 
example truncated solid cone primitive may decompose space complement cone threedimensional interior cone circular edge base disk base face bounding circular edge apex tip cone conical face bounding edge apex 
atomic entities defined decomposition process correspond cells geometric complex discussed 
connected relatively open subsets dimensional manifold space smooth portion surface curve 
different cells decomposition mutually disjoint 
boundary set cell lying manifold union cells decomposition entirely manifold entirely 
example boundary conical face cone primitive composed circular curve part manifold surface supporting face apex singular point manifold supporting face 
primitives overlap space decompositions induced primitive combined single finer decomposition 
algorithm performing merging operation called subdivision refinement outlined rossignac 
basically requires intersections cells decomposition cells computed decomposed dimensionally homogeneous singularity free connected components inserted decompositions compatible 
space partition induced set planes simple example decomposition 
cells points planes meet relatively open possibly unbounded line segments defined connected components difference line intersection planes union planes cross line isolated point relatively open convex polygonal faces defined connected components difference plane non parallel planes open convex polyhedra maximally connected components complement union planes 
polygon 
naive question valid polygon lead mathematical definition validity polygonal representations accepted processed produced particular application algorithm 
numerous definitions jarek rossignac tutorial eurographics published 
reader may puzzled diversity definitions struggle asked establish definitions equivalent particular definition complete specific case satisfies particular definition 
helpful decompose questions follows 
polygon 

representation scheme data structure store models polygons 

semantically interpret representation example testing point lies inside represented polygon 

condition model expressed representation scheme valid corresponds polygon chosen definition 
definition polygons open sets author definition polygon provided restrictive leads naturally simple canonical unique representation scheme 
set polygon satisfies conditions 
connected bounded subset plane 
equal interior closure 
boundary contained finite union lines 
boundary polygon may decomposed finite union mutually disjoint cells 
cells crossings non manifold points vertices non smooth manifold points crossings edges connected components difference boundary set vertices crossings 
edges relatively open connected line segments free crossings 
chosen define polygons open closed sets include boundary definition leads simpler definition loops polygon simpler canonical representation 
opt complementary definition polygons equal closure interior 
major difference definitions lies fact open definition favored author treats polygons share vertices separate polygons closed definition treats single non manifold polygon connected 
properties polygons definition leads properties polygons 
polygon region polygonal line 
definition compatible term polygon graphics 

polygon relatively open contain boundary 
note boundary polygon exists defined 
fact boundary may represent polygon 

polygon may holes islands separate polygons 

polygon dangling edges isolated vertices interior cracks missing points 

boundary polygon needs manifold important manifold polyhedra may exhibit faces non manifold boundaries 

vertices crossings edges polygon pairwise disjoint 

vertices crossings edges polygon unambiguously defined 

edge polygon separates relative interior polygon relative exterior 

orientation edge convention relative interior left defined 

edge incident exactly points vertices crossings orientation defines start point point 

vertex crossing start point exactly edge point exactly edge 

crossing positive integer edges incident 
start point exactly 
jarek rossignac tutorial eurographics 
successor edge having vertex point defined edge having start point 

successor edge having crossing point defined edge start point circle clockwise immediate vicinity starting 
successor edge uniquely defined 

loops polygon maximally connected components boundary polygon 

loops polygon uniquely defined pairwise disjoint 

edge vertex crossing belongs exactly loop 

edge belongs loop successor 

successor operator returns successor argument edge induces unique cyclic ordering edges loop 

edges may uniquely defined start points 

point edge equal start point successor edge loop suffices defining edges 
loop completely represented ordered circular list start points edges 
loop different points 
degenerate loop geometry edge point 

starting points consecutive edges loop different consecutive loop different 

edges loop different different pairs vertices 
canonical representation polygons properties lead simple canonical representation polygons 
polygon may represented set points vertices crossings set loops 
point may represented explicitly coordinates implicitly example intersection planes 
loop represented circularly ordered list points 
note polygon meets proposed definition representation scheme data structure unique 
take account possible permutations various representations sets list addresses imposing appropriate lexicographic orderings 
processing convenience require outer loop defined plane explicitly identified data structure 
imposing additional constraints representation restricts set representable polygons 
example point loop polygon manifold boundary crossings 
polygon single loop simply connected 
validity model data set organized described set loops loop defined sequence points necessarily correspond loops edges vertices crossings boundary polygon 
validity violations may different nature geometric ordering topological 
geometric violations correspond wrong choice point coordinates example point may coincide point edge edges may intersect 
ordering violations may simply correspond wrong orientation edges loop wrong branch taken crossing inconsistent definition successor 
topological violations may correspond empty edges consecutive point degenerate loops point loops non manifold parts example multiple edge 
semantic interpretations polygonal representation possible define semantics guarantee validity arbitrary representations stored datastructure define unique polygon dataset represented set loops 
example set defined closure xor combination relative interiors edges loops 
jarek rossignac tutorial eurographics point belongs xor combination number belongs odd number sets 
difference supporting plane composed connected open sets unbounded 
sets polygons 
exists unique subset polygons boundary interior closure union polygons acceptable semantics representation consider loops define unique polygonal region union polygons set formal definition corresponds intuitive notion parity rule states point lies inside polygonal region defined set loops ray constructed infinity intersecting vertex loops intersects odd number edges loops 
simple rule cover points lie loops extended cover points 
note polygonal regions defined parity rule need connected 
furthermore loop representation extended semantics unique 
interior polygonal region may decomposed polygons defined author having canonical representation terms natural loops defined author 
polyhedron 
definitions discussed polygons may naturally extended polyhedra sets need manifold 
author defines polyhedron set properties 
bounded connected subset euclidean space 
equal interior closure 
boundary contained finite union planes 
faces polyhedra identified connected components boundary removed singularities manifold non manifold edges vertices 
concept loops introduced polygons replaced dimensions concept shells 
shell connected subset boundary polyhedron 
face polyhedron separating interior polyhedron exterior 
face may oriented normal points exterior polyhedron 
face bounding edges polyhedron uniquely defined successor successor face encountered walking interior side crossing successor operator symmetric successor successor polyhedron may represented set shells shell defined closure union faces 
facilitate traversal boundary face adjacent face exploit coherence algorithms process polyhedral representations successor face edges may stored explicitly 
notice shell may composed sub shells walk face face sub shell sequence successor operators sequence exist faces different sub shells 
sub shells touching non manifold vertices 
note faces polyhedron polygons 
consider example top face polyhedron 
open subset plane equal interior closure 
fact crack boundary edge adjacent face sides 
jarek rossignac tutorial eurographics non manifold polyhedron may faces polygons boundary contains crack edges adjacent face sides 
models may captured datastructures designed manifold models bu suppressing edge representing twice loop 
violations validity rules polyhedral representation may lead considerable difficulties development algorithms process representations 
crack edge removed boundary face regularization process destroys property faces edges disjoint 
alternatively modeled coincident edges orientation contradicts assumption edges pairwise disjoint 
solutions lead considerable complications algorithms example triangulate faces compute properties polyhedron 
better approach define faces non manifold polyhedra superset polygons 
set polygonal face 
open bounded connected subset plane 
boundary contained finite union lines 
definition polygonal faces exhibit topological domain cells geometric complexes 
representing restricted classes polyhedra simple enumeration solid faces suffices unambiguously define solid boundary representation schemes store additional information accelerate traversal processing boundary combine description adjacent faces order eliminate redundant descriptions common vertices 
data structures capture incidence relations face bounding edges vertices edge bounding vertices 
data structures studied achieve desired compromises 
domain coverage modeler 
simplicity regularity compactness data structure 
efficiency algorithms process representation 
complexity software building processing representations 
polyhedral modelers domain restricted manifolds may datastructures solids sets edge bounding exactly faces vertex adjacent single cone faces 
popular restriction polyhedral modellers require faces simply connected imply solids simply connected 
restriction face may represented simple bounding loop edges may turn implicitly defined cycle vertices loop 
choice order vertices may indicate direction outward pointing normal face respect solid bounds 
simplified models faces popular graphic 
example describe help simple data structure manifold polyhedral objects 
simplified version winged edge representation introduced 
vertices jarek rossignac tutorial eurographics object stored table associated coordinates 
edges represented vertices adjacent successor edges 
note data structure defines geometry edges loops bound faces explicitly capture relations different loops face 
example face right outer loop encloses smaller triangular inner loop edges 
boundary representations separate nodes faces store explicitly face loop relationships 
alternatively faces holes may converted simply connected faces introducing artificial bridge edges merge loops face 
non manifold boundary representations modelers cater sets manifolds 
manifold model boundary edges shared precisely faces vertices adjacent set faces forms single cone apex vertex 
unfortunately domain manifold sets closed fundamental modeling operations 
example union shaped manifold solids see non manifold solid 
users restricted systems carefully avoid creating non manifold shapes 
edge points starting vertices 
order vertex defines orientation edge direction arrow 
node corresponding contains edges 
edge face right edge face left terms edge left right unambiguously defined considering outward pointing normals faces orientation bridge edge links outer loop right face inner loop indicated double line segment face 
shaped solids left positioned edge coincides edge union non manifold solid right 
radial edge data structure weiler introduced provide extension earlier manifold boundary representations support non manifold solids 
extended represent non manifold combine faces edges necessarily form valid boundaries solid 
solid modeling jarek rossignac tutorial eurographics community term non manifold boundaries traditional referred valid boundaries solids 
terms non manifold geometric boundary non manifold topology refer general scheme includes dimensionally inhomogeneous 
defined manner restricted quasi disjoint enumerations closed bounded dimension 
union shells face cycles enclose connected region space represent solids 
set faces contains addition shell faces lie inside enclosed region considered boundary solid solid closed faces inside enclosed region interior solid part boundary 
representing objects closed sets internal faces schemes proposed weiler fact uses faces outside shell define region 
interior faces part boundary modeled solid superposition 
alternative consider open cells cells non regularized inhomogeneous represented enumeration union mutually disjoint connected open cells rossignac 
note cells open dimensionally homogeneous 
furthermore cells required connected singularity free sub manifold algebraic varieties 
cells represented 
cells constitute boundary cell part 
example solid cell represented decomposition boundary face cell represented supporting surface bounding edge cells vertex cells 
treated disjoint enumeration cells represent closed 
addition capabilities modeling inhomogeneous internal structures represent non closed cracks 
generalization achieved mechanism selective subdivision cells enumeration marked active inactive represented union represented active cells 
inactive cells may define subdivision complement represent 
simplification mechanism removes unnecessary subdivisions unnecessary inactive cells maintaining validity representation exists 
results unique 
boundaries curved objects faces boundary representation curved object may represented parametric patches images unit square triangle polynomial mapping parameter space modeling space 
alternatively face may represented trimmed surface supporting surface lies boundary surface 
supporting surface may larger parametric patch implicit surface 
boundary usually represented set edges may arranged loops 
edges solid typically lie intersection curves surfaces singular curves single surface 
simple edge line segment circular arc may represented type parameters position space 
complex edges approximated piecewise polynomial parametric curves parameter space host surface 
case leads redundant representations edge typically belongs surfaces 
redundant representations may conflict due numeric round errors cause cracks boundary 
exact closed form parametric representations intersection natural quadric surfaces derived late university rochester padl modeler brown 
intersections edges implicit polynomial surfaces computed efficiently substituting parametric expressions point curve implicit polynomial equation surface solving efficient numeric polynomial root finder 
edge loops may insufficient define face unambiguously 
example circular edge spherical surface boundary complementary faces 
may distinguished storing information points neighborhood edge belong face 
neighborhood information encoded efficiently single bit left right attribute terms orientation surface normal orientation curve 
jarek rossignac tutorial eurographics 
modeling approximations error measures alternate representations geometric model generated produce bit efficient coding generate impostors resemble original shape may displayed efficiently 
cases important measure precisely error introduced substituting compressed simplified model original 
ways measure error 
discussed section 
discuss error introduced modeling process better understand impact additional errors introduced compression simplification 
modeling sequence approximations modeling process result sequence abstractions approximations idealization surface approximation digitization 
resulting models properties computed models approximate corresponding real objects different degrees precision 
physical shape abstracted perfect homogeneous point set ignoring internal structures boundary imperfections 
second idealization stage boundary shape approximated relatively small number faces face subset surface type supported modeling system 
variation solid modeling technologies stems different choices primitive surfaces support 
surfaces essentially determine geometric domain system objects modeled exactly 
hand planar face primitives triangles general polygons provide poor approximation real shape large quantities define fine tessellations highly curved geometries 
algorithms dealing individual triangles simple relatively robust compact data structures representing large numbers triangles efficient algorithms processing rendering complex develop maintain 
hand single parametric free form surface patch farin may smoothly stitched patches non uniform rational spline surface nurbs may provide better fit desired geometry triangles 
detecting computing intersections free form surfaces involves elaborate mathematical techniques algorithms significantly slower reliable counterparts triangular geometries 
natural quadric surfaces plane cylinder cone sphere offer attractive compromise provide mathematically exact representations majority faces manufactured objects lead closed form expressions intersection curves low degree polynomial solutions computation points surfaces intersect 
surfaces model precisely numerous blends manufactured parts rossignac 
model free form surfaces appear objects especially satisfy requirements car bodies 
choice geometric domain modeler may affect accuracy analysis results 
example cylindrical pin may freely rotate cylindrical hole slightly larger radius surfaces modeled natural quadrics 
faceted approximations pin hole may lead wrong pin rotate doesn fit 
third approximation stage numeric parameters define precise shape position surfaces intersections rounded nearest value representable digital format selected developer system 
common formats floating point integer rational ralston 
floating point representations cover wider range values worst case round error grows distance origin 
integer numbers scaled offset properly judicious choice units origin provide denser uniform coverage desired modeling range lead lower better controlled round errors 
practice floating point numbers favored require prior knowledge range uniform way represent parameters model results intermediate calculations 
floating point calculations generate propagate round errors 
developers modeling system ensure round errors lead logical errors software crashes wrong design decisions 
exact arithmetic packages suffer round problems significantly slower usually effective polyhedral geometries see discussions banerjee agrawal 
geometric visual errors simplification process takes triangulated surface produces simplified triangulated surface 
error may perceived graphics applications scene depends shape jarek rossignac tutorial eurographics viewing conditions size orientation shape screen 
vital precise error evaluation tight guaranteed upper bound error simplification schemes may produce simplified models suitable substitutes original shape 
error bound guide selection appropriate level detail meets desired graphics fidelity 
image defined color components displayed pixel useful distinguish types errors geometric errors far pixels color errors pixels differ color images evaluating accuracy simplification technique 
errors discussed 
general predict viewing conditions view independent error estimation usually computed simplification rendering guide choice level detail 
possible needs compute view independent error representation leads simple efficient estimation corresponding view dependent error 
example point surface displaced normal surface vector perceived error depend projected size screen resulting side effects instance changes orientation surrounding faces 
worst viewing conditions geometric error may occur vector orthogonal viewing direction worst viewing condition color error depends relative orientation light sources typically proportional area occupied screen faces shape altered displacement point 
area large parallel viewing direction incident faces orthogonal viewing direction 
example clear difficult provide tight bound color error useful consider separately tasks estimating errors 
numerous simplification techniques reported literature fail provide proper error bound heuristic estimates guide simplification process selection level detail rendering 
strategies results simpler algorithms faster processing lead impressive demonstrations 
may suited entertainment applications may appropriate professional applications unexpectedly high errors may mislead users wrong model 
techniques proposed computing provable upper bound geometric error 
cover wide spectrum compromises simplicity calculations performance preprocessing steps tightness bound 
distances deviations sets distance point set min stands norm vector closest set cl point set set 
may contain single point isolated points continuous set 
example closest set spherical surface centered surface 
distance point set achieved point left 
distance points achieved right point point distance sets min shortest path sh set set set vectors represents set translations minimal distance bring sets contact 
jarek rossignac tutorial eurographics maximum deviation de set set max measures largest distance points note measure symmetric general de de 
hausdorff estimate geometric error geometric error sets may measured hausdorff distance defined max de de 
measures worst case distance point set travel reach set 
note symmetric version deviation de illustrated 
dev sets intersect 
hausdorff distance sets equal deviation dev deviation dev 
hausdorff distance zero sets indicates sets identical general hausdorff distance measure shape similarity shapes see counterexample 
properly aligned sets relatively small hausdorff distance shapes differ significantly 
cost computing hausdorff distance polyhedra significant suffice check distances vertices set set 
able detect configurations hausdorff distance realized points lie middle faces 
situation illustrated 
hausdorff distance polygons realized point edge vertex 
possible approach computing hausdorff distance compute intersection skeleton polyhedron boundary vice versa 
intersection contains points relative interior faces polyhedron hausdorff distance realized 
skeleton polyhedron set points shortest path boundary distinct vectors 
jarek rossignac tutorial eurographics alternatively simpler compute precise bounds 
consider sets projections plane 
consequently hausdorff distance provides view independent bound difference parallel projections shapes plane 
furthermore care hausdorff distance may provide bound difference perspective projection oftwo shapes suitable bounding deviation shapes graphics applications 
offsets expansion set distance set points union balls radius center points boundary exactly distance inverse true 
contraction set distance set points cs cs denotes complement set points center balls radius contained note cs cs 
closing denoted set points reached open ball lying outside opening denoted set points reached closed ball lying inside solid left may expanded contracted closing opening define areas may reached ball radius remains outside respectively inside set support offset operators expansion contraction csg modeling scheme studied rossignac 
special case minkowski operation sets 
applications blending rossignac implemented closing opening rounding 
difference defines tolerance zone boundary note bs distance points tolerance zone boundary sets bs bs hausdorff distance boundaries simple representation set included bs may control continuous simplification process generates boundary set continuous deformation boundary keeping times voxels contain boundary may define tolerance zone safe simplification steps prescribed tolerance 
error bound vertex displacement triangles linear convex combinations vertices vertex triangle moved distance interior point 
consequently keep track move vertices polyhedron upper bound total hausdorff error 
jarek rossignac tutorial eurographics moving single vertex polyhedron displacement vector replacing results hausdorff distance original shape modified version lower norm quantizing vertices polyhedron compression truncating coordinates fixed length integer fixed point format introduces error coordinate 
total hausdorff error resulting approximation lower times square root 
similarly simplification techniques replace vertices fall single cell regular grid model cell single vertex representative introduce hausdorff error diagonal cell 
simplification techniques edge collapsing vertex edge merged vertex edge introduce error edge collapse bounded edge 
vertex may moved subsequent edge collapses total hausdorff error may bounded maximum sum length edges vertex moved edge collapses precisely maximum total distance new original locations vertices 
bounds computed vertex displacements general pessimistic 
example moving vertex triangulation flat nearly flat surface surface may result minor change object vertex displacement may arbitrarily large 
error bound distances supporting planes vertex displacement provides pessimistic error bound 
imagine example displacement vertex dense triangulation flat portion terrain 
vertices move plane terrain represented geometry remains flat error zero vertex displacements may large 
ronfard rossignac introduced error estimator measures displacement vertices direction orthogonal incident faces ronfard 
estimator computes maximum distance new location vertex supporting planes vertices collapsed estimator works flat nearly flat regions may provide upper bound close sharp edges vertices shown 
cases sharp corners ronfard rossignac introduce additional plane orthogonal average normal incident triangles suffices guarantee precise upper bound error 
successive edge collapses bring vertices location third vertex marked left 
error estimated computing maximum deviation set lines support incident edges 
sharp corners lines parallel vertex move far distance supporting lines incident edges initial position exceed allowed threshold right 
additional line introduced limit excursion 
large number vertices clustered replaced single vertex evaluating hausdorff distance approximation proposed ronfard may require large number point plane distance computations 
garland heckbert propose square distance supporting planes maximum distance garland 
advantage approach lease square distance may computed point matrix independent number supporting planes 
drawback approach square distance provide upper bound error limits suitability design inspection 
jarek rossignac tutorial eurographics minimizing color errors color error somewhat subjective requires computing distances color space harder control 
slight variation face orientations may result considerable variation specular reflections 
color errors best addressed basing estimation simplification error photometric properties may view dependent 
approaches possible worst case color error computed possible viewing conditions light position viewpoint positions simplification lossy compression precomputed exceed prescribed error bound selection appropriate level resolution transmission graphics performed run time actual viewing lighting conditions precomputed error characteristics note shading simplified model model fewer faces normals original model may produce excellent results faces roughly orthogonal viewing direction may produced undesirable black spots situations face facing viewer normal inherited original model leads black color corresponding vertex 
jarek rossignac tutorial eurographics 
compression approaches cost storing polyhedral models relatively little attention devoted far compression shapes 
situation change rapidly reasons exploding complexity industrial cad models raises significantly cost memory auxiliary storage required models distribution models networks collaborative design gaming rapid prototyping virtual interactions seriously limited available bandwidth graphics performance high level hardware adapters limited insufficient board memory store entire model data transfer bottleneck 
focus study compression triangular meshes shells adjacent triangles 
chose triangle representations general polygonal faces may efficiently triangulated ronfard triangles provide common denominator representation schemes 
furthermore number triangles convenient measure model complexity important comparing various compression techniques 
focus simply connected manifold meshes triangles mutually disjoint edges vertices edge adjacent exactly incident triangles vertex adjacent exactly cone incident triangles 
furthermore assume simplicity mesh connected surface zero handles 
restrictions purely sake simplicity compression schemes reviewed may expanded cope general meshes 
discussed section triangular mesh may defined position vertices geometry association triangle sustaining vertices incidence 
may wish add color normal texture information photometry affect geometry influences way triangle shaded 
different normals colors may various uses vertex incident triangle consider simplicity unique normal associated vertex unique color associated polyhedron 
fact simplifying assumption pessimistic scenes vertices share normal 
note radiosity models require storage different color vertex triangle 
minimum number bits required encode triangle mesh triangles vertices 
simple meshes roughly twice triangles vertices assume measure complexity mesh 
uniformity assume unique normal photometry associated vertex normals different vertices 
illustrate storage requirement pick reasonable compromise average vertices solid mechanical assemblies significantly larger vertex counts terrain models medical datasets 
compare storage requirements representation schemes 
course general purpose loss compression schemes may applied bit stream resulting approaches considered comparison 
table independent triangle descriptions array triangles simplest representation triangle mesh represents triangle independently list vertex normal coordinates represented byte floating point number 
number bits vertex simple representation triangle mesh vertices product terms triangles vertex vertex descriptions triangle vectors vertex location normal vertex triangle coordinates vector bytes coordinate bits byte note vertex average adjacent triangles vertex uses descriptions vertex geometry photometry stored simple representation need encode explicitly triangle vertex incidence relation dictated place vertex description data stream 
jarek rossignac tutorial eurographics vertex triangle tables redundancy describing vertex times model eliminated representation vertices location normal representation incidence relation requires vertex triangle 
vertex general requires bits vertex description schemes vertex normal table compact simple table independent triangle descriptions representation discussed 
store described section vertices table integer index need bits vertex consequently vertex normal table representation requires bits vertex 
total includes bits geometry photometry vectors vertex location normal vertex coordinates vector bytes coordinate bits byte bits incidence information triangles vertex vertex triangle bits vertex triangle strips compression scheme requires random access vertices acceptable graphics systems software geometry processing suitable high graphics acceleration adapters perform geometric transformations color calculations triangle clipping triangle limited board register memory storing vertices associated normals 
representation triangle strips supported popular graphics apis opengl provide compromise graphics 
reduces repeated vertices average average assuming average length triangles strip easily achieved compatible graphics hardware constraints 
basically triangle strip triangle formed combining new vertex description descriptions previously sent vertices temporarily stored buffers 
vertices overhead strip desirable build long strips automation task remains challenging problem evans 
assumptions triangle strips require bits product terms triangles vertex vertex uses triangle vectors vertex location normal vertex coordinates vector bytes coordinate bits byte absence swap operation opengl increases vertex redundancy vertex may sent times triangle strip overcome left right left right patterns vertices imposed opengl 
constraint affect suitability triangle strips data compression 
deering generalized strips average vertex twice part triangle strip different ones triangle strips requires sending vertices multiple times 
deering generalized strips deering extend registers opengl triangle strips registers stack buffer previous vertices may stored 
deering generalizes triangle strip syntax providing general control vertex allowing temporary inclusion current vertex stack buffer reuse vertices stack buffer 
bit vertex indicate vertex pushed stack buffer 
bits triangle indicate continue current strip 
bit triangle indicates vertex read input stream retrieved stack 
bits address randomly selecting vertex stack buffer time old vertex reused 
assuming vertex reused total cost encoding connectivity information bits vertex plus bits triangle 
assuming triangles vertex amounts bits vertex 
algorithms systematically creating traversals general meshes deering generalized triangle jarek rossignac tutorial eurographics mesh syntax available naive traversal arbitrary meshes may result isolated triangles small runs implying significant portion example vertices sent increasing number incidence bits vertex 
deering proposed coordinate normal quantization entropy encoding vertex coordinates expressed local coordinate system normal coordinates reduce geometric photometric storage costs 
basically minimax box mesh define optimal resolution coordinate system desired number bits 
quantization results integer rounding vertex coordinates units local coordinate system lossy compression step 
deering compresses coordinates optimal variable length coding frequent values discrete vertex coordinates normal parameters 
lossy compression schemes difficult compare assume vertex normal pair encoded bits vertex geometry photometry 
deering reports bits geometry 
yields total bits vertex 
hoppe progressive meshes hoppe progressive meshes hoppe specify sequence vertex insertion operations construct final mesh 
vertex insertion specified identification incident edges previously constructed mesh displacement vector computing location new vertex location common vertex edges construction illustrated 
adjacent edges identified left 
edges duplicated produce cut 
replicated instance common vertex displaced specified displacement vector center 
creates gap implicitly defines new triangles 
times edges vertices index identifying edge takes bits 
average edges adjacent edge need extra bits identify second edge 
total connectivity storage cost vertex bits 
entropy coding reduce cost 
hoppe uses vertex index identify shared vertex require bits example combined bit index identifying incident edges resulting bits vertex incidence 
hoppe corrective vectors general shorter deering relative vectors huffman coding improve geometric photometric compression 
simplicity cost geometry photometry bits vertex 
total reaches bits vertex advantage hoppe scheme lies compression benefits suitability scaleable model transmission rough model sent sequence vertex insertion operations sent progressively refine model 
progressive model generated storing inverse order sequence simplifying edge collapses 
taubin rossignac topological surgery assumption vertex coordinates available random access decompression taubin rossignac topological surgery method taubin yields results comparable hoppe deering compression geometry photometry bits vertex improves hoppe deering approach factor coding incidence information bits vertex depending incidence graph 
yields total bits vertex 
topological surgery method compressing incidence relation described details taubin 
starts simple representation triangles described section 
method observations simply connected polygon bounds triangle strip selection starting seed edge internal triangulation strip may encoded bit triangle 
bit simply states advance left right vertex progressing edge sweeps entire strip starting jarek rossignac tutorial eurographics seed edge moving vertices time boundary strip 
note strip regular alternations left right moves need zero bits 
set non overlapping triangle strips cover surface polyhedron union boundaries identifies set cut edges 
cut edge exactly twice boundary different strips 
vertex spanning tree formed selecting minimum number edges polyhedron connect vertices create loops cuts boundary single shell genus zero manifold polyhedron simply connected topological polygon may decomposed union triangle strips 
strips adjacency may encoded binary spanning tree triangles mesh 
cutting strategies produce vertex triangle spanning trees nodes child lead efficient schemes compressing trees 
encoding general trees graphs expensive jacobson expected cost encoding bit vertex 
basically needs encode length run consecutive nodes single child structure tree requires bits node child 
handling non manifold polyhedra meshes higher genus achieved simple extensions approach 
order imposed vertices vertex spanning tree may exploited computing estimates location vertex location ancestors tree 
variable length encoding differences actual estimate location vertices results better compression geometric information coding absolute coordinates coordinates difference vector smaller average 
turan shown incidence simple mesh encoded bits vertex turan 
turan study focused problem triangulating labeled graph 
taubin rossignac order vertices permutation vertex labels capture incidence relations able improve compression factor 
jarek rossignac tutorial eurographics 
graphic acceleration techniques interactive manipulation models interactive inspection scenes effective graphics feedback requires small fraction second 
graphics performance significantly increased years benefiting faster cpus apis dedicated graphics subsystems lagging complexity cad models industrial consumer applications scientific datasets rossignac 
models typical mechanical assemblies appliances engines cars 
contain thousands curved surfaces 
accurate polyhedral approximations precise models typically constructed interface popular graphics apis involve millions polygonal faces 
complexity exceeds orders magnitude rendering performance commercially available graphics adapters 
solution come hardware development 
algorithmic solutions employed reduce amount redundant computation 
define redundant computation processing steps omitted affecting resulting images 
computation defined steps omitted affect resulting image moderate degree visual discrepancies correct image produced hinder user perception understanding scene 
elimination redundant computations remains open research issue computational cost associated identification redundant may offset benefits eliminating redundancy 
techniques reviewed 
cost factors better identify performance impact redundant steps rendering polyhedral scenes simplified model rendering cost 
scene described geometry location polygons location characteristics view associated photometric properties light sources surface colors surface properties textures 
rendering techniques compute pixel amount light reflected eye objects scene 
computation may arranged various ways cater desired degrees photo realism take advantage available graphics hardware libraries 
focus rasterization techniques visit polygon scene combine results frame buffer buffer hidden surface elimination 
choice dictated prevalence performance affordable graphics hardware accelerators success associated apis 
assume geometry scene composed triangles 
triangle counts arguments polygons simplicity polygons typically converted triangles preprocessing rendering accepted unit graphics performance 
procedures triangulating models bounded curved parametric surfaces exist 
cost rendering scene comprising triangles depends number factors window size lighting model amount memory paging involved triangles project screen 
rendering triangles involves costs 
primary ones cost fetching necessary triangles cache memory cost transforming vertices lighting associated normals cost clipping triangles computing slopes cost rendering cost performance depends particular architecture graphics subsystem 
architectures popular graphics software rendering hardware rasterization software geometric processing hardware rendering purely software rendering architecture total cost sum costs architecture hardware total cost maximum software hardware costs max hr provides boost factor graphics hardware 
hardware software may bottlenecks max sum combining individual costs 
similarly hardware rendering subsystem pipelined cost maximum costs stage max kx kc hr provides boost factor hardware supported transformation lighting clipping 
note simplified formula take account statistics effects data buffers load balancing parallel architectures 
jarek rossignac tutorial eurographics acceleration techniques performance enhancing techniques reviewed section help reduce different aspects rendering cost 
techniques usually sufficient address graphics performance problem systems exploit combinations techniques simultaneously 
meshing storing transformed vertices polyhedral scene number triangles roughly twice number vertices single manifold shell handles 
independently processing vertices triangle may unnecessarily increase factor average vertex processed times times triangle twice triangles vertices 
reduce computational redundancy graphics adapters associated apis support triangle meshes vertex conjunction processed vertices define triangle 
long meshes majority vertices associated normals processed twice reducing geometric cost transforming lighting vertices 
note half cost redundant 
furthermore constructing long meshes algorithmically expensive 
graphics architectures geometric transformation lighting performed software vertices transformed resulting coordinates stored clipping rasterization needed triangles 
similarly normals may transformed associated colors computed stored depending lighting model colors may defined normals combinations normals vertices 
compatibility reasons hardware graphics adapters possibility systematically exploited popular apis 
progress attempting generalize notion triangle strip cover triangular meshes arbitrary topology minimal vertex duplication may context geometric compression taubin deering hoppe 
smart caching pre fetching arranging data contiguous memory locations accessed graphics subsystem secondary processors pre fetching data may eliminate delays caused page faults reduce particularly effective size model culled exceeds available memory funkhouser 
frustum culling graphics performance may general significantly improved avoiding process geometry objects project screen 
objects may lie viewpoint outside viewing frustum 
simple bounds min max boxes tight spheres objects may easily pre computed updated model editing animation efficient culling 
scenes involving large number objects scenes individual objects relatively large involve large numbers triangles pre computed hierarchical spatial directories see clark teller naylor quickly prune portions scene outside viewing frustum 
early culling techniques may effect entire models examined fits viewing frustum 
average may significantly affect needs fetch models bounds outside frustum course affect triangles rejected clipping anyway 
example culling may reduce factor viewpoint center scene viewing frustum spans degrees angle 
pre computed visibility culling objects individual triangles intersect frustum invisible current view hidden objects directly impact cost types architectures 
visibility information may pre computed granularity space models 
example teller uses model geometry subdivide space cells associating cell list cells visible point cells may correspond natural semantic partition scene floors rooms corridors general partitions induced planes contain faces model 
preprocessing slow requires storing vast amounts visibility information number cells number jarek rossignac tutorial eurographics objects scene small 
improve performance portals holes doors windows boundary cells may approximated enclosing axis aligned box image space provides necessary condition visibility reduces visibility tests clipping intersection rectangles luebke 
different approach greene hierarchical quadtree representation buffer generated displaying front objects quickly cull hidden objects 
front objects candidates computed previous frame 
culling compares hierarchical bound system scene buffer quadtree 
techniques effective appropriate conditions little help scenes factories exterior views objects completely hidden 
back face culling redundant display faces visible 
face may invisible lies outside viewing frustum efficient tests discussed hidden faces precomputing visibility expensive discussed previous paragraph 
large fraction hidden faces may detected directly visibility tests displaying models solid assuming viewpoint lies outside solids 
half faces fact bit perspective viewing oriented incident cells direction viewpoint 
faces called back facing simply back faces 
normals faces consistently chosen point exterior solids testing face back facing amounts computing sign cross product normal vector face viewer 
note graphics libraries hardware accelerators test assumption vertices loops bound face ordered anti clockwise outward normal face 
graphics sub system quickly reject back faces desired expensive send transform vertices normals 
beneficial face organization allows rapid rejection sets back faces having process 
clustering faces normal may care taken account perspective deformations rejecting cluster 
example cluster faces may represented average normal bound maximum deviation angle average normal normals faces cluster bounding sphere faces 
cluster visible vectors point bounding sphere viewpoint form angle average normal larger 
furthermore breaking faces orientation clusters may incompatible construction long triangle strips 
images textures distant small group objects may replaced sprite textured polygons perlin kajiya showing approximate image object current viewpoint 
hierarchical clustering approach groups objects displayed images proposed 
previously rendered images associated buffer information provide approximation model seen specific location 
may warped reused produce views nearby locations inexpensive graphics system chen 
new view may reveal details hidden previous view powerful graphic server may identify discrepancies send missing information low client mann 
levels detail simplified models lower triangle count original models may certain cases reduce paging general reduce significantly funkhouser 
lower levels detail usually appropriate rendering distant features appear small screen camera motions scene animations crow 
navigation pauses system start computing best quality image interrupted user automatically display bergman 
review early techniques may blake heckbert 
results reviewed heckbert 
section presents simplification techniques detail 
jarek rossignac tutorial eurographics 
simplification algorithms focus section model simplification preprocessing step generates series models called impostors trade resemblance original model fidelity 
simplification simplest form generates decreasing levels detail lod involve decreasing amounts faces vertices require memory geometry processing rendering time 
lower level detail displaying small distant background objects improves graphic performance significant loss perceptual information enables real time inspection highly complex scenes 
original models rendering objects close viewpoint navigation pauses full precision static images 
simplification automatic process takes polyhedral surface model produces model resembles significantly vertices faces 
discussed geometric visual measures discrepancy section 
section general principles computing evaluating simplifications 
briefly review simplification techniques curved surface tessellation space surface sampling bounding hierarchies 
investigate details variants vertex clustering face merging techniques include edge collapsing triangle vertex decimation 
illustrate techniques approaches taylor aggregate nearly linear facets connected regions simplify boundaries triangulate regions ronfard rossignac expand hoppe maintaining efficient point plane distance criteria estimating errors associated candidate edge preserves volume model uses spheres error bounds rossignac borrel vertex quantization integer rounding vertex coordinates efficiently compute clusters 
techniques produce discrete simplifications models uniformly simplified different resolutions 
scenes small objects uniformly distributed space 
large objects subdivided may require adaptive simplification model resolution approximation automatically adapted location view point decreases distance viewer 
mesh reuse original mesh may simplified collapsing edges clustering vertices removing degenerate triangles collapsed transformations 
approaches need fit new mesh original geometry new mesh alteration original 
alternatively may decide generate new mesh fewer triangles fit original geometry 
compromises approaches proposed subsets original mesh removed new triangulations fit holes 
incremental approaches simplify original mesh step time 
advantage lies fact soon desired triangle count reduction achieved limit error achieved desired level resolution 
drawback lies fact needs maintain consistent topological structure process 
topological changes simplification detected prevented fully supported 
alternative simplify geometry merging vertices remove degenerate triangles 
approach efficient immune topological inconsistencies original model 
static versus adaptive resolution models objective automatic simplification algorithms produce simplified model original mesh resembles directions number triangles significantly lower broader general objective produce datastructure suited extracting realtime multiresolution model display features closer viewer details distant features 
relatively small relatively simple object larger complex scene viewing conditions features similar distances viewer require comparable jarek rossignac tutorial eurographics levels resolutions 
consequently may necessary compute adaptive multiresolution model constant resolution models may precomputed dictated viewing conditions performance constraints imposed user application 
appears small screen model lower resolution having fewer triangles increase performance 
view point approaches appear larger screen higher resolution model may 
avoid disconcerting distracting effect popping details switches resolution smooth transition may interpolate levels gradually revealing hiding details 
transition phase higher resolution model desired accuracy may achieved lower resolution model 
furthermore interpolation computed frame 
effect additional costs may reduced reducing transition period small interval cross resolution value 
large complex model relatively scene uniformly lower resolution model possible sufficiently far away viewer 
viewer close part full resolution model ensure details close viewer displayed properly 
consequently features far viewer displayed unnecessary resolution yielding performance penalty 
focus research simplification produce adaptive models provide higher resolution needed smoothly adapt resolution viewpoint moved 
note simple way achieve adaptive resolution split smaller components uniform resolution simplifications computed decide particular resolution component 
distance viewpoint 
assembly smaller numerous uniformly distributed solids may natural components need perform geometric computations split components 
may split avoid increasing complexity description ensure choice different resolutions neighboring components generate visible cracks junctions surfaces 
alternative compute adaptive model entire set proposed approaches include hoppe progressive meshes hoppe luebke octree extension rossignac borrel vertex clustering technique luebke lindstrom adaptive terrain models lindstrom 
incremental simplification steps atomic simplification steps simplifies feature model 
feature may entire solid set connected triangles 
transformations merging disconnected vertex swapping edges performing topological changes discussed separately enable simplification simplification steps 
review atomic simplification steps discuss relations steps 
edge collapse edge may contracted vertices coincident 
edge collapse operation eliminates triangles incident edge 
manifold shells boundary triangles see 
left right original triangle mesh selected edge showing direction collapse triangles eliminated collapse resulting simpler mesh 
sequences edge collapses simplify manifold mesh produce meshes invalid embedding simplified mesh intersects longer boundary regularized manifold set different topologies 
schemes edge collapsing maintain topological representation models allow collapses edges preserve desired validity conditions 
efficient techniques proposed ronfard hoppe keeping track edge collapse result lowest jarek rossignac tutorial eurographics total error simplified model original 
techniques maintain priority queue incidence graph simplification process 
accuracy resulting model estimated error cumulated sequence edge collapses 
incremental process permits achieve desired accuracy desired triangle count suited optimization selection sequence edge collapsing operations results lowest error 
edge collapsing techniques complex implement slow require maintaining complete incidence graph 
impose strong topological constraints input polyhedra 
vertex triangle flat region decimation decimation nearly flat vertex schroeder equivalent edge collapsing operation possibly combined edge flips lawson common edge adjacent triangles forming diagonal points replaced diagonal 
operations corresponds addition subtraction tetrahedron 
result sequence results hierarchical clustering vertices 
approach generalized nearly flat sets connected triangles called constructed incrementally merging triangles 
re triangulating amounts clustering internal vertices single star vertex apex new triangulation region 
decimating highlighted vertex far left affect faces marked center left 
affected region far right 
transformation corresponds edge collapse indicated arrow center right 
edge collapsing fact restricted form vertex clustering edge collapse operation merges clusters linked edge polyhedron 
techniques collapse edges techniques cluster disconnected vertices may combined popovic 
criteria error estimates simplification step techniques applied estimate error resulting simplification step 
hausdorff discussed difficulties computing tight bound hausdorff distance polyhedra possible divergence shapes separated small hausdorff distance 
difficulties precise distance practice 
local curvature local curvatures vertex edge may estimated account neighboring vertices polyhedral surface 
schemes vertices triangles local curvature low 
conservative approach works tries reduce complexity smooth surfaces represented far triangles 
curvature techniques capable simplifying shapes lots small features perceptible far sharp angles 
example consider sphere tessellated triangles schemes produce suitable simplifications 
original sphere perturbed displacing vertex randomly small fraction sphere radius decimation schemes local curvature simplify model reduce curvature error bound result poor approximation shape sphere 
jarek rossignac tutorial eurographics tolerance zone expanded version boundary polyhedron defines tolerance region exploited drive simplification process 
principle allow simplification steps apply continuous deformation maintaining times boundary evolving model inside tolerance zone 
sequence transformation preserve inclusion may simplification steps possible 
get model augment tolerance zone resume process 
general maintaining boundary tolerance region guarantee bounded hausdorff distance 
fact construct cases distance arbitrarily large illustrated 
dark shaded polygon left tolerance region shaded reflect shape polygon 
smooth transformation may simplify polygon right maintaining inside tolerance zone 
hausdorff distance original simplified model tolerance 
distance planes placement single point surface small vector may measured projection normal surface lateral displacements slide surface tangentially change shape 
error may estimated measuring surface displacement normal surface 
surface single defined normal sharp vertices 
may normal face incident vertex 
sharp vertices require additional normal directions measure displacement away vertex indicated 
displacement vertex left measured distances lines support abutting edges 
vertex right requires additional direction control far vertex moved direction close lines 
displacements indicate distances planes supporting triangles incident vertex 
vertex move prescribed distance normals points triangles incident vertex move 
consequently maximum excursion vertex normals provides better bound hausdorff distance measures 
note bound needs adjusted normals incident planes additional normals sampling jarek rossignac tutorial eurographics directions vertex displacement recorded 
estimator introduced ronfard rossignac ronfard 
vertex moved merged vertex need combine normals 
rossignac ronfard keep list supporting planes 
garland proposes replace list planes matrix suffices evaluate mean square distance garland unlimited set planes independently number 
square measure appropriate applications provide upper bound solution elegant effective 
optimal vertex placement sequence edge collapses equivalent operations reduces complexity model 
resulting geometry may adjusted minimize geometric error resulting simplification steps 
minimize distance may difficult find best placement vertices hausdorff distance minimized 
sampling original surface drive vertex placement optimization hoppe 
process slow may difficult guarantee optimality 
minimize distance plane list planes available simplification approach proposed rossignac ronfard may drive optimization vertex placement 
square distance set planes may solved linear optimization problem 
minimizing maximum distance requires 
minimize volume change applications may important maintain constant volume simplification 
vertex resulting edge collapse may positioned maintain total volume enclosed solid 
topological changes authors initially simplification techniques preserved topology agree today simplification complex parts accompanied topological changes 
changes may decomposed primitive operations discussed 
merging components disconnected components small spheres may need merged single simplified shape viewed far 
distinct features single solid hair brush merged may adjacent incident graph solid 
transformations best modeled merging vertices 
removing handles wire fence may viewed single solid large number handles 
advanced levels simplification achieved handles eliminated 
edge collapsing operations may reduce handle single edge 
new simplification operation needed remove edge free vertices slide surfaces bridged edge 
removing bridges dual hole handle bridge handle 
hole large handle thin simplification steps typically reduce handle single poly line eliminated prefer keep indicate presence material 
jarek rossignac tutorial eurographics 
examples simplification approaches illustrate simplification techniques discussed simplification approaches 
de rose surface fitting surface fitting techniques regularly spaced scanner data points schmitt may producing levels detail polyhedral approximations 
techniques extended unorganized data points hoppe derose new sparse points automatically distributed existing triangulated surface evenly curvature turk 
techniques suffer expensive preprocessing yield highly optimized results 
varshney envelopes techniques constructing approximating inner outer bounds offset surfaces polyhedra extended create simplified models separate inner outer offsets varshney cohen mitchell 
creation valid intersection free offset surfaces poses challenges techniques extended octree representations interior boundary polyhedron provide inner outer bounds 
rossignac borrel vertex quantization vertex clustering simplest implement efficient approach groups vertices clusters coordinate quantization round computes representative vertex cluster removes degenerate triangles vertices cluster rossignac 
vertices coordinates round value merged 
accuracy simplification controlled quantization parameters see attached 
vertices original triangular mesh far left quantized amounts associating vertex single cell regular subdivision box encloses object 
cells contain vertices marked circle center left 
vertices lie cell form cluster 
representative vertex chosen cluster 
indicated filled dot 
vertices cluster collapsed placed representative vertex cluster far right 
triangles having vertex cluster collapse simplification process shaded triangles center right 
removed accelerate rendering approximated versions object neighboring triangles may expand 
resulting model far right fewer vertices triangles different topology 
notice thin area collapsed single line gap bridged different line segment 
geometric simplification introduced rossignac aimed complex fairly irregular cad models mechanical parts 
operates boundary representations arbitrary polyhedron generates series simplified models decreasing number faces vertices 
resulting models necessarily form valid boundaries regions example elongated solid may approximated curve segment 
error introduced simplification bounded hausdorff distance sense accuracy factor resulting shapes exhibit remarkable visual fidelity considering ratios simplicity approach performance robustness implementation 
jarek rossignac tutorial eurographics original model object represented vertex table containing vertex coordinates face table containing vertex table sorted organized edge loops bounding face 
simplification involves processing steps 
grading vertices assigning weights visual importance 
triangulation faces 
clustering vertices 
synthesis representative vertex cluster 
elimination degenerate triangles redundant edges vertices 
adjustment normals 
construction new triangle strips faster graphics performance grading weight computed vertex 
weight defines subjective perceptual importance vertex 
favor vertices higher probability lying object silhouettes arbitrary viewing direction vertices bound large faces affected removal small details 
factor may efficiently estimated inverse maximum angle pairs incident edges candidate vertex 
second factor may estimated face area 
note cases inexpensive estimations dependent particular tessellation 
example subdividing faces incident vertex alter weight actual shape remains constant 
similarly replacing sharp vertex small rounded sphere reduce weight corresponding vertices global shape changed 
better approach consider local morphology model estimate curvature near vertex estimate area flat faces incident vertex see gross progress direction 
triangulation face decomposed triangles supported original vertices 
cad models typically contain faces bounded large number edges efficient simple triangulation technique ronfard 
resulting table triangles contains vertex indices triangle 
note attempting simplify non triangulated faces probably result non flat polygons 
hand may beneficial remove small internal edge loops large faces prior triangulation 
approach significantly reduce triangle count mechanical cad models holes responsible major part model complexity 
simplifying triangulated models removing holes create cracks surface solid separate connected components removing holes prior simplification may result separation connected components creation visible cracks 
clustering vertices grouped clusters geometric proximity 
vertex associate corresponding cluster id variety clustering techniques envisioned opted simple clustering process truncation quantization vertex coordinates 
box bound containing object uniformly subdivided cells 
truncation coordinates vertices falling cell equal coordinates 
cell cluster uniquely identified coordinates 
clustering procedure takes parameters box clustering occur maximum number cells dimension 
solid bounding box common box entire scene may 
number cells dimension computed achieve desired level simplification 
particular choice may take account geometric complexity object size relative size importance scene desired reduction triangle count 
result computation table parallel vertex table associates vertices cluster indices computed concatenating cluster integer coordinates 
approach permit select precise triangle reduction ratio 
non linear estimator adaptive approach achieve desired complexity reduction ratios 
instance size complexity particular solid relative entire scene estimate cell size yield desired number triangles run simplification result far estimate different level detail adjust cell size appropriately simplification level 
jarek rossignac tutorial eurographics synthesis vertex cluster association compute vertex representative cluster 
choice vertex closest weighted average vertices cluster results grading weights 
ambitious choices permits compute cluster representative vertices reading input data twice leads important performance improvements input vertex table large fit memory 
vertex cluster correspondence yields correspondence original vertices representative vertices simplified object 
triangle original object original vertices turn representative vertices 
note representative vertices subset original vertices simple variation approach support optimization step compute new locations representative vertices 
representative vertices define geometry triangle simplified object 
explicit association original vertices simplified ones permits smoothly interpolate original model simplified 
levels detail may computed sequence starting original generating simplification starting simplified model generating simplified model 
process produce hierarchy vertex clusters may smoothly interpolate transitions level avoid distracting popping effect 
experimented smooth transitions concluded visually pleasant benefit justify additional interpolation book keeping costs 
transition phases faces detailed simplification lower level detail may suffice meet desired accuracy 
example consider simplification contains triangles corresponds error simplification contains triangles corresponds error 
viewing conditions impose error cap simplification display triangles 
chose smooth interpolation consecutive levels transition zone errors compute new position vertices linear combination vertices display triangles 
consequently smooth interpolation result significant runtime processing costs order magnitude performance drop solid 
assuming uniform distribution penalty averaged various instances instances penalized time 
total performance degraded factor 
note order prevent accumulation errors level detail computed simplifying level details cells simplification processes aligned finer cells proper subdivisions coarser cells 
elimination triangles may collapsed result representative vertices original ones 
triangle representative vertices equal triangle degenerates collapses point 
exactly representative vertices equal triangle degenerates edge 
edges points bound triangle simplified object eliminated 
added geometry associated simplified model 
duplicated triangles edges vertices eliminated process 
efficient techniques may invoked best compromise space performance 
number vertices simplified model small simple hashing scheme rossignac yield linear performance 
number vertices simplified model large duplicated geometries may eliminated cost sorting various elements 
approach rossignac re engineered ibm research josh included ibm interaction accelerator system dix 
implementation uses simple data structures sorting achieve space log time complexities solid containing vertices 
adjustment normals step computes new normals triangles coordinates 
uses heuristic establish edges smooth 
process computes triangle meshes 
face clustering heuristics builds clusters adjacent nearly coplanar faces incident faces vertex 
average normal associated vertex faces cluster 
jarek rossignac tutorial eurographics generation new triangle strips simplification reduces model significantly practical exploit triangle strips computed original model 
re compute new triangle strips simplified model 
runtime level selection levels detail may pre computed object appropriate speed graphics 
selecting particular simplification level object important take accounts architecture rendering subsystem situations rendering process pixel bound 
example cost rendering software large window object relatively low complexity fills screen dominated consequently simplification little performance impact may reduce image fidelity benefit 
hand displaying scene small complex objects software geometric processing fast hardware significantly improved simplification effects simplified models noticeable 
isolated edges result collapsing triangles may displayed simple edges width adjusted account distance viewer 
advantages implementation process described advantages simplification methods computation simplification require construction topological adjacency graph faces edges vertices 
works simple array vertices array triangles defined terms vertex indices 
algorithm computing simplification time efficient 
simplest form needs traverse input data vertex triangle tables 
tolerance bound hausdorff distance original simplified model may arbitrarily increased reducing triangle count orders magnitude 
reduce triangle count simplification algorithm may produce non regularized models 
particularly appropriate tolerance thin plates may simplified dangling faces long objects isolated edges groups small solids isolated points 
approach restricted topological adjacency constraints may merge features geometrically close topologically adjacent 
particularly arbitrary number small neighboring isolated objects may merged simplified single point 
simplification algorithm combined data import modules ibm interaction accelerator exercised hundreds thousands models various complexity 
exhibits remarkable performance characteristics making faster re compute simplifications read equivalent ascii files disk 
algorithm pre computes levels detail run time accelerate graphics interaction models comprising millions triangles 
particular simplification level object computed match user specified performance quality target allocating geometric complexity rendering cost objects higher visual importance 
experience shows typical cad models mechanical assemblies comprise dozens thousands objects 
relative size complexity objects may vary greatly 
typical object may triangles original boundary 
simplification process described may automatically reduce triangle count average factor impacting shape hindering users ability identify important features 
simplifications lead reduction triangle count way single digit preserving shape object making recognizable scene 
simplification process improved yield better fidelity complexity ratio incorporating topological curvature considerations clustering process 
improvements lead additional computational costs complex code 
low tan improvements rossignac borrel approach improved low tan low suggest jarek rossignac tutorial eurographics better grading vertices cos maximum angle pairs incident edges floating cell clustering highest weight vertex cell attracts vertices vicinity immediately adjacent cells shading edges approximate elongated objects 
ronfard rossignac edge collapsing principle edge collapsing approaches iteratively collapse pairs vertices connected edge polyhedron single new vertex may positioned original vertices new position minimize error resulting transformation 
main differences various approaches lie techniques estimating error bound associated candidate edge optimization criteria positioning new vertex 
technique developed ronfard rossignac ibm research ronfard associates vertex compact description planes support incident triangles possibly additional planes sharp incident edges 
define evaluate approximation constraints 
user may wish example ensure vertex moves away planes prescribed distance 
maximum distance point planes error bound estimator 
advantage criteria error estimation lies fact enables vertices travel far away original location nearly planar regions 
initially error estimate computed edge collapsing operation edges sorted priority queue 
step best edge chosen minimize total error estimate 
vertex clusters merged constraints lists planes merged possibly pruned keep lists short 
collapsing operation alters immediate neighbors new error bound neighboring edges may quickly estimated priority queue updated 
method guarantees tight error bound permits move vertices away original location long move nearly parallel faces 
consequently produces lower triangle counts vertex clustering method error bound 
method requires maintaining face edge vertex incidence graph special treatment allow topological changes elimination collapsed holes see 
volume preserving simplification algorithm developed ibm research preserves volume original polyhedron simplification favors creation near equilateral triangles 
computes upper bound approximation error reports bound novel tool error volume constructed union balls centered surface radii error values vary linearly surface vertices 
guarantees error user specified tolerances vary surface opposed single tolerance 
originality method errors tolerances defined respect simplified surface opposed original surface 
approach ronfard algorithm uses greedy strategy edge collapsing operation 
edges weighted sorted priority queue 
collapsing edge lowest weight simplified vertex tests determine simplification appropriate 
simplified vertex positioned volume enclosed closed surface stay 
shows simplified vertex lie specific plane 
plane vertex position minimizes sum squared distances planes edge star corresponds minimizing sum distances lines plane 
optimum position simplified vertex verifies triangle orientations perturbed rotation exceeding user specification 
verifies minimum value triangle aspect ratios measured triangle compactness ratio area perimeter degraded excess pre specified factor 
determines effect edge collapse approximation error tests tolerable 
error volume initialized error values equal zero positive error values reported previous simplification process 
simplification progresses error values remaining vertices gradually updated 
manner similar russian hierarchy nested error volumes built new volume guaranteed enclose previous error volume 
linear optimization performed compute jarek rossignac tutorial eurographics error estimates minimize error volume 
simplification stops particular region width error volume reaches tolerance 
assuming bound maximum valence vertex respected shows computational complexity method sub quadratic number edges surface 
algorithm limitations deals problem finding sub optimal approximation error bound guarantee triangle reduction obtained guarantee reaches minimum number triangles 
current implementation computationally intensive mainly due linear programming step maintaining dynamically error volume 
pre processing step assign vertex tolerances prevent surface self intersections current program allows tolerance volumes overlap 
algorithm assumes topology input surface manifold property verified output surface 
taylor face merging domain independent algorithm originally developed alan russ taylor ibm research simplifying polyhedral meshes result building iso surfaces medical data sets 
simplification bounded approximation criterion produces simplified mesh approximates original pre specified tolerance 
vertices simplified mesh proper subset original vertices algorithm suited creating hierarchical representations polyhedra 
algorithm simplifies mesh phases creation greedy bottom face merging procedure partitions original faces patches 
border straightening borders simplified merging boundary edges triangulation triangulation points defined 
phase single may decomposed boundary triangulation point 
algorithm advantages uses bounded approximation approach guarantees simplified mesh approximates original mesh pre specified tolerance 
vertex original mesh guaranteed lie user specified distance simplified mesh 
vertices simplified mesh subset original vertices zero error distance simplified vertices original surface 
fast 
face merging procedure efficient greedy backtrack undo merging completed 
algorithm practical simplifying large meshes 
general purpose domain independent method 
disadvantages algorithm produce simplified surfaces self intersect 
current triangulation procedure uses steiner points produce skinny triangles desirable rendering 
hoppe scaleable models order support remote viewing highly complex models user able download low resolution model start detailed model description transferred 
hoppe progressive meshes hoppe discussed earlier suitable adaptive scheme 
furthermore accelerate graphics important transfer different parts scene different resolutions models close viewer receive details early distant models may need displayed full detail 
progressive mesh representation supports multi resolution adaptive simplification constraints imposed order vertices may inserted ill suited adaptive lod generation 
system may forced expand distant edges simply create vertices descendants needed expand nearby edges 
localized approach may effective 
jarek rossignac tutorial eurographics 
adaptive surface tesselation polyhedral models constructed approximate curved shapes surface tessellation 
polyhedral approximations fewer vertices faces principle produced coarser tessellation parameters 
emerging high graphic architectures support adaptive tessellation trimmed nurbs surfaces 
simplification process independent design history automatic crow 
surface tessellation techniques little help trying simplify complex shapes involve thousands surface matches best simplify surface patch triangles merge triangulations adjacent patches simpler models 
static simplifications effective large complex objects objects viewed far 
inspecting details local feature large complex object requires highest resolution entire object imposes full resolution distant parts objects displayed lower resolution 
uncommon complexity single object significantly exceeds graphics subsystem render interactive rates 
adaptive multiresolution model better suited situations xia 
fact adaptive model may computed entire scene 
hierarchical version vertex clustering approach rossignac basis new adaptive scheme luebke octree nodes samet correspond hierarchy vertex clusters 
main research challenges perfection adaptive multiresolution models lie rapid generation triangle strips view dependent simplification fast decision process updating levels resolution new frame estimation tight error bound 
may expensive convert arbitrary triangular meshes subdivision surfaces wavelet hierarchical models offer attractive elegant solution problem eck lounsbery 
lindstrom adaptive terrain models adaptive level detail terrain models studied extensively garland terrain model typically single complex surface rendered non uniform resolution partly error estimations terrain models simpler arbitrary polyhedra 
example hierarchical triangulated irregular network proposed adaptive resolution model topographic surfaces 
researchers georgia tech gvu center developed adaptive multi resolution model realtime visualization complex terrain data regular grid lindstrom 
approach uses recursive decision tree indicate edges may collapsed set preconditions edge may collapsed children collapsed 
hierarchical edge collapsing approach regular terrain model left produces similar models sequence vertical diagonal edge collapses center 
process may repeated iteratively right 
edges level need collapse 
jarek rossignac tutorial eurographics 
performance state art hardware graphics internet bandwidth growing rapidly price constraints growing needs industrial customers precise complex models call algorithmic solutions improve speed visualizing transmitting complex scenes 
reviewed techniques compressing geometry incidence photometry triangulated model 
best results yield compression ratio naive representation schemes 
techniques automatically compute simplified graphics representations object 
representations may selectively lieu original model accelerate display process preserving perceptual information content scene 
simplest efficient methods collapses clusters vertices removes degenerate triangles 
challenge combine adaptive multi resolution models compression schemes provide fully scaleable models 
jarek rossignac tutorial eurographics 
bibliography agrawal agrawal requicha paradigm robust design algorithms geometric modeling computer graphics forum vol 
pp 
september 
proc 
eurographics 
elementary concepts topology dover publications new york ny 
brooks image realism interactive update rates complex virtual building environments acm proc 
symposium interactive graphics 
schmitt surface reconstruction unstructured data computer graphics forum march 
brunet joan sole automatic generation multiresolution boundary representations computer graphics forum proceedings eurographics 
banerjee banerjee rossignac topologically exact evaluation polyhedra defined csg loose primitives appear computers graphics forum vol 
pp 

winged edge polyhedron representation aim stanford university report stan cs 
managing levels detail textured polygons portugal pp 
september 
bergman bergman fuchs image rendering adaptive refinement computer graphics proc 
siggraph aug 
blake blake metric computing adaptive detail animated scenes object oriented programming proc 
eurographics amsterdam august 
borrel borrel cheng kirchner menon rossignac schneider wolfe ibm interaction accelerator dix rc ibm research 
brown brown padl technical summary ieee computer graphics applications march 
haralick haralick shapiro decomposition polygonal shapes clustering ieee comput 
soc 
conf 
pattern recognition image process pp 

cignoni cignoni scopigno representation visualization terrain surfaces variable resolution scientific visualization world scientific 
miles cnuce cnr cg html 
chen chen williams view interpolation image synthesis proc 
acm siggraph 
pp 

clark clark hierarchical geometric models visible surface algorithms communications acm october 
cohen cohen varshney manocha turk weber agrawal brooks wright simplification envelopes proc acm siggraph pp 
august 
crow crow flexible image generation environment computer graphics july 
deering deering geometry compression computer graphics proceedings siggraph 
de hierarchical triangle model terrain description theories methods spatio temporal reasoning geographic space ed 
frank springer verlag berlin pp 

zyda simplification objects rendered polygonal approximations computers graphics 
derose derose hoppe mcdonald stuetzle fitting surfaces scattered data warren editor spie proc 
curves surfaces computer vision graphics iii november 
eck eck derose duchamp hoppe lounsbery stuetzle multiresolution analysis arbitrary meshes proc 
acm siggraph pp 
aug 
jarek rossignac tutorial eurographics polygonal simplification overview unc tech report tr www cs unc edu papers html evans evans skiena varshney optimizing triangle strips fast rendering proceedings ieee pp 

farin farin curves surfaces computer aided geometric design second edition computer science scientific computing series academic press 
funkhouser funkhouser sequin adaptive display algorithm interactive frame rates visualization complex virtual environments computer graphics proc 
siggraph august 
funkhouser funkhouser database display algorithms interactive visualization architectural models phd thesis cs division uc berkeley 
garland garland heckbert fast polygonal approximation terrains height fields research report cs dept carnegie mellon cmu cs 
www cs cmu edu garland scape 
sept 
garland garland heckbert surface simplification quadric error metrics proc 
acm siggraph 
appear 

greene greene kass miller hierarchical buffer visibility proceedings pp 
gross gross fast multi resolution surface meshing proc 
ieee visualization pp 

surface simplification inside tolerance volume ibm research report rc mars 
varshney wang controlled topology simplification ieee transactions visualization computer graphics 
heckbert heckbert garland multiresolution modeling fast rendering proc graphics interface pp may 
heckbert heckbert garland survey polygonal surface simplification algorithms multiresolution surface modeling course acm siggraph course notes 
hoppe hoppe derose duchamp mcdonald stuetzle surface reconstruction unorganized points computer graphics proceedings siggraph july 
hoppe hoppe derose duchamp mcdonald stuetzle mesh optimization proceedings siggraph pp august 
hoppe hoppe progressive meshes proceedings acm siggraph pp 
august 
hoppe hoppe view dependent refinement progressive meshes proceedings acm siggraph august 
jacobson jacobson succinct static data structures phd thesis carnegie mellon tech rep cmu cs january 
kajiya kajiya anisotropic reflection models computer graphics proc 
siggraph july 
cutting haddad constructing topologically connected surfaces comprehensive analysis medical structures spie image processing 
ad rh taylor polyhedral approximation bounded error ieee computer graphics applications may 
lawson lawson transforming triangulations discrete math 

lindstrom lindstrom koller ribarsky hodges faust turner real time continuous level detail rendering height fields siggraph aug 
lounsbery lounsbery multiresolution analysis surfaces arbitrary topological type phd 
dissertation dept computer science engineering washington 
low 
low 
tan model simplification vertex clustering 
jarek rossignac tutorial eurographics luebke luebke george portals mirrors simple fast evaluation potentially visible sets symposium interactive graphics acm press pp 
april 
luebke luebke hierarchical structures dynamic polygonal simplifications tr dept computer science university north carolina chapel hill 
luebke luebke view dependent simplification arbitrary polygonal environments proc 
siggraph 
appear 
shirley visual navigation large environments textured clusters symposium interactive graphics acm press pp 
april 
mann mann cohen selective pixel transmission navigation remote environments proc 
eurographics budapest hungary september 
mitchell mitchell suri separation approximation polyhedral objects computational geometry theory applications pp 
september 
davis woo opengl programming guide addison wesley 
naylor naylor interactive playing large synthetic environments symposium interactive graphics acm press pp 
april 
pennebaker pennebaker mitchell jpeg image compression standard van nostrand reinhold 
perlin perlin unified texture reflectance model 
siggraph advanced image synthesis july 
popovic popovic hoppe progressive simplicial complexes proceedings acm siggraph august 
ralston ralston reilly editors encyclopedia od computer science engineering second edition van nostrand reinhold new york pp 
davis real time rendering trimmed surfaces computer graphics 
ronfard ronfard rossignac triangulating multiply connected polygons simple efficient algorithm proc 
eurographics oslo norway computer graphics forum 
ronfard ronfard rossignac full range approximation triangulated polyhedra appear proc 
eurographics computer graphics forum 
ibm research report rc 
rossignac rossignac requicha constant radius blending solid modeling asme computers mechanical engineering cime vol 
pp 

rossignac rossignac requicha depth buffering display techniques constructive solid geometry ieee computer graphics applications september 
rossignac rossignac requicha offsetting operations solid modelling computer aided geometric design vol 
pp 

rossignac rossignac connor dimension independent model internal structures incomplete boundaries geometric modeling product engineering eds 
turner north holland pp 

rossignac rossignac issues feature editing interrogation solid models computers graphics vol 
pp 

rossignac rossignac requicha constructive non regularized geometry computer aided design vol 
pp 
jan feb 
rossignac rossignac borrel multi resolution approximations rendering complex scenes pp 
geometric modeling computer graphics springer verlag eds 
kunii genova italy june july 
rossignac rossignac novak research issues model visualization complex data sets ieee computer graphics applications march 
rossignac rossignac structured topological complexes feature api non manifold topologies proceedings acm symposium solid pp may atlanta 
rossignac rossignac revolution cad access international conference shape modeling applications aizu japan ieee computer society press pp 
march 
jarek rossignac tutorial eurographics samet samet applications spatial data structures reading ma addison wesley 
pavlidis hierarchical triangulation cartographic coherence cvgip graphical models image processing 
schmitt schmitt barsky du adaptive subdivision method surface fitting sampled data computer graphics 
schroeder schroeder lorensen decimation triangle meshes computer graphics july 
taubin taubin rossignac geometric compression topological surgery ibm research report rc 
january 
www watson ibm com ps ps gz 
teller teller sequin visibility preprocessing interactive walkthroughs computer graphics july 
teller teller visibility computations densely occluded polyhedral environments phd thesis ucb csd cs division uc berkeley october 
turk turk re tiling polygonal surfaces computer graphics july 
turan turan succinct representations graphs discrete applied math 
renderman companion 
addison wesley reading ma 
varshney varshney hierarchical geometric approximations phd thesis dept computer science university north carolina chapel hill 
weiler weiler non manifold geometric boundary modeling acm siggraph tutorial advanced solid modeling anaheim california july 
xia xia varshney dynamic view dependent simplification polygonal models proc 
vis pp 

dix ibm interaction accelerator product description www research ibm com dix 

jarek rossignac tutorial eurographics 
