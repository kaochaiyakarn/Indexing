web service discovery mechanisms looking needle haystack 
john garofalakis yannis evangelos department computer engineering informatics school engineering university patras rio campus patras greece gr research academic computer technology institute internet multimedia technologies research unit riga str 
patras greece 
software development web services significant web engineering paradigm years 
widely acknowledged importance web services concept lies fact provide platform independent answer software component development question 
equally important mechanisms allow web service discovery especially turn arduous task 
reviews latest methods architectures models concerns arisen web service discovery area 
web services abbr 
ws emerged dominating set recommendations standards oasis 
marked current web engineering methodologies ubiquitously supported vendors users 
short interoperable software components application integration component application development 
demand ws consumption rising series questions arise concerning methods procedures discover suitable 
fact hiding discovery web service 
aims examine analyze different proposals area 
initially definition outline attempted discovery mechanisms stand 
description discovery mechanisms service providers appears match making process 
process finding appropriate service provider service requester middle agent 
includes general steps service providers advertise capabilities middle agents middle agents store information service requester asks middle agent knows service providers best matching requested capabilities middle agent order reply corresponding author 
tel 
authors appear alphabetical order 
tries match request stored advertisements returns subset stored service providers advertisements 
date approach defines ws discovery mechanism broader sense act locating machine processable description ws may previously unknown meets certain functional criteria service responsible process performing discovery logical role performed requester agent provider agent agent 
motivation obstacles 
main wss comprised invocation services distance sending receiving messages 
situation efficient reasons needs suggested complicated applications hand require access complicated wss hand need able choose abundance provided web services functionality 
wss repositories tagged wealth information methods narrow discovery matching particular technical fingerprint quite complicated 
web service discovery mechanisms allow access service repositories warehouse information businesses services details 
sense mechanisms capable retrieve wide spectrum information concerning service providers advertised services 
need dynamic discovery structures todate providing efficient available web service choices 
discovery mechanism offer number capabilities recognizable development execution time 
development may search web service repository information available services 
execution client applications may repository discover instances web service match interface 
main obstacle affecting web service discovery mechanisms heterogeneity services 
high level approach considered emerging web service architecture 
examined solutions try overcome different aspects heterogeneity order match best web service available 
identification different kinds heterogeneity gives impression considered order avoid mitigate technological heterogeneities different platforms different data formats 
ontological heterogeneity domain specific terms concepts services differ especially developed different vendors 
pragmatic heterogeneity different development domain specific processes different conceptions regarding support domain specific tasks 
having mind tries critically existing solutions web service discovery set goals 
section main players discovery game outlined 
architectural aspects examined section 
data models facilitating discovery discussed section 
quality web service provisioning appears section steps section 
roles discovery game description players ws discovery mechanisms include series registries indexes catalogues agentbased peer peer solutions 
dominating universal description discovery integration uddi standard currently version 
considered relatively mature little changed depth edition standard 
different main players subsections order differentiation available solutions 
catalogues web service catalogues dominating technological basis ws discovery mechanisms 
specialized repositories implement specification framework 
particular prior uddi standard organizations lacked common approach publish information products web services customers partners 
uddi established uniform method included details integration existing systems processes business partners 
uddi allows enterprises discover share information regard web services electronic non electronic services registered registry 
uddi registry service ws manages information service providers service implementations service metadata 
order find web service uddi information regarding required service needed 
requirements include key words part service name patience order select suitable service results registry 
available search tools simple take consideration cross correlations web services qualitative characteristics web service forcing user repeat search new key words 
uddi specifications include soap apis allow querying publishing information xml representation registry data model soap message formats wsdl interface definitions soap apis definitions various technical models facilitate category systems identification categorization uddi registrations table 
uddi registries instances type description public querying matching information public web service consumers 
sense public uddi appears ws 
publishing information registry supported secure channels https spoil public character 
data communication registries supported 
protected notion trust collaborators characterizes kind registries 
registries implemented closed group environment monitored access third parties 
administrative features may delegated trusted parties 
data communication registries allowed explicitly specified 
private isolated registries fully secured 
usually domain specific registries internal network 
data communication registries allowed 
realization uddi registry different user purposes table 
specifications commonly recognized specifically mentioned types information supported catalogue 
types included registration white yellow green pages 
white pages include basic contact information identifiers organization name address contact information unique ids 
yellow pages describe web service different categorizations taxonomies 
way possible discover web service category 
green pages include technological information describes behaviors support functions web service 
proceeding solution logic ws discovery simplified implementation index included catalogue type 
short list web services 
compilations authoritative validated 
usually harvested collections published information service providers usually web spiders 
solutions peer peer platforms provide arena web service discovery mechanisms implementations 
overlay network provides infrastructure routing data location decentralized self organized environment peer acts node providing routing data location service server providing service access 
considered complete distributed computing model 
proposed systems include pastry chord 
systems arrange network peers ring 
nodes assigned ids drawn global address space 
peers assigned range keys global address space responsible 
peer stores auxiliary information order appropriately route key lookups 
usually key lookup initiated peer 
case peer consults look table order successfully route query peer stores queried key 
case chord routing aid look table simulates binary search address space peers request peer network routed log time 
chord mainly adopted overlay network distributed web service architectures 
hosts network publish service descriptions overlay users access date web services 
architectural aspects briefly discussed section interested reader may want continue section details data models 
architecture called web service discovery 
authors chord protocol overlay consisting service peers sp 
sp mapped logical machines different machines corresponding hardware 
logical machine maintains necessary interfaces map search wss network 
service descriptions queries hashed routed chord network 
speed system ws storage retrieval system uses ontologies infrastructure 
nodes subsystem assigned registries turn partitioned specific domain 
ontology assigned domain 
system jxta implementation 
architecture role assignment peers example nodes undertaken role controlling updates propagating system may suffer single point failure 
closing section catalogues solutions major players web service discovery 
realization mechanisms includes different flavors follow sections 
architecture aspects approaches types ws discovery approaches different architectural perception 
sections distinguish ws mechanisms level automation provide topological issues terms network involvement compliance standards recommendations platforms available 
manual procedures vs intelligent automation early approach type categorization appears 
web service discovery carried manually implementers built time automatically self assembling applications run time phase process consisting web service search web service assessment selection web services configuration process 
manual discovery requester human uses discovery service typically design time locate select service description meets desired functional criteria 
intelligent automated discovery requester agent performs evaluates task design time run time 
uddi processes mechanisms cover solely operational aspects uddi cloud data management replication aspects 
designed suitable dealing explicitly published changes registry data typically done operators publishers 
processes regarded approach automatically handle changes registry represent solution problem dynamic service invocation fault tolerance 
careful approach proposed postpone decision service bind execution time querying uddi access points services known implement wsdl 
centralized vs decentralized solutions centralized services 
registry authoritative centrally controlled store information 
recommended representative category uddi registry 
lightweight version registry centralized service indexes 
index compilation guide information exists 
centrally control information 
key difference approaches just difference registry index 
uddi means implement individual index just spider web put results uddi registry 
key difference control controls service descriptions get discovered 
registry model owner registry controls 
index model create index market forces determine indexes popular 
effectively market controls service descriptions get discovered 
decentralized solutions 
primitive known widespread network decentralization approach 
publicly available uddi nodes connected form service appearing virtually single component composed arbitrary number operator nodes 
called uddi cloud federation 
operator node responsible data published node uddi terms part data 
data consistency issues resolved invocation data replication procedures inherent uddi 
re querying registry faces invocation failures caused static service caching elaborated decentralized solutions proposed 
systems build peer peer technologies ontologies publish search web services descriptions 
peep peer solution proposed 
peer peer indexing system associated storage supports large scale decentralized real time search capabilities 
agent solutions include 
approach aims describe environment called daml agents service discovery ws requesters providers discover intermediary action matchmaking service 
distant ancestors distributed lookup registries whois look protocols 
protocols provide online look individuals network organizations key host machines key attribute hierarchical distributed architecture similar vein different context contemporary decentralized lookup protocols 
complying recommendations vs overriding uddi standard 
order enrich uddi specification information required procurement ws added administrative information sections white yellow pages 
performance requisite data included quality service expected failures maximum response time maximum data throughput crucial assess applicability 
order discovery able query security web service security details included see section 
aspect discovery applying improvements green pages 
behavior web services strictly speaking particular methods documented specifying pre post conditions methods published interfaces 
designing contract supported 
pre condition expresses constraints invoked method returns correct results 
post condition describes state resulting method execution guarantees satisfy certain conditions 
constraints regarding ordered invocation web service methods occur web services 
called coordination constraints help configuring web service basis application processes 
approaches 
providing basic support remote service invocation uddi support dynamic service invocation network distributed services 
active uddi basic approach extension existing uddi infrastructure requiring changes data structures apis totally new web service plays role man middle 
solution provides proxy approach order dynamically provide registry updates 
different web service discovery 
order build open large scale inter operable multi agent system context grid computing attempt integrate agent technologies web services 
grid problem defined flexible secure coordinated resource sharing dynamic collections individuals institutions resources 
extension uddi registry additional information meta data agents ontology pattern matching order accommodate kind searching required locate agent service performative supports 
proposed extension uddi contains wsdl descriptions agents registered 
way dynamic discovery invocation services software common terminology shared meaning enabled 
fig 
presents mentioned approaches architecture 
fig 

categorization architectural approach industrial platforms surge ws discovery major industrial implementation platforms included search facilities 
windows uddi server os ee vendors build uddi instances application servers see 
java enterprise edition ee 
sun microsystems positioning java api xml registries single general purpose api interoperating multiple registry types 
allows clients access web services provided web services implementer exposing web services built implementation specification 
microsoft net 
microsoft discovery web services disco form discovery disco file 
published disco file xml document links resources describing web service 
wide spread adoption uddi microsoft supported order maximize interoperability solutions set specifications interoperability 
addition providing net uddi server uddi sdk provides support visual studio net depends net framework 
products microsoft office xp offer support service discovery uddi 
java apis 
uddi specifications directly define java api accessing uddi registry 
programmer api specification defines series soap messages uddi registry accept 
java developer wishes access uddi registry number ways java soap api custom java uddi client api data models web services important aspect web services discovery concerns issue way services modeled 
term model context refers representation web services process takes place discovery 
section alternative viewpoints information retrieval approach semantics approach 
information retrieval approach simplest data model catalogue keyword 
model followed legacy uddi standard discovery mechanism supports 
nutshell textual description accompanies web service stored uddi catalogue tmodel provides service functionality 
retrieval stage comprises user search program entering query catalogue 
query consists keywords matched stored descriptions 
matched web services returned candidate answer set user browses order find really suits needs tends frequent case query 
approach followed current uddi registries resembles classic boolean information retrieval model 
despite simplicity ease implementation suffers lots returned results returned ones 
mainly architectural drawback approach fact usually centralized registry hosts majority descriptions receives millions requests bottleneck point 
decentralized proposals discussed section elegant approach tackle inadequacy keyword web service discovery proposed 
key concept approach represent service descriptions document vectors dominant approach ir field see 
description text corresponds vector vector space spanned terms service description texts 
go step representing document vectors columns term document matrix ir technique applied transforms matrix achieving representation document collection significant semantic concepts called latent semantic indexing lsi 
method observed proved able return documents modelled text collection closely related semantics expressed query regardless exact matching query terms 
applying lsi discovery web service observed description vectors resulting transformation original matrix mapped closely vector space representation query respective representations plain keyword descriptions 
web service modelled dimensional vectors thought point dimensions 
respect geometric data structure indexing multidimensional data deployed indexing querying web services 
transferring problem high dimensions schmidt transformation maps points higher dimensions numbers 
transformation called space filling curve 
space filling curves proposed see hilbert curve important property adjacent intervals mapped nearby regions dimensions 
system schmidt unique id generated web service hilbert curve mapping 
ids stored chord web service peers 
storage retrieval ws inherits load balancing capability dynamic nature chord 
main advantage model followed efficiently support partial match queries 
queries realized efficiently mainly due clustering properties hilbert curve 
querying procedure enhanced query optimization heuristics 
li combine keyword matching storage presenting system maps xml service descriptions network distributed hashing 
sense peers act service providers request generators 
xml service descriptions parsed order extract service keywords keywords hashed md hash function 
underlying network protocol chord modified system called 
chord distribution policy enforced route generated hash descriptions nodes 
web service query starting peer node decomposed keywords subsequently sought chord searching principle 
proved stable load balanced space consuming conducted experiments 
semantics approach focused performing semantic matching web services discovery 
development increasingly significant able tackle uddi catalogue inadequacies 
predominant problem restrictions posed keyword matching allow retrieval ws similar functionality wsdl descriptions describe service different words 
modeling web services ontologies semantic representation concepts relations exploited semantic matching performed 
semantic descriptions web services obtained daml owl languages 
paolucci framework allow wsdl uddi perform semantic matching 
web services modeled ontologies service profiles called daml 
typically service profile contains information actor provider functional attributes geographic location functional descriptions inputs outputs service 
maintaining ontology hierarchies possible perform semantic matching subsequently performed exploiting subsumption capabilities daml 
order combine ontologies uddi registry authors define separate layer daml matchmaker 
matchmaker extend uddi page categories treated add undertakes semantic matching mapping ontologies uddi descriptions 
semantic matching especially daml advantages 
provides matching flexibility results returned differ syntactically input query 
provides accuracy matching performed derived hierarchy concept matching degree supported 
development new language owl combine semantic annotation web services discovery invocation wsdl soap see 
approach led owl matchmaker module 
approach adding daml extensions uddi descriptions adopted 
providing separate layer perform simpler construct enabling wsdl descriptions uddi registrations contain semantic information 
information simply mapping wsdl entries daml oil ontologies 
case uddi different tmodels provided represent functionality input output matching procedure uses templates exploits semantic descriptions provide semantic matching performed 
moreau perform kind semantic matching different context 
describe agents performing grid computations wss 
transform agent ontologies xml semantic matching performed validating structurally expressed queries agent description schemas 
approach combination semantic annotation web services agent publishing discovery followed 
interesting implementation frameworks semantic matching proposed 
provides framework uses ontologies discover bind case web services best match specific operation domain desired set operations 
available data represented domain ontologies available operations operation ontologies 
generalization relationships models encoded xml formats binding relationships 
binding formed binding ontology decides fits binding relations 
proposes implementation semantic descriptions extension uddi protocol termed uddi 
uddi introduces blue pages sections contain semantic descriptions web services implemented daml 
model described provides extensions green page section uddi adding capability define constraints ws execution sequence 
uddi vision implementable system 
fig 
presents brief taxonomy discovery models 
fig 
taxonomy discovery models respect scalability matching flexibility quality web service provisioning quality ws provisioning abbr 
qows issue set aside ws area 
concrete definition globally accepted notions qows exist 
breaks new ground attempt define qows parameters methods delivery 
qows parameters ran ouzzani ouzzani bouguettaya highlight predominant parameters define quality web service 
refer important due space limitations 
computational behavior interested parameters execution attributes latency accuracy throughput security encryption authentication privacy privacy policy implemented availability probability service available 
business behavior mainly referring execution cost single execution cost 
reliability service publishing 
metadata constraints constraints followed regarding uddi wsdl parameters location specific companies necessary modifications tmodel include qows characteristics described 
qows provisioning need qows provisioning emerged complex web service applications 
typical scenario user executing complex query transparently translated set wss may executed specific order 
execution sequence referred execution plan 
single ws plan possibly provided distinct access points 
goal case select best execution plan order maximize delivered qows 
order select proper execution plan delivery quality constraints proposed assess qows parameters quantity called quality distance 
quality distance dq effectively computes distance advertised delivered quality service quality distance execution plan eqn 

pos neg pos neg sets qows parameters wishes maximize minimize respectively 
example response time execution time need minimized availability needs maximized 
pq aq represent provisioned advertised values parameter respectively 
eqn 
provides rating close execution ws advertised value 
rating influence choice optimal execution plan 
objective function eqn 
defined execution plan max qi qi max min neg qi min qi qi max min pos qi qi max qi denotes measured value parameter qi min qi maximum minimum value available choices service function tuned weighting appropriately sum term rating corresponding parameter receives eqn 

subsequently optimization techniques employed discover optimum execution plan maximize deliver qows 
note daml architecture mentioned includes qows metadata constraint category part defined ontologies 
semantic matching subsequently account order computed matching degree procedure tacitly assumed 

web service discovery mechanisms appearing strive achieve set goals enhance efficiency matching binding procedure 
discovery mechanisms enable search assessment solely web service outer view 
assessment multi criteria decision making 
furthermore focus defining qows metrics 
important refine ws discovery mechanisms order reach minimum standards performance security availability matching binding results 
support load balancing wss delivery starting moment choosing possible 
boost performance especially situations excessively increased workload met 
discovery mechanisms try reach resulting structures applicable wss web software components general 
require introducing additional specifications platform system requirements type reuse type code scope supply 
specifications added administrative information 
consequently unified specification software components eventually achieved basis component catalogues case tools 
concluding discussion approaches discussed different view points 
uddi emerging decentralized aspects solutions promising 
enhancement data models possible elaborating ir techniques ontologies especially account research semantic web particularly popular 
ws discovery mechanisms role important web searching facilitate need collaboration business processes consumers widely accepted web standards 
authors wish anonymous referees insightful comments helped improving presentation 

austin ferris garg 
eds web service architecture requirements 
working group notes www org tr wsa reqs 
baeza yates ribeiro neto modern information retrieval addison wesley 
berry dumais brien linear algebra intelligent information retrieval 
siam review 

booth haas mccabe newcomer champion ferris orchard 
eds web services architecture 
wg note 
www org tr ws arch 
daml coalition daml web service description semantic web proc 
st int semantic web conf 
iswc 

decker sycara williamson middle agents internet 
proc 
th ijcai 
nagoya japan 

foster kesselman tuecke anatomy grid 
enabling scalable virtual organizations 
international journal supercomputer applications 

gaede gunther multidimensional access methods 
acm 

gong jxta network programming environment 
ieee internet computing may june 

hu ontology bind web services data model automation systems revised papers node web database related workshops web web services database systems 

active uddi extension uddi dynamic fault tolerant service invocation revised papers node web database related workshops web web services database systems lncs 

case study applying systematic method cots selection 
proc th int 
conf 
soft 
eng 
icse 
ieee computer society press 
uddi dynamic web service discovery 
www com articles 
li zou wu ma scalable web service discovery architecture peer peer overlay network proc 
lncs 

daml enabled web services agents semantic web 
revised papers node web database related workshops web web services database systems lncs 

moreau avila miles liu agents grid comparison web services part ii service discovery 
proceedings workshop challenges open agent systems italy 

oasis uddi specifications tc committee specifications www org committees uddi spec doc htm 
ouzzani bouguettaya efficient access web services 
ieee internet computing march april ouzzani efficient delivery web services phd thesis virginia polytechnic 

specifying web services uddi improvements 
rd annual international conference object oriented internet technologies concepts applications networked world net germany 
owl specifications www daml org services owl paolucci kawamura payne sycara semantic matching web services capabilities 
proceedings st int 
semantic web conference iswc 

ran model web services discovery qos acm acm exchanges volume issue spring 


ratnasamy francis handley karp shenker scalable content addressable network 
proceedings acm sigcomm san diego september 
tw query federation uddi registries 
rowstron druschel pastry scalable decentralized object location routing largescale peer peer systems 
proc 
th ifip acm middleware germany 

rfc rfc net rfc html 
hou zhang algorithm web services matching proc 
lecture notes computer science springer verlag schlosser sintek decker nejdl scalable ontology infrastructure semantic web services 
proc 
nd int 
conf 
sweden 


schmidt peer peer approach web service discovery 
world wide web internet web information systems 

verma sheth miller adding semantics web services standards 
proceedings int 
conf 
web services 

verma zhong sheth speed semantic environment diverse web service registries webster cs uga edu speed html 

