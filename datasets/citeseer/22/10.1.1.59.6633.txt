technische hochschule rich swiss federal institute technology zurich approximation algorithms complexity results path problems trees rings tik report nr 
august institut technische informatik und computer engineering networks laboratory approximation algorithms complexity results path problems trees rings august version tik report nr 
computer engineering networks laboratory swiss federal institute technology eth zurich institut technische informatik und technische hochschule rich eth zentrum ch rich switzerland contents tree rings network obtained interconnecting rings tree structure rings share node 
connection request call tree rings endpoints case prespecified paths path connecting endpoints 
study undirected trees rings bidirected trees rings 
cases show path packing problem assigning paths calls minimize maximum load solved polynomial time path coloring problem prespecified paths approximated constant factor maximum weight edge disjoint paths problem apx hard approximated constant factor matter paths prespecified determined algorithms 
consider fault tolerance trees rings set calls established edge disjoint paths arbitrary link fails ring tree rings show third calls recovered rerouting allowed 
furthermore computing optimal number calls recovered shown polynomial undirected trees rings apx hard bidirected trees rings 
contents 
preliminaries problem definitions 
previous rings trees 
previous trees rings 
summary results 
path packing 
path coloring prespecified paths 
recovery link failures 
maximum weight edge disjoint paths 
arbitrary paths 
prespecified paths 
medp paths trees load 
hardness medp trees rings 
bidirected trees rings 
undirected trees rings 
medp bidirected trees rings 
medp undirected trees rings 
tik report nr 
approximation algorithms complexity results path problems trees rings ring graph consists single cycle length 
trees rings class graphs defined inductively follows 
single ring tree rings 

tree rings graph obtained adding node disjoint ring identifying node node tree rings 

graphs trees rings 
equivalently tree rings connected graph edges partitioned rings rings node common pairs simple paths touch precisely rings 
say path touches ring contains edge ring 
furthermore path touches node starts node ends node passes node 
paths intersect share edge 
third equivalent definition tree rings connected graph biconnected components rings 
trees rings interesting topology construction communication networks 
hand expensive build require additional links compared tree topology 
hand tree rings remains connected arbitrary link fails ring achieving better fault tolerance tree network 
trees rings natural topology optical networks fiber rings employed long time rings natural interconnect different rings tree structure 
modern communication networks establishing connection nodes requires allocating resources links path nodes 
example case atm networks bandwidth reserved path sender receiver networks wavelength division multiplexing wavelength reserved path sender receiver 
resource allocation call admission control networks lead optimization problems involving edge disjoint paths 
see background problems 
investigate complexity approximability problems networks tree rings topology 
preliminaries problem definitions problems studied undirected paths undirected graphs directed paths bidirected graphs 
bidirected graph graph obtained undirected graph replacing undirected edge directed edges opposite directions 
term link refer undirected edge undirected graph pair directed edges opposite directions bidirected graph 
undirected case connection request call endpoints call established undirected path endpoints 
bidirected case call specifies sender receiver established directed path sender receiver 
set paths graph load directed undirected edge number paths containing edge 
maximum load maximum values taken approximation algorithms complexity results path problems trees rings tik report nr 
edges graph 
maximum load denoted set paths creates maximum load clear context 
define relevant optimization problems 
path coloring pc set calls assign paths colors calls calls receive different colors paths intersect 
minimize number colors 
application minimize number wavelengths optical network 
pc prespecified paths path coloring paths specified part input 
path packing pp set calls assign paths calls maximum load minimized 
application minimize required link capacity calls request bandwidth 
maximum edge disjoint paths medp set calls select subset calls assign edge disjoint paths calls subset 
maximize cardinality subset 
application maximize number established calls 
maximum weight edge disjoint paths set calls assigned positive weights select subset calls assign edge disjoint paths calls subset 
maximize total weight subset 
medp prespecified paths medp paths specified part input 
prespecified paths paths specified part input 
optimal recovery set calls assigned edge disjoint paths graph set faulty links select subset assign edge disjoint paths calls maximize cardinality 
application maximize number calls remain active spite link failures 
optimal weighted recovery calls assigned positive weights goal maximize total weight calls maximization problems algorithm approximation algorithm runs polynomial time computes solution objective value fraction optimum 
minimization problems algorithm approximation algorithm runs polynomial time computes solution objective value times optimum 
apx class optimization problems npo problems instances solutions recognized polynomial time solutions polynomial size objective value solution computed polynomial time admit constant factor approximation algorithms 
problem proved apx hard giving reduction usually reduction ap reduction known apx hard problem 
problem apx complete apx hard contained apx 
refer background information concerning complexity classes optimization problems approximation preserving reductions discussion relationship apx hardness earlier concept max snp hardness 
tik report nr 
approximation algorithms complexity results path problems trees rings medp variants studied case network optical network wavelengths 
case medp example means goal compute subset calls assignment paths different colors calls subset calls color routed edge disjoint paths 
approximation algorithms medp variants case wavelengths obtained calling algorithm wavelength times 
resulting approximation ratio slightly worse wavelength approximation ratio wavelength 
previous rings trees problems defined previous section studied intensively rings trees course topologies 
undirected bidirected ring networks known pc np hard matter paths prespecified pp solved optimally polynomial time 
medp polynomial undirected bidirected rings 
undirected bidirected tree networks pc np hard 
set paths maximum load efficiently colored colors undirected case min colors bidirected case 
medp polynomial undirected trees arbitrary degree bidirected trees constant degree max snp hard apx hard bidirected trees arbitrary degree 
positive constant thereisa approximation algorithm medp bidirected trees arbitrary degree 
previous trees rings known algorithm pc trees uses colors obtain approximation algorithm pc trees rings undirected bidirected case sufficient remove arbitrary link ring tree rings cut link heuristic tree algorithm resulting tree maximum load obtained paths twice load paths optimal solution turn lower bound optimal number colors 
way approximation algorithm obtained undirected case approximation algorithm bidirected case 
undirected trees rings approximation algorithm special case node contained rings trees rings maximum vertex degree equal 
instance set calls containing call ordered pair nodes bidirected trees rings studied 
shown routing minimizes maximum load computed polynomial time resulting paths colored optimally colors 
summary results consider path problems defined section networks tree topology 
show pp polynomial trees rings section give practical approximation algorithms complexity results path problems trees rings tik report nr 
path coloring prespecified paths approximation algorithm constant approximation ratio section 
section show third active calls tree rings recovered arbitrary link fails ring tree rings provided rerouting allowed 
proved polynomial undirected trees rings shown apx hard bidirected trees rings tree 
section consider medp 
prove problems apx hard trees rings give constant factor approximation algorithms 
path packing path packing trees rings reduced path packing rings 
call path connecting endpoints tree rings touched node enters ring begins node leaves ring terminates uniquely determined endpoints pp tackled considering ring separately 
ring simply view call touches call compute routing minimizes maximum load known polynomial algorithms pp ring networks 
resulting routings combined obtain optimal routing tree rings 
theorem pp solved optimally polynomial time undirected bidirected trees rings 
note theorem implies decide polynomial time calls established edge disjoint paths 
decision version edge disjoint paths problem polynomial trees rings 
path coloring prespecified paths np hard rings np hard trees rings 
set paths tree rings propose greedy approximation algorithm 
generalization simple greedy algorithm uses colors pc trees 
algorithm 
initially paths uncolored 

choose arbitrary node perform depth search dfs starting dfs reaches node consider uncolored paths touch arbitrary order assign smallest available color color smallest index path intersecting assigned color 
order derive upper bound number colors consider arbitrary path time assigned color show intersect bounded number paths assigned color prior see fig 

assume dark nodes visited dfs dfs reaches time 
denote ring containing node adjacent tik report nr 
approximation algorithms complexity results path problems trees rings path coloring prespecified paths illustration argument prove theorem 
visited ring 
uncolored paths touching touch dark node 
classified basic types 
type edge arguments take path connecting nodes representative path type 
second type uses edge connecting representative path 
consider case undirected paths 
belongs type previously colored paths intersect touch touch ring containing touched edges incident belong rings touched edges labeled conflicting path edges 
maximum load colored paths intersecting ifp belongs second type number colored paths intersect denote edges colored paths edge colored paths edge colored paths edges 
uses colors undirected case 
argument allows bound number conflicting paths inthe bidirected case 
lose factor paths link adjacent nodes direction 
theorem trees rings polynomial time algorithm uses colors undirected case colors bidirected case 
note pc algorithm derived algorithm follows 
compute routing minimizes maximum load theorem algorithm assign colors resulting paths 
algorithm uses colors approximation algorithm pc obtained way 
theorem obtain pc algorithm approximation ratio undirected case bidirected case 
approximation algorithms complexity results path problems trees rings tik report nr 
recovery link failures ratios worse ratios achieved cut link heuristic see section clear upper bounds tight conceivable new algorithms perform better practice 
recovery link failures section study problems trees rings 
bidirected trees rings assume failure affects edges pair directed edges opposite directions adjacent nodes 
tree rings set faulty links 
worst case failure patterns leave remaining network connected case tree 
assume set calls active time failure calls assigned edge disjoint paths worst case call link affected link failures 
important allow rerouting changing paths assigned calls 
tree possible routing call set paths obtained routing call maximum load created paths 
edge paths contain contained link failures contained faulty link ring belongs 
case solving problem reduces solving medp problem set paths tree polynomial undirected trees shows polynomial undirected trees rings assumption tree 
bidirected trees arbitrary degree known previously medp np hard input set paths maximum load 
obtained theorem 
theorem medp bidirected trees apx hard set paths maximum load 
proof theorem appendix set paths bidirected tree maximum load construct set calls routed edge disjoint paths bidirected tree rings set faulty links conflict graph paths obtained routing calls identical conflict graph 
theorem implies apx hard bidirected trees rings tree 
approximation bidirected trees gives approximation bidirected trees rings provided tree 
furthermore extend approach arbitrary sets faulty links disconnected contain complete rings 
general consists connected components 
calls endpoints different components recovered 
consider particular connected component intuitively tree part relevant 
ring contain faulty link shrunk single node 
resulting network tree algorithm trees applied resulting tik report nr 
approximation algorithms complexity results path problems trees rings recovery link failures set edge disjoint paths gives set edge disjoint paths original routing non faulty rings 
calls touch non faulty rings recovered 
obtain theorem 
theorem undirected trees rings solved optimally polynomial time 
bidirected trees rings apx hard tree approximation arbitrary sets faulty links 
paths tree colored efficiently optimally colors undirected case bidirected case 
paths assigned color color class edge disjoint 
set edge disjoint paths 
weighted case infer set paths total weight third total weight set resp 
computed efficiently coloring best color classes 
contains rings shrink rings single nodes applying path coloring algorithm 
theorem assume set calls established edge disjoint paths undirected bidirected tree rings 
set faulty links contains link ring possible recover efficiently calls calls total weight third total weight provided rerouting allowed 
examples bad link failures 
undirected trees rings bound theorem tight exists set edge disjoint paths tree rings set link failures third paths recovered 
see left hand side fig 
example 
bidirected trees rings construct example calls recovered failure optimal rerouting right hand side fig 

know fraction calls recovered link failures tree worst case bidirected trees rings 
consider effect link failures optical network wavelength division multiplexing 
wavelengths colors available set calls established simultaneously calls assigned paths colors intersecting paths receive different colors different colors altogether 
corollary follows theorem considering calls wavelength separately 
approximation algorithms complexity results path problems trees rings tik report nr 
maximum weight edge disjoint paths corollary assume set calls established undirected bidirected tree rings wavelengths 
set faulty links contains link ring possible recover calls calls total weight third total weight changing wavelength call provided rerouting allowed 
maximum weight edge disjoint paths medp polynomial rings undirected trees show medp variants np hard undirected bidirected trees rings 
fact prove problems max snp hard apx hard implying constant approximating problems approximation ratio nphard 
theorem medp apx hard trees rings undirected case bidirected case 
proof theorem appendix problems solved optimally polynomial time trees rings degree bounded constant node bounded number different rings dynamic programming approach works bidirected trees bounded degree generalized graphs bounded treewidth bounded degree 
note trees rings treewidth 
view hardness results trees rings arbitrary degree interested obtaining efficient approximation algorithms 
arbitrary paths consider cut link heuristic medp remove arbitrary link ring algorithm medp trees 
theorem implies optimal solution resulting tree objective value third optimal solution full tree rings 
theorem cut link heuristic approximation algorithm medp trees gives approximation algorithm medp trees rings undirected case bidirected case 
noting polynomial admits approximation algorithm undirected trees approximation bidirected trees obtain corollary 
corollary approximation algorithm undirected trees rings approximation algorithm bidirected trees rings arbitrary positive constant 
tik report nr 
approximation algorithms complexity results path problems trees rings maximum weight edge disjoint paths prespecified paths consider trees rings 
set paths tree rings propose greedy algorithm 
algorithm 
maintain set selected paths 
initially 

choose arbitrary node perform dfs starting dfs retreat node neighbors visited dfs goes back parent dfs tree consider paths touch touch node dfs arbitrary order 
edge disjoint paths discard 
output intuitively algorithm processes dfs tree bottom fashion greedily selects paths touch nodes subtrees processed 
analysis approximation ratio please refer fig 

dark nodes represent nodes dfs 
dfs retreat paths considered classified types section 
selects path optimal solution bound number paths paths considered optimal solution intersected arguments section 
way obtain paths undirected case paths bidirected case 
example undirected case paths blocked path fig 
edges labeled 
path selected blocks resp 
paths selected optimal solution 
reasoning easily turned formal proof establishes theorem 
theorem approximation ratio undirected trees rings approximation ratio bidirected trees rings 
converted approximation algorithm adopting phase approach similar berman interval selection problem 
seen application local ratio technique see 
algorithm maintains stack paths 
path pushed stack assigned value may different weight 
paths popped stack selected greedy way 
algorithm 
maintain stack paths values 
initially empty stack 

phase choose arbitrary node perform dfs starting dfs retreat node consider paths touch touch node dfs arbitrary order 
compute total sum values paths intersect weight strictly larger total push stack assign value total 
approximation algorithms complexity results path problems trees rings tik report nr 

phase dfs complete pop paths stack select path intersect previously selected path 

output set selected paths 
prove upper bound approximation ratio problem 
theorem approximation algorithm undirected trees rings approximation algorithm bidirected trees rings 
proof 
denote contents stack phase denote sum values paths fix arbitrary optimal solution proof consists parts 
show total weight paths undirected bidirected trees rings 
see val denote sum values paths intersect processed phase 
ifp value contributes val 
definition algorithm val paths key observation value path counted times sum val 
seen referring fig 
considering path type 
undirected case paths processed phase intersect bidirected case paths 
undirected case resp 
bidirected case 
second solution output algorithm weight path selected phase weight solution increases sum values paths stack intersected decreases 
ausiello crescenzi kann marchetti spaccamela 
complexity approximation 
combinatorial optimization problems approximability properties 
springer berlin 
awerbuch azar fiat leonardi ros line competitive algorithms call admission optical networks 
algorithmica 
bar noy bar yehuda freund naor schieber 
unified approach approximating resource allocation scheduling 
proceedings nd annual acm symposium theory computing stoc pages 
rennes th 
routing coloring weighted trees rings 
proceedings th annual acm symposium parallel algorithms architectures spaa pages 
berman dasgupta 
multi phase algorithms throughput maximization realtime scheduling 
journal combinatorial optimization 
tik report nr 
approximation algorithms complexity results path problems trees rings deng li zhou 
approximation algorithm path coloring trees rings 
proceedings th annual international symposium algorithms computation isaac lncs pages 

scheduling connections fast networks 
phd thesis technische universit nchen 
www tik ee ethz ch dissertation ps gz 
jansen 
conversion coloring algorithms maximum weight independent set algorithms 
icalp workshops proceedings informatics pages 
carleton scientific 
jansen 
complexity path coloring call scheduling 
theoretical computer science 
jansen 
maximum edge disjoint paths problem bidirected trees 
siam disc 
math 
jansen mihail 
optimal wavelength routing directed fiber trees 
theoretical computer science 
special issue icalp 
garey johnson miller papadimitriou 
complexity coloring circular arcs chords 
siam algebraic discrete methods 
garg vazirani yannakakis 
primal dual approximation algorithms integral flow multicut trees 
algorithmica 
kann 
maximum bounded dimensional matching max snp complete 
information processing letters 
kleinberg 
approximation algorithms disjoint paths problems 
phd thesis mit 
kumar panigrahy russel sundaram 
note optical routing trees 
inf 
process 
lett 
mihail rao 
efficient access optical bandwidth 
proceedings th annual symposium foundations computer science focs pages 
papadimitriou yannakakis 
optimization complexity classes 
journal computer system sciences 
raghavan upfal 
efficient routing optical networks 
proceedings th annual acm symposium theory computing stoc pages 

wan liu 
maximal throughput wavelength routed optical networks 
multichannel optical networks theory practice volume series discrete mathematics theoretical computer science pages 
ams 
wilfong winkler 
ring routing wavelength translation 
proceedings ninth annual acm siam symposium discrete algorithms soda pages 
approximation algorithms complexity results path problems trees rings tik report nr 
medp paths trees load medp paths trees load appendix give proof theorem 
convenience repeat theorem 
theorem medp bidirected trees apx hard set paths maximum load 
order prove theorem approximation preserving reduction maximum bounded dimensional matching problem element occurs triples 
hardness result problem 
give approximation preserving reduction 
define dimensional matching problem formally 
max dm maximum bounded dimensional matching 
instance set ordered triples disjoint sets 
number occurrences element bounded constant feasible solution matching subset triples agree coordinate 
goal maximize cardinality matching 
kann proved max dm max snp hard giving reduction max sat maximum bounded satisfiability max dm 
interested case 
knowledge hardness results max dm known previously 
derive result easily applying reduction max sat max sat reduction takes instance max sat constructs instance max dm 
resulting instance elements triples 
elements appear triples elements created clause containing literals 
reduce max sat max sat clause contains literals element triples resulting instance max dm instance max dm 
furthermore known max sat apx complete 
obtain approximation preserving reduction apx complete problem max sat max dm 
max dm easily seen contained apx obtain result 
lemma max dm apx complete 
show reduce max dm medp bidirected trees 
reduction similar reduction garg vazirani yannakakis prove max integral multicommodity flow undirected trees edge capacities 
lemma polynomial time reduction max dm medp bidirected trees set paths constructed instance medp maximum load proof 
instance max dm disjoint sets set triples tik report nr 
approximation algorithms complexity results path problems trees rings medp paths trees load xi xi xi xi xi xi xi xi yj xi xi tree constructed max dm instance 
create bidirected tree depth follows 
root children xi yj zk node xi pi children xi xi pi bis number occurrences xi xi children xi xi 
see fig 
sketch construction note small subset nodes tree shown pairs directed edges depicted undirected edges sake simplicity 
create set paths number occurrences xi triples pi arbitrarily 
triple add paths triple xi yj zk contain th occurrence xi add path xi yj path zk xi anda path xi xi 
paths maximum load xi yj zk occurs triples claim contains disjoint triples contains subset edge disjoint paths disjoint triples computed efficiently subset edge disjoint paths 
assume contains disjoint triples xi yj zk xid 
triple xit contain lt th occurrence xit 
paths form set edge disjoint paths choose path xit lt path xit lt pit paths xit xit pit lt xi occur disjoint triples choose pi paths xi xi pi 
conversely assume subset containing edge disjoint paths 
note contain path entering subtree rooted xi path leaving subtree rooted xi 
possibility contain pi paths edges subtree rooted xi contain path xi li yj path zk xi li paths xi xi pi li 
case contains pi paths edges subtree rooted xi 
way contain contains exactly pi paths edges subtree rooted xi values set disjoint triples obtained values triple containing li th occurrence xi 
set triples element occurs triples matching contains triples triple conflict triples 
fact difficult show reduction proof lemma approximation preserving constant sense approximation algorithms complexity results path problems trees rings tik report nr 
zk hardness medp trees rings reduction ap reduction 
details calculation see 
max dm apx hard lemma shows medp bidirected trees apx hard maximum load paths bounded 
establishes theorem 
hardness medp trees rings appendix prove theorem 
convenience repeat theorem 
theorem medp apx hard trees rings undirected case bidirected case 
prove theorem unweighted versions problems medp 
proofs individual cases subsections 
arguments reduction max dm medp lemma appendix note tree turned tree rings adding new vertex edge tree making adjacent endpoints call resulting tree rings tor extension tree 
bidirected trees rings bidirected trees rings obviously apx hard medp apx hard bidirected trees set paths tree viewed set paths tor extension tree 
undirected trees rings claim transform instance medp bidirected trees apx hard instance undirected trees rings paths conflict structure 
start bidirected tree 
replace pair directed edges bidirected tree undirected ring wherex new nodes 
path directed edge directed edge replace edge undirected edges undirected edges 
way obtain set undirected paths undirected tree rings paths intersect corresponding paths original bidirected tree intersect 
undirected trees rings hard approximate medp bidirected trees 
shows apx hardness undirected trees rings 
medp bidirected trees rings adapt reduction proof lemma 
instance max dm obtain set calls proof lemma calls tree tree rings 
tree rings obtained form tree constructed proof lemma follows links root children replaced rings length nodes tik report nr 
approximation algorithms complexity results path problems trees rings hardness medp trees rings xi xi xi xi xi xi xi xi yj xi xi tree rings constructed max dm instance 
xi xi xi xi pi form ring edge added xi xi pi 
see fig 

add calls certain pairs adjacent nodes follows 
adjacent nodes call add calls link ring containing root links connecting xi xi 
additional calls called short calls 
indicated short lines arrows ends fig 

purpose adding short calls clear claim 
claim instance medp graph 
set edge disjoint paths subset calls instance 
transformed new solution contains directed edge graph call part instance path consisting edge 
claim easy prove solution satisfy condition add call reroute calls order bring solution closer desired form 
claim implies assume loss generality solution constructed instance medp bidirected tree rings accepts short calls routes direct edge 
situation remaining calls just tree case solution containing remaining calls converted matching cardinality original instance max dm vice versa 
account short calls resulting instance medp solution edge disjoint paths exists matching triples 
reduction approximation preserving get medp apx hard bidirected trees rings 
medp undirected trees rings order prove apx hardness medp undirected trees rings essentially reduction medp bidirected trees rings 
differences view tree rings shown fig 
undirected graph constructed calls undirected calls approximation algorithms complexity results path problems trees rings tik report nr 
zk hardness medp trees rings add short calls rings containing xi replace remaining pair short calls single undirected call resulting instance medp undirected trees rings solution edge disjoint paths exists matching triples 
easy show reduction approximation preserving 
tik report nr 
approximation algorithms complexity results path problems trees rings 
