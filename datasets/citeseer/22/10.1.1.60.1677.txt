biology inspired optimizations peer peer overlay networks aim article examine relationship largescale peer peer overlay networks certain biological systems 
particular focus organization mechanisms crucial adjust optimize behavior large scale systems face dynamic environment 
propose adopt concepts mechanisms biological systems order extend capabilities cope environmental changes highly dynamic network topology 
introduce notion organic overlay networks adopt behavioral structural characteristics biological systems 
framework poses basis understanding investigating implementing organic overlay networks 
case study analyze organic overlay network utilizes ant colony optimization improve query processing face varying query distribution patterns 
experiments confirm functional efficiency selforganization mechanisms applicability proposed framework 

peer peer overlay networks gain momentum near 
beneficial properties scalability reliability economic efficiency 
major characteristic overlay networks absence central coordinator global view 
peers individual entities act autonomously behavioral rules predefined communication protocol 
promising application scenarios overlay networks domain cooperative information systems networked embedded systems internet computing 
scenarios common environment highly dynamic subject frequent fluctuations 
concern network characteristics topology latency throughput merely underlying infrastructure available resources formation configuration peers furthermore user requirements may evolve time especially reactive systems run shutting 
software scenarios adapt dynamic changes evolving requirements order efficiently 
due technical geographical size high degree distribution scenarios require underlying infrastructure 
absence central instance demands coordination adaptation mechanisms different ones common distributed systems 
high degree distribution autonomous behavior individual peers yield lot potentials achieve self organization 
leading researchers sven erik buchmann department computer science otto von university magdeburg germany buchmann iti cs uni magdeburg de robotics artificial intelligence cybernetics organic autonomic computing new kind self organizing systems organic systems 
systems consist individual entities form local behavior activities system 
behavior entities result small simple set rules limited view world 
researchers see analogies biological systems bee swarms flocks ant colonies structure human brain part see analogies vision dynamic self organizing large scale overlay networks biological organic systems cells ant colonies 
contribution examine analogy order open new direction understand large scale distributed systems organic systems learn organic systems organization adaptation healing mechanisms improve capabilities large scale overlay networks adapting highly dynamic environment evolving requirements 
address issues introduce general framework describes self organizing overlay networks 
introduce notion organic overlay networks general definitions analogies biological systems potential benefits challenges implement organic overlay networks 
furthermore case study content addressable network enhanced self organization mechanism view framework organic overlay networks 
study focus optimization query processing order cope changing fluctuating query patterns 
mechanism borrows ideas ant colonies swarms minimize average query path length 
experiments confirm mechanism improves performance 
serves example organic overlay network introduced notion framework 

technical background overlay networks data structures distributed hash tables structured overlay networks cf 
prominent example systems 
address core issue data management research 
particular overlay networks promise internet scale data management cope huge sets key value pairs high numbers parallel transactions scores users 
due consequent decentralized organization overlay networks promising experimental ground self organization mechanisms 
contrast popular filesharing systems flooded requests overlay networks document routing model 
query point key space query result value corresponding query point 
global key space partitioned zones zone assigned certain peer 
peer obtains query checks answer zone 
forwards query peer distance query point minimal 
reiterates query arrives peer answer 
variants overlay networks mainly differ topology key space contact selection routing path selection metric find peer minimal distance query point 
content addressable networks key space torus dimensions 
peer maintains contact cache containing neighbors zone key space 
uses chessboard distance determine peer query forwarded 
chord organizes data circular dimensional key space 
messages forwarded peer peer direction cycle peer id closest query key reached 
contacts chosen distance system containing peers peer maintains log contacts distance log 
pastry manages data plaxton mesh 
forwarding algorithm similar chord peer keeps table containing log contacts determined common prefixes peer ids exogenous tuning parameter 
grid distributed search tree 
peer addressed binary string representation path root peer leaf virtual tree 
level tree peer maintains peer subtree branches different subtree deeper levels 
features detailed survey approaches 
approaches focus data management issues 
optimizations specific certain approaches connected broader unifying framework 
complicates general understanding optimizing largescale decentralized distributed systems 
programmers run risk reinventing wheel 
current approaches recurring concepts building blocks contact caches forwarding rules 
allows develop generic framework connects domains biological systems 

notion framework organic overlay networks section introduces notion self organizing organic overlay networks 
self organization refers organization concern organic expresses relation biological systems 
framework describes self organization context overlay networks 
compare overlay networks biological systems explain potential benefits 
goal convergence exploit useful characteristics ideas mechanisms biological systems improve large scale overlay networks optimizing coping huge number parallel transactions 
analogy biological systems help understand decentralized organization absence direct control 
section discusses design implementation issues 
self organization overlay networks overlay networks global view central coordinator consist autonomously acting peers notion self organization defined terms participating peers 
perceive selforganization system self adaptation individual peers 
basic data management capabilities peer introduce new properties peer environment 
introspection peers uses sensors observe external characteristics uses monitors observe behavior state see 
external characteristics instance network latency topology available primary secondary memory 
internal characteristics number unanswered queries frequently contacts number incoming messages time interval 
give comprehensive list internal external characteristics discuss role indicators inside peer :10.1.1.59.7840
structure behavior peer environment monitors sensors monitors sensors introspect internal external characteristics 
characteristics peer waits predefined events 
events simple changes parameters exceeding threshold complex context changes connectivity degree expressed terms parameters thresholds 
events occur peer reacts adapting behavior internal state 
process introspection adaptation expressed event condition action rules state machines :10.1.1.59.7840
addition simple introspection adaptation scheme peers coordinate decentralized way exchanging information 
pieces information load information security certificates content replicas contacts reputation information 
see scenarios 
order realize coordination propose swarm meta data dissemination deliver coordination information peer peer see 
peer emits coordination information attaching meta data items messages sent anyway forwarded query requests 
incoming message peer receives set meta data items 
peers cache items temporarily 
peer sends message selects set cached meta data items attaches outgoing message 
policies items cached ones selected certain outgoing message powerful tuning parameters organic overlay networks 
explain decentralized dissemination flow meta data items originating peer immediate neighbors neighbors neighbors swarm meta data dissemination 
mechanisms efficient common mechanisms peers send dedicated messages known sets addressees regard resource consumption network traffic time delivering information show coordination mechanism essential certain kinds self organization mechanisms load balancing reputation mechanisms healing mechanisms nutshell perceive self organization overlay networks self adaptation introspection adaptation individual peers peers concert coordination :10.1.1.59.7840
relationship biological systems investigations optimizing large scale overlay networks revealed similarities organic systems known life sciences selforganizing overlay networks 
definition kelly regarding mandatory characteristics organic systems applied self organizing overlay networks hold biological organic systems organic overlay networks central coordinator global view 
individual entities constitute global system act autonomously 
individual entities highly connected 
causal relations dependencies individual entities complex nature 
organic systems benefits compared common centralized engineer computer systems adaptive evolve time fault tolerant reliable limited pre defined behavioral patterns degrade flexibility 
notion self organizing overlay networks commonalities biological systems learn biological systems order exploit capabilities 
studies revealed lot mechanisms overlay networks directly correspond mechanisms biological systems :10.1.1.59.7840:10.1.1.101.3346
mentioned mechanism disseminating coordination information form meta data network similar marching ants emit pheromones cells emit enzymes notify immediate environment 
mechanisms constrain life time scope meta data items correspond biological mechanisms cells destroy unused enzymes ant pheromones evaporate time 
example load balancing mechanism peer observes load load immediate neighbors 
case overload state moves data loaded neighbors 
load information distributed pheromones enzymes swarm manner 
peer acts simple set rules defines reactions take place case events occur 
global order balanced load emerges individual rule behavior participating peers 
prerequisite adequate set rules adjusted parameters settings cache size load threshold number neighbors emergence order major characteristic organic systems 
main goal engineering organic systems find set rules set parameter settings switch order disorder balanced unbalanced load certain conditions 
small modification sets rules parameters lead massive behavioral changes system 
understand switching phase transition phase transition phenomena defined phenomena macroscopic parameter global parameter system changes significantly micro parameter local parameter approaches uncertain critical point 
argue finding appropriate rules parameters phase transitions main task designing engineering tuning organic overlay networks 
potential benefits limitations goal improve self organization capabilities overlay networks 
common overlay networks drawbacks coping highly dynamic environments internet static structure overlay networks key spaces predefined properties number dimensions distance function topology hyper cube tree ring furthermore partition key space fixed runtime case leaving joining peers 
better flexible rearranging key space partitioning runtime allow cope load fluctuations unreliable peers 
predefined behavior common approaches behavior peers simple static protocol concerns main data management tasks 
take dynamic properties account 
examples kind properties load distribution overlay physical network topology average query response time 
studies indicate altering behavior environment effective adapting forwarding policy neighbor contact selection replication degree advantages exploiting mechanisms borrowing ideas biological systems straightforward :10.1.1.101.3346
biological systems extremely successful coping scaling volumes information load participants 
reynolds states evidence complexity natural flocks bounded way 
flocks full overloaded new bird joins 
herring migrate spawning grounds run schools extending long miles containing millions fish perceive circumstance close relation organic overlay networks biological systems chance improve capabilities overlay networks managing frequent fluctuations environment evolving requirements 
potential advantages drawbacks arise organic systems fully controlled behavior really predictable adaptation evolution completely formally specified verified validated usable practicable way 
interaction pattern individual entities orders magnitude complex behavior structure entities stand 
global behavior emerges simple individual behaviors complex interactions 
known important indicator organic systems circumstance prediction behavior time consuming complex running systems 
clear limitation view organic overlay networks 
argue current approaches manage specify large scale distributed limited 
opinion inherent property organic overlay networks predictable 
means matter view complexity application scenario 
mary shaw argues thinking programs nowadays time heterogeneous distributed systems consisting components right direction 
practical systems better served development models recognize variability unpredictability environment 
goal tame low predictability defining lower upper bounds working statistical models guarantees exploiting emergent behavior defined boundaries certain circumstances 
design implementation issues developing organic overlay networks challenging 
development process programmer tasks concerning different fields 
framework describing organic overlay networks helps order tasks 
programmer analyses potential application scenarios order determine kind degree selforganization needed 
includes specification observed characteristics triggered reactions 

programmer specifies set rules adapting behavior individual peers 

furthermore programmer chooses coordination mechanism disseminate meta data network see 

follows implementation rules adding introspection adaptation coordination code 
propose techniques ease step 

implementation programmer experiments get feedback adjusting rules parameters find potential phase transitions order achieve desired global behavior 
remaining article applies framework steps case study ant colony optimization mechanism improve query processing dynamic environments 

case study original proposals overlay networks reviewed section deterministic ruleset choose contacts 
leads scalability typically log obtaining arbitrary query result invokes log peers average system contains peers 
deterministic rules leave aside peers want obtain queries different rates keys popular peers reliable 
want show extending self organization mechanism contact selection reduces number peers invoked query 
envisioned mechanism supposed optimize query processing face highly dynamic environment unreliable peers limited connectivity 
call enhanced mechanism 
core idea adopt path selection strategy ant colonies cans 
basically ant marks way food source pheromones 
time efficient paths routes shortcuts smell inefficient ones 
ants tend follow routes strongest odor usually find efficient paths 
pheromones disappear time unneeded paths lose marking 
ant routing algorithm ant colony optimization similar forwarding problem overlay networks cases small entities fully autonomous 
ant peer dimensions peers average path length log scalability log 
limited point view global view world available 
problem horizon single entity solved cooperatively 
order adopt ant system require additional data structures see 
original proposal peer knows immediate neighbors key space 
peers new properties peers able keep limited number contacts addition neighbors contact caches 
contact assigned pheromone value 
addition query result contains list peers forwarded query 
peer peer 
contact cache message attached contacts contacts pheromone value contact cache contact cache 
query forwarding algorithm considers neighbors set additional contacts 
crucial question arises obtains peer optimal set contacts 
ant colony optimization comes play follows query answer carries answer information peers forwarded query message 
peer obtains information path way updates contact cache contact cache pheromone value increased 
previously unknown peers added marked base pheromone value 
number peers contact cache exceeds certain limit contact pheromone value removed 
pheromone values contacts decreased small amount biological systems 
peers remove contacts pheromone value zero 
different point view messages containing queries query answers ants 
mark ways pheromones disappear time 
major difference behavior ant colonies nature ants carry information path travelled 
want ants jumps longer distances 
words certain situations messages shall forwarded directly remote peers handed neighbor neighbor 
connection framework simple self organization mechanism classified framework follows introspection peer observes incoming messages 
algorithm messages contain contact information peers 
way peer aware environment 
adaptation observing message traffic peer builds contact cache 
peer uses cache adapt behavior particular modify forwarding policy 
outgoing message passed nearest neighbor nearest peer general 
coordination attached contact information corresponds swarm coordination concern 
peers may different policies selecting attaching contacts messages 
realize pheromone forwarding contact marked pheromone value 
pheromone values second characteristic peers 
change time lead hand preferences choosing paths network hand automatic removal contacts 
improvement mechanism introspection characteristics query results time unit average query response time 
information adjust cache size pheromone life time free parameters 
limited cache size saves resources cache reduces positive effect query path length 
experiments focus simple variant additional introspection characteristics 
evaluation forwarding algorithm offers optimization parameters 
number additional contacts 
increment pheromone values contacts contact cache 
decrement value pheromones disappear 
simplify experimental setup increment parameter base initial pheromone values 
determine extent parameters means experiments 
java implementation fully operational allows run experiments large number peers linux cluster consisting hosts equipped ghz cpus gbytes ram mbit ethernet 
gives detailed description experimental setup 
runtime environment ran dimensional consisting peers 
order meaningful results experimented queries 
setup simulates worst case 
query keys equally distributed key space key popular 
setups query keys cover realistic cases 
mean value gaussian setups center hypercube key space queries go nodes center peers sides examples setting come www 
www google com urls nearby www google com search popular example www com 
variances gaussian setups diameter key space divided simulating environment containing moderate extreme hot spot 
illustrates key distribution dimension key space 
uniformly distributed query keys gaussian distributed query keys variance gaussian distributed query keys variance distribution query keys experiments 
key space torus sides means ranges key space keys wrap 
additional contacts 
want examine number additional contacts 
anticipate small number additional contacts decreases average path lengths ant algorithm performs better setting gaussian distributed query keys 
set arbitrarily ran series experiments different sizes contact cache 
graphs results experiments 
axis shows number additional contacts stands original proposal neighbors kept contact cache axis average path length 
average path length uniformly distributed query keys gaussian distributed query keys variance gaussian distributed query keys variance number additional contacts number additional contacts affect average path length 
experiments confirm expectations 
obviously having additional contacts cache leads average path length original proposal 
having additional contacts reduces path length worst case setting equally distributed queries 
settings gaussian distributed query keys path length reduced 
addition tells large cache size help marginal utility falls increased cache size 
contact cache containing neighbors plus additional contacts viable settings 
dynamic cache size adapts current workload order find trade minimal average path length contact cache size part 
increment decrement pheromone value 
determine extent increment decrement pheromone values 
clearly values depend increment decrement yields result increment decrement 
set decrement arbitrary value vary increment 
number additional contacts set 
shows results experiments 
axis graphs average path lengths 
axis extent increment pheromone value 
obvious leads setting additional contact immediately removed 
graphs start average path length comparable case additional contacts 
tells peers better increments substantially larger decrement value 
particular observations shown average path length minimal ratio increment decrement meets number additional contacts experiment 
larger ratios yield effect 
basically peer dimensional key space keeps track neighbors 
average path length uniformly distributed query keys gaussian distributed query keys variance gaussian distributed query keys variance increment pheromone value relation increment pheromone value average path length 

related tries adopt concepts mechanisms biological systems swarm intelligence ant colony optimization field research interdisciplinary touch review close related representative 
distinguish mechanisms adopted biological systems programming models develop organic computing systems 
biological mechanisms 
bison project explores biology inspired techniques self organization dynamic networks 
results findings important basis project provide general framework modular self organization mechanisms overlay networks 
anthill project similar focus 
aims design implementation evaluation applications ideas multi agent evolutionary programming considering overlay structures 
proposes distributed control synchronization mechanism exploits collective coordination decision making 
furthermore propose utilize available processes inside target system coordinate behavior 
focus chemical physical effects idea related coordination concern exploits case existent message delivering mechanism 
adaptive routing mechanism wireless ad hoc networks uses swarm intelligence 
discuss specific algorithms show promising results respect 
di caro antnet adaptive approach routing tables learning packet switched communication networks 
show algorithm ant colony optimization outperforms common internet routing algorithms 
schoonderwoerd apply ant colony optimization improve load balancing networks 
approaches propose algorithms specific problems different fields 
introduced general framework understanding investigating implementing organic overlay networks 
algorithms profit basis 
programming architectural models 
shaw proposes new kind programming model takes dynamic behavior nowadays software systems account 
model process oriented view feedback loops reflect temporal concerns 
proposal introspection adaptation coordination goes step wards massive distributed systems deep field programming paradigms 
furthermore shaw states engineering nowadays complex systems requires different view software 
proposes softening precision order avoid brittleness 
george novel programming model inspired biological cell systems 
basically utilize state machine approach describe local actions case system behavior 
approach introspection adaptation similar model events states actions 
early pioneer reflection reflective software architecture basis view introspection peers 
shown novel design implementation techniques help build flexible self organizing overlay networks :10.1.1.59.7840
discuss importance meta data dissemination decentralized coordination mechanism efficient modular implementation 
great visions autonomic proactive organic computing new understanding software systems 
approach regarding overlay networks go step direction 

study shows ideas biological systems exploited optimize behavior largescale overlay networks face dynamic environment 
framework poses basis describing function architecture implementation selforganization mechanisms top overlay networks 
argue significant part self organization mechanisms overlay networks expressed standard concerns introspection adaptation coordination 
strict decentralized architecture information distribution opens door adopt mechanisms algorithms biological systems 
case borrowed ideas ant colonies particular mechanism pheromones paths 
say synthetic algorithm achieve results argue strict adherence decentralized organization paradigm biology inspired view autonomous rule peers leads deeper comprehension organic overlay networks 
argue framework general optimization query processing applicable overlay networks depend proprietary mechanisms general concepts overlay networks 
experiments shown implementation biology inspired algorithm optimizes behavior overlay network especially real world circumstances 
furthermore results show simple case study parameters decide system behavior particular contact cache size pheromone increment decrement values 
perceive parameters tuning leverages adapt overlay network specific application scenario 
want investigate mathematical analysis runtime adaptation tuning parameters 

european organic computing initiative 
www organic computing de 
aberer 
grid self organizing access structure information systems 
proceedings th conference cooperative information systems 

survey peer peer content distribution technologies 
acm computing surveys 
hm :10.1.1.59.7840
self organization overlay networks 
proceedings st caise workshop adaptive self managing enterprise applications 
adaptive routing wireless communication networks swarm intelligence 
proceedings th aaai communications satellite systems conference 
babaoglu design patterns biology distributed computing 
proceedings european conference complex systems 
babaoglu meling montresor 
anthill framework development agent peer peer systems 
proceedings th international conference distributed computing systems 
bonabeau dorigo theraulaz 
swarm intelligence natural artifical systems 
oxford university press 
brooks flynn 
fast cheap control robot invasion solar system 
technical report aim mit 
buchmann saake 
piggyback meta data propagation distributed hash tables 
proceedings conference web information systems technologies 
buchmann hm 
counter free riding peer peer data structures 
proceedings th conference cooperative information systems 
buchmann hm 
run experiments large peer peer data structures 
proceedings th parallel distributed processing symposium 
deutsch 
chemotaxis inspired load balancing 
proceedings european conference complex systems 
maniezzo 
ant colony optimization paradigm combinatorial optimization 
advances evolutionary computing theory applications 
caro dorigo 
ant colonies adaptive routing packet switched communications networks 
proceedings th conference parallel problem solving nature 


zur peer peer systemen 
master thesis department computer science university magdeburg germany 

autonomic computing era 
ibm systems journal 
george evans davidson 
biologically inspired programming model self healing systems 
proceedings st workshop self healing systems 
gershenson 
meaning self organization computing 
ieee intelligent systems may june 
jelasity montresor babaoglu 
modular paradigm building self organizing peer peer applications 
engineering self organising systems nature inspired approaches software engineering 
kelly 
control new biology machines social systems economic world 
basic books 
kephart chess 
vision autonomic computing 
ieee computer 
kiczales rivieres 
art metaobject protocol 
mit press 
levi 
collective decision making natural self organization distributed systems 
proceedings conference computational intelligence modelling control automation 
maes 
concepts experiments computational reflection 
proceedings conference object oriented programming systems languages applications 
ratnasamy scalable content addressable network 
proceedings sigcomm conference 
reynolds 
flocks herds schools distributed behavioral model 
computer graphics 
rowstron druschel 
pastry scalable decentralized object location routing large scale peer peer systems 
proceedings conference distributed systems platforms 
schoonderwoerd ant load balancing telecommunications networks 
adaptive behavior 
shaw 
objects software design paradigm process control 
acm software engineering notes 
shaw 
self healing softening precision avoid brittleness 
proceedings st workshop self healing systems 
smith 
reflection semantics procedural language 
technical report mit laboratory computer science 
stanley 
phase transition critical phenomena 
oxford university press new york 
stoica chord scalable peer peer lookup service internet applications 
proceedings sigcomm conference 
tennenhouse 
proactive computing 
communications acm 

author information sven received diploma computer science university magdeburg germany 
worked consultant research institute magdeburg germany currently phd student research associate institute technical business information systems university magdeburg 
main research interests distributed systems novel software engineering methods develop distributed systems 
erik buchmann received diploma business information technology university magdeburg germany 
currently works phd student research associate technical business information systems university magdeburg 
main research interests peer peer systems optimizations 
