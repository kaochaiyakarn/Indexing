ekta efficient dht substrate distributed applications mobile ad hoc networks das charlie hu school electrical computer engineering purdue university west lafayette purdue edu distributed hash tables dhts proven novel efficient platform building variety scalable robust distributed applications content sharing location internet 
similar internet distributed applications network services mobile ad hoc networks manets potentially benefit deployment dht 
bandwidth limitations node mobility multi access interference pose unique challenges deploying dhts manets 
study efficiently implement dhts manets 
explore disparate design options simple approach directly overlaying dht top manet multi hop routing protocol ekta integrates dht multi hop routing protocol network layer 
second examine efficiency dht substrates supporting applications manets examining performance resource discovery application built top ekta directly uses physical layer broadcast 
study answers fundamental question dht substrate efficient supporting applications physical layer broadcast protocol manets dht protocols effectively rely physical layer broadcast discover maintain routes 

mobile ad hoc network manet consists collection wireless mobile nodes dynamically forming temporary network existing network infrastructure centralized administration 
network nodes operate hosts routers forwarding packets mobile nodes may direct transmission range 
decentralized networks enable flexible infrastructure robust proceedings sixth ieee workshop mobile computing systems applications wmcsa ieee data service access support ubiquitous computing environments 
due infrastructure environment applications network services mobile ad hoc networks need designed operate decentralized manner 
distributed hash tables dhts chord pastry tapestry proposed novel platform building variety scalable robust distributed applications internet distributed storage systems application level multicast content full text search :10.1.1.1.1674:10.1.1.159.9358:10.1.1.140.3129:10.1.1.28.5987:10.1.1.4.8363:10.1.1.105.3673
dht substrate shields difficult issues including faulttolerance locating objects scalability availability load balancing incremental deployment distributed application designers 
argue dht abstraction deployed manets similarly provide efficient way constructing distributed applications services 
example applications file sharing resource discovery benefit distributed insert lookup convergence provided dhts 
dhts designed internet bandwidth limitations node mobility multi access interference pose unique challenges deploying dhts manets 
study efficiently support dht abstraction highly dynamic mobile ad hoc networks 
explore design options layered approach directly overlays dht top existing multihop routing protocol manets integrated approach integrates dht multi hop routing protocol network layer maximally exploits interactions protocols 
particular layered approach implemented laying pastry top dsr integrated approach implemented ekta integrates pastry dsr network layer :10.1.1.28.5987
experimental results show integrated approach supporting dht abstraction manets ekta superior layered approach terms number data packets successfully delivered average delay delivering packets incurring compa routing overhead 
suggests efficient way implementing dht manets integrating functionalities dht routing layer opposed having independent layers minimal interactions 
ekta fundamentally relies flooding packets discover maintain routes supporting dht abstraction fundamental question applications built top ekta efficient directly built top physical layer broadcast 
question second part perform case study resource discovery concrete application manets 
ns simulations perform detailed comparison performance resource discovery built top ekta approach directly uses physical layer broadcast 
experimental results show resource discovery application dht approach consistently outperforms broadcast approach wide range application parameters 
specifically broadcast implementation incurs comparable routing overhead ekta high inter arrival time resource queries 
inter arrival time decreases ekta implementation incurs order magnitude lower overhead compared broadcast 
furthermore results hold true wide range mobilities 
results suggest efficient peer peer substrates ekta provide viable efficient approach building distributed applications mobile ad hoc networks 
final part discuss implementation details ekta linux operating system 

ekta efficient dht substrate mobile ad hoc networks section explore opposite options design space implementing dht manets 
design dht directly layered top multi hop routing protocol minimum modifications routing protocol 
approach similar implementing dht internet leverages existing routing infrastructure manets full extent 
approach consistent layered principle iso model networking difficult exploit optimization opportunities interactions dht protocol underlying multi hop routing protocol 
example routing protocol dynamic source routing dsr uses caching reduce routing overhead difficult routing structures dht route cache dsr coordinate optimally discover maintain source routes 
ekta adopts opposite approach fully integrate functions performed dht protocol ing logical namespace manet routing protocol operating physical namespace 
key idea integration bring structured routing protocol dht network layer manets mapping ip addresses mobile nodes nodeids namespace 
integration routing structures dht multi hop routing protocol route cache dsr integrated structure maximally exploit interactions protocols optimize routing performance 
note overlay constructed ad hoc network similarly internet purpose motivate architecture 
ad hoc network typically formed nodes collaborate enable communication nodes believe rarely necessary construct overlay consists subset nodes 
words internet dhts run overlays propose support dht nodes ad hoc network 

background proceedings sixth ieee workshop mobile computing systems applications wmcsa ieee study uses concrete dht pastry representative routing protocol manets dsr give brief overview dsr pastry 

dsr dsr representative multi hop routing protocol ad hoc networks 
concept source routing contrast hop hop routing 
includes mechanisms route discovery route maintenance 
route discovery process source node discovers route destination route cache 
process broadcasts route request packet flooded network controlled manner 
addition address original initiator request target request route request packet contains route record records sequence hops taken route re quest packet propagates network 
route request packets sequence numbers prevent duplication 
request answered route reply packet destination node intermediate node cached route destination 
reduce cost route discovery node maintains cache source routes learned overheard uses aggressively limit frequency propagation route requests 
route maintenance procedure monitors operation route informs sender routing errors 
route breaks due link failure detecting host sends route error packet source receiving removes routes cache hop error 
route discovery maintenance benefit optimizations overhearing routes route errors possible broadcast nature medium access environment 
consider dsr cache designs dsr path uses path cache store source routes dsr link uses link cache store individual links routes build topological graph network 
graph potentially increases effectiveness cache enables dsr construct routes graph overheard discovered 

pastry pastry structured routing protocols implement dht abstraction :10.1.1.28.5987
pastry network node unique uniform randomly assigned nodeid circular bit identifier space 
message associated bit key pastry reliably routes message live node nodeid numerically closest key 
pastry network consisting nodes message routed node log steps average configuration parameter node stores logn entries entry maps nodeid associated node ip address 
specifically pastry node routing table organized log rows entries 
entries row routing table refers node nodeid shares digits node nodeid th digit possible values th digit node nodeid 
pastry stores multiple candidates routing table entry increase availability 
addition routing table node maintains leaf set consisting nodes numerically closest larger nodeids nodes numerically closest smaller nodeids relative node nodeid 
configuration parameter 
routing step current node forwards message node nodeid shares message key prefix digit bits longer prefix key shares current nodeid 
node routing table message forwarded node nodeid shares prefix key long current node numerically closer key current nodeid 
node exist leaf set nodeid current node immediate neighbor numerically closest key 

design options section describe opposite design approaches implementing dhts manets proximity aware dht pastry demand manet routing protocol dsr concrete examples 
approach directly overlays pastry top dsr proceedings sixth ieee workshop mobile computing systems applications wmcsa ieee second approach integrates protocols network layer 

layered approach layered approach pastry directly layered top manets way layered top internet 
pastry maintains leaf set routing table entries source routes dsr maintains source routes passively demand pastry routing state 
straightforward layering pragmatic modifications accommodate shared medium access nature manets pastry node joining process modified expanding ring search locating bootstrap node join network original pastry uses expensive ping mechanism delay metric measure maintain proximity nodes routing tables 
modified pastry hop count metric proximity manets delay affected factors high variability reduce cost proximity probing modified dsr export api allows pastry inquire proximity values nodes interested 
dsr cache reply pings pastry cached path node 
absence cached path route request initiated dsr 

ekta integrated approach ekta implements dht abstraction integrating pastry dsr network layer exploits optimizations possible close interactions protocols 
previously proposed design position network layer unicast routing protocol 
ekta share essence tightly integrating pastry dsr network layer 
ekta dht unicast routing 
node addressing ekta assigns unique bit nodeids nodes manet hashing ip addresses nodes collision resistant hashing function sha 
node state structures routing table leaf set stored ekta node similar pastry 
difference lies content leaf set routing table entry 
entry ekta leaf set routing table stores source route reach designated nodeid 
pastry routing table entry chosen physically closer choices routing table entry 
proximity awareness continuously maintained making vast amount indirectly received routes overhearing forwarded messages prefix route discovery described routing 
ekta chosen 
parameter pastry trade size populated portion routing table approximately log entries maximum number hops required route pair nodes log 
chosen 
efficiency routing table entry stores vector source routes nodes match prefix entry 
similarly entry stores multiple routes designated node 
replacement algorithm leaf set routing table entry discovered lrd disregarding route discovered directly indirectly 
looking route leaf set routing table entry shortest routes entry returned 
routing ekta message bit key routed pastry prefix routing procedure delivered destination node nodeid numerically closest message key 
route lookup logical hop returns hop node source route exist ekta initiates route discovery discover new source route 
hand node selected hop routing table route prefix route discovery performed discover routes nodes nodeids match prefix routing table entry 
note hop ekta network multi hop source route hop corresponding pastry network multi hop internet route 
node arrival departure ekta uses modified form pastry join protocol handle node arrivals 
join message routed node nodeid closest joining node 
contrast pastry node responds join complete message containing leaf set 
maintain leaf set consistency node notifies members leaf set arrival new node broadcast flooding records path traversed packet propagated 
leaf set members send back acknowledgments recorded path source route 
similarly node floods leave message leaf set members acknowledging event 
nodes receiving leave message remove node routing tables 
note ekta join leave procedures lightweight incur message overhead maintain leaf set consistency required dht convergence 
pastry routing entry exchanges proximity probing carried 
routing table entries discovered demand low overhead prefix route discoveries overhearing 
optimizations ekta inherits optimizations route discovery route maintenance dsr protocol 
addition ekta updates routing table leaf set routes snooped forwarding overhearing packets constantly discovering fresh low proximity routes leaf set routing table entries 
addition prefix view routing table neighbor node view leaf set ekta routing structures viewed caches source routes 
support unicast routing ekta required application 
example insert operation dht application may travel multiple hops nodeid space acknowledgment insert efficiently unicast back originator 

evaluation methodology proceedings sixth ieee workshop mobile computing systems applications wmcsa ieee ns evaluate performance approaches implementing dhts 
layered approach implemented pastry application ns ran dsr path cache dsr link cache studied dsr dsr versions referred layered path layered link rest 
dsr ekta implemented routing agent ns 
mobility scenarios generated modified random waypoint model :10.1.1.12.1241
model nodes move speed uniformly distributed area 
wireless radio mbps bit rate transmission range 
simulation duration chosen 
communication pattern consists traffic sources initiating packets rate packets second 
packet byte message body prepended bit key generated hashing message body 
effective packet payload bytes 
communication pattern models traffic dht storage system past :10.1.1.1.1674
evaluate steady state behavior dhts cutoff time simulation resulting duration performance statistics collected 
cutoff chosen connections initiated nodes joined network instantaneous average speed nodes network stabilized steady state value :10.1.1.12.1241
metrics evaluated routing protocols routing overhead number control packets transmitted hop wise transmission control packet counted transmission packet delivery ratio pdr ratio data packets delivered correct destinations nodes nodeids closest keys data packets data packets generated traffic sources average delay average delay routing data packet 
routing overhead packets ekta layered path layered link pause time seconds routing overhead 
performance results pdr ekta layered path layered link pause time seconds pdr 
routing overhead pdr delay varying mobility 
compares routing overhead ekta layered versions network mobility varied 
routing overhead ekta lower layered path mobilities 
higher overhead layered path attributed reasons layered path employs periodic routing table maintenance seconds 
additional maintenance non data packets route discoveries caused increase overhead 
addition probing proximities exchanged nodes adds routing overhead 
contrast ekta uses overhearing routes physically nearby nodes maintain proximity routing table entries 
ii layered path selects node overlay hop irrespective routes node dsr route cache 
cause unnecessary route discoveries 
ekta node valid source route preference node exists route discovery issued 
iii layered path selects node hop regardless relative freshness dsr source route compared candidates pastry tell 
lead increase route errors 
observed pause time ekta incurred route er layered path route errors 
ekta uses discovered replacement maintain source routes routing table entry leaf set entry 
hop nodes selected routes fresh short 
iv layered path discovers candidates better proximities routing table entries routing table maintenance approach refresh proximities existing candidates 
approach suitable internet proximity nodes changes slowly highly dynamic ad hoc network lead stale proximity information consequent selection distant nodes hops 
exacerbated fact proceedings sixth ieee workshop mobile computing systems applications wmcsa ieee delay seconds ekta layered path layered link pause time seconds delay source routes distant nodes may need discovered 
contrast proximities candidates ekta continually refreshed forwarding overhearing packets 
consequence high routing overhead pdr layered path drops increased mobility shown 
network capacity available data packets reduced 
additionally packets traverse longer routes due stale proximity selection increases probability route errors due increased number physical hops larger message header longer source routes 
contrast pdr ekta remains largely constant increased mobility 
consequence high routing overhead layered approach routing delay layered path increases increased mobility shown 
contrast routing delay ekta remains constant 
layered link builds topological graph network construct routes discovered overheard allowing lower rate route requests consequently lower routing overhead 
routes constructed potentially distant nodes frequently stale 
observed simulations number route requests consequently route re layered link lower layered path slightly lower ekta number route er layered link comparable layered path higher ekta 
result mobility increases layered link incurs lower overhead ekta pdr lower ekta 
summary ekta superior layered link layered path number data packets successfully delivered 
layered link maintains lower routing overhead inability exploit interactions protocols contributes low packet delivery ratio 
suggests correct way implementing dht manets integrating functionalities dht routing layer opposed having independent layers minimal interactions 

application case study resource discovery manets efficient dht substrate manets ekta greatly ease construction distributed applications services manets shielding common difficult issues fault tolerance object location load balancing incremental deployment developer 
sense providing dht substrate manets significant internet issues especially challenging wireless mobile environment 
due mobility manets dht substrate demand routing may trigger repeated route discoveries discover maintain routes 
words dht application manets may experience control packets 
fundamental question applications built top dht ekta efficient efficient directly built top physical layer broadcast 
answer question perform case study resource discovery ad hoc networks concrete application 
formally define resource discovery problem mobile ad hoc networks 
design analysis evaluation alternative approaches implementing resource discovery directly built top physical layer broadcast built top ekta 

resource discovery manets pervasive wireless ad hoc networks comprised variety heterogeneous devices varying energy resources capabilities services offer 
natural systems rely peer cooperation efficiently resources 
examples resource discovery include discovering nodes gps devices nodes approximate location collecting sensed information mobile sensors contacting location directory servers locating people specific capabilities disaster relief battlefield networks 
instance resource lookup platoon soldiers team coordinating disaster relief form find closest medic 
examples show efficient discovery resources meet certain requirements ad hoc network great importance building variety distributed applications ad hoc networks 
assume set unique resources network nodes 
resource ri replicated probability qi node network 
assume resource ri ad hoc network known name gps identifier 
resource ownership information discovered cached manet resources dynamic nodes join leave availability time varying depending current usage 
discovering resource includes steps retrieving list set nodes ni requested resource ri selecting physically close owner ri list finding route owner 
operation completed low overhead high success rate low delay 

design options proceedings sixth ieee workshop mobile computing systems applications wmcsa ieee case study implemented resource discovery application ns decentralized approaches unstructured gnutella structured dht 
versions modeled service location protocol framework 
detailed wireless simulation capabilities ns allow examine tradeoffs versions running manet 
dsr rd resource discovery dsr route requests version resource discovery application integrated dsr routing protocol 
essentially uses physical layer broadcast augmented source routing perform resource discovery follows 
modified route discovery process dsr support discovering resources resource specific identifiers 
node transmits resource requests similar route requests dsr node resource requested rebroadcasts resource requests encoding ip address source route 
node network owns resource responds service reply resource reply unicast back requester similar route reply dsr 
resource requests contain sequence numbers ensure overhead incurred network size packets 
remaining overhead number resource reply transmissions determined degree replication resource requested 
ekta rd resource discovery ekta second version builds resource discovery application top ekta dht substrate 
version referred ekta rd ekta provides dht apis route message key route message ip address broadcast message broadcast address additional api proximity ip address application various stages operations 
proximity ip address interface returns hop distance node specified looking lo cally cached routes 
route cached ekta returns null 
ekta rd simply relies ekta route resource request correct directory agent receive reply 
resource required ekta rd hashes resource identifier key invokes route message key ekta send request node ni nodeid hash network address numerically closest key 
node ni directory agent mapped resource contains previously inserted information resource 
replies requester list nodes resource network 
requester finds closest node list ekta proximity ip address interface contacts chosen node resource 
ekta determine proximity node list returned resource reply application randomly selects node list contacts node resource 
trigger route request random node ekta 

analysis section analyze overhead incurred dsr rd ekta rd define parameters 
average number hops nodes 
average number resource requests node 
simulation time note average interarrival time number nodes network 
average degree replication resource rd single resource request triggers packet transmissions 
total resource replies received request causing overhead transmissions 
total overhead incurred node corresponding total overhead rd ekta rd resource request routed log overlay hops reply unicast back transmissions 
overhead node assuming routes cached valid log manets routes break new routes need discovered flooding 
worst case routes transmission sequence invalid log initiated 
pv average probability route cached valid pb average probability route cached cached stale total overhead ekta rd pv log pb log log equations infer overhead dsr rd independent mobility ekta rd increasing overhead mobility increased 
increasing overhead grows dsr rd log ekta rd pb pv practical scenarios 
observation interarrival time increases decreases overhead approaches decreases 

evaluation methodology simulation parameters evaluation similar parameters outlined section 
mobility scenarios generated modified random waypoint model :10.1.1.12.1241
nodes move speed uniformly distributed number unique resources network size set chosen equal number nodes network 
resource ri owned average nodes network 
communication pattern resource discovery application consists resource requests modeled poisson arrival process 
average inter arrival time requests varied seconds 
resource request aims locating resource ri randomly selected set hashing identifier resource ri generates unique bit key 
key ekta route resource request message 
areas sizes networks size respectively 
metrics measured compare implementations overhead total number packets including control packets transmitted resource discovery operation hop wise transmission packet counted transmission success ratio ratio number resource requests resolved number resource requests generated application 
measure resolution latency easy way compare implementations fair manner 
delay reply received dsr rd expected shorter receiving single reply ekta rd containing list owners 
hand average delay receiving replies request dsr rd expected comparable ekta rd 
performance results proceedings sixth ieee workshop mobile computing systems applications wmcsa ieee compare performance implementations resource discovery application varying request rate mobility network size 

effects request rates mobility experiment average inter arrival time requests generated node varied second seconds 
inter arrival time increases number resource queries generated node overhead packets success ratio dsr rd ekta rd interarrival time seconds overhead pause time dsr rd ekta rd interarrival time seconds success ratio pause time overhead packets success ratio dsr rd ekta rd interarrival time seconds overhead pause time dsr rd ekta rd interarrival time seconds success ratio pause time overhead packets success ratio dsr rd ekta rd interarrival time seconds overhead pause time dsr rd ekta rd interarrival time seconds success ratio pause time 
overhead success ratio comparison inter arrival time increases 
system decreases 
larger value lesser congestion network 
results experiment shown 
observations 
overhead dsr rd inversely proportional inter arrival time seen figures pause times 
overhead dsr rd proportional inversely proportional inter arrival time seen section 
second figures show overhead ekta rd decreases inter arrival time increases pause times 
addition overhead reduction due decreasing reduction caused reduced congestion network resulting lower probability routes mistakenly invalidated increase pb equation 
third ratio overhead dsr rd ekta rd remains largely constant inter arrival time increases fixed mobility 
mobility increases gap overhead versions narrows 
overhead dsr rd largely independent mobility ekta rd experience broken routes increased mobility increases pb 
success ratios implementations approach case inter arrival time second observed figures 
drop success ratio dsr rd explained proceedings sixth ieee workshop mobile computing systems applications wmcsa ieee follows 
inter arrival time second routing overhead dsr rd large increased congestion multi access interference network cause packets dropped reducing success ratio 

effects network size experiment vary network size nodes keeping average inter arrival rate constant seconds 
perform experiments static network pause time highly mobile network pause time 
figures depict overhead success ratio network size varied 
static network overhead ekta rd scales slowly increasing network size log compared dsr rd result relative performance gap increases increased network size 
nodes overhead dsr rd grows large success ratio drops resource requests succeed 
contrast ekta rd maintains close success ratio network sizes 
second network changed static highly mobile figures show overhead success ratio dsr rd remains largely unchanged network sizes 
broadcast nature implementation 
contrast ekta rd suffers significantly increased overhead reduced success ratio network size increases 
nodes success ratio ekta rd drops 
occurs overhead packets dsr rd pause dsr rd pause ekta rd pause ekta rd pause network size nodes overhead success ratio dsr rd pause dsr rd pause ekta rd pause ekta rd pause network size nodes success ratio 
overhead success ratio comparison network size increases 
network size coupled high mobility causes increased number broken routes consequently lower success ratio 
despite drop success ratio ekta rd continues outperform dsr rd network scaled nodes nodes 

implementation details section discuss implementation details ekta ad hoc testbed comprises laptops pdas running linux orinoco wireless cards support ad hoc mode 
ekta implemented user space library implements route msg key dht api 
operates known application specified port implements routing table leaf set functionalities perform prefix route requests replies described section request timers outstanding packet buffers 
target applications link library dht api 
depicts steps taken routing message ekta 
receipt message route application hashes message calls route msg key api 
ekta performs lookup logical hop packet message key uses ip destination 
packet sent transport layer ip headers added 
ip header added locally generated packet captured local hook framework 
done help source routing kernel module srm depicted 
packets queued user space processing ekta 
note ad hoc protocol implementations incur overhead crossing user kernel boundaries twice 
ekta searches route ip destination logical hop packet received srm module 
route exist packet buffered prefix route discovery sent 
route exists ekta inserts ekta header shown copies source proceedings sixth ieee workshop mobile computing systems applications wmcsa ieee route ekta option header ip transport layer headers 
sends packet physical hop source route raw socket 
ekta packet structure similar dsr consists fixed octet ekta header followed sequence ekta options 
ekta header protocol field length field total length option headers 
transport protocol field ip header copied ekta header protocol field 
code unique ekta copied ip protocol field 
ip length updated checksum recalculated 
ekta control packet option code related option header 
message travels physical hop source route logical hop 
similar internet want packet forwarded logical hop involving dht protocol 
srm kernel module physical hop captures packet pre routing hook 
extracts hop source route packet forwards packet physical hop 
additionally extracts header information queues post processing ekta snoop routes update routing table 
provides separation complex ekta operations packet forwarding physical hops allows physical packet forwarding performed quickly 
packet forwarded reaches logical hop detected srm module finds source route destination current node 
srm module strips buffers ekta header source route snooping updates ip protocol field allows packet undergo normal stack traversal 
packet port number protocol ekta 
ekta finds key message closest hash current node ip address sends message application 
restarts procedure sending message logical hop step 
user kernel srm hook nf ip local ip header application route msg key ekta sockets udp eth protocol source packets raw sockets ekta sockets udp ip ip srm hook nf ip pre routing ekta header reserved length physical hop application eth packets destination logical hop application ekta sockets udp ip eth packets packets 
ekta software architecture 
option type option length parts design inspired ad hoc protocol implementation 
involves additions improvements support remove double copying user kernel space support multiple applications linked running node associated demultiplexing support integrating unicast functionality ekta module prefix table cache routes 
current design ad hoc unicast routing protocol runs independently ekta 
allow sharing routing information protocols benefit 

related dhts manets previous supporting dhts manets location information studies proposed implementing dhts gps support 
geographic location system gls grid scalable location service performs mapping node identifier location 
gls combined geographic forwarding implement unicast 
implementation gls effectively provides dht interface ekta options option data 

ekta packet structure 
proceedings sixth ieee workshop mobile computing systems applications wmcsa ieee transport header ekta key logical hop srm hook nf ip pre routing payload message routes message nodeid node nodeid closest gls requires gps support building distributed location database 
authors proposed geographic hash table inspired dhts data centric storage sensornets 
gls ght requires gps support gls ght functions location database 
resource service discovery manets large body exist resource discovery manets :10.1.1.12.6336
different focus ekta rd demonstrate dhts general purpose substrate building distributed applications manets 

previous deploying applications manets focused modifying specific applications take advantage rich connectivity broadcast medium 
contrast approach provide efficient substrate manets diverse applications easily built internet applications ported 
particular studied fundamental questions efficiently imple ment dhts manets applications built top dht efficient directly built top physical layer broadcast 
remains interesting see integrate prefix pastry routing manet routing protocols 
hop hop routing aodv require nodes route overlay hop maintain route :10.1.1.132.7416
implies intermediate nodes need prefix match destination nodeid 
source routing intermediate physical hops need share prefix destination nodeid 
interesting see efficiently integrate dhts chord manet routing protocols 
chord dht similar ekta node store successor list finger table list source routes corresponding nodeids 
routing table entries chord required refer specific points id space proximity aware selection overlay hops flexible pastry 
similar problem exist dht 
acknowledgments shepherd andrew campbell anonymous reviewers helpful comments 
supported part nsf ani 
breslau 
advances network simulation 
ieee computer may 
broch 
performance comparison multi hop wireless ad hoc network routing protocols 
proc 
acm mobicom october 
castro druschel 
kermarrec nandi rowstron singh 
splitstream high bandwidth multicast cooperative environment 
proc 
acm sosp october 
belding royer 
aodv routing protocol implementation design 
proc 
wwan march 
dabek kaashoek karger morris stoica 
wide area cooperative storage cfs 
proc 
acm sosp october 
fips 
secure hash standard 
technical report publication federal information processing standard fips nist department commerce washington april 
guttman 
service location protocol automatic discovery ip network services 
ieee internet computing 
hu das 
exploiting synergy peer peer mobile ad hoc networks 
proc 
hotos ix may 
proceedings sixth ieee workshop mobile computing systems applications wmcsa ieee 
hu johnson 
caching strategies ondemand routing protocols wireless ad hoc networks 
proc 
acm mobicom august 
vaidya 
efficient content location wireless ad hoc networks 
proc 
ieee mdm january 
johnson maltz hu 
dynamic source routing protocol mobile ad hoc networks internet draft april 
johnson maltz 
dynamic source routing ad hoc wireless networks 
kluwer academic 
zhang gupta 
system services adhoc routing architecture implementation experiences 
proc 
mobisys may 
tassiulas 
network layer support service discovery mobile ad hoc networks 
proc 
ieee infocom april 
li jannotti couto karger morris 
scalable location service geographic ad hoc routing 
proc 
acm mobicom august 
lundgren 
aodv simulation code uppsala university 
www docs uu se docs research projects aodv 
perkins royer :10.1.1.132.7416
ad hoc demand distance vector routing 
proc 
ieee wmcsa february 
ratnasamy francis handley karp schenker 
scalable content addressable network 
proc 
acm sigcomm august 
ratnasamy karp yin yu estrin govindan shenker 
ght geographic hash table data centric storage sensornets 
proc 
st acm wsna september 
rowstron druschel :10.1.1.1.1674
past large scale persistent peer peer storage utility 
proc 
acm sosp october 
rowstron druschel :10.1.1.28.5987
pastry scalable distributed object location routing large scale peer peer systems 
proc 
middleware november 
stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proc 
acm sigcomm august 
tang xu dwarkadas :10.1.1.4.8363
peer peer information retrieval self organizing semantic overlay networks 
proc 
acm sigcomm august 
tang 
chang tanaka baker 
resource discovery ad hoc networks 
technical report csl tr stanford university 
yoon liu noble :10.1.1.12.1241
random waypoint considered harmful 
proc 
ieee infocom april 
zhao kubiatowicz joseph 
tapestry infrastructure fault resilient wide area location routing 
technical report ucb csd berkeley april 
