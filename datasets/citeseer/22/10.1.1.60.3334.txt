peer peer security van department computer science faculty electrical engineering mathematics computer science university twente student utwente nl increasing popularity peer peer networks new problems arise 
problems security networks 
area peer peer security goals availability file authenticity anonymity access control fair trading 
solutions try achieve goals divided categories identity trust reputation incentives 
critical survey various solutions area peer peer security 
keywords peer peer security trust reputation identity incentive 
years peer peer systems popular 
especially file sharing peer peer systems bittorrent bi kazaa ka 
systems download share files users 
dedicated servers clients peer peer networks system network acts server client 
system supports peer peer aware protocols join peer peer network 
open structure advantages see adaptation self organization load balancing fault tolerance availability massive replication ability pool harness large amounts resources 
disadvantages open structure just easy malicious peer join system normal non malicious 
malicious peers abuse network ways 
example spread viruses try resources unavailable attempting denial service attack peers 
kinds networks secure solutions proposed 
solutions try achieve goals 
states availability file authenticity anonymity access control fair trading 
definitions availability file authenticity anonymity permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission 
th twente student conference enschede january copyright university twente faculty electrical engineering mathematics computer science control 
availability defined availability files peers system 
node able communicate peers able offer access resources contributes 
file authenticity deals finding authentic responses query 
authenticity file defined multiple ways 
definitions oldest document expert voting reputation 
oldest document approach oldest response query believed authentic 
expert approach experts give opinion authenticity file 
voting approach experts give opinion authenticity file opinions give information authenticity 
reputation approach similar voting approach difference approach reputation experts taken account 
anonymity defined making difficult peers find created file stores file accesses file documents stored peer 
access control deals restricting access resources peers right access resources 
fair trading means peer benefits network contributes 
categorizes solutions categories identity trust reputation incentives 
research done identity category focuses researching solutions achieve anonymity access control goals 
trust reputation category research focuses trying achieve availability file authenticity trust systems 
research categorized incentives category deals trying achieve fair trading availability peers researching various ways peers contribute system 
categories lot research 
peerto peer research group internet research task force irtf ir considers need critical survey matter 
evaluation solutions necessary research community provide way show done improved open issues 
answer question security peer peer systems improved 
focus areas trust reputation incentives way solutions areas deal anonymity goal 
done conducting literature study 
start describing done area reputation trust section 
various solutions area described compared 
section focus done area incentives 
systems proposed matter described differences systems discussed 
section deal identity peer peer systems 
sections try answer possible implement various solution proposed areas reputation trust incentives giving anonymity goal peerto peer systems 
answer main research question described section 
reputation trust focus reputation systems design decentralized peer peer systems peer topeer systems exist day kind systems 
popular peer peer systems data sharing systems 
system users search files want download download available system 
decentralized networks content retrieval processes involve phases content search phase content download phase 
malicious nodes misbehave phases 
content search phase node generates query sends peers directly connected 
nodes send query nodes directly connected nodes send query neighbors process repeats ttl time live query time query send ttl decreased 
nodes queried content send reply node sent query 
querying node received replies select nodes download content 
subsequently content download phase starts 
content download phase requested content downloaded content search phase selected peers 
process content search content download process requires cooperation nodes system 
malicious nodes disturb cooperation 
example choose forward query nodes connected choose forward changing content 
send reply query proper copy queried content 
malicious node selected downloading node provide content querying node didn ask virus adult content new disney film 
problems serious security issues 
solve problems various reputation systems proposed 
systems try filter peers misbehave giving reputation peers 
peer misbehaves get bad reputation 
node bad reputation won selected operate downloading peer 
section describe various reputation systems problems reputation systems differences systems 
general problems reputation systems nice solution problems described earlier designing system problems arise see 
subsection describes problems 
pseudonyms peer peer systems pseudonyms identify users 
ensure anonymity 
reputation system uses technique problems arise 
easy get new identity creating new pseudonym easy peers start got bad reputation 
solution problem design system reputation peer lower reputation new users 
solution problem cold start 
cold start problem described paragraph 
pseudonym mechanism identify users problem 
user easily create multiple pseudonyms run example create fake witnesses pseudonyms 
way easy get high reputation 
shilling shilling problem similar 
difference shilling multiple identities created different real ip addresses 
cold start peers reputation system high reputation systems selected downloading content 
new user joins system low reputation reputation 
means won get selected downloads peers reputation 
way hard build reputation new users 
load problems files shared peers high reputation peers low reputation peers high reputation selected download content 
means resources peers high reputation lot low reputation peers 
load balancing technique useful avoid kind problems 
reputation systems depending value specific file user user weighs risks downloading file 
user wants file badly take risks getting 
trusts peer higher risk download file peer 
ground user decide trust peer 
current peer peer systems depends requesting user reputation systems provide way base trust actual behavior peer 
paragraph various reputation systems described discussed 
states important issues addressed reputation systems 
criteria compare systems 
issues self policing peer able apply reputation system help supervising central authority anonymity reputation system indirect identities pseudonyms usernames circumstances ip addresses identify users overhead systems minimal overhead computation infrastructure storage message complexity malicious collectives system robust collectives peers know attempt collectively subvert system results comparison explained subsection shown table 
hard draw hard overhead various reputation system discuss possible overhead problems 
possible derive system lowest overhead 
included table 
reputation system reputation system described 
system uses reputation schemes debit credit reputation computation credit reputation computation 
mechanisms peer choose reputation tracked case reputation score minimum reputation score allowed system 
mechanism credits peer reputation scores serving content debits downloading 
mechanism credits peer reputation scores serving content offers debits downloading content 
expiration scores serves debit 
mechanisms offer extra credits query processing forwarding staying online 
reputation scores peer stored locally 
ensure trustworthy reputation scores system uses central reputation computation agent rca credit reputation points 
system fully decentralized 
peers want enroll reputation system generate public private key pair registers central rca 
rca public private key pair 
public key rca known enrolled peers peers obtain public keys peers 
rca contacted periodically peers get credits contributions system 
action peer saves proof processing pp 
pp parameter stores combination identity interacted peer time stamp additional information interaction 
pps rca compute reputation peer 
rca encrypts reputation score private key peer requested reputation score saves locally 
system various mechanisms ensure peers tamper pps precise working mechanisms scope 
reputation peer requested decrypted public key rca 
discussion self policing investigating system see doesn address issues described 
system uses central reputation agent self policing 
anonymity system peers identified pseudonym anonymity peers high 
overhead trust value peer stored locally retrieved fast querying overload low 
trust value doesn calculated querying moment calculated periodically contacting rca 
calculation accomplished pps concept requires certain amount storage space 
calculation isn performed peer won affect performance peer 
trust information sent network encrypted keys overhead terms computation 
hard say overhead researched 
malicious collectives system schemes 
scheme debit downloading content 
due peers help get high reputation continuously transferring files 
system protected abuse analyzing pps simple algorithms debits downloading 
get high reputation keeping high peers create multiple identities sharing files downloading 
solution problem system evaluation get high reputation peer share files forward message asked forward 
check system prevents sharing malicious files downloaded files aren rated file downloaded malicious generate reputation 
system prevent abuses peer peer systems reputation systems prevent 
system useless trust system 
useful basis incentives system 
reputation system described uses previous described systems peer reputation file reputation 
fully distributed reputation system 
system extends typical phase search previously described phase protocol 
phase search phase peer sends query 
peers requested file respond query 
response includes digest file matched keywords included query 
second phase selection proper peer downloading 
find reputation peers files submitted responses query peer broadcasts peers 
respond ip address view files 
third phase votes evaluated judge reputation resources reputation downloading nodes 
votes checked 
peer contacts peer voted ip address included vote 
prevent shilling 
fourth phase querying peer contacts reliable downloading peer checks see really exports queried resource 
phase file downloaded selected peer 
downloading completed file checked digest ensure integrity peer update repositories opinion downloaded resource 
discussion self policing third party supervises system 
peers asked opinion need supervisor system self policing 
anonymity peers identified pseudonyms system shortcoming area 
peer sends opinion peer includes ip 
peer sends report anonymous 
huge disadvantages 
malicious peers example query trust values attack peers report bad value 
overhead file peer wants download peer poll peers calculate trustworthiness 
polling process takes lot time takes lot resources computation infrastructure 
malicious collectives system defense malicious collectives working 
system mechanisms avoid 
reports received querying trust query clustered ip address 
prevents user multiple pseudonyms ip address report positive values pseudonym controls 
second mechanism impossible run multiple fake witnesses fake ip addresses witness send ip address checked ip address 
resource reputation counters problem 
resources bad reputation won selected download high reputation 
evaluation combination servant reputation resource reputation system 
tackles problems reputation systems pseudonym problems changing identity case bad reputation load balancing see section problems 
system doesn suffer cold start problems new users systems immediately participate system offer known resources 
usually system doesn suffer cold start easy spread malicious content malicious nodes 
easily switch new identity gained high reputation repeatedly spread malicious content 
isn case resource reputation solves problem 
resource reputation advantage load balancing possible 
resource reputation safely downloaded peer peers high reputation 
disadvantage described earlier anonymity paragraph system lot interesting 
issue solved usability significantly increase 
privacy enhanced reputation system privacy enhanced reputation system described works similar 
generates similar reputation peer experiences peers peer 
describe precise working reputation system implemented top existing peer peer systems 
focuses way trusted computing tc improve security reliability reputation system 
tc provide way ensure recommendations correct recommender software requester tamper 
tc ensures reputation software altered 
trust model trust values confidence vectors number categories 
multiple categories general trust available 
trust values range 
trust value peer means recommender bad experiences peer haven experiences 
easy obtain new pseudonym 
confidence vector store meta information 
judge quality trust values 
discussion self policing peers run system help supervision third party system self policing 
anonymity peers identified pseudonyms anonymity peers system high 
overhead peer wants download file tries calculate trust values 
sends trust query peers thinks information peer isn calculate trust value 
better solution approach reduces amount queries sent network 
won improve performance new peers don information peers 
reputation updates download finished take lot calculations 
malicious collectives issue isn addressed system 
article focuses privacy peers protection recommendations tc 
didn implement protection malicious collectives didn describe focus tc 
evaluation tc contribute reputation systems 
ensure software runs system reliable information peers trusted sense isn tampered peers 
tc requires extra hardware huge drawback computers consumers don posses hardware standard 
problem 
reputation trust management reputation system introduced uses trust vectors 
binary vectors bits 
peer stores peer interacted trust vector 
trust vector represents honest transaction represents dishonest 
new results written significant bit shifting bits right 
trust vector calculate trust rating distrust rating 
done dividing trust vector trust rating dividing complement trust vector distrust rating number significant bits stored vector 
peers respond query grouped file hashes provided 
furthermore group trust coefficient calculated 
group highest trust coefficient group best fit query relatively safe download 
trust coefficient group calculated average local trust ratings top trusted peers group 
trust ratings locally available trust query issued randomly selected peers group 
number randomly selected peers minus number available trust ratings 
responses query include trust distrust ratings 
values weighted credibility rating peer provided 
credibility rating calculated credibility vectors 
credibility vectors similar trust vectors represents successful recommendation unsuccessful 
trust vectors updated download judging downloaded file 
successful download added 
credibility vectors updated download 
recommendations success gave value line way trust vector updated unsuccessful 
negative recommendation success download wasn success positive recommendation success download success 
discussion self policing system self policing need third party initialize run system 
anonymity peers system identified pseudonyms anonymity system relatively high 
overhead amount trust queries sent depends amount peers required base reliable trust value 
high amount huge overload sending messages processing responses messages 
reliability calculated trust value high 
low amount value reliable overhead reduced 
course theoretic 
simulations shown amount peers required reliable trust values set effective 
gain values higher negligible 
peer stores vectors peer interacted 
peer doesn store actual trust value peers 
time trust value needed calculated vectors 
overhead system higher system stores trust values terms calculation 
malicious collectives system protected collaboration malicious nodes comes voting 
done weighing trust value peers reports peer credibility peer 
avoids malicious peers giving high values low values malicious peers won high credibility 
evaluation simulations run authors article show effective system solution provided issues described 
think problem system hasn got solution cold start problem provided 
system hard new peers get high reputation 
trustme protocol anonymous trust management described 
article focuses technique store access trust values anonymous secure way 
assigning trust holding agents tha peer joins network 
done bootstrap server assignments unknown peers new peer 
tha keeps track trust value new peer 
communications tha secure system uses encrypt decrypt messages 
keys generated bootstrap server 
node wants know trust value peer broadcasts trust query 
tha peer receive message respond broadcast includes requested information querying node 
direct connection querying node tha stay anonymous 
encryption response messages ensures came tha 
node finished download file report tha broadcasting proof interaction 
article doesn describe trust values altered tha receiving proof interaction 
discussion self policing peers run system help supervision third party system self policing 
anonymity peers identified pseudonyms 
tha peer unknown peers due broadcast communication direct communication 
derived anonymity system 
overhead due fact trust information sent network encrypted keys overhead terms computation 
hard say overhead researched bottleneck 
overhead system relatively low compared systems 
peer send receive message order get reputation peer 
malicious collectives system peers collaborate boost reputation 
done reputation peers stored tha due fact peers exchange files send positive reports tha 
report affect reputation peer system reputation peer way multiple peers think peer 
system opinion malicious peer credibility opinions 
hard peers boost reputation repeatedly exchanging files filing positive reports 
evaluation system focuses anonymity peers 
uses trust holding agents tha store reputation peers 
tha peer unknown communication broadcasts 
way tha stays attacked way 
system drawbacks 
system relies bootstrap servers peer peer systems don support 
furthermore system weaknesses malicious collectives 
peers collaborate boost reputation 
eigentrust eigentrust reputation system described 
eigentrust uses concept transitive trust 
means peer puts trust opinions peers trusts 
trust values peers give peer peer scaled trust peer puts 
eigentrust reputation system relies distributed hash table dht design 
system peer set peers holds trust values called score managers 
score managers assigned hashing peers identity different algorithms obtain multiple score managers 
peers identified ip address 
trust values score managers manage global trust values calculated local trust values peers put score managers daughter peer 
calculation process uses concept transitive trust 
peer wants know trust value peer simply hashes name gets ids score managers 
query requested values 
discussion self policing peers run system help supervision third party system self policing 
anonymity system ip address identify peer 
hashing ip address identity score managers peer 
reputation system peers score managers 
overhead system reputation score peer stored limited amount places 
peer wants know reputation score peer easily contact score managers peer 
system overhead system lower systems lot messages sent 
malicious collectives eigentrust reputation system stores reputation scores limited amount places 
system suffer problem trustme reputation system 
case 
eigentrust reputation system opinion malicious peer valuable opinion normal peer transitive trust 
hard collaborating peer boost reputation exchanging files filing positive reports score managers 
evaluation eigentrust system works 
reduce amount active malicious peers peer peer network 
system huge disadvantage ensures anonymity peers 
system vulnerable malicious peers 
malicious peers easily find score managers try take dos attack example 
anonymity design goal peer peer network eigentrust system suitable reputation management peer peer systems 
table 
reputation systems comparison pseudonym pseudonym shortcomings pseudonym pseudonym pseudonym anonymity robust malicious collectives little bit unknown 
incentives reputation trust problems peer peer systems face problems free riding 
existing peer peer networks assume peers cooperative 
download data peers assumed share data contribute network 
isn case 
users consumers system contributing 
called free riding 
free riding serious threat peer peer system 
little thought experiment described clear free riding threat consider peer peer system peers 
majority peers free rider files available system shared small collective 
peers share files lose interest system interesting files download 
aren peers share take long peers reach point interesting files leave system 
leaving peer sharing peer amount interesting files decreases take long peers start lose interest 
process continue sharing peers soon system operational 
problem problem caused free riding say system peers peers share files 
simplicity sharing peers share equal amount files equally popular 
average download requests time unit mean peers serve download requests time unit 
smaller higher load peers group 
lead point peers share files leave system cpu overloads 
counter problems interest overload peer topeer system incentives mechanisms 
research incentives mechanisms peer peer systems described section 
states forms incentives mechanisms monetary payments differential service 
form discussed section second form section 
monetary payments incentive mechanism peers paid contribute system pay consume 
reputation system section system described 
system pays peers serving downloads forwarding broadcasts 
pay download content peers scheme 
scheme uses expiration credits peer got paid 
system described reputation system see section isn incentives system penalty peers having low score 
peers credits download content system 
peers high score greater chance selected downloading considering fact cause overload situation peers 
aspects system changed incentives system 
peer share files peer share popular files bring new files popular peers gets credits serving downloads 
get credits shares popular files 
haven incentives systems proposed monetary payments form 
reason designing system faced problems reputation systems credits peer earned form score hard trust values hard check 
scores downloads uploads peers easy peer lie 
counter malicious scores mechanism storing 
example system proposed uses rca system scores stored peers 
design incentives systems harder 
incentive score amount resources peer contributes system peer lie 
amount resources peer shares easily checked 
design scores peer represented credit system peers pay get paid 
peers get better quality service contributing system differential service 
differential service incentives systems differential service peers get better quality service contribution system 
incentive system score calculated amount downloads peer served amount broadcasts forwarded system described 
cause problems reputation systems see section 
easier technique technique checked peers easier way reputation score 
system proposed uses cumulative disk space disk space contribution fixed period time 
peer wants download file peer provide cumulative disk space value 
peer accepts download request peer probability cumulative disk space value 
increase quality service system peer high cumulative disk space higher probability requests accepted 
drawbacks system related fact cumulative disk space disk space fixed time period hard check 
time period example week peer easily lie disk space contributed system start week get high value 
disadvantage system doesn peers share popular files 
system peer contribute lot disk space files wants 
way peer get high probability get files wants really contributing system 
cost peer significant amount cpu power 
mechanisms described provide incentives 
article describes mechanisms reward peers contribute significantly system penalize peers contribute 
mechanism uses amount files peer shares calculate utility value 
utility value represents contribution peer system 
utility value calculated fixed times 
counter free riding proposes limit maximum number files peer download time unit utility value 
disadvantage mechanism hard check amount files peer downloaded system 
disadvantage profitable peer share lot small unpopular files 
advantage system possible check utility value peer requested report files shares 
files checked verify peer really shares 
second mechanism takes files size different files account 
way utility value isn amount files file sizes 
mechanism limits amount peer download utility value 
isn profitable peer share lot files certain size get high utility 
peers share popular files 
third mechanism uses amount files shared sizes files popularity files 
popularity files calculated amount times downloaded 
peer wants download file offering peer checks utility value peer higher size files attempts download 
mechanism peers share files certain size popular 
easy peer lie popularity file 
control mechanism 
peer example asked give names peers downloaded file check really downloaded 
popularity file verified asking peers share file 
system described uses exchange system people contribute system 
request peers participate exchange transfers higher priority peer exchange doesn directly example way exchange see 
non exchange transfers served capacity exchange transfer possible 
means peer wants download file peer better changes request granted files peers interested 
peers share certain amount popular files 
workings system easily checked hard peer lie files offer 
combination reputation system ensure peers don provide fake files incentive mechanism 

way way way exchanges 
identity peer peer systems available today users identified pseudonym 
reason mechanism ensure certain amount anonymity 
anonymity enable censorship resistance freedom speech fear privacy protection design goals peer peer system 
section question answered possible reputation systems incentive mechanisms giving anonymity goal 
reputation systems various reputation systems discussed paragraph 
systems pseudonym identification 
way users maintain anonymity 
system big problem peer peer systems fairly easy create new identities easy malicious nodes change identity continue harm system 
reputation systems try counter designing score system users get score low score new participants 
score system disadvantage system hard build reputation new users 
system proposed system nice solution problems 
reputation system exist reputation mechanisms node reputation resource reputation 
system easy new users gain reputation isn profitable malicious peer switch identity reputation system 
believe research done systems mechanism possible design reputation system works losing anonymity participants system 
incentives incentive mechanisms exist today divided categories monetary payments differential service mechanisms 
described section monetary payments mechanism credit system nodes pay download resources get paid contribute resources system 
differential service mechanisms provide better quality service nodes contribute system 
monetary payments mechanisms useful kind identification 
identity node update credits downloaded contributed 
differential service mechanisms isn need identification system need keep track kind score 
monetary payments mechanism isn profitable node change identity pseudonym identification mechanism works 
don see problem anonymity peers various mechanisms proposed incentives category 

security peer peer systems improved trust reputation systems incentive mechanisms 
trust reputation system provide nice way hard malicious peers abuse system 
malicious peers example peer peer systems spread viruses serving unwanted content 
trust reputation systems locate malicious nodes hard nodes continue activities 
problems identity nodes 
fairly easy nodes switch identities 
reputation scores linked identities nodes 
easy nodes bad reputation switch new identity order start 
reputation system described provides nice solution problem 
system shortcomings 
research focus idea node reputation combined resource reputation 
area incentives lot research 
incentive mechanisms provide way counter free riding problem peer peer systems face 
think focus area solutions differential service form 
differential service incentive mechanisms give nodes contribute system better quality service 
contribution system measured amount resources node contributes system quality resources 
easy check quality amount resources node contributes system node lie contribution 
incentive mechanism exists monetary payments 
mechanism peer gets paid contributing system pay download system 
system kind credit system 
credits peer reflects behavior past 
hard keep track past behavior peer easier peer lie contribution 
think easier safer design differential service mechanisms peer peer systems 
greenwald 
incentive mechanism peer peer file sharing 
proceedings th international conference distributed computing systems icdcs 
basu bawa sun yang cooper crespo daswani ganesan garcia molina kamvar marti 
peer peer research stanford 
acm sigmod record 
bees 
pki security peer peer information sharing 
proceedings fourth ieee international conference peer peer computing 
bi bittorrent internet site 
www bittorrent com 
october subhash 
game theoretic framework incentives systems proceedings third international ieee conference peer peer computing 

waldvogel 
establishing trust distributed storage providers 
proceedings third international ieee conference peer peer computing 

clarke sandberg wiley hong 
freenet distributed anonymous information storage retrieval system 
international workshop design issues unobservability federrath springer 

cox noble 
honor thieves peer peer storage 
proceedings nineteenth acm symposium operating system principles 
damiani de di paraboschi samarati reputation approach choosing reliable resources peer peer networks 
proceedings th conference computer communications security 
daswani garcia molina 
query flood dos attacks gnutella 
proceedings th acm conference computer communications security daswani garcia molina yang 
open problems data sharing peer peer systems 
th international conference database theory 
fiat 
censorship resistant peer peer content addressable networks 
proceedings th annual acm siam symposium discrete algorithms freedman morris 
peer peer anonymizing network layer 
proceedings nd international workshop peer peer systems gupta judge ammar 
reputation system peer peer networks 
th international workshop network operating systems support digital audio video acm 
wiley 
variant chord lookup service censorship resistant peer peer publishing systems 
proceedings second international conference peer peer computing mit faculty club 
ir irtf peer peer group 
www irtf org charter rg group prg october ismail 
beta reputation system 
th bled electronic commerce conference 
ioannidis keromytis 
paying getting paid file storage 
proceedings sixth international conference financial cryptography 
josephson sirer schneider 
peer peer authentication distributed single sign service 
rd international workshop peer search ieice trans 
commun 

ka kazaa internet site 
www kazaa com 
october kamvar schlosser garcia molina eigentrust algorithm reputation management networks 
proceedings twelfth international world wide web conference pearson 
privacy enhanced peer peer reputation system 
proceedings th international conference electronic commerce web technologies volume lncs springer 
marti ganesan garcia molina 
dht routing social links 
rd international workshop peer peer systems 
ngan wallach druschel 
enforcing fair sharing peer peer resources 
second international workshop peer resources 

information leak chord lookup protocol 
proceedings fourth ieee international conference peer peer computing 
past 
effective reputation peer peer environments 
fourth international workshop global peer peer computing 
ramaswamy liu 
new challenge peer peer file sharing systems 
proceedings hawaii international conference system sciences track hicss 
re reputations research network 
databases si umich edu reputations 
september rela lai stoica chuang 
robust incentive techniques peer peer networks 
acm commerce conference 
risson moors 
survey research robust peer peer networks search methods 
report unsw ee university new south wales sydney 
saroiu gummadi gribble 
measurement study peer peer file sharing systems 
proc 
multimedia computing networking 
parkes 
rationality self interest peer peer networks 
second international workshop peer peer systems 
se serjantov anonymizing censorship resistant systems 
proceedings second international conference peer peer computing mit faculty club 

reputation trust management system networks 
fourth international workshop global peer peer computing 
singhal 
security polling protocols peer peer systems 
proceedings fourth ieee international conference peer peer computing zurich 
singh liu 
trustme anonymous management trust relationships decentralized systems 
proceedings third international ieee conference peer topeer computing 
simo sit morris 
security considerations peer peer distributed hash tables 
international workshop peer peer systems iptps 

grid security lessons peer peer systems 
proceedings third international ieee conference peer peer computing 
moukas en maes 
collaborative reputation mechanisms electronic marketplaces 
proceedings nd hawaii international conference system sciences ieee 
