appear acm transactions computer human interaction 
presto experimental architecture fluid interactive document spaces paul dourish keith edwards anthony lamarca michael salisbury computer science laboratory xerox palo alto research center coyote hill road palo alto ca usa dourish lamarca salisbury parc xerox com 
traditional document systems hierarchical filing structures basis organising storing retrieving documents 
structure limited comparison rich varied forms document interaction category management everyday document 
presto prototype document management system providing rich interaction documents meaningful user level document attributes word file published shared jim presto currently progress 
document attributes capture multiple different roles single document play allow users rapidly document space task hand 
provide basis novel document systems design new approaches document management interaction 
article outline motivations approach describe principal components implementation discuss architectural consequences show support new forms interaction large personal document spaces 
categories subject descriptors software engineering tools techniques user interfaces information storage retrieval information storage file organization information storage retrieval information search information interfaces presentation user interfaces interaction styles 
additional key words phrases document management attribute value systems information retrieval direct manipulation 
sitting front computers document space management 
store file organise retrieve information variety electronic document collections 
emergence world wide web spread internet mean documents flow document space day increasing need better tools visualise interact 
tools day rely fundamental mechanism organising document spaces hierarchy 
hierarchies occur sorts document management tools including mail systems contact managers web browsers pervasive filesystem 
documents stored files live directories folders contained directories creating hierarchy provides structure document space interactions 
model difference files documents disappears intents purposes file space document space 
implication structure document space mapped structure file space 
navigation filesystem browsers dialog boxes seen fact navigation semantic structures mapped file hierarchy 
begins search directory titled frame documents progressively move sub directories called publications conference papers uist presto drafts movement seen movement folder search procedure exploits features documents progressively focus smaller smaller set potential documents 
structure search mapped hierarchy provided filesystem hierarchy essentially mechanism provided organise files 
documents files 
documents organisational entities social meaning practical consequences computer files computational artifacts behaviours defined technically 
similarly requirements document space organisation differ managing files 
provide basis organising documents reflects documents working settings supports richer document practices organisation management retrieval 
current research placeless documents project concerns precisely question document space organisation support natural fluid forms interaction document space 
examples sorts problems want address include 
filesystem provides single inheritance structure 
files place time occupy spot semantic structure 
links aliases testament problem time sufficiently complicated extends desktop shortcuts 

conception structure files organised changes time hierarchy fixed rigid 
moving individual files easy large sets files chore 

category structure files change time dependent task 
moment searching particular document want organise document space terms projects time document content 
effectively document retrieval depends able manage multiple different views document space fluidly 

documents stored computer able harness computational power help organise 
computer web document specific pages 
developed system called presto provides infrastructure experimentation issues arisen placeless documents project 
placeless concerned broad range concerns development novel approach document systems infrastructure described detail dourish 
presto concerned subset placeless design issues 
particular presto designed platform explore new forms fluid interaction documents spaces addressing sorts user problems discussed 
follows outline motivations approach describe basic model presto presents 
main body introduce presto architecture discuss supports attribute document interaction legacy novel applications 
discuss learned set applications discuss possibilities 
motivation described inspired rigid inflexible means provided document repositories managing working documents 
traditional model hierarchical directories hopefully mnemonic filenames imposes considerable burdens filing searching retrieval fails take account ways everyday document takes place 
studies filing retrieval practices documented barreau nardi highlight ways traditional mechanisms fail 
barreau nardi draw findings number studies people organise files pcs desktop directory structures 
investigations users employ elaborate deep filing systems show preference simple structures location search exploiting groupings files folders computer desktop express patterns relationships documents aid retrieval 
response barreau nardi article fertig defend deep structure search queries observing location finding user controlled logical search 
clear feature location search adds simple logical search location system documents subject sort pre categorisation 
additional structure introduced space structure exploited search retrieval 
interesting feature location structure exploited perceptually cognitively 
moving burden retrieval effort cognitive perceptual system long direction taken information visualisation research robertson 
approach highly effective information systems rely content extracting information find structure computationally expensive 
presto steer middle course structure retrieval structure cues traditional hierarchies content retrieval extensive feature extraction information visualisation approaches 
tag annotate documents system attributes express attributes documents 
attributes express attributes meaningful user document 
added directly users pre categorisation location search extracted software services content approaches 
critical feature attribute approach captures nature documents 
everyday working documents represent different things different people different ways different times hard fit different uses single structure help shortcuts aliases symbolic links 
want handle document email message want handle presto design document time administrative assistant want organise budget center equipment purchases charged 
capturing multiple features documents may relevant organisation critical feature approach 
corollary need able fluidly switch view document workspace quickly reflect terms structure relevant task hand 
broader goal understand relationship computational naturalistic approaches classification identity grouping membership 
instance investigations sacks emphasise membership categorisation practical accomplishments social actions 
identification entity thing achieved particular individual particular purposes purposes identification quite incorrect 
inspired analytic accounts practice category management interested computational systems allow similarly fluid categorisation 
part wider program research dourish button directly concern 
attribute document interaction placeless documents presto users conceive interact documents terms document attributes 
attributes user level properties documents expressed key value pairs 
instance attributes document include framemaker format journal preparation intended tochi presto 
document may contain attributes stating email message doug meeting times read tuesday 
words document attributes intended capture information meaningful document users creators 
information captured recorded set key value pairs mime type application sender terry parc xerox com 
document attributes form basis interaction document space presto 
documents retrieved indexed organised attributes 
attributes added users presto services store arbitrary information 
document contain number attributes 
document attributes basis queries queries specify live document collections dynamic membership 
way structure document space structure interaction document space meaningful properties documents structure filed 
document attributes way means interaction strongly connected users immediate concerns task hand extrinsic structure 
addition structure document space reflects changes state documents 
mean documents multiple values play multiple roles concurrently 
quite documents phelps wilensky documents content composition multiple components 
simply state filed 
collections appear inside collections standard filing information document ownership modification dates file types preserved system appearing document attributes maintained infrastructure 
way recapture traditional forms structured interaction document spaces 
new forms interaction emerge logical extension traditional practices 
design goals presto prototype exploring attributes uniform mechanism document interaction 
primary goals demonstrate validity approach provide early design experiences inform explorations 
addition set number approximate criteria success 
goal develop system efficient hold document sets numbering thousands robust everyday small set colleagues practical effective primary interface document spaces documents day 
practicality criterion implied system needed interoperate applications regular desktop platforms solaris windows nt 
expressed simply position document system launch word fetch web documents document system 
time decided number issues explicitly concern presto including document replication coordination migration security 
focus moment interaction systems issues 
presto architecture discuss details design consider presto basic architectural model provides support novel forms document interaction 
presto architectural elements shared placeless documents system outlined earlier discuss purely context presto say placeless documents 
presto document model presto provides uniform document model documents sorts 
document entity attributes attached 
attributes arbitrary name value pairs 
arbitrary number ways 
arbitrarily attributes attached document attributes primary means organising retrieving documents principle 
second attributes arbitrary names users add new sorts attributes system heard system impose restrictions access control add attributes 
third attributes arbitrary values 
primarily simple text string values examples presto record structured data item including runnable code attribute values 
note fact document may contain content essentially incidental 
course documents presto provides convenient access content applications naturally focussed content 
content absolute requirement presto implementation attributes content documents associative object storage facility 
users add personal attributes documents people 
wrote mark interesting purposes interfering services presto doc interface java interface filesystem interface legacy apps presto apps java beans imap nfs server presto document object layer local filesystem interactions having see attribute 
just think interesting doesn mean 
achieved document personal objects documents 
appear documents attributes 
documents grouped collections single document appear multiple collections 
document collections documents document features apply 
document collection membership defined statically dynamically 
collections explored detail 
core architecture core architecture presto system shown centre system presto document object layer 
implements presto document model providing documents document attributes 
collections may include dynamic queries type document implemented layer 
document layer exports forms interface 
presto document interface java class api applications fully presto aware 
presto specific applications built interface 
second standard java io stream interface java applications understand presto 
interface integrate java beans provide viewing editing particular document formats instance 
legacy applications completely presto na may written java presto implements network file system nfs server sun microsystems presto database accessed regular filesystem 
applications simply read write filesystem normally nfs interface serves presto documents scenes filesystem operations apply presto documents 
allow legacy applications presto seamlessly allows presto maintain relevant document attributes modification dates activities happen external applications 
background applications integrated presto service component 
presto services applications introduce information system processing structured files order turn content attributes 
example mail service operates electronic mail files pro web networked filesystem database storage presto kernel architecture provides single point interaction supporting multiple application interfaces multiple repository interfaces 
keith view document base document mike view user interacts document see combination local attributes base document attributes 
keith sees mike attributes 
cesses presto documents annotated details email headers document attributes 
services scheduled operate periodically late night minutes act specific events document contents changed 
important feature presto design document content life presto 
presto stores attribute metadata presto calls documents fact internal objects stand content stored 
term repository describe store document content 
normal filesystem example repository stores content associated directly presto documents 
application user reads document presto fetches content external repository separation metadata content invisible presto users 
primary benefit design presto integrate content variety external repositories 
presto applications take advantage documents stored web web supported repositories 
documents processed alongside filesystem documents presto insulates users mechanisms access content documents presto level handled seamlessly 
core presto architecture run time configurations 
run presto document object implementation applications single address space 
configuration presto essentially run time document management library dynamically linked application 
second run presto document object implementation server presto applications clients 
second mode allows presto applications run java applets network computing environments thin client architecture 
applications run seamlessly configuration presto layer encapsulated presto database object may local may fact proxy remote database kernel speak rpc protocol remote presto server 
network architecture ability decompose presto run time configuration client server components basis explicit remote network separation 
recall document model allows users refer users documents record attributes documents 
creates notion document comprising set attributes pointer remote document 
shown document manipulated base document appears base document attributes attributes specific user added 
mechanism users add attributes documents create structures express interests manage criteria 
documents users authors system provides support document user view 
document involve remote connections document spaces managed individual presto kernels 
provide means queries cross spaces 
current approach extended query language allow queries expressed terms user view document local attributes 
addition asking documents interesting return documents tagged interesting author ask documents anthony think interesting perform search includes local attributes anthony document space 
provide basic form collaborative filtering goldberg resnick varian 
implementation time writing prototype presto system comprises approximately lines java code 
includes core network components nfs server services including email html java browsers lisp interpreter scripting 
implementation uses jdbc java database connection talk sql database back attribute metadata user interfaces implemented swing javasoft implementation cross platform java foundation classes 
cross platform nature java means run presto code files pcs running windows nt microsoft access back sun workstations running solaris public domain mysql commercial database oracle back 
overview section intended set context discussions rest 
sections describe presto system detail focussing particular relationship architecture interaction 
separate components system sorts aimed primarily supporting model interaction aimed primarily supporting integration presto system conventional everyday environments 
division absolutely clean helps separate intent elements design 
aspects critical supporting style interaction want system 
support interaction basic motivation explorations presto desire support new form interaction large document spaces 
new approach high level document attributes meaningful users primary resource document typing organisation searching retrieval 
model document attributes provide uniform means express document categories groupings desired behaviour organise search document repositories 
style interaction places number criteria design 
performance document activity managed attributes attribute management fast support interaction direct manipulation 
second coherence focus simply individual documents sets documents 
third criterion perceptual stability attributes document collections subject continual change system constantly changing feet 
criteria reflected design elements architecture deal document attributes 
document layer presto document layer provides uniform model documents metadata attributes 
essentially document layer functions 
unifies access various back repositories single document model 
documents managed uniformly stored 
introduces document attribute mechanism provides means attach remove search arbitrary document attributes single coherent mechanism 
adds unified document collection service document attributes 
collections managed terms presto documents single collection group documents stored heterogeneous repositories 
document layer uses back database service persistent document metadata storage 
implementation talk database service jdbc code independent particular database product 
attribute values simple strings string lists attribute values stored serialised java objects arbitrarily complicated data structures recorded document attributes 
particularly important document attributes record application specific information 
document collections document system organised entirely individual documents best tedious 
interactions presto documents elements document collections 
filesystem documents web documents document collections implemented document type subject operations applied documents including having associated attributes search retrieval members collections 
presto designed act bridge different document worlds local storage remote document services web application specific document management email folders result notion collection needs able capture different grouping modalities document worlds offer simple directories search engines 
implementation document collections comprise elements null 
query term 
query terms specified terms document attributes 
queries test presence absence particular attributes document test specific value attribute perform type specific value comparisons instance wide range date specifications provided changed hours modified week 
query terms document collections live collection contains matching documents moment documents may appear disappear depending immediate state 
queries embodied collections persistent 
addition query term document collection stores lists documents called inclusion exclusion lists 
documents inclusion list returned members collection match query 
documents exclusion list returned members collection match query 
query null inclusion list effectively determines collection contents 
contents collection moment documents inclusion list plus matching query minus exclusion list 
call part structures fluid collections 
goal implementation document collections support natural style document organisation retrieval 
query create initial collection specify default membership 
membership refined having reformulate query direct manipulation document collection contents dragging items collection causes system add inclusion exclusion lists items added removed override results query changes persistent 
browser described detail supports direct manipulation query terms reformulating query fairly straight forward operation 
introduce part mechanism 
simply manipulations collection membership result transformations query 
technical reason approach design decision number factors 
give 
believe specifying exceptions transforming query conceptually different operations approach provides size fits approach 
second believe indirect query transformation breaks direct manipulation model interfaces built 
third believe indirect query transformations hard explain users considerable challenge coherent account behaviour interface requiring detailed understanding query syntax precedence rules forth 
design refined query collection mechanisms suit needs specific applications area ongoing research 
collections queries attributes basis interactions presto document space performance attribute engine key concern development system 
database engine provides sufficiently crisp performance support requirements interactive response 
small test database documents attributes evaluating query mail dourish took ms return documents query mime type text html mime type text java read month took ms return documents 
queries large database documents attributes took ms documents ms documents respectively fast avoid submit query await results model interaction interface updated rapidly give user sense directly exploring data store 
see incorporated interface 
services document repository organised terms document attributes documents attributes 
sources attributes documents 

course simple time searches possible 

times mean runs measured mhz pentium pro workstation 
firstly attributes come users 
allow users attach arbitrary attributes documents create structure 
basic goal system allow users create structures creating sets attributes relevant tasks organise retrieve documents 
value interaction presto comes attributes document 
tiresome tag documents hand 
second mechanism provide means documents tagged attributes automatically 
document attributes generic type length creator date created forth obvious ones maintain directly 
relevant attributes content specific 
instance email message tagged information header contents html file tagged information header document links contains 
presto provides mechanism processing files deriving sort information 
service piece code analyse files way 
provide services common structured file types email messages html documents discussed 
provide specialised complicated services example java service parses java source files encode information packages imports method definitions attributes document 
provide service wrappers pieces software exist outside system 
instance taken document summarisation tool xerox product incorporated presto service model document contents summarised key words sentences available document attributes 
service mechanism route building application specific presto spaces 
example processor understands format internal database summer intern applicants research center application record document tagged applicant skills interests information school degree topics interest forth 
presto system analyse organise applicants 
case application specific processing localised service need presto engine aware application details 
services enhance interaction document space increasing number available attributes document 
services extract attributes documents allows extract content information encode attribute centric document structure bridging content structural approaches 
rely services provide link important responsive changes document content 
services scheduled run various points order keep information date 
services run particular time day doing major processing am particular intervals minutes particular events attribute added document document written 
support integration practical aspect everyday world document systems simply integrated extensible 
system intended provide support organising searching exist ing document spaces existing document spaces employ wide variety formats structures applications 
model interaction original motivation leads new forms document interaction clearly embodied new applications take advantage sorts features presto offer 
time need support existing applications strong requirement system 
order accommodate existing data applications providing development new ones presto offers application interfaces api nfs provides pluggable mechanism integration content repositories 
support native applications api presto document interface provides access documents java objects 
applications interface importing relevant package java code coding api provide accessing documents collections attributes 
standard means build new presto aware applications experiment new interaction models 
supplied browsers see regarded presto applications built level 
presto document interface provides document attribute classes specialised subclasses supporting functionality described collections access www documents applications provide direct view presto documents content specific visualisation provide wholly different interface presto attribute document service back 
discuss applications experience detail 
secondly provide access presto documents java interface 
presto subclass standard java streams model presto functionality available standard java application 
implementation model incorporate java beans images html files provide access document content overhead starting new application 
support legacy applications nfs third level access server implementing nfs protocol 
native nfs server implementation pure java runs top pure java rpc layer 
presto nfs server provides access presto document space nfs client server allow legacy applications microsoft word presto documents pc presto simply looks disk applications unix machines presto looks part standard network filesystem 
critically achieve mechanism presto directly read write path legacy applications 
alternative approach attempt post process files written traditional filesystem applications word changed accommodate presto 
providing filesystem interface directly applications ensure relevant attributes ones record document modified kept date 
application written filesystem presto database remains date presto filesystem 
part interface presto database layer nfs provides access query mechanism 
appropriately formatted directory names interpreted queries appear contain documents returned query similarly semantic file system approach gifford 
implemented largely completeness cd intended presto interface everyday 
presto provides nfs service presto storage layer 
documents live repositories 
nfs layer provides uniform access variety repositories documents available web appear space documents networked file system 
combination uniformity ability update document attributes read write path nfs service key component desired level integration familiar applications presto demo tool working part environment 
mapping document system file system mapping presto document space virtual file space natural mechanism integrating legacy applications introduces number technical problems 
stem fact presto document semantics richer traditional filesystems particular document uniquely identified name location presto filesystem 
presto document may multiple names name may appear places 
applications filesystems storage layer expect able exploit set constraints hold presto 
result nfs implementation go lengths interpret actions filesystem applications understand intended consequences 
consider examples 
document systems adopt stage process save files file lost case write failure disk filling 
order save file foo txt application save contents file called foo tmp 
file written successfully may delete old file named foo txt rename foo tmp foo txt 
way write fail old file contents lost 
procedure relies assumption file name location entire source document identity new file name take place old file 
presto document identity complicated newly created document separate identity 
probably attached attributes document associated new document 
want look document content changed document remained 
presto nfs server achieves essentially detecting sequence behaviour application engaging working scenes restore filesystem invariants longer apply 
presto nfs server receives request delete document delete simply hides 
file written shortly name document name document deleted nfs server swaps old document back updating content new 
effect presto right thing happened application updated content original document application knows presto document model 
second example concerns ancillary files 
applications may store ancillary files original instance word processor want maintain backup files spelling dictionaries linked image files original document store files folder 
presto storing folder straight forward proposition 
original document appear folder instance appear folders statically inclusion dynamically query 
clearly want ancillary files appear collection dynamically hold original document application fail find files associated original document time run 
case presto nfs server interpret application behaviour restore filesystem invariant application expects 
case solution relies fact users invoke operations presto documents filenames presto responsible determining filename application 
user runs application word processor presto document presto creates unique pathname document presto nfs 
filename looks normal folder fact folder name tagged identifier document 
means attempts create new ancillary file result new file request contains name file unique tag identifies base document 
example user invokes operation document filename application sees presto document application ancillary file requests files presto backup presto dictionary 
presto included unique tag path name nfs server knows new file called presto backup associated document application processing document path name 
association rest straightforward 
presto server records association files attributes ancillary documents appear virtual folder 
means application run document virtual folder recreated associated ancillary files appear satisfying application requirement appear presto collections hold document 
support external repositories integration applications need able existing data 
fact presto works existing data 
presto store content 
document objects record association content stored external repository 
internally presto maintains number different document types interact different repositories filesystem documents web documents 
distinctions largely invisible presto users 
user distinction document type see seamless document model documents support operations reading writing adding collections setting properties searching forth 
presto user reads writes document content system automatically fetches content underlying repository stores delivers directly application 
approach allows users documents presto easily 
advantage access protocols different repositories managed level document objects documents mixed fluidly system 
documents appear collection despite fact reside completely different repositories different servers retrieved different protocols 
similarly documents managed uniform attribute operations 
note documents imported presto repositories 
presto intended operate browser filesystem world wide web 
client programs call walk document tree incorporate contents documents presto web document example implicitly incorporated presto space simply speak 
document searches web new documents incorporated presto document space 
goal design able exploit existing content provide new view existing infrastructure 
mechanisms incorporate external content generally placeless documents project current areas investigation 
interacting presto previous sections introduced major elements presto architecture shown support design goals 
presto designed infrastructure framework experimenting interaction aspects attribute document management 
presto applications ones focus users interact documents sorts spaces 
interface features come 
presto includes features centred particular forms user interaction collection design query mechanism designed integrated interactive system 
infrastructure variety interfaces operate 
clearly application introduces particular interactive demands 
basic design presto results number common design issues user interface 
mentioned discussion legacy application support example number traditional constraints invariants familiar filesystem interfaces longer hold system presto 
features felt interface 
section discuss number issues arisen design interfaces presto document space solutions developed 
experimenting number different interfaces presto 
application interfaces designed specific applications presto document storage layer directly interfaces presto 
relatively unconstrained browsers presto document space 
consider particular browser called vista 
vista presto browser vista generic browser presto document spaces 
optimised specific application activity traditional pc desktop gives generalised view document space supporting organisational tasks launching applications 
goal vista explore issues arising direct manipulation presto document space particular users sense direct interaction attributes dynamic collections 
vista uses combination dynamic collections multiple workspaces henderson card allow users switch easily different workspaces config vista prototype presto browser 
addition number documents particular desktop contains closed collections shown piles left opened collections ovals lower portion screen set predefined attributes triangles upper middle 
different tasks different representational structures underlying document corpus 
just presto general uses attributes uniform mechanism document operations vista organised primarily attributes 
attributes control documents cluster group search 
elements vista interface shows vista 
body interface current workspace tabs bottom frame move user workspaces 
workspace area basic entities displayed documents attributes collections piles 
documents displayed individual entities moved deleted launched 
launching document double clicking invokes relevant application editing content 
distinction interface documents content resides different repositories handled seamlessly 
double clicking word document loads content word document stored local disk file server web 
document collections appear forms opened closed 
opened displayed ovals showing documents contain 
closed appear small icons depicting pile documents 
displaying closed collections piles provides natural means give cues size particularly useful fluid collections backed dynamic queries grow shrink independent user activity 
piles inspired prototype done apple mander support casual organisation drove design goal implemented richer features apple piles prototypes including messy neat piles rippling piles search documents 
individual attributes stored browser objects appear desktop attributes triangles labelled names values 
users generic interfaces add new attributes vista allows create sets attributes live attributes control terms dynamic query 
desktop 
different attributes different workspaces workspaces tuned different tasks workspace example set attributes organising publications keep attributes relevant programming tasks 
attributes roles browser interface 
dropped documents add particular attribute document expected 
second individual attributes query terms 
attributes query terms provides direct manipulation queries explore detail 
directly manipulating fluid collections recall presto document model collections contain specific documents including sub collections just folders directories traditional filesystems contain query component specifies dynamic content 
collection specify set query terms dynamic portion collection definition 
documents system match query included collection specifically excluded 
query terms specified traditional dialog box interface direct manipulation attribute objects 
dragging attribute query collection adds list query terms collection 
attribute project presto attribute added documents dropped collection project presto added current set query terms collection 
number attributes added query providing simple conjunction dragging removes query set 
attribute icons representing current set query terms appear circumference collection object shown 
iconic representations query terms dragged query object query updated separate thread 
result queries dynamically respond manipulation query terms real time giving direct sense query configurable filter document space 
important element design direct manipulation queries provide sense directly exploring set possible values traditional submit query await results model attribute searches sufficiently fast response rarely takes second 
effect direct manipulations similar umd dynamic queries ahlberg model currently provide addition deletion query terms modification query term parameters 
important collections query component feel user collections queries 
interactive style browser tries capture grounded manipulation document space creation execution queries 
dynamic response collections addition deletion query terms helps give sense manipulation components collections inclusion exclusion lists help support experience manipulation 
inclusion exclusion lists fluid collections lend feeling stability critical interactive feel trying support 
addition query component dynamically maintains collection contents direct manipulation controls inclusion exclusion lists modify results 
dragging document query collection causes added exclusion list collection 
means won reappear collection time query run happens regularly background 
similarly dragging document collection means added inclusion list included element collection 
mechanism users drop attributes query window create query expresses basic set interests refine result adding removing specific items 
resulting collections feel real entities dynamically executed queries new documents interest turn re added system 
radical changes attribute model introduces interactive experience design interfaces documents appear multiple places time 
model documents members multiple collections time collections display document concurrently 
performing search returns document displayed screen result appearing twice care taken design interface ensure problem adding document collection appears notion document multiple places tends upset intuitions facilities added interface 
instance nice able draw lines icons illustrate relationships linked documents document appear screen multiple times stable unique notion icon document display relationships quickly turns dense tangled web 
part inherent structure domain vista allows documents appear multiple places workspace 
attempts allow single document appear twice context background pane collection 
activity interface vista incorporates workspace approach similar rooms users switch back forth different workspaces persistent view document store 
workspace different desktop provides interface underlying database search instance return set documents matter desktop launches 
workspace model designed manage different document corpora different activities users perform documents 
workspaces customised different activities setting dynamic collections attributes reflect way documents organised handle tasks activity 
example papers workspace user arranged set collections dynamically select documents attributes conference year venue topic workspace couple collections predefined common queries attributes available new queries constructed quickly drag drop approach 
workspace organised projects set allow quick easy access documents project needs projects associated current state 
course documents available workspace reflect different ways user want approach documents different activities need perform 
workspace users create new collections move documents assign new attributes perform queries traditional direct manipulation techniques 
providing lightweight facilities move workspace provides way manage overlapping organisations document collections 
approaches exploring variety styles interaction documents presto vista simply example 
interfaces provided different facilities emphasised approach 
design goals enable exploration different interactive design approaches 
addition generic browser interfaces developed applications incorporate interactive features part exploration new ways attribute document management 
experiences applications firmly believe best way learn experimental artifact presto put working projects parc explore infrastructure 
discuss specific projects working dourish 
focus particularly lessons learned 
particular feature presto applications far reflect duality presto conceptual design 
duality presto document system object system 
clearly presto stores documents groups collections allows users read write content conventional desktop applications word powerpoint photoshop 
user experience presto document system 
hand provides means associate arbitrary data directly documents attribute mechanism 
programmer experience closer simple object system 
object system perspective results new model application development 
application data tends stored directly documents separate configuration files application databases 
application data moved documents application managing application functionality moved mapping dynamic collections queries document attributes 
results model exploded applications state behaviour distributed document space 
example consider email application 
conventional approach wanted build email application write monolithic system capable reading mail information server protocol pop imap presenting individual messages users managing set folders providing search facilities message headers storing private information messages read replied forwarded 
implemented top presto takes different feel 
access imap server provided presto facility interacting directly different document storage repositories 
individual messages directly manipulable presto documents 
information activities messages filed processed recorded document attributes 
turn allows dynamic collections defined automatic categorisation folders 
time application specific service provided presto annotate document information headers email specific searches performed generic search mechanism 
words application case set small individual components bridge specifics application domain generic facilities provided presto infrastructure 
related discussed related course introducing various aspects system relationship research deserves examination 
alluded domain information retrieval visualisation investigating user centered organisation document spaces 
instance bead chalmers uses landscape metaphor relative document positions derived content similarity metrics 
bead support presto user imposed structures 
systems domain operate basis content 
lifestreams system originally developed yale freeman fertig uses timeline major organisational resource managing document spaces 
approach lifestreams inspired problems standard single inheritance file hierarchy seeks contextual information guide document retrieval 
approach lifestreams replaces superordinate aspect document location hierarchy location timeline 
semantic file system gifford introduces notion virtual directories implemented dynamic queries databases document characteristics 
goal integrate associating search retrieval mechanism conventional unix filesystem 
addition query engine supports arbitrary transducers generate data tables different sorts files 
nfs server implementation presto essentially provides sort functionality provided semantic file system 
gifford colleagues largely concerned direct integration filesystem extend richness command line programming interfaces introduced interface features file name query language syntax 
contrast concern attribute system day day interfaces revised augmented deal fact presto acts filesystem simply order support legacy filesystem applications 
dlite stanford digital libraries integrated task environment user interface accessing digital library resources cousins 
dlite explicitly reifies queries search engines order provide users direct access dynamic collections 
goal dlite provide unified interface variety search engines create new models searching retrieval 
queries dlite independent particular search engines integrated collections uniform organisational mechanism presto interfaces 
developers dlite strongly inspired influenced ideas developed expressed various generations self user interface chang ungar maloney smith 
particular concern providing concrete interactive experience share 
discussion directions presto early prototype process development 
currently engaged developments infrastructure interface 
investigating ways enriching interactive experience 
support working directly documents space critical supported incorporating thumbnail images intermediate forms document collections reveal details documents 
interested adopting aspects apple piles prototype pile convey aspects accumulation documents 
developing mechanisms presto support creation toolsets particular tasks allowing users create customised sets queries attributes magic lenses bier provide potential vehicle managing interface 
similarly trying understand better relationship presto infrastructure applications developed deployed top 
discussed presto serve different roles applications challenge intuitions structure applications 
number application development efforts currently way explore relationship different ways 
applications provide opportunity understand people attribute document management system 
design driven set intuitions developed literature electronic documents currently active area research see example sellen harper adler bellotti 
part strategy developing applications deployment environment study role document attributes play line document management 
working groups parc jointly develop task specific applications presto infrastructure 
project instance especially interested applications introduce structure attribute value space coordinate sharing manipulation structure describes task specific categorisations document corpora dourish 
draws previous investigations collaborative nature customisation activity maclean trigg current ethnographic investigations document practices trigg 
general goal understand attribute interaction central part user experience managing organising document spaces 
presto infrastructure testbed directed goal continue develop learn new model system interaction 
goals pursued context larger project called placeless documents presto component 
presto essentially prototype implementation subset functionality placeless documents 
significant features placeless documents adds presto robust scalable distributed architecture second active properties 
contrast static attributes provided presto active properties carry code executed operations performed documents active properties attached 
way users placeless documents infrastructure properties organise manage files described customise behaviour configure document services 
extending presto document management service support active properties addition static attributes introduces number technical challenges describe approach current implementation dourish 
documents real world serve different purposes different times different people systems provide people store organise electronic documents typically rigid uniform hierarchies 
placeless documents project investigating document storage management infrastructure document attributes names locations 
model users interact document sets terms high level attributes capture aspects documents meaningful everyday activities provided fluidly managed users 
presto experimental system explore issues attribute document management system placeless documents organised entirely attributes 
presto document repository provides uniform coordinated access variety repositories networked world wide web 
presto provides means organise search document spaces terms document attributes 
attributes play intermediate role traditional structure retrieval schemes extensive contentbased approaches presto services relevant aspects document content handled attributes query terms collection criteria 
presto architecture designed fast fluid access document spaces organised dynamically attributes developed particularly explore interactional consequences attribute centric approach 
presto serves roles 
role proof concept design attribute document space management 
capacity successful 
presto clearly demonstrates attribute oriented mechanism document sets numbering thousands responsive support direct interaction service mechanism integrates system manipulated user manipulated attributes flexibly allow part document space organisation integrating attribute queries enhanced fluid collections gives concrete malleable basis document space organisation interaction 
presto number projects laboratory supporting traditional document management activities fluid interactive applications 
presto second role scouting expedition attribute document systems 
capacity learned number valuable lessons including value document object duality relationship document system filesystems mechanism support legacy applications number interface design concerns arise specifically attributes primary means document interaction 
initial experiences presto extremely positive course simply step 
collaboration colleagues currently developing research program directions 
infrastructure level working development second generation system document attributes control manage wider range document activities distributed setting 
time considering specialise form interaction particular tasks particular domains developing presto tools range specific tasks activities 
hope investigations ground investigations novel form document space interaction 
acknowledgments people contributed development ideas 
particularly members placeless documents group john lamping karin petersen doug terry jim thornton significant contributions described 
early presto customers sense adventure 

annette adler beverly harrison hara abigail sellen diary study related reading design implications digital reading devices proc 
acm conference human factors computing systems chi los angeles california may 

christopher ahlberg christopher williamson ben schneiderman dynamic queries implementation evaluation proc 
acm conf 
human factors computing systems chi monterey ca may 

deborah barreau bonnie nardi finding reminding file organization desktop sigchi bulletin july 

victoria bellotti annette adler sara bly cracks document practices networked professional workplace xerox parc report 

eric bier maureen stone ken pier william buxton tony derose toolglass magic lenses see interface proc 
siggraph anaheim ca august 

matthew chalmers landscape metaphor represent corpus documents proc 
european conference spatial information theory september 

bay wei chang david ungar animation cartoons user interface proc 
acm symposium user interface software technology uist atlanta ga 

steve cousins andreas paepcke terry winograd eric bier ken pier digital library integrated task environment technical report wp stanford digital libraries project palo alto ca 

paul dourish graham button drawing foundational relationships interactive system design human computer interaction 

paul dourish keith edwards anthony lamarca john lamping karin petersen michael salisbury douglas terry james thornton extending document management systems active properties xerox parc report submitted acm transactions information systems 

paul dourish keith edwards anthony lamarca michael salisbury properties uniform interaction presto document system proc 
acm symposium user interface software technology uist asheville nc 

paul dourish john lamping tom rodden building bridges customisation mutual intelligibility shared category management xerox parc report palo alto ca 

scott fertig eric freeman david gelernter finding reminding reconsidered sigchi bulletin january 

eric freeman scott fertig lifestreams organizing electronic life aaai fall symposium ai applications knowledge navigation retrieval cambridge ma november 

david gifford pierre jouvelot mark sheldon james toole semantic file systems proc 
thirteenth acm symposium operating systems principles pacific grove ca october 

david goldberg david nichols brian oki douglas terry collaborative filtering weave information tapestry communications acm december 

austin henderson stuart card rooms multiple virtual workspaces reduce space contention window graphical interface acm transactions graphics 

david karger lynn andrea stein haystack user information environments technical report mit artificial intelligence laboratory cambridge ma february 

allan maclean kathleen carter thomas moran lennart user tailorable systems pressing issues buttons proc 
acm conf 
human factors computing systems chi seattle washington april 

richard mander salomon yin yin wong pile metaphor supporting casual organization information proc 
acm conf 
human factors computing systems chi monterey ca may 

tom malone people organize desks 
implications design office information systems acm transactions office information systems january 

john maloney randy smith directness liveness morphic user interface construction environment proc 
acm symposium user interface software technology uist pittsburgh pa 

thomas phelps robert wilensky active extensible networked documents architecture applications proc 
acm conf 
digital libraries dl bethesda md march 

paul resnick hal varian eds recommender systems special issue communications acm 

george robertson stuart card jock mackinlay information visualization interactive animation communications acm april 

harvey sacks lectures conversation jefferson ed blackwell cambridge ma 

abigail sellen richard harper analytic resource design new technologies proc 
acm conference human factors computing systems chi atlanta georgia april 

randy trigg susanne implementation design tailoring emergence cscw proc 
acm conference computer supported cooperative cscw chapel hill north carolina october 

randy trigg lucy suchman moving document collections online evolution shared repository proc 
european conference computer supported cooperative ecscw copenhagen denmark september 

sun microsystems network file system protocol specification rfc ddn network information center sri international menlo park ca march 

