web metasearch rank vs score rank aggregation methods elena cnr area della ricerca del cnr pisa italy iei pi cnr set rankings task ranking fusion problem combining lists way optimize performance combination 
ranking fusion problem encountered situations metasearch prominent 
deals problem combining result lists returned multiple search engines response query item result list ordered respect search engine relevance score 
ranking fusion methods proposed literature 
classified rely rank ii rely score iii require training data 
contributions report experimental results markov chain rank methods large experimental tests ii believed rank method named borda count competitive score methods show true metasearch iii show markov chain methods compete score methods 
especially important context metasearch scores usually available search engines 
categories subject descriptors information storage retrieval information search retrieval retrieval models information storage retrieval systems software performance evaluation efficiency effectiveness keywords meta search rank list aggregation funded european community context project ist information societies technology programme 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sac melbourne florida usa copyright acm 
cnr area della ricerca del cnr pisa italy iei pi cnr 
problem rank fusion problem computing consensus ranking individual ranking preferences ranking linear ordering set items judges 
ranking fusion problem encountered situations prominent metasearch deals problem combining result lists returned multiple search engines response query item result list ordered respect search engine relevance score 
search engines certainly help users locating information relevant user information need number deficiencies indexing web data time space consuming task 
content web changes rapidly search engine set tradeoff coverage number web documents indexed web update frequency time occurs subsequent re indexing complete database 
large indexes search engine re indexes small subset available documents www ii information sources proprietary information sources digital libraries editors admit gathering documents 
essentially databases indexed search engines 
way search information digital libraries rely search services provided iii search engines advertisers pay higher rank search results called pay placement consequently average loss precision iv search engines subject spamming search engine page index query ranks page highly :10.1.1.28.8702
limitations listed led metasearch engines aim alleviating user improve retrieval effectiveness 
ideal scenario ranking fusion judge search engine gives complete ordering alternative items universe alternatives 
unfortunately metasearch far unrealistic reasons coverage search engines different ii search engines limit access top ranked items ordering 
method rank aggregation www acm org dl www ieee org www elsevier com www goto com www com example see metacrawler savvysearch inquirus profusion 
web application capable dealing fact limited number entries ranking available 
course overlap rankings isn fusion method 
challenge design ranking fusion methods limited non trivial overlap top hundreds thousands items ranking 
ranking fusion methods proposed literature :10.1.1.46.8448:10.1.1.28.8702
major distinction methods classified rely rank ii rely score iii require training data 
preliminary experimental results indicate score methods outperform rank methods methods training data perform better training data 
compare rank score methods training data context metasearch 
particular contributions report experimental results rank method markov chains large experimental tests ii believed rank method named borda count competitive score methods show true metasearch iii show markov chain methods compete score methods 
result especially important context metasearch scores usually available search engines 
review various approaches ranking fusion problem 
section experimental results 
section concludes directions research 

ranking fusion methods exist various methods merging rank ordered lists 
basically information readily available ranked lists items 
cases strategies relies information ordinal rank assigned item rank list ii score assigned item rank list 
score methods items ranked order assigned scores rank lists transformation scores rank merging methods items ranked order assigned ranks rank lists transformation ranks :10.1.1.50.9938:10.1.1.28.8702
orthogonal distinction rank fusion methods methods rely training data bayes fuse method linear combination method preference rank combination method 
class methods content ranked items 
methods ranked documents downloaded analysed order produce final ranking 
address 
preliminaries basic definitions see uniform way methods :10.1.1.28.8702
set items called universe 
rank list simply ranking ordering subset xk xi ordering relation written denote position rank highly ranked preferred element low numbered position list 
assigning unique identifier loss generality assume 

may distinguish cases contains elements said full list 
fact full list total ordering permutation 
instance set indexed pages search engine get full list rank pages say similarity query issued user ii cases full lists convenient possible 
instance denote set web pages world 
denote results search engine response fixed query 
query induce total ordering pages indexed search engine index set search engine surely subset strict inequality 
lists rank elements called partial lists iii special case partial lists 
set pages indexed search engine corresponds top say results search engine query clearly pages list assumed ranked search engine 
lists called top rank lists size list 
denote real valued score assigned item rank list 
loss generality assume higher score better rank item score provided undefined 
assume score provided items rank list score provided 
rank list scores called scored rank list 
indicate normalised weight item ranked list 
computed methods 
consider set rank lists denote union items occurring definition normalisation methods 
normalised weight item defined follows score normalisation item maxj score normalisation item mean scores standard deviation rank normalisation item borda rank normalisation item normalisation methods scores assume items different score rank list 
assign 
furthermore note monotone increasing 
score normalisation top ranked item normalised weight bottom ranked item normalised weight 
case rank normalisation evenly distributed true score case 
difference weight subsequent ranked items 
top ranked item normalised rank weight bottom ranked item weight 
borda rank normalisation method normalisation methods depend additionally explanation necessary borda rank normalisation method 
full list normalised borda rank weight coincides normalised rank weight 
case partial lists difference 
fact case normalised rank weight weight decreases factor borda rank normalisation case factor 
consequence distribution ranked items equal lists furthermore normalised rank weight assign value unranked items borda rank normalisation items left unranked remaining weights divided evenly unranked candidates 
formally ideas borda see borda weight assigned item ranked 
normalising weight get 
case item ranked weight assigned evenly distribution 
rank items 
remaining sum borda weights distributed evenly items gives weight item 
normalisation 
normalisation usually applied merging rank lists order uniform score distributions 
normalisation allows capture unique framework different fusion methods 
important concept ranking fusion methods notion rank hits introduced 
ranking fusion method context information retrieval assumption search engines retrieve document document may considered relevant query ranked higher 
assumption rephrased context partial rank lists rank item higher item ranked fused list 
definition rank hits 
consider set rankings denote union items occurring item rank hits denoted 
fusion methods section ranking fusion methods analyse 
consider set rankings 

denote union items 

indicate ranking called fused ranking fused rank list result rank fusion method applied rank lists order fully specify sufficient determine score called fused score item ordered decreasing values say fused rankings result fusion methods equal iff say equivalent iff ordering 
course equality implies equivalence vice versa 
linear combination methods fox shaw lee ranking fusion methods unweighted min max sum item normalised score 
lee additionally addressed case rank considered place score 
interesting methods listed combsum combmnz test results combmnz considered best ranking fusion method performed slightly better combsum 
essentially combmnz fact lee experiments different search engines return similar sets relevant documents retrieve different sets non relevant documents 
combmnz combination function heavily weights common documents 
methods rankings priority 
obvious extension combination method introduce preference weight associated rank ings 
instance vogt proposed linearly combine score normalised weights fused score item 
note proposed model requires training data determine weight results achieved specific cases technique shown produce reliable improvement 
may generalise methods follows 
definition linear combination method 
linear combination ranking fusion methods fused score item defined rank lists normalised normalisation method ii indicates hits counted iii indicates priority rank list 
assume constant value rank list priority training data considered 
identify methods combination function value formula identifies normalisation method stands rank normalisation stands score normalisation stands score normalisation stands borda normalisation 
instance label indicates fusion method equation hits counted score normalisation applied 
borda count 
borda method voting method ranks assigns weight corresponding ranks candidate appears voter ranked list 
computationally easy implemented linear time 
borda count bc method considered context rank fusion problem works follows 
voter ranks fixed set candidates extension weighted linear combination combination methods definition immediate 
order preference 
voter top ranked candidate points second ranked candidate points 
candidates left unranked voter remaining points divided evenly unranked candidates 
candidates ranked decreasing order total points see 
formally method equivalent item rank list consider borda normalised weight definition 
fused rank list ordered borda score borda score item defined consequently bc equivalent combsum method combined borda rank normalisation 
aslam montague consider weighted borda count place sum normalised borda weights linear combination weights considered linear combination method 
markov chain methods interesting approach rank fusion proposed markov chains :10.1.1.28.8702
homogeneous markov chain system specified set states 
non negative stochastic sum row matrix system begins start state step moves state state 
transition guided step system state moves state probability mij 
current state probability distribution probability distribution state product vector representing current state distribution general start state system chosen distribution usually uniform distribution steps state system distributed xm conditions discuss irrespective start distribution system eventually reaches unique fixed point state distribution change steps may suffice 
distribution called stationary distribution 
shown stationary distribution principal left eigenvector ym practice simple power iteration algorithm quickly obtain reasonable approximation entries define natural ordering call ordering markov chain ordering application markov chains rank fusion problem follows 
set states corresponds list candidates ranked set items 

transition probabilities depend way 
see 
markov chain ordering specific markov chains mc proposed mc current state item state chosen uniformly multiset items ranked higher equal ranking ranked chose state uniformly multiset mc current state item state chosen picking ranking uniformly :10.1.1.28.8702
containing picking item uniformly set mc current state item state chosen follows pick ranking uniformly 
containing uniformly pick item ranked 
go stay mc current state item state chosen follows pick item uniformly majority lists ranked go stay note markov chain methods rely comparison ranks consider scores hits 
example illustrating markov chain methods 
example 
consider rankings items rank lists shown transition matrixes cases mc mc mc mc matrixes respectively 
item item item item show example computations matrix entries 
remember ij probability current state represented item state represented item 
qc 
probability picking uniformly elements probability picking item 

probability picking uniformly rank list containing item 
selected 
probability picking item 
similarly qc 

probability picking uniformly rank list containing item 
probability uniformly picking item rank list 
holds 

probability picking uniformly item 
additionally consider table item entry aij table count lists rankings item ranked better item lists majority threshold 
probability item step stay document 
respectively cases move away item case stay item 
consequently 
fused rank list rank set markov chain ordering 

shown cases 

experiments experiments aims compare ranking fusion methods context metasearch training data 
data sets systems submitted annual text retrieval conference trec 
trec offers large standard data sets rank lists ready fused 
usually year large document data base list queries 
ad hoc web information retrieval contest system index document base provide trec organisation query top ranked documents queries rank lists provide pool documents 
document evaluated humans relevant manual step system evaluated terms effectiveness average precision computed 
evaluate fusion methods context web metasearch considered web results trec trec trec rank lists related world wide web engines 
furthermore trec divided short category identify trec non short identified trec 
summary rely results data sets 
considered top performing rank lists rank list system considered list shown trec ok inq mds ct att wm cl iit wt dcu web trec wcs hum te ric iit atn apl sab web base cwi trec iit ric dpn mw hum pir sab web apl trec iit ok csiro hum apl wd experimental setup method examine effectiveness fusion methods follows 
experiment applied trec trec trec trec individually 
trec data point average trials 
trial performed follows randomly select set rank lists trec apply fusion methods record average precision fused rank lists 
experiment designed compare trec nist gov may happen contender submitted different runs 
consider best run 
rank list id average precision shown 
fusion methods 
fusion methods tested constant 
concerning mci slightly modified assuming ranked item ranked better unranked item 
experimental results results experiments reported tables 
method values row indicates average precision trials group 
concerning linear combination fusion methods established 
methods ranks methods count hits perform better counting hits 
result surprising believed counting hits yields better performance avg mc mc mc mc table trec experimental results 
avg mc mc mc mc table trec experimental results 
avg mc mc mc mc table trec experimental results 

methods scores substantial difference methods count avg mc mc mc mc table trec experimental results 
hits count hits 
counting hits improve performance metasearch 
score normalisation performs clearly better normalisation 
rank normalisation performs better borda rank normalisation particular performs better bc method 
bc showed promising early experiments works worse metasearch 
method score normalisation counting hits wins tests average precision substantially equal 
method rank normalisation counting hits may considered winner wins tests average precision highest rank methods 
methods wins method trec close terms wins clearly terms average precision 
table contains average precision tests 
method mc mc mc mc avg method avg table average precision tests 
markov chain methods observe 
clear winner 
mc mc twice average precision appreciably different 
markov chain methods win times average precisions mc mc clearly better rank combination methods 
average precisions mc mc comparable 
may summarize results context metasearch follows 
counting hits improve effectiveness significantly 
additionally shown contrary usually assumed rank methods markov chain methods performance comparable score methods 
especially important context metasearch scores usually available search engines 
worth noting markov chain methods rely hits rely rank comparisons 
directions research currently investigating verify markov chain methods perform contexts testing trec results ii investigate performance methods training data available 

aslam mark montague 
models metasearch 
acm sigir pages 
borda 
sur les au 
de acad mie royal des sciences 
sergey brin lawrence page 
anatomy large scale hypertextual web search engine 
computer networks isdn systems 
jamie callan lu bruce croft 
searching distribute collections inference networks 
acm sigir pages 
nick craswell david hawking paul thistlewaite 
merging results isolated search engines 
th australian database conf 
daniel dreilinger adele howe 
experiences selecting search engines metasearch 
acm transactions information systems 
cynthia dwork ravi kumar moni sivakumar :10.1.1.28.8702
rank aggregation methods web 
th international conf 
world wide web pages 
acm press addison wesley 
ronald fagin edward wimmers 
incorporating user preferences multimedia queries 
proc 
th international conf 
database theory lncs 
joseph fox edward shaw 
combination multiple sources trec interactive track matrix experiment 
acm sigir 
susan gauch wang mario gomez 
profusion intelligent fusion multiple distributed search engines 
volume pages 
steve lawrence lee giles 
inquirus neci meta search engine 
computer networks isdn systems 
ho lee 
analysis multiple evidence combination 
acm sigir pages 
manmatha feng 
modeling score distributions combining outputs search engines 
acm sigir pages 

mathematics voting democratic symmetry 
economist march 
gerard salton michael mcgill 
modern information retrieval 
addison wesley publ 

selberg etzioni 
metacrawler architecture resource aggregation web 
ieee expert january february 
christopher vogt garrison cottrell 
fusion linear combination scores 
information retrieval 
ellen voorhees narendra gupta ben laird 
collection fusion problem 
harman editor proc 
rd text retrieval trec number 
national institute standards technology 
ronald yager 
fusion documents multiple collection information retrieval systems 
journal american society information science 
