group therapy systems link attestations manage failures michael freedman ion stoica david mazi res scott shenker new york university berkeley stanford university managing failures configuring systems properly critical importance robust distributed services 
unfortunately protocols offering strong fault tolerance guarantees generally costly insensitive performance criteria 
system management practice ad hoc ill defined leading utilized capacity adverse effects poorly behaving machines 
proposes new abstraction called groups la groups building robust distributed systems 
developers specify application level correctness conditions performance requirements nodes 
nodes acceptability small groups nodes digitally signed link attestations apply link state protocol determine group relationships 
exposing attestation graph la groups enable application informed decisions level fault tolerance security performance improve properties fluidly partitioning large scale systems small better suited groups 
demonstrate la groups benefit systems outline designs applications structured overlay routing multicast file sharing worm containment robust various failures 
main challenges building internet scale distributed systems handling failure 
traditional systems composed fixed set potential machines single administrative realm 
setting nodes fail system compensate masking fault nodes repaired 
protocols bft state machine replication systems tolerate malicious failures long fraction failed nodes remains sufficiently low :10.1.1.127.6130
unfortunately scale internet fixed set potential participant machines guarantee failed nodes eventually repaired 
system afford quadratic communications cost na bft meaningful way reason fraction faulty nodes 
applications globally correct notion failure 
example face network partition sense collaborative spam filtering worm detection system continue operating nodes partition considering set failed 
attempt mask failures argue internet scale systems expose failure behavior nodes higher level applications 
applications turn structure node depends critically nodes considers reliable 
introduce abstraction called link attestation groups la groups 
basic idea apply link state protocol determine trust relationships small groups machines participating potentially larger overlay network 
simplest case la groups simply track network connectivity liveness allow applications avoid problems caused non transitive routing 
generally la groups applicationspecific notion reliability correctness map pairs nodes consider reliable 
nodes acceptability digitally signed link attestations allowing nodes prove trust paths nodes 
section describes la groups abstraction 
discuss potential application la groups problems non transitive routing structured routing overlays grouping connected nodes endsystem multicast distributed worm detection filtering 
discuss related conclude 
group oriented monitoring consider systems group abstraction applied 
large scale systems naturally decompose small groups times system designers embed groups seemingly flat systems achieve desired fault tolerance performance properties 
particular group nodes actively monitor neighbors attest behavior 
link attestations shared group members node generate directed attestation graph describing relationship known pairs nodes group management operations groupid create void join groupid nodeid cb bool current view group attestations groupid groups node groupid nodeid node groupid nodeid void groupid cb node attest correctness nodes void groupid nodeid info void groupid nodeid la groups api group 
directed edge exist nodes nodes directly communicate behaving unacceptably application criteria 
set nodes reached node attestation links called view 
expect groups scale tens nodes 
possessing attestation graph powerful tool system management 
attestation may carry application specific information basic graph properties generalized link information represented unit costs 
consider various systems graph properties achieve desired goal quorum systems ensure fault tolerance requiring graph minimum vertex cut quorum threshold 
secure gossiping protocols decentralized key distribution require multiple vertex disjoint paths 
structured routing overlays benefit components 
multicast systems optimize message transmission shortest path maxflow algorithms 
worm spam filtering graph encode trust relationships 
la groups assume nodes digital signatures authenticate communication clocks mutually acceptable nodes loosely synchronized 
la groups designed internet communication asynchronous unreliable nodes may crash behave arbitrarily time due software bugs misconfiguration malicious intent 
la groups abstraction section describe la group interface group membership attestation model 
lists proposed api la groups 
node create new group associated new globally unique identifier random bit value 
node attempts asynchronously join group certain specified members notified callback completion 
join succeeds node received attestation group member 
api provides functions group membership information groups node belongs valid attestations node group 
attestations include node id example network address cryptographic hash public key optional application specific info node 
info may include example node observed throughput uptime 
specify api returns node attestation reflect signature freshness verification transparently handled la groups layer 
node reconstruct entire directed attestation graph recursive calls attestations interface 
node register notified loses attestation group member 
api provides stateful management interface node start subsequently correctness 
application writers employ arbitrarily complex failure tests general liveness performance target checking cryptographic data verification anomaly voting detection invalid responses 
nodes fail tests pass case pending members application simply records state change la groups api 
la groups provide api support popular properties attestation graphs info represented unit cost 
common properties include shortest path node number vertex disjoint paths length max flow min cut subgraph strongly connected subgraphs clustering coefficient section includes applications properties 
refreshing disseminating verifying attestations occurs transparently application 
long application group member la groups layer resend fresh attestation ta seconds ta period attestation valid 
liveness checking requires continuous communication place attestations may piggybacked existing messages 
attestations membership transcripts 
fundamental building block la groups attestation 
attestation comprised group identifier identity optional info expiration time generated ta 
attestation signed private signature key 
la groups allow nodes demonstrate attestations group non members membership transcripts 
membership transcript size comprised attestations 
verify membership tran attestation graph flood attestation join attempt testing new node managing attestation graph script node checks signatures valid attestations expired 
basic scheme requires signature verifications 
describe cryptographic optimization section decrease length cost single signature 
require special public key distribution system 
la groups designed environments 
described node id may simply node network address cryptographic hash public key 
course la groups preclude key management approaches certificate authority trusted band distribution 
note symmetric key message authentication codes macs authenticate communication directly connected nodes performance optimization benefit densely connected networks 
specifically node need necessarily verify signed link attestations receives neighbor nodes previously negotiated mac key instance exchange attestations 
views link state announcements 
la groups provide weak consistency groups 
node view defined directed attestation graph rooted call node node added node group view soon receives valid attestation existing node view 
words exists attestation path techniques ensure attestation changes reflected nodes views timely manner 
expiration time attestations bounds period attestations may stale ta 
second la groups uses link state protocol actively disseminate attestations group members 
demonstrates la groups membership attestation dissemination protocols 
fig 
shows underlying attestation graph solid arrow drawn node group member 
node part clique nodes link stub node fig 
new node joins sending attestation existing group member begins monitoring shown dotted arrow fig 
proceeds propagate link state announcement reachable nodes attestation graph 
omit describing various optimizations reduce network overhead operation 
nodes hear new node monitoring fig 
determine generate attestations 
attestations may represent complex context specific decisions simplest type attestation expresses reachability liveness node continues respond application level pings 
expect attestation graphs overlay networks high degree short path lengths attestation announcements propagate quickly result low incidence routing instabilities 
discussion stateful monitoring 
la groups approach allows monitoring expose system properties applications 
types failures detected application agnostic stateless monitoring process crashes message corruption large class failure detection mechanisms require state application level knowledge 
stateful monitoring includes anomaly detection performance faults disk throughput network latency throughput packet flooding denial service attacks application delays 
application specific monitoring may voting approach determine probable correctness nodes responses dns resolution name public key bindings responses network file system operations generate withdraw attestations accordingly 
correctness failure attestations 
la group nodes propagate timed correctness attestations group members explicit failure reports 
failure reports simply dropped faulty node onus node prove membership prove lack non membership 
especially important providing membership transcripts non group nodes receive link state announcements 
la groups transcripts provide proof requiring third party interaction 
expiration periods la groups provide relaxed consistency model membership nodes views may express attestation link ta time node stops neighbors 
compact signature representation 
provide compact representation membership transcripts decrease verification overhead multi signatures 
multi signatures variation normal signatures groups nodes holding unique signing key produce single signed message bearing endorsement group members 
informally nodes individually generate signatures aggregated multiplying signatures compact representation length equal single signature 
node verify signature corresponding aggregated public verification key formed multiplying individual keys signer 
node compute aggregated key single time amortize subgroup computations perform single verification refreshing attestations 
multisignatures practical example exists simple construction gap diffie helman groups 
la groups leverage compact representation ways greatly reduces overhead needed transfer entire views new nodes immediately receive snapshot attestation graph opposed waiting receiving individual link state announcements 
second help improve efficiency link state announcements intermediate nodes may collect individual announcements neighbors retransmitting aggregated ones 
robust group membership protocol 
conceptually simple la groups generate robust group membership protocol attestations represent node belief continued correctness group corresponds nodes attestations group members 
static threshold allows group withstand faults lifetime traditionally quorum systems 
dynamic threshold hand enables group enforce properties function group size grows shrinks requires consensus group membership view changes 
earlier form restricted precisely problem la groups approach provides flexible generalization 
applications section attempts demonstrate process building managing distributed systems aided la groups abstraction 
outline design potential applications structured routing overlay robust non transitive connectivity multicast system tolerates poorly connected structured overlay routing staggered la groups share link state information robust routing 
nodes file sharing system resistant mislabeled data cooperative worm containment resistant invalid worm signatures 
examples show general classes applications flat hierarchical partitioned systems la groups naturally applied 
flat structured routing overlays problem statement 
nodes structured routing overlays claim ownership sequential range semantic free identifier space :10.1.1.28.5987
node peers nodes selected specific id distribution 
routing node controlling target identifier proceeds greedily visiting nodes ids progressively closer target 
chord overlay uses ring id space integers modulo types connections 
fingers selected exponential distribution ensure routing short expectation log hops node networks 
successors immediately follow node id space help ensure correctness routing 
existing structured routing overlays connectivity inconsistent routing views cause greedy routing hit local minimum reach identifier immediate successor 
la groups robust routing 
propose la groups link state information improve correctness routing non transitive conditions inconsistencies 
application attestations express reachability liveness 
shows arc chord ring nodes arranged sequentially random unique node ids 
node member la groups size approximately say 
groups seen stretching clockwise counter clockwise respect node overlapping nodes 
replace traditional successor lists chord leaf sets pastry 
strongly connected graph property la group ensures group nodes robustly communicate directly intermediate relays packets 
staggered groups ensure robust communication groups provided single pair nodes overlap set communicate 
simple la group approach may replace various mechanisms describe deployed routing overlays handle non transitivity 
construction adapt naturally handle churn 
node leaves network existing group members extend group chord ring attempting maintain group size approximately new nodes join group nodes near group edges leave possibly joining immediate neighbor 
handle large scale system growth shrinkage opposed fluctuations steady state network size node may belong groups albeit usually temporarily new group created node overlap current group detected large members groups merge small 
la groups robust storage 
structured routing overlays proposed building block distributed hash tables data stored key id subsequently retrieved 
central challenge distributed storage applications ensure data retrieved robustly membership changes 
systems propose replicating data node successors fixed replication factor :10.1.1.28.5987
la groups offers interesting twist approach 
applications dynamically tune replication factor achieve desired level fault tolerance minimum vertex cut subgraph 
example node successors reachable single group member due routing problems system replicate data nodes order withstand single node failing 
hierarchical multicast problem statement 
desired property enduser multicast system straightforward parents multicast tree reliably transmit packets children ideally high throughput rates 
traditional design systems new nodes join leaf nodes growing depth tree 
approach provides intuitive elegant design poorly connected intermediate nodes having low upstream bandwidth high latency cause significant delays nodes children 
tree management central challenging problem 
la groups optimizing multicast 
node attests reachability willingness relay packets additional network information latency throughput uptime failure long lived systems 
nodes form multicast tree approximate degree level 
define la group parent children call level group parent depth root 
internal tree nodes belong groups leaves belong exactly group 
course parent maintain high throughput child larger values parent sends packets directly fraction children appends routing information telling children siblings relay packets 
link state information paths siblings parent directly optimize data transmission network conditions timescale equal refresh period attestations 
nodes near root attest nodes short poor mean times failure 
nodes forced remain tree leaves system statistically minimize interruptions due failures 
partitioned trust networks problem statement 
securing applications presents special challenges normal cryptographic techniques verify correctness data 
example participants file sharing systems complete freedom associate metadata files pollute system searchable index mislabeled files 
cooperative worm containment firewall detects worm disseminates worm signature firewalls turn block packets containing signature 
unfortunately firewall distributes incorrect signatures amount denial service attack 
cases applying traditional consensus protocol requires node wait matching responses action exceed total number colluding nodes 
la groups trust graphs 
nodes generate attestation graph correlates trust relationships system 
contexts trust relationships exist 
organizations willing engage cooperative worm containment spam filtering existing partners peering isps collaborating research universities business partners 
studies file swapping mail networks demonstrated natural development interest communities 
systems irc waste bittorrent explicitly join nodes smaller communication groups physical nodes may belong multiple groups precisely reason 
attestation graph la groups node quantify trust protocol answer various metrics 
example may simply require consensus immediate neighbors may check attestation paths single member ver tex disjoint 
provides robustness faulty nodes claims historically member appears correct nodes 
application perform type response verification ensure nodes continued compliance 
examples humans check file validity download dynamic taint analysis help verify worm signatures 
verification fails node stops neighbor limiting duration incorrect metadata remains systems 
verification costly la groups improve system behavior helping achieve low false positive rate 
related distributed systems community proposed number fault tolerance protocols years attempt mask failures 
classic examples virtual synchrony communication replicated quorum systems replicated state machines :10.1.1.127.6130
community developed theoretical underpinnings unreliable failure detectors enable group membership consensus protocols 
largely protocols focus abstraction generality correctness guarantees cost high communication overhead limited scalability 
link state protocols intra domain routing ospf order find pairs shortest paths 
la group node concerned enumerating strongly connected subgraph includes simply calculating shortest path nodes 
sketched various applications may benefit applying la groups section 
due space limitations omit vast body associated applications 
unaware prior proposed application level attestations expose distributed system health embracing partitions resist failures large scale systems 
summary handling failures organizing nodes central challenges building internet scale distributed systems 
attempt mask failures argue systems expose process behavior nodes higher level applications 
applications turn structure process groups reflect nodes observed reliability correctness 
introduces abstraction called groups 
nodes acceptability digitally signed link attestations apply link state protocol determine trust relationships group 
exposing attestation graph application informed decisions directly impact fault tolerance security performance peer download security filter extent replicate data forth 
believe la groups help system designers directly reason desired graph properties doing build robust systems 
birman 
replication fault tolerance isis system 
sosp dec 
birman hayden xiao budiu minsky 
bimodal multicast 
acm trans 
computer systems 

efficient threshold signatures multisignatures blind signatures gap diffie hellman group signature scheme 
pkc jan 
castro liskov :10.1.1.127.6130
practical byzantine fault tolerance 
osdi feb 
chandra toueg 
unreliable failure detectors reliable distributed systems 
acm 
freedman lakshminarayanan rhea stoica 
non transitive connectivity dhts 
worlds dec 
iamnitchi ripeanu foster 
small world file sharing communities 
infocom mar 
kannan subramanian stoica katz 
analyzing cooperative containment fast scanning worms 
jul 
malkhi mansour reiter 
diffusing updates byzantine environment 
ieee srds oct 
malkhi reiter 
byzantine quorum systems 
distributed computing 
richer rosen 
new routing algorithm arpanet 
ieee trans 
communications may 
newsome song 
dynamic taint analysis automatic detection analysis signature generation exploits commodity software 
ndss feb 
reiter stubblebine 
resilient authentication path independence 
ieee trans 
computers 
rowstron druschel 
pastry scalable distributed object location routing large scale peer peer systems 
ifip acm middleware nov 
stoica morris liben nowell karger kaashoek dabek balakrishnan 
chord scalable peer peer lookup protocol internet applications 
ieee acm trans 
networking 
subramanian roth stoica shenker 
listen security mechanisms bgp 
nsdi mar 
nath yu gibbons 
availability deeper understanding machine failure characteristics large distributed systems 
worlds dec 
