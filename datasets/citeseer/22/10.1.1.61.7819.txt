system static analysis xpath pierre nabil da inria rh ne alpes xpath standard language navigating xml documents returning set matching nodes 
sound complete decision procedure containment xpath queries related xpath decision problems satisfiability equivalence overlap coverage 
considered xpath fragment covers language features practice 
specifically propose unifying logic xml alternation free modal calculus converse 
show translate major xml concepts xpath regular xml types including dtds logic 
embeddings show xpath decision problems presence absence xml types solved decision procedure calculus satisfiability 
provide complexity analysis practical experiments system illustrate efficiency approach realistic scenarios 
categories subject descriptors information storage retrieval information search retrieval database management systems query processing programming languages formal definitions theory semantics general terms algorithms languages standardization theory additional key words phrases containment equivalence logic query xml xpath 
xpath clark derose standard declarative language querying xml tree returning set nodes 
increasingly popular due expressive power compact syntax 
advantages xpath central role key xml specifications xml applications 
xquery core query language xslt node selector transformations xml schema define keys xlink xpointer portions xml data 
xpath applications update languages sur xml access control fan 
xpath decision problems arise naturally cases 
basic decision problem query language satisfiability benedikt expression yields non empty result 
xpath satisfiability important optimization host languages implementations instance decide compile time query satisfiable subsequent bound computations avoided 
basic decision problem xpath equiv author address da inria rh ne alpes avenue de europe montbonnot st cedex france 
pierre nabil inria fr permission digital hard copy part material fee personal classroom provided copies distributed profit commercial advantage acm copyright server notice title publication date appear notice copying permission acm copy republish post servers redistribute lists requires prior specific permission fee 
yy acm yy acm transactions information systems vol 

month yy pages 
da problem queries return result 
important reformulation optimization query aim enforcing operational properties preserving semantic equivalence abiteboul vianu levin pierce 
decision problems reducible xpath containment tree result particular query included result 
query containment critical static analysis xml specifications especially type checking transformations martens neven 
applications introduce xpath decision problems presence xml types dtds bray xml schemas fallside walmsley 
decision problems needed applications include example xpath overlap expressions select common nodes coverage nodes selected expression contained union results selected expressions 
literature attention paid classifying containment problem simple xpath complexity classes 
allowed identify subsets xpath containment efficiently decided 
goal describe sound complete efficient decision procedures usable practice large xpath fragment presence absence xml types 
briefly introduce xpath language approach outline 
xpath xpath clark derose introduced standard query language retrieving information xml documents 
allows navigate xml trees return set matching nodes 
simplest form xpath expressions look directory navigation paths 
example xpath book chapter section navigates root document designated leading slash top level book element chapter child elements section child elements 
result evaluation entire expression set section elements reached manner returned order occurred document 
step navigation selected nodes step filtered qualifiers 
qualifier boolean expression brackets test path existence 
ask book chapter section citation result section elements child element named citation 
situation interesting combined xpath capability searching axes shown children axis 
xpath shorthand child book child chapter child section child citation explicit path step meant search child axis containing children previous context node 
asked child book descendant child citation acm transactions information systems vol 

month yy 
preceding system static analysis xpath ancestor descendant fig 

xpath axes partition context node 
self parent child preceding sibling sibling step selects nodes kind descendants top element book citation sub element 
previous examples absolute xpath expressions 
meaning relative expression leading defined respect context node tree 
key xpath success compactness due powerful navigation possible various axes 
starting particular context node tree nodes reached 
axes define partitioning tree context node 
illustrates sample tree 
informal details complete xpath standard specification clark derose 
variety factors contribute complexity xpath decision problems operators allowed xpath queries combination 
common distinctions xpath fragments literature taken benedikt positive vs non positive depending negation operator considered inside qualifiers 
downward vs upward depending queries specify downward upward traversal tree 
recursive vs non recursive depending xpath transitive closure axes instance descendant ancestor considered 
qualified vs non qualified depending queries allow filtering qualifiers 
vs data values depending comparisons data values expressing joins allowed 
acm transactions information systems vol 

month yy 
da results benedikt schwentick know combination previous factors data values may lead undecidability decision problems containment 
remaining part focus large xpath fragment covering previous factors data values 
fragment detailed section largest considered far literature covers features xpath approach outline propose alternation free modal calculus converse appropriate logic effectively solving xpath decision problems presence absence xml types 
show xpath linearly translated calculus 
show embed regular tree types including dtds calculus 
express xpath decision problems containment satisfiability equivalence overlap coverage formulas logic 
exptime decision procedure calculus satisfiability solve generated formula construct relevant example counter example xml trees 
provide experimental results shed light time cost solving xml decision problems practice 
system fully implemented da static analysis xml specifications 
remaining part organized follows section introduce logic propose reasoning xml trees section describe translation xpath queries logic section embeds regular xml types logic 
translations section explains formulate solve considered decision problems 
implementation system practical experiments section discussing related section concluding section 
logic xml section introduce specific variant modal calculus formalism reasoning xml trees 
xml documents finite binary trees consider xml document finite ordered labeled tree unbounded depth arity 
priori bound number children node tree unranked neven 
tree nodes labeled symbols taken countably infinite alphabet 
straightforward isomorphism sequences unranked trees binary trees hosoya neven 
order describe define set unranked trees hedge sequence unranked trees defined follows fragment includes extensions forthcoming xpath language qualified paths 
xpath qualified steps path intersection 
acm transactions information systems vol 

month yy 
system static analysis xpath binary tree labeled root subtrees empty tree unranked trees translated binary trees function inverse translation function converts binary tree sequence unranked trees example illustrates sample unranked tree mapped binary representation vice versa 
fig 

unranked binary tree representations 
note translation single unranked tree results binary tree form 
reciprocally inverse translation binary tree yields single unranked tree 
modeling xml restrict attention binary trees form loss generality 
introduce logic propose reasoning structures 
calculus propositional calculus propositional modal logic extended greatest fixpoint operators kozen 
signature calculus consists set prop atomic propositions set var propositional variables set atomic programs 
xml context atomic propositions represent symbols alphabet label xml trees 
atomic programs allow navigation trees 
calculus converse vardi augments propositional calculus associating atomic program converse program atomic program converse 
note prog set 
difference propositional calculus lacks converse programs 
important note addition converse programs preserves exptime upper bound satisfiability problem vardi 
calculus converse known full calculus alternatively way calculus literature 
acm transactions information systems vol 

month yy 
da set formulas calculus converse signature defined follows prop var program 
note occur negatively semantics full calculus respect kripke structure set nodes prog assigns atomic program transition relation interpretation function assigns atomic proposition set nodes 
formal semantics function shown defines semantics calculus formula terms kripke structure valuation valuation var maps variable subset valuation variable set nodes denotes valuation obtained assigning fig 

semantics calculus 
note sentence propositional variables occurring bound valuation required 
node sentence say holds denoted iff modalities possibility necessity operators navigating structure 
syntax formulas previously fact redundant 
deal subset composed formulas negation normal form 
say formula negation normal form negations formula appear atomic propositions 
formula equivalent formula negation normal form kozen obtained expanding negations de morgan rules standard dualities modalities fixpoints 
readability purposes translations xpath expressions section negation normal form 
reasoning xml trees fact interested specific subset alternation free modal calculus converse finite binary trees 
acm transactions information systems vol 

month yy 
system static analysis xpath fig 

dualities negation normal form 
recall formula negation normal form alternation free condition holds respectively subformula respectively subformula occur freely 
section introduces additional restrictions related finite binary trees 
xml constraints kripke structures section restrict satisfiability problem kripke structures satisfiability problem finite binary trees 
propositional calculus finite tree model property formula satisfiable satisfiable finite tree kozen 
unfortunately converse programs causes loss finite model property vardi 
need reinforce finite model property introduce ensure finite binary trees encoding xml structures 
xml node label holds distinct atomic propositions easily incorporated calculus satisfiability solver 
second navigating binary trees atomic programs associated relations fc ns meaning respectively connect node left child right child 
fc holds iff left child child unranked tree representation ns holds iff right child binary tree representation sibling unranked tree representation 
atomic program define relational inverse 
consider programs inside modalities navigating downward upward trees 
define restrictions kripke structure form finite binary tree 
kripke structure finite binary tree satisfies conditions finite set nodes accessibility relation fc ns define tree fc ns partial functions mj mj 
instance 
alternation free 
bound appears freely scope acm transactions information systems vol 

month yy 
da say finite binary tree satisfies root tree accessing root formula root selects node provided parent 
ensuring finiteness rely nig lemma states finitely branching infinite tree infinite path words finitely branching tree branch finite finite 
expression satisfied structures containing infinite cyclic paths 
prevent existence paths negate previous formula propagating negation rules obtain ft 
ft states descending branches finite current context node ft vacuously satisfied leaves 
case need ft hold root root ft hold order ensure finite structure 
condition satisfied 
need enforce 
rewriting existential modalities way successor supposed exist exists verify property 
way overcome difficulty calculus naturally express property node exactly successors 
technically denote formula occurrences replaced replacement enforce conditions 
proposition 
formula satisfied finite binary tree model formula root ft satisfied kripke structure 
proof part iteratively constructs tree model proceeds induction structure 
part immediate 
proposition gives adequate framework formulating decision problems xml structures terms calculus formula 

logical interpretation xpath queries consider large realistic xpath fragment includes negation downward upward navigation recursion union intersection qualifiers 
syntax xpath fragment shown path qualifier axis child descendant self parent ancestor preceding descendant self ancestor self preceding sibling sibling acm transactions information systems vol 

month yy 
system static analysis xpath xpath expressions directly querying unranked xml trees 
recall xpath denotational semantics unranked trees wadler 
evaluation xpath query returns set nodes reachable context node tree formal semantics functions se sp define set nodes respectively returned expressions paths se se se node sp root sp se se se se se se set node sp path node set node sp sp sp sp sp sq sp sa name sp sa function sq defines semantics qualifiers basically state existence absence paths context node sq qualifier node sq sq sq sq sq sq sq sq sq sp boolean eventually function sa gives denotational semantics axes sa axis node sa child children sa parent parent sa descendant children sa ancestor parent sa self sa descendant self sa descendant sa self sa ancestor self sa ancestor sa self sa preceding sa ancestor sa sa descendant sa sibling sa preceding sibling set node child parent child parent root children parent primitives navigating unranked trees ordering relation holds node node depth traversal order tree name mean accessing labeling tree 
translation calculus explain xpath expression translated equivalent formula binary trees 
translation adheres xpath formal semantics acm transactions information systems vol 

month yy 
da sense translated formula holds nodes selected xpath query 
navigation performed xpath unranked trees translated terms navigation binary tree representation 
example gives intuition translation xpath expression child child 
unranked tree expression selects child nodes context child 
translated formula holds nodes selected expression 
navigating upward binary tree nodes specifically number steps upward right child upward left child reach initial context 
starting back candidate nodes navigate downward tree order verify existence child 
translated query child child 
fig 

xpath translation example 
note converse programs unable differentiate selected nodes nodes existence tested 
state properties ancestors descendants selected node 
equipping logic converse programs crucial supporting xpath logics converse programs may solving xpath satisfiability decision problems containment 
logical interpretation axes 
translate navigational primitives xpath axes 
translation formally specified translation function noted takes xpath axis input returns translation calculus terms calculus formula parameter allow composition 
holds nodes accessed axis node verifying 
formal parameter allows express composition formulas needed translating path composition 
readers familiar pdl pdl converse programs defined fischer ladner give correspondence notations 
may ask possible eliminate upward navigation xpath level 
known xpath rewritings may cause exponential blow ups expression sizes 
acm transactions information systems vol 

month yy 
system static analysis xpath axis self sibling 
child 
descendant 
descendant self 
parent ancestor ancestor self preceding sibling 
descendant self sibling preceding descendant self preceding sibling shorthand ancestor self fig 

translation xpath axes 
xpath calculus sibling 
child 
descendant 
descendant self 
nil parent ancestor ancestor self nil preceding sibling 
fig 

logical correspondences terms early operators 
fig 

translation expressions 
logical interpretation expressions 
translation xpath expressions calculus 
formally expressed translation function noted takes xpath expression input calculus formula parameter indicates context expression applied 
absolute xpath expressions interpreted root selected calculus expression root relative expressions interpreted relatively context node 
fresh atomic proposition named context distinguishing context nodes 
translation expressions relies translations paths shown 
xpath essential construct translates formula composition resulting formula holds nodes accessed nodes accessed 
translation branching construct significantly differs 
resulting formula hold nodes accessed holds xpath denotational semantics previously section 
acm transactions information systems vol 

month yy 
da path fig 

translation paths 
qualifier path fig 

translation qualifiers 
preserve semantics translation stops selecting navigation nodes reached filters depending holds 
express introducing dual formal translation function xpath qualifiers noted shown performs filtering navigation 
specifically seen navigational translating function translated formula holds target nodes path 
opposite seen filtering translating function states existence path moving result 
translated formula respectively holds nodes exists qualifier respectively path leading node verifying 
xpath translation calculus translating modes paths second qualifiers 
note filtering mode entered left 
differs denotational semantics previously section formal semantics functions paths qualifiers mutually recursive cause naive implementations unnecessarily complex pointed gottlob 
translations paths inside qualifiers 
specific translations axes inside qualifiers xpath symmetry shown 
cost translation linear length xpath expression duplication subformulas arbitrary length formal translations 
formulas formal parameter appears twice see cause duplication value context root constants 
note translation xpath expression sentence 
absolute xpath expressions translation starts root initial formal parameter root 
relative expressions translated formula closed initial formal parameter context modeling context nodes 
acm transactions information systems vol 

month yy 
system static analysis xpath axis self sibling preceding sibling child parent descendant ancestor descendant self ancestor self parent child ancestor descendant ancestor self descendant self preceding sibling sibling preceding preceding fig 

symmetry axes inside qualifiers 
prove translated formula binary trees semantically equivalent original xpath expression corresponding unranked trees 
instance relate translations xpath denotational semantics previously section proposition 
xml tree xpath expression followings equivalent exists se root ft context counterpart binary tree representation proof done straightforward structural induction compositional layers set rules 
result links xpath decision problems absence xml types satisfiability 
show xml types translated calculus 

xml types xml types describe structural constraints xml documents 
formalisms exist describing classes xml documents see murata overview 
translate class regular tree languages gathers widely formalisms describing types xml documents including known dtds xml schemas binary trees 
syntactic definition tree type expressions 
define type follows xi ti tvar assuming tvar countably infinite set type variables 
abbreviated type expressions defined follows 
acm transactions information systems vol 

month yy 
da environment type variable bindings semantics tree types denotation function tvar xi ti lfp global relation reflexive transitive relation labels xi ti 
note function monotone ordering tvar fixpoint lfp 
types defined correspond arbitrary context free tree types decision problem inclusion known undecidable hopcroft 
impose additional restriction hosoya reduce expressive power considered types correspond regular tree languages 
restriction consists simple syntactic condition allows unguarded enclosed label recursive uses variables restricts tail positions condition ensures regularity name lrt resulting class regular tree languages 
xml point view regular tree types form superset standards xml schemas dtds 
detail connection widely dtd standard 
document type definitions defined recommendation dtds bray local tree grammars strictly expressive regular tree types 
xml terminology type expression called content model 
dtd content models described syntax 

specification see dtd function associates content model label taken subset gathers labels content models 
represent set tree types described dtds follows 
li ti goes expressive power dtds similar notion called substitution groups exists xml schemas see hosoya details 
instance type allowed 
local tree grammar regular tree grammar competing non terminals 
nonterminals tree grammar said compete production rule left hand side production rule left hand side rules share terminal symbol right hand side 
acm transactions information systems vol 

month yy 
system static analysis xpath lrt xi ti xi ti xi ti xi ti fig 

binarization tree types 
note lrt obvious associating unique type variable label 
distinguish dtds general regular tree types anymore 
binarization types section straightforward isomorphism binary trees sequences unranked trees 
isomorphism unranked binary tree types follows exactly intuition trees 
binary tree types described syntax xi ti type equivalent binary type vice versa 
translation function shown adapted hosoya convert type corresponding binary representation 
function considers environment tvar lrt accessing type bound variable xi constructs form xi ti 
translation calculus introduce translation regular tree types calculus binary representation types 
order simplify translations introduce notation ary fixpoint binder xi notation syntactic sugar free occurrences xi replaced xi closed xi scope corresponding unary binder 
provides shorthand denoting formula exponential size expressed unary fixpoint construct 
naive expansion contains unnecessary duplicate formulas satisfiability solver operates single copy see section 
ary binder useful compact notation representing translations recursive types introducing useless representation formulas satisfiability test 
acm transactions information systems vol 

month yy 
da translation binary regular tree types formulas rules succ succ xi ti xi ti implicit bijective correspondence variables tvar variables var 
note translations empty tree type empty tree choose mention explicitly empty trees satisfiability results 
function succ sets tree frontier accordingly succ prog tvar nullable succ nullable predicate nullable indicates type contains empty tree nullable tvar true false nullable nullable nullable false nullable true nullable false nullable nullable nullable nullable false nullable xi ti nullable 
xml decision problems translated xpath unranked trees regular unranked tree types unifying logic binary trees 
owing embeddings reduce xml decision problems xpath containment equivalence satisfiability overlap coverage satisfiability 
introduce simplified notations 
xpath expression note translated formula context 
furthermore note set trees default optional dtd specified 
note embedding tree language absence dtds presence 
decision problems needed applications expressed terms formulas xpath containment input optional problem select nodes selected 
definition se se acm transactions information systems vol 

month yy 
system static analysis xpath tested formula xpath equivalence input optional problem select exactly nodes 
definition se se equivalence tested successive separate containment checks xpath satisfiability input optional problem return non empty set nodes 
definition se tested formula xpath overlap input optional problem may select common nodes 
definition se se tested formula xpath coverage input en optional problem nodes selected selected en 
definition se se ei tested formula ei note containment problem test unsatisfiability 
checking xpath expression contained expression consists checking implication holds trees 
terms exists tree results included negated implication unsatisfiable 
need enforce finite binary tree model property seen section formulate decision problems root checked formula root ft tested tested corresponds particular xpath decision problem 
intuitively fixpoint introduced xpath navigation performed tested location tree 
example necessary relative xpath expressions involve upward navigation tree 
important note formula alternation free embeddings xpath tree types produce alternation free formulas negation alternation free sentence remains alternation free 
practice negated sentences introduced xpath embeddings turned negation normal form applying rules 
system evaluation proposed approach fully implemented working system available da 
compiler takes xpath expressions input translates formulas 
compiler takes regular tree types acm transactions information systems vol 

month yy 
da input dtds outputs translation 
formula particular decision problem composed normalized solved 
complexity analysis implementation principles calculus satisfiability solver specialized alternation free calculus converse 
detailed description solver scope 
focus aspects allow establish precise complexity results xml decision problems considered 
satisfiability solver closely inspired tableau methods described pan 
algorithm relies top tableau method attempts construct satisfying kripke structures fixpoint computation 
nodes tableau specific subsets set called lean pan 
formula lean subset fischer ladner closure fischer ladner composed atomic modal subformulas pan 
algorithm starts set possible nodes repeatedly removes inconsistent nodes fixpoint reached 
computation node fixpoint satisfiable 
case fixpoint contains satisfying model easily extracted satisfying example xml tree 
state complexity xml decision problems addressed proposition 
xpath containment equivalence satisfiability overlap coverage decision problems presence absence regular tree constraints solved time complexity log lean size corresponding formula 
upper bound derived linear translations xpath regular tree types calculus log time complexity solver corresponds best known complexity deciding alternation free calculus converse kripke structures 
note efficient complexity calculus converse vardi known log gr del 
key observation linear translation regular tree types distinct atomic modal subformulas translated formula lean ary binder xi xk 
precisely lean corresponding translation contains eventualities universalities number binary tree type variables binder constant factor corresponds downward programs atomic propositions representing alphabet symbols deriving complexity properties closure formula fischer ladner establishing decidability pdl single exponential time fischer ladner 
analog observations modal acm transactions information systems vol 

month yy 
system static analysis xpath logic pan calculus general kripke structures 
results seen application technique case regular tree types combined xpath bidirectional queries finite trees 
keys efficiency method large practical instances follows nodes tableau contain modal formulas exactly atomic proposition xml greatly reduces number enumerated nodes large alphabets 
negation calculus straightforward compared automata techniques 
handling formulas negation normal form simply reduces checking membership atomic propositions tableau nodes 
contrasts tree automata techniques require negation full construction complementation automata exponential blowup 
pointed baader tobies pan tableau methods logics tree model property viewed implementations automata theoretic approach avoids explicit automata construction 
implementation relies representing sets nodes operating symbolically binary decision diagrams bdds bryant 
bdds provide canonical representation boolean functions effectiveness known formal verification systems edmund clarke 
approach bdd variables encode truth status lean formulas 
cost bdd operations sensitive variable ordering 
finding optimal variable ordering known np complete heuristics known perform practice edmund clarke 
choosing initial variable order significantly improve performance 
preserving locality initial problem essential 
observed variable order determined breadthfirst traversal initial formula keeping sister subformulas close proximity ordering lean formulas yields better results practice 
experimental results objective section aims testing practical performance method 
carried testing scenarios xpath benchmark goal cover xpath features gathering significant variety xpath expressions met real world applications 
test series consider types focus xpath containment problem logical formulation section complex requires logic closed negation 
test series consists finding relation holding pair queries benchmark 
means checking containment query benchmark 
note qi qj query qi contained query qj 
comparisons queries qi qj may yield different results experiments conducted pentium ghz mb ram running eclipse windows xp 
acm transactions information systems vol 

month yy 
da qi qj qj qi queries semantically equivalent note qi qj qi qj qj qi denote qi qj alternatively qj qi qi qj qj qi queries related note qi qj queries 
corresponding results running times decision procedure summarized table times reported milliseconds correspond actual running time calculus satisfiability solver extra time spent parsing xpath linear cost translation calculus 
obtained results show tests solved milliseconds 
suggests xpath expressions real world scenarios efficiently handled practice 
site regions item site annotation description parlist text keyword keyword descendant self descendant self keyword site regions item parent parent keyword ancestor keyword ancestor self mail site regions item site regions item site people person address phone homepage fig 

xpath queries taken benchmark 
relation time ms relation time ms table results total computation times 
second test series compare expressions research papers containment xpath expressions 
presents expressions collected 
set expressions tree pattern homomorphism technique miklau suciu returns false negatives approach complete 
acm transactions information systems vol 

month yy 
system static analysis xpath shows results obtained system 
suggest system able reasonably handle containment instances difficult solve techniques 
descendant editor parent journal descendant self journal child editor relation time ms fig 

results xpath containment instances research papers 
presents results third test series including examples intersection axes preceding illustrated previous series 
sibling preceding sibling sibling ancestor preceding sibling preceding preceding preceding sibling preceding preceding preceding relation time ms fig 

results examples including preceding axes 
fourth test series aims evaluating effectiveness system xpath decision problems presence dtds 
small recursive dtd real world dtds smil xhtml pemberton standards 
table ii gives size dtd presenting number symbols alphabet size number grammar production rules type variables unranked binary representations 
dtd built xpath decision problems expressions shown 
decision problems results table iii 
system performs respectively small medium large recursive dtds 
acm transactions information systems vol 

month yy 
da dtd examples symbols type variables binary type variables people dtd smil xhtml strict pemberton table ii 
dtds practical experiments 
element people person element person name birthdate gender children element name firstname lastname element firstname pcdata element lastname pcdata element birthdate pcdata element gender pcdata element children person people person descendant self people person children person fig 

people dtd simple recursive dtd 
switch layout smil head layout smil head layout ancestor switch switch ancestor head descendant seq descendant audio preceding sibling video descendant ancestor descendant html head body html head descendant html body descendant img img fig 

xpath expressions presence dtds 
satisfiability test illustrates additional benefit technique automatically outputs satisfying xml document shown enriched xpath context target information 
interestingly example shows official xhtml dtd syntactically prohibit nesting anchors 
large xhtml case observe time needed significantly important deciding xpath problems remains practically feasible especially static analysis purposes operations performed compile time 
preliminary measurements shed light time cost solving xpath decision problems practice 

related relatively close spirit constructive connection xpath formal logics actively studied marx benedikt bar acm transactions information systems vol 

month yy 
system static analysis xpath xpath decision problem instance dtd answer time ms containment people dtd true coverage people dtd true satisfiability smil true overlap smil false containment smil false satisfiability smil true satisfiability xhtml true coverage xhtml true containment xhtml true table iii 
decision problems presence dtds results 
html head title head body span context true target true br span body html fig 

generated xml tree satisfiability presence xhtml dtd 
cel libkin 
marx know xpath expressive power close order logic fo 
fo fully capture regular tree types benedikt 
attempts characterize xpath terms fo variants computational tree logic ctl marx miklau suciu equivalent fo tree structures marx libkin intended support regular xml types 
proposes variant propositional dynamic logic pdl fischer ladner similar exptime complexity reasoning ordered trees exact expressive power study 
expressive decidable known logic monadic second order logic mso tree structures extends fo quantification sets nodes 
specifically appropriate mso variant exactly captures regular tree types weak monadic second order logic successors ws thatcher wright 
arnold kupferman vardi know ws exactly expressive fragment afmc propositional modal calculus introduced kozen acm transactions information systems vol 

month yy 
da 
satisfiability problem ws non elementary exptime afmc 
afmc subsumes early logics ctl clarke emerson pdl fischer ladner 
furthermore vardi adds converse programs propositional modal calculus shows resulting logic admits exptime decision procedure satisfiability 
follows alternation free modal calculus converse sounds appropriate logic xml expressive capture significant class xpath decision problems potentially providing efficient practically effective decision procedures 
point view computational complexity exptime upper bounds known satisfiability containment specific subsets xpath fragment 
complexity xpath satisfiability presence dtds studied benedikt 
xpath containment specifically attracted lot research attention amer deutsch tannen miklau suciu neven schwentick schwentick wood 
prior concentrated various combinations previous factors obtaining complexity results see schwentick overview 
specifically focus restricted positive xpath upward axes 
particular neven schwentick proves exptime upper bound containment presence dtds queries containing child descendant axes union paths 
deutsch tannen considers xpath containment presence dtds simple xpath integrity constraints sx ics 
obtain problem undecidable general presence bounded sxics dtds 
containment fragment xp shown conp complete miklau suciu containment mapping technique relies polynomial time tree homomorphism algorithm gives sufficient necessary condition containment xp general 
additionally containment problem shown exptime fragments xp xp xp presence dtds wood 
compared previous works xpath fragment consider far complete realistic 
single unifying logical framework major xpath features regular tree types fit 
framework yields effective decision procedures usable practice real world scenarios usable working system reported prior 
theoretical perspective see connection xml recall term elementary introduced grzegorczyk grzegorczyk refers functions obtained basic functions operations limited summation limited multiplication 
consider function tower defined tower tower tower grzegorczyk shown elementary function argument bounded tower constant term non elementary refers function grows faster function 
complexity class exptime set decision problems solvable deterministic turing machine time polynomial function input size acm transactions information systems vol 

month yy 
system static analysis xpath calculus simple way deriving precise upper bound time complexity log xml decision problems combined size considered xpath queries tree types 

propose new logical approach xpath decision problems 
xpath queries regular tree types translated calculus 
xml decision problems expressed formulas logic decided efficient decision procedure calculus satisfiability 
contributions 
propose specific variant calculus alternation free modal calculus converse appropriate logic reasoning xml trees xpath queries xml types 
valuable outcome show xpath regular tree types linearly translated calculus 
second take advantage translations reduce xml decision problems satisfiability 
obtain effective exptime decision procedures usable practice 
considered xpath fragment includes union intersection path composition downward upward axes branching boolean connectives wildcards negation presence absence dtds 
fragment far complete fragments addressed previous studies 
provide practical experiments detailed results corroborate claim approach efficient practice real world xpath expressions dtds 
system fully implemented da static analysis xml specifications 
strengthens hope effective analysis standard xml transformations near 
eventually additional advantage technique allow generation xml tree examples containment hold 
believe method special interest applications including debuggers applications benefit precise reporting static analysis stages 
direction consists specifically tuning calculus satisfiability solver xml 
incorporating xml peculiarities directly core calculus solver general kripke structures may yield efficient decision procedures 
abiteboul vianu 
regular path queries constraints 
journal computer system sciences 
blackburn marx de rijke 
pdl ordered trees 
journal applied non classical logics 
amer cho lakshmanan srivastava 
minimization tree pattern queries 
sigmod record 
arnold 
fixed point characterization weak monadic logic definable sets trees 
tree automata languages 
north holland amsterdam netherlands 
baader tobies 
inverse method implements automata approach modal satisfiability 
proceedings international joint conference automated reasoning 
springer verlag london uk 
libkin 
temporal logics unranked trees 
lics proceedings th annual ieee symposium logic computer science 
ieee computer society new york ny usa 
acm transactions information systems vol 

month yy 
da benedikt fan 
xpath satisfiability presence dtds 
pods proceedings fourth acm symposium principles database systems 
acm press new york ny usa 
benedikt 
regular tree languages definable fo 
stacs proceedings nd annual symposium theoretical aspects computer science 
lncs vol 

springer verlag london uk 
chamberlin fern ndez kay robie sim 
xml path language xpath candidate recommendation 
www org tr xpath 
bray paoli sperberg mcqueen maler 
extensible markup language xml third edition recommendation 
www org tr rec xml 
bryant 
graph algorithms boolean function manipulation 
ieee transactions computers 
clark derose 
xml path language xpath version recommendation 
www org tr rec xpath 
clarke emerson 
design synthesis synchronization skeletons branching time temporal logic 
logic programs workshop 
lncs vol 

springer verlag london uk 
deutsch tannen 
containment regular path expressions integrity constraints 
krdb proceedings th international workshop knowledge representation meets databases 
ceur workshop proceedings vol 

ceur ceur ws org 

tree acceptors applications 
journal computer system sciences 
edmund clarke grumberg peled 
model checking 
mit press cambridge ma usa 
fallside walmsley 
xml schema part primer second edition recommendation 
www org tr xmlschema 
fan chan garofalakis 
secure xml querying security views 
sigmod proceedings acm sigmod international conference management data 
acm press new york ny usa 
fischer ladner 
propositional dynamic logic regular programs 
journal computer system sciences 

xpath benchmark xmark generated data 
proceedings third international symposium database xml technologies 
lncs vol 

springer verlag london uk 
da 
calculus satisfiability solver xml 
wam inrialpes fr xml 


logic xpath optimization 
proceedings acm symposium document engineering 
acm press new york ny usa 


xpath formal semantics coq approach 
tphols emerging trends proceedings th international conference theorem proving higher order logics 
university utah salt lake city utah united states 
gottlob koch pichler 
efficient algorithms processing xpath queries 
acm transactions database systems 
gr del thomas wilke eds 

automata logics infinite games guide current research 
springer verlag new york new york ny usa 
grzegorczyk 
classes recursive functions 

krishnan brayton 
early quantification partitioned transition relations 
iccd proceedings international conference computer design vlsi computers processors 
ieee computer society washington dc usa 
acm transactions information systems vol 

month yy 
system static analysis xpath hopcroft motwani ullman 
automata theory languages computability 
addison wesley longman publishing boston ma usa 

synchronized multimedia integration language smil specification recommendation 
www org tr rec smil 
hosoya vouillon pierce 
regular expression types xml 
acm transactions programming languages systems 
kozen 
results propositional calculus 
theoretical computer science 
kozen 
finite model theorem propositional calculus 
studia logica 
kupferman vardi 
weakness self complementation 
proc 
th symp 
theoretical aspects computer science 
lncs vol 

springer verlag london uk 
levin pierce 
type optimization regular patterns 
dbpl proceedings th international symposium database programming languages 
lecture notes computer science vol 

springer verlag london uk 
martens neven 
frontiers tractability typechecking simple xml transformations 
pods proceedings third acm symposium principles database systems 
acm press new york ny usa 
marx 
conditional xpath order complete xpath dialect 
pods proceedings third acm symposium principles database systems 
acm press new york ny usa 
marx 
xpath conditional axis relations 
proceedings th international conference extending database technology 
lncs vol 

springer verlag london uk 
miklau suciu 
containment equivalence fragment xpath 
journal acm 
murata lee mani 
taxonomy xml schema languages formal language theory 
acm transactions internet technology 
neven 
automata logic xml 
csl proceedings th international workshop th annual conference computer science logic 
springer verlag london uk 
neven 
automata theory xml researchers 
sigmod record 
neven schwentick 
xpath containment presence disjunction dtds variables 
icdt proceedings th international conference database theory 
lncs vol 

springer verlag london uk 
pan sattler vardi 
bdd decision procedures cade proceedings th international conference automated deduction 
springer verlag london uk 
pemberton 
xhtml extensible hypertext markup language second edition recommendation 
www org tr xhtml 
schwentick 
xpath query containment 
sigmod record 
sur hammer sim 
xquery language processing updates xml 
plan proceedings international workshop programming language technologies xml venice italy 
brics notes series vol 
ns 
brics aarhus denmark 
takahashi yamamoto hagiya 
decision procedure alternation free way modal calculus 
tableaux proceedings th international conference automated reasoning analytic tableaux related methods 
lncs vol 

springer verlag london uk 
thatcher wright 
generalized finite automata theory application decision problem second order logic 
mathematical systems theory 
acm transactions information systems vol 

month yy 
da 
static type checking xslt 
proceedings acm symposium document engineering 
acm press new york ny usa 
vardi 
reasoning past way automata 
icalp proceedings th international colloquium automata languages programming 
springer verlag london uk 
wadler 
semantics xpath 
internal technical note xsl working group homepages inf ed ac uk wadler papers xpath semantics xpath semantics pdf 
wood 
equivalence xml patterns 
cl proceedings international conference computational logic 
lncs vol 

springer verlag london uk 
wood 
containment xpath fragments dtd constraints 
icdt proceedings th international conference database theory 
lncs vol 

springer verlag london uk 
acm transactions information systems vol 

month yy 
