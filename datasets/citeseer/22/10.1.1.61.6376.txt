logical concepts cryptography simon kramer ecole polytechnique rale de lausanne epfl simon kramer epfl ch 
exploration logical concepts cryptography linguistic abstraction model theoretic combination logical system called cpl cryptographic protocol logic 
focuses fundamental aspects cryptography 
security communication opposed security storage cryptographic protocols opposed cryptographic operators 
logical concepts explored 
primary concepts modal concepts knowledge norms space time 
secondary concepts knowledge de dicto knowledge de re confidentiality norms relevant implication multiple complex truth values 
distinguishing feature cpl unifies refines variety 
existing approaches 
feature result conception property logics model process algebra formalisms 
illustrate expressiveness cpl representative requirements engineering case studies 
addendum appendix extend core cpl qualitative time real time time stamps timed keys potentially drifting local clocks quantitative time 
extension conservative really simple requires refinement relational symbols new rule resp 
parameter operator new conjunct truth predicate addition relational symbols operators 
provides evidence lamport claim adding real time untimed formalism really simple 
addendum ii 
appendix sketch extension core cpl notion probabilistic polynomial time pp computation 
illustrate expressiveness extended logic tentative formalisation case studies fundamental applied concepts 
fundamental concepts way function hard core predicate computational indistinguishability party interactive proof prover zero knowledge 
applied concepts security encryption schemes unforgeability signature schemes attacks encryption schemes attacks signature schemes breaks signature schemes 
argument appendix light logic adding pp property formalism cryptography simple achieved ockham razor extension existing core logic cpl keywords applied formal logic cryptographic protocols definition cryptographic protocol begins ends stage mastered requirements engineering definition requirements global properties protocol supposed meet 
particular understanding protocol requirements necessary understanding protocol attacks looked negations necessary conditions requirements hold 
protocol definition particular requirements engineering engineering tasks spirit 
contrast definition cryptographic operators scientific task spirit requiring profound expertise different fields discrete mathematics 
protocol engineers expertise 
example legitimate protocol engineer negligible probabilities consider negligible 
ideally engineers master single common formal language requirements engineering adequately abstracts mathematical concepts 
logic sciences common natural stipulate lingua franca requirements engineering cryptographic protocols appropriate logical language 
task shall synthesise relevant logical concepts cryptography cryptographic protocol logic tradition temporal logic cf 
effort similar ambition complementary tradition dynamic logic :10.1.1.19.480
validate language stage specification stress different requirements verification stress different protocols case studies specification precede verification 
existence verification examples guaranteed subsumption cpl logics authors opposite focus 
briefly survey requirements engineering practice specification cryptographic protocols 
protocol designers commonly specify cryptographic protocol jointly semi formal description behaviour local properties terms protocol informal prescription intended goals global properties natural language 
informal specifications major drawbacks defined understood meaning allow verification correctness 
formal specifications cryptographic protocols local global properties expressed explicitly logical property language implicitly code resp 
encodings programming modelbased language applied calculus process calculi csp applied calculus spi calculus 
examples encodings equations protocol instantiations predicates defined inductively consider 
difficult get cryptographic protocols right really difficult design protocol requirements 
problems security protocols arise protocol designed satisfy requirements requirements understood place generally precisely poly dimensional norms knowledge space time mono modal precisely mono dimensional time poly modal action parameters traces instantiations may exhibit 
encodings major drawbacks worse may exist directly comparable encodings programming languages properties expressed explicitly logical languages easy understand intuition encoded property explicit encoding 
hand process calculi ideal design formalisms 
offer due minimalist linguistic abstractions modelling concepts syntax mathematical operational notion execution semantics win win situation rigour machine models practical usability programming languages 
informal language programming effects languages inadequate expressing comparing cryptographic properties 
belief logical language equipped appropriate notion truth cryptographic logic produce necessary adequacy 
number logics proposed aim far ranging special purpose cryptographic logics pioneering ban logic unification variants general purpose propositional modal program higher order logics special purpose cryptographic protocol analysis propositional logic programming modal deontic epistemic linear temporal program dynamic hoare style order higher order combinations thereof epistemic temporal distributed temporal dynamic epistemic epistemic temporal order temporal dynamic epistemic temporal deontic epistemic temporal :10.1.1.19.480:10.1.1.26.1009:10.1.1.8.7994:10.1.1.129.1575:10.1.1.115.3569
logics elucidated important aspects cryptographic communication proved relevance logical concepts modelling communication 
particular mere fundamental cryptographic goals secrecy authenticity non repudiation reveals paramount importance concept knowledge propositional called knowledge de dicto individual called knowledge de re manifestation 
possible natural language goals cf 
section formalisations cpl 
secrecy protocol messages forbidden adversary eve know eve know knowledge de re subjunctive indicative mode respectively 
authenticity message viewpoint agent agent knows knew knowledge de dicto knowledge de re past indicative mode 
non repudiation authorship message corroborated proof proof author knew know knew knowledge de re past subjunctive past indicative mode knowledge de dicto conditional mode 
general purpose standard epistemic logic inadequate cryptographic setting due weak paradoxes rea matter fact unique definitions goals exist son standard deontic logic inadequate cf 
section 
logic inadequate due inadequacy goals crucially rely knowledge necessarily true possibly false belief error control 
linear logic approach flavour operational approach aim providing declarative abstractions operational aspects 
special purpose logics limited adequacy due choice primitive concepts belief negation quantification specific primitive concepts price high extension costs 
goal supply formal synthesis logical concepts single multidimensional modal logic cpl yields requirements intuitive syntactically particular models cryptography 
believe formal method science ultimately logic defined relation satisfaction model theoretic approach model checking relation deduction proof theoretic approach automated theorem proving 
second requirements engineering mainly meaning understanding formalising properties believe model theoretic approach stage suitable proof theoretic approach 
intuitive mean conceptual dimensions requirement apparent distinctive forms formula expresses requirement succinctly 
argue propositional higher order second order logic set theory unsuitable front formalisms requirements engineering purposes 
propositional logic simply weak specification language suited fully automated approximative verification 
higherorder logic set theory may semantically sufficiently expressive unsuitable engineers charge capturing meaning protocol requirements acceptable amount time financial cost specification space intelligibility specifications 
intuitiveness specifications formalism yields just luxury difficult essence measure pragmatics practical usefulness 
application domain cryptographic protocols conceptually rich 
suitable requirements engineering formalism organise hard wire pre compile conceptual variety semantics provide succinct intuitive linguistic abstractions syntax 
resulting added value formalism empowerment engineer speedup mental process formalisation powerful tools speed extent possible combinators process calculus mapped linear logical connectives cf 
research monograph multi dimensional modal logic active research area characterised 
branch modal logic dealing special relational structures states entities inner structure 
furthermore accessibility relations states partly determined inner structure states preliminary outdated version cpl appeared informal proceedings confused model formalism model checking automated theorem proving 
higher order logic having conceived general purpose formalisms obviously lack special purpose semantics syntax 
suited logical frameworks back ends special purpose formalisms object logics 
example candidate language model theoretic relying set theory semantics 
cpl order fragment making statements protocol events individual knowledge knows structure cryptographic messages induced events modal fragments making statements confidentiality norms cf 
deontic logic propositional knowledge knows knowledge cryptographic states affairs cf 
epistemic logic execution space cf 
spatial logic execution time cf 
temporal logic 
cpl unifies order modal logics single multi dimensional logic 
cpl refines standard epistemic deontic logic sense resolves long standing problem weak paradoxes caused logical omniscience conflicting obligations respectively logics exhibit applied cryptographic setting cf 
section 
cpl property formalism goes ambition integrates important model framework process algebra novel way 
cpl temporal accessibility relation semantics temporal modalities defined event trace generating process reduction calculus example execution constraints checked cpl satisfaction second cpl epistemic accessibility relation semantics epistemic modality knows definitional basis observational process equivalence model process algebraic complementary property formulation protocol requirements 
cryptographic protocol involves concurrent interaction agents physically separated exchange messages unreliable insecure transmission medium 
expressing properties concurrent interaction requires temporal operators 
physical separation unreliable insecure transmission medium turn demands epistemic deontic modalities 
see consider existence separating medium introduces uncertainty agents trustworthiness execution protocol actions sending receiving contents exchanged messages actuality epistemic concern legitimacy deontic concern 
exactly role cryptographic protocol re establish trustworthiness judicious cryptographic evidence essential information ciphers signatures hash values knowledge information messages truth formulae bred crypto system shared key public key system cryptographic keys nonces generated cryptographic seeds seed values 
keys opposed hash values nonces requires knowledge keys shared priori 
sharing key knowledge established cryptographic protocols called key establishment protocols comprising key transport key agreement protocols chapter executed cryptographic protocol may subsequently keys 
certain cryptographic protocols considered interrelated notion composition common execution space need spatial operators 
argument spatial operators comes fact correct protocol conserve inner correctness composed protocols totally correct protocol stable different execution contexts 
logic syntax language cpl parametric language individuals protocol messages 
chiefly relational functional exactly language protocol messages may instantiated 
temporal fragment coincides syntax linear temporal logic past 
shall fix mind comprehensive language individuals 
definition protocol messages 
protocol messages structure 
names logical constants message public keys message hashes symmetric message ciphers asymmetric message ciphers signed messages message tuples 
names agent names moment dolev yao adversary name eve symmetric session long term keys asymmetric private keys nonces session identifiers 
assume private key compute corresponding public key dsa elgamal 
shared private keys shall referred confidential keys ck keys remain secret 
symmetric keys may compound key agreement opposed mere key transport 
message forms open messages messages variables message computational represent absence intelligibility just number zero computational represent absence quantity 
message useful doing knowledgebased calculations cf 
definition just number zero useful say doing number calculations 
focus cryptographic protocols cryptographic operators leads moment making abstraction exact representation messages bit strings assuming perfect hashing collision resistance hash functions injective strong pre image resistance hash functions invertible infeasible compute perfect encryption shared key private key corresponding public key infeasible compute 
introduce type language messages increase succinctness statements structure messages 
definition message types 
message types structure 
scm ac sp adv message type forms shall message types variables key position 
observe kind message corresponding type hashes scm symmetric ac asymmetric ciphers sp signatures tuples encryption signature types parametric union intersection difference message types message type 
short message types structure describing dependent types closed union intersection difference 
denote types dynamically names 
macro define adv ck ck definition formulae 
set formulae contains precisely propositions closed predicates formed operators table 
denotes basic action data formulae denote agents nonces denotes symmetric key private key 
predicates transformed propositions binding free variables universal generalisation existential abstraction quantification substitution individuals free variables individuation 
accordance standard logical methodology basic predicates express elementary facts 
table 
predicate language ka eve eve eve eve symbols intuitive meaning pronounced permitted ka knows necessarily implies conjunctively separates assume guarantee previous freshly generated nonce session freshly generated symmetric key session freshly generated easily allow agents group keys private key session eve securely private channel sent strict sub term message session eve public channel sent session eve securely private channel received session eve possibly adversary received session type knows subterm 
language sorted agents referred name names data messages 
expresses propositional knowledge 
contrast expresses individual knowledge 
individual knowledge conveys understanding purpose possession certain piece cryptographic information cryptographically irreducible parts 
established capability agents synthesise pieces previously analysed pieces 
understanding purpose mean knowledge structure compound knowledge identity atomic names information 
note understanding requires minimal redundancy information 
conditional epistemic necessary sense set evidence truth consequent knowledge key included set evidence truth antecedent knowledge plain text derived key 
epistemic conditional captures epistemic dependence truth antecedent truth consequent 
formula satisfied protocol model model separated exactly parts part satisfies key distribution production satisfies key consumption 
formula satisfied model models satisfy parallel composition models satisfies cf 
total compositional correctness protocol mentioned earlier 
typing formulae essential pragmatic purpose 
typing atomic data designates name atomic type linguistic abstraction mentioned essential modelling hypothesis minimal redundancy 
typing compound data simply increases succinctness statements structure messages 
terms typing atomic data equality macro definable existential quantification cf 
appendix 
exemplify expressiveness cpl selection tentative formalisations fundamental cryptographic states affairs 
best knowledge existing crypto logic sufficiently expressive allow definition totality properties totality properties expressed formalism 
fact entire logics designed capture single cryptographic state affairs authenticity anonymity resp :10.1.1.115.3569
secrecy 
invite reader validate formalisations criteria intuitiveness succinctness easily allow agents group keys discern simplicity formalisation results sharp difficulty formalisation process 
empowerment cpl confers formalisation process involving large number conceptual degrees freedom tractable engineering level 
note formalisations employ macro defined predicates cf 
appendix reader urged consult abbreviates disjunction name generation sending receiving performed malicious written malicious iff knowingly performs forbidden action time written kb 
honesty honest written honest iff malicious written malicious 
faulty written faulty iff performs forbidden action time written 
prudent written prudent iff faulty written faulty 
trust trusts written trusts iff knows prudent written ka prudent 
reachability secrecy protocol secrecy property iff adversary eve knows classified information written eve eve 
perfect forward secrecy 
compromise long term keys compromise past session keys page written eve eve anonymity anonymous state affairs iff knows agent involved identify agent written ka ka 
known key attack 
adversary obtains keys previously uses information determine new keys page written ck eve ck eve eve key confirmation 
party assured second possibly unidentified party possession particular secret key page written ka implicit key authentication 
party assured party aside specifically identified second party possibly additional identified trusted parties may gain access particular secret key page written ka shared secret shared secret written iff know written explicit key confirmation 
implicit key authentication key confirmation hold page written ka authorship datum authored datum written authored iff know written 
material conditional antecedent consequent truth functionally related key corruption derivation session key corrupted long term key 
authenticity datum datum authentic origin say viewpoint written authentic iff attribute sense authorship knows authored written kb authored 
individual proof proposition proof proposition written iff assuming arbitrary knows guarantees knows true written ka 
non repudiation authorship authorship iff proof authored written authored 
authentication 
process party assured acquisition evidence identity second party involved protocol second participated active immediately prior time evidence acquired page written authentic corruption agent adversary eve eve comes know knows state affairs written eve compositional protocol correctness protocol plug initial state satisfies property provided parallel protocol environment satisfying written 
semantics definition satisfaction anchored rooted defined protocol states tuples protocol model process term protocol history event trace 
purpose presuppose notion execution example relation temporal accessibility jargon modal logic producing protocol events certain form chaining form protocol histories 
stress kind protocol events parallel composability process terms particularities assumed 
protocol events form generation nonce session written generation fresh symmetric key session written generation fresh private key session written insecure input session written secure input session written si insecure output session written secure output session written 
definition event secure unobservable adversary eve 
convention name generation secure event 
write protocol events name generation events communication events secure events 
protocol histories simply finite words protocol events event traces denotes empty protocol history 
statements roughly correspond hoare triples 
define satisfaction functional style structure formulae 
satisfaction employs complex multiple truth values 
truth values complex sense tuples simple truth value true false set events evidence necessary corroborate simple truth 
definition satisfaction 
denote satisfaction formula protocol state anchor root implicit execution path model iff set protocol events iff paths true paths denotes set paths rooted induced denotes function truth denotation formulae complex truth values cf 
table 
denotes state say position path denotes set events derived protocol history sequence events denotes derivation individual knowledge agent set corresponding events view extraction analysis synthesis relevant data generated received sent cf 
appendix denotes concatenation protocol histories preserving uniqueness name generation events ck eve ck eve denotes state formula expressing state violation cryptographic setting adversary come know confidential key denotes relation epistemic accessibility associated modality ka defined denotes unary function inspired cryptographic parsing defined protocol states logical formulae defined messages tacitly lifted protocol states logical formulae denotes relation structural equivalence defined process terms event traces process terms denotes smallest equivalence relation expressing associativity commutativity processes event traces denotes permutation iff denotes length function 
permission macro defined want highlight new notion state violation give rise new notion permission real time probabilistic polynomial time settings cf 
appendices 
look state formula parameter logic 
epistemic accessibility relation previously mentioned double serves definitional basis epistemic modality ka cpl definitional basis observational process equivalence table 
truth denotation eve eve eve si eve type subterm ip vm mem vm em ka 
ip vk vj ej ek vj ej vk ek false 
false 
vk vj ej ek vj ej vk ek 
cryptographic parsing captures agent capability understand structure cryptographically obfuscated message 
allows definition cryptographically meaningful notion epistemic accessibility intermediate concept structurally indistinguishable protocol histories 
idea parse unintelligible messages message 
definition cryptographic parsing 
cryptographic parsing function associated agent protocol history complying assumptions perfect cryptography identity names message public keys acts defined table 
table 
parsing cryptographic messages 



definition structurally indistinguishable protocol histories 
protocol histories structurally indistinguishable viewpoint agent written iff observes event pattern data patterns formally iff legitimate agent adversary eve 

hl hl hr hl hl hr hr legitimate agent hr ha 
hl hr hl hr adversary eve 

hl eve hr hl eve hr hl eve hl eve eve hr hl eve hl eve hl hl hr hr hr hr hl eve hl eve hr hr hr eve eve eve eve eve note observations different past stages hl hr respectively knowledge cf 
hr 
learning new keys may render intelligible past messages agent 
hl 
agents including eve equivalence infinite index due fresh name generation right congruence due possibility learning new keys refinement projection view decidable 
lift structural indistinguishability protocol histories protocol states tuples protocol term protocol history obtain relation epistemic accessibility 
definition structurally indistinguishable protocol states 
denote cryptographic processes models cryptographic protocols set protocol states structurally indistinguishable viewpoint agent written iff 
discussion terminology relevant logics spatial conditional epistemic conditional relevant opposed truth functional material conditional sense information antecedent evaluated relevant information consequent evaluated 
relevant potential information represented adjoint state 
relevant actual information represented event subset 
example consider relevance model part mentions protocol history eve eve eve states primary knowledge eve requires derive secondary knowledge model 
words eve knew eve know model 
property eve cryptographic knowledge potentiality 
addition information potentially leads multiplication knowledge 
comparison consider eve eve eve eve states eve derives secondary knowledge primary knowledge model 
words eve knows necessarily necessarily eve knows model 
property eve cryptographic knowledge actuality 
contrast consider tautology eve eve eve states property cryptographic operation encryption 
believe natural incidentally relevant notions implication cryptographic knowledge 
particularly interesting spatial epistemic conditional definition cryptographically meaningful notion permission cf 
table prohibition cf 
appendix 
definition says permitted true true state violation reached due true 
notion permission inspired page notion prohibition defined framework dynamic logic 
authors resume basic idea 
action forbidden doing action leads state violation observe construe notion prohibition actions construe notion permission propositions 
recall motivation approaches standard deontic logic sdl existence weak paradoxes sdl 
sdl contains true statements counter normative intuition originally intended capture 
sdl permission prohibition obligation cpl permission prohibition 
fact notion obligation cpl faulty cryptographic protocols create context conflicting obligations treatment require machinery defeasible deontic logic 
consider obligatory state violation reached protocol execution agents comply protocol prescription 
obligations obviously conflicting context created execution faulty protocol definition reach state violation 
semantics epistemic modality reconciles cryptographically intuitive incomplete semantics complete computational renaming semantics 
achieve casting cryptographic intuition simple rule computational formulation epistemic accessibility 
similarly parse unintelligible data agent individual knowledge messages 
addition inspired parse unintelligible data agent propositional knowledge ka 
additional parsing epistemic modality avoids weak paradoxes sdl exist standard epistemic logic sel 
paradoxes due epistemic necessitation fact agent knows logical truths 
illustrate consider simple example 
paradoxically ka sel truthfully ka cpl cf 
clause truth denotation ka table 
discussion see 
note truth condition epistemic modality enhancement sense able eliminate universal quantifier renamings employment cryptographic parsing 
note epistemic modality capture knowledge ka due reflexivity associated accessibility relation 
believe having accomplished cpl original synthesis unprecedented variety logical concepts relevant logical modelling cryptographic communication 
particular defined cryptographically meaningful sense dolev yao moment epistemic modality invented cryptographically interesting epistemic conditional pioneered application spatial logic cryptographic concerns shown cryptographically meaningful deontic modalities definable combination epistemic spatial conditional 
extending cpl notion probabilistic polynomial time computation order accommodate cpl modern cryptography 
case order cpl suffice applications trivial extend cpl second order 
just allow message types denoting sets messages messages quantification may range second order entities sets 
proof system cpl desiderata 
fortunately axiomatisations cpl operators epistemic conditional exist reduces task defining proof system finding laws correctly axiomatise mixing operators 
mika cohen stimulating discussions crypto logics constructive criticism 
auxiliary definitions table 
derivation individual knowledge data extraction data synthesis data analysis specification library classical propositional order operators eve true false exclusive modal operators forbidden equivalent disjunctively separates assert guarantee far time henceforth eventually correlated relational symbols equal strict subterm new possesses tk tacitly knows scf acp sp sc scv ac sc ac sv subtype operational guarded sk symmetric key sk sk sk sk session short term key long term key prk private key prk public key ck sk prk confidential key timed cryptographic protocol logic formal modelling specification verification general purpose timed systems received considerable attention formal methods community nineteen eighties 
see survey timed models automata petri nets model property specification languages process calculi resp 
logics verification tools survey timed property specification languages logics 
formal methods community paid comparatively little nineteen nineties attention timed aspects cryptographic systems cryptographic protocols due complexity deserve special purpose models formalisms specification verification 
aware special purpose formalisms timed cryptographic protocols 
model formalisms process calculi discrete time contribution dense time 
property formalisms logics interval time parametrised epistemic modalities third order logic point logic allowing temporal points intervals 
clearly time models better distributed systems multiple clocks timers tested set reset independently 
specifically cryptographic systems locks unsynchronized due sabotage faults clocks synchronization mechanism overflows dependence potentially unreliable clocks remote sites 

behaviors generally expected clock failures 

timed logics classified order nature temporal domain 
order propositional logic simply weak specification pur poses modal logics provide powerful abstractions specification purposes expressive cf 
main part report higher order logics expressive cost axiomatic computational incompleteness irst order logics compromise expressiveness computability axiomatically complete general 
core cpl poly dimensional modal norms knowledge space qualitative time order logic cf 
main part report 
temporal domain core cpl instantiated transitive irreflexive linear bounded past possibly branching priori flattened unbounded depending protocol discrete event induced protocol states temporal accessibility relation 
instantiated temporal accessibility relation additionally accounts quantitative time 
time rational number valued yielding dense temporal grain referenced explicitly truth timed formula depend evaluation time implicit time operators macro definable see measured potentially drifting local clocks agent standard dolev yao adversary local clock drift rate advanced monotonically letting adversary choose amount desires increase local clock de facto de system clock determinant adversarial break short term keys enabled jointly key expiration ciphertext attacks weakest reasonable attack 
section describes extension cpl 
extension depends core described main part report reader urged consult parallels extension tc 
extension razor extension core cpl subscribe lamport claim adding real time untimed formalism really simple 
special purpose machinery timed including cryptographic settings need built scratch heavy weight 
temporal accessibility relation generates events setting local clock clock value session convention events unobservable adversary secure 
fully automated approximative verification logical frameworks carrying current process term history past protocol events 
pure state pure event languages quite support natural expressiveness desirable specification real world systems 
consider protocol messages finite length implies real numbers time stamps real clocks finite precision amounts natural generalisation adversary scheduling power control relative temporal order protocol events network space control absolute temporal issuing time 
addition new relational symbols forming atomic formulae comparison temporal expressions time values associated sort tv messages testing agent local clock time respectively 
truth denotation follows smaller equal denotes obvious evaluation function temporal expressions time values confused function truth denotation eve ti denotes time value clock set event denotes drift rate local clock denotes temporal difference eve clock set event eve clock set event far hi ti hi eve ti eve 

refinement new parameter relational symbol new name generation validity tag form tb te declaration intended tb te validity generated name typically key 
truth denotation 
refinement adding new rule relation data derivation semantics relational symbol individual knowledge adversarial break short term keys enabled jointly key expiration expired existence ciphertext attack key eve eve eve prefix eve expired tv tv tn tn eve tv tn tv denotes duration validity considered key strength key tn duration attack considered corresponding length bit string representation key time corresponding ciphertext known adversary expired tn tn eve te te te tn te tb tb te tb te tb te tv tb te te tb tv 
refinement new conjunct state violation key expiration definition permission operator expressiveness ck eve ck eve expired macro definability operators general purpose timed logics point parametrised temporal modalities called freeze quantifiers eve interval parametrised temporal modalities absolute time understanding closed intervals understanding intervals relative current time eve eve eve cryptographic states affairs involving qualitative temporal modalities section easily adapted quantitative setting replacing qualitative temporal modalities quantitative ones actual time values points intervals desired 
cryptographic states affairs involving quantitative time secrecy point time possibly timed confidential key ck eve ck eve expired successful ciphertext attack break key sk eve expired eve eve notice epistemic bi conditional says evidence required eve know exactly cf 
bi ciphertext key break knowledge single ciphertext easily generalised key break multiple ciphertexts 
mn multiple existential quantification 
adversary potentially attacking performing computations ciphertext order recover desired key similarly open intervals probabilistic polynomial time cryptographic protocol logic appendix presents ockham razor extension core cpl cf 
main part notion probabilistic polynomial time pp computation 
hope convince reader adding notion pp computation property formalism cryptography simple conceived refinement dolev yao conception cryptographic operators 
special purpose machinery pp real time need built scratch heavy weight 
style presentation concepts alternative traditional style operational interactive turing machines 
contrast style logical linguistic abstractions cryptographic constructions 
aware existing formalisms specification verification cryptographic constructions 
property tradition order dynamic precisely mono dimensional qualitative time poly modal action parameters logic satisfaction deduction relations originally conceived cryptographic protocols higher order logic deduction originally conceived cryptographic operators 
model process algebra equivalence specification verification 
contrast tradition order temporal precisely poly dimensional norms knowledge space qualitative possibly quantitative time mono modal logic moment satisfaction originally conceived cryptographic protocols extended encompass cryptographic operators extent 
symbolic logic qualify logic symbolic language allows quantification individuals represented syntactic terms formed term constructors functional symbols 
sense cpl symbolic language allows quantification individuals protocol messages represented message terms 
core cpl cf 
main part qualified sense dolev yao message terms interpreted bitstrings 
contrast concrete sense pp computation message terms interpreted bit strings 
precisely message terms denoted probability distributions bit strings interpreting logical constants bit strings functional symbols possibly probabilistic algorithms bit strings 
furthermore core cpl qualified positive truth knowledge false positives false statements wrongly established true false belief respectively impossible 
contrast probabilistic truth higher order logics expressive cost axiomatic incompleteness traditional usage term philosophical standardised knowledge false positives truth possible negligible probability knowledge im probable variable degrees support 
highlight language probability implicit belief new modality 
particular likelihood operator cf 

reason modern cryptography truth established overwhelming probability belief human may established possibly non overwhelming degrees support 
philosophically speaking cf 
rudolf carnap probability epistemological measure subjective belief states affairs ontological measure objective possibility 
refinement modality probability allows expression degrees agent may experience cryptographic states affairs 
probability theory fundamental concept probability theory probabilistic experiment characterised indeterminacy outcome entropy 
fact experiments probabilistic implies stateful represent states inherent potential considered model execution means probabilistic state transition 
priori experimenter human experience considered experiment typically uncertainty actual outcome experiment hypothesis expected outcome 
posteriori experimenter typically epistemic error actual outcome experiment hypothesis priori 
exactly kinds probabilistic experiments relevant process reduction protocol execution cf 
table message denotation message evaluation cf 
table 
table 
probabilistic process reduction probability theory cpl sample space variable experiment protocol state atomic event transition possible value outcome 
probability distribution hypothesis outcome proposition hypothesis outcome table denotes set process terms protocol models potential set protocol histories finite word past protocol events message output input new key nonce generation relation process reduction modelling interleaving concurrency protocol events cpl relation satisfaction 
note interleaving concurrency implies atomic events mutually exclusive independent branching 
applying principle indifference fix uniform distribution table denotes set message terms function message denotation 
table 
probabilistic message denotation probability theory cpl sample space variable experiment message term atomic event possible value outcome probability distribution hypothesis outcome hypothesis outcome probabilistic polynomial time cryptography distinguishing features probabilistic polynomial time cryptography key signature generation encryption probabilistic randomised execution time operations item decryption polynomially bounded security parameter length key key generation adversaries pp turing machines oracle access oracles pp turing machines 
extension section describes extension cpl 
extension depends core described main part report reader urged consult 
syntax syntactic novelties 
logical constants atomic message terms refinement message length indication addition bit strings probability values pv associated sort pv confused concept atomic events probability theory 
functional symbols refinement hashes ha symmetric sea asymmetric aea encryptions signatures sa parameter ha sha md sea des moo aes moo aea rsa elgamal resp 
sa rsa elgamal 
name employed algorithm 
moo cbc cfb ofb 
parameter name employed mode operation block cipher 

relational symbols refinement predicate new name generation nga security parameter parameter nga sea aea sa name employed generation algorithm addition binary symbol comparison probability values comparison time values cf 
appendix 
logical operators addition modality bq belief error control probability agent err truth considered proposition say written bq semantics principal semantic novelties 
backwards compatible refinement temporal accessibility pp temporal accessibility addition denotation events algo stating agent denoted message term string application algorithm algo nga algo nga name algo 
refinement individual knowledge pp individual knowledge cf 
table relying stateful pp message denotation choose nga choose 

names denotes message results substitution names corresponding denotations 
act choosing strictly formal hilbert choice operator 

ka ba polynomial refinement propositional knowledge ka ka 
table 
pp derivation individual knowledge random coin tossing input data extraction data synthesis data analysis data data abstraction pp abstraction ha polynomial ha pp propositional knowledge ka ka polynomial addition believe error control pv ba ka 
ba 

redefinition state violation desired kind breaks successful attacks cryptographic schemes formalised section case studies illustrate expressiveness tentative formalisation case studies fundamental applied concepts 
fundamental concepts way function hard core predicate computational indistinguishability interactive proof prover zero knowledge 
applied concepts security encryption schemes unforgeability signature schemes attacks encryption schemes attacks signature schemes breaks signature schemes 
note core cpl focused cryptographic protocols requirements focus cryptographic operators attacks breaks 
naturally properties operators take form tautologies propositions hold protocol model 
formalisations illustrate dramatic expressive power results combined epistemic spatial operators 
fundamental concepts section spirit 
definition random propositional guessing 
pv bq definition hard proposition 
proposition hard iff model agent guess truth 
tautology 
generalise concept hard proposition closed formula concept hard predicate open formula 
definition hard predicate 
ary predicate 
mn hard 
mn satisfying ary predicate 
mn iff model 
mn randomly guess truth 
mn 

mn 
mn formalisation way function 
function easy compute hard invert page ease computation hardness invertibility hard satisfying notice standard definition way functions requires operator computable deterministic polynomial time satisfiability may computable probabilistic polynomial time cf 
table 
easily provide deterministic variant simply disallowing random coin tossing 
observe definition implies cryptographic operators common knowledge agents 
order express individual knowledge operators need quantification functional symbols logic higher order 
formalisation hard core predicate 
polynomial time predicate called hard core function efficient algorithm guess success probability negligibly better half page computable polynomial time 
hard core function iff hard satisfying notice identify agents feasible algorithms 
formalisation computational indistinguishability objects considered computationally equivalent differentiated efficient procedure page computationally indistinguishable iff hard satisfying 
definition individual evidence proof 
conjecture 



formalisation party interactive proof party interactive proof party computation party protocol agents initiated proposition protocol goal possibly minimal finite chain 
mn messages 
mn proof consecutive pairs mi mj mj derives mi due communication author formulation conjecture characteristics interactive proofs 
certain soundness completeness definition interactive propositional knowledge 
ik formalisation proof knowledge 
interactive proofs prover asserts knowledge object 
merely existence 
page formalisation zero knowledge ik zero knowledge proofs defined interactive proofs convey additional knowledge correctness proposition question zk ik spelled verifier knows interaction prover knows proof proposition know proof evidence corroborate truth 
observe importance scope existential quantifiers 
philosophically speaking pure propositional knowledge zero individual knowledge relevant truth 
goldreich words verifier told trusted party assertion holds page 
standard zero knowledge zero knowledge malicious verifier instance scheme eve 
zero knowledge honest verifier definable zk honest 
conjecture 
feasibly computable zero knowledge proof feasibly computable valid assertion page zk logical formulation instance simulation paradigm 
formalisation party interactive proof party interactive proof party computation party protocol agents 
initiated proposition protocol goal possibly minimal finite chain 
mm 
mm proof consecutive pairs ai mi aj mj mj derives mi due communication ai aj author formulation definition quotient proof 
note pronounced independent knowledge 
quotient proofs called compositional proofs 
definition multi prover zero knowledge 
zk ik observe importance scope existential quantifiers 
applied concepts section spirit 
note clarity names cryptographic algorithms omitted message terms sequel 
definition security encryption schemes 

standard security infeasibility obtaining information regarding plaintext page semantic security 
priori information plaintext infeasible obtain new information plaintext ciphertext feasible obtain priori information plaintext page priori information obtaining information news logical formulation instance simulation paradigm 
observe similarity previous instance 
indistinguishability encryptions computationally indistinguishable sense formalisation computationally indistinguishable sense formalisation 
non malleability 
infeasible adversary ciphertext produce valid ciphertext encryption key related plaintext page eve eve related eve eve eve eve formalisation unforgeability signature schemes infeasible produce signatures users documents sign page authored attacks encryption schemes state formalisations attacks encryption schemes vulnerabilities increasing strength 
formalisation ciphertext attack 
adversary cryptanalyst tries deduce decryption key symmetric resp 
private plaintext observing ciphertext 
mn page eve eve eve eve eve eve mn eve mn eve ac eve mn ac eve mn formalisation known plaintext attack 
adversary quantity plaintext 
mn corresponding ciphertext page eve eve eve mn eve mn eve mn eve eve eve mn eve mn eve mn interpretation quantity plaintext refined number plaintexts number parts plaintexts replacing eve eve eve eve mn mn mn eve mn eve 
formalisation chosen plaintext attack 
adversary chooses plaintext corresponding ciphertext 
subsequently adversary uses information deduced order recover plaintext corresponding previously unseen ciphertext page eve eve eve eve eve eve eve eve eve eve eve eve interpretation plaintext refined plaintext plaintext replacing eve eve mn mn eve mn 
formalisation adaptive chosen plaintext attack 
chosen plaintext attack choice plaintext may depend ciphertext received previous requests page denote chosen plaintext chains public key form inductively defined macro expressing realisation chain agent eve eve eve eve eve eve eve formalises adaptive chosen plaintext attack private key 
formalisation corresponding attack symmetric key similar 
formalisation chosen ciphertext attack 
adversary selects ciphertext corresponding plaintext page eve eve eve eve eve eve formalisation adaptive chosen ciphertext attack 
chosen ciphertext attack choice ciphertext may depend plaintext received previous requests page denote chosen ciphertext chains symmetric key form inductively defined macro expressing realisation chain agent eve eve eve eve eve eve eve formalises adaptive chosen plaintext attack symmetric key 
formalisation corresponding attack asymmetric key similar 
attacks signature schemes state formalisations attacks signature schemes increasing strength 
formalisation key attack 
adversary knows signer public key page eve eve eve formalisation known message attack adversary signatures set messages known adversary chosen page eve mn eve eve mn eve eve mn formalisation chosen message attack adversary obtains valid signatures chosen list messages attempting break signature scheme page eve mn eve eve mn eve eve mn formalisation adaptive chosen message attack adversary allowed signer oracle adversary may request signatures messages depend signer public key may request signatures messages depend previously obtained signatures messages page denote chosen message chains private key form cmc inductively defined macro expressing realisation chain agent cmc cmc cmc eve cmc eve formalises adaptive chosen message attack signing key 
breaks signature schemes state formalisations breaks signature schemes increasing strength 
formalisation existential forgery adversary able forge signature message 
adversary little control message signature obtained legitimate signer may involved deception 
page eve eve eve eve formalisation selective forgery adversary able create valid signature particular message class messages chosen priori 
creating signature directly involve legitimate signer page eve eve eve eve formalisation universal forgery adversary able create valid signature arbitrary message chosen priori eve eve eve eve formalisation total break adversary able compute private key information signer finds efficient signing algorithm functionally equivalent valid signing algorithm page eve eve 
meadows ordering satan menu survey requirements specification formal analysis cryptographic protocols 
science computer programming 
rogaway role definitions cryptography 
proceedings asian computing science conference 

menezes van oorschot vanstone handbook applied cryptography 
crc press 
goldreich foundations cryptography basic tools 
cambridge university press 
goldreich foundations cryptography basic applications 
cambridge university press 
manna pnueli temporal logic reactive concurrent systems specification 
springer 
mitchell pavlovic compositional logic proving security properties protocols 
journal computer security 
harel kozen tiuryn dynamic logic 
mit press 
boyd protocols authentication key establishment 
springer 
pierce logical relations encryption 
journal computer security 
ryan schneider goldsmith lowe roscoe modelling analysis security protocols csp approach 
addison wesley 
abadi fournet mobile values new names secure communication 
proceedings acm symposium principles programming languages 

abadi gordon calculus cryptographic protocols spi calculus 
information computation 
mitchell ramanathan scedrov probabilistic polynomial time process calculus analysis cryptographic protocols 
theoretical computer science 
abadi security protocols properties 
foundations secure computation ios press 
burrows abadi needham logic authentication 
acm transactions computer systems 
syverson van oorschot unified cryptographic protocol logic 
naval research laboratory washington usa 
aiello massacci verifying security protocols planning logic programming 
acm transactions computational logic 
abadi blanchet analyzing security protocols secrecy types logic programs 
journal acm 
bieber cuppens expression confidentiality policies deontic logic 
deontic logic computer science normative system specification 
john wiley sons 
basin awareness semantics security protocol analysis 
proceedings post cav workshop logical aspects cryptographic protocol verification 

zhang logic modeling dynamics beliefs cryptographic protocols 
proceedings australasian conference computer science 

syverson stubblebine group principals formalization anonymity 
proceedings world congress formal methods development computing systems 

halpern neill secrecy multi agent systems 
proceedings ieee computer security foundations workshop 

automatic verification secrecy properties linear logic specifications cryptographic protocols 
journal symbolic computation 
gray mclean temporal logic specify verify cryptographic protocols progress report 
proceedings ieee computer security foundations workshop 

jensen modal logics cryptographic processes 
electronic notes theoretical computer science 
volume 

adi new logic electronic commerce protocols 
theoretical computer science 
lowe calculus security protocol development 
technical report oxford university 
clarke jha machine checkable logic knowledge specifying security properties electronic commerce protocols 
proceedings lics affiliated workshop formal methods security protocols 

selinger models adversary centric protocol logic 
proceedings post cav workshop logical aspects cryptographic protocol verification 

cohen order verification cryptographic protocols 
journal computer security 
paulson inductive approach verifying cryptographic protocols 
journal computer security 
impagliazzo logics reasoning cryptographic constructions 
journal computer systems sciences 
logic verifying public key cryptographic protocols 
iee proceedings computers digital techniques 

benerecetti giunchiglia logic belief model checking algorithm security protocols 
proceedings forte 

caleiro basin metalogic security protocol analysis 
proceedings workshop combination logics 

baltag logics insecure communication 
proceedings conference theoretical aspects rationality knowledge 

dixon fisher temporal logics knowledge formal verification security protocols 
proceedings international symposium temporal representation reasoning 

logic spi calculus 
proceedings ifip workshop issues theory security 

bieber logic communication hostile environment 
proceedings ieee computer security foundations workshop 

glasgow panangaden logic reasoning security 
acm transactions computer systems 
miller representing reasoning operational semantics 
proceedings joint international conference automated reasoning 
invited 

gabbay wolter zakharyaschev dimensional modal logics theory applications 
elsevier 
blackburn de rijke venema modal logic 
cambridge university press 
kramer cryptographic protocol logic 
proceedings lics icalp affiliated workshop foundations computer security 

clarke jr grumberg peled model checking 
mit press 
fitting order logic automated theorem proving 
springer verlag 
fagin halpern moses vardi reasoning knowledge 
mit press 
dam relevance logic concurrent composition 
phd thesis university edinburgh 
bergstra ponse smolka eds handbook process algebra 
elsevier 
kramer nestmann calculus cryptographic communication 
proceedings lics affiliated workshop foundations computer security automated reasoning security protocol analysis 

kramer timed calculus cryptographic communication 
proceedings workshop formal aspects security trust 

canetti universally composable security new paradigm cryptographic protocols 
proceedings ieee symposium foundations computer science 

backes pfitzmann waidner universally composable cryptographic library 
proceedings acm conference computer communication security 

dolev yao security public key protocols 
ieee transactions information theory 
abadi rogaway reconciling views cryptography computational soundness formal encryption 
journal cryptology 
meyer dignum wieringa paradoxes deontic logic revisited computer science perspective 
computer scientists bothered concerns philosophers technical report uu cs utrecht university 
nute ed defeasible logic 
volume synthese library 
kluwer 
abadi tuttle semantics logic authentication 
proceedings acm symposium principles distributed computing 

cohen dam completeness result ban logic 
proceedings workshop methods modalities 

cohen dam logical omniscience semantics ban logic 
proceedings lics affiliated workshop foundations computer security 

wang formal verification timed systems survey perspective 
proceedings ieee 
temporal logics real time system specification 
acm computing surveys 
evans schneider analysing time dependent security properties csp pvs 
proceedings european symposium research computer security 

gorrieri simple framework real time cryptographic protocol analysis compositional proof rules 
science computer programming 
jeffrey timed spi calculus types secrecy authenticity 
proceedings concur 

schneider concurrent real time systems 
wiley 
ene lakhnech symbolic decision procedure cryptographic protocols time stamps 
journal logic algebraic programming 
hansen sharp interval logics temporal analysis security protocols 
proceedings acm workshop formal methods security engineering 

kudo extended logic analyzing timed release public key protocols 
proceedings conference information communications signal processing 

gong security risk depending synchronized clocks 
acm sigops operating systems review 
lamport real time really simple 
technical report msr tr microsoft research 
kramer timed cryptographic protocol logic nordic workshop programming theory 

datta derek mitchell pavlovic derivation system compositional logic security protocols 
journal computer security 
datta derek mitchell shmatikov probabilistic polynomial time semantics protocol security logic 
proceedings eatcs international colloquium automata languages programming 

halpern reasoning uncertainty 
mit press 
smith hilbert epsilon operator significance metamathematics 

goldwasser micali rackoff knowledge complexity interactive proof systems 
siam journal computing 
goldreich foundations cryptography primer 
publishers 

goldwasser micali probabilistic encryption 
journal computer system science 
