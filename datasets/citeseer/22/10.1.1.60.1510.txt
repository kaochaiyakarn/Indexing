swarm intelligence foundations perspectives applications abraham guo liu program school computer science engineering chung ang university seoul korea 
abraham ieee org www net department computer science university technology china 
edu cn chapter introduces theoretical foundations swarm intelligence 
focus design implementation particle swarm optimization pso ant colony optimization aco algorithms various types function optimization problems real world applications data mining 
results analyzed discussed potentials illustrated 
swarm intelligence si innovative distributed intelligent paradigm solving optimization problems originally took inspiration biological examples swarming flocking herding phenomena vertebrates 
particle swarm optimization pso incorporates swarming behaviors observed flocks birds schools fish swarms bees human social behavior idea emerged 
pso population optimization tool implemented applied easily solve various function optimization problems problems transformed function optimization problems 
algorithm main strength pso fast convergence compares favorably global optimization algorithms genetic algorithms ga simulated annealing sa global optimization algorithms 
applying pso successfully key issues finding map problem solution pso particle directly affects feasibility performance 
ant colony optimization aco deals artificial systems inspired foraging behavior real ants solve discrete abraham guo liu optimization problems 
main idea indirect communication ants means chemical pheromone trials enables find short paths nest food 
chapter organized follows 
section presents canonical pso algorithm performance compared global optimization algorithms 
extended versions pso section followed illustrations applications section 
section presents aco algorithm followed illustrations applications aco sections 
provided 
canonical particle swarm optimization canonical model canonical pso model consists swarm particles initialized population random candidate solutions 
move iteratively dimension problem space search new solutions fitness calculated certain qualities measure 
particle position represented position vector xi index particle velocity represented velocity vector vi 
particle remembers best position far vector th dimensional value ij best position vector swarm far stored vector th dimensional value iteration time update velocity previous velocity new velocity determined eq 
new position determined sum previous position new velocity eq 
vij ij xij xij 
xij xij vij 
called inertia factor random numbers maintain diversity population uniformly distributed interval th dimension th particle 
positive constant called coefficient self recognition component positive constant called coefficient social component 
eq particle decides move considering experience memory best past position experience successful particle swarm 
particle swarm model particle searches solutions problem space range range symmetrical translated corresponding symmetrical range 
order guide particles effectively search space maximum moving distance iteration clamped maximum velocity vmax vmax eq swarm intelligence foundations perspectives applications vij sign vij min vij vmax 
value vmax usually chosen 
pseudo code particle swarm optimization algorithm illustrated algorithm 
algorithm particle swarm optimization algorithm 
initialize size particle swarm parameters 

initialize positions velocities particles randomly 

criterion met 

calculate fitness value particle 
argmin xi xn 

xi 
dimension 
update th dimension value xi vi 
eqs 



criteria usually maximum number iterations optimization process terminated fixed number iterations example iterations 
number iterations improvement optimization process terminated fixed number iterations improvement 
minimum objective function error error obtained objective function value best fitness value pre fixed anticipated threshold 
parameters pso role inertia weight eq considered critical convergence behavior pso 
inertia weight employed control impact previous history velocities current 
accordingly parameter regulates trade global wide ranging local nearby exploration abilities swarm 
large inertia weight facilitates global exploration searching new areas small tends facilitate local exploration fine tuning current search area 
suitable value inertia weight usually provides balance global local exploration abilities consequently results reduction number abraham guo liu iterations required locate optimum solution 
initially inertia weight set constant 
experiment results indicates better initially set inertia large value order promote global exploration search space gradually decrease get refined solutions 
initial value gradually reducing considered choice better method adaptive approaches example fuzzy controller parameters adaptively fine tuned problems consideration 
parameters eq critical convergence pso 
proper fine tuning may result faster convergence local minima 
default values usually experiment results indicate provide better results 
reports better choose larger cognitive parameter social parameter 
particle swarm algorithm described generally population vectors trajectories oscillate region defined individual previous best success success particle 
various methods identify particle influence individual 
eberhart kennedy called basic methods model model 
model particles information nearest array neighbors best entire group 
eq replaced model 
new neighborhood relation defined swarm vid vid pid xid pld xid 
xid xid vid 
model trajectory particle search influenced best point member entire population 
best particle acts attractor pulling particles 
eventually particles converge position 
model allows individual influenced smaller number adjacent members population array 
particles selected subset swarm direct relationship particles neighborhood 
typically neighborhoods comprise exactly neighbors 
number neighbors increases model case equivalent model 
experiment results model converges quickly problem solutions weakness trapped local optima model converges slowly problem solutions able flow local optima individuals explore different regions 
model recommended strongly unimodal objective functions variable neighborhood model recommended multimodal objective functions 
swarm intelligence foundations perspectives applications kennedy mendes studied various population topologies pso performance 
different concepts neighborhoods envisaged 
observed spatial neighborhood determined euclidean distance positions particles neighborhood index position storing array 
different concepts neighborhood leads different neighborhood topologies 
different neighborhood topologies primarily affect communication abilities group performance 
different topologies illustrated 
case global neighborhood structure fully connected network particle access best position refer 
local neighborhoods possible variants 
von neumann topology neighbors side dimensional lattice connected 
illustrates von neumann topology section flattened 
pyramid topology dimensional wire frame triangles formulated illustrated 
shown common structure local neighborhood circle topology individuals far away terms graph structure necessarily distance independent neighbors closely connected 
structure called wheel star topology hierarchical structure members neighborhood connected leader individual shown 
information communicated leader compares performances 
fig 

neighborhood topologies adapted abraham guo liu performance comparison global optimization algorithms compare performance pso genetic algorithm ga simulated annealing sa 
ga sa powerful stochastic search optimization methods inspired biological thermodynamic processes 
genetic algorithms mimic evolutionary natural selection process 
generations solutions evaluated fitness value candidates high fitness values create solutions crossover mutation procedures 
simulated annealing manner liquids freeze metals re process annealing 
annealing process melt initially high temperature disordered slowly cooled system time approximately thermodynamic equilibrium 
terms computational simulation global minimum correspond frozen steady ground state temperature 
specific parameter settings pso ga sa experiments described table 
table 
parameter settings algorithms 
algorithm parameter name parameter value size population probability crossover ga probability mutation scale mutations tournament probability number operations temperature adjustment number cycles sa temperature reduction factor vector control step length adjustment initial temperature swarm size pso self recognition coefficient social coefficient inertia weight benchmark functions griewank function xi cos xi min 
swarm intelligence foundations perspectives applications schwefel function xi min 
quadric function xj min 
continuous benchmark functions griewank function schwefel function quadric function test pso ga sa 
quadric function single minimum functions highly multimodal multiple local minima 
test functions goal find global minima 
algorithm function repeated times different random seeds 
trial fixed number iterations 
objective functions evaluated times trial 
swarm size pso population size ga number operations temperature adjustment sa set 
figures illustrate mean best function values functions 
observed ga sa solutions get trapped local minimum iterations high dimensional multi modal functions especially schwefel function pso performance better 
quadric function sa performed pso performance comparatively poor depicted 
fitness pso ga sa iteration fig 

griewank function performance abraham guo liu fitness fitness pso ga sa iteration fig 

schwefel function performance pso ga sa iteration fig 

quadric function performance extended models pso discrete problems fuzzy pso fuzzy pso model representations position velocity particles pso extended real vectors fuzzy matrices 
illustrated known job scheduling problem 
job scheduling problem jobs jn scheduled machines mm fuzzy scheduling relation expressed follows swarm intelligence foundations perspectives applications 
xm xm xmn xij represents degree membership th element mi domain th element jj domain relation fuzzy relation meaning element matrix element xij mi jj 
membership function value xij means degree membership mj process ji feasible schedule solution 
elements matrix satisfy conditions xij 
xij 
similarly velocity particle defined 
vm vm vmn operators eqs re defined position velocity transformed form matrices 
symbol denote modified multiplication 
real number means elements matrix multiplied 
symbols denote addition subtraction matrices respectively 
suppose matrices denote position velocity regular addition subtraction operation matrices 
obtain eqs updating positions velocities particles fuzzy discrete pso 

position matrix may violate constraints eqs iterations necessary normalize position matrix 
negative elements matrix zero 
elements abraham guo liu column matrix zero need re evaluated series random numbers interval 
matrix undergoes transformation violating constraints xi xi xin xi xi xin 
xm xi xm xi xmn xin position matrix indicates potential scheduling solution decode fuzzy matrix get feasible solution 
flag array record selected columns matrix array record solution 
columns selected columns matrix choose element max value mark column max element selected column number recorded solution array 
columns processed get feasible solution solution array measure fitness particles 
binary pso canonical pso basically developed continuous optimization problems 
lots practical engineering problems formulated combinatorial optimization problems 
binary pso model kennedy eberhart simple modification realvalued pso 
faced problem domain fit sub space real valued dimensional space required pso odds binary pso 
provide mapping problem domain set bit strings 
canonical pso fitness function defined 
binary pso define particle position velocity terms changes probabilities state true false making decision 
particle moves state space restricted zero dimension change probability time steps defined follows xij xij vij ij 
probability function usually sign vij 
vij time step particle updates velocity moves new position eqs vij ij xij xij 
swarm intelligence foundations perspectives applications xi vi 
learning factors inertia factor random functions closed interval 
applications particle swarm optimization job scheduling computational grids grid computing computing framework meet growing computational demands 
essential grid services contain intelligent functions resource management security grid service marketing collaboration 
load sharing computational jobs major task computational grids 
formulate objective define ci completion time grid node gi finishes job jj ci represents time grid node gi finishes scheduled jobs 
define cmax max ci makespan ci 
optimal schedule optimizes makespan 
conceptually obvious rule minimize ci schedule shortest job fastest node 
simplest rule minimize cmax schedule longest job fastest node 
minimizing ci asks average job finishes quickly expense largest job long time minimizing cmax asks job takes long expense jobs long time 
minimization cmax result maximization ci 
illustrate performance algorithms considered finite number grid nodes assumed processing speeds grid nodes job lengths processing requirements cycles known 
specific parameter settings considered algorithms pso ga sa described table 
parameters aco algorithm follows number ants weight pheromone trail weight heuristic information pheromone evaporation parameter constant pheromone updating experiment algorithm repeated times different random seeds 
trial fixed number iterations number grid nodes number jobs 
makespan values best solutions optimization run recorded 
abraham guo liu averages standard deviations calculated different trials 
standard deviation indicates differences results different trials 
grid environment main emphasis generate schedules minimal amount time 
completion time trials criteria improve performance 
tested small scale job scheduling problem involving machines jobs machines jobs 
illustrates performance algorithms 
results ga runs average value 
results sa runs average value 
results pso runs average value 
results aco runs average value 
optimal result supposed 
ga provided best results twice sa pso aco provided best results times respectively 
empirical results summarized table 
makespan ga sa pso aco iteration pso data mining fig 

performance job scheduling data mining particle swarm optimization may properties common 
form method leads result methods expensive difficult implement 
bentley provided internet recommender system employs particle swarm optimization algorithm learn personal preferences users provide tailored swarm intelligence foundations perspectives applications table 
comparing performance considered algorithms 
algorithm item instance average makespan ga standard deviation time average makespan sa standard deviation time average makespan pso standard deviation time average makespan aco standard deviation time suggestions 
particle swarm implement image clustering 
compared means fuzzy means harmonic means genetic algorithm approaches general pso algorithm produced better results inter intra cluster distances having quantization errors comparable algorithms 
sousa proposed particle swarm optimizer data mining 
tested genetic algorithm tree induction algorithm obtained results indicates particle swarm optimizer suitable competitive candidate classification tasks successfully applied demanding problem domains 
basic idea combining particle swarm optimization data mining quite simple 
extract knowledge database may considered large search space mining algorithm search strategy 
pso particles moving dimensional space search solutions variable function fitness function optimization problem 
datasets sample space search attribute dimension pso miner 
search procedure particle evaluated fitness function central instrument algorithm 
values decide swarm performance 
fitness function measures predictive accuracy rule data mining eq predictive accuracy number examples satisfy rule antecedent consequent number cases satisfy rule antecedent 
term subtracted numerator eq penalize rules covering training examples 
pso usually search min abraham guo liu imum problem space considered 
predictive accuracy power minus fitness function pso miner 
rule pruning common technique data mining 
main goal rule pruning remove irrelevant terms unduly included rules 
rule pruning potentially increases predictive power rule helping avoid fitting training data 
motivation rule pruning improves simplicity rule shorter rule usually easier understood user longer 
soon current particle completes construction rule rule pruning procedure called 
quality rule denoted computed formula sensitivity specificity 
just covering algorithm returns rule set post processing routine rule set cleaning rules applied removed rule set 
purpose validation algorithm statistically evaluate accuracy rule set obtained covering algorithm 
done method known tenfold cross validation 
rule set accuracy evaluated percentage instances test set correctly classified 
order classify new test case unseen training discovered rules applied order discovered 
performance pso miner evaluated public domain data sets uci repository 
parameters settings swarm size maximum position maximum velocity maximum uncovered cases maximum number iterations 
results reported table 
algorithm simple methods alternative method data mining 
data set table 
results pso miner predictive number terms number rules accuracy number rules wisconsin breast cancer hepatitis cleveland heart disease ant colony optimization nature ants usually wander randomly finding food return nest laying pheromone trails 
ants find path pheromone trail keep travelling random follow trail returning reinforcing eventually find swarm intelligence foundations perspectives applications food 
time passes pheromone starts evaporate 
time takes ant travel path back time pheromone evaporate path prominent 
shorter path comparison visited ants described loop positive feedback pheromone density remains high longer time 
aco implemented team intelligent agents simulate ants behavior walking graph representing problem solve mechanisms cooperation adaptation 
aco algorithm requires define problem needs represented appropriately allow ants incrementally update solutions probabilistic transition rules amount pheromone trail problem specific knowledge 
important enforce strategy construct valid solutions corresponding problem definition 
problem dependent heuristic function measures quality components added current partial solution 
rule set pheromone updating specifies modify pheromone value 
probabilistic transition rule value heuristic function pheromone value iteratively construct solution 
aco introduced travelling salesman problem tsp 
starting start node ant iteratively moves node 
node ant chooses go unvisited node time probability feasible neighborhood set cities visited pheromone value edge time weight pheromone priori available heuristic information edge time weight heuristic information 
parameters determine relative influence pheromone trail heuristic information 
determined lk edge chosen pheromone trail evaporation rate number ants constant pheromone updating 
abraham guo liu seen application aco problems 
generalized version pseudo code aco algorithm tsp illustrated algorithm 
algorithm ant colony optimization algorithm 
initialize number ants parameters 

criterion met 


positioned starting node 
problem size 
choose state move 
probabilistic transition rules 
append chosen move 

compute length lk tour tk chosen 
compute edge tk eq 

update trail pheromone intensity edge eq 
compare update best solution 

ant colony algorithms optimization travelling salesman problem tsp collection cities cost travel pair travelling salesman problem find cheapest way visiting cities returning starting point 
assumed travel costs symmetric sense travelling city city costs just travelling parameter settings aco algorithm follows number ants maximum number iterations tsp cities table illustrate aco algorithm 
best route obtained depicted swarm intelligence foundations perspectives applications illustrated cost 
search result tsp cities illustrated total cost 
table 
tsp cities cities cities fig 

aco solution tsp cities quadratic assignment problem qap quadratic assignment problems model applications diverse areas operations research parallel distributed computing combinatorial data analysis 
set facilities set locations 
pair locations distance specified pair facilities weight flow specified amount supplies transported facilities 
problem assign facilities different locations goal minimizing sum distances multiplied corresponding flows 
qap demonstrate validity aco distance flow matrix assignment illustrated abraham guo liu fig 

aco solution tsp cities parameter settings aco algorithm follows number ants maximum number iterations aco cheapest cost obtained iteration time 
assignment results depicted dept site dept site dept site dept site dept site dept site dept site dept site dept site 
swarm intelligence foundations perspectives applications ant colony algorithms data mining study ant colonies behavior self organizing capabilities interest knowledge retrieval management decision support systems sciences provides models distributed adaptive organization useful solve difficult classification clustering distributed control problems 
ant colony clustering algorithms introduced deneubourg mimicking different types naturally occurring emergent phenomena 
ants gather items form heaps clustering dead observed species niger 
sufficiently large parts randomly distributed space workers form cemetery clusters hours behavior similar segregation 
experimental arena sufficiently large contains spatial heterogeneities clusters formed edges arena generally heterogeneities 
basic mechanism underlying type aggregation phenomenon attraction dead items mediated ant workers small clusters items grow attracting workers deposit items 
positive auto catalytic feedback leads formation larger larger clusters 
sorting approach formulated mimicking ants discriminate different kinds items spatially arrange properties 
observed species arranged size 
general idea data clustering isolated items picked dropped location items type 
ramos proposed algorithm follow real behaviors possible 
sense bio inspired spatial transition probabilities incorporated system avoiding randomly moving agents encourage distributed algorithm explore regions manifestly interest 
strategy allows guiding ants find clusters objects adaptive way 
order model behavior ants associated different tasks dropping picking objects combinations different response thresholds proposed 
major factors influence local action taken ant agent number objects neighborhood similarity 
lumer faieta average similarity mixing distances objects number incorporating simultaneously response threshold function algorithm proposed deneubourg 
uses combinations independent response threshold functions associated different environmental factor depending number objects area similarity 
reader may consult technical details 
abraham guo liu fig 

clustering web server visitors ant colony algorithm adapted web usage mining web usage mining critical effective web site management creating adaptive web sites business support services personalization network traffic flow analysis 
accurate web usage information help attract new customers retain current customers improve cross marketing sales effectiveness promotional campaigns track leaving customers find effective logical structure web space 
user profiles built combining users navigation paths data features page viewing time hyperlink structure page content 
abraham ramos ant colony clustering algorithm discover web usage patterns data clusters 
task cluster similar visitors accessing web server geographical location type information requested time access 
web log data university server january july experiments 
log data categorized daily hourly data set run twice iterations 
classification space non parametric toroidal 
swarm intelligence foundations perspectives applications experiment results daily hourly web traffic data illustrated 
top represent spatial distribution daily web traffic data non parametric toroidal grid 
data items randomly allocated ants deployed time evolved homogenous clusters emerged 
bottom represent spatial distribution hourly web traffic data non parametric toroidal grid 
data items randomly allocated ants deployed time evolved homogenous clusters emerged 
reader may consult detailed results different clustering methods 
clustering results clearly show ant colony clustering performs compared clustering methods self organizing maps evolutionary fuzzy clustering approach 
chapter introduced theoretical foundations swarm intelligence focus implementation illustration particle swarm optimization ant colony optimization algorithms 
provided design implementation methods applications involving function optimization problems real world applications data mining 
results analyzed discussed potentials illustrated 
author supported international joint research institute information technology assessment foreign professor invitation program mic ministry information communication south korea 

abraham business intelligence web usage mining journal information knowledge management world scientific publishing singapore 

abraham buyya nath nature heuristics scheduling jobs computational grids 
proceedings th ieee international conference advanced computing communications 

abraham ramos web usage mining artificial ant colony clustering genetic programming 
ieee congress evolutionary computation australia 

blake keogh merz uci repository machine learning databases 
ww ic uci edu mlearn mlrepository htm 
abraham guo liu 
bonabeau dorigo theraulaz swarm intelligence natural artificial systems 
new york ny oxford university press 

cantu paz efficient accurate parallel genetic algorithms 
kluwer academic publishers 

kennedy particle swarm explosion stability convergence multidimensional complex space 
ieee transactions evolutionary computation 

deneubourg goss franks el 
dynamics collective sorting robot ants ant robots 
proceedings international conference simulation adaptive behaviour animals animats cambridge ma mit press 

dorigo maniezzo colorni 
ant system optimization colony cooperating agents 
ieee transactions systems man cybernetics part 

dorigo st tzle ant colony optimization mit press 

eberhart shi comparing inertia weights constriction factors particle swarm optimization 
proceedings ieee international congress evolutionary computation 

gambardella dorigo ant reinforcement learning approach traveling salesman problem 
proceedings th international conference machine learning 

goldberg genetic algorithms search optimization machine learning 
addison wesley publishing 
kennedy eberhart swarm intelligence 
morgan kaufmann publishers san francisco ca 

kennedy mendes population structure particle swarm performance 
proceeding ieee conference evolutionary computation 

liu abraham fuzzy turbulent particle swarm optimization 
proceeding th international conference hybrid intelligent systems brazil ieee cs press usa 

lopes lima evolutionary approach simulate cognitive feedback learning medical domain 
genetic algorithms fuzzy logic systems soft computing perspectives world scientific 

lumer faieta diversity adaptation populations clustering ants 
cli husbands meyer wilson eds proceedings third international conference simulation adaptive behaviour animals animats cambridge ma mit press 

engelbrecht particle swarm optimization image clustering 
international journal pattern recognition artificial intelligence 

jacobson analysis static simulated annealing algorithms 
journal theory applications 

pang wang zhou el 
fuzzy discrete particle swarm optimization solving traveling salesman problem 
proceedings th international conference computer information technology ieee cs press 
swarm intelligence foundations perspectives applications 
computation global minimizers particle swarm optimization 
ieee transactions evolutionary computation 

ramos self organized data image retrieval consequence inter dynamic synergistic relationships artificial ant colonies 
soft computing systems design management applications proceedings nd international conference hybrid intelligent systems ios press 

shi eberhart fuzzy adaptive particle swarm optimization 
proceedings ieee international conference evolutionary computation 

sousa silva particle swarm data mining algorithms classification tasks 
parallel computing 

st tzle hoo max min ant system 
generation computer systems 

theoretical study behavior simulated annealing leading new cooling schedule 
european journal operational research 

bentley particle swarm optimization recommender system 
proceeding ieee international conference evolutionary computation 

witten ian frank data mining practical machine learning tools techniques java implementations 
ca morgan kauffmann 
