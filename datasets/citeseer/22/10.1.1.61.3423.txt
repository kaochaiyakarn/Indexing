network coding wireless mesh networks case study department informatics university oslo norway ifi uio network coding new transmission paradigm proved strength optimizing usage network resources 
evaluate gain network coding file sharing applications running top wireless mesh networks 
extensive simulations carried simulator developed specifically study confirm network coding improve performance file sharing application wired networks 
main reason nodes wireless listen different neighbors simultaneously 
get network coding information transmission diverse inside network 
support argument varying loss rate wireless links adding sources 
years ago elegant transmission paradigm called network coding proposed ahlswede 
key idea approach broadcast capacity network allowing intermediate nodes inside network code decode information carried different flows 
network coding popularity increasing research papers appeared subject 
papers focus multicast case receivers interested information 
consequence coding task done inside network decoding process done receivers order reconstruct original information 
relatively simple implement compared unicast case requires intelligent decoding inside network profitable 
main scenarios profited power network coding file sharing applications wireless mesh networks wmns 
file sharing application allowing certain number users collaborate order share certain content 
wmn applica barakat thierry turletti inria plan te research group sophia antipolis france turletti sophia inria fr tion hosts communicate directly wireless transmission powers allow indirectly hosts 
network coding proved capacity improve resource utilization scenarios separately 
try answer question network coding performs scenarios combined 
believe file sharing wmns emerging domain lot potential applications 
exchanging files updating databases pushing new software releases typical examples applications 
data encoding network coding describe briefly practical approach network coding borrow 
approach splits file multiple pieces called chunks 
denote number chunks 
node chunks interest node generates sends linear combination chunks possession similarly xoring multiple chunks 
start node holds entire file chunks 
decides transmit information neighbor picks random coefficients 

multiplies chunk ci ki adds resulting chunks 


case node send node combination set coefficients 

source encoding process repeated intermediate nodes chunks received coded upstream nodes 
node receives linearly independent combinations chunks exactly combinations reconstruct original file 
note nodes need wait retrieve file encode data 
suppose node receives combination node node encode send resulting combination interested nodes 
wonder node need generate random coefficients node simply transmit xor chunks 

simple xor combination bad choice fol lowing reason 
node holds chunks able generate disjoint combinations done simple xor 
time generating random coefficients obtain disjoint combinations 
set coefficients selected transmission new 
ensure field select random coefficients large 
choose field size ki ensure probability nodes generate linearly dependent sets coefficients extremely low 
mentioned receiving announcement combination node checks useful 
say combination useful linearly independent combinations held node 
way check dependency performing gaussian algorithm 
combination new node asks combination announcement discarded 
network coding file sharing semantics network coding appealing features candidate improving performance file sharing applications 
forwarding piece file node forwards coded version pieces seen far 
combined version serve downstream nodes missing individual pieces 
network coding absence information status downstream nodes node unable forward piece satisfies 
network coding transform shorter time share file better utilization network resources 
idea network coding file sharing introduced 
authors propose network coding distribution large content peer peer networks 
authors show scenarios network coding reduce distribution time content times compared coding 
explanation simple 
networks node needs decide chunks retrieve neighbor 
clearly retrieving globally rarest chunks efficient 
node significantly contribute distribution process lot nodes interested rarest chunks 
know chunks globally rarest nodes need synchronized practically infeasible large networks 
context network coding removes need synchronization 
node retrieves coded version data maintained neighbor 
result notion rarest chunks completely eliminated content distribution process greatly improved 
network coding wmns broadcast feature wireless networks candidates application network coding 
node transmits piece information neighbors information heard neighbors 
node neighbors interested different pieces transmit coded version pieces possesses profit neighbors save wireless resources 
want check gain network coding file sharing applications wmns 
study applies wired networks 
extension wireless networks straightforward reasons 
wired networks connections peers unicast node communicate node system just knowing ip address 
node retrieve respectively upload different parts file respectively different nodes time 
wmns situation different 
node transmits piece file neighbor piece heard nodes range avoid transmissions 
positive point favor wireless networks 
negative points diverse 
wireless node single antenna commonly case able receive neighbor time 
wireless nodes neighborhood contend medium independently piece data 
may prevent relevant pieces transmitted 
addition nodes free choice neighbors 
neighbors imposed physical layer poses tight constraint cooperation nodes network 
thought network coding file sharing wmns scenario mind 
assume nodes node holds chunks node holds chunk node holds chunk 
network coding node needs transmit chunk node chunk node contrast network coding node transmits single combination nodes retrieve chunk despite simplicity learn lessons example 
network coding reduces number chunks transmitted number useless chunks received different nodes 
reducing number transmitted chunks saves bandwidth speeds distribution process 
addition reducing number useless chunks received reduce battery consumption different nodes 
second lesson efficient network coding requires neighbors disjoint set chunks 
easily verify nodes chunk say network coding bring benefit system 
diversity information network helpful network coding 
coding done packet level independently application diversity improves large number flows routes multiplexed 
context coding done diversity ensured means 
example introduce diversity multiplying number sources 
evaluate suggestion 
topology network decides diversity determines speed information spreads 
example ring cascade rings leads diversity line strip 
chunk losses wireless fact nodes sleep time time save resources increase diversity content network create situations favor network coding 
control diversity simulations means losses model bad conditions wireless intermittent sleep nodes 
methodology assume existence fixed wireless nodes having defined transmission radius want share file size chunks 
nodes possess entire file call sources 
context goal derive conditions network coding beneficial 
develop simulator calculates time required share file number chunks transmitted unnecessarily received 
conduct extensive simulations identify system parameters influence performance network coding 
parameters include cooperation strategy nodes number placement sources file loss rate network number nodes number chunks 
best knowledge comprehensive study network coding file sharing applications wmns 
organization rest organized follows 
section introduces cooperation strategies nodes evaluate 
section give short description simulator 
section provides simulation results conclude discussion section 
cooperation strategies nodes consider extreme opposite classes cooperation strategies nodes 
worst assume primitive cooperation flooding 
class includes strategies bf bf nc account cases network coding 
bf blind forwarding 
node receives new chunk getting access medium blindly forwards chunk neighbors interested 
neighbors share wireless medium node may receive multiple chunks perform single transmission 
case medium free node schedules chunks transmitted order received transmitted 
strategy node transmits chunks receives 
bf nc blind forwarding network coding 
strategy node receives new combination competes get access medium 
succeeds generates transmits combination information possession forwards result neighbors 
new combination leads new transmission node transmits chunks receives 
second class consider completely opposite includes strategies sf sf nc 
class assume node maintains table offers complete knowledge list chunks neighbors 
practice building maintaining tables done update messages exchanged regularly neighbors 
build maintain tables scope 
sf selective forwarding 
node checks continually table 
finds chunk interest neighbors node tries transmit chunk 
case chunks rarest selected 
chunks priority chosen random 
sf nc selective forwarding network coding 
node checks continually table looking neighbors interested information holds 
node generates transmits combination posses 
notice problem identifying rarest chunks exist case 
thought may look unrealistic strategies help understanding network coding performs different cooperation strategies time keeping simple analysis 
simulation methodology evaluate strategies developed simulator allows observe step step distribution file nodes system 
going implementation details define parameters analysis 
notations number chunks file distribute 
represents rate nodes transmit chunks wireless medium 
take unit time time needed download entire file rate round time needed download single chunk rate follows file chunks equal size round equivalent unit time 
stands number nodes represents transmission radius 
denote area nodes deployed 
sn refers number sources system sp refers placements 
instance sn sp random means single source placed random area parameter stands loss rate network 
chunk loss rate function factors packet loss rate sleep mode nodes way lost packets treated mac layer 
simplified model losses 
node receives chunks neighbors probability 
implementation details simulator abstraction mac layer assuming ideal mac protocol collisions gives contending nodes probability access medium 
course aware assumption hold true practice 
see proof concept benefit network coding wmns 
addition assumption allows draw broad provide new insights limited specific mac protocol 
step intend implement network coding top variety mac protocols including 
simulator splits time space rounds unit time 
node transmit round 
round go steps 
step identify candidate transmitters nodes information send 
candidate transmitters placed list called simulator available public access address www sop inria fr software candidates list 
assume ideal mac protocol collisions part candidate transmitters perform transmission 
selection transmitters done second step follows 
pick random candidate transmitter say node move candidates list new list call transmitters list 
ensure collisions prohibit neighbors transmitting current round 
consequence neighbors deleted candidates list 
delete candidates list neighbors neighbors 
purpose avoid situation node receives neighbor hidden terminal situation 
candidates list accessed new node moved transmitters list 
process continues candidates list empty 
selection algorithm transmitters simple fair 
easily verify probability selecting transmitter takes account neighbors neighbors neighbors willing transmit give chance access medium 
third step scan transmitters list selected transmitters send chunk 
fourth final step update list chunks nodes 
steps performed recursively nodes receive entire file 
performance evaluation goal section highlight parameters guide benefit network coding file sharing wmns 
aim deriving scenarios network coding improves system performance 
curious exploring conditions limit gain network coding 
parameters simulations system quite parameters results limited subset parameter values provide new insights 
rest results vary loss rate network number placement sources number chunks number nodes 
note investigated larger values similar results 
parameters kept unchanged chosen follows 
transmission radius nodes set units 
results easily extended case dynamic adaptive radius 
nodes randomly deployed square area consequence values chosen carefully density nodes high ensure total connectivity 
values satisfy inequality showed previous study philips choose instance number nodes 
result changing change area deployment accordance keeping radius constant nodes density remains constant 
metrics evaluation consider performance metrics including service time 
time needed distribute file nodes system 
compute metric terms units time 
general short service time desirable 
emitted chunks 
number transmitted chunks nodes entire simulation 
useless chunks 
number useless chunks received nodes simulation 
achieving low number emitted useless chunks essential save energy bandwidth resources 
metrics meaningful sf sf nc 
bf bf nc metrics provide new insights values known advance 
instance scenario loss node transmits chunks 
addition node receives chunks neighbor 
note evaluated evolution chunks system new chunks combinations received unit time 
metrics ignored new insights compared ones 
results averaged multiple runs 
keep running simulations confidence interval average values 
preliminary hints observations start performance evaluation simple scenario assume single source placed random area assume loss 
scenario plots service time number nodes variety number chunks 
interesting observations 
mainly network coding speeds distribution content 
conditions service time reduced 
service time units time service time units time service time units time bf vs bf nc random bf bf bf nc bf nc number nodes bf vs bf nc sf vs sf nc random sf sf nc sf sf nc number nodes sf vs sf nc random bf bf nc sf sf nc number nodes bf bf nc vs sf sf nc 
service time number nodes bf bf nc sf sf nc 
number chunks set 
single source placed random deployment area loss rate set 
network coding requires moderate large number nodes profitable system 
logical result network coding efficient neighbors benefit transmission 
number nodes system gets larger nodes probably neighbors get chunks information network diversified 
consequently potential gain transmission increase 
increasing number chunks improves performance schemes 
divide file multiple chunks node start serving chunk soon finishes downloading waiting download file 
result larger number chunks faster nodes engaged distribution process better system performance 
benefit network coding depends dramatically cooperation strategy nodes 
easily observe bf nc performs better bf sf sf nc show similar behavior 
better understand point revisit design principles cooperation strategies 
bf node forwards chunks holds neighbors interested 
main drawback lot useless chunks transmitted nodes progress slowly download process 
contrast sf node sends chunks interest neighbors 
result useless transmissions nodes progress faster compared bf 
network coding employed bf helps reducing number useless chunks transmitted 
hand sf network coding helps increasing number neighbors interested transmission 
conclude reason network coding beneficial bf sf 
getting network coding low benefit network coding observed sf mainly common node neighbors interested different chunks 
result expected shared nature property wireless mentioned 
property help creating diversity information network essential network coding cooperation strategies sf 
diversity mean neighbors different sets chunks 
conditions lead diversity including having multiple sources having non zero loss rates 
section consider scenarios discuss significantly influence performance network coding 
allowing multiple sources graph service time schemes function number nodes 
space reasons consider 
similar drawn values 
con service time units time service time units time bf vs bf nc random number nodes bf bf bf nc bf nc bf vs bf nc sf vs sf nc random number nodes sf sf nc sf sf nc sf vs sf nc 
service time number nodes bf bf nc sf sf nc number chunks 
consider values number sources sn loss rate set 
firms intuition 
having multiple sources information network diverse greatly benefits network coding 
contrast case single source network coding limited bf clear sf strategy 
shows adding second source performance bf doubles sf nc times better 
instance compared sf sf nc reduces service time source reduction sources 
benefit network coding appears levels including number useless chunks received emitted different nodes system see figures 
clarity give ratio number emitted chunks sf nc sf vs number nodes 
result figures important achieving lower number emitted received chunks turns battery consumption critical devices wireless sensors 
note studied scenario sources network coding showed better performance 
number useless chunks sf vs sf nc random sf sf nc sf sf nc number nodes 
number useless chunks received vs number nodes sf sf nc 
number chunks loss rate 
consider values number sources sn 
interaction network coding placement sources figures assume nodes placed random area argue get network coding carefully placing sources network 
support claim plot service time vs number nodes sf nc 
take sources placed random extremities 
extremities mean opposite corners precisely source coordinates second length width shows clearly placement sources critical factor dramatically impacts performance network coding 
compared observe particular placement sources improves sig ratio number emitted chunks ratio sf nc sf random number nodes 
ratio number chunks emitted sf nc sf 
number chunks loss rate 
consider values number sources sn 
service time units time number nodes random extreme 
service time sf nc vs number nodes sources different placements sp random extreme 
choose number chunks loss rate 
gain 
result extremely interesting paves way mathematical derive optimal placement optimal number sources network 
network coding performs better lossy environments addition having multiple sources chunks losses create diversity information different nodes network coding efficient 
loosing chunks due bad wireless conditions consequence intermittent sleep nodes 
sleep mode scenarios battery energy resource 
scenario plot service time number emitted chunks values loss rate 
lack space give results sf sf nc 
apply bf bf nc values 
point network coding efficient relatively high loss rates 
loss rate equal sf sf nc perform equally 
explanation simple 
network consider quite dense node average neighbors 
loss rate means chunk average delivered neighbors gives 
result node looses chunk neighbors receive take long forward rounds 
node rapidly retrieve missed common neighbors content different nodes remains homogeneous 
encouraging result network coding employed efficient solution content distribution bad environment conditions 
bad conditions caused wireless physical layer poor mac protocol produces lot collisions 
discussions studied network coding file sharing wmns 
extensive simulations investigated transmission paradigm behaves variety scenarios 
importance study identified main parameters influence performance network coding wireless environment 
parameters include number nodes number chunks number placement sources cooperation strategy nodes loss rate network 
showed parameters interact influence behavior network coding 
key result employing network coding take account environment conditions 
instance cooperation strategy sf wireless conditions losses need network coding 
contrast cooperation strategy nodes primitive simplify implementation issues wireless connections experience high loss rates network coding candidate significantly improve system performance 
existence multiple sources content favor deployment network coding 
overhead network coding benefit achieve network coding comes expense battery cpu time consumption encoding decoding information 
case encoding process easy generating linear combination information available node 
contrast decoding task complex requires run test check independency 
complexity test function number chunks 
tendency nowadays design devices consume energy battery computation tasks 
effort spent nodes transmitting receiving chunks remain primary source energy consumption 
comparison cost computation communication platforms pottie reveals instructions executed cost transmission bit 
context scenarios network coding suitable solution significantly reduce number useless chunks received number transmissions performed different nodes 
addition computing overhead network coding requires nodes transmit coded chunk list coefficients encoding process 
bandwidth overhead negligible compared size chunk transmission 
computed ks bytes ks size coefficient 
instance cs equal bytes coefficients selected field size consider file includes chunks kbytes bandwidth overhead 
open research issues assumptions simplify analysis 
hand assumed ideal mac protocol collisions 
hand split time space rounds nodes able transmit round global synchro 
aware assumptions hold true practice 
goal study provide new hints observations power network coding file sharing wireless environments 
assumptions allowed give new insights draw broad limited specific mac protocol 
believe sheds new light new solutions content distribution area wmns 
includes implementation evaluation network coding top variety mac protocols including 
cross layer optimization philosophy think designing mac protocol contributes creating information diversity network making network coding powerful 
interesting derive optimal number sources optimal placement deployment nodes 
ahlswede cai li yeung 
network information flow 
proc 
ieee transactions information theory july 
felber 
design choices content distribution networks 
proc 
acm sigcomm computer communication review ccr october 
chou wu jain 
practical network coding 
proc 
allerton monticello il usa september 
deb ho karger koetter lun 
network coding wireless applications brief tutorial 
proc 
london uk may 
felber biersack 
self scaling networks content distributions 
proc 
workshop self star italy may 
rodriguez 
network coding large scale content distribution 
proc 
infocom miami usa march 
ho koetter 
online incremental network coding multiple unicasts 
dimacs working group network coding piscataway nj usa january 
jain lovasz chou 
building scalable robust peer peer overlay networks broadcasting network coding 
proc 
acm podc las vegas nv usa july 
hu rahul 
importance opportunistic practical network coding wireless environments 
proc 
allerton monticello il usa september 
li li 
network coding case multiple unicast sessions 
proc 
allerton monticello il usa september 
philips 
connectivity properties packet radio network model 
proc 
ieee transactions information theory september 
pottie kaiser 
wireless integrated network sensors 
proc 
communications acm may 
press flannery teukolsky vetterling 
gauss jordan elimination gaussian elimination sections numerical recipes fortran art scientific computing nd edition 
cambridge university press 
zhu li guo 
multicast network coding application layer overlay networks 
proc 
jsac january 
number emitted chunks service time units time sf vs sf nc random sf sf nc sf sf nc sf sf nc number nodes service time sf vs sf nc random sf sf nc sf sf nc sf sf nc number nodes emitted chunks 
service time number emitted chunks number nodes sf sf nc 
set number chunks number sources sn 
consider values loss rate 
