approaches bin packing clique graph conflicts bill mccloskey cs berkeley edu aj shankar aj cs berkeley edu report 
ucb csd april computer science division eecs university california berkeley california approaches bin packing clique graph conflicts bill mccloskey cs berkeley edu aj shankar aj cs berkeley edu april department electrical engineering computer science university california berkeley berkeley ca problem bin packing arbitrary conflicts introduced 
consider restricted problem bin packing clique graph conflicts 
prove bounds approximation algorithms show certain line algorithms equivalent 
optimal polynomial time algorithm case constant item sizes analyze performance general case bounded item sizes 
standard bin packing problem conflicts studied time 
coffman garey johnson survey current results 
number simple approximation algorithms exist standard bin packing 
generalization problem called bin packing arbitrary conflicts treated jansen 
certain items packed bin 
conflicts represented edges graph items 
analyze special case involving conflict graphs consisting cliques called clique graphs call problem bin packing clique graph conflicts informally mix tape problem 
formally inputs problem set items weight function conflict number valid solution partition items bins 
bm bin bi containing items bi 
bi bi satisfying motivations ix bi 
bi bi problem interesting applications 
example distributed systems seti home dispense items clients 
clients considered bins contain items 
item requires amount processing time 
client contribute fixed number processor cycles day 
assume items correlated signals region sky verified 
avoid tampering server distribute signals client processes signal region 
consider problem seating guests large corporate gathering 
order guest new acquaintances possible members office seated 
course table seat certain number people 
case problem includes clique graph conflicts constant item sizes 
give exact polynomial time solution problem 
third problem concerns digital music exploding popularity 
common users store tens hundreds gigabytes music computers 
music players require songs megabyte cds mix tapes 
users create cds varied selection songs songs album appear cd 
combined megabyte limitation problem fits nicely formulation 
applicable problem sharing music peer peer network 
legal reasons user store single fragment say minute song 
songs distributed clients song stored fragments song stored client 
clients bins song fragments items songs cliques 
corporate gathering problem fragments fixed size solve problem exactly polynomial time 
np completeness np 
valid certificate assignment items bins 
polynomial time verifier check assignment uses bins bin overflows bin contains conflicting items 
reduction standard bin packing suffices show np hard 
input set items bin packing reduction creates empty conflict graph naturally conflicts equivalent bin packing 
naive approximations analysis naive algorithms adapted standard bin packing algorithms 
denote size largest clique conflict graph 
naive fit fit elementary bin packing algorithm 
algorithm bin designated active bin new items placed active bin 
current item fit active bin new bin created designated active bin 
number bins naive fit algorithm nf satisfies nf optimal number bins 
algorithm generalizes 
call generalization naive fit nnf 
condition tests item fits bin additionally check item conflict item bin 
unfortunately jansen shows algorithm arbitrarily bad behavior problem prove fact holds true 
theorem nnf number bins required naive fit algorithm instance 
number items optimal number bins required bound tight 
nnf proof 
notation follows 
circle denotes clique 
th element clique ci written ci packing items bins th bin contains elements bi written 
bk 
consider input instance 
items items 
size size items size items processed order bins 
cn cn 
optimal packing uses bins item clique 
cn 
cn 
fit creates new bin time hits conflict resulting assignment assignment uses bins 
nnf naive fit 
cn cn cn 
yields ratio 
fit elementary bin packing algorithm 
item processed algorithm iterates list existing bins 
places item bin fit 
item fit existing bins item placed new bin 
generalize algorithm skip bins conflicts call naive fit nff 
nnf nff behavior show performs better 
theorem nf number bins required naive fit algorithm instance largest clique items 
optimal number bins required nf proof 
sum sizes items 
assume bins produced nff algorithm half full proved 
contribute sum nf 
addition bins hold items 
nf necessary prove bins half full 
assume purposes finding contradiction bins 
bk half full ordered created nff algorithm 
bi number elements bin bi 
bf bin fewest number elements 
consider element bins bf 
bk 
fit bf bins half full conflict element bf nff placed 
total number conflict edges elements bf 
bk elements bf pk bi 
element bf average number conflicts elements bf 
bk pk bi bf placed bf nff placed previous bins 
bi half full conflicted element bins 
bf 
accounts additional items clique 
including size clique bf bi bi bf bf minimal largest clique nodes 
contradiction meaning number bins half full oh son prove alternative bound nff theorem nf depending value theorem theorem gives tighter bound 
graph coloring approximations bin packing conflicts nodes connected edge conflict graph placed bin 
analogously graph coloring problem nodes connected edge share color 
fact correspondence exists colors bins 
coloring conflict graph reduces problem standard bin packing instances items color packed constraint 
fact conflict graph coloring approach comprehensive arbitrary packing achievable coloring conflict graph particular way independently solving conflict free bin packing color 
arbitrary packing uses bins 
bm items bin bi color conflict free algorithm may pack items color bi bin 
implies optimal bin packing coloring exists color set independently solved optimally result worse 
interesting note minimal colorings colors colorings result better packings item sizes 
consider graph cliques items items item 
case minimal coloring uses colors 
possible minimal colorings shown 
items items item size size size colors colors color items size colors items item size size colors color coloring bins required pack items notation extended allow bin color 
coloring bins required 
finding minimal coloring sufficient solve problem 
furthermore may minimal coloring item bin optimal packing color 
example consider conflict graph containing copies called items size 
packing bins 
coloring conflict graph splits items groups items 
group requires bins packing needs total bins 
coloring conflict graph results suboptimal packing 
investigation effect different coloring strategies 
standard algorithms section analyze modifications standard bin packing algorithms require conflict graph 
techniques introduced jansen 
course instances colored optimally linear time clique requires colors 
graph colored standard techniques employed pack color separately 
jansen results carry modifications 
fit graph colored run ordinary fit introduced section color 
theorem proved jansen problem 
theorem jansen number bins fit algorithm graph coloring 
satisfies show bound asymptotically tight 
consider conflict graph 
dashed circles represent collections isolated nodes node trivial clique size 
items items items size size size large 
optimal packing places element elements filling bins 
uses final bin elements 
cn 

minimal coloring graph colors assigns element color elements color say cn 
coloring ordering large color set 
cn fit uses bins 
cn 
cn 
instance fit uses bins optimal packing uses bins 
limit lim lim 
fit fit introduced section 
algorithm applied set items particular color 
theorem jansen gf number bins fit algorithm graph coloring 
satisfies gf jansen gives set instances asymptotically achieve bound clique graph 
algorithm unable take advantage specialized graph bound holds 
fit decreasing algorithm items color sorted non increasing size 
placed fit 
clearly fit decreasing conflict graphs worse gff 
jansen provides set instances asymptotically achieve ratio clique graph 
possible proven bound tight fit descending 
smarter coloring indicated section bad minimal colorings respect optimal packings 
observation useless assign color items size greater possibly placed bin 
strategy takes advantage gff simply assigns distinct colors large items colors rest items usual 
jansen prove strategy succeeds 
theorem gf instances jansen prove bound tight clique graphs bound tight 
equivalence online offline algorithms general case nff behaves asymptotically badly 
conflict graph restricted cliques nff performs gff 
fact algorithms equivalent gff offline algorithm 
theorem nf number bins naive fit algorithm particular ordering input items 
similarly gf number bins fit graph coloring ordering coloring 
gf nf proof 
show nff online placement items bins equivalent minimally coloring running ff color order nff 
infer coloring nff item placement follows 
placing item nff things 
puts existing bin 
exists bin conflict create new bin fit 
conflicts existing bins nff creates new bin cases color color items case color new color 
notice new color introduced item existing color 
graph coloring algorithm minimal clique graphs new item belong clique size greater current number colors 
clear cases nff packs items order ff color 
nff gff equivalent 
similar result follows 
theorem 
gf nf proof 
processes elements sorted order items induced color placed bins sorted order just 
rest proof 
restricted problems constant item sizes constant item size solved optimally polynomial time follows 
bin holds items 
fill bin algorithm picks independent set size conflict graph selecting item largest cliques 
fewer cliques algorithm takes available 
independent set removed stage algorithm 
claim cliques differ size stage algorithm size differs stage 
proof 
stage cliques differ size algorithm select item smaller clique selecting item larger clique preferentially chooses larger cliques 
claim cliques stage algorithm size potentially different stage size stages differ size 
proof 
consider stages say loss generality size point differs due claim 
differs point previous argument holds theorem constant item size algorithm produces optimal packing polynomial time 
proof 
choose clique maximal size 
items 
algorithm selects item stage stages bins produced 
clearly optimal 
stage algorithm select item cliques greater size stage call initially largest cliques size stage 
number cliques drops happen stage 
number cliques drops algorithm fills bins completely optimal 
point cliques eliminated 
claim remaining cliques size 
fewer algorithm optimally place bin 
know size point meaning size furthermore largest clique size size remaining clique point 
claim size clique size algorithm place final bin 
way algorithm produce packing bin fewer items final 
packing clearly optimal 
algorithm needs maintain sorted list cliques done heap 
constant number items removed stage 
removing clique heap smaller size takes log time total running time nlog 
bounded items sizes considered problem item sizes vary range 
constant size algorithm approximate solution 
theorem constant size algorithm run items size uses const bins assuming 
proof 
algorithm produces optimal packing 
item sizes constant bin contains items wastes space 
reducing item sizes additionally wastes space item 
total waste bin 
total size items 
bin filled height summing total sizes bins const const const proof require step reverse inequality 
example suppose get approximation 
digital music problem value meaning song longer album 
minimum length song set minute albums songs minutes approximation optimal packing achieved polynomial time 
number approaches approximating 
fit algorithm subsumed fit 
proved various line incarnations fit algorithm equivalent leaving primary options see 
contributions built 
proved naive fit algorithm asymptotically bad running time 
discovered bound algorithm requirements bound fit nff min smart coloring gff constant size const offline offline items equal size bounded size const offline item size comparison approximation algorithms 
naive fit algorithm proved naive fit equivalent fit graph coloring 
shown bound fit algorithm graph coloring tight 
optimal algorithm case constant item sizes shown algorithm performs item sizes bounded variability 
investigate generalization problem constant number conflicts bin tolerated 
additionally jansen gives specific case conflict graph inductive constant conflict graphs inductive size largest clique 
find depend coffman jr garey johnson 
approximation algorithms bin packing survey pages 
pws publishing boston 
klaus jansen 
approximation scheme bin packing conflicts 
scandinavian workshop algorithm theory pages 
klaus jansen sabine 
approximation algorithms time constrained scheduling 
workshop parallel algorithms irregularly structured problems pages 
oh sang son 
constrained bin packing problem 
technical report cs university virginia 

