aggregation term vocabulary peer peer information retrieval dht stress test fabius karl aberer school computer communication sciences ecole polytechnique rale de lausanne epfl lausanne switzerland fabius karl aberer epfl ch 
increasing research interest developing full text retrieval peer peer technology 
far research efforts largely concentrated efficiently distributing index 
ranking results retrieved index crucial part information retrieval 
determine relevance document query ranking algorithms collection wide statistics 
term frequency inverse document frequency tf idf example frequencies documents containing term collection 
global frequencies readily available distributed system 
study feasibility aggregating global frequencies large term vocabulary setting 
distributed hash table dht analysis 
traditional applications dhts file sharing index keys order tens thousands 
aggregation vocabulary consisting millions terms poses extreme requirements dht implementation 
study different aggregation strategies propose optimizations dhts efficiently process large numbers keys 
performing information retrieval ir top peer peer systems active research field years 
class approaches built top distributed hash tables dhts called structured overlay networks 
systems peers organize jointly build distributed index allows efficient searches specific keys 
related ir concentrated efficiently distributing index 
example authors dht map keywords responsible peers indexing 
bloom filters caches incremental results top improve query time 
similar approaches assume global statistics term vocabulary available ready calculating tok results 
indexing technique :10.1.1.140.3129
documents queries represented latent semantic indexing lsi vectors cartesian space 
space mapped structured network keeping semantically carried framework epfl center global computing supported swiss national funding agency part european fp project 
related indexes located 
documents queries routed responsible peer cartesian space 
global statistics term vocabulary necessary compute weights vectors cartesian space assumed available 
study aggregation large term vocabulary dhts 
main contributions introduce optimization strategies improve performance dht efficiently handle concurrent insertions large numbers keys 
analysis term vocabulary aggregation internet scale full text retrieval 
structured follows section gives brief overview structured systems 
section introduce optimization strategies dhts 
results practical experiments section 
sections finish discussion 
overview structured systems layer layer ir applications structured overlay network layer tcp ip calls route key msg calls send ip addr msg unit addressing calls fig 

layered architecture cf 
term key ip address mapping mapping provide short distributed hash tables dhts called structured overlay networks 
clearer presentation structure peer layers 
lowest layer provides communication peers tcp ip 
provides service send ip address message simply sends message peer listening ip address 
service structured overlay network layer applications layer aware ip address aggregation term vocabulary ir dht stress test communication partner 
communication peers done layer 
layer routing layer 
provides service route key message routes message peer responsible key 
creates maintains routing table key determines ip hop peer forwarding message 
layer provides key ip mapping 
dhts chord pastry grid create routing tables size log number peers system :10.1.1.19.6221:10.1.1.105.3673:10.1.1.28.5987
routing entries chosen way resulting graph small world properties 
routing message peers guaranteed take log overlay hops average 
shows network peers 
peer identifier ring responsible keys fall range peer ring 
routing table peer log entries 
routing done greedy fashion peer chooses entry routing table closest destination key moving clock wise direction 
peer example wants route message key peer responsible 
peer send message neighbor closest neighbor destination turn forward message neighbor peer information routing please refer current literature :10.1.1.105.3673
layer application dht 
case ir application inserts local term vocabulary dht route key message function provided layer 
perform mapping term key layer uses hash function usually provided layer 
peer neighbor peer neighbor neighbor fig 

routing dhts cf 

neighbor aggregation term vocabulary section describes aggregation local document frequencies frequencies global frequencies 
describe usage scenario discuss insertion strategies 
usage scenario peer stores local document collection 
local document collection peer creates local term vocabulary 
words removed furthermore terms stemmed 
term local vocabulary peer determines local document frequencies number documents term appears 
peer inserts complete vocabulary local frequencies dht 
term local frequency packed separate message routed key created hashing term 
peer responsible key receives message stores containing term frequency pair local database 
term exactly responsible peer 
term peer receive local frequencies term calculate global frequency assume small document collection documents peer term vocabulary terms peers concurrently insert vocabulary dht 
strategies handle flood messages discuss advantages disadvantages 
blunt message handling application calls route key message straight forward procedure routing table map key hop ip pass message layer sent hop 
strategy works fine couple hundreds thousands messages inserted messages reasonably large 
inserting term vocabulary sending millions small messages containing term frequency pair individually extremely inefficient 
overhead message headers high dramatically slow insertion process 
furthermore message compression ineffective messages small 
splitting vocabulary blocks second strategy optimizes insertion process processing term frequency pairs blocks 
shows peer vocabulary divided blocks 
dhts randomized hashing achieve uniform distribution keys 
case terms vocabulary maps peers left side circle effects malicious peers potential problems discussed section 
computed value sample collection reuters news articles available reuters com corpus 
growth vocabulary follows heap law 
aggregation term vocabulary ir dht stress test sent neighbor hop 
sent neighbor neighbor neighbor maps peer 
general log blocks sent 
scheme advantages blocks large efficiently compressed 
shipping large packets tcp ip faster shipping small packets bytes 
layer architecture split vocabulary blocks 
layer know key ip mapping layer hidden upper layers 
handing vocabulary layer require making interface layer application specific desirable solution 
propose third strategy message queueing layer 
message queuing peer voc 
peer neighbor neighbor neighbor neighbor fig 

splitting vocabulary blocks 
strategy layer deal message packing 
messages single term frequency pairs handed layer send ip address message function 
layer takes care efficiently shipping messages hop ip 
build blocks messages layer maintains queue outgoing ip address 
size routing table layer log need log outgoing ip queues layer 
queue stores messages scheme queue timer threshold 
messages delayed queue threshold reached timeout occurs 
timer started message inserted empty queue stopped queue emptied 
message threshold reached time send process initiated 
messages queue packed compressed shipped destination ip 
approach advantages completely hidden upper layers small messages inserted dht bursts efficiently processed layer 
flexible compared approach messages peers forwarded packed messages originating peer 
furthermore applications layer communicate applications directly ip address efficiently send small messages 
threshold set high compression effective high avoid unnecessary delays 
higher timeout threshold reached messages longer delayed 
avoid time critical messages queries delayed added message flag specifies message delayed 
time critical messages instantly packed messages queue irrespective timeout threshold 
furthermore applications send messages large packed efficiently sent 
queue threshold defined number message number bytes 
experiments section threshold messages timeout sec 
avoiding flooding peers network concurrently start insert vocabularies network flooded break additional measures taken 
subsection mechanism slow applications top layer avoid lockup system 
priority queues mechanism avoid flooding propose priority queues type message priority sufficient reach stable system 
generally types messages messages system travelling overlay hops final destination 
messages inserted system application layer 
type messages priority newly inserted messages 
method refined giving higher priorities messages system long time 
messages close final destinations soon get system space new messages 
receiver feedback second mechanism receiver feedback 
environment heterogeneous peers peers processing power 
important avoid slower peers flooded messages break load 
tcp flow control avoiding flooding slower peers 
tcp sender adjusts downstream bandwidth receiver 
peer slow processing received messages tcp avoid peer overloaded 
aggregation term vocabulary ir dht stress test introduced feedback mechanism top tcp 
peer forward message ip address receiving receiver returns messages processed 
delay depends current load receiving peer 
experiments mechanisms priority queues receiver feedback proved sufficient avoid collapse system 
experimental results experiments performed local epfl network computers connected gigabit lan 
computers exclusively reserved experiments different cpu load depending concurrently running processes 
peers processed data faster 
show experiments peers peer running computer 
implemented dht java 
greedy routing explained 
messages objects serialized compressed layer 
compression java gzip classes 
queue threshold messages timeout 
shows results runs vocabularies terms peer 
terms peer peers total terms insertion time sent kb terms peer peers total terms insertion time sent kb fig 

summary experiments 
observation execution time insert vocabularies twice long terms terms 
conclude implementation stable peers insert data way system overloaded 
second observe insertion time grows considerably slower total number terms increasing total number terms factor increases insertion time factor 
messages contains multiple packed messages upper layers 
time insert analytical analytical number peers fig 

insertion time 
plots insertion times 
routing message dht peers takes log hops average 
expected insertion time grow order 
plot shows practical results match analytical expectations 
deviations analytical values caused cpu load variations computers experiments executed 
column shows upstream sending bandwidth consumption peer clearly bandwidth consumption kbytes peer maximal capacity gigabit lan reached 
bottleneck processing power computers 
observed time get layer longer time send message indicates processing power bottleneck 
terms vocabulary map uniformly random keys peer approx 
amount data send grows log 
amount time data sent grows log 
bandwidth consumption second stay nearly constant 
experiments bandwidth varies kb 
having taken closer look average number packed messages varies different outgoing queues 
messages packed compression efficient instance experiments example queue average number packed messages queue average messages closer threshold 
result queue bandwidth second queue transmit number messages 
peers system synchronized queues higher average number packed messages leads lower bandwidth consumption 
experiments necessary fine tune queue thresholds timers 
include tcp headers 
discussion aggregation term vocabulary ir dht stress test section discuss issues regarding aggregation 
redistribution aggregates local term frequencies aggregated global frequencies distributed interested peers 
peers interested vocabulary simply broadcast global frequencies 
efficient broadcast strategies dhts research papers 
assumption realistic large networks 
possibility aggregates streamed interested peers 
done multicast protocol 
integration protocol part 
fighting malicious peers peers allowed insert term frequency pairs peers try insert fake values change ranking advantages 
trust focus 
sketch possible solutions fight malicious peers exist environments peers network trusted belong network closed group cooperating universities 
malicious behavior lead exclusion group 
fake frequencies excessively high detected comparing values global frequencies term 
peer repeatedly insert small values term increase frequency 
solution monitor peer inserting frequencies detect malicious 
trust large research area 
believe application dhts fundamentally different applications solutions trust management applicable 
updating term frequencies local document collections term vocabularies keep changing time 
necessary periodically update term frequencies 
possible approach re run complete aggregation process couple days weeks depending fast local document collections change 
option instantly insert updates 
responsible peer aggregates frequencies certain term estimate update rates calculate approximate global term frequency 
problems aggregation process arise peers fail 
handing peer failures replication data orthogonal 
reliability usually guaranteed system messages get lost forwarding peer fails 
leave improvements areas 
scaling experiments size local vocabularies terms corresponds collection roughly documents 
insertion time peers approx 
min 
assume peer stores documents 
corresponding term vocabulary contain terms heap law inserted hours peers times time necessary vocabulary 
network peers example constructed web servers different universities insertion time approx 
hours 
network maintain global term vocabulary collection documents size google index time writing 
workshop showed possible aggregate internet scale term vocabulary technology 
result important ir systems require global document frequencies terms efficient indexing ranking 
proposed mechanisms improve standard dhts handle large numbers messages 
strategies serve suggestions improving existing dht implementations 
aggregation term vocabulary important possible application benefit improvements 
principle techniques message packing priority queues receiver feedback necessary efficiently implementing distributed application sends large numbers small messages 
planning experiments hostile environment university intranet planetlab environment expect unevenly loaded peers large variations network delays peer failures require refinements queueing strategies 

aberer 
grid self organizing access structure information systems 
sixth international conference cooperative information systems 

aberer rajman wu 
architecture peer peer information retrieval 
th annual international acm sigir conference sigir workshop peer peer information retrieval 

bharambe agrawal seshan 
mercury supporting scalable multi attribute range queries 
sigcomm proceedings conference applications technologies architectures protocols computer communications pages new york ny usa 
acm press 

castro druschel 
kermarrec nandi rowstron singh 
splitstream high bandwidth content distribution cooperative environment 
proceedings nd international workshop peer peer systems iptps berkeley ca 
www planet lab org aggregation term vocabulary ir dht stress test 
castro druschel 
kermarrec rowstron 
scribe large scale decentralized application level multicast infrastructure 
ieee journal selected areas communications jsac special issue network support multicast communications october 

el brand haridi 
efficient broadcast structured networks 
iptps pages 

el brand haridi 
self correcting broadcast distributed hash tables 
series parallel distributed computing systems acta press calgary 

datta aberer 
small world graphs non uniformly distributed key spaces 


heaps 
information retrieval computational theoretical aspects 
academic press orlando fl usa 

kleinberg 
small world phenomenon algorithmic perspective 
proceedings nd acm symposium theory computing 

ratnasamy francis handley karp shenker 
scalable network 


reynolds vahdat 
efficient peer peer keyword searching 
middleware 

rowstron druschel 
pastry scalable distributed object location routing large scale peer peer systems 
ifip acm international conference distributed systems platforms middleware 

stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proceedings acm sigcomm 

tang xu dwarkadas 
peer peer information retrieval self organizing semantic overlay networks 
sigcomm 

zhang hu 
anycast locality aware peer peer overlay networks 
networked group communication pages 
