grid federation economy scalable distributed resource management system large scale resource coupling 
rajiv ranjan aaron harwood rajkumar buyya department computer science software engineering university melbourne victoria australia raj cs mu oz au interest grid peer peer computing grown significantly past years 
concerned large scale resource sharing allows number competitive collaborative organizations share various resources including hardware software data resources range desktops powerful clusters processing units 
management cluster resources key issue grid computing sharing management distributed data prime importance networks 
clusters computers emerged mainstream parallel distributed platforms high performance high throughput high availability computing 
grid computing extends cluster computing idea wide area networks 
grid consists cluster resources usually topologically apart multiple administrative domains managed owned different organizations having different resource management policies 
large scale growth networks connectivity possible couple cluster resources part large grid system 
large scale resource coupling application management complex undertaking introduces number challenges domain security resource policy heterogeneity resource discovery fault tolerance dynamic resource availability underlying network conditions 
resource sharing grid involves collection resource providers cluster owners resource consumers users unified harnessing power distributed computational resources 
sharing mechanisms master worker providers consumers extending subset participants 
resources users may located different time zones 
key types cluster arrangement scale single systems supercomputer class compute farms utilize thousands processors cluster grids simplest consisting systems working provide single point access users single project department 
campus grids enable multiple projects departments organization share computing resources 
organizations campus grids handle wide variety tasks cyclical business processes rendering data mining 
global grids collection campus grids cross organizational boundaries create large virtual systems 
users access compute power far exceeds resources available organization 
evolution resource intensive scientific commercial applications led organizations clusters 
various national level csiro state level ac university level anu high performance computing hpc platforms 
order harness computational power cluster resources efficient manner large scale grid system imperative 
advancement networking technology possible couple various cluster resources form logical cooperative environment driven coordination mechanism 
lead greater pool resources utilized various commercial scientific purposes 

problem definition existing approach resource allocation grid environment non coordinated nature 
application schedulers resource brokering system view grid large pool resource hold exclusive access 
perform scheduling related activities independent schedulers system 
directly submit applications underlying resources account current load priorities utilization scenarios application level schedulers 
enforces bottleneck resources leaving largely underutilized 
brokering systems transparent ordination mechanism lead degraded load sharing utilization distributed resources 
resources grid clusters supercomputers managed local resource management systems condor pbs 
resources loosely coupled form campus grids multi clustering systems sge lsf allow sharing clusters owned organization 
resource pool available usage limited restricts ability access share external resources 
systems support cooperative federation autonomous clusters facilitate transparent sharing load balancing 
users application level schedulers submit jobs having knowledge response time service utility 
jobs queued hours processed leading degraded qos 
minimize long processing delay enhance value computation scheduling strategy priorities competing user jobs indicate varying levels importance allocates resources accordingly 
perform tasks effectively schedulers require knowledge users value computations qos requirements usually varies time 
schedulers need provide feedback signal prevents user submitting unbounded amounts 
current system centric approaches batch scheduling provide limited support qos driven resource sharing 
system centric schedulers allocate resources parameters enhance system utilization throughput 
scheduler focuses minimizing response time sum queue time actual execution time maximizing resource utilization system measures satisfied users resource allocations 
system centric schedulers decisions system 
users unable express valuation resources qos parameters 
provide mechanism resource owners define shared access scenario sharing occurs 

proposed propose new model distributed resource management particular federation clusters 
largescale resource sharing grid system consists federation cluster resources created peer level coupling called grid federation 
approach enables complete decentralization control better scalability system self fault tolerant 
consider peer peer network model basis modeling queuing system describes salient features behaviour grid federation 
proposed grid system driven computational economy methodology clusters federation 
computational economy enables regulation supply demand resources resource owners get incentive sharing resource 
promotes user centric resource allocation 
user centric model focus increasing user perceived value qos level indicators user requirements 
case users express valuation resources qos constraints 
user centric scheduling yields better level system performance coupled existing system centric policies 
affect qos economic scheduling policies proposed model studied 
consider affect various parameters resource owner policy user requirements network delay bandwidth congestion behaviour proposed model 
includes investigation computational economy resource allocation different pricing application models 
proposed includes supporting transparent load balancing sharing clusters grid federation user defined qos constraints resource owners sharing policies 
qos indicators shown effective measure system utility system scales increasing numbers resource provider consumers including diversity user owner objective functions 
consider job acceptance rate fundamental qos indicator grid systems study various factors affecting including resource owner policies user constraints underlying network conditions 

organization report rest report organized follows 
section models illustrates various components part grid federation 
section provide experimental results analysis proposed economy model qos level indicator 
section mention related works 
section provide concluding remarks vision 

definition section builds model entities part grid federation 
define model section 
essential definitions describing proposed models starting basic entities machine cluster rms 
part section focus analytical modeling cluster rms grid federation agent gfa followed description market quoting process 
model user resource job descriptions 
section grid federation economy model 
section new qos level indicator grid system 
section provide definition scheduling algorithms consider 

grid federation realm grid computing extension existing scalable distributed computing idea networks topologically administratively distributed computing resources 
different resource type includes computers computational clusters line scientific instruments storage space data various applications 
resource utilized resource consumers order solve compute intensive applications 
managing complex computing environment traditional methodologies resource allocation attempt enhance system utilization optimizing system centric functions efficient 
rely centralized policies usually need complete system wide state information enable application scheduling 
focus realization objective functions resource providers resource consumers simultaneously 
propose economy methodology cooperative management distributed cluster resources grid environment 
approach enhance policy accountability resource sharing lead optimized resource allocation 
existing grid systems including legion condor offer unrestricted access grid resources 
lead tragedy commons socioeconomic phenomenon individually rational actions members population negative impact entire population 
grid infrastructure lacks policy accountability regards distributed resource sharing 
currently standard mechanism limit system usage protect free riders abuse system file sharing networks 
grid systems brokering mechanism access resources independent brokers system lead utilization resources utilization 
kind ordination mechanism inefficient non scalable 
possible solution set distributed brokers cooperate seamlessly having transparent ordination mechanism notion proposed system 
define grid federation shown fig architectural framework logical coupling cluster resources different organizations administrative time domains supports policy transparent sharing resources qos application scheduling 
draw analogy grid federation electric power grids includes limited number power suppliers large investment size cluster owners 
large population electric power consumers purchasing power suppliers federation users connected various transmission lines internet 
provides seamless policy pricing power resource consumption service users 
framework aims optimizing user centric performance underlying resources 
propose new computational economy metaphor operative federation clusters 
computational economy enables regulation supply demand resources offers incentive resource owners leasing promotes qos resource allocation 
new emerging framework consists cluster owners resource providers users resource consumers 
endusers topologically distributed having different performance goals objectives strategies psfrag replacements gfa peer peer network shared database subscribe quote user user query subscribe gfa cluster gfa cluster user subscribe quote gfa cluster unsubscribe shared federation directory peer peer network grid bank query fig 

grid federation network demand patterns 
focus optimizing resource provider objective resource consumer utility functions quoting mechanism 
model underlying fig networking infrastructure grid federation 
model shared database network apply protocol proposed uses chord protocol resource information sharing 
peer level logical coupling facilitated gfa grid federation agent component acts cluster representative federation 
quotes jobs resource description pricing policy 
quote consists qos guarantee terms resources offer price charge resources evaluated usage fixed period time 
model grid bank provides services accounting grid federation 

models 
terms definitions machine single multiprocessor system memory facilities operating system 
define cluster collection homogeneous machines interconnected high speed network megabyte gigabyte ethernet 
machines integrated collection resources 
single system image spanning machines 
resource management system entity manages set resources grid federation 
rms optimize system centric user centric performance underlying resources 

cluster rms proposed framework assume cluster generalized rms sun grid engine sge portable batch system pbs manages cluster wide resource allocation application scheduling 
available rms packages centralized organization similar master worker pool model 
centralized organization scheduling controller master node initiates system wide decisions 
denote mean arrival rate cluster rms job queue ci shown fig unique cluster identifier number clusters system 
cluster rms federation different mean service rate ci 
grid federation agent grid federation consists cluster resources distributed multiple organizations administrative domains 
enable policy transparent resource sharing clusters define model new rms system call grid federation agent gfa 
layer resource management gfa cluster gfa cluster user user system managing underlying cluster resources conjunction cluster rms enabling policy resource sharing counterparts federation enable inter cluster cooperation different clusters 
cluster member federation instantiating gfa component 
gfa acts resource ordinator federated space spanning clusters 
federation inter operate agreed communication mechanism 
model defines functional units peer manager resource manager 
peer manager performs tasks resource discovery advertisement defined primitives 
interacts distributed shared database underlying networking framework shown fig resource discovery function includes searching suitable cluster resources resource advertisement concerned advertising resource capability pricing policy clusters federation 
main primitives include subscribe quote query configure unsubscribe subscribe cluster id subscribe grid federation cluster id configure price configure pricing model cluster 
quote res type price quote job federation resource pricing policy advertisement 
query query shared database federation resource information resource discovery 
unsubscribe cluster id unsubscribe grid federation 
resource manager main function includes resource allocation application scheduling 
specific primitives communicating cluster rms local users remote 
include accept user id job id accepts job local population users 
send user id job id done returns job local population users 
send job id sends job local cluster rms 
receive job id done receives done job local cluster rms 
send job id gfa sends job remote gfa 
receive job id gfa done receives done job remote gfa 
accept job id gfa receives jobs remote gfa 
negotiate job id gfa deadline negotiate remote gfa specifying deadline constraint job 
resource manager deals local jobs remote jobs 
local jobs refer jobs submitted local population users 
remote jobs refer incoming jobs remote 
fig shows job queue model cluster 
consider network model order analyze proposed job queueing model grid federation 
cluster owners configure scheduling policy gfa propagated federation 
gfa attempts optimize user centric performance behalf local user population ordination remote federation 
denote mean arrival rate jobs gfa gi fig gi pi ci arrival rate incoming jobs remote clusters pi job arrival rate local user population ci arrival rate locally serviced jobs 
local user population job arrival rate denoted pi depending user specified constraints job resource manager component execute job locally transfer job cluster federation cluster satisfy user constraints better way 
pi denotes rate jobs returned local user population 
represent outgoing job transfer rate 
includes jobs serviced cluster 
clearly ci gi pi job transfer rate clusters 
general ci gi depend cluster owner scheduling policy hardware software configurations network performance 
pi rate done rejected jobs returned local user population poisson arrival rate pi local user population drives model response 
ag replacements system centric policy incoming jobs local user population pi gi ci cluster owner policy gfa fig 

cluster grid federation gi pi ci cluster rms outgoing jobs model job arrival rate various clusters federation poisson process distribution poisson random variable rate gi denotes mean average job arrival rate cluster federation 
cluster time interval probability arrivals units time pn git 
federation consists clusters having mean job arrival rate gi different poisson processes distributions arrival rate 
merging property poisson process states merge poisson processes single process result single poisson process 
merging stated poisson processes result single poisson process having mean total 
gn inter arrival times poisson process exponential distribution mean rate gi instance pick arbitrary starting point time time arrival cluster gives cumulative distribution function cdf ft probability distribution function pdf ft gi exponential distribution mean rate gi merge poisson processes distributions inter arrival times single process result poisson process inter arrival times distribution mean total 
gn 
user job specification user job specification consists user resource requirement preference particular job 
job described directed acyclic cyclic task graph 
psfrag replacements fig 

directed acyclic task graph job set tasks task independent program executable 
ji tn number tasks job set ji 
job said independent job consists set dependent tasks described task graph 
task may composed parallel application mpi pvm lead way communication execution depicted fig task 
tasks may execute cluster different clusters 
represented directed cyclic graphs 
psfrag replacements fig 

directed cyclic task graph ji tn bij communication variable task bij total data passed task execution 

grid federation resource description grid federation resource description set rg contains resource description various clusters federation 
rg rc rc rci cluster resource description set varies depending number clusters grid federation 
cluster federation resource set rci contains definition resource owned cluster ready offered 
rci ci oi mi si li ni rci ci oi mi si li ni ci set describing type central processing unit available cluster 
ci particular cpu type alpha 
oi set describing operating system type available cluster 
oi particular os type solaris linux 
mi set describing amount physical memory available cluster 
mi ram size mb si set describing secondary storage space available cluster 
si available secondary storage size gb 
li set describing additional library offered cluster 
li particular additional library mpi pvm 
ni set describing number nodes cluster 
ni nodes particular cluster 

user resource description users specify resource requirement 
economy models grid federation ru cu ou mu su lu existing resource management application scheduling grid computing driven conventional metaphor scheduling component takes decision regarding site application executed system centric parameters legion condor apples netsolve punch 
treat resources scale worth results different applications value reality resource provider may value resources differently different objective function 
similarly resource consumer may value various resources differently depending qos utility functions may want negotiate particular price resource demand availability budget 
overcome shortcomings propose resource allocation case scheduling mechanism driven resource provider sharing policy objective functions resource consumer qos utility functions 
pricing primarily demand resource consumers resource availability pattern economic market resource allocation model 
commonly economic model resource allocation includes commodity market model posted price model bargaining model contract net model auction model bid proportional resource sharing model community coalition model monopoly model 
mainly focus commodity market model 
model resource price demand supply value grid federation 
cost model particular cluster depends resources provides federation user valued accordingly 
initial price resources configured owners varies clusters depending hardware configuration software availability user qos 
relative worth resources determined comparative supply demand pattern 
resource demand owner quotes lower price compared previous quote order attract users 
federation user express willing pay budget expected response time deadline job 
user valuation resources job directly governed job specification qos requirements 
quality totality features service influences ability satisfy needs 
quality service evaluations considered driven comparison consumer expectations perceptions actual quality received 
qos guaranteed level performance delivered customer part service level agreement sla service providers users 
qos characterized basic performances criteria including availability performance response time throughput 
service providers may guarantee particular level qos defined sla 
proposed framework sla part quoting process cluster owners committed providing services define subsequent quotes 
focus user centric resource allocation maximizing users satisfaction terms qos constraints 
grid federation economy model defines cluster owners owns resources rg rc rc 
cluster federation resource set rci contains definition resource owned cluster ready offered 
rci includes information cpu architecture number processors ram size secondary storage size operating system type 
resource federation price represent resource price price owner charges price unit time price unit instructions mi executed mi 
mapping function set federation resources rg cluster price model 
rg ug contains federation users belonging various clusters 
represents users belonging cluster cluster owner requires jobs ju resource power 
user owns job ji ju 
federation user ui modeled having resource allocation utility function qos constraint job indicates qos value delivered user function specified qos constraints deadline budget 
job ji consumes power particular type cluster resource rci job ji federation user ui determines budget ready spend order get job done 
mere user assumption feasible unfeasible 
assumption unfeasible quite user job get rejected federation case user may increase budget constraint 
addition budget user may give preference response time expects system deadline 
users submit jobs gfa express maximum value budget deadline constraints optimization strategy adopted scheduling 
federation user ui express optimization strategy intends job ji 
propose optimization strategies user opt 
starting time optimization strategy focus getting done fast possible 
case users specify maximum budget deadline job 
optimization strategy user get job done deadline limit may invest maximum budget 
signifies user invests budget get better response time system 
federation user strategies really maximizing minimizing time cost constraints 
called cost time optimization strategy 
strategy user spends fair amount allocated budget job getting acceptable response time system compared cost optimization 
response ime budget federation user specify cost optimization strategy job case focus getting done minimum possible cost time constraint 
strategy get user job done minimum possible cost maximizing response time deadline limit 

quoting mechanism framework aims coupling various clusters overcoming burden central management giving autonomous control individual clusters functioning 
clusters driven different pricing policies 
fig cluster federation quote broadcast clusters federation shared database 
user local cluster making request clusters psfrag replacements quote submit local user user negotiate quote gfa gfa quote schedule negotiate quote quote gfa gfa gfa quote quote fig 

quoting mechanism grid federation broadcasting quote 
typical quote consists resource description rci price paid specified cluster resource configured cluster owner 
analyzing quotes cluster decides request serviced locally forwarded cluster 
way cluster information cluster service policies 
user request served locally cluster evaluates quotes user required qos 
cluster sends negotiate message qos guarantee terms response time matching terms resource type service price clusters cluster sending negotiate message cluster finds cluster schedule job job scheduled cluster 
supporting technology peer peer concept systems new revolution domain internet computing 
system self organizing distributed system self interested peers communicate share resources storage data cpu time 
moore book defined paradigm supports exchange information services directly producers consumers order achieve purposeful results 
primary motivation technology grid federation scalability fault tolerance 
internet computing environment composed thousands cluster resources traditional monolithic approach coupling non scalable liable point failure 
model grid federation underlying network shown fig 
federation consists interconnected network 
model shared database network apply protocol proposed uses chord protocol resource information sharing 
network logically fully connected accessible distributed shared federation directory gfa communicate gfa 
shared database distributed shared memory dsm network gfa local copy database 
grid peer component gfa interacts shared database defined primitives subscribe query post unsubscribe responsible consistency synchronization fault tolerance coherence persistence shared space 
user user 
quality service indicator grid systems date factors influence qos cluster owner policy user constraints studied literature 
define acceptance rate qos indicator grid systems show cluster owner policies resource availability various economy models user constraints affect qos 
submitted job completed constraints rejected accepted 
acceptance rate percentage jobs accepted 
consider acceptance rate proposed grid federation 

qos constraint driven resource allocation heuristic propose deadline budget constrained dbc grid federation scheduling heuristic called optimization scheduling 
detailed algorithm scheduling jobs cluster resources federation optimizes cost time cost time follows 
algorithm aims optimizing user centric performance underlying cluster resources 
federation user specify optimization strategy job algorithm extension basic nimrod algorithm optimize time focus strategy give minimum possible response time federation user budget limit 
optimize cost strategy produces results deadline reduces cost budget limit 
optimize cost time strategy optimizes cost time parameter 
case federation user spends fair amount budget job getting acceptable response time system 
scheduling related activities performed peer resource manager component gfa 
explain scheduling algorithm context components 
algorithm peer manager 
subscribe register federation unique cluster id 
quote advertise cluster owner quote res type price resource advertisement 
query query distributed shared database obtain quotes clusters federation resource discovery 
unsubscribe cancel suspend membership cluster federation 
resource manager 
analyze quotes identify resource type characteristics configuration capability usage cost unit time analyzing quotes advertised various clusters federation 
store statistics job scheduling resource list 
accept analyze schedule local jobs accept local jobs store jobs ait list 
repeat steps waiting job 
identify list clusters federation matching job resource requirement federation resource list 
ii 
matching cluster calculate budget required execute job cluster 
user job supplies deadline budget job determine absolute deadline budget matching cluster resource processing capability pricing policy 
store job match list 
repeat step matching clusters resource list 
iii 
determine optimization requested user job dispatch job 
cost optimization sort match list increasing order cost 
select cluster list negotiate complete job user specified deadline 
dispatch job remove job jobs ait list add jobs submit list 
repeat cluster match list 
cluster complete specified deadline add job reject jobs list remove jobs ait list 
return job user 
time optimization sort match list increasing order absolute deadline 
select cluster list negotiate complete job user specified budget 
dispatch job remove job jobs ait list add jobs submit list 
repeat cluster match list 
cluster complete specified budget add job reject jobs list remove jobs ait list 
return job user 
cost time optimization determine cost time factor cti multiplying absolute deadline absolute budget cluster user match list 
sort match list increasing order cti 
select cluster list negotiate complete job user specified deadline 
dispatch job remove job jobs ait list add jobs submit list 
repeat cluster match list 
cluster complete specified budget deadline add job reject jobs list remove jobs ait list 
return done job user 
accept schedule remote jobs incoming job accept incoming job add remote job ait list 
ii 
transfer job local cluster rms execution add remote job submit list 
remove remote job ait list 
iii 
arrival completed job cluster rms add job remote job done list transfer job originating cluster 
remove job remote job submit list 
receive finished jobs incoming completed job add job jobs done list 
remove job jobs submit list 
ii 
return completed job user 
iii 
job complete successfully add jobs ait list 

heuristic analysis assignment job ji resources federation formally described function ju rg set jobs ju set federation resource rg 
time jobs jm clusters resources rc rc rcp matches jobs resource qos requirements possible assign pm ways 
job ji associated 
problem find resource minimizes accordance optimization strategy sought owner job ji 
assignment strategy lead efficient utilization federation resources minimize job starvation rate 
resource allocation job ji optimized user specified qos constraints 
define function determines processing cost resource rci service price function determines processing power resources rci function determines product processing cost processing power resources rci 
rci rci rci user seeks cost optimization job allocate resource min rci user seeks time optimization job allocate resource max rci user seeks cost time optimization job allocate resource min rci rci index resource cluster name table 
workload resource configuration trace date nodes mips rating jobs quote price ctc sp june may kth sp sep aug lanl cm oct sep lanl origin nov apr nasa ipsc oct dec sdsc par dec dec sdsc blue apr jan sdsc sp apr apr holds true optimization strategy 
start time ji si assume si integer min si job ji deadline budget cost si otal cp ime required job cost rci cost denotes processing cost job ji resource rci :10.1.1.144.2651
experiment analysis price trace simulation evaluate effectiveness proposed system qos provided resource allocation algorithm 
simulator implemented toolkit allows modeling simulation distributed system entities evaluation scheduling algorithms 
simulation environment models basic entities addition existing entities local user population basically models local user population 
gfa generalized rms system model grid federation 
gfa queue placeholder incoming jobs local user population federation 
gfa shared federation directory peer peer network distributed information management 

workload resource modeling experiments real time workload trace data obtained various resources supercomputers see table 
trace data composed parallel applications 
enable parallel workload simulation extended existing alloc policy space shared entities 
evaluating qos driven resource allocation algorithm assigned synthetic qos specification resource including quote value price cluster owner charges service having varying mips rating 
simulation experiments conducted utilizing workload trace data total period days simulation units resources 
experiment consider user request served requested rejected accepted 
experiment experiment measure average resource utilization amount real resource simulation period excluding queue processing idle time 
job acceptance rate total percentage job accepted 
job rejection rate total percentage job rejected 
number jobs locally processed 
number local jobs migrated federation 
number remote jobs processed 

experiment independent resource experiment resources modeled independent entity federation 
workload submitted resources processed locally 
evaluate performance resource terms average resource utilization job acceptance rate job rejection rate 
result experiment refer table 
observed half resources including ctc kth sp lanl origin nasa ipsc sdsc par utilized 

experiment federation fig 

average resource utilization vs resource name experiment analyzed workload processing statistics various resources part grid federation case workload assigned resource processed locally may fig 


jobs vs resource name migrated resource federation depending availability pattern 
table describes result experiment 
experiment observed resource utilization resources increased compared experiment part federation instance resource utilization ctc increased mere 
trends observed case resources refer fig 
interesting observation regarding migration jobs resources federation load sharing 
characteristic evident resources including ctc kth sp nasa ipsc ctc total jobs schedule observed refer table executed locally remaining jobs migrated executed remote resource federation 
resource executed remote jobs came resources federation 
federation load sharing led decrease total job rejection rate observed case resource lanl cm job rejection rate decreased 
conclude federation resource allocation promotes transparent load sharing various participant resources helps enhancing resource utilization job acceptance rate 

experiment federation economy experiment study computational economy metaphor grid federation 
assigned qos parameters budget deadline jobs resources 
performed experiment scenarios having different user population profile 
users seek cost optimization 
distribution seeking cost optimization seeking time optimization 
table 
workload processing statistics federation independent processing resource index resource cluster name average resource utilization total job total job accepted total job rejected ctc kth sp lanl cm lanl origin nasa ipsc sdsc par sdsc blue sdsc sp index resource cluster name table 
workload processing statistics federation average resource utilization total job total total 
job ac job jobs reprojected 
jobs migrated federation ctc kth sp lanl cm lanl origin nasa ipsc sdsc par sdsc blue sdsc sp users seek time optimization 
remote jobs processed budget deadline distribution user having job ji seeking cost optimization ji rcm cost executing job ji resource rcm rci rcm total number resources federation 
ji rcm execution time job ji resource rcm rcm min rci total number resources federation 
budget deadline distribution user having job ji seeking time optimization ji rcm cost executing job ji resource rcm rcm max rci total number resources federation 
rcm execution time job ji resource rcm rcm rci total number resources federation 
experiment measured computational economy related behavior system terms supply demand pattern resource owner incentive earnings user qos constraint satisfaction average response time average budget spent varying user population distribution profiles 
study relationship resource owner total incentive user population profile 
total incentive earned different resource owners varying user population profile seen refer fig 
result shows owners resources got incentive users sought time optimization total incentive grid dollars scenario compared cost optimization total incentive grid dollars scenario 
time optimization observed uniform distribution jobs resources refer fig resource owner got incentive 
cost optimization observed non uniform distribution jobs federation refer fig 
observed resource owners get incentive ctc kth sp nasa ipsc sdsc sp 
observed resource utilization statistics fig indicates utilization 
resources offered faster response time services higher price 
worst case scenario terms resource owner incentive 
indicates imbalance resource supply demand pattern 
demand cost effective resources compared faster faster expensive resources remained underutilized 
jobs case scheduled resources lanl cm lanl origin sdsc par sdsc blue provided cost effective solution users 
user population distribution scenario resource owners federation got incentive total incentive grid dollars better resource utilization fig 
scenario shows balance resource supply demand pattern 
conclude resource supply resource providers demand resource consumers qos constraint preference pattern determines resource owners incentive resource usage scenario 
measured users qos satisfaction terms average response time average budget spent different optimization scenario cost time 
observed users got better average response time fig sought time optimization scenario jobs compared cost optimization scenario 
lanl origin average response time users simulation seconds scenario reduced time optimization 
users spent budget case time optimization compared cost optimization refer fig 
shows users get utility qos constraint parameter response time ready spend budget 
conclude user centric resource allocation mechanism users control job scheduling activities express priorities terms qos constraints 
rest experiments including experiment experiment experiment synthetic workload 

experiment affect economic models cluster owner profit experiment evaluate profit cluster owners resource utilization varies pricing policy quote different price 
performed experiment clusters having configuration shown table iv 
fig 

average resource utilization vs resource name table 
experiment resource setup id cpu type os type secondary primary mips nodes price cluster intel linux gb mb gnu random cluster intel linux gb mb gnu cluster intel linux gb mb gnu clusters created heterogeneous set user population having different optimization goals job 
clusters heterogeneous set user population having different constraint optimization preferences 
initial user population average job size mi budget grid dollars deadline simulation units cost optimization time optimization cost time optimization fig 

total incentive grid dollars vs resource name user population experiments varied price powerful cluster mips rating 
vary price keeping resource price clusters fixed cluster mips rating cluster having mips rating 
results simulation run terms total earnings total jobs executed shown fig fig 
initially cluster quotes cost factor executes total jobs earning grid dollars 
value increased percentage total jobs executed cluster earning increases due high cost factor appropriate demand resource type user population sufficient budget opted time optimization strategy faster response time 
cost factor increased value earnings cluster decreases considerably 
due fact user seeking faster response time run budget cant get job executed powerful resource gets executed second powerful cluster having mips rating offering resources affordable price 
simulation user seeking cost optimization job get job done cluster cluster gets number jobs execute subsequent shift jobs cluster cluster 
signifies cluster owners get earning resources offer reasonable price limit subsequent increase price demand resource may decrease considerably leads loss profit 
may lead large number user jobs getting rejected due unsatisfied constraints degrading qos indicator system 
fig 

average response time simulation units vs resource name table 
experiment resource setup id cpu os gb ram mb mips nodes price intel linux gnu linux gnu linux gnu intel solaris gnu macintosh macos gnu intel vs macintosh macos mpi alpha linux gnu alpha linux mpi intel net 
experiment affect qos parameters service utility system experiment measured different economic scheduling strategy affects users qos terms response time budget spent 
simulated clusters federation user population spanning clusters having different optimization constraints job 
users varying job length starting 
table depicts experiment setup 
fig 

average budget spent grid dollars vs resource name table 
experiment job setup job size mi cluster cpu os gb ram mb intel linux gnu linux gnu linux gnu intel solaris gnu intel vs macintosh mac os gnu alpha linux gnu macintosh mac os mpi alpha linux mpi intel net user population different optimization user cluster monitored average job size mi budget grid dollars deadline simulation units secondary fig 

total earnings grid dollars vs quote cost factor performed experiments set users varying optimization strategy modifying deadline time constraints accordingly 
fig fig shows experiment results 
indicated user specified value deadline budget constraints plots experiment results 
example cost optimization user spends specified budget constraint grid dollar getting time units response time specified time constraint time units user spends grid dollars getting time units response time case time optimization 
observed graph federation users get better response time case time optimization strategy spending budget compared cost time cost optimization strategies 
fig shows plot average response time standard deviation optimization strategies 
fig shows plot average budget spent standard deviation optimization strategies different users 

experiment system acceptance rate varying resource consumer size experiment measure qos indicator varies user population size cluster wide maintaining constant system size cluster resources 
table shows experiment setup 
clusters heterogeneous set user population having different constraint optimization preferences 
initial user population average job size mi budget grid dollars deadline simulation units cost optimization fig 

total jobs executed vs quote cost factor table 
experiment resource setup id cpu os secondary gb ram mb mips nodes price cluster intel linux gnu cluster intel linux gnu cluster intel linux gnu cluster intel linux gnu cluster intel linux gnu cluster intel linux gnu cluster intel linux gnu intel linux gnu cluster intel linux gnu intel linux gnu time optimization cost time optimization fig shows result experiment 
user population size observed users constraints satisfied 
shows system qos users qos indicator system state 
increased user population size sharp decrease total number jobs accepted approximately 
indicates fig 

response time time units vs user id federation wide degradation qos indicator system 
user population size jobs accepted 
experiment shows increase total number users performance system degrades considerably 
conclude performance resource allocation system determined qos indicator efficient system parameter small degradation increase resource consumer population 

related grid resource management scheduling investigated extensively past apples netsolve condor lsf sge punch legion 
mainly focus multi clustering systems allow coupling wide area distributed clusters 
briefly describe computational economy cluster grid systems draw inspiration 
load sharing facility lsf popular commercial batch queuing system mainly supports campus grids 
focuses coupling various local clusters example departmental clusters administrative domain 
ability run parallel jobs parallel virtual machine pvm 
extended support multi cluster environment enabling transparent migration jobs cluster 
resource allocation strategy lsf includes various priorities deadlines mechanism provide mechanism users express valuation resources qos constraints 
grid federation addresses issue user centric resource allocation mechanism enable users better utility control application scheduling 
sun grid engine sge cluster resource management system developed sun micro systems 
sge enterprise edition allows users create campus grid clusters combining fig 

time simulation units vs user id federation wide clusters local enterprise network 
clusters managed sge master manager 
got policy module defines proportional sharing resources users campus grid turn determined respective share user cluster global share space 
users assigned tickets user pass campus grid resources 
get incentive preserving tickets low computation period getting access tickets need computational power 
policy quite flexible depending resource usage scenario suited campus grid environment administrative domain 
useful environment consists various resource owners different resource sharing policies resource consumers different objective functions qos constraints 
system supports policy resource sharing resource owner define share resource user express resource usage scenario 
condor distributed batch system developed execute long running jobs workstations idle 
emphasis condor high throughput computing 
condor presents single system view pool multiple distributed resources including cluster computers irrespective ownership domain 
provides job queuing mechanism scheduling policy priority scheme job check pointing migration remote system calls resource monitoring resource management facilities 
scheduling resource management condor done matchmaking mechanism 
condor extended globus new version called condor enables creation global grids designed run jobs different administrative domains 
contrast propose general scheduling system views multiple clusters cooperative resources shared utilized computational economy model resources 
nimrod rms system wide area parallel distributed computing platform called grid 
grid enables sharing aggregation geographically distributed heterogeneous resources psfrag replacements distributed users fig 

budget spent grid dollars vs user id federation wide computers pcs workstations clusters software scientific instruments grid presents unified integrated single resource widely 
nimrod serves resource broker supports deadline budget constrained algorithms scheduling task farming applications grid 
allows users lease aggregate resources depending availability capability performance cost users qos constraints 
resource allocation mechanism application scheduling inside nimrod take account brokering system currently system 
lead utilization resources underutilization 
overcome propose set distributed brokers having transparent ordination mechanism enabling cooperative resource sharing allocation environment 
libra computational economy cluster level application scheduler 
system demonstrates heuristic economic qos driven cluster resource allocation feasible delivers better utility traditional system centric independent job model 
existing version libra lacks support scheduling jobs composed parametric parallel models support inter cluster federation 
net desktop grid computing platform 
main features includes internet clustering window class desktop machines dedicated non dedicated resource sharing mode file object grid job model enable legacy applications 
allows trivial hierarchical coupling various cluster resources internet environment master manager ordinates application scheduling related activities managers basically dedicated non dedicated executors 
provides application programming interface users create grid applications 
condor presents single system view various resources including desktops window clusters 
contrast propose scheduling system resource manager ordinates resource manager level ownership hierarchy dedicated non dedicated executors perform fig 

grid dollars vs user id federation wide utility resource allocation enabling true policy resource sharing 
rexec remote execution environment campus wide network workstations part berkeley millennium project 
command line user specify maximum credits minute willing pay cpu time 
rexec client selects node fits user requirements 
rexec allocates resources user jobs proportional user demands 
offers generic user interface computational economy clusters large scale scheduling system 
allocates resources user jobs proportionality user valuation irrespective job needs user centric type 
pbs flexible posix compliant batch queuing workload management system originally developed bu systems nasa 
purpose pbs provide additional controls initiating scheduling execution batch jobs allow routing jobs different hosts 
default scheduler pbs fifo behavior maximize cpu utilization loops queued job list starts job fits available resources 
effectively prevents jobs starting 
allow large jobs start scheduler implements starving jobs mechanism 
method may situations certain circumstances course action yield desired results 
new alternative schedulers pbs developed 
maui advanced batch scheduler large feature set suited high performance computing hpc platforms 
uses aggressive scheduling policies optimize resource utilization minimize job response time 
simultaneously provides extensive administrative control resources workload allowing high degree configuration areas job prioritization scheduling allocation reservation policies 
maui advance reservation infrastructure allowing sites control exactly resources user 
fig 

total job accepted percentage vs user population density federation wide 
report proposed new computational economy driven large scale scheduling system called 
results resource allocation algorithm indicates proposed framework leads better utilization cluster resources enhances realization objective function resource owners utility qos constraints resource consumers 
described variation objective functions resource owners affect profit may lead degradation qos indicator underlying system 
new qos level indicator grid systems 
results resource allocation algorithm indicates resource supply demand distribution user quality service constraints determines actual qos indicator resource allocation system 
aims investigating ordinated qos service mechanism proposed framework measuring network complexity system large population density resource providers consumers 
intend look new qos constraint algorithms scheduling jobs containing parallel applications mpi pvm 

parallel workload trace www cs huji ac il labs parallel 

platform www platform com products wm lsf 


distributed hierarchical workstation cluster ordination scheme 
par elec august quebec canada 

abramson buyya giddy 
computational economy grid computing implementation nimrod resource broker 
generation computer systems fgcs journal volume issue pages elsevier science netherlands october 

cobb matt 
seti home experiment public resource computing 
communications acm vol 
acm press usa 

alexander buyya 
gridbank grid accounting services architecture distributed systems sharing integration 
workshop internet computing commerce proceedings th annual international parallel distributed processing symposium ipdps ieee computer society press usa april nice france 


scalable efficient range queries grid services 
nd international conference peer peer computing 

berman wolski 
apples project status report 
proceedings th nec research symposium berlin germany 

bode halstead kendall jackson 
pbs portable batch scheduler maui scheduler linux clusters 
proceedings th linux showcase conference atlanta ga usenix press berkley ca october 

buyya abramson giddy 
economy driven resource management architecture global computational power grids 
proceedings international conference parallel distributed processing techniques applications pdpta june las vegas usa csrea press usa 

buyya abramson giddy stockinger 
economic models resource management scheduling grid computing 
special issue grid computing environment journal concurrency computation practice experience volume issue wiley press 

buyya 
toolkit modeling simulation distributed resource management scheduling grid computing 
journal concurrency computation practice experience pages 

cai frank chen szekely 
maan multi addressable network grid information services 
proceedings fourth ieee acm international workshop grid computing 

casanova 
netsolve network server solving computational science problem 
international journal supercomputing applications high perfomance computing pages 

chapin grimshaw 
legion resource management system 
proceedings th workshop job scheduling strategies parallel processing san juan puerto rico april springer berlin 

chase irwin moore 
dynamic virtual clusters grid site manager 
twelfth international symposium high performance distributed computing hpdc june 

buyya 
grid economics lessons finance 
peer peer computing evolution disruptive technology ramesh subramanian brian goodman editors idea group publisher hershey pa usa 
print 

buyya 
weaving computational grids analogous electrical grids 
computing science engineering cise ieee computer society american institute physics usa july august 

chun culler 
decentralized secure remote execution environment clusters 
proceedings th workshop communication architecture applications network parallel computing toulouse france 

downey 
queue time predictions processor allocation 
rd workshop job scheduling strategies parallel processing took place conjunction ipps 

foster kesselman 
grid blueprint new computing infrastructure 
morgan kaufmann publishers usa 

foster kesselman nick tuecke 
physiology grid open grid services architecture distributed systems integration 
www globus org research papers html 

foster kesselman tuecke 
anatomy grid enabling scalable virtual organizations 
international journal supercomputer applications vol 



sun grid engine creating compute power grid 
proceedings ieee acm international symposium cluster computing grid 

iamnitchi foster 
fully decentralized resource discovery grid environments 
international workshop grid computing denver 

ieee 
ieee std 
technical report ieee 

avery ranka 
policy scheduling simple quality service grid computing 
proceedings th international parallel distributed processing symposium ipdps 

kapadia fortes 
punch architecture web enabled wide area network computing 
cluster computing journal networks software tools applications pages 

li sun deng 
authentication access control network 
grid cooperative computing second international workshop gcc china december 

litzkow livny 
condor hunter idle workstations 
ieee 

luther buyya ranjan 
peer peer grid computing net framework high performance computing paradigm infrastructure 


moore 
peer peer building secure scalable manageable networks 
mcgraw hill osborne 

raman livny solomon 
matchmaking distributed resource management high throughput computing 
high performance distributed computing 
proceedings 
seventh international symposium july 

ali rana walker jha 
grid service discovery qos properties 
concurrency computation practice experience journal 

ali buyya 
libra economy driven job scheduling system clusters 
proceedings th international conference high performance computing asia pacific region hpc asia 

ion stoica robert morris david liben nowell david karger frans kaashoek frank dabek hari balakrishnan 
chord scalable peer peer lookup protocol internet applications 
appear ieee acm transactions networking 

stonebraker devine litwin pfeffer sah staelin 
economic paradigm query processing data migration 
proceedings rd international conference parallel distributed information systems austin tx usa september ieee cs press 

waldspurger hogg huberman kephart stornetta 
spawn distributed computational economy 
ieee transactions software engineering vol 
ieee cs press usa february 

wolski plank bryan 
commerce market formulations controlling resource allocation computational grid 
international parallel distributed processing symposium ipdps san francisco ca april 
