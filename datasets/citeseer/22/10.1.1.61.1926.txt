design implementation evaluation remos network monitoring system bruce nancy miller roger thomas gross peter steenkiste school computer science carnegie mellon university department computer science college william mary computer science department eth zurich january 
remos provides resource information distributed applications 
design goals scalability exibility portability achieved architecture allows components positioned network collecting information local network 
collect information di erent types networks remos provides collectors di erent technologies including snmp benchmarking 
matching collector particular network environment architecture distributing output collectors querying environments remos collects appropriately detailed information site distributes information needed scalable manner 
remos implemented tested variety networks number di erent environments 
keywords network monitoring 
remos system designed provide resource information distributed applications 
distributed application wants explore resource availability react changes able determine usage network resources 
networked systems expose applications realities resource availability meet performance goals application reserve resources reservations supported adapt optimize performance resource availability constraints 
focus supporting development adaptive applications 
remos ability support resource measurements variety ort sponsored part advanced research projects agency rome laboratory materiel command usaf agreement number 
government authorized reproduce distribute reprints governmental purposes notwithstanding copyright annotation thereon 
views contained authors interpreted necessarily representing cial policies endorsements expressed implied advanced research projects agency rome laboratory government 
kluwer academic publishers 
printed netherlands 
tex lowekamp variety applications appropriate measurement grid environments 
remos system serves foundation range approaches dealing network resources changes 
approaches scope remos 
remos aims provide resource measurements wide range network architectures environments implementations 
explicit information network resources applications implement application speci adaptation mechanisms 
experience shows remos especially useful applications explicit con guration decisions selecting server set candidates selecting set compute nodes certain connectivity properties deciding local remote execution 
simpler scenarios nodes exchanging data cheaper solutions nodes monitor performance 
order support resource measurement di erent network environments diverse applications remos system address anumber con icting priorities practical 
architecture implementation remos brie review design objectives challenges scalability resource monitoring distributed systems necessarily involves machines large network infrastructure users 
monitoring system scale size infrastructure user population 
usability users collected information application developers network managers 
goal provide information need swamping unnecessary details 
flexibility system able support requirements di erent users example synchronous multiprocessing realtime video bulk data transfer distinctly di erent bandwidth latency loss requirements require information di erent timescales 
portability network technology continues develop fast pace 
remos able allow integration new networking technologies new measurement techniques 
consequence remos design isolate parts modi cations parts interact base networking technology ensure portability clients stable api 
tex remos network monitoring robustness system degrade gracefully load network resource measurement system 
cost ectiveness measurement system perturb measured system point measurements meaningless 
intrusiveness kept low possible 
remos regular basis groups aura project cmu quo bbn hiper testbed tdc cactus university arizona rainbow cmu desiderata project ohio university 
projects quite diverse respect networks application information needs 
evaluation portability exibility dimension part interactions users 
describes design remos addresses challenges 
section describe general architecture remos 
section describes techniques remos implement architecture 
section describes related discusses remos terms grid monitoring architecture proposed global grid forum 
section evaluates design implementation remos meet original design goals 
section discusses lessons learned development remos issues require 

architecture overview remos architecture 
remos architecture divides services collectors modelers predictors 
remos api exposed applications implemented modeler 
isolation delegation tasks api allows considerable exibility design components 

remos api applications perspective networks diverse complex shared heterogeneous black boxes serve points 
goal remos open black box distributed applications appropriate decisions network capabilities resource usage 
inherent tradeo providing detailed information network application 
little information may allow complex application accurately predict performance advantages disadvantages various options tex lowekamp application toolkit modeler local collector master collector prediction service global collector application modeler remote collector 
overview components remos architecture 
data placement communication patterns algorithms 
hand information simple questions locating estimating bottleneck bandwidth hosts di cult impossible application programmer answer learning complex details network behavior 
question remos api determining proper level abstraction representing network information application 
wished sacri ce information detail ease developing applications developed fundamentally di erent ways applications access data available remos shown 
ow queries application fairly simple wants evaluate performance particular communication pattern receive network 
queries require standardized description communication pattern application 
standardization introduces information loss application communication needs simple loss minimal 
standard description passed network layer free network speci knowledge respond query 
remos ow query form public void fixed flows variable flows flow queries int flags double age tex remos network monitoring flow queries topology queries application description query application detail loss query processed non portable network information application toolkit remos api remos implementation network topology non portable application information network detail loss network description response query 
query abstractions supported remos api illustrated 
query passes abstraction layer application network levels information lost 
user select best query application evaluating complexities application adaptation options unusual network support re ected standardized topology description 
fixed flows set ows bandwidth met 
met exception thrown 
variable flows set ows rate adjusted 
requested ow rates achieved rates ected ows reduced proportionally information flow structure updated accordingly 
flow queries set ows updated remaining bandwidth available path previous classes met 
flow flow queries considered independently 
combination ow classes gives users powerful interface expressing behavior variety application types interface wide range queries 
second type query topology query 
topology query useful opposite problem application complex options network utilization complex take separate ow queries evaluate 
topology query network representation including topology link capacity utilization passed application standardized format 
process introduces information loss enables applications decisions task placement incurring exponential costs 
topology interface simpler interface ow queries tex lowekamp public graph nodes double age nodes set nodes endpoints included graph 
returned graph structure provides set nodes internal endpoint links connect 
link annotated capacity utilization information 
queries include age parameter allows application specify maximum age cached information answer query 
application decide tradeo large age value lowers overhead intrusion small age value increases accuracy response time 
information api interface remos tr dewitt 
documentation current interface downloading current release 

collectors collectors responsible acquiring consolidating information needed application 
collectors variety methods collecting information may incorporate control sensors perform actual measurements architectural view single function collect information forward modeler 
new sensors added having conform protocol collector collector collector modeler communication 
scalability reasons collectors organized hierarchical fashion 
lowest level collector responsible collecting information speci network 
example local collector responsible obtaining performance information lan 
global collectors responsible obtaining performance information networks connecting lans 
local global collectors remote sites contacted obtain information remote sites 
master collector responsible gathering information di erent collectors coalescing response modeler query 
master collector maintains database locations collectors portion network responsible 
request comes modeler master collector queries appropriate collectors replies revealing response obtained multiple collectors 
technique possible build layers collectors 
example remote collector master collector turn contacts variety local collectors queried network 
tex remos network monitoring important advantage architecture blurs line inter intra site measurements 
collectors assume responsibility contacting remote sites aggregating available information single response modeler application determine query concerns nodes single site remote sites consider appropriate measurement technique 
wan link bottleneck path query appropriate measurement automatically returned 

modeler modeler sits application collectors 
implements api responsible modeling collector gathered information network information abstractions required application 
rst task communicate collector send requests receive information network 
second task conversion raw network information abstractions application 
architectural view modeler functionality abstractions de nes related application collectors network related abstractions 
collector discovers network nodes links formed network topology graph modeler 
similarly collector measures resources individual nodes links inside network modeler uses resource measurements convert information forms easier applications calculating available resources ow identifying bottleneck path 
application communicates exactly modeler runs node application 
contrast modeler may gather information collectors scattered network 
division labor allows remos reduce overhead imposed application performing separate nodes 
eliminates need store application state collectors allowing collector deal queries stateless fashion modeler retains ability customize responses query intervals predictions application state 

predictors predictors responsible turning measurement history prediction behavior 
predictors remos part rps toolkit developed dinda dinda hallaron 
api supports requests predictions network tex lowekamp behavior practice implemented predictors host load 
focusing network monitoring discuss predictors 
readers interested host load prediction referred dinda dinda hallaron 
ectiveness quality bandwidth predictions snmp benchmark measurements discussed lowekamp miller steenkiste wolski :10.1.1.46.3287

implementation remos implementation remos diagrammed 
gure illustrates various collectors remos interact grid environment 
described previous section complexities system hidden user partitioning remos application side modeler predictors network side collectors components 
cover wide variety administrative domains remos run developed collector implementations snmp collector collects topology bandwidth information passive queries snmp enabled ip routers 
bridge collector determines topology bridged ethernet lans forwards topology information snmp collector augment bandwidth monitoring capabilities include ethernet switches 
benchmark collector performs active monitoring tcp probes transfer data machines record bandwidth obtained transfer 
networks snmp accessible 
master collector merges data collectors coherent picture serves single point contact applications 
combination collectors provides support vast majority networking situations 
majority current lans built bridged ethernet 
combination bridge collector snmp collector provides topology bandwidth information networks 
campus networks built routers connecting various ethernet subnets supported snmp bridge collectors 
sites connected internet tex cmu application bridge collector toolkit modeler bbn snmp collector master collector remos network monitoring rps snmp collector application modeler benchmark collector benchmark collector bridge collector benchmark collector master collector application modeler snmp collector rps eth zurich bridge collector remos communication benchmark traffic 
detailed illustration components remos architecture connected 
shown applications running cmu eth making resources cmu eth bbn 
application prediction services provide information network availability 
applications cmu machines cmu bbn application eth machines eth bbn 
benchmark measurements sent internet shown clarity connections snmp bridge collectors network components monitor shown 
typically impossible user obtain snmp access relevant routers benchmark collector performs active probes span network remote site local snmp collector performs monitoring 
remainder section describe collector implemented communicate 
conclude brief description modeler implementation 
tex lowekamp 
snmp collector snmp collector basic collector remos uses network information 
snmp database protocol designed provide network administrators direct access control status network devices stallings 
snmp collector uses features passive queries obtain network level information topology performance directly routers switches 
snmp collector direct access information network stores collector capable answering ow topology queries require understanding details network structure miller steenkiste 
snmp collector operates routed networks layer 
snmp collector assigned monitor particular network generally ip domain corresponding university department 
snmp agents normally accessible local ip addresses administrative restrictions dictate location areas responsibility snmp collectors 
snmp collector monitors network demand basis 
waits application queries explores begins monitoring network components needed respond query 
begins monitoring parts network continue periodic monitoring collect history network predictions 
collector con gured monitoring speci resources startup computational center known resources 
rst complex step snmp collector take receiving query topology discovery 
ip addresses nodes query routers con gured collector follows route hop hop query 
simple algorithm quite expensive running time diameter network number endpoints request 
help reduce actual running time algorithm stops path search pair nodes earlier discovered path reached destination 
subnets routes symmetric half queries eliminated 
collector discovered routes nodes queries routers path link bandwidth pair routers 
periodically monitors utilization segment querying octet counters interface routers 
default utilization monitored seconds con gurable parameter 
tex remos network monitoring nal responsibility snmp collector representing network virtual topology graph 
term virtual graph may perfectly map underlying network collector discovers nodes connected shared ethernet connected routers access represents connection virtual switch 
case shared ethernet switch canbe annotated bandwidth capacity utilization shared ethernet represents functionality standard graph format 
snmp collector implemented java threads capable monitoring number routers responding queries simultaneously 

bridge collector snmp collector capable monitoring layer routed networks 
research campus networks connected routers majority lans implemented layer switched ethernet 
unfortunately ethernet switches provide explicit topology information provided ip routing tables 
bridge collector addresses problem determining topology ethernet switches forwarding databases 
remos architecture exists entirely inform snmp collector ethernet topology allowing snmp collector obtain actual utilization measurements switches 
bridge collector begins topology discovery immediately startup 
capable determining topology switches implement forwarding database speci ed rfc bridge mib 
complete forwarding database downloaded bridge ethernet lan 
information bridge collector determines bridges connected deriving topology entire ethernet network 
bridge collector determined bridges connected nds location hosts monitoring list 
bridge collector complete picture layer topology provided ethernet lan 

topology maintenance completing initial discovery phase bridge collector begins monitoring location hosts lan 
selects appropriate monitoring intervals host historical information indicating likelihood move leave network go 
tex lowekamp update location previously discovered host bridge collector performs quick check consists sending ping immediately querying bridge host known connected 
host moved bridge immediately reports position 
host moved bridge collector waits response pings searches bridges manner unknown host 
previously unknown hosts bridge collector pings host receives response places host mac address arp cache machine ensures bridges seen host 
bridge collector begins root switch topology locates host topology 
bridge collector assumes hosts may move switches move 
assumption true non mobile network 
event system administrators recon gure network bridge collector restarted repeat initial topology discovery 

communication snmp collector bridge collector informs snmp collector lan topology query 
snmp collector receives query modeler host hosts unaware forwards topology query request bridge collector 
bridge collector replies snmp collector bridges links topology hosts query 
snmp collector caches knowledge bridges hosts adds list links monitors 
simplify implementation bridge collector maintain state portions topology snmp collector queried 
observes host monitoring move sends invalidate message snmp collector open connection 
snmp collector previously cached information host delete optionally request new information 
unaware moved host merely ignores invalidate message 

runtime costs analyzing runtime bridge collector di cult actual topology algorithms runs quickly 
time consuming portion bridge collector process retrieving information bridges overloading perceived attack bridges 
initial download forwarding databases bridges takes minutes typical tex remos network monitoring host network somewhat hours host network 
bridge collector answers queries cache topology information initial discovery phase run cost longer matters runtime remos 
relevant cost bridge collector remos time takes reply query snmp collector 
cases bridge collector hosts queried cache query require updates currently cached response immediate 
query requests host bridge collector seen requests information currently cached bridge collector search update location host 
performing quick check con rm host location minimal cost time takes issue receive response snmp query 
discovering location unknown host take longer time operation depends time ping response received time send snmp query bridge number bridges queried host located topology 
typically active host located seconds 
host responding pings bridge collector waits predetermined time reporting host unavailable 
queries large numbers new hosts search parallelized 
optimization reduce load placed bridges 

benchmark collector snmp ers excellent information remos generally obtain snmp access network information wans networks remos administrator account 
case remos falls back benchmark collector uses active probes determine performance characteristics network 
benchmark collector run site snmp collector measurement performance multiple sites needed benchmark collector sends active tcp probe benchmark collector running site interest 
measuring bandwidth latency sites benchmark collectors determine performance links connecting network report information master collector 
technique similar techniques nws wolski 
tex lowekamp measure bandwidth cray research delay traceroute 
run programs benchmark collector permission run code endpoints uses measurements 
benchmark collector expensive algorithm large constant time execute benchmark 
practice collector wide area networks endpoints correspond subnets practice small 
environment remos users rely caching keep track connectivity larger number subnets 
frequency benchmark collector probes controlled typically interval order minutes 
interesting di erences snmp benchmark collector active probes benchmark collector add considerable load network tra snmp collector passive probes hand add little tra may place additional load routers respond snmp queries 
benchmark collector measures user level performance 
contrast snmp collector collects historical data bandwidth translated estimate bandwidth new user expect 
results show possible experience needed show accurately done range networks 
information benchmark collector detailed 
example suppose node query nodes 
benchmarks show bandwidth mbs mbs benchmark collector predict result stream data time 
snmp collector return logical topology shows bottleneck shared ows 
experience indicates snmp collectors intrusive provide accurate information di cult evaluate impact snmp queries router performance 

master collector queries involving single subnet handled entirely collector responsible subnet 
distributed applications need obtain information multiple subnets get tex eth eth remos network monitoring eth wan cmu 
master collector example 
edge eth edge cmu cmu cmu information need single collector 
master collector designed solve problem 
despite name di erent master collector network remos applications running 
current implementation master collector uses database keep track collectors knows 
collectors register database giving information includes type collector domain responsible represented subnet addresses 
modeler remos application submits query master collector 
query received rst task master collector identify ip networks subnets involved query associated snmp benchmark collectors networks 
instance user ask hosts eth cmu query 
hosts eth eth lan separated wide area network hosts cmu cmu cmu 
master collector uses ip addresses hosts requested identify collectors needed answer query snmp collectors responsible domains containing hosts listed query leaf subnets picks benchmark collectors get information wide area networks leaf subnets 
breaks query di erent collectors sends correct piece collector 
problem trivial know ip addresses relevant ports edge routers connect subnets 
information part query request 
solution master collector discover information traceroute request information data collectors 
approach drawback master collector learn keep track information subnet speci place responsibility identifying edge routers data collectors 
data collector master collector formulates request contains endpoints subnet responsible endpoint leaf subnets 
master collector uses separate thread send queries collectors parallel 
tex lowekamp snmp collector eth benchmark collector internet 
eth cmu eth edge eth cmu eth master eth eth collector eth edge eth internet 
edge cmu 
master collector merging process 
snmp collector cmu edge cmu cmu cmu cmu cmu example master collector determine needs contact collectors snmp collector eth snmp collector cmu benchmark collector get information wide area network eth cmu 
snmp collector gets query master collector uses ip addresses hosts query determine outside domain 
routes network including edge router 
response master collector returns relevant local topology information edge router 
benchmark collectors replace endpoints outside domains addresses nodes subnets run benchmark programs peer benchmark collector 
queries sent master collector waits thread nish receiving responses collectors 
master collector merges results query removes duplicate node link information 
process node link information snmp collector takes precedence information benchmark collector snmp collector data accurate 
furthermore response snmp collector contains edge router include list ip addresses associated edge router 
important router identi ed ip address response benchmark collector identi ed di erent ip address response snmp collector 
master collector uses edge router information determine di erent ip addresses belong node 
shows merging process example 
master collector takes information tex remos network monitoring collectors involved query merges seamless picture network connecting hosts listed original query 
result returned modeler 

modeler application queries information network api provided remos modeler 
modeler singlethreaded entity opens maintains tcp connection master collector 
location port master collector con gured application startup 
modeler available java implementations 
modeler uses raw network information provided collector build topology structure underlying network 
connects nodes links form network graph may add virtual switches simplify network topology 
modeler implements topology ow queries 
intention allow information represented part topology response answer ow queries practice wehave able explore option collected little information represented topology graphs 
important advantage ow queries ability simplify application programming 
modeler implementation ow queries quite useful applications 
algorithm assumes application receive unutilized bandwidth link network uses max min fair share algorithm ja determine messages ow query available bandwidth 
implementing complex approximation modeler remos application developer quickly form complex query rely modeler perform analysis performing application 
api allows user specify xed rate proportionally adjustable best ort ows mimic behavior variety application types 
topology information returned modeler summarized describe portion network required list nodes interested systems network 
routers bridges connect hosts returned large uninteresting parts network series bridges routers queried hosts attached compressed virtual switches representing bandwidth latency restrictions simplify topology description 
tex lowekamp remos queries contain age eld 
age speci es allowed age measurement 
application specify old measured value considered accurate application 
long running loosely coupled applications older measurements short lived ne grained application 
age parameter allows customization remos needs di erent applications 

grid related grid distributed computing brought need systems monitor predict application resource information 
addition remos number systems developed address various information needs grid applications wolski tierney tierney :10.1.1.48.1521
principle di erences remos systems remos intended provide applications data derived component sensors network integrate measurements traditional sensor data benchmarks 
projects developed techniques derive internet topology govindan tangmunarunkit rothermel jamin obraczka den burger remos rst integrate lan topology information performance measurements 
link sharing lans profound uence application performance providing information site site performance measurements proven useful predicting application performance 
research resource prediction focused determining appropriate predictive models host behavior dinda hallaron wolski network behavior wolski basu polyzos 
rps toolbox remos incorporates models studied research 
rps available independent tool research requiring predictive models 
products global grid forum grid monitoring architecture gma tierney developed performance working group 
architecture information producers consumers nd directory service 
similarities remos architecture tex query time remos network monitoring warm cache part warm cache cold cache collectors warm cache warm cold collectors part warm cache collectors cold cache number nodes 
snmp bridge collector response times 
gma 
collector producers 
master collector combined consumer producer responsible aggregating information providing layer 
modeler viewed consumer represents application provides performance predictions component data available collectors 
remos architecture collectors limited directory service locate 
directory service gma natural purpose 
associated format gma method store grid information rst place 
signi cant discussion ongoing advantages disadvantages hierarchical approach mds czajkowski relational approach dinda 
proposals models capable associating remos resources monitors fundamental requirement remos directory service 

evaluation exibility portability aspects remos discussed sections especially section 
discuss scalability functionality results di erent remos components system 
tex lowekamp 
lan scalability rst set experiments look response time snmp collector deployed local area network school computer science cmu 
network large bridged network bridge collector get complete topology information 
shows response time increases number nodes speci ed query 
measurements averaged runs 
scenarios rst run snmp collector included results bridge collector 
query time added scenarios includes bridge collector costs adding new hosts topology snmp collector overhead monitoring utilization link reported ethernet lan topology 
cold cache snmp collector just started information static topology dynamic performance metrics 
part warm cache snmp collector cached information result previous query typically data 
warm cache snmp collector static dynamic data cache 
collectors cold cache snmp collector bridge collector just started information static topology dynamic performance metrics 
collectors part warm cache snmp collector bridge collector cached information result previous query typically data 
collectors warm cache snmp collector bridge collector static dynamic data cached 
warm cold bridge collector topology data cached snmp collector just started static dynamic information 
anumber observations 
clearly pays cache information 
warm cache results factor better cold cache results 
second worst case cost cold cache query 
implemented number tex throughput megabits sec st site st site nd site rd site th site avg bw effective avg bw avg bw avg bw remos chose best site remos network monitoring 
average transfer rates connected sites 
throughput megabits sec st site st site nd site rd site avg bw effective avg bw avg bw remos chose best site st site st site nd site rd site th site avg bw effective avg bw avg bw avg bw remos didn choose best site st site st site nd site rd site avg bw effective avg bw avg bw remos didn choose best site 
average transfer rates poorly connected sites 
optimization reduce cost especially large measurements show ect 
cost warm cache queries 
see cost grows faster probably increasing memory requirements reduce execution ciency 

mirrored server experiment simple remos help applications choose remote server set replica servers available network bandwidth 
written simple application reads mb le server network information obtained remos choose best server miller steenkiste 
socket bu er sizes tex lowekamp set kb remos le transfer application experiments 
ran sets mirror experiments remote sites network bandwidth experiment sites poor bandwidth 
rst experiment ran application carnegie mellon servers harvard isi northwestern university nwu eth 
averaged trials observed average throughput mbps harvard mbps isi mbps nwu mbps eth 
second experiment ran application carnegie mellon servers university coimbra portugal average throughput mbps university spain average throughput mbps third server run machine pittsburgh connected dsl link maximum upstream bandwidth mbps 
ran trials poorly connected sites 
evaluate quality remos information modi ed application read le servers starting server remos best network connectivity 
rst experiment connected sites remos chose remote site ended having fastest transfer rate time 
shows di erence throughput st place site remos chose sites 
left half graph shows throughput remos chose best site right graph shows throughput remos choose fastest site 
second bar group shows ective bandwidth site remos chose 
bandwidth includes time took get answer back remos system 
second experiment sites connected cmu remos chose remote site ended having fastest transfer rate time 
shows di erence throughput st place site remos chose sites 
left half graph shows throughput remos chose best site right throughput didn 
second bar group shows ective bandwidth site remos chose 
included ective bandwidth measurement takes time consult remos choose server performance better choosing slower sites 
experiments show remos pick site ective sites poor connectivity 
tex remos network monitoring table server location available bandwidth mbps standard deviation measured remos 
average standard server location bandwidth deviation eth zurich epfl lausanne cmu university spain university portugal 
application experiment video transfer previous example remos available bandwidth metric 
metric directly correspond metric application interested 
example quality video application downloads plays video real time may rated number correctly received frames client etal 
experiment shows remos metric corresponds application de ned metric 
experiment video client located eth 
servers videos downloaded placed di erent locations europe see table 
video server able adapt outgoing video stream available bandwidth intelligently dropping frames lower importance 
maximizes numbers frames transmitted correctly 
bandwidth local server eth order magnitude higher epfl turn order magnitude larger 
downloading video client issues remos query measure available bandwidth servers 
downloads movie server best connectivity 
compare results client subsequently downloads video sites decreasing order available bandwidth 
experiment run times hours di erent movies 
shows number correctly received frames experiment 
server selected rst bandwidth measurements remos indicated large circle 
gure excludes results eth epfl bandwidth higher bandwidth required application 
eth included client picks server eth downloaded tex lowekamp number correctly received frames experiment number best server nd best server worst server picked server 
server picked measured bandwidth large circle number correctly received frames download 
bandwidth mbps second interval remote server second interval local server second interval remote server second interval local server second interval local server second interval remote server local server remote server time sec 
bandwidth measured application averaged di erent time intervals bandwidth reported remos 
video lose frames 
eth excluded system selects epfl gets video dropped frames 
eth epfl excluded client perceived quality corresponds reported bandwidth cases client receives frames correctly server highest bandwidth 
cases best server picked inspection shows server sent half packets probably due high load server 
results show available bandwidth corresponds application perceived quality 
wrong picks indicate bandwidth guarantee video download 
parameters may uence download taken account 
tex remos network monitoring shows experiments detail 
movie downloaded di erent servers local server high bandwidth connectivity remote server limited bandwidth 
packet arrives client timestamped bandwidth calculated average di erent time intervals seconds 
download local server limited bandwidth 
average small intervals shows bandwidth requirements vary time 
uctuations explained variation movie content 
averaging bandwidth larger interval smooths variations 
remote server experiment bandwidth measured remos horizontal line mbps 
line corresponds bandwidth measured application averaged large interval 
second interval corresponds time interval remos uses measure available bandwidth 
calculating average smaller intervals shows higher uctuations 
reported bandwidth correspond bandwidth small intervals 
experiment demonstrates optimal results achieved metric remos application correspond interval bandwidth reported matches varying needs application 
remos currently able fully address points experiment shows remos able provide useful guidance type application 
help video client select server 
addition similarly determine alternate servers routes dynamic video hando gross 

support application layer routing traditional ip routing algorithm minimizes number hops connection 
applications multimedia applications sensitive bandwidth number hops 
studies savage 
shown alternative paths constructed internet provide better bandwidth default routing path 
approaches overlay network advocate routing systems network chu zhao jannotti savage chu 
data sent sending host multiple third party host inside network nal destination 
default ip routing tunnel data overlay nodes 
tex lowekamp table ii 
data threshold kb alternative path better download time default routing path 
src dst eth epfl cmu nwu uva eth epfl cmu nwu uva claim remos suited support remos provides necessary network information hiding details information gathering overlay structure right tool measure bandwidth lan wan 
show suitability application speci routing protocol collaborative application remos 
collaborative application transmit data di erent types di erent sizes sender multiple receivers 
set collaborating nodes forms kind overlay network 
depending size data depending available resources paths application decide path best 
algorithm path selection uses equation determine transmission time data item bw latency small amounts data text latency dominant factor bandwidth important increasing data size 
current values available bandwidth latency easily gathered remos 
show ects routing perform internet experiment 
wehave collected set internet traces hosts europe host act sender proxy receiver 
alternative paths constructed concatenating path proposed 
savage 
bandwidth alternative path minimum individual bandwidths latency sum individual latencies 
savage alternative paths exist signi cantly better bandwidth default routing path 
gain alternative path routing shown comparing transmission time default routing path best alternative path 
default path typically low latency crosses tex transmission time remos network monitoring default path alternative path epfl cmu nwu uva transmission time default alternative paths function data size 
small number hops 
small data items default path preferably alternative paths large data sizes greater bandwidth capacity 
threshold alternative path provides better connectivity default routing path 
threshold depends di erences latency bandwidth 
table ii shows data threshold hosts experiment 
numbers expressed kb average values measurements 
eld empty default path better alternative paths large data sizes 
results show thresholds lie kb mb 
results text small images sent default path larger images video sent alternative path 
large data sizes streams increased bandwidth availability signi cant ect quality video 
ects application perceived transmission time shown 
gure compares default path best alternative path function destination host data size 
logarithmically scaled axis denotes transmission time seconds 
rst host epfl default path better alternative path 
destinations default path better small data sizes better latency 
soon data size increases better bandwidth availability alternative paths pays experiment remos able provide resource information network application tex lowekamp layer routing 
information overlay networks 
directly network aware applications deploy application speci routing 
overlay networks typically transparent application route data single metric 
experiment stresses importance separate routing schemes depending size data 

re ections section try capture learned resource monitoring systems years 
comments course quite subjective hope thoughts help working area 

worked rst step remos development de nition remos api lowekamp 
kept api simple focused simple network performance properties interest applications 
api supports performance metrics initial implementation focused bandwidth 
experience suggests right design decisions 
api provides balance simplicity amount information provided 
kept small simple simplify application development hide underlying details 
api works networks encountered far network independent 
bandwidth far important metric applications 
underneath xed api decided systems architecture modular extensible 
choice worked 
initial system consisted just snmp collector able incorporate benchmark bridge master collectors changes api 
modular design able di erent data gathering techniques di erent networks 
benchmarks ective way collecting bandwidth information expensive intrusive networks need utilize snmp collector 

needs discovered di cult challenges building resource monitoring system making system easily portable robust diverse environments 
goal remos able report resource information environment tex remos network monitoring minimal manual con guration 
practice discovered bringing remos new environment 
problems range network features encountered gured network elements non standard features non standard snmp implementations 
extent portability problems surprise network vendors ways con gure network problem inherently hard 
learned useful snmp mib speci cations vendors commitment support properly su cient allow development totally portable utilities remos automatically parse information snmp agents 
years encounter hardware major networking vendors new mistakes omissions unusual interpretations mib standards require new test remos ensure support 
remos runs network tends quite reliable running weeks longer 
biggest challenge topology changes network fairly uncommon wired networks 
support tracking topology changes added know impact reliability 
improving robustness portability remos ongoing ort 
remos currently relies snmp mib benchmark information 
sources information tapped including measurements collected isps tra engineering purposes applicationlevel information stemm network information collected vendor speci ways 
emerging dmtf cim standards er promise better portability 
certain types networks shared ethernets need better techniques performance prediction 
ways remos system improved 
rst issue communication remos components currently single purpose ascii protocol 
convenient debugging development standard solutions xml ease interoperability extensions 
second benchmark collector improved adding support types benchmarking example lighter weight probing techniques packet pairs hu steenkiste 
third evaluating techniques sharing caching prediction results interesting exploring sharing predictions allows architecture scale large numbers diverse applications 
wehave developed collector wireless lans currently integrated remos 
similar bridge tex lowekamp collector topology discovery forwarding databases 
bridge collector collects dynamic bandwidth information exploit wireless speci information hosts cell transmission rates estimate available bandwidth 

remos useful 
applications video streaming care performance single ow nodes currently exchanging data 
cases remos probably overkill application get required information cheaply accurately monitoring performance gross 
applications select server set options select assign set compute nodes certain connectivity properties critical con guration decisions remote local execution video plus audio audio remos provides explicit connectivity information di cult expensive collect gross steenkiste 
model adaptive application combines types adaptation di erent information sources 
application performs node network selection high level guration explicit remos provided resource information 
type decision typically application starts long running applications periodically execution 
execution application ne tune performance direct measurements 
model part driven cost adaptation adaptation involve changes node usage cheap fast changing nodes high level application con guration expensive 

remos architecture designed provide information needed grid applications diverse environments 
remos implemented tested variety di erent networking environments support variety applications demonstrating exibility portability needed emerging applications 
remos support large numbers machines single site support sites simultaneously nd architecture scales 
architecture di ers somewhat proposed grid monitoring architecture tex remos network monitoring comparison indicates remos interact gma monitoring tools development performance tools remos easily supported framework gma 
availability remos api allows application developers address new aspects environment 
sacri cing portability performance vice versa possible develop applications information status network determine adaptation steps 
availability experience remos architecture backs claims remos api provides practical demonstration possible nd workable compromise con icting objectives functionality performance portability 
grow complexity orts grid bring application developers domain interest infrastructure systems remos increase 
dealing obtaining performance information remain important topic remos provides set abstractions architecture proven value practical settings 
carnegie mellon technical assistance 
appreciate contributions dewitt dinda hu judd sutherland carnegie mellon kocher eth zurich ands singh ren william mary design implementation 
basu mukherjee time series models internet tra 
technical report git cc college computing georgia institute technology 
gross bandwidth monitoring network aware applications 
proc 
th ieee symp 
high performance distr 
comp 
san francisco ca pp 
ieee cs press 
chu rao seshan zhang enabling conferencing applications internet overlay multicast architecture 
proceedings acm sigcomm 
san diego ca pp 

chu rao zhang case system multicast 
acm sigmetrics 
santa clara ca pp 

cray research networking benchmark 
ftp ftp sgi com sgi src 
czajkowski fitzgerald foster kesselman grid information services distributed resource sharing 
proceedings tenth ieee tex lowekamp international symposium high performance distributed computing hpdc 
den burger bal monitoring tool grid network topology 
international conference computational science 
pp 

dewitt gross lowekamp miller steenkiste sutherland remos resource monitoring system network aware applications 
technical report cmu cs school computer science carnegie mellon university 
dinda uni ed relational approach grid information services 
gis 
www cs northwestern edu relational gis 
dinda hallaron extensible toolkit resource prediction distributed systems 
technical report cmu cs school computer science carnegie mellon university 
dinda hallaron host load prediction linear models 
cluster computing 
earlier version appeared hpdc 
govindan tangmunarunkit heuristics internet map discovery 
ieee infocom 
tel aviv israel 
polyzos time series model long term nsfnet backbone tra 
proceedings ieee international conference communications icc vol 

pp 

gross steenkiste perspective application coupling 
proc 
th nossdav workshop network operating system services digital audio video www nossdav org tech 
short 
steenkiste gross evaluation adaptive ltering mpeg system streams ip networks 
proceedings ieee international conference multimedia expo 
new york ny pp 

hu steenkiste estimating available bandwidth packet pair probing 
technical report cmu cs carnegie mellon university school computer science 
ja bottleneck 
ieee transactions communications 
jamin jin jin raz shavitt zhang placement internet instrumentation 
ieee infocom 
tel aviv israel 
jannotti gi ord johnson kaashoek toole overcast reliable multicasting overlay network 
proceedings th system design implementation osdi 
san diego ca pp 

gross dynamic hando multimedia streams 
proc 
nossdav 
port je erson ny 
lowekamp miller sutherland gross steenkiste resource query interface network aware applications 
cluster computing 
lowekamp hallaron gross direct network queries discovering network resource properties distributed environment 
proc 
th ieee symp 
high performance distributed computing hpdc 
redondo beach ca pp 

lowekamp hallaron gross topology discovery large ethernet networks 
proceedings sigcomm 
tex remos network monitoring miller steenkiste collecting network status information network aware applications 
ieee infocom 
tel aviv israel 
obraczka performance service network aware applications 
proceedings acm sigmetrics 
available usc cs technical report 
vetter reed autopilot adaptive control distributed applications 
proceedings seventh ieee international symposium high performance distributed computing hpdc 
pp 

distributed scheduling load prediction past information 
abstracts published proceedings th annual acm symposium principles distributed computing podc pp 
third workshop languages compilers run time systems scalable computers lcr pp 

savage anderson aggarwal becker cardwell collins ho man snell vahdat voelker zahorjan detour informed internet routing transport 
ieee micro 
savage collins ho man snell anderson toend ects internet path selection 
proceedings acm sigcomm 
boston massachusetts pp 

stallings snmp snmpv 
addison wesley nd edition 
stemm seshan katz spand shared passive network performance discovery 
usenix symposium internet technologies systems 
monterey ca pp 

rothermel dynamic distance maps internet 
ieee infocom 
tel aviv israel 
tierney gunter smith taylor wolski grid monitoring architecture 
technical report global grid forum 
tierney crowley gunter holding lee thompson monitoring sensor management system grid environments 
proceedings ninth ieee international symposium high performance distributed computing hpdc 
pp 

tierney johnston crowley hoo brooks gunter netlogger methodology high performance distributed systems performance analysis 
proceedings seventh ieee high performance distributed computing hpdc 
pp 

wolski forecasting network performance support dynamic scheduling network weather service 
proceedings th high performance distributed computing conference hpdc 
pp 

extended version available ucsd technical report tr cs 
wolski dynamically forecasting network performance network weather service 
cluster computing 
wolski spring hayes network weather service distributed resource performance forecasting service metacomputing 
generation computing systems 
published ucsd technical report number cs 
wolski spring hayes predicting cpu availability time shared unix systems 
proceedings eighth ieee symposium high performance distributed computing hpdc 
pp 
ieee 
earlier version available ucsd technical report number cs 
tex lowekamp wolski spring peterson implementing performance forecasting system metacomputing network weather service 
supercomputing 
zhao kubiatowicz joseph tapestry infrastructure faulttolerant wide area location routing 
technical report ucb csd university ca 
tex 
