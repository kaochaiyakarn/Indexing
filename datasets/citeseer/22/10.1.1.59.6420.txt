ieee transactions knowledge data engineering vol 
july peertrust supporting reputation trust peer peer electronic communities li xiong ling liu member ieee computer society peer peer online communities commonly perceived environment offering opportunities threats 
way minimize threats communities community reputations help estimate trustworthiness peers 
presents peertrust reputation trust supporting framework includes coherent adaptive trust model quantifying comparing trustworthiness peers transaction feedback system decentralized implementation model structured network 
peertrust model main features 
introduce basic trust parameters adaptive factors computing trustworthiness peers feedback peer receives peers total number transactions peer performs credibility feedback sources transaction context factor community context factor 
second define general trust metric combine parameters 
contributions include strategies implementing trust model decentralized environment evaluation mechanisms validate effectiveness cost peertrust model set experiments show feasibility benefit approach 
index terms peer peer trust reputation mechanisms data management security 
peer peer online communities seen truly distributed computing applications peers members communicate directly exchange information distribute tasks execute transactions 
implemented top network conventional client server platform 
gnutella example communities built top platform 
person person online auction sites ebay business business services supply chain management networks examples built server architecture 
ecommerce settings communities established dynamically peers unrelated unknown 
peers manage risk involved transactions prior experience knowledge reputation 
way address uncertainty problem develop strategies establishing trust develop systems assist peers assessing level trust place ecommerce transaction 
example buyer seller market buyers vulnerable risks potential incomplete distorted information provided sellers 
trust critical electronic markets provide buyers high expectations satisfying exchange relationships 
recognizing importance trust communities immediate question ask build trust 
extensive amount research focused building trust electronic markets trusted third parties intermediaries 
applicable self regulating authors college computing georgia institute technology atlantic dr atlanta ga 
mail cc gatech edu 
manuscript received may revised oct accepted oct 
information obtaining reprints article please send mail tkde computer org ieeecs log number tkde 
communities peers equal roles entities serve trusted third parties intermediaries 
reputation systems provide way building trust social control utilizing recommendation judgment quality reliability transactions 
challenge building trust mechanism system effectively cope various malicious behavior peers providing fake misleading feedback peers 
challenge incorporate various contexts building trust vary different communities transactions 
effectiveness trust system depends factors metrics building trust implementation trust model system 
existing reputation mechanisms require central server storing distributing reputation information 
remains challenge build decentralized trust management system efficient scalable secure trust computation trust data storage dissemination 
need experimental evaluation methods trust model terms effectiveness benefits 
research problems mind develop peertrust reputation trust supporting framework 
number unique contributions 
analyzing variety common problems encountered today online communities section introduce peer trust model section important parameters general trust metric combining parameters evaluating trustworthiness peer evolving community 
trust information dissemination architecture usage trust model design implementation considerations peertrust section 
describe series simulation experiments carefully designed evaluate peertrust showing ieee published ieee computer society ieee transactions knowledge data engineering vol 
july accuracy robustness cost efficiency section 
common problems systems online communities section brief overview related section summary description section 
application scenarios research challenges electronic communities increasingly gaining acceptance internet provide infrastructure desired information products located traded preserving anonymity requestor peers provider peers 
experience systems gnutella shows anonymity opens door possible abuses malicious peers exploiting overlay network way spread tampered information including malicious programs trojan horses viruses 
way minimize threats open community community reputations computed feedback peers transaction histories 
common problems current electronic communities 
variety online community sites reputation management built ebay amazon yahoo auction slashdot entrepreneur com 
experience sites survey provided summarize list common problems risks observed current commerce communities 
existing reputation systems lack ability differentiate dishonest feedback honest ones vulnerable malicious manipulations peers provide dishonest feedback 
systems provide support incorporate various contexts evaluating trustworthiness peers 
example peer develop reputation honest numerous small transactions tries profit cheating large transactions 
systems provide incentives peer rate suffer insufficient feedback 
systems deal strategic dynamic personality peers 
example malicious peers andthen building reputation 
common security threats environments 
security threats information sharing environments due main features design anonymous communication example gnutella servants peers anonymous identified self identified servant id variety shared information files authorized shared gnutella include media types including executable binary files 
feature involves weakness due combination low accountability low trust individual peers 
feature combined environments vulnerable certain security attacks 
list number security threats common distributed systems 
distribution tampered information 
simplest version attack peer provide fake resource name real resource peer looking 
actual file trojan horse program virus known gnutella worm 
man middle attack 
malicious peer intercept message provider peer requestor rewrite ip address port provider malicious peer infect original content provider pass requestor 
peers easily compromised 
peers online community distributed management easily compromised 
instance wellknown gnutella worm spreads making copy gnutella program directory modifies gnutella ini file allow sharing files gnutella program folder 
sections design ideas peertrust coherent dynamic trust model strategies developing system level mechanisms implement model trust peer selection scheme risk evaluation proposed approach including mentioned problems avoided reduced potential corrective preventive methods recovery survival 
trust model main focus design development peertrust dynamic trust model quantifying assessing trustworthiness peers commerce communities 
unique characteristic trust model identification important factors evaluating trustworthiness peer evolving commerce community 
trust parameters peertrust peer trustworthiness defined evaluation peer receives providing service peers past 
reputation reflects degree trust peers community peer past experiences 
identify important factors evaluation 
feedback peer obtains peers 
feedback scope total number transactions peer peers 
credibility factor feedback source 
transaction context factor discriminating mission critical transactions noncritical ones 
community context factor addressing community related characteristics vulnerabilities 
illustrate importance parameters number example scenarios 
feedback terms amount satisfaction 
reputation systems rely feedback evaluate peer 
feedback terms amount satisfaction peer receives transaction reflects peer fulfilled xiong liu peertrust supporting reputation trust peer peer electronic communities part service agreement 
existing systems factor compute peer trust value summation feedback receives transactions peers community 
example buyers sellers ebay rate transaction reputation sum ratings months 
clearly see feedback metrics flawed 
peer performed dozens transactions cheated cases steadily rising reputation time duration peer performed transactions time duration completely honest treated reputable reputation measures peers computed simple sum feedback receive 
dellarocas concluded binary reputation mechanisms function resulting market outcome unfair judgment inferred knowledge sum positive negative ratings 
number transactions 
described peer may increase trust value increasing transaction volume hide fact frequently misbehaves certain rate simple summation feedback model trustworthiness peers 
number transactions important scope factor comparing feedback terms degree satisfaction different peers 
updated metric defined ratio total amount satisfaction peer receives total number transactions peer average amount satisfaction peer receives transaction 
sufficient measure peer trustworthiness 
considering reputation information account source information context 
credibility feedback 
feedback peer receives peer transaction simply statement regarding satisfied feels quality information service provided peer may false statements peer service due types malicious motives 
consequently trustworthy peer may getting large number false statements may evaluated incorrectly provides satisfactory service transaction 
peertrust introduce credibility feedback basic trust building parameter equally important number transactions feedback 
feedback peers higher credibility weighted lower credibility 
developed mechanisms measuring credibility peer providing feedback 
concrete formulas discussed section 
transaction context factor 
transaction context important factor aggregating feedback transaction transactions may differ 
example community business savvy size transaction important context incorporated weight feedback transaction 
act defense subtle malicious attacks example mentioned earlier seller develops reputation honest small transactions tries profit dishonest large transactions 
seen simplified mechanism sophisticated risk management commerce 
addition value transaction functionality transactions important transaction context trust supply books supply medical advice 
community context factor 
community contexts address community specific issues vulnerabilities 
example add reward community context peers submit feedback 
may extent alleviate feedback incentive problem 
example trust authority peers digital certificate community available incorporating community specific context factors trust computation trust metric robust certain manipulation malicious peers 
general trust metric discussed importance trust parameters peertrust 
section formalize parameters general trust metric combines parameters coherent scheme describe formula compute values parameters peer community belongs 
time window denote total number transactions performed peer denote total number transactions performed peer peers denote participating peer peer ith transaction denote normalized amount satisfaction peer receives ith transaction cr denote credibility feedback submitted tf denote adaptive transaction context factor peer ith transaction cf denote adaptive community context factor peer trust value peer denoted defined 
xi cr tf cf denote normalized weight factors collective evaluation community context factor 
metric consists parts 
part weighted average amount satisfaction peer receives transaction 
weight takes account credibility feedback source counter dishonest feedback transaction context capture transaction dependent characteristics 
history evaluation seen prediction peer likelihood successful transaction 
confidence value computed associated trust metric may reflect number transactions standard deviation ratings depending different communities 
second part metric adjusts part increase decrease trust value community specific characteristics situations 
parameters assign different weights feedback evaluation community context different situations 
instance values assigned properly ieee transactions knowledge data engineering vol 
july trust value set feedback evaluation peer transactions feedback default value 
important note general trust metric may different appearances depending parameters turned parameters weight factors set 
design choices depend characteristics online communities 
argue parameters feedback number transactions credibility feedback source important basic trust parameters considered computation peer trustworthiness communities 
basic metric consider basic form general metric shown turning transaction context factor tf community context factor 
computes trust value peer weighted average amount satisfaction peer receives transaction 
xi cr feedback terms amount satisfaction collected feedback system 
peertrust uses transaction feedback system feedback bound transaction 
system feedback transaction participating peers give feedback transaction 
feedback systems differ feedback format 
positive format negative format numeric rating mixed format 
normalized amount satisfaction computed feedback 
feedback number transactions quantitative measures collected automatically 
different third parameter credibility feedback qualitative measure needs computed past behavior peers file feedback 
different approaches determine credibility factor compute credible amount satisfaction 
way solicit separate feedback feedback 
problem trust management complex 
simpler approach infer compute credibility value peer implicitly 
propose credibility measures 
function trust value peer credibility factor feedback trustworthy peers considered credible weighted untrustworthy peers 
solution assumptions 
untrustworthy peers submit false misleading feedback order hide malicious behavior 
second trustworthy peers honest feedback provide 
widely recognized assumption generally true second assumption may true time 
example possible common peer may maintain reputation performing high quality services send malicious feedback competitors 
extreme case function trust approximate credibility feedback generate errors 
reputation trust peertrust model established terms quality service provided peers quality feedback filed peers 
call basic metric uses trust value peer recursively credibility measure peertrust tvm metric defined 
xi second credibility measure peer personalized similarity measure rate credibility peer personalized experience 
concretely peer personalized similarity peer weight feedback peers 
denote set peers interacted peer common set peers interacted peer denoted ijs 
measure feedback credibility peer peer computes feedback similarity common set ijs peers interacted past 
model feedback feedback ijs vectors credibility defined similarity feedback vectors 
particularly root mean square standard deviation dissimilarity feedback vectors compute feedback similarity 
notion local personalized credibility measure provides great deal flexibility stronger predictive value feedback similar raters weight 
may act effective defense potential malicious 
observation peers collusive group give ratings group bad ratings outside group feedback similarity peer collusive group peer outside group low effectively filter dishonest feedback peer peer call basic metric uses personalized similarity credibility measure peertrust psm metric defined 
xi sim sim sim pi ijs pi design goals peertrust model emphasize roles different trust parameters computing trustworthiness peers rest measures examples study effectiveness benefit cost 
believe study determines precision credibility feedback interesting hard research problem deserves attention 
xiong liu peertrust supporting reputation trust peer peer electronic communities fig 

peertrust system architecture 
system architecture 
data location 
adapting trust metric context factors discussed motivations scenarios incorporating adaptive context factors general trust metric 
section gave examples adapting metric transaction community context factor respectively 
incorporating transaction contexts transaction context factor 
various transaction contexts size category time stamp transaction incorporated metric feedback larger important transactions assigned weight transactions 
example adapted metric incorporates size transaction denoted defined 
xi cr providing incentives rate community context factor 
remedies suggested incentive problem reputation systems market approaches policy approaches users receive rating information paying providing ratings 
implementing approaches growth online communities electronic markets 
peertrust incentive problem reputation systems addressed building incentives rewards metric community context factor peers provide feedback 
example adapted metric defined reward function ratio total number feedback peer give denoted total number transactions peer time window 
weight factors tuned control amount reputation gained rating 
xi cr implementation strategies trust model community independent implementation effectiveness supporting trust community depends factors metric computing trust values implementation usage trust model system 
typical issues implementing trust model peertrust decentralized network include decentralized secure trust data management efficiently securely store look trust data needed compute trust value peer trust metric computation execution trust peer selection scheme 
section discusses architecture algorithm design considerations implementing peertrust model decentralized system 
managing trust data system architecture fig 
gives sketch system architecture peertrust 
central database 
trust data needed compute trust measure peers stored network distributed manner 
callout shows peer trust manager responsible feedback submission trust evaluation small database stores portion global trust data data locator placement location trust data network 
trust manager performs main functions 
submits feedback network data locator route data appropriate peers storage 
second responsible evaluating trustworthiness particular peer 
task performed steps 
collects trust data target peer network data locator computes trust value 
see trust evaluation executed dynamic decentralized fashion peer 
having central server computes peer trust value peer obtains peer trust data rest peers computes trust value peer fly 
allows peers get date evaluation peer peers 
different applications may different data placement schemes determine data inserted updated accessed 
number file sharing systems emerged data location scheme 
examples include gnutella uses broadcast schemes guarantee reliable content location chord pastry grid distributed hash table dht deterministically map keys points logical coordinate ieee transactions knowledge data engineering vol 
july space guarantee definite answer query bounded number network hops typically order logn 
depending choice data location scheme implementation trust model may somewhat different 
different schemes may affect overhead trust data management affect effectiveness trust metric 
prototype peertrust grid primarily obtained grid source code 
trust data peer feedback receives transaction stored designated peers located hashing unique id peer data key 
piece feedback includes information id peer data key timestamp counter transaction feedback transaction id peer provides feedback applicable transaction contexts 
peer responsible multiple keys maintains routing table keys 
peer receives search update request data key responsible forwards request routing table 
storage cost peer proportional degree replication amount history store 
fig 
shows simple example peertrust network peers constructed grid 
data location scheme trust issue associated peers may misbehave providing false data random data responding search request 
majority voting encryption address issue 
data locator configured multiple replicas responsible key 
peer searching trust data peer finds replicas responsible key combines data majority voting scheme 
alternative incorporate encryption techniques enhance security data location scheme peers tamper data routing path see section detail 
trust computation trust evaluation component responsible computing trust measure reputation data collected peer 
propose strategies implementing basic trust metrics peer trust tvm peertrust psm 
called dynamic trust computation dtc uses fresh trust data collected runtime compute trust value 
called approximate trust computation atc uses cache speed trust computation process 
refer dynamic approximate implementations peertrust tvm tvm dtc tvm atc implementations peertrust psm psm dtc psm atc respectively 
explain implemented 
dynamic computation peertrust tvm tvm dtc 
recall peertrust tvm metric defined clear metric defines recursive function uses trust value peer feedback credibility measure 
peer needs recursively compute peers trust values credibility factor order compute peer trust value 
implement dynamic computation iterative style 
column vector trust values peers size community algorithm simply start default trust value vector 
peer obtains feedback peer time window denoted win repeatedly computes trust vector converges 
done trust values peers network available 
sketch algorithm algorithm 
algorithm tvm dtc input output win repeat compute ijj approximate computation peertrust tvm tvm atc 
obvious dynamic computation expensive peer needs retrieve trust data peers network interested evaluating trustworthiness particular peer small subset peers 
approximate computation provides cost effective algorithm trust cache peer 
peer maintains trust cache denoted keeps trust values peers interacted past 
peer needs compute trust value peer find value cache 
computing trust value peer dynamically computing trust value peers filed feedback credibility factor peer looks trust values cache 
uses cache value case cache hit simply uses default value cache eliminates recursive iterative computation 
peer computes trust value adds value cache 
sketch tvm atc algorithm provided algorithm 
algorithm tvm atc input output win length feedback source null cr cr compute dynamic computation peertrust psm psm dtc 
consider peertrust psm metric defined uses personalized similarity measure credibility weight feedback peers 
peer needs evaluate trustworthiness peer peer needs compute personalized feedback similarity peer 
needs retrieve xiong liu peertrust supporting reputation trust peer peer electronic communities feedback peer feedback peers transactions peer algorithms implement peertrust psm metric peer keep local copy latest feedback addition feedback peers responsible storage cost slightly expensive peertrust tvm implementations 
psm computation straightforward data collected demand 
algorithm proceeds algorithm 
algorithm psm atc executed peer input output feedback win length feedback feedback source feedback win cr compute approximate computation peertrust psm psm atc 
similar tvm atc peertrust psm atc provides cost effective implementation psm metric 
main difference psm dtc psm atc credibility value collected dynamically fly credibility cache 
psm atc peer maintains trust value cache credibility cache keep trust values credibility values peer computed past respectively 
case trust cache peer retrieves feedback peer looks credibility value peers provided feedback peer credibility cache computes credibility value case adds credibility value credibility cache computes trust value adds trust value trust cache 
algorithm gives sketch psm atc implementation 
algorithm psm atc executed peer input output feedback win length feedback feedback source feedback null cr win cr cr compute note extra storage cost needed atc implementations caching trust values credibility values negligible caches single value peer 
assuming caching trust value peer takes unit storage say byte extra caching cost order cache trust values peers network bytes 
peer able cache hold trust credibility values peers network cases 
lru cache replacement policy evict data items cache cache full 
cache refreshed periodically values reflect latest behavior peers 
straightforward scheme refresh value certain number transactions sophisticated scheme 
dealing dynamic personality peers trust model discussed far uses transactions feedback compute trust value peer 
justification peer reputation cumulative average lifetime ratings peer established solid reputation incremental ratings play little role changing reputation peer diminishing incentives behave honestly 
older ratings discounted peer behavior matters peer continuing incentives behave honestly 
realistic malicious peers may adaptively decide strategy order maximize expected payoff rules game 
number ways peers attempt fool system obtain higher payoffs 
example build reputation start cheating occasionally rate gives higher payoff allows maintain acceptable reputation 
oscillate periods building reputation 
address potential dynamic behaviors peers propose simple adaptive time window algorithm better react behaviors 
basic idea adaptively smaller time window reflect peer behavior peer dropping performance threshold 
concretely peer computing trust value peer collects feedback time window win computes trust value basic trust computation algorithms tvm dtc tvm atc psm dtc psm atc 
addition computes trust value ts subset feedback taken time window wins smaller win 
second value ts returned final trust value smaller value certain threshold indicates peer dropping performance 
value returned 
sketch adaptive time window computation method algorithm 
choosing proper regular time window adaptive window method reputation peer hard build easy drop reputation quickly increased small number transactions quickly drop peer starts cheating 
note adaptive algorithms built top basic algorithms dishonest feedback handled respective basic algorithms 
regarding computation cost additional cost compute second trust value ts run condition test determine ifthe adaptive trust value applied minimal subset trust data credibility values retrieved computed computation value 
rest refer basic algorithms peertrust basic ieee transactions knowledge data engineering vol 
july adaptive time window implementation basic algorithms peertrust adaptive 
algorithm input output feedback win compute trust value feedback ts compute trust value subset taken wins ts ts secure processing transmission trust data number known security threats due communication recall section 
discuss section guarantee secrecy integrity trust data obtained peers accountability peers providing trust data 
unauthorized manipulation data happen storage transmission 
layers techniques pki scheme data replication increase security reliability trust data management 
layer pki scheme 
require peer public private key pair 
peer id digest public key obtained secure hash function public key 
feedback submission peer submits feedback peer signed private key sk public key pk 
fact piece feedback signed feedback source private key guarantees integrity feedback authenticity feedback origin 
peers may tamper data stored local database provide false random data processing search request peers able detect data corrupted verifying signature discard data corrupted 
peer wishes evaluate trustworthiness peer issues search request peer trust data including request public key pk 
peer responsible data encrypts response public key pk signs private key sends signed encrypted response public key polling peer 
receiving response peer verifies signature received public key decrypts message private key sk 
verifies signature piece feedback public key feedback source 
fact data encrypted public key polling peer protects confidentiality 
fact data signed responding peer private key allows detection integrity violations data authenticity origin 
note peers able selectively discard data routing content encrypted polling peer public key visible 
scheme peers cause data loss corrupting data selectively discard data stored local database 
combat data loss caused issues routing anomaly data replication second layer improve data availability reliability 
secure trust computation algorithm proceeds algorithm 
algorithm executed peer input output response pk win verify signature response attached public key decrypt data private key sk length feedback verify signature feedback tj metric computation median tj trust peer selection scheme key objective trust peer selection scheme select peer subset peers qualified perform job terms reputation trustworthiness 
trust value produced trust metric gives reputation trust measure 
help peers form trust belief action peers compare trustworthiness set peers 
higher value indicates peer trustworthy terms collective evaluation peers transactions community context factors 
usages trust value communities 
peer derive trust relationship peer determine perform transaction determining pricing negotiation strategies peer decision rule needed derive trust relationship trust value situation 
peer consider degree value associated confidence value trust specific situation 
simple rule peer form trust action peer threshold trust value peer trust peer 
factors determine threshold include peer willing trust manifest dispositional trust extent entity consistent tendency trust broad spectrum situations entities 
factors include context potential transaction 
example expensive transaction may require higher threshold 
complex decision rules applied focus 
interested readers may refer number models derive trust relationship different parameters commerce environment 
second usage compare trustworthiness list peers 
example file sharing community gnutella peer issues file download request choose set potential peers respond request connection speed compare trustworthiness potential peers trust value choose peer highest trust value download file 
doing reduces risk downloading inauthentic corrupted files untrustworthy peers 
xiong liu peertrust supporting reputation trust peer peer electronic communities experimental evaluation performed initial experiments evaluate peertrust approach show feasibility effectiveness benefits 
evaluates effectiveness peertrust terms computation error malicious behaviors peers settings 
second demonstrates benefit peertrust peer selection scheme settings 
third evaluates effectiveness peertrust adaptive algorithm dynamic personality peers 
evaluate runtime overhead different implementation strategies peertrust approach 
simulation setup implemented simulator mathematica section describes general simulation setup including community setting peer behavior pattern trust computation 
community setting behavior patterns 
initial simulated community consists peers 
experiment varying show scalability peertrust approach set 
ran experiments different number peers show effect effectiveness trust computation 
game theory research reputation introduced types players 
commitment type long run player cooperate cooperation action maximizes player lifetime payoffs player commit action entire duration 
contrast strategic type corresponds opportunistic player cheats advantageous 
split peers types simulation peers strategic malicious peers 
percentage malicious peers denoted experiment varying show effect set percent 
behavior pattern peers cooperate transactions provide honest feedback 
challenging task model peers malicious behavior realistically start malicious behavior patterns study robustness peertrust approach setting collusive setting 
setting malicious peers cheat transactions give dishonest ratings peers give bad rating peer cooperates give rating peer cheats 
malicious peer may choose occasionally table simulation parameters cooperate order confuse peers fool system 
model rate malicious peer acts malicious 
experiment varying show effect trust computation effectiveness set percent 
collusive setting malicious peers act similarly addition form collusive group deterministically help performing numerous fake transactions give ratings 
transaction settings simulated random setting trusted setting 
random setting peers randomly perform transactions 
trusted setting peers initiate transactions issuing transaction request 
request certain percentage peers respond 
response percentage denoted res set percent experiments 
initiating peer uses trust peer selection algorithm select peer highest trust value perform transaction 
trust computation 
binary feedback system peer rates peer transaction satisfactory 
number transactions peer latest time window win denoted set peers 
evaluate algorithms peertrust tvm dtc tvm atc psm dtc psm atc described algorithms respectively 
atc algorithms number cache units assuming storing trust value peer takes unit denoted set 
evaluate peertrust adaptive algorithm described algorithm 
number transactions peer smaller time window wins denoted set 
grid data location scheme store retrieve feedback data peers 
degree replication denoted set experiments 
comparison purpose compare peertrust approaches conventional approach referred conventional average ratings measure trustworthiness peer account credibility factor 
experiment results averaged runs experiments 
table summarizes main parameters related community setting trust computation 
default values experiments listed 
ieee transactions knowledge data engineering vol 
july fig 

trust computation error respect percentage malicious peers 
setting 
collusive setting 
fig 

trust computation error respect malicious rate malicious peers 
setting 
collusive setting 
effectiveness malicious behaviors peers objective set experiments evaluate effectiveness robustness trust model different malicious behaviors peers 
experiments start peers perform random transactions 
transactions community average transactions peer peer selected evaluate trustworthiness peers 
experiment performed collusive settings described earlier 
compute trust computation error root mean square rms computed trust value peers actual likelihood peers performing satisfactory transaction peers malicious peers 
lower rms indicates better performance 
experiment vary percentage malicious peers set malicious rate 
fig 
represents trust computation error different peertrust algorithms conventional approach respect settings 
consider setting fig 

number interesting observations 
see performance conventional approach drops linearly increases 
account credibility feedback source sensitive malicious peers provide dishonest feedback 
second peer trust tvm dtc tvm atc stay effective percent 
trust values peers recursively weight feedback able filter dishonest feedback correct trust computations 
error percent greater percent indicates completely wrong evaluations peers untrustworthy malicious peers trustworthy 
particularly interesting shows malicious peers able fool system overriding honest feedback provided peers majority 
see performance tvm atc tvm dtc reasonably close 
peertrust psm dtc psm atc stay effective large percentage malicious peers 
confirms personalized similarity credibility acts effective measure filter dishonest feedback 
note psm dtc psm atc give result system stable 
collusive setting fig 
interesting observations conventional approach peertrust tvm approach extremely sensitive collusive attempts provide feedback number malicious peers small 
hand peertrust psm approach expected acts effective defense collusion filtering dishonest feedback collusive group 
second experiment vary malicious rate set percentage malicious peers percent 
fig 
represents trust computation error different peertrust algorithms conventional approach respect settings 
xiong liu peertrust supporting reputation trust peer peer electronic communities fig 

benefit trust peer selection scheme 
setting 
collusive setting 
number interesting observations settings 
setting fig 
performance conventional approach drops increases 
second peertrust tvm psm approaches slightly dropped performance malicious rate percent 
indicates peers able confuse system little occasionally cooperate gives honest feedback 
collusive setting fig 
shows similar results larger extent 
benefit trust peer selection set experiments demonstrates benefit peertrust peer selection scheme peers compare trustworthiness peers choose peer highest trust value interact 
transaction considered successful participating peers cooperate 
define successful transaction rate ratio number successful transactions total number transactions community certain time 
community higher transaction success rate higher productivity stronger level security 
experiment proceeds repeatedly having randomly selected peers initiating transactions 
community trust mechanism source peer selects peer highest trust value perform transaction 
randomly selects peer 
peers perform transaction transaction succeeds selected peer cooperates 
experiment performed setting collusive setting 
show benefit peertrust approach conventional approach compared community trust scheme 
fig 
shows transaction success rate regard number transactions community settings 
graph presents number interesting observations 
setting fig 
see obvious gain transaction success rate communities equipped trust mechanism 
confirms supporting trust important feature community peers able avoid untrustworthy peers 
second different trust mechanisms different effectiveness 
shows similar comparison previous experiment 
worth noting conventional approach achieves transaction success rate close percent trust computation error higher shown fig 

computed trust values reflect accurately likelihood peers cooperative differentiate peers bad peers cases relative ranking 
collusive setting fig 
see transaction success rate conventional peertrust tvm approach 
indicates malicious peers able completely fool trust schemes collusion render system useless worse system trust scheme 
system benefits peertrust psm approach significantly shows robustness collusion 
effectiveness dynamic personality peers far considered peers fixed personality settings 
goal experiment show peertrust adaptive algorithm works strategic dynamic personality peers 
showed effectiveness peertrust basic algorithms malicious behaviors peers providing dishonest feedback focus changing behaviors peers simulating dishonest feedback experiment 
simulated community peers malicious peer dynamic personality 
simulated changing patterns 
peer builds reputation starts 
second peer trying improve reputation 
third peer oscillates building reputation 
experiment proceeds peers randomly perform transactions peer selected compute trust value malicious peer periodically 
compare peertrust adaptive algorithm algorithm uses adaptive time window peertrust basic approach uses fixed time window 
fig 
shows computed trust value peer peertrust adaptive metric peertrust basic metric different changing patterns 
fig 
shows computed trust value peer reputation 
see time window metric discounts old feedback peers peertrust basic peertrust adaptive lead collapse reputation eventually 
peertrust basic peer able take ieee transactions knowledge data engineering vol 
july fig 

effectiveness dynamic personality reputation oscillation 
peer reputation 
peer building reputation 
peer oscillating reputation 
peer oscillating reputation 
advantage transition period cheating maintaining reasonable reputation completely collapses 
hand peertrust adaptive able correct trust value sooner depending small adaptive window fig 
shows computed trust value peer building reputation 
peer continuously perform services period time achieve reputation bad approaches 
figs 
show computed trust value peer oscillating building reputation different frequency 
peertrust basic peer gains reputation pay amount cost build back 
peertrust adaptive peer quickly detected bad behavior simply increase trust value quickly acting short period cost rebuilding reputation higher gain 
trust evaluation cost objective experiment understand runtime overhead different peertrust metrics implementation strategies scales 
runtime overhead mainly comes cost retrieving required information trust evaluation 
proportional factors number lookups cost lookup 
number lookups varies different trust metrics implementation strategies 
cost lookup determined underlying dht scheme 
lookup cost dht scheme usually represented number network hops number messages required routing process number network hops trust computation metric runtime cost compare cost different peertrust metrics implementation strategies 
compare cost peertrust algorithms respect number peers 
fig 
represents cost respect number peers community 
note graph uses log log scale 
analyze result detail 
atc approaches peertrust tvm atc psm atc cost scales 
consider peer computing trust value peer algorithms peer needs retrieve feedback uses cached values credibility value 
feedback peer stored multiple designated peers dht structure peer issues multiple dht lookups get data replicas dht lookup takes lgn network hops 
cost order lgn 
second expected peertrust tvm dtc requires network hops computation scale 
third peertrust psm dtc requires higher lookup cost psm atc scales 
algorithm addition feedback peer peer needs retrieve feedback peers feedback peer order compute similarity credibility dynamically 
feedback peer stored locally peer peer issues direct lookup peer interacted peer specifically number transactions peer time window set difference cost psm dtc psm atc xiong liu peertrust supporting reputation trust peer peer electronic communities fig 

trust computation overhead 
trust computation scalability 
cost cache bootstrapping 
distinctive number peers interacted peer transaction close cases 
compared lookup cost tvm atc psm atc bootstrapping period trust cache credibility cache filled 
fig 
represents cost respect number trust computations performed 
see tvm atc extra bootstrapping cost uses default trust value credibility factor cache filled computes trust values peers 
contrary psm atc requires extra cost compute credibility trust evaluations fill credibility cache 
credibility cache filled cost tvm atc 
discussion section briefly discuss proposed approach addresses common problems current reputation systems security threats described section 
discuss risks threats prevented detected discuss set potential corrective preventive solutions recovery survival 
risks solved proposed approach 
peertrust reputation trust mechanism alleviating resolving security problems communities choosing reputable peers avoid untrustworthy peers 
example simplest version virus attack dos attack file sharing system adversary responds file request fake file name delivers virus bogus content flood disks 
reputation trust mechanism place peer receives malicious content able submit negative feedback malicious peer help peers avoid 
surprisingly reputation trust mechanism introduces vulnerabilities problems 
common attacks known shilling attacks adversaries attack system submitting fake misleading ratings confuse system 
shilling attack associated attack identity creates multiple pseudonyms boost ratings collusion peers group malicious peers collaborate raise rating peers 
peers amount attacks trust management system distributing tampered trust information 
peertrust tries minimize security weaknesses 
example credibility factor feedback source seen effective step handling fake misleading ratings reputation feedback 
ability incorporate various transaction community contexts act subtle attacks 
furthermore combining proposed trust metric secure trust data transmission built top mature public key cryptographic algorithms prevents distribution tampered trust information man middle attack 
identity established public key corresponds secret private key 
identity spoofed knowledge corresponding private key 
content properly signed integrity origin compromised 
risks require deeper investigation 
unfortunately far mechanism completely prevent attack peers compromised 
plan engage study attacks anonymous operations develop corrective preventive methods part trust building trust management research 
risk peers easily discard old identity adopt new reentry get rid bad history 
friedman resnick discuss classes approaches issue difficult change online identities structure community way exit reentry new identity unprofitable 
list 
proposed trust building techniques experiences peer consistently reliable perform unavoidable time attack 
proposed trust system utilizes adaptive time window hard impossible fully prevent possible time attacks 
related reputation trust research stands crossroads distinct research communities notably computer science economics sociology 
review general related reputation research commerce agent systems review number works reputation systems networks 
reputation trust management commerce 
dellarocas provides working survey research ieee transactions knowledge data engineering vol 
july game theory economics topic reputation 
mui give review summarizing existing works reputation diverse disciplines including distributed artificial intelligence economics evolutionary biology 
game theory research lays foundation online reputation systems research provides interesting insight complex behavioral dynamics 
game theoretic models assume stage game outcomes publicly observed 
online feedback mechanisms contrast rely private pair wise subjective ratings stage game outcomes 
introduces important considerations incentive providing feedback credibility truthfulness feedback 
number reputation systems mechanisms proposed online environments agent systems 
abdul rahman hailes proposed model supporting trust virtual communities direct experiences reputation 
introduced semantic distance ratings 
certain aspects model ad hoc trust degrees fixed weightings assigned feedback 
applied network flow techniques proposed generalized algorithm extracts reputation general class social networks 
ismail tran developed evaluated beta reputation system electronic markets distribution modeling reputation posterior probability sequence experiences 
things showed market limited duration infinite longevity transaction feedback provides best condition 
sierra proposed regret system showed social network analysis reputation system 
sen proposed word mouth reputation algorithm select service providers 
focus allowing querying agent select high performance service providers minimum probabilistic guarantee 
yu singh developed approach social reputation management model combines agents belief ratings combination schemes similar certainty factors 
reputation ratings propagated neighbors 
maes proposed approach approximation game theoretic models studied effects feedback mechanisms markets dynamic pricing simulation modeling 
proposals specifically attempted address issue quality feedback 
chen singh differentiate ratings reputation raters computed majority opinions rating 
adversaries submit dishonest feedback gain reputation rater method simply submitting large number feedback majority opinion 
dellarocas proposed mechanisms combat types cheating behavior submitting feedback 
basic idea detect filter exceptions certain scenarios cluster filtering techniques 
technique applied feedback reputation systems filter suspicious ratings aggregation 
miller proposes mechanism payments exchange feedback provides strict incentives agents tell truth 
provides approach problem feedback trustworthiness 
mechanism vulnerable collusion 
development effective mechanisms dealing collusive manipulations online reputations systems currently active area research 
reputation trust management systems 
research reputation trust management systems 
aberer despotovic proposing reputation management system systems 
trust metric simply summarizes complaints peer receives files sensitive skewed distribution community peers 
prep proposed protocol servants keep track information reputation peers share 
focus provide protocol complementing existing protocols demonstrated top gnutella 
formalized trust metric experimental results validating approach 
eigentrust proposed kamvar 
algorithm focuses gnutella file sharing network 
approach notion transitive trust addressed collusion problem assuming peers network 
algorithm showed promising results variety threat models argue peers may available cases general approach needed 
shortcoming approach implementation algorithm complex requires strong coordination synchronization peers 
differs number ways 
take coherent approach analyze trust problems communities identify important trust parameters addition feedback order effectively evaluate trustworthiness peers address various malicious behaviors community 
address problems dishonest feedback lack incentives building credibility factor context factors metric 
second emphasize implement solution network efficient secure manner detailed algorithms experimental evaluation approach distributed environment 
peertrust reputation trust supporting framework includes coherent adaptive trust model quantifying comparing trustworthiness peers transaction feedback system decentralized implementation model structured overlay network 
reported initial simulation experiments demonstrating feasibility effectiveness benefits approach 
research peertrust continues directions 
investigating different threat models online communities exploring mechanisms peertrust model robust malicious behaviors 
second working implementing peertrust distributed secure manner incorporating peertrust applications currently development georgia institute technology 
xiong liu peertrust supporting reputation trust peer peer electronic communities acknowledgments research supported partially national science foundation itr 
second author acknowledge partial support funded national science foundation ccr doe scidac defense advanced research projects agency ito 
authors karl aberer zoran despotovic source code grid 
guest editor reviewers detailed insightful comments 
preliminary version appeared proceedings ieee conference commerce cec 
gnutella www gnutella com 
www com 
cc gatech edu 
abdul rahman hailes supporting trust virtual communities proc 
rd ann 
hawaii int conf 
system sciences hicss 
aberer grid self organizing access structure information systems proc 
ninth int conf 
cooperative information systems 
aberer despotovic managing trust peer peer information system proc 
acm conf 
information knowledge management cikm 
building trust commerce ieee internet computing vol 

chen singh computing reputations internet ratings proc 
third acm conf 
electronic commerce 
damiani di vimercati paraboschi samarati choosing reputable network proc 
th int world wide web conf 
dellarocas online reputation reporting systems unfair ratings discriminatory behavior proc 
second acm conf 
electronic commerce 
dellarocas analyzing economic efficiency ebay online reputation reporting mechanisms proc 
third acm conf 
electronic commerce 
dellarocas digitization word mouth promise challenges online reputation mechanism management science vol 

friedman resnick social cost cheap pseudonyms economics management strategy vol 

holmstrom managerial incentive problems dynamic perspective rev economic studies vol 

huberman wu dynamics reputation 

ismail beta reputation system proc 
th bled conf 
electronic commerce 
tran simulating effect reputation systems markets proc 
int conf 
trust management 
kamvar garcia molina eigentrust algorithm reputation management networks proc 
th int world wide web conf 
ketchpel garcia molina making trust explicit distributed commerce transactions proc 
th int conf 
distributed computing systems 
kreps wilson reputation imperfect information economic theory vol 

malaga web reputation management systems problems suggested solutions electronic commerce research vol 

commerce trust metrics models ieee internet computing vol 

mcknight meanings trust technical report wp univ minnesota management information systems research center 
miller resnick zeckhauser eliciting honest feedback electronic markets working series rwp 
mui notions reputation multi agent systems review proc 
int joint conf 
autonomous agents multiagent systems 
delgado extracting reputation multi agent systems means social network topology proc 
int joint conf 
autonomous agents multiagent systems 
ratnasamy francis handley karp shenker scalable content addressable network proc 
acm sigcomm 
resnick zeckhauser friedman kuwabara reputation systems comm 
acm vol 

rowstron druschel pastry scalable decentralized object location routing large scale peer peer systems middleware 
sierra reputation social network analysis multi agent systems proc 
int joint conf 
autonomous agents multiagent systems 
sen robustness reputation trust boolean case proc 
int joint conf 
autonomous agents multiagent systems 
stoica morris karger kaashoek balakrishnan chord scalable peer peer lookup service internet applications proc 
acm sigcomm 
xiong liu reputation trust model peer peer ecommerce communities proc 
ieee conf 
commerce cec 
peer peer transactions agent mediated electronic commerce master thesis massachusetts inst 
technology 
yu singh social mechanism reputation management electronic communities proc 
seventh int conf 
cooperative information agents 
maes trust management reputation mechanisms applied artificial intelligence vol 

li xiong phd candidate college computing georgia institute technology 
research interests internet data management distributed computing internet security 
previously received bs ms degrees computer science university science technology china johns hopkins university respectively worked software engineer years companies including internet security systems 
ling liu currently associate professor college computing georgia institute technology 
research involves experimental theoretical study distributed systems general distributed data intensive systems particular including distributed middleware systems advanced internet systems internet data management 
current research interests include performance scalability reliability security internet services pervasive computing applications mobile wireless services 
research group produced number software systems open sources directly accessible online including 
dr liu published articles international journals conferences 
currently editorial board international journal large database systems international journal web services research international journal grid utility computing editor chief acm sigmod record vice pc chair ieee international conference data engineering icde pc chair ieee international conference web services 
pc international conference knowledge information management cikm pc international conference ontology databases applications semantics large scale information systems odbase 
current research partially funded national science foundation defense advanced research projects agency department energy ibm 
member ieee computer society 
