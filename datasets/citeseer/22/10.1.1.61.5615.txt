layered model user context management controlled aging imperfection handling andreas schmidt fzi research center information technologies karlsruhe germany andreas schmidt fzi de 
current research context awareness biased low level context information 
high level context information poses challenges context management systems traced back asynchronicity context acquisition inherent dynamics imperfection process 
presents layer model allowing dealing problems imperfection aging controlled way 
problem high level user context management information management problem specific requirements 
need high level context information increasing volume accessible information advent ubiquitous information access mobile wearable devices focus information systems research shifted increasing efficiency information access user 
encompasses simplifying query formulation process improving relevance query results 
general trade preciseness selectivity queries ease query formulation 
promising approach incorporate information user current situation context fundamental approach context aware situation aware systems :10.1.1.31.9786
interest context awareness mainly occurred area low level context information defined represents information user context directly sensed obtained aggregated sensor data relatively straight forward way concrete implementation may pose severe problems 
prominent examples location aware systems 
discovered consideration context key enabler generation information services broader scale 
example learning knowledge management systems require highlevel context information tasks business process steps information person currently time pressure time learn 
apart determining context influences information need user key problem systems keep user context information date includes acquisition management information time 
general indirect methods high level context information sources context information considered 
information derived user interaction specific applications pieces obtained data stored systems corporate environment human resources data workflow management systems personal information managers addresses calendar retrieved demand specialized operations localization wireless networks 
realized see complexity hidden context aware application establishing user context management middleware broker architecture provides applications date view user current context partially materializing partially retrieving dynamically sources :10.1.1.2.2060
challenges high level user context information management idea faces challenges adequately met existing information management solutions dynamics 
context user continuously changes 
different features context change different pace name occupation change frequently location current task 
additionally distinguish context evolution context switching 
case part context changes quite changes back store information 
typical examples private professional information context role specific context 
imperfection 
user context information typically collected indirect methods observe user behavior infer facts observations 
methods yield certain results case cases probable uncertainty 
additionally information determined exactly imprecision 
typical example location information 
depending method gsm gps precision information vary lot particularly important prominent examples contextaware services location services 
additional aspects imperfection area user context information incompleteness collect sources variety methods inconsistency 
overview remaining part context information architecture able deal challenges 
specific requirements posed highlevel context information respective management infrastructure briefly discussed 
basic layered context information architecture introduced deals problems aging imperfection 
section extension concept subcontexts introduced improves handling dynamic nature user context information 
section overview prototypical implementation project learning process 
specific requirements suitable context model context information architecture proposed focuses far neglected issue high level context information defined 
differs mainstream context awareness research poses special requirements context management infrastructure 
differences traced back main distinction asynchronicity 
contrast low level context information high level context information typically continuously monitored sensors determined demand instant time gps positioning 
due required complex abstraction process system collect advance information user persistent time 
materialized approach introduces problems ignored low level context settings aging 
obvious collected context valid indefinitely 
system gets know current task user information valid limited amount time 
consequence user context management system needs aging mechanism 
variability dynamic behavior 
closer inspection aging problem reveals aging uniform different aspects user context information 
information name birthdate changes infrequently aspects personal skills interests goals evolve time tasks location highly volatile 
aging support specific different parts context 
reasoning time 
methods derive user context information typically solely rely current user context history order detect patterns 
scalability 
want materialize user context information select methods scalable respect large numbers users long time frames 
layered context model general considerations current approaches context modelling applying context awareness learning similar domains emphasize potential applying semantic web technologies user context management :10.1.1.125.343:10.1.1.10.1509:10.1.1.5.9505:10.1.1.126.6276
enables creation semantically aware processing methods especially introducing shared vocabulary different tools systems applying reasoning techniques domain knowledge 
semantic web technologies quite way go solutions comparable terms scalability traditional information management solutions 
take account context model developed data model tradition relational object oriented databases core depend reasoning techniques integrated smoothly techniques domain specific schema requires 
second issue directly related architecture user context information management systems 
traditional database management systems proven effective divide management functionality different layers basically independent internal logic lower layers 
spirit want layer model allows structuring problem better way see external layer 
layer represents usage context particular application certain instant time 
context information schema application understands certain quality criteria minimum confidence guaranteed 
logical layer 
layer provides complete view context user specific instant time imperfection metadata allows determining reliability stored information 
internal layer 
internal layer stores collected information users time dependent way 
usage context context feature values context information base context facts view restricting user time instant fig 

layered context model external layer application specific context schemas view restricting certain features quality criteria logical layer global context schema internal layer analogy database systems describing logical layer corresponds relational data model explain internal layer internal layer maps logical layer explaining external layer corresponds concept views mapping layer realized 
logical model primary construct data model describe context user context feature corresponds attributes case relational object oriented data model properties case rdf conceptual data models owl 
context features described unique identifier uri value space cardinality constraints multi valued 
value space consist atomic data types numbers dates concept instance identifiers referencing elements ontology 
way inferencing value level possible reusing description logics reasoners ontology management systems 
order allow better reusing context information different applications model offers possibility define feature hierarchy feature inheritance directly corresponds property hierarchies rdf 
adds basic inferencing capability model applications requests value specific feature values sub features returned 
feature values tuples user feature value confidence level feature currently value user example andreas performs task literature search encodes user andreas currently performs tasks literature search probability determined monitoring usage web browser visited sites 
literature search concept ontology allows generalizing concept search 
operations supported layer queries specific context feature values user users having certain feature values update operations set delete feature values specific user internal layer contrast logical layer internal layer provide current view user context needs store history temporal concepts need considered 
internal layer primarily consists fact base called context information base context facts entries context fact valid user context feature value valid validity interval value point time added fact base 
probability point time feature value user additional schema level information internal layer aging functions attached context feature allow describing confidence certain value decreases time 
aging function basically function ime multiplied initial confidence value order obtain current confidence value 
aging functions assigned heuristically preferably empirical results 
example context information base contain andreas performs task literature search entry andreas performs task examine students 
operation layer powerful additionally exploit temporal perspective 
mapping internal layer logical layer order map internal layer logical layer issues need taken care restrict specific point time 
set context facts restricted context facts validity interval contains requested instant time 
apply aging functions 
help aging functions current confidence value needs calculated 
infer additional information 
context facts represent values explicitly added fact base provide feature hierarchy logical layer additional feature values need inferred 
resolve inconsistencies 
inconsistency occurs model multiple values feature cardinality constraints enforce single value 
different strategies resolve inconsistencies 
obvious take value highest confidence usually strategy needs take account facts reinforced facts independent methods determine feature value limited time window 
apply procedure example clear restriction specific instant time provides possible tasks 
applying aging function suppose literature search confidence examine students confidence 
lead resolution strategy take literature search current feature value specified performs task feature single valued 
external layer mapping logical layer external layer intended interface application providing applicationspecific view 
side consists application specific context schema side application specify certain quality level depends usage strategy 
quality level expressed minimum confidence level supplied user context information 
user context information rough indication user confidence matter applications involve legally binding transactions certainty values crucial 
order perform mapping logical layer issues need taken care apply quality criteria 
involves filtering available feature values supplied minimum confidence 
perform mapping 
step global context schema logical layer translated application specific schema 
case simple projections renamings done user context management system powerful mapping features external mapping services method choice spirit 
subcontext switching support concept subcontexts layered context model introduced far supports controlled forgetting outdated context information allows representing different levels certainty 
help problem slow adaptation changed context 
due phenomenon dependencies different features groups values change 
typical example different roles private role business role 
user currently private role wide range context information different payment preferences contact information order cope dependencies concept subcontexts introduced 
subcontexts basically groups feature values change characteristics subcontexts nested 
subcontexts conform schema defines available features nesting relationships 
subcontext schema sub context active certain instant time 
inactive parallel sub contexts yielding aspects user 
example subcontext structure 
user location dependent role project dependent information 
currently user john smith office broadband network access loud speakers influence system deliver video audio material 
system knows characteristics locations represented currently inactive sub contexts 
role specific information role project specific information 
case corporate learning information majority provided manually learning coordinator human resources department 
layer model concept subcontexts located internal layer 
heuristic strategies subcontext management possible cases reasonable user manually indicate current context limits concept subcontexts relatively coarse granularity frequent context switching 
ongoing research tries identify heuristic strategies automate handling 
crucial issues name john smith birthdate location office location home location travelling bandwidth mbit bandwidth kbit bandwidth kbit loud speakers loud speakers loud speakers role project project role inactive subcontext information subcontext belonging current context sample user context fig 

sample sub context structure formal semantics context model supported query capabilities update detection operations subcontext currently changes 
developed crucial part probabilistic research see parsons detect context temporal changes see precise extensions distinguish description context logics evolution description context logics switching 
foundation owl dl major parts semantic web automatic research 
construction approach subcontexts 
incorporating computable quite practical logic closed reasoning environment capabilities intranet context learning model 
solutions manual specification schemas subcontexts limits scope generic user context management service 
automatic methods sub context detection investigated 
promising approaches data mining approaches adapted architecture scarce amount available data uncertainty aspects 
second element architecture context middleware currently simple strategies implemented 
detection sub context supporting context aware applications 
conceptual architecture user changes strategy works pivot features serve semantic keys sub context management middleware components contexts 
features change rest feature value assumed change 
construction subcontexts method functional dependencies core context information management system consists feature borrowed schema normalization relational database schemas 
value store schema store sub context manager 
strategies comparable research 
traditional databases sub context manager encapsulates context specific behavior 
responsibility storing sub contexts implementation sub context schemas keeping set active sub contexts date recognizing patterns context changes allow build sub context management schema 
system sub model context manager consist implemented extensible set project strategies 
learning process aimed things supporting context sources new type learning process provide workplace metadata learning confidence context steered learning 
precision 
transmission having human user resource context development information experts assigning initiated courses employees context sources leaving employees sensor actively sources search ui event driven learning sources resources satisfying knowledge need lip system continuously monitors employee working activity context deduces help domain knowledge possible knowledge gap 
gap system recommend relevant learning resources need initiate learning processes 
context schema purpose incorporates personal characteristics competencies goals learning preferences interactivity level semantic density organizational aspects role organizational unit business process step task technical aspects user agent available bandwidth available multimedia equipment details context schema constructed see 
administration ui events aggregator context updates learner assistant context changes external layer logical layer strategies inconsistency handling internal layer strategies sub context management kaon postgresql context relevant recommendations matching service reasoning service user context management service fig 

overview prototypical implementation lip basis service matching current situation relevant learning resources user context management service provides view current context employee see 
order able easily implement feature inheritance smoothly moderately expressive ontologies encoding domain knowledge implementation internal layer ontology management system kaon 
kaon supports variation rdfs data model implemented relational databases support variation sql 
operations internal layer exposed specialized methods descriptive query language kaon query language 
project prototype specialized methods external applications 
queries logical layer expressed kaon query language mainly allows smoother interoperability rest system 
user context features mapped virtual properties rdfs data model 
queries rewritten queries lower layer 
inconsistency resolution done postprocessing results currently simple strategy place described 
prototype external layer thin require mapping services far 
consequence confidence cut 
context sources side event triggered update stable elements name role organizational units 
side administration desktop learning assistants monitoring interactions employee applications 
pilot installations applications observed internet explorer microsoft office excel word powerpoint microsoft visual studio 
user interface event aggregated translated context feature value changes 
order enable context triggered actions service supports notifications context changes 
notifications learner assistant determine invoke matching service retrieves relevant learning resources compiles personalized learning program context user background domain knowledge details see 
simple strategies inconsistency handling subcontext switching sufficient prototypes 
expected context sources connected sophisticated strategies required 
prototype provides basis experiments 
related plenty models dealing user context information traditional community user modeling emerged communities context awareness 
overview context modeling approaches gives :10.1.1.2.2060
general stated data management problem neglected area research 
consideration imperfection dynamics user context information relatively neglected area research especially case high level context information 
investigate quality criteria context information complementing quality service concepts 
define criteria precision confidence trust level context sources granularity 
introduce meta attributes precision certainty update update rate 
investigated role imperfection systematic way identified types imperfection unknown values contradictory values imprecise values incorrect values :10.1.1.60.274
feature values classified source persistence sensed static profiled derived 
causes imperfection analyzed classification 
outlook proposed solution integrates aspects imperfection dynamics context model structures provides layered structure similar traditional data management applications 
allows scalable solutions appropriate decoupling different management aspects 
addition offers different interfaces context aware applications different levels complexity 
dedicated context sources sophisticated context aware services access context management infrastructure primarily internal layer applications extend traditional functionality context aware features provide user limited interaction possibilities context information primarily access external layer 
logical layer added value services want deal temporal perspective inconsistent data 
research explore heuristic strategies inconsistency resolution subcontext switching simulations 
lead insights strategies suitable specific domains characteristics 

dey understanding context 
personal computing journal 
winograd architectures context 
human computer interaction 
schmidt user context aware delivery learning material approach architecture 
journal universal computer science 
schmidt bridging gap knowledge management learning contextaware corporate learning solutions 
althoff bergmann nick roth berghofer eds post conference proceedings rd conference professional knowledge management experiences visions wm springer 
abecker maus exploiting user process context knowledge management systems 
workshop user modelling context aware applications um 

strang context modeling survey 
workshop advanced context modelling reasoning management ubicomp sixth international conference ubiquitous computing nottingham england 

chen finin anupam semantic web context broker architecture 
percom 

schmidt management dynamic imperfect user context information 
meersman tari eds workshops 
volume lecture notes computer science springer 
wang gu zhang ontology context modeling reasoning owl 
ieee international conference pervasive computing communication percom orlando florida 
strang frank cool context ontology language enable contextual interoperability 
stefani eds lncs proceedings th ifip wg international conference distributed applications interoperable systems 
volume lecture notes computer science lncs paris france springer verlag 
nebel smith user profiling component aid user ontologies 
workshop learning teaching knowledge adaptivity karlsruhe 
heckmann specialized representation ubiquitous computing user modeling 
workshop user modeling ubiquitous computing um 

dolog nejdl challenges benefits semantic web user modelling 
ah workshop www 

schmidt xi integration web 
th workshop information technology systems wits barcelona spain 
schmidt context steered learning learning process approach 
ieee international conference advanced learning technologies finland ieee computer society 
maedche motik stojanovic studer volz infrastructure searching reusing evolving distributed ontologies 
proceedings www budapest hungary 

buchholz quality context need 
th international workshop hp university association geneva switzerland 

judd steenkiste providing contextual information ubiquitous computing applications 
st ieee conference pervasive computing communication percom fort worth 
henricksen indulska software engineering framework context aware pervasive computing 
percom ieee computer society 
