measurement commercial peer peer live video streaming peer peer technologies proved effective various bandwidth intensive large scale applications file transfer 
years tremendous interest academic environments live video streaming application 
number new commercial scale video streaming systems cropped 
systems differ type content provide attract large number users globe 
proprietary systems little known architecture behavior 
study kind analyze performance characteristics live streaming applications 
particular analyze popular systems class 
framework analyze applications single observable point analyze control traffic probable operation model analysis resource usage locality stability data distribution 
conclude live streaming greater impact network bandwidth utilization control file transfer applications 
peer peer systems employed wide variety distributed applications file sharing voip 
ubiquity resilience scalability provided systems ideal large scale distributed applications 
studies shown traffic internet constantly increasing 
past years great deal academic interest area video streaming applications 
lot interesting research done encouraging results reported 
systems available prototype implementations tested limited research environments 
deployment experience applications limited reported deployment scenario described 
new breed video streaming applications emerged 
commercial grade systems broadcasting compelling ali mathur hui zhang school computer science carnegie mellon university content capable attracting large audiences 
due type content provide systems gained tremendous popularity 
little understanding protocols behaviors applications 
systems due commercial nature specified openly available open source 
evaluate performance popular proprietary video streaming systems available 
systems asia significant user base north america 
systems broadcast popular asian american content attract large number users 
studying systems faced challenges stem commercial nature systems 
proprietary systems means source code available specification protocols available 
forced conduct studies treating systems black boxes 
challenge faced due fact documentation api enable development test scripts 
meant unable large number vantage points system point time 
applications manually started graphical user interface gui channels manually selected measurement performed locations physical access 
evaluate systems setup experiments give insight operation systems small number vantage points 
collected packet traces runs systems different environments analyzed data 
separated control traffic data traffic collected traces 
allowed analyze control traffic separately reverse engineer protocols get understanding systems 
overview systems operate analysis control traffic 
define generic framework evaluate data distribution performance systems 
purpose define metrics highlight key characteristics distribution plane 
evaluate systems framework formulated results 
ii 
protocol analysis systems analyzed proprietary little known underlying protocols 
systems peer peer technologies support thousands simultaneous clients 
proceed data analysis outline underlying protocols employed 
conducted simple experiments single host joining system tuning channel collected packet traces cases 
able separate control traffic actual data traffic packet traces 
inspected control packets visually classify different protocol messages 
able decode number protocol messages get better understanding protocols 
surprisingly systems analyzed showed remarkable similarity far control protocols concerned 
general overview protocols systems compare system described 
specific examples protocols analyzed 
experiment setup analyze applications collect packet traces systems 
sense large amount traffic data collected defined certain terms parents children 
came concepts distance metrics cost download better understand behaviors applications 
section describe collected data define terms concepts sections 
data collection test machines intel pentium computers running windows xp operation systems 
choice machines physical access restriction 
collected packet traces experiments ethereal 
traces include bytes packet including data allow analyze control packets 
types machines collected traces listed 
name isp bandwidth nat cmu cmu pittsburgh lan cmu pittsburgh lan full cone pittsburgh cable symmetric pittsburgh dsl chicago cable full cone dull cable full cone length runs varies different experiments performed 
experiments run hour durations 
experiments gather control connectivity information run shorter periods time 
analysis done snapshots data collected traces 
collected data sources oct dec 
protocol overview systems analyzed similar approach operation 
key components systems 
software update systems analyzed automatic software version checking software update capabilities 
client start contacts webserver get latest version software 
newer version available system directed download version install automatically 
know little software version update abilities system 
channel lists system requires get list channels available client tune 
modes client get list available channels 
webserver listing channels available provided 
clicking link channel user interested client application start 
second method starting application turn gets channel list 
user click channel tune 
bootstrap source video stream described known location clients initially go source join channel 
applications analyzed webserver get initialization information 
communication central webserver done ascii strings 
webserver component webserver maintains bootstrapping information channel passed clients joining channel 
maintaining peers channel selection sent central server list possible neighbors peers sent client 
list usually order hosts client attempts connect hosts 
course session client keeps getting regular updates neighbors existing neighbors 
client re broadcasts current neighbor list neighbors 
mechanism similar gossip protocol keep updated list peers 
requesting data client joins session exchanges control messages peers gossip protocol 
able completely decode messages exchanged know specific information neighbor exchanged referred neighbor record 
record includes connectivity information possibly buffer map similar 
client requests segments data peers 
size segments scheduling algorithm request clear analysis 
separating data control traffic step analysis data plane involves separation control data traffic 
control traffic create noise analysis data plane needs identified eliminated 
packet size simple mechanism separate control data traffic 
graph shows packet size distribution 
cases packets byte packets 
packets pure acknowledgments data packets sent received 
packets greater kbytes largest size packets bytes approximately maximum transmission unit mtu ip packets ethernet networks 
packets ranges conclude control packets 
total amount bandwidth control packets order total bandwidth 
low frequency control packets shown small numbers concluded pair hosts exchange kbps worth data data flow 
metric define parent child relationships described section iii 
specific protocol description section results protocol analysis specifically 
mentioned earlier results similar difference mentioned 
software update application attempts check software version central server 
done request sent centralized server 
number clients startup time quite possible load centralized web server extremely large pose concern scalability 
application startup opens tcp connection port central server update com sends request get update update inf 
believe file exists assumes update available 
gets response continues startup process current software version 
channel list application gets list channels centralized server 
list channels information connect channels including identifiers trackers flash crowd point system large number clients join time 
application opens second tcp connection port central server list com sends request get web xml xml 
xml file containing list available channels 
list retrieved initial startup time written client hard disk channel xml 
format file shown 
root channel aae bc ab bc cb author author www com tracker 
source aae bc amp type udp amp amp amp tracker bitrate bitrate catalog catalog channel channel 
channel 
root channels identified byte identifier name 
object points host tracker running 
tracker initial point clients connecting channel go get list neighbors 
ability tracker communicate udp tcp stated object port number tracker 
bootstrap mechanism application information tracker channel channel list downloaded earlier 
soon user selects channel client sends udp tcp depending tracker information request tracker channel 
reply tracker message contains list initial hosts need contacted 
list returned contains hosts depending size group 
header fa host da ad host 
da bf ef host header contains number hosts message 
host represented structure ip address bytes host fa udp port bytes xa tcp port bytes 
tuning channel initial list hosts retrieved system tries connect hosts get data 
system gets updates hosts keeps increasing list hosts knows 
observed initial list contained addresses private 
concern hosts part group connect nat 
trace system sent udp message hosts initial list 
message contains channel id channel user selected 
hosts message sent private addresses able reply 
probably bug software 
private addresses easily pruned system clients don try connecting 
system received udp replies remaining hosts 
fig 

cdf packet sizes messages received different sizes format 
header ae dd db number hosts host 
cb ba ad host messages contain host information similar information reported tracker 
means hosts reporting back neighbors 
typical gossip protocol 
system tries open tcp connections hosts private addresses earlier sent udp messages 
hosts reply tcp connection setup exchange information earlier exchanged udp 
communication mechanism moved udp tcp 
point onwards udp communication host 
iii 
methodology analyze data collected defined key objects relationships 
know run experiment yielded hundreds host addresses identified key hosts 
defined metrics compare relationships different runs experiments 
definitions classify objects relationships highlight key metrics interest 
flow define flow exchange tcp udp packets monitored host host 
flow monitored host host represented tuple ipa pa ipx px pa tcp port host px tcp port host flow directionality flows ipa pa ipx px ipx px ipa pa treated separate flows 
rate flow rate flow amount data bytes flow comprised particular duration time 
notation flow assume ipa pa ipx px flow hosts size packet part flow represented pl timestamp packet recorded 
rate flow time represented pl results seconds bandwidth calculated non overlapping intervals second 
duration flow duration flow defined time packet flow packet seen flow 
note includes cases flow stops period time starts 
parent child relationships term defines key relationship observed hosts 
rate flows represented summation observed host classified parent host time rp rp kbps experiments 
choose limit hosts send amount data exchanging control information data 
similarly observed host child host time rc rc kbps experiments 
notion host thesis refers ip address host 
describe host ip address ipa 
distance analyzed locality resulting distribution tree estimates distances hosts 
database subnets longitude latitude calculate cartesian distance pair hosts 
distances calculated performing longest prefix match ip addresses subnets database 
cases prefixes match distance value calculations 
results observe hosts match geographical database 
latitude longitude information available host compute cartesian distance coordinates 
host ordinates host ordinates distance miles represented constant distance degree equal approximately miles 
cost define cost metric analyze distance property mentioned earlier 
cost metric associated download measured miles byte 
analyze efficient downloads different cases terms proximity parents 
calculate cost simple weighted average distance parents measured host 
bp total number bytes received parent dp distance host parent cost download host represented dp bp bp similar metric describe cost data sent children 
stability distribution strategies making tree distributing unit data need characterize stability resulting distribution tree 
define stability distribution structure terms frequency changing parents host 
slightly different notions change regard 
define period look parents start time 
compare parents observe 
set parents time tn equal pn 
cardinality pn represented pn 
definition stability host time tn sn pn pn pn definition stability looks rate change parents 
sn structure stable 
metric stability defined take account differences set parents 
set equal pn pn pn pn represent elements pn pn 
refers parents newly acquired 
similarly set ln equal pn pn pn pn represent parents left 
stability represented xn pn pn ln definitions analysis 
iv 
data plane section data plane analysis application 
applications analyzed exhibited similar data plane structures 
network resource usage resource terms network bandwidth important metric analysing applications 
network environments sensitive network bandwidth utilization administrators want level control bandwidth utilized member organization 
unlimited download upload usage prohibited controlled internet environments 
major reason bit torrent concept fairness amount data uploaded host amount data downloaded 
reduces risk network upload capacity paying 
authors claim isp need included model data exchanged isp controlled 
analysed network bandwidth utilization applications various environments 
scenarios interest analysis high bandwidth low bandwidth client 
types clients nat 
high bandwidth node nat showed results similar low bandwidth node 
concluded earlier nat handling inadequate application high capacity node considered bad point view application nat attached 
shows graphs sent received bandwidth cmu runs app 
cmu instances cmu fig 

send receive rates high capacity nodes bandwidth sent node nodes range mbps 
bandwidth received node kbps approximately rate video stream played 
thing obvious graph fairness ratio bandwidth sent bandwidth received 
policy control bandwidth uploaded particular host 
verify conducted ran multiple cmu clients simultaneously see total bandwidth uploaded cmu controlled 
results seen indicate policy bound exists bandwidth uploaded cmu high mbps 
similar graphs plotted cmu run app shows ratio bandwidth sent bandwidth received 
ratio results look similar low capacity node 
case ran separate clients simultaneously cmu fig 

send receive rates app points rudimentary handling nat application 
node nat upload capacity 
measure resource usage number children supported node function time 
shown high capacity low capacity node 
number parents cases 
node parent observations parent get data 
see cases number parents 
probably group dynamics parents leaving channel cause disruption children parents sending data 
scenario looking new parent establishing connection parent take valuable time defined section iii cmu dull fig 

number peers adverse effect performance observed client 
number children supported types nodes different 
high capacity node supports children low capacity node supports children 
points built unfairness system 
see bandwidth received sent cmu 
parents send kbps data parents host 
number children higher sent kbps 
interesting observation analysis structure data plane 
observe number hosts communicated greater number parents children 
appears delivery video stream done unstructured data plane connectivity maintained randomness 
known done probability parents children fig 

bandwidth peers high capacity node connectivity random graph increases outdegree node increases 
plots cumulative fraction peers client received data versus total number bytes received 
plots graph time peers data sent versus total number bytes sent 
figures show host example cmu communicated large number hosts actual parent child relationships established low 
hosts communicated parents children 
large number communication links established point random structure root source broadcast hosts try keep connected root large number links 
locality peers mentioned section iv data plane appears constructed randomly 
possible analyze entire structure limited visibility parents children fig 

fraction parent child relationships high capacity node data plane structure 
tried analyze levels structure available measurement 
includes parents children host 
shows visibility entire structure 
limited visibility entire data plane structure able analysis relationship levels 
concepts distance cost introduced section iii analysis 
analyze cost data received high capacity low capacity node 
shows cost download cases 
plots average cost download byte versus time cmu run 
see cost downloading data miles byte 
approximately distance pacific ocean 
visual investigation parents clear parents fig 

visibility data plane hosts asia similar run 
case cost download miles spikes miles 
investigation parents parents host hosts america miles times prominent parents asia miles 
explain difference parent selection host assume certain properties system 
believe system chooses parents solely performance 
high capacity host favorable environment gets performance connects parents asia 
stays parents change closer local parents 
hand low capacity node bandwidth restricted environment going isp strict contracts bandwidth isp host get performance parents asia choose parents closer 
closer parents isp host provide better performance 
look high capacity node children see cost distribution 
shows cost uploading data children host cmu 
average cost miles graph clearly shows distribution children looks 
graph cdf child distances cmu host 
clear graph children asia miles europe 
set results interesting points inefficiency systems 
data sent asia mainly china japan cmu fig 

cost download host sent back hosts asia 
fact hypothesis random structure account locality making decisions selecting parents particular client 
stability data plane concluded data plane structure applications random selection criteria parent child relationship performance received 
analyze stability random structure looking changes structure time 
analysis account group dynamics necessitate change structure 
accurate measure group dynamics measurements performed 
believe results interesting shed light data plane 
stability data plane assessed metrics defined section iii 
plots variable sn versus time 
recall sn metric defined section iii measures average cdf fig 

cost upload high capacity node rate changes parents time 
graph shows instability parents run average changed parents intervals 
means average parents different interval 
graph shows stability xn variable 
graphs point high rate change parents 
discounted group dynamics believe variation explain group dynamics fact variation due random nature data plane 
summary results part analysis identified major shortcomings challenges applications class face 
sn xn fig 

percentage parents changed inefficient distribution data analysis control data planes conclude planning ordination involved decision making 
lot important decisions pick parent follow randomized greedy algorithm 
inefficiency highlighted analysis locality upload download high capacity nodes 
noted earlier test nodes north america download data hosts asia upload large amounts data back hosts asia 
unfairness richly connected high capacity nodes pay price inefficiency system 
analysis node supported children 
clearly system depends entirely availability nodes 
nat handling seen applications handle nat effectively 
host nat receive traffic unable send data hosts 
systems need implement nat identification traversal known protocols turn deal connectivity restrictions 
transport protocol systems analyzed ubiquitous mechanism join network 
communication follows tcp udp sparingly 
data transfers occur small chunks delay properties tcp small amounts data ideal real time applications 
see clients setup tcp connections receiving data connections 
overhead associated setting multiple tcp connections single host issue large networks 
security seen analysis control protocols encrypted 
lead malicious attacks key components system ineffective 
messages sent udp tcp plain text interfere normal operation system 
vi 
related significant amount research conducted assessing viability peer peer live video streaming encouraging results reported 
systems tested research environments deployment experience applications limited 
aware study conducted simultaneously measures proprietary video broadcast systems 
due limitation space give brief overview system discuss performance respect relatively metrics 
results experiments ones reported 
provides comprehensive analysis 
example analysing rate change peers able quantify stability system 
addition analysis locality detailed 
calculate cost download upload terms distance byte gives better idea inefficiency system 
provide thorough description control protocol system 
vii 
study attempts measure commercial scale video broadcast applications peer peer technology 
applications different commercial content attract large numbers users 
gained valuable insight working applications analyzing control traffic different scenarios 
helped identify key system components applications class 
furthermore methodology formulated study data planes applications single point observation 
metrics resource usage locality download stability distribution structure defined study applications space 
study applications note greedy algorithms locality independence underlying model leads high resource usage key network boundaries 
lack tit tat fairness applications lead uneven distribution bandwidth upload 
observe systems difficult implement fair bandwidth restrictions key component successful application 
data distribution structure built randomly consideration bandwidth 
restrictions placed building data distribution structure instability observed resulting structure challenging implement convergence data plane 
systems prove possibility peer peer random distribution structures live video streaming 
key questions network usage locality download stability distribution structure remain answered 
banerjee bhattacharjee 
scalable application layer multicast 
proceedings acm sigcomm august 
bit torrent 
www bittorrent com 
castro druschel kermarrec nandi rowstron singh 
splitstream high bandwidth content distribution cooperative environments 
proceedings sosp 
chawathe 
scattercast architecture internet broadcast distribution infrastructure service 
fall 
ph thesis 
chu rao zhang 
case system multicast 
proceedings acm sigmetrics june 

chu eugene rao sripanidkulchai zhan zhang 
early experience broadcast system overlay multicast 
usenix annual conference june 
albrecht rodriguez vahdat 
bullet high bandwidth data dissemination overlay mesh 
proceedings sosp 
erdos renyi 
random graphs 
publ 
math 

erdos renyi 
evolution random graphs 

tud 
akad 
mat 

int 
zl 
ethereal 
www ethereal org 
francis 
yoid internet distribution www aciri org yoid 
april 
jannotti gifford johnson kaashoek toole jr overcast reliable multicasting overlay network 
proceedings fourth symposium operating system design implementation osdi october 
karagiannis brownlee claffy faloutsos 
dying just hiding 
proceedings globecom november 
karagiannis claffy faloutsos 
transport layer identification traffic 
international measurement conference october 
karagiannis rodriguez 
internet service providers fear peer assisted content distribution 
proceedings imc pages october 

application layer multicast delaunay triangulations 
ieee globecom november 
kermarrec castro druschel rowstron 
scribe large scale decentralized application level multicast infrastructure 
ieee journal selected areas communications vol 
oct 
padmanabhan wang chou 
resilient peerto peer streaming 
proceedings ieee icnp 

www com 

tv qq com 
sylvia ratnasamy mark handley richard karp scott shenker 
application level multicast content addressable networks 
proceedings ngc 
rosenberg huitema 
traversal relay nat turn 
ietf internet draft 
rosenberg weinberger huitema 
rfc simple traversal udp nats march 

www org 
zhuang zhao kubiatowicz joseph 
bayeux architecture scalable fault tolerant widearea data dissemination april 
unpublished report 
rejaie sen characterizing unstructured overlay topologies modern file sharing systems 
international measurement conference october 

www com 
wang jamin zhang 
overlay optimizations host multicast 
proceedings fourth international workshop networked group communication ngc october 
zhang liu li 
data driven overlay network efficient live media streaming 
proceedings ieee infocom march 
hei liang liang liu ross insights measurement study large scale system 
workshop international world wide web conference may 

