approximate online multi issue negotiation department computer science university liverpool liverpool bx uk 
csc liv ac uk analyzes bilateral multi issue negotiation autonomous agents 
agents time constraints form deadlines discount factors 
issues negotiation issue viewed pie size 
issues indivisible individual issues split parties issue allocated entirety agent 
different agents value different issues differently 
problem agents decide allocate issues maximize individual utilities 
negotiations obtain equilibrium strategies case issues negotiation known priori parties 
analyse time complexity show finding equilibrium offers np hard problem complete information setting 
order overcome computational complexity negotiation strategies approximately optimal computationally efficient show form equilibrium 
analyze relative error difference true optimum approximate 
time complexity approximate equilibrium strategies nm negotiation deadline relative error 
extend analysis online negotiation different issues available different time points agents uncertain valuations issues 
specifically show approximate equilibrium exists online negotiation show expected difference optimum approximate approximate strategies polynomial time complexity 
categories subject descriptors distributed artificial intelligence multiagent systems general terms algorithms design theory keywords game theory negotiation approximation online computation 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
aamas may honolulu hawai usa 
copyright michael wooldridge department computer science university liverpool liverpool bx uk 
csc liv ac uk nicholas jennings school electronics computer science university southampton southampton bj uk 
ecs soton ac uk 
negotiation key form interaction multiagent systems 
process agents decide divide gains cooperation 
decision jointly agents party obtain prepared allow 
simplest form negotiation involves agents single issue 
example consider scenario buyer seller negotiate price 
agents differ price believe trade take place process joint decision making arrive price mutually acceptable fail reach agreement 
agents different prices move series offers counter offers order obtain mutually acceptable outcome 
agents perform negotiations decide rules making offers counter offers 
set negotiation protocol 
basis protocol agent chooses strategy offers course negotiation 
context focuses competitive scenarios self interested agents 
cases participant defines strategy maximise individual utility 
bilateral negotiations parties involved need settle issue 
case issues may divisible indivisible 
problem agents decide split issue 
individual issues divided 
issue entirety allocated agents 
agents value different issues differently come terms take issue 
date existing multi issue negotiation focussed case 
real world settings issues indivisible 
focus negotiation indivisible issues 
negotiations common multiagent systems 
example consider case task allocation agents 
set tasks carried different agents different preferences tasks 
tasks partitioned task carried agent 
problem agents negotiate carry task 
key problem study multi issue negotiation determine equilibrium strategies 
equally important problem especially context software agents find time complexity computing equilibrium offers 
computational issues far received little attention 
show mainly due fact existing describe section focused negotiation divisible issues finding equilibrium case computationally easier case indivisible issues 
primary objective answer computational questions case types situations commonly faced agents real world contexts 
consider negotiations incomplete information time constraints 
incompleteness information part negotiators common feature practical negotiations 
agents typically time constraints form deadlines discount factors 
deadlines essential element negotiation go indefinitely reasonable time limit 
likewise discount factors essential goods may value may decline due inflation 
strategic behaviour agents deadlines discount factors differs see single issue bargaining deadlines bargaining deadlines discount factors context divisible issues 
consider indivisible issues analyze strategic behaviour agents obtain equilibrium strategies case issues negotiation known priori agents 
case show problem finding equilibrium offers np hard complete information setting 
order overcome problem time complexity strategies approximately optimal computationally efficient show form equilibrium 
analyze relative error difference true optimum approximate 
time complexity approximate equilibrium strategies nm negotiation deadline relative error 
extend analysis online negotiation different issues available different time points agents uncertain valuations issues 
specifically show approximate equilibrium exists online negotiation show expected difference optimum approximate approximate strategies polynomial time complexity 
doing contribution lies analyzing computational complexity multi issue negotiation problem finding approximate online equilibria 
previous determined equilibria 
software agents limited computational resources results especially relevant resource bounded agents 
remainder organised follows 
giving brief overview single issue negotiation section 
section obtain equilibrium multi issue negotiation show finding equilibrium offers np hard problem 
approximate equilibrium evaluate approximation error 
section analyzes online multi issue negotiation 
section discusses related literature section concludes 

single issue negotiation adopt single issue model model negotiation parties allowed offers set discrete offers 
focus indivisible issues parties allowed possible offers zero scenario fits 
basic single issue model extend multiple issues 
doing give overview model equilibrium strategies 
strategic agents agent time constraints form deadlines discount factors 
agents negotiate single indivisible issue 
issue pie size agents want determine gets pie 
deadline number rounds negotiation 
denote deadline 
agents alternating offers protocol rubinstein proceeds series time periods 
agents say starts negotiation time period making offer xi agent accept reject offer 
accepts negotiation ends agreement getting xi getting yi xi 
negotiation proceeds time period agent counter offer 
process making offers continues agents accepts offer quits negotiation resulting conflict 
possible actions agent take time period accept offer new counter offer quit negotiation 
essential feature negotiations involving alternating offers agents utilities decrease time 
specifically decrease occurs step offer 
decrease represented discount factor denoted agents 
denote offer time period denote share agent respectively 
pie set possible offers time receive share respectively utilities xi yi conflict utility utility received event deal struck zero agents 
setting agents reason follows order determine offer 
denote equilibrium offer time period 
agent denote mover proposes get pie 
consider case deadline agents 
accepts division occurs agreed agent gets deadline 
powerful position able propose keep percent pie give deadline accepts offer agreement takes place time period 
consider case deadline 
order decide offer round looks ahead reasons backwards 
agent reasons negotiation proceeds second round take percent pie offering leave time period offers pie reject offer 
time period agent offers 
agent accepts agreement occurs time period 
general deadline negotiation proceeds follows 
agent decides offer round looking ahead far reasoning backwards 
agent having different discount factor different agents presentation involved leading changes analysis strategic behaviour agents time complexity finding equilibrium offers 
single discount factor agents 
possible may reject proposal 
irrespective accepts rejects proposal gets zero utility deadline 
assume accepts offer 
offer depends offering agent time period 
turn depends odd 
offer agents alternating offers protocol offering agent time period odd 
depending odd offer offer odd accept turn offer accept turn agent accepts offer negotiation ends time period 
note equilibrium outcome depends move 
agents move get possible equilibrium outcomes 
basis equilibrium single issue negotiation complete information obtain equilibrium multiple issues show computing offers hard problem 
time efficient approximate equilibrium 

multi issue negotiation analyse complete information setting 
section forms base extend case information uncertainty section 
negotiate indivisible issues 
issues distinct pies agents want determine distribute pies 

denote set pies 
pie size 
discount factor issue 
issue denote agent deadline 
offer time period agent share issues represented element vector denotes set 
agent share issue time agent share 
shares represented package 
traditional multi issue utility theory define agent cumulative utility standard additive form 
functions give cumulative utilities respectively time defined follows cu denotes element vector constants agent denotes set positive integers 
vectors indicate agents value different issues 
example agent values issue issue 
likewise agent words issues perfect substitutes matters agent total utility issues subset 
settings study issues perfect substitutes 
agent complete information negotiation parameters 
multi issue negotiation done different procedures 
broadly speaking key procedures negotiating multiple issues 
package deal procedure issues settled bundle 
sequential procedure issues discussed 
simultaneous procedure issues discussed parallel 
procedures package deal known generate pareto optimal outcomes 
adopt 
give brief description procedure determine equilibrium strategies 
package deal procedure procedure agents protocol negotiation described section 
offer package deal includes proposal issue negotiation 
issues offer includes divisions issue 
agents allowed accept complete offer issues reject complete offer 
agreement take place issues 
single issue negotiation agent decides offer looking ahead reasoning backwards 
offer package deal includes share issues agents tradeoffs issues order maximise cumulative utilities 
equilibrium offer issue time denoted denote shares agent respectively 
denote equilibrium package time element vector denotes share issues 
discount factor issue symbols denote element vectors zeroes ones respectively 
note sum agents shares time pie 
time period respectively denote equilibrium strategy agent respectively 
equilibrium strategies mentioned section package deal allows agents tradeoffs 
denote agent function making tradeoffs 
denote set parameters procedure 
theorem characterises equilibrium package deal procedure 
theorem 
package deal procedure strategies form nash equilibrium 
equilibrium strategy offer turn accept turn offer turn accept turn preceding time periods denotes offer time equilibrium strategies defined follows offer ub turn ua accept reject turn offer ua turn ub accept reject turn ua ub 
proof 
look ahead time period reason backwards 
negotiation reaches deadline agent turn takes leaves opponent 
get strategies statement theorem 
preceding time periods offering agent proposes package gives opponent cumulative utility equal opponent get equilibrium offer time period 
time period offering agent 
consider case offer package offers gives cumulative utility 
issue package gives cumulative utility 
packages offers maximises cumulative utility utility 
problem find package maximize mx mx ck ub ub constants variable 
assume function takes parameters ub solve maximisation problem equation returns corresponding package 
package solves equation returns agent gets equal utility packages agent 
function agent analogous hand equilibrium strategy agent receives offer follows 
time period denote receiving agent 
accepts ub rejects offer get higher utility time period 
equilibrium strategy receiving agent defined analogously 
way reason backwards obtain offers time period 
get equilibrium strategies statement theorem 
example illustrates agents tradeoffs equilibrium strategies 
example 
assume issues negotiation deadline issues discount factor issues agents 

agent mover 
backward reasoning knows negotiation reaches second time period deadline get percent issues 
gives cumulative utility ub 
time period gets utility reject offer 
offers package gets issue gets issue 
gives cumulative utility agent accepts package agreement takes place time period 
maximization problem equation viewed knapsack problem knapsack problem set note case divisible issues fractional items item profit weight 
knapsack capacity 
objective fill knapsack items maximize cumulative profit items knapsack 
problem analogous negotiation problem want solve maximization problem equation 
constants maximizing pm ka minimizing pm ka equation written mx minimize mx ck ub equation minimization version standard knapsack problem items represents profit item weight item ub knapsack capacity 
example issues easy find equilibrium offers 
general computationally easy find equilibrium offers theorem 
theorem proves 
theorem 
package deal procedure problem finding equilibrium offers theorem np hard 
proof 
finding equilibrium offers theorem requires solving knapsack problem equation 
knapsack problem np hard problem finding equilibrium package deal np hard 
approximate equilibrium researchers area algorithms time efficient methods computing approximate solutions knapsack problems 
methods find solution negotiation problem 
stage point main difference solving knapsack problem solving negotiation problem 
knapsack problem involves decision making single agent regarding items place knapsack 
hand negotiation problem involves players strategic 
case just find approximate solution knapsack problem show approximation forms equilibrium 
traditional approach overcoming computational complexity finding equilibrium approximate equilibrium see example 
approach strategy profile said form approximate nash equilibrium agent gain constant deviating 
aim solution knapsack problem proposed show forms approximate equilibrium negotiation problem 
doing give brief overview key ideas underlie approximation algorithms 
key issues design approximate algorithms sack problem 
knapsack problem computationally easy solved time polynomial number items knapsack problem 
contrast knapsack problem computationally hard 
note standard knapsack problem weights profits capacity positive integers 
knapsack problem fractions non positive values easily transformed positive integers time linear methods 

quality solution 
time taken compute approximation 
quality approximate algorithm determined comparing performance optimal algorithm measuring relative error 
relative error defined approximate solution optimal 
general interested finding approximate algorithms relative error bounded certain constant regarding second issue time complexity interested finding fully polynomial approximation algorithms 
approximation algorithm said fully polynomial finds solution satisfying equation time polynomially bounded size problem knapsack problem problem size equal number items 
knapsack problem ibarra kim fully polynomial approximation method 
method dynamic programming 
parametric method takes parameter finds heuristic solution relative error time space complexity grow polynomially number items 
specifically space time complexity polynomial see detailed approximation algorithm proof time space complexity 
ibarra kim method fully polynomial solve negotiation problem 
done follows 
agent ub denote procedure returns approximate solution equation ibarra kim method 
procedure ua agent analogous 
approximate equilibrium offer issue time denoted denote shares agent respectively 
denote equilibrium package time element vector denotes share issues 
discount factor issue note sum agents shares time pie 
time period respectively denote approximate equilibrium strategy agent respectively theorem uses notation characterizes approximate equilibrium multi issue negotiation 
theorem 
package deal procedure strategies form approximate nash equilibrium 
equilibrium strategy offer turn accept turn offer turn accept turn preceding time periods denotes offer time equilibrium strategies defined follows offer ub turn ua accept reject turn offer ua turn ub accept reject turn ua ub 
agreement takes place 
proof 
proof theorem backward reasoning 
obtain strategies time period straightforward get strategies offering agent gets percent issues 
offering agent solve maximization problem equation substituting 
agent done approx approx 
functions ibarra kim approximation method solving knapsack problem 
functions take parameter ibarra kim approximation method return package approximately maximizes equation 
relative error functions ibarra kim method equation 
assume offering agent 
agent offer package gives cumulative utility equal get approximate equilibrium offer time period approximate equilibrium package time period 
recall time period offering agent gets percent issues 
offering agent agents alternating offers protocol turn equal cumulative utility receiving percent issues 
utility capacity knapsack uses approx obtains approximate equilibrium package 
hand offering agent uses approx obtain approximate equilibrium package 
way offering agent say uses approx find approximate equilibrium package gives utility 
reasoning backwards obtain offer time period 
offering agent proposes offer approx ub approx ua 
receiving agent accepts offer 
relative error cumulative utility offer 
agreement takes place time period 
theorem 
time complexity finding approximate equilibrium offer time period nm 
proof 
time complexity approx approx time complexity ibarra kim method 
order find equilibrium offer time period backward reasoning approx approx invoked times 
time complexity finding approximate equilibrium offer time period nm 
analysis done complete information setting 
extension analysis incomplete information setting agents probability distributions uncertain parameter straightforward long negotiation done offline agents know preference individual issue negotiation begins 
instance consider case different agents different discount factors agent uncertain opponent discount factor knows 
uncertainty modelled probability distribution possible values opponent discount factor having distribution common knowledge agents 
analysis complete information setting holds incomplete information setting fact agent probability distribution find opponent expected utility actual utility 
analyzing incomplete information setting offline negotiation focus online multi issue negotiation 

online multi issue negotiation consider general arguably realistic version multi issue negotiation agents uncertain issues negotiate 
setting negotiating issue agents know negotiate issues uncertain details issues 
total number issues negotiation 
agents probability distribution possible values uniformly distributed 
probability distribution common knowledge agents 
agents come know just negotiation issue begins 
agents reach agreement issue re negotiated 
scenario requires online negotiation agents decisions issue prior having information issues 
give brief online problems draw analogy online knapsack problem negotiation problem want solve 
online problem data algorithm incrementally unit time 
online algorithm produce output incrementally seeing units input output ith unit output 
decisions output incomplete knowledge entire input online algorithm produce optimal solution 
algorithm approximate performance optimal algorithm sees inputs advance 
design online algorithms main aim achieve performance close optimal offline algorithm input 
online algorithm said stochastic decisions basis probability distributions inputs 
performance stochastic online algorithms assessed terms expected difference optimum approximate solution denoted zm optimal zm approximate solution 
note subscript indicate fact difference depends describe protocol online negotiation obtain approximate equilibrium 
protocol defined follows 
agent denote mover focus package deal procedure mover issues 
step 
agents values values common knowledge 
step 
agents settle issue alternating offers protocol described section 
negotiation issue time periods start negotiation issue 
agreement reached time negotiation fails remaining issues 
step 
steps repeated issues 
negotiation issue begins time period agreement issue 
assume common knowledge simplifies exposition 
private knowledge analysis hold agent find opponent expected utility basis fs time period problem offering agent say find optimal offer issue basis probability distribution 
order solve online negotiation problem draw analogy online knapsack problem 
doing give brief overview online knapsack problem 
online knapsack problem items 
agent examine items time order input profit size coefficients known 
algorithm required decide include item knapsack soon weight profit known knowledge concerning items seen total number 
note agents probability distribution weights profits items case stochastic online knapsack problem 
online negotiation problem analogous online knapsack problem 
analogy described detail proof theorem 
researchers algorithms developed time efficient approximate solutions online knapsack problem 
solution show forms equilibrium 
theorem characterizes approximate equilibrium online negotiation 
agents choose strategy knowing features issues 
information incompleteness relevant equilibrium solution bayes nash equilibrium bne agent plays best response agents respect expected utilities 
finding agent bne strategy analogous solving online knapsack problem 
online knapsack solved approximately 
relevant equilibrium solution concept approximate bne see example 
theorem finds equilibrium procedures online online defined proof theorem 
time period zm denote approximately optimal solution generated online online actual optimum 
theorem 
package deal procedure strategies form approximate bayes nash equilibrium 
equi strategy offer turn accept turn offer turn accept turn preceding time periods denotes offer time equilibrium strategies defined follows offer online ub turn ua accept reject turn offer online ua turn ub accept reject turn ua ub 
agreement issue takes place time period expected difference solution generated optimal strategy approximate strategy zm 
proof 
theorem find equilibrium offer time period backward induction 
offering agent issues 
consider time period recall step online protocol deadline completing negotiation issue 
mover issues agents offers alternately offering agent issues 
assume offering agent section offering agent gets percent issues 
offering agent utility time period ub mx recall known agents 
agents find expected utilities issues basis probability distribution functions negotiation issue agents know see step online protocol 
computes ub follows 
agent utility issue term equation 
basis probability distribution functions agent computes expected utility issue uniformly distributed 
expected cumulative utility issues pm second term equation 
order decide offer issue offering agent agent solve online knapsack problem maximize ub variables maximization problem maximizing minimizing constants 
write equation minimize ub optimization problem analogous online knapsack problem 
algorithm solve online knapsack problem proposed 
algorithm called fixed choice online algorithm 
time complexity linear number items knapsack problem 
solve online negotiation problem 
online algorithm fixed choice online algorithm time complexity 
algorithm takes values time generates approximate solution knapsack problem 
expected difference optimum approximate solution zm see detailed fixed choice online algorithm proof zm 
fixed choice online algorithm generalization basic greedy algorithm offline knapsack problem idea follows 
threshold value determined basis information regarding weights profits knapsack problem 
method includes knapsack items profit density profit density item profit unit weight exceeds threshold knapsack filled items considered 
detail algorithm online works follows 
gets values finds knapsack problem zero 
offer 
offers agent gets utility expects offer rejects proposal 
optimal strategy offer 
agent accepts offer 
negotiation issue starts agreement reached 
time period negotiation proceeds issue 
deadline second issue time periods start negotiation issue 
algorithm online values finds described 
agent offers bc accepts 
negotiation second issue starts agreement reached 
process repeats remaining issues 
issue agreed time period starts 
negotiation issue starts time period see step online protocol agreement issue occurs time hand offering agent uses algorithm online defined analogously 
irrespective move issues settled time theorem 
time complexity finding approximate equilibrium offers theorem linear proof 
time complexity online online time complexity fixed choice online algorithm 
time complexity linear time complexity online online linear worth noting knapsack problem lower bound expected difference optimum solution online algorithm 
follows lower bound holds negotiation problem 

related multi issue negotiation divided main types indivisible issues divisible issues 
describe existing case divisible issues 
noted outcome negotiation depends choice negotiation procedure research effort devoted study different procedures negotiating multiple issues 
focussed sequential procedure 
procedure key issue negotiation agenda 
term agenda refers order issues negotiated 
agenda important agent cumulative utility depends agenda change agenda utilities change 
agents decide agenda 
agenda decided negotiating issues agenda called exogenous may decided process negotiation agenda called endogenous 
instance analyze sequential negotiation exogenous agenda 
number researchers studied negotiations endogenous agenda 
contrast mainly deals sequential negotiation studies equilibrium package deal procedure 
mentioned differs focus indivisible issues focus case issue divisible 
specifically previous determined approximate equilibrium multi issue negotiation online negotiation 
existing case indivisible issues dealt task allocation problems tasks group agents 
problem task allocation previously studied context coalitions involving agents 
example analyze problem case agents act maximize benefit system 
contrast focus agents self interested want maximize individual utilities 
hand focus contracts task allocation multiple self interested agents concerns finding ways decommitting contracts initial allocation done improve agent utility 
contrast focuses negotiation regarding carry task 
online approximate mechanisms studied context auctions bilateral negotiations focus 

studied bilateral multi issue negotiation self interested autonomous agents time constraints 
issues indivisible different agents value different issues differently 
problem agents decide allocate issues maximize individual utilities 
specifically showed finding equilibrium offers np hard problem complete information setting 
approximately optimal negotiation strategies showed form equilibrium 
strategies polynomial time complexity 
analysed difference true optimum approximate optimum 
extended analysis online negotiation issues available different time points agents uncertain features issues 
specifically showed approximate equilibrium exists online negotiation analysed approximation error 
approximate strategies polynomial time complexity 
interesting directions 
online negotiation assumed constants uniformly distributed 
interesting analyze case possibly different probability distributions 
apart treated number issues common knowledge agents 
interesting treat number issues uncertain 

ausiello crescenzi kann marchetti spaccamela 
complexity approximation combinatorial optimization problems approximability properties 
springer 
bac raff 
issue issue negotiations role information time preference 
games economic behavior 
borodin el yaniv 
online computation competitive analysis 
cambridge university press 

fair division cake cutting dispute resolution 
cambridge university press 

bargaining bargaining procedures implied costs multiple issue bargaining 

wooldridge jennings 
multi issue negotiation deadlines 
journal artificial intelligence research 

importance agenda bargaining 
games economic behavior 
glover 
multiphase dual algorithm zero integer programming problem 
operations research 
kleinberg parkes 
adaptive limited supply online auctions 
acm conference electronic commerce pages new york 
ibarra kim 
fast approximation algorithms knapsack sum subset problems 
journal acm 

multi issue bargaining endogenous agenda 
games economic behavior 
keeney raiffa 
decisions multiple objectives preferences value trade offs 
new york john wiley 
kraus 
strategic negotiation multi agent environments 
mit press cambridge massachusetts 
lehman callaghan shoham 
truth revelation approximately efficient combinatorial auctions 
journal acm 
wooldridge jennings 
classification scheme negotiation electronic commerce 
international journal group decision negotiation 
marchetti spaccamela 
stochastic online knapsack problems 
mathematical programming 
martello toth 
knapsack problems algorithms computer implementations 
john wiley sons 
osborne rubinstein 
course game theory 
mit press 
raiffa 
art science negotiation 
harvard university press cambridge usa 
rosenschein zlotkin 
rules encounter 
mit press 
rubinstein 
perfect equilibrium bargaining model 
econometrica january 
sandholm lesser 
levelled commitment contracts strategic breach 
games economic behavior special issue ai economics 
sandholm 
bargaining deadlines 
aaai pages orlando fl 

essay bargaining 
american economic review 
shehory kraus 
methods task allocation agent coalition formation 
artificial intelligence journal 
singh wellman 
computing approximate bayes nash equilibria tree games incomplete information 
proceedings acm conference electronic commerce acm ec pages new york may 
stahl 
bargaining theory 
economics research institute stockholm school economics stockholm 
