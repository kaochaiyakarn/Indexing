flexible coordination large scale multi agent teams yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara school information sciences university pittsburgh ml sis pitt edu school computer science carnegie mellon university byu katia cs cmu edu summary 
paradigm coordinating cooperative agents dynamic environments teamwork shown capable leading flexible robust behavior 
teamwork applied problem building teams hundreds members previously existing fundamental limitations apparent 
address limitations existing models apply large agent teams 
develop algorithms aimed flexible efficient coordination applying decentralized social network topology team organization coordination behaviors team oriented plans tops 
basis model organize team dynamically evolving subteams order flexibly coordinate team 
additionally put forward novel approach sharing information large teams provides targeted efficient information delivery localized reasoning process model built previously incoming information 
developed domain independent software proxies demonstrate teams order magnitude larger previously discussed known published 
implement results approach demonstrating ability handle challenges coordinating large agent teams 
group agents coordinates teamwork flexibly robustly achieve joint goals distributed dynamic potentially hostile environment 
basic teamwork ideas systems successfully implemented including teams supporting human collaboration teams disaster response manufacturing training games 
teams successful sizes severely limited 
address larger complex problems need teams substantially larger retain desirable properties teamwork 
yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara key success previous teamwork approaches explicit detailed model agent agents joint activity team 
team members models reason actions aid achievement joint goals 
size team scaled unfeasible maintain date detailed models teammates team activities 
specifically communication required keep models date scale number agents 
models key elements theory operationalization teamwork break 
example accurate models team activities steam communication reasoning applied joint intention reasoning 
model teamwork rely accurate models team previous approaches teamwork 
requiring accurate models limit required communication approach applicable large teams 
giving accurate models means cohesion guarantees provided approaches joint intentions longer provided 
algorithms designed lead cohesive flexible robust teamwork high probability 
basic idea organize team dynamically evolving overlapping subteams sub goals team goal 
members subteam maintain accurate models specific subgoal working 
ensure cohesion minimize inefficiency team connect agents team network 
requiring agents keep neighbors network informed subgoals subteams members high probability inefficiencies detected subsequently addressed 
model able develop teams effective responsive cohesive despite having members 
identify ideas model keys success 
idea break team subteams working subgoals team goal 
members subteam change dynamically team rearranges resources best meet current challenges respond failures opportunities 
subteams agents accurate models joint activity way team steam model 
techniques developed small teams subteam flexible robust 
identify distinct groups subteams team members performing roles plan team members agents involved role allocation 
fidelity model maintained role performing agents higher non role performing agents turn higher agents wider team 
models limited subteams communication overhead limited 
avoid potential inefficiencies due subteams working cross purposes second idea introduce acquaintance network 
network flexible coordination large scale multi agent teams connects agents team independent relationships due subteams 
specifically network small world network see team members separated small number neighbors 
agents share information current activities direct neighbors network 
communication required keep neighbors acquaintance network informed low due small world properties network high probability possible pair plans 
agents know identify inefficiencies due conflicts plans 
example may detected subteams attempting achieve goal subteam plans interfere plans subteam 
detected agent subteams involved notified inefficiency rectified 
investigate influences social network properties efficiency coordinating large scale teams 
limiting models joint activities members subteam team loses ability leverage sensing abilities members 
specifically agent may locally detect piece information unknown rest team know members find information relevant 
example disaster response team fire fighter may detect road know fire fighters intend road 
communication teams extensively studied problem current algorithms sharing information teams require accurate models team activities steam decision theoretic communication require centralized information brokers kept date leading potential communication bottlenecks 
solution information sharing large teams perform distributed information sharing cost maintaining accurate models teammates 
agent easily know information needs know information agent information know needs 
allowing agents simply forward information acquaintance better position decision spread reasoning team leveraging knowledge agents 
leverage idea information interrelated received piece information useful deciding send piece information relationship pieces information 
example coordinating agent group urban search rescue agent tells agent fire smith st agent information traffic condition smith st sending information agent reasonable thing needs information knows 
utilizing interrelationship pieces information agents quickly route new information acquaintance network 
agents model information model acquaintances send information 
may take hops message get agent needs information 
piece information informs de yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara pieces models updated message moves volume information shared team increases amount effort required piece information decreases 
agents need know acquaintances approach scales number agents team increases 
evaluate method building large teams implemented approach software proxies called 
proxy encapsulating coordination algorithm works closely domain level agent coordinates proxies 
proxies build successful proxies build small teams able scale large teams fundamentally new algorithms concepts described 
report results coordinating teams proxies exhibit effective cohesive team behavior 
teams order magnitude larger previously discussed known published proxy teams represent significant step forward building large teams 
ensure approach leveraging peculiarities specific domain improved performance tested approach distinct domains identical proxies 
flexible team coordination section provide detailed model organization coordination team 
high level team behavior understood follows team organized social network team members detect events environment result plans achieve team top level goal 
team finds subteams plans subteams agents communicate maintain accurate models ensure cohesive behavior 
subteams agents communicate goals subteams interactions subteams detected conflicts resolved 
agents share locally sensed information associates network allow team leverage local sensing abilities team member 
building large scale teams typical large scale team meets basic characteristics large number widely distributed team members limited communication bandwidth 
part large team agents coordinate closely subset total agents team 
characteristics define logical model team organized acquaintance network 
acquaintance network directed graph team agents set links agents 
specifically small amount code changed interface different domain agents 
flexible coordination large scale multi agent teams agents denotes acquaintances able exchange tokens 
specifically defined acquaintances agent 
note number agent acquaintances size agent team 
additionally require acquaintance network small world network 
networks exist people popularized notion degrees separation 
agents arranged network having small number neighbours relative number members team number agents message pass get agent going neighbour neighbour typically small 
subset typical acquaintance network large team shown 
node represents agent member team 
pairs agents connected directly communicate acquaintances 
fig 

relationship subteams acquaintance network team oriented plans team oriented plans tops abstraction define team behavior 
tops provide mapping team level goals individual roles performed individual team members 
suppose team top level goal team commits semantics steam 
achieving requires achieving sub goals gi known advance functions environment 
example sub goals high level goal respond disaster extinguish fire provide medical attention particular injured civilians 
achieve sub goals team follows plan templates represented library 
templates parameterized instantiated plans contain specific details 
example particular fire building detected team member plan instantiated matches template disaster response 
yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara sub goal addressed plan gi di mi matches plan template library 
team plans lans plan 

individual team members necessarily know plans 
maximize responsiveness team changes environment allow team member commit team execution plan detects subgoal gi relevant 
team members determine sub goals relevant plan templates specified library 
description way sub goal achieved including execution order components plan 
rr individual activities performed execute 
di domain specific information pertinent plan 
convenience write perform signify agent working role includes agents working neighbors acquaintance network 
identities agents involved role allocation captured allocate 
cases conflict synergy detected plans terminated 
domain specific knowledge termination plan defined term 
think tops active objects distributed database 
top object captures state particular team plan 
team members involved execution plan need date versions top object knowing team members performing roles tops complete 
information needs shared ensure synchronization object held different team members 
viewed manner coordination thought set algorithms fill fields top objects ensure synchronized objects team 
example coordination algorithms triggered open roles top objects algorithms triggered post conditions plan satisfied 
subteams individual agents commit team sub goal subteam realize sub goal 
subteams formation process commences individual agent detects appropriate preconditions matches plan template library subsequently instantiates plan 
role token created allocated team 
la role allocation results dynamically changing subset team involved role allocation 
works follows token passed team member agent accepts role 
accepted agent member subteam temporary commitment perform role represented token 
note agents accept multiple tokens therefor perform role belong multiple subteams 
allocation team members roles may change due failures changing flexible coordination large scale multi agent teams circumstances members subteam change 
example member decides drop role suitable task 
lead best team resources team members execute roles capable doing 
subteam members agents performing roles informed acquaintances kept informed state plan informed plan irrelevant 
maximizes cohesion minimizes wasted effort 
typically may vary plan complexity notice typically experiments follow simple plan contains roles preconditions compared complex plans roles preconditions 
occurs agents accept role usually belong subteam due acquaintance network 
subteams basis coordination framework leads scalability teams 
plan section describe resolve plan conflicts 
distributed plan creation problems may occur 
detecting appropriate preconditions different team members may create identical plans plans pg different 
reduce need plan need choose rule plan instantiation reduce number plans created pg 
instantiation rules include instantiate probabilistic local information 
choice plan instantiation rule vary domain setting 
plans conflict potential synergy require detect 
common team member subteams maintain beliefs plans detect conflict 
simple probability calculation reveals probability non empty intersection subteams probability overlap teams overlap cm acb denotes combination number agents size size 
size subteams critical probability overlap 
example overlap despite subteam involving team 
constituents subteam change time lower bound probability conflict detected 
conflict detected plan needs terminated follows completion goals recipes irrelevant unachievable yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara plans 
capture domain specific knowledge defines conditions term 
exactly way steam detects conditions term obliged ensure members know plan terminated 
way team ensure plans agent believes team performing plan performing 
plan instantiation rules distributed plan instantiation agent create plan preconditions fulfilled plan matches template library 
may increase total number plans created agents create plan rules instantiating plans 
rules differ terms information needed compute instantiation conditions apply 
rule instantiate rule baseline instantiation rules 
agent allowed create plan knows preconditions necessary plan 
second rule probabilistic instantiation rule requires knowledge team members 
method requires team members wait random amount time creating plan 
time informed informed acquaintance teammate creating plan proceed create plan 
plans created time takes team members hear plan 
advantage rule information required team members 
disadvantages 
may conflicting plans resolved 
second may significant delay detection preconditions instantiation plan 
disadvantages traded manner 
increasing length time team member wait number conflicts reduced delay increased 
information locally senses information define rule 
rule refer local information rule requires team member detect plan preconditions locally order instantiate plan 
lead conflicting plans multiple agents locally sense preconditions easier determine conflicts occur resolve quickly 
major disadvantage rule plan preconditions team members may detect specific preconditions may get know preconditions plan created 
efficient communication large scale teams information important coordinating large scale multi agent teams team member adjust activity changes flexible coordination large scale multi agent teams team teammates environments 
communication difficult members partial views environment team member may piece valuable information know needs information 
section explain objective efficient communication terms providing high quality information targeted information delivery 
information fusion agents working physical working plate deemed mobile sensors team deemed sensor network 
look problem information fusion large scale teams observe physical phenomena conduct high level information processing tasks attacking target battlefield 
large teams sensor data generated single agent usually low confidence 
low confidence sensor data directly coordinating plans actions needs fused relevant data team 
power aware protocols algorithms developed static sensor networks limited research done design routing algorithms information fusion 
example directed diffusion geographic routing source agent send data back sink receives query sink 
reason routing protocols called reactive protocols 
reactive protocols mainly designed static sensor networks appropriate large scale teams mobile sensor networks 
specifically key reasons 

location data correlated existing positions mobile sensors agent previously knew agent data location query comes agent moved location 

sinks agents usually know source agents data sent volume query 
section proactive protocol information fusion large scale team acquaintance network model 
proactive protocols querying process source agent sensing piece data proactively deliver data nodes network 
querying process source agent reason relevant data fuse sensor data 
order minimize traffic redundant data network node forwards sensor data neighbors 
centralized control agent intelligently deliver data fusion solely neighbors 
challenge various decisions individual agents maximize probability relevant data fused network fused node network 
random walks simple algorithm information fusion 
random walks agent data randomly neighbor send 
neighbor receives data repeats process yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara events successfully fused data reaches condition 
random walks efficient information delivery agents detect event ground need fuse 
propose efficient failure resistant localized algorithm path reinforcement algorithm node learns routing decisions past information delivery processes 
logic algorithm relevant information fused earlier agents follow path followed earlier 
algorithm agent may pass event neighbor passed relevant events 
experiments show controlled information flows significantly increase probability relevant information fused network probability improved times hops information propagation comparison random walks 
experiments indicate probability fusion surprisingly high limited local knowledge node relatively small hops 
information sharing previous section showed requiring mutual beliefs subteams acting specific goals dramatically reduce communication required large team 
individual team members get domain level information local sensors relevant members subteam 
due fact team members know subteam doing locally sensed information knowing requires 
section approach sharing information leveraging small world properties acquaintance network 
basic idea forward information acquaintance acquaintance network need information neighbor 
key algorithm model agent maintains acquaintances 
pa matrix pa represents probability acquaintance best send information 
obey rules probability require 
example pa usually forward agent best neighbors send 
situation illustrated 
accurate model pa efficient information sharing agent send information agents need quickly 
pa inferred incoming messages key algorithm agents build best possible model pa information encapsulated messages supporting information helpful information sharing 
specifically message consists parts path 
information communicated 
path records track message taken network 
path denotes agent message sent previous current agent recipient acquaintance network 
ensure messages flexible coordination large scale multi agent teams travel indefinitely network message path max steps 
message arrives agent state sa updated transition function parts message appended history ha ha 
secondly information contained message added agent local information knowledge ka ka ka critically purpose algorithm update agent probability matrix help route message 
described section 
agent team runs algorithm receiving message algorithm information share sa true sa sa path max st ep ap self path choose send algorithm agent gets message updates state function 
agent finds message meet condition line function choose line selects acquaintance probabilities matrix pass message 
notice choose select acquaintance likelihood choosing particular acquaintance proportional probability best send 
key algorithm agent pass information acquaintance needs knows 
models created previously received information 
requires making relationship pieces information mapping mathematic description bayes rule 
define relationships pieces information rel rel indicates agent interested interested rel indicates agent interested interested rel inferred 
rel relates pieces domain level information assume easily inferred domain 
information sharing algorithm defined action piece relative information received message containing described follows assuming information arrives agent agent decrease probability sending information back clearly knows information 
ha searched ignore difficult issues related contradictory information 
yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara find relevant information 
piece relevant information additional evidence decision sending probability sending strengthened 
update agent incoming message containing received achieved leveraging bayes rule follows pa path path pa rel pa path normalized ensure 
case equation interesting 
updates probability agent just sent information best send information relationships pieces information just sent 
please note avoid potential path detours message path determined directly sent message fact acquaintance got message 
condition changes probability sending information agents sender way ensures normalization works 
third case encodes idea typically want send piece information agent sent 
see works consider example point doing execution pa row matrix shows gets information send agent 
assume agents wanting information probably want information wanting definitely want rel rel 
message information arrives agent applying pa get result pa effects inferred follows sent back previously gotten pa ii probability sending increased agents wanting probably want iii probability sending decreased agents wanting flexible coordination large scale multi agent teams probably want notice knows network topology acquaintances 
effects network topology sharing efficiency noted social scientists information sharing efficiency impacted network topology 
order share information large scale teams agents adopt manners exhibited humans operating social groups 
properties social network structures comprehensively studied 
research parameters important helping understand predict behavior information sharing large scale teams 
key factors include small world effect degree distributions clustering network correlations random graph models models network growth preferential attachment dynamical processes place networks 
interrelated 
purpose specifically focus properties average distance degree distribution average acquaintance 
average distance commonly studied small world effect 
av erage distance distance ai aj ai aj distance ai aj represents minimum number agents ai aj message pass agent acquaintance network 
example agent acquaintances share acquaintance distance 
degree distribution commonly studied scale free effect frequency agents having different number acquaintances 
distribution represented histogram bins represent number acquaintances size bin agents number acquaintances 
average acquaintances average number acquaintances agents teams 
value infer choices agents may delivering message 
known types social networks described properties 
example random network flat degree distribution 
grid network distinct nodes degree degree dimension grid network 
small world network scale free network important types social network topologies research shown possesses interesting properties 
small world networks shorter average distances compared regular grid networks 
hypothesize low average distance improve information sharing efficiency information potentially take hops reach defined destination 
scale free network specific kind network degree distribution forms power law nodes yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara connected hubs connect nodes ordinary nodes 
hubs scale free networks give advantages centralized networks distribution provides advantages centralized approaches 
number algorithms achieve teamwork framework described 
algorithms allocation roles instantiating plans sharing information human interaction resource allocation 
avoid requiring reimplementation algorithms new domain coordination algorithms encapsulated proxy 
proxies standard mechanism building heterogeneous teams 
team member works closely single proxy coordinates proxies implement teamwork 
basic architecture shown 
proxy communicates high level domain specific protocol robot agent person representing team 
proxy code domain independent readily variety domains requiring distributed control 
current proxy code known substantially extended updated version proxy code 
proxies public domain downloaded usc edu doc 
fig 

basic system architecture showing proxies control code unmanned aerial vehicles uavs controlled 
dynamic distributed system protocols performing coordination need extremely robust 
scale size team hundreds agents issue simply writing bug free code 
need abstractions designs promote robustness 
flexible coordination large scale multi agent teams encapsulating chunks coordination coordination agents 
coordination agent manages specific piece coordination 
control piece coordination moves proxy proxy coordination agent moves proxy proxy relevant state information 
coordination agents plan subplan role piece information needs shared 
example looks specific role 
encapsulation far easier build robust coordination 
fig 

high level view implementation coordination agents moving network proxies 
coordination agents manage coordination network proxies 
proxy viewed simply mobile agent platform facilitates functioning coordination agents 
proxies play additional important role providing storing local information 
divide information stored proxies categories domain specific knowledge coordination knowledge proxy ck 
information proxy knows state environment 
example proxy uav knows location fuel level location targets 
information comes local sensors reported domain agent coordination agents specifically see arrive proxy 
ck proxy knows state team coordination team involved 
example ck includes known team plans knowledge team member performing role top templates 
level activities coordination agents involve moving proxy network adding changing information ck agent 
content pertains local proxy roles local proxy govern behavior team member 
details yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara role executed control agent uav domain team member dependent 
experimental results section empirical evidence approach combination high low fidelity experiments 
fig 

coordinating agents disaster response simulation average axis fires extinguished conflicts messages agent axis number fires extinguished fire trucks versus threshold 
fig 

simulated coordinating uavs time vs number targets hit number targets hit versus threshold 
figures show results experiment proxies running coordination algorithms described section 
flexible coordination large scale multi agent teams experiments represent high fidelity tests coordination algorithms illustrate effectiveness approach 
experiment proxies control fire trucks responding urban disaster 
trucks travel environment locate fires spread extinguished extinguish 
top level goal team put fires 
single plan requires individual fire put 
experiment plan included function put fire 
varied sensing range fire trucks far close measured key parameters 
critical thing note approach successful coordinating large team 
column compares number fires started 
close sensing team required searching find fires result unsurprisingly fires spread 
able extinguish slightly faster far sensing team partly far sensing team wasted resources situations plans fire see column conflicts 
conflicts resolved took nontrivial amount time slightly lowered team ability fight fires 
resolving conflicts increased number messages required see column differences number messages attributed fire fighters sensing fires spreading information 
experiment showed number messages required effectively coordinate team extremely low partially due fact low level coordination agents required fire truck plan 
varied thresholds corresponds maximum distances truck travel fire shows increasing thresholds initially improves number fires extinguished high threshold results lack trucks accepting tasks decrease performance 
second domain shows high level results second domain exactly proxy code 
graph shows rate simulated uavs coordinated proxies searched battle space destroyed targets 
shows effectively allocated tasks large team thresholds correspond maximum distances uavs hit target benefit 
taken experiments domains show approach effective coordinating large teams suggests reasonably general 
information sharing test information sharing algorithm team agents average acquaintances 
agent randomly chosen source information randomly picked sink information 
sink agent sends messages containing relative information max steps 
source agent sends message information rel varied 
measure yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara steps messages takes encapsulated message sent get sink agent 
experiments different types acquaintance network topologies involved dimension grid networks random networks small world networks scale free networks 
small world network grid network links randomly changed 
key difference random network scale free network random flat degree distribution scale free network power law distribution 
point graph average runs simple simulation environment 
information sharing different information relevance messages rel grid small world random scale free fig 

number messages dramatically reduces association information received information sent increases 
verify basic algorithm different types acquaintance network topologies 
show average number steps taken deliver varied strength relationship information originally sent sink agent information sent source agent 
expected algorithm works different acquaintance networks stronger relationship originally sent information new information efficient information delivery 
information sharing different number previous messages look detail exactly messages sent source delivery sink efficient 
settings number messages sink sends varied relationship messages rel forced 
notice flexible coordination large scale multi agent teams messages number messages source grid small world random scale free fig 

number messages reduces related previous messages increased 
messages required dramatically impact number messages required 
result shows messages agents precise guess send messages 
influence average acquaintances messages average number acquaintances grid small world random scale free fig 

number messages increases agent average acquaintances acquaintance networks 
experiment looked detail exactly number acquaintances help information sharing efficient 
run experiments rel acquaintance networks agent average acquaintances 
result shows greater number acquaintances messages necessary deliver means information sharing yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara enhanced connecting agents acquaintances 
experiment don consider limitation communication breadth agent members 
algorithm efficiency different size teams percent agents team size grid small world random scale free fig 

information sharing algorithm works slightly better large scale teams measure percentage 
investigate influence team scale information sharing performance shown ran experiments different sizes agent teams rel 
information sharing efficiency measured percentage agents involved information sharing percentage agents involved otal agent team experiment result shows different team sizes efficiency information sharing 
indicates team size factor information sharing efficiency 
plan simple simulator analyze effect acquaintance model dynamically changing subteams 
runs coordination algorithm simulating time intensive communication quickly evaluates different combinations parameter settings order thousands 
parameters settings correspond various domains include free parameters model domain parameters 
free parameters specific algorithm include acquaintance network density plan instantiation rule 
domain parameters included team size total preconditions roles plan see 
algorithm fact acquaintances network detect conflicts flexible coordination large scale multi agent teams fig 

parameter table high probability 
team size scaled assume number duplicate plan increase 
shown average number plans increases respect team size probabilistic instantiation rule 
graph actual expected conflicts shown 
shows non linear relationship input parameter team size output parameter messages agent 
number conflicts number agents fig 

average number plan conflicts increases respect team size yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara summary messages agent team size fig 

messages agent team size increased approach building large teams allowed build teams order magnitude larger discussed previously published 
achieve unprecedented scales fundamentally new ideas developed new scalable algorithms implemented 
specifically approach organizing team acquaintance network dynamically evolving subteams 
potentially inefficient interactions subteams detected sharing information network independent subteam relationships 
leveraged social network properties networks efficiently share domain knowledge team 
remains done fully understand able build large teams represents significant step forward 
acknowledgments research supported afrl mnk 

ian akyildiz su 
survey sensor networks 
ieee communication magazine 

albert barabasi eric bonabeau 
scale free networks 
scientific american pages may 

mark burstein david 
framework dynamic information flow mixed initiative human agent organizations 
applied intelligence agents process management 
forthcoming 
flexible coordination large scale multi agent teams 
hans chalupsky yolanda gil craig knoblock kristina lerman jean oh david pynadath thomas russ milind tambe 
electric agent technology supporting human organizations 
ai magazine 

ephrati martha pollack ur 
deriving multi agent communication filtering strategies 
proceedings ijcai 

alessandro paul scerri milind tambe 
building large scale robot systems distributed role assignment dynamic uncertain domains 
proceedings workshop representations approaches time critical decentralized resource role task allocation 

joseph katia sycara 
case planning agent team coordination 
proceedings fourth international case reasoning 

goldman zilberstein 
optimizing information exchange cooperative multi agent systems 
proceedings second international conference autonomous agents multi agent systems 

chalermek intanagonwiwat ramesh govindan deborah estrin 
directed diffusion scalable robust communication paradigm sensor networks 
mobicom pages 

jennings 
archon systems applications 
project report 

jennings 
specification implementation belief desire architecture collaborative problem solving 
intl 
journal intelligent cooperative information systems 

nick jennings 
controlling cooperative problem solving industrial multi agent systems joint intentions 
artificial intelligence 

kam jim lee giles 
communication improve performance multi agent systems 
proceedings fifth international conference autonomous agents 

kitano minoru asada kuniyoshi noda osawa hitoshi matsubara 
robocup challenge problem ai 
ai magazine spring 

yong bae ko nitin vaidya 
location aided routing lar mobile ad hoc networks 
mobicom pages 

elizabeth liao paul scerri katia sycara 
framework large teams 
aamas workshop coalitions teams 

newman 
structure function complex networks 
siam review vol 


milgram 
small world problem 
psychology today 

nair ito tambe marsella 
task allocation robocup rescue simulation domain 
proceedings international symposium robocup 

sycara scerri tambe 
adjustable autonomy context coordination 
aiaa rd unmanned unlimited technical conference workshop exhibit 

david pynadath milind tambe 
multiagent teamwork analyzing optimality complexity key theories models 
international joint conference autonomous agents multi agent systems aamas 
yang xu elizabeth liao paul scerri bin yu mike lewis katia sycara 
david pynadath milind tambe 
automated teamwork infrastructure heterogeneous software agents humans 
journal autonomous agents multi agent systems special issue infrastructure requirements building research grade multi agent systems page appear 

pynadath tambe cavedon 
team oriented programming 
intelligent agents vi agent theories architectures languages pages 

scerri pynadath johnson rosenbloom schurr si tambe 
prototype infrastructure distributed robot agent person teams 
second international joint conference autonomous agents multiagent systems 

paul scerri yang xu elizabeth liao justin lai katia sycara 
scaling teamwork large teams 
aamas pages 

katia sycara lewis 
team cognition 
chapter intelligent agents human teams 
erlbaum publishers 

katia sycara mike williamson keith decker 
distributed intelligent agents 
ieee expert intelligent systems applications december 

milind tambe 
agent architectures flexible practical teamwork 
national conference ai aaai pages 

milind tambe wei min shen maja mataric david pynadath goldberg jay modi qiu 
teamwork cyberspace agents team ready 
aaai spring symposium agents cyberspace 

duncan watts steven strogatz 
collective dynamics small world networks 
nature 

yang xu mike lewis katia sycara paul scerri 
information sharing large scale teams 
aamas workshop challenges coordination large scale multi agents systems 

xuan lesser zilberstein 
communication decisions multi agent cooperation model experiments 
proceedings fifth international conference autonomous agents 

yen yin miller xu volz 
cast collaborative agents simulating teamwork 
proceedings international joint conference artificial intelligence pages 

bin yu paul scerri katia sycara yang xu michael lewis 
proactive information delivery fusion mobile sensor networks 
submitted ipsn 

feng zhao leonidas guibas 
wireless sensor networks information processing approach 
morgan kaufmann publishers 
