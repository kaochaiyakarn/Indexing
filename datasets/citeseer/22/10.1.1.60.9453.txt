complexity cost isolating root cause system problems large parallel computers generally scales size system 
syslog messages provide primary source system feedback manual review tedious error prone 
analysis detect subtle anomalies syslog message stream increasing availability system 
describe novel teiresias algorithm automatically classify syslog messages compare existing log analysis tool slct 
describe occurrence statistics group time correlated messages simple graphical user interface viewing analysis results 
example analyses independent clusters 

syslog background related event logs timestamp event log message 
log domains vocabulary terms phrases exist message welldefined limited snmp logs phone network logs syslog vocabulary notoriously unlimited 
syslog rfc defines syslog message contain timestamp string identifying source message device generating message free format byte ascii description event identified msg portion message 
information triple referred message document 
due tenure flexibility syslog widely available event log protocol 
syslog messages commonly generated devices reasons ranging hardware faults normal user actions login logout resulting untenable number lines text review 
glut data results useful information inefficiently gleaned going completely unused 
furthermore syslog verbosity levels increased order provide information example advance warning problems analysis jon sandia national laboratories sandia gov done amount content variance terse log verbosity levels overwhelming 
sethi provide excellent overview approaches ongoing need event log analysis specific goal fault localization complex networks 
provides sample syslog messages examples document 
expert systems comprise common log analysis approach human expert enumerates set rules consisting regular expressions responses take matching messages encountered example ignore benign alert email pager 
sec popular implementations approach 
describes specifically monitoring linux cluster hand written rules 
time rigor required generate sufficiently rich rule set prohibitive sites 
insufficient effort invested resulting false negative rates generally kill effort completely 
example false negative receiving alert message deserving alert ignored due imprecise ignore rule 
example false positive receive alerts benign messages match imprecise alert rule 
difficulty writing maintaining regular expressions monitoring proportional number types messages rate set message types change example additions new devices software changes user behavior 
sandia laboratories institutional computing clusters lines rules 
visualization popular approach log analysis 
produced interesting visualizations time statistics plots source relationships images 
explored visualization audit logs directed graphs 
produced spring self organizing map parallel coordinates visualizations event logs couch tools visualizing time series various plots anomaly correlation discovery 
interesting representations log data similarity metric presentation type widely accepted effective answer problem analyzing logs 
ar novel presentation approach event sequences complete sound scape themes including jungle 
presentation extremely creative effective may result widely acceptable long term environment provides mechanism understand exactly anomalous sequence messages hear hear 
simple network management protocol snmp generates event logs generally limited documented vocabulary compared design 
analysis approaches focus snmp logs 
hellerstein excellent results discovering modeling time sequence correlation snmp logs including useful visualization 
snmp logs avoids complexities associated free format messages pattern discovery directly applicable message types determined 
log streams generated large complex networks correlations messages different sources 
contrast document focuses strategies automatically generate optimally precise sets message types 
summary existing increasing number publications tools commercial services indicate event log analysis studied open problem 

analyst thought process specific goal increasing supercomputer ras reliability availability intend produce machine learning analysis system enables content novice analysts efficiently understand evolving trends identify anomalies investigate cause effect hypotheses large multiple source event log sets 
mind assumption malfunctions misuse site norm sought capture thought process log analysts log specific expert knowledge 
overarching question simply message stream aspects strongly correlated system malfunctions misuse defining normal course elusive key strategy specific question quantitative answers believe form sufficient normal approach goal 
message content occurrence rate normal 
port port port traffic threshold exceeded example snmp messages see www com log analysis html www com extensive listings available log analysis tools services messages exactly example lines 
messages certain terms example numbers dns message normally change time ones 
message type associated normal occurrence rate hourly weekly bursty users start morning 
message groups normal 
sequence messages indicates single event 
messages usually occur proximate time time span 
messages multiple sources form reliable sequences 
devices classified output message stream 
sets hosts produce similar message streams example compute nodes verses service nodes cluster hosts tend memory problems 
frequently host classifications change 
users applications classified resulting message stream 
distinctive characteristics message streams generated hosts certain users executing certain applications 
device device job job log stream similarities sufficient identify hardware software failures 
document addresses questions topics ongoing included review discussion 

sisyphus toolkit log analysis commonly considered curse due tedium involved successful automated strategy sharing views named log analysis toolkit sisyphus aim completely automate process provides wedges speed ease task rolling logs hill system monitoring debugging 
toolkit collection third party original components currently provides distinct capabilities automated generation message types automated grouping time correlated messages interactive review results 
greek mythology sisyphus eternal punishment pushing large rock hill roll back nov connect nov connect dec dns named rr rerr sans rq rtcp feb root cmd run parts cron hourly feb root cmd run parts cron daily feb root cmd run parts cron weekly feb ll jack cmd bin rm gram job mgr log 
teiresias automated message typing teiresias pattern discovery algorithm originally developed bioinformatics ibm received considerable attention applied outside domain including security anomaly detection 
discovers patterns called motifs categorical non numeric data user specificity support 
explicitly set strings composed characters teiresias finds motifs composed characters don care wildcard having specificity number fixed characters total width motif including wildcards occur times hashes motifs length appearing data prunes meeting minimum support criteria conducts convolution phase remaining motifs glued order yield longest motifs existing data leveraging property known downward closure 
output motifs carefully sorted decreasing specificity maximality 
example suppose motif mi mj match exactly mj shorter specific 
occur number times mj discarded maximal motif mi output 
mj higher support additional information data included output mi 
see details accomplished worst case exponential time datasets yield results polynomial time 
features coupled downloadable research license convinced explore applicability event log analysis 
teiresias originally developed small vocabulary sets released teiresias int capable handling vocabulary bit integers deemed sufficient log analysis 
logs analyzed teiresias int downloaded separately preprocessed substituting unique integer unique word reverse mapping performed resulting teiresias int teiresias zeus empowered prophet sage greek mythology 
download ask teiresias questions watson ibm com html 
sample syslog lines output 
accomplished perl script named splits words whitespace exceptions message timestamp source omitted deferred stage examination 
words containing equals sign split order accommodate messages containing words variable name value dns line 
pair conversion back strings 
numeric process ids pid omitted 
common messages contain program name pid pid changes invocation 
pid omitted resulting integer teiresias obscure common program name prefix 
currently consider benefit exposing common program name teiresias outweigh loss pid converted wildcard reverse conversion words 
preserving pid splitting done variable name value pairs may attempted enable detection extra missing processes startup identically configured nodes 
example pct process pid compute nodes functionally necessary certainly normal 
word integer mapping saved file dict integer syslog dat passed teiresias int finds motifs resulting thr 
classify script compares message output noting match effectively selecting maximal motifs total set 
performs multi line grouping described section 
results converted back strings saved file rex displayed section 
messages matching motifs outliers saved file review iterative processing different arguments 
entire process driven front script called takes arguments meanings described 
shows complete flow data 
dict rex dat teiresias int classify cla thr label 
graph data flow program 
ellipses denote files boxes denote programs teiresias int dashed indicate included sisyphus toolkit separate download ibm 
simple example consider log file containing lines additional cron lines additional hourly weekly daily messages exactly ones 
results motifs root cmd run parts cron hourly root cmd run parts cron weekly root cmd run parts cron daily cmd support highlighting rare event similar common events shares words cron messages 
lines appropriately assigned group lines file 
effect places messages categories increasing anomaly messages having support frequent messages having support infrequent similar content frequent messages messages infrequent anomalous content 
categorization enables extremely efficient review log file 
possible start large value iterate successively smaller values decreasing ratio 
largely unnecessary log data tend 
example results change ranging lower ratio examples provided section 
practical teiresias examine partial words example convert characters words integers pass teiresias int support variable sized gaps motifs 
attempted ratio required generate useful results prove computationally prohibitive 
impractical discovering sequences messages message sequences interleave differently system activity extremely variable true single host log set multiple sources 
sole difficulty encountered teiresias significant vocabulary size requires large amounts system memory rarely able process lines time gb memory 
believe due fact motifs specificity enumerated phase 
implies words frequent case 
teiresias modified determine words support support motif enumeration slct see section bottleneck avoided 
bottleneck currently mitigated passing small log file results filter matching messages larger file passing resulting outliers back process iterating sufficiently large time range analyzed 
despite limitations small data sets teiresias input parameter insensitivity log data automatic message typing anomaly categorization show useful effective pattern discovery engine automatic typing syslog messages 

simple logfile clustering tool slct automated message typing risto slct uses algorithm specifically designed detect word clusters log messages 
passes data accomplish objective 
hash counting words position line generated pass data dog ran hashed keys dog ran 
words having support pruned hash new hash message word clusters generated second pass data messages dog ran deer ran generate key ran second word wildcard dog deer appear 
optional third pass performed wildcard positions refined constant heads tails possible example dog deer 
resulting word cluster support output lines matching word cluster saved separate file review outlier lines 
slct executes faster teiresias results similar teiresias enabling process large log sets 
slct provides command line arguments enabling flexible behavior requires careful thought order produce results 
example slct space logfile tends produce results standard syslog files specifies support threshold omit bytes word consideration timestamp message source refine join clusters 
addition options specify common log formats example syslog result options similar significantly improve usability 
technical issues overcome slct 
simply mechanism provided review slct gpl licensed available neti ee risto slct raw lines match word cluster 
significant impediment understanding results particularly logs resulting diverse word clusters contributes difficulty identifying optimal set command line arguments minor changes input arguments drastic effects 
address am working enable results reviewed see section 
second issue related slct optional join option approximates teiresias ability categorize message types 
consider example cron logfile 
slct results word clusters root cmd run parts cron hourly root cmd run parts cron weekly correct support respectively saves remaining lines outliers file 
adding option results additional word clusters cmd root cmd run parts supports saving messages outliers 
clearly additional information log failing effectively highlight single message user jack daily messages separate group 
support threshold decreased example word cluster root cmd run parts cron daily support user jack lost general cron word cluster 
cron example intentionally simple illustrates difficulty tends quickly obscure subtle anomalies real log files especially combined trial error attempts identify optimal value support threshold 
preliminary support front script called passes log file slct displays results support option time writing 
slct strengths minor shortcomings expect replace teiresias preferred message typing engine sisyphus 

automatic grouping time correlated messages having generated single line message types attention turned grouping messages correlated time 
median standard deviation inter arrival periods messages message type calculated program classify message types grouped statistics 
example message type mi matches line numbers file timestamps lines seconds median inter arrival period standard deviation 
simple example minute periodic message type 
cron messages common various periodicity period groups regardless happen proximate time 
median somewhat robust outliers mean normal periodic messages produced node turned drastically skew interarrival mean 
ma describes chi squared test inter arrival period histograms random arrival poisson distribution detect partially periodic events 
certainly robust computationally expensive approach simpler statistics sufficient order grouping time correlated messages 
useful non periodic messages different message types similar support inter arrival mean inter arrival standard deviation fact time correlated grouped 
instance consider similarly configured computers booting emit similar sequence messages similarly short time duration regardless node boot order concurrency 
message boot sequence typed described previous sections set grouped occurrence statistics 
enables entire set single unit unit boot events huge compression syslog record highlighting anomalous deviations boot events example rare change hardware check startup message occurrence message normally boots change amount memory detected indicating failed 
example revisited section 
complete inter arrival histograms grouping certainly robust plan implement point 
message type occurrence statistics included resulting rex file review 

interactive review interactive perl tk tool named provided sisyphus toolkit enables efficient review results versus original log file 
snapshot application included document simple describe 
contents rex upper window selection mouse corresponding raw messages appear lower window 
multiple types selected shift control clicks enabling comparison message types comparing frequent messages infrequent similar messages 
questionable message identified questions reviewer times sources message appear presents answers questions single click showing messages match selected message type 
useful display messages type blocks review 
reviewer wishes see time interleaving multiple message types option provided display messages original order 
intentionally simple providing extremely intuitive efficient means reviewing system logs results analyses described 

example usage impossible demonstrate efficiency interactive tools provide section presents brief examples sisyphus review logs separate computer clusters attempt illustrate usefulness 

sandia national laboratories computational plant multiple linux clusters sandia national laboratories largest consists nodes 
nodes disk node system generates syslog messages transmitted saved centrally excellent syslog ng program 
system generates average syslog lines day mentioned previously monitor production message stream 
serves operating system research production computation plant message stream generated role distinctive 
considerable effort minimize total time reliably boot nodes cluster identifying minor anomalies resulting messages challenging task 
excerpt running line file single rack produces message types excerpt shown matching messages 
immediately notices group message types having support smaller group having support groups having nearly identical interarrival statistics stddev 
selecting messages group quickly see nodes set booted linux node start runtime software intentional configuration case demonstrates detection easily missed variation message stream 
comparing messages syslog ng available www com products syslog ng cluster integration toolkit disk nodes routinely booted minutes described ward class definitions label median stddev motif rte succeeded ram disk driver initialized ram disks size eth digital ds tulip rev irq 
eth digital ds tulip rev irq 
cycle frequency inaccurate measured value hz eth addr mask gw cluster machine diskless rh alpha image rte init init client running mount nfs start rte init routes read valid 
max avg init alpha pci offset sending dhcp requests ok memory available rte init lanai type bytes kb memory unit rte init lanai type bytes kb memory unit sending dhcp requests ok memory available startup succeeded looking port rpc ip config got dhcp answer sending dhcp addr mask gw cluster machine diskless rh alpha image command line ip root dev nfs motifs class membership list 
lines matched dictionary words classes sets reveals node booted separately booted concurrently accounting different inter arrival standard deviation 
existence similar message types quickly highlight fact nodes differing amount memory 
similarly seen message types nodes contain lanai type network card contain different lanai version clicks shows exactly nodes contain differing version case 
quickly useful information gained log regarding software configuration hardware differences 
selecting message types observed dhcp messages nodes differed rest having indicating slight network contention impacting hosts case harmless underscores teiresias ability highlight minor anomalies easily go unnoticed manual review 
clicks answers question nodes ones different lanai cards memory cases painless efficient get answers 
selecting type displays messages including indicate machine check correctable ecc error single node pairs time period indicating abort load try unknown job id nfs 
sample rex excerpts task get request slot remainder indicating warning messages pertaining nfs configuration 
lines correctly set deserving investigation 
slct results log produced similar results producing word clusters matching outlier class messages 
differences teiresias directly follow discussion slct section 
additional observation comparing results teiresias generated message type root admin root matching messages different actual format containing common substring 
messages fact related single event reliable sequence pam rhosts auth pam processes vague message type violates intention generating message type produced actual format type message type printf code 
slct produce cluster due fact words appear different positions messages 
deemed advantage slct teiresias indicates word position information useful 
initial study content novelty rate message stream conducted 
top plot displays number production messages day nodes bottom plot displays number word clusters generated slct various support thresholds ranging 
word total messages day slct generated word clusters time days 
message content novelty rate clusters generated day set grows relatively slowly experiencing rapid increases occasionally 
rapid increases number word clusters reflect bursts content novelty message stream correlated bursts raw message stream 
example line rise significantly message bursts days 
similarly alarm set messages day set median trigger times significant content novelty bursts seen 
values message content novelty rate approximately constant time suggests possibility automatically determining content novelty rate threshold units new word clusters time window useful detecting unusual information bursts message stream 
topic ongoing research 

liberty sandia national laboratories institutional computing cluster liberty node dual xeon cluster sandia runs linux central syslog collection syslog ng monitoring 
sisyphus speed process creating configuration message types regular expressions contexts utilizing time statistics 
system administrator performed task believed sisyphus reduced total time required establish roughly significant portion time spent sisyphus aided initial establishment rules liberty took roughly hours total manually converting rex syntax syntax output syntax planned revision 
administrator established configuration expressed disappointment sisyphus available earlier 
line logfile single node shows lines generated exactly minutes suggesting worthwhile tone cron messages 
messages appear type file task check reply im eof premature message indicating scheduler problems node 
type correctly highlights messages attention 

university new mexico high performance computing cluster run lines generated hosts hours producing message types matching messages 
lines indicated single host different version program lines indicated port scan occurred 
careful manual review log lines interesting anomalous 
simple minute software version mismatch node parallel cluster cause numerous problems ability quickly detect inconsistencies valuable debugging tool 
furthermore automatically highlighting lines indicating unauthorized port scan demonstrates value security tool rare message stream flagged 
slct dataset produced word clusters saving messages outliers 
differences teiresias match described section 
aside analyzed unm computer science department logs tools correctly detect numerical fields hourly dns statistics messages third line normally change 

advances resulting international priorities informatics widely possible including system event log analysis 
teiresias algorithm shown effective automatically generating word granular regular expressions system event logs 
furthermore careful sort order provides near optimal categorization messages frequent infrequent content similar frequent infrequent content novel sets 
memory requirements allow scale large log sets provides useful analysis logs lines long 
slct produces similar effective results suffer prohibitive memory requirements 
teiresias potentially modified include infrequent words candidate motifs eliminate memory issues algorithmic weakness compared slct word position information shown produce erroneous motifs cases 
issues coupled slct open source availability friendly helpful author 
message typing engine choice am modifying accordingly 
large log sets automatically decomposed message types 
messages typed sequences messages automatically grouped inter arrival statistics providing consolidation messages review subsequent analysis 
determining optimal sort order reviewing message types topic ongoing involving combination appearance order type type similarity specificity support 
process establishing rich monitoring rule sets streamlined outputting sec syntax directly slct automatic conversion output appropriate syntax 
topic ongoing automatic determination content novelty rate thresholds units new message types unit time useful detecting anomalous region event log 
sisyphus toolkit provides start analysis presenting messages high signal noise manner enabling efficient log review generation monitoring rules useful detection component failure misconfiguration misuse 
nathan george davidson tim risto kevin donna johnson jerry smith helpful discussions topic reviews document 
sandia laboratory operated sandia lockheed martin united states department energy contract de ac 
bsd syslog protocol rfc august 
sethi event correlation need service fault localization 
jackson expert systems 
international computer science series addison wesley 
hansen atkins automated system monitoring notification usenix lisa conference proceedings 
sec lightweight event correlation tool ieee proceedings 
available www cert dfn de eng www crypt gen nz 
analyzing cluster log files proceedings th annual conference linux clusters 
highly interactive visual log browser information visualization statistical analysis usenix lisa conference proceedings 
information visualization system monitoring auditing computer logs ieee conference information visualization 
liu mok yang composite events network event correlation visual approach monitoring logs usenix lisa conference proceedings 
couch visualizing huge usenix lisa conference proceedings 
couch peep network monitoring network sound usenix lisa conference proceedings 
case simple network management protocol snmp rfc www ietf org rfc rfc txt may 
hellerstein ma discovering actionable patterns event data ibm systems journal vol 

rigoutsos combinatorial pattern discovery biological sequences teiresias algorithm bioinformatics vol 

rigoutsos time complexity teiresias algorithm ibm technical report rc 
dimarco finding patterns biological sequences university waterloo project report cs fall 
wespi dacier debar system teiresias algorithm annual conference proceedings pp 

brin silverstein market baskets generalizing association rules correlations data mining knowledge discovery vol 
pp 

data clustering algorithm mining patterns event logs ieee proceedings 
ma hellerstein mining partially periodic event patterns unknown periods proceedings international conference data engineering icde pp 

ward implementing scalable diskless clusters network file system nfs conference proceedings 

