robust efficient photo consistency estimation volumetric reconstruction alexander kobbelt computer graphics group rwth aachen university kobbelt cs rwth aachen de 
estimating photo consistency important ingredients stereo reconstruction technique volumetric scene representation 
presents new illumination invariant photo consistency measure high quality volumetric reconstruction calibrated images 
contrast current standard methods normalized cross correlation supports unconstrained camera setups non planar surface approximations 
show measure embedded highly efficient completely hardware accelerated volumetric reconstruction pipeline exploiting current graphics processors 
provide examples high quality reconstructions computation times seconds minutes large numbers cameras high volumetric resolutions 
volumetric multi view stereo reconstruction originally introduced seitz shown produce models photographs video sequences fairly high quality :10.1.1.163.250:10.1.1.17.1907
basic principle volumetric reconstruction find classification elements voxels discretized volume belong surface object 
probably central aspect techniques estimation called photo consistency voxel 
fundamental idea voxels intersected object surface consistent appearance input images voxels project incompatible image patches fig 

currently major approaches problem focusing efficient computability quality reconstruction 
originally photo consistency measured color variance voxel assuming perfectly lambertian textured surfaces constant illumination conditions 
despite restrictions method widely computational efficiency acceptable quality time critical applications new view synthesis 
original approach improved ways 
bonet suggested extensions considering transparency 
ra statistical method reliable outlier rejection 
probabilistic framework space carving 
histogram color consistency tests introduced stevens yang addressed problems textureless regions specular highlights 
leonardis bischof pinz eds eccv part ii lncs pp 

springer verlag berlin heidelberg kobbelt fig 
example improved photo consistency measure reconstruction images 
cuts computed consistency volume front side view model shown respectively 
darker colors indicate higher consistency values 
clear maximum actual surface location allows reconstructed models high quality 
focusing quality reconstructed model photoconsistency commonly evaluated sophisticated consistency measures sum squared differences ssd normalized cross correlation ncc image patches color variances 
greatly reduces ambiguous color configurations accounts changes illumination involved normalization step 
technique deformable models global graph cut optimization find optimal surface discretized volume satisfies photoconsistency smoothness constraints 
methods achieve high quality reconstructed models 
papers point open issues ncc consistency estimation question planar model image aligned surface patches 
cases projective warping introduce considerable matching error medium baseline non epipolar aligned images 
resolves restrictions new color normalized approach specifically supports optimization reconstruction techniques 
important aspect quality photo consistency measure efficiency 
computation times hours common ncc due higher computational complexity 
considered acceptable respect high quality reconstructions time consuming find optimal parameter settings practice 
szeliski addressed performance adaptively refined grids 
partially hardware accelerated implementations space carving 
solutions hardware accelerated visual hulls improved voxel visibility estimation discussed 
li completely hardware solution yang described hardware ssd estimation real time stereo 
works conceptual robust efficient photo consistency estimation limitations applicability optimization approaches restrictions concerning accuracy results complexity input data 
resolve mentioned restrictions presents new implementation complete volumetric reconstruction pipeline 
importantly includes new approach compute photo consistency voxel 
consistency measure combines advantages mentioned approaches resulting illumination invariant computationally efficient photo consistency estimation high quality reconstruction 
improves robustness resolving problem matching surface samples completely unconstrained camera configurations restricted planar surface approximations 
show consistency measure important stages volumetric reconstruction pipeline visual hull visibility determination implemented highly efficient way exploiting current graphics hardware restrictions concerning volumetric resolution number images computational accuracy 
photo consistency estimation assuming fully calibrated foreground segmented input images ij object general volumetric reconstruction pipeline consists steps voxel discretized volume determine contained visual hull object lies irrelevant parts volume 
voxels projecting background images ij instantly marked unoccupied space skipped computations 
efficient background rejection test estimate object visual hull sect 

emphasized important step initial geometry proxy visual hull determine voxel visible input image ij occluded voxels 
basic visibility information compute approximate normals estimating tangent planes visual hull boundary propagating resulting normal directions inwards remaining volume 
additionally account occlusions caused voxels 
efficient solution problem sect 

initial steps know images ij visible 
exist major approaches actual photo consistency estimation briefly introduce motivate modified consistency measure 
generally photo consistency voxel computed comparing image patches pj resulting projecting images ij visible mentioned visibility estimation 
original space carving approach computes color voxel image ij average color cj pixels pj computes applying transfer function color variance kobbelt cj pj ij cj cj 
variance photo consistency measure supports efficient computation unconstrained camera setups 
quite sensitive practice non lambertian weakly textured surfaces varying illumination 
sophisticated approach compare intensity functions resulting projecting images ij ik normalized cross correlation ncc 
suppose approximate unknown surface intersecting voxel planar surface patch fig 

respective intensity functions compared placing object space samples patch evaluating respective image space projections pi min images ij ik 
unknown generally computes approximate solution doing pixel wise comparison simple image aligned patches pj pk cj ij cj ij pj cj cj cj pj pj cj defined transfer function applied ncc pj pk 
method strongly reduces potential color ambiguities accounts changes illumination due involved normalization step 
despite advantages remains number open issues approach 
ncc computed pairs image patches combine results images compute actual photo consistency 
propose compute average ncc image pairs compute ncc single image 
importantly main problems approach fact pixels pi images ij ik respectively correspond surface sample object space 
image aligned patches provide acceptable results medium baseline epipolar aligned images setups arbitrary camera configurations difficult handle 
hand mentioned sophisticated planar model aligned patches provide valid results approximation quite close true object surface fig 

voxel overcome aforementioned problems propose new approach create consistent object space samples matching error depend quality current surface approximation view alignment volumetric resolution voxel grid 
photo consistency considered function space scene reconstructed embedded 
function vanishes points lying exactly surface small values immediate vicinity larger positive values robust efficient photo consistency estimation fig 
previous patch methods sampling error strongly depends approximation quality planar geometry proxy surface 
photoconsistency estimation spatially voxel 
samples weighted equally exact position orientation predicted sub voxel accuracy 
higher resolutions approach allows non planar surface approximations photo consistency estimation 
necessarily increase larger distances 
reliable information exact location surface voxel best consistency indicator check simply integrate function interior voxel 
value integral expected relatively small voxels intersected surface 
obviously integration done numerically considered voxel sub voxel resolution fig 

voxel uniformly distribute equally weighted samples pi object space compute colors samples separately projecting respective input images 
approach effectively eliminates matching problem different images samples completely unconstrained camera positions 
preserve illumination invariance ncc approach apply similar color normalization step ci ij colors samples pm particular image ij 
pairwise correlation estimation biased camera introduces complexity evaluate pairs sample pi compute weighted variance normalized colors images 
allows take weighted contribution images account simultaneously possibility respect effects blurring grazing viewing angles 
weigh contribution image ij voxel gaussian weight wj wj angle approximate voxel normal voxel camera direction space 
final photo consistency simply computed sum normalized color variances sample wj wj wj 
want consider full channel color space just intensity channel number input images simply increases 
kobbelt surface sampling approach provides robust consistency measure long projection voxel covers pixels input images 
object space voxels small relative pixel resolution images method tends unstable due alias errors applying bilinear interpolation color values fig 

enlarge integration domain case adding neighboring voxels 
additional information neighboring voxels probably intersected surface iterative optimization setting fact able non planar geometry proxies consistency estimation 
initial surface approximation available straightforward compute nearest neighbor voxels intersected surface 
technique easily compute signed distance field current surface remaining volume 
corresponding nearest neighbors voxel neighbors lying level set 
single voxel create samples closest neighbor voxels fig 
simply compute photoconsistency described sect 

conceptually similar patch ncc exploit non planar surface approximation contrast planar patches ncc 
matching problem implicitly avoided 
approach results smooth surface reconstructions high volumetric resolutions relative resolution input images fig 

efficient gpu implementation comparison simple form ncc approaches method introduces additional computational overhead compute projections object space samples voxel center 
section show compensate overhead exploiting capabilities programmable commodity graphics hardware 
main benefit gpus general purpose processors inherent parallel processing capability 
show photo consistency measure important steps volumetric reconstruction effectively parallelized resulting significantly reduced processing times current gpu features vertex fragment shader floating point support efficient multi resolution texture processing 
underlying idea transferring arbitrary algorithm gpu exploit possibility execute custom program generated vertex fragment independently parallel standard rendering pipeline 
floating point support gpus quite complex input data processed encoding color channels textures 
simply drawing screen sized quad generate fragments custom algorithm executed 
means effectively run algorithm texture encoded input data times robust efficient photo consistency estimation single rendering pass 
output data algorithm accessed reading color channels framebuffer 
sections implementation fully hardware accelerated reconstruction pipeline 
opengl shader implementations available webpage www rwth graphics de 
assume volumetric scene representation adaptively refined grid adaptive octree pre computed multi resolution pyramid input image 
algorithms explicitly address multi resolution capabilities modern gpus easily simplified single resolution versions 
visual hull estimation efficient voxel rejection segmented images floating point texture tp encode position voxel channels single texture element texel 
furthermore initialize texture tb false entry boolean background mask 
avoid complex estimation voxel projected area pj load texture mipmap ti image ij gpu perform single multi resolution texture lookup ti pj 
projection matrices voxel size transferred environment parameters 
described execute custom fragment program voxel drawing screen sized quad represented single fragment position retrieved texture lookup tp 
projected position pj footprint size sj ij computed texture lookup bj ti pj sj check projected background ij 
results images accumulated updating boolean background mask tb bj tb whichis evaluated cpu 
combined reading writing texture supported current gpus accumulation step implemented opengl framebuffer objects textures alternating rendering targets 
amount voxels encoded texture limited maximum available texture size 
run algorithm repeatedly voxels processed 
images voxels texture size algorithm needs wh iterations image uploads pass 
visibility estimation important step voxel visibility estimation visual hull boundary approach inspired ideas splat rendering uses techniques similar splat shadow mapping resulting reduced processing times orders magnitude comparison standard approach ray casting table 
difficulty lies choosing proper occlusion surface computing visibility voxels thickness voxel 
kobbelt fig 
visibility estimation voxel image ij store depth values voxels vb depth map td 
visibility evaluated depth comparison corresponding entry td 
problem effectively solved boundary computing visual hull normals described sect 
set opengl projection matrix corresponding projection matrix ij render splats circular discs object space depth buffer td 
splat radius set correspondence voxel size 
result dense depth map fig 
outer boundary voxels surface seen image ij 
visibility ij computed efficiently simple depth comparison 
similar sect 
fragment program loads fragment corresponding voxel position tp 
depth eye space compared depth value dv front boundary voxel projecting image position simple texture lookup td fig visible iff dv number necessary iterations identical sect 

photo consistency estimation gpu photo consistency estimation slightly involved previous steps color normalization 
assume create samples voxel fig 

encode data sample separate texel single voxel represented sequence texels fig 

addition positions store normal directions texture tn compute individual camera weights wj auxiliary attributes range texture coordinates stored ta 
visibility computed sect 
stored occlusion texture 
image ij corresponding projection matrix voxel size transferred gpu texture mipmap ti additional environment parameters 
similar sect 
color integration avoided lookup corresponding mipmap level ti pj 
accumulated color values solving stored texture 
fragment generated sample voxel 
images ij fragments run algorithm 
projection pass compute sample color ti si compute camera weight wj tn store color weight tc wj robust efficient photo consistency estimation fig 
hardware accelerated photo consistency estimation step rendering process 
texture encoded input data compute projected color values sample colors normalized accumulated final consistency estimation 

normalization pass loop samples ta normalize store normalized color weight wj 
accumulation pass get wj add wj wj accumulation buffer color channels accumulate values computed step output buffers multiple render targets 
evaluation buffers summation samples done software gpu implementation generate redundant summations fragments corresponding samples single voxel 
images voxels samples voxel texture size algorithm needs vm wh passes image uploads pass 
results section presents evaluation method terms quality efficiency 
system performance evaluation linux intel pentium ghz gb main memory nvidia 
captured video sequences fig 
fig 
uncalibrated turn table setup image resolution 
statue fig 
captured hand held video camera image resolution 
pre processed video streams standard structure motion segmentation techniques 
models reconstructed iterative multi resolution implementation consisting proposed volumetric reconstruction pipeline graph cut surface extraction volumetric resolution number samples voxel set experiments approximately corresponding image patch ncc techniques 
kobbelt fig 
image shows original input images leo model 
model obtained graph cut technique 
small oscillations artifacts occur voxels projecting pixels 
surface sampling neighboring voxels significantly improves results 
approximate image size leo head pixels 
images reconstruction statue captured hand held video camera 
able reconstruct quite detailed model despite specular surface illumination artifacts 
lower values samples particularly difficult areas quite deep concavities arms small features ears leo model properly reconstructed 
higher resolutions observe significant improvement reconstruction quality 
proposed surface sampling approach includes neighboring voxels discussed sect 
significantly improves reconstruction results high voxel resolutions achieve highly detailed smooth reconstructions fig 
high resolution cameras 
experiments applied surface sampling approach volumetric resolutions single voxel projects pixels 
reconstruction shows reconstruction possible difficult lighting conditions non lambertian weakly textured surfaces 
table shows performance gpu implementation comparison cpu implementation 
certain overhead associated loading images voxel data gpu achieve acceleration factors 
multiresolution implementation reconstruction time models minutes 
please note computation times reported related range minutes hours comparable target resolutions hardware 
input data results available www rwth graphics de 
robust efficient photo consistency estimation table 
comparison computed voxels second hardware method software implementation parentheses different input complexities 
images voxels visual hull visibility consistency total time new efficient approach compute photoconsistency voxels volumetric stereo reconstruction 
method resolves restrictions previous methods matching surface patches biased consistency estimation necessity epipolar aligned images preserving important features illumination invariance 
showed furthermore consistency test important reconstruction steps efficiently implemented commodity graphics hardware leading fully hardware accelerated high quality reconstruction pipeline volumetric stereo 
plan incorporate methods improve handling non lambertian surfaces 
statue reconstructed acceptable quality think photo consistency measures explicitly model specularities surface properties improved results 
exploit full potential hardware implementation observed strong performance breakdown texture sizes larger probably related fact opengl features open issues 
gpu main bottleneck method expect approximately times higher performance texture sizes reduced number iterations image uploads algorithm 
acknowledge helpful discussions mario martin volker sch 

seitz dyer photorealistic scene reconstruction voxel coloring 
cvpr 

kutulakos seitz theory shape space carving 
international journal computer vision kobbelt 
stereo silhouette fusion object modeling uncalibrated images circular motion 
phd thesis ecole nationale sup rieure des communications 
torr cipolla multi view stereo volumetric graph cuts 
cvpr 

sinha pollefeys multi view reconstruction photo consistency exact silhouette constraints maximum flow formulation 
iccv 

schafer hans image photo hulls fast photo realistic new view synthesis 
real time imaging 
li seidel hardware accelerated rendering photo hulls 
computer graphics forum 
bonet viola responsibility weighted volume reconstruction 
iccv 

ra image set consistency local model verification 
workshop austrian association pattern recognition 

drummond cipolla probabilistic framework space carving 
iccv 

stevens histogram color consistency test voxel coloring 
icpr 

yang pollefeys welch dealing textureless regions specular highlight progressive space carving scheme novel photo consistency measure 
iccv 

gonzalez woods digital image processing 
prentice hall 
szeliski rapid octree construction image sequences 
computer vision graphics image processing image understanding 
dyer real time voxel coloring 
image understanding workshop 

hardware accelerated voxel carving 


generalized voxel coloring 
workshop vision algorithms 

steinbach girod multi hypothesis volumetric reconstruction objects multiple calibrated camera views 
icassp 

yang pollefeys multi resolution real time stereo commodity graphics hardware 
cvpr 

opengl extension registry 
www opengl org 
zwicker kobbelt high quality surface splatting today gpus 
eurographics symp 
point graphics 

