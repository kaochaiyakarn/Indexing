selecting weighting features genetic algorithm case reasoning approach personnel rostering gareth petrovic automated scheduling optimisation planning research group school computer science information technology university nottingham campus nottingham ng bb united kingdom grb cs nott ac uk 
personnel rostering problems highly constrained resource allocation prob lems 
human rostering experts years experience making rostering de reflect individual goals objectives 
novel method capturing nurse rostering decisions adapting solve new problems case reasoning cbr paradigm 
method stores examples previously encountered constraint violations operations repair 
violations represented vectors feature values 
investigate problem select ing weighting features improve performance case reasoning approach 
genetic algorithm developed line feature selection weighting ing complex data types needed represent real world nurse rostering problems 
approach significantly improves accuracy cbr method reduces number features need stored problem 
relative importance different features determined providing insight nature expert decision making personnel rostering 
keywords scheduling knowledge systems case reasoning meta heuristics feature selection weighting 
nurse rostering defined problem placing resources nurses subject con straints slots pattern pattern denotes set legal shifts defined terms needs done 
wide variety constraints imposed rosters copyright gareth petrovic 
submitted publication european journal operational research april 
depending legal management staffing requirements individual organisations 
def roster quality optimality highly subjective difficult represent systematically utility functions rule bases 
human rostering experts years experience making rostering decisions reflect individual goals objectives 
nurse rostering problems solved variety different mathematical artificial intelligence methods 
usually modelled optimisation problems objective functions vary considerably problems 
bailey warner mathematical programming techniques generate nurse rosters optimised respect staffing costs staffing costs shift pattern penalties 
constraint satisfaction techniques developed cheng meyer auf hofe allow definition different types constraint 
number meta heuristic approaches explored including genetic algorithms simulated annealing tabu search hyper heuristics 
cbr approach scott simpson combined case reasoning constraint logic programming storing shift patterns construction nurse rosters 
case repair generation cbrg technique developed authors solve nurse rostering problems uses case reasoning cbr 
cbr reasoning paradigm new problems solved solutions similar problems previously encountered 
previous problems corresponding solutions stored cases database called case base 
new problems compared cases case base similar retrieved 
solution problem retrieved case adapted context new problem 
new solution useful problem solving stored case base increasing total knowledge held 
cbrg method considers constraint violation roster separate problem 
case base contains history previous constraint violations operations repair 
cases retrieved case base stage retrieval process 
stage retrieves cases containing violations type current problem 
second stage calculates similarity cases current problem weighted nearest neighbour method 
violations represented set characteristic features interpreted points feature space 
weights assigned features representing relative importance 
similar case defined smallest weighted distance feature vector representing current problem 
vital retrieval process appropriate features selected represent violations features carefully weighted 
common ways determine accuracy case base measure classification accuracy 
cbrg method seen classifier determines type parameters repair violation 
classification accuracy measured repeatedly removing case case base performing retrieval determine nearest case removed case comparing repairs 
literature nearest neighbour classification algorithms successfully solve number different classi fication problems 
allow complex relationships input parameters captured need model explicitly 
sensitive noise data sets erroneous irrelevant features 
effects reduced selecting relevant features feature set assigning weight feature representing relative importance 
number different feature weighting selection methods developed including salzberg feature weighting algorithm heuristic approach classification method random mutation hill climbing approach feature selec tion skalak genetic algorithm kuncheva jain 
algorithms described review wettschereck 
investigate approach automated weighting feature selection genetic algorithm ga developed kelly davis dimensionality reduction algorithm developed 
approaches adapted handle types data cbrg method model nurse rostering problem 
adaptation feature weighting selection algorithm complex real life nurse rostering problem 
algorithm allows learn features important making rostering decisions features irrelevant increasing understanding nurse rostering problem 
accuracy cbrg method increased weighting features search time decreased reducing number features necessary store case 
furthermore flexibility adaptability case approach enhanced behaviour tuned precisely decision making style expert trained 
data experiments derived rosters provided ward queens medical centre university hospital trust nottingham united kingdom 
nurse rostering problem introduced section cbrg method described section 
section introduces different types features describe violations 
modified genetic algorithm feature weighting selection section 
results obtained applying algorithm case base real life rostering decisions section 
section concludes 
nurse rostering problem nurse rostering problem represented ordered pair set nurses set constraints 
set contains information nurses shifts assigned shifts prefer rostering period 
set imposes constraints shift assignments nurse denoted tuple nri npi array descriptive information maximum number hours contract example full time nurses 
set assignment variables nri defined nri si si shift assignments days rostering period length usually days 
similarly set preferred assignments npi defined table 
fields ype field domain description qual rn en sn qn xn qualification level nurse gend gender nurse ale intl nationality nurse ome train nt specialty training nurse eye trained non eye trained nt grade grade nurse nhs grading system npi pi pi shifts prefer days rostering period 
npi referred preference roster 
shifts assigned si pi variables unassigned shift currently assigned nurse request shift currently assigned nurse requested early early shift late late shift night night shift 
descriptive information nurse stored ype structure 
describe individual nurses data structure describe nurse requirements definitions constraints 
structure represented tuple fields follows quali fields defined table 
nurses ward belong possible qualification categories 
descending order registered rn enrolled en auxiliary student sn 
registered nurses qualified extensive training practical managerial aspects nursing enrolled nurses received mainly practical training 
auxiliary nurses unqualified nurses perform basic duties student nurses training registered enrolled 
ype variable describe requirements certain constraints 
way nurse qualifications classified hierarchically additional qualifications 
rns ens classified qualified qn ans employed pn 
xn denotes nurses qualification level 
gender nationality nurse factors affect rostering decisions 
reg enrolled nurses receive additional training specific ward 
ward nurses receive eye training denoted nurse eye training called non eye trained denoted nt 
grade nurse determined national health service nhs standard qualification level nurse amount hospital experience 
literature constraints divided categories hard soft 
hard constraints violated 
roster considered feasible violates hard constraints 
soft constraints considered flexible satisfied 
describe roster quality adding penalty objective function proportional degree violation 
define soft constraints explicitly 
treatment captured implicitly experience stored case base 
remainder word constraints refers hard constraints defined set constraint defined function mk mk violations current roster 
constraints may different types different parameters type 
corresponding function description 
pk type constraint describes types nurses affected constraint pk pk parameters specific constraint type 
parameters enclosed square brackets order denote define constraints 
constraint types defined current stage research cov er ype shift min cover constraints define skill mixes re quired different shifts 
minimum number nurses min particular description represented ype variable assigned particular shift shift 
example early shift requires qualified nurses son ype max constraints limit number days nights max nurses may row 
ward generally nurses son ype min constraints define minimum number days nights min nurses may successively succession ype shift shift succession constraints define illegal shift combi nations nurses 
possible shifts type shift day followed shifts type shift day 
night shift followed early shift illegal combination nurses ot als ype period max totals constraints define maximum number hours max nurse may set number days period 
example nurse may hours days 
example constraint restricts maximum number consecutive days nurse may written son xn wildcard symbol indicates field may take value 
applied produces violations form 
pkm km mk pkm pkm parameters specific violation type 
different violation types constraints may generate applied roster cover ype day shift insufficient nurses description ype signed shift day working shifts row starting days working shifts row starting days succession day illegal shift combination days day day working hours days 
previous example son constraint violation involving nurse starting day days written nurse repair defined action alters assignment shifts nurses notation 
pn pn pn parameters specific type repair 
different repair operations identified rostering problem 
natural repairs commonly rostering experts 
reassign day shift assign shift day swap day interchange shift assignments day switch day day interchange shift assignments day day 
example repair assigns early shift nurse day written reassign nurse definitions constraints violations repairs section created authors investigations nurse rostering problem 
deliberately designed general customisable possible applicable wide range problems literature 
development new constraint types needed largely constraints developed 
simple repair types described problem specific operators useful 
case repair generation method case repair generation cbrg method developed authors capture examples individual constraint violations repairs human experts solve 
violations repairs stored cases case base solve new violations new rosters 
new violation identified roster case containing similar violation case base retrieved 
repair retrieved case generate set possible repairs performed current roster 
repairs compared repair retrieved case similar selected 
information stored case base violations repairs deliberately roster specific 
experience stored repairing violations roster solve violations type roster regardless staffing differences 
demonstrated previous papers cbrg method learn imitate rostering decisions human experts accuracy increases experience added case base 
detailed mathematical description retrieval adaptation methods 
method combined tabu search mechanism successfully solve number real world nurse rostering problems 
shall describe detail parts methodology relevant affected feature weighting selection algorithm 
structure cases case base described section highlighting non roster specific way violations repairs stored 
section retrieval adaptation algorithms briefly described 
algorithm measuring accuracy case base terms ability classify training cases described section 
case storage case consists information violation repair resolve violation 
violation repair structures defined section stored directly case base refer specific roster 
consequently alternative structures defined order represent non specific information violations repairs stored inside case 
case base cb set cases represent violation repair respectively 
case base violation defined case violation member represents structural information violation stored 
problem solving episode stored case structural information extracted roster violation repaired process called generalisation 
process identifies information violation specific current roster 
example ype information stored nurses involved violation 
type violation shifts involved stored structure 
second member vector feature values 
features represent statistical shift pattern information violation roster time repaired 
different features depending violation type 
described section 
repairs represented cases similar way 
repair defined repair repair structural information generalised repair vector repair feature values 
generalised information stored case repair includes ype nurses involved shifts assigned repair took place 
example process converting violation repair case consider violation nurse repair reassign nurse nurse rn nr np violation repair describe scenario nurse consecutive shift assignments starting day days rectified changing shift assignment day unassigned 
case generated generalising violation repair follows violation rn repair reassign rn case generalised violation stores information type nurse involved repair records nurse originally early shift day repair took place reassigned unassigned 
retrieval adaptation key processing tasks cbrg method generate repairs constraint violations retrieval adaptation 
retrieval process identifies case containing similar violation current violation referred focus violation 
repair retrieved case adapted solve focus violation 
retrieval process begins focus violation identified roster focus violation generalised violation vr compared non roster specific violations case base 
process identifies cases case base violations match structural information focus violation 
matching violations ranked distance feature vector feature vector focus violation vr 
vector feature weights distance calculated weighted nearest neighbour function vr fi vr fi vr distance function ith feature total number features 
definition distance function feature depends type data represent feature described section 
case returned retrieval process referred retrieved case 
adaptation process generates set candidate repairs considering possible repairs performed roster 
candidate repairs type repair retrieved case types nurses shifts information repair structure retrieved case 
furthermore ensured individual nurses specified focus violation included repairs 
example focus violation involves nurse working hours period repairs generated candidate set involve 
candidate repairs generalised ranked distance feature vector feature vector repair retrieved case 
weighted nearest neighbour function equation weights equal value 
measuring classification accuracy common ways assess performance cbr system measure classification accuracy 
cbrg method simply classification algorithm measure important indicates cbrg identifies type repair generate violation 
important method correctly classifies violations increases adaptation method generate appropriate repairs 
classification accuracy case base measured performing retrievals cases contains see 
leave cross validation strategy case removed case base passed retrieval algorithm focus case 
retrieval algorithm returns similar nearest case focus case 
retrieved case focus case contain repairs structural information focus case deemed correctly classified 
operation performed case case base classification accuracy measured percentage correctly classified cases 
additional measure classification accuracy performed data case base 
involves random retrieval cases case base focus case 
retrieval algorithm random case selected compared focus case 
percentage correctly classified cases calculated referred random classification accuracy rca case base 
useful calculate value ensure cbr mechanism doing just randomly selecting cases 
important ensure case base cb initialise total initialise correct cb total total remove cb retrieve case cb similar repair repair correct correct restore cb return correct total fig 

pseudo code algorithm measuring classification accuracy classification accuracy case base significantly higher random classification accuracy 
performance case base respect measures determined section 
violation features stage retrieval process chooses cases structurally focus violation 
large number cases exist case base necessary rank violation features 
violation features statistical characteristics roster violation 
seen snap shot state roster time violation repaired 
considered important making rostering decisions exact relationships decisions known priori 
nearest neighbour similarity measures employed case reasoning allow relationships captured need explicit representation 
order represent sufficient information roster violations number different types data features 
different types features real valued shift pattern pattern cover array 
inclusion features real integer valued necessitates definition alternative difference measures 
real valued features real valued features statistical measurements roster violation 
normalised interval 
example percentage nurse preferences satisfied 
distance measure real valued features 
shift pattern features significant amount information needed rostering decisions working patterns nurses involved 
shift pattern features arrays representing shifts individual nurse works specific number days 
pattern arrays similar represent individual nurse working shift day 
number days vary depending type constraint violation recorded case base 
distance patterns calculated total number positions shift different normalised dividing pattern length 

ap 
bp ai bi ai bi ai bi ai bi may unclear shift patterns patterns defined separate feature types 
shift patterns contain information patterns potentially cloud similarity measure extra detail relevant 
types included intention genetic algorithm decide types useful retrieval process 
cover array features cover arrays provide data structure storing information different types nurse working particular shift single day number days 
types cover array ordinary cover arrays average cover arrays 
ordinary cover array counts number nurses different qualifications specialty training working particular shift 
ordinary cover array defined array integers 


xd xd 
xd number different types nurse number days 
cover arrays measuring number nurses qualification level equal xn sn pn qn en rn skill level equal nt 
number days cover array measured depends type constraint violation 
cover arrays days useful storing shift pattern information day violation occurs violations cover succession 
store information indicates possibility different repair types take place violation 
average cover array records mean number nurses type specified period 
takes format ordinary cover array set real valued elements 
distance measure cover arrays takes consideration difference corresponding pair elements 
cover arrays difference function defined follows bd ad designing features nurse rostering problem evident definition similarity violations include information scope repair 
example early shift particular day sufficiently covered information number nurses type currently unassigned indicates easy solve violation 
number available nurses type relevant decision making captured case base 
cover arrays provide way record shift pattern information large number nurses 
illustrated examples 
consider day roster table 
table 
example roster nurse ype nurse rn nurse rn nt nurse en nurse nt ordinary cover array counts nurses qualification xn sn pn qn en rn early shift day indicating nurses qualification student nurses employed nurses auxiliary nurse qualified nurse registered nurse working early shift day 
cover array unassigned shifts day period day day average skill mix unassigned shift day period specialty training indicating average nurses unassigned shifts period student nurses employed nurses auxiliary nurses 
features set constraint violation features violation type grown development cbrg method 
features added refined tion contact experts 
goals discover aspects roster important making rostering decisions selecting best large number violation features 
genetic algorithm described reduce number features significantly increase quality efficiency cbrg method 
table describes features violation type 
column contains feature descriptions second third fourth columns describe nurses shifts period number days respectively feature measured 
fifth sixth columns give abbreviation violation data type represent 
final columns indicate violations features 
features measured different combinations nurses shifts periods 
second column table shows nurses considered feature 
features measure nurses roster column 
features ype column consider nurses roster type information matches ype variable violation 
example violation describes problem involving enrolled nurse associated features measure statistics enrolled nurses roster 
specific appears column indicates feature considers specific nurse involved violation 
features table violation types 
general real valued statistics measured entire rostering period 
describe state roster time violation repaired 
features unique cover violations describe number hours assigned nurses day violation cover constraint took place 
final real valued features violation types cover violations 
measure percentage contract hours currently allocated period violation number days violation takes place outside period 
features measured nurses specific nurse involved violation nurses type nurse involved violation 
shift pattern feature feature violations cover violations 
records shift assignments particular nurse violations cover constraints involve single identifiable nurse 
similarly pattern feature describe cover violations succession violations 
succession violations involve description nurse shift period code data type cover succession totals number violations days viol real violation magnitude days mag real percentage assigned hours days ass real percentage assigned hours days ass real preference satisfaction days sat real preference satisfaction days sat real number assigned hours day ass real number assigned hours day ass real number unassigned hours day un real number unassigned hours day un real percentage assigned hours outside period ass real percentage assigned hours period ass real percentage assigned hours specific outside period ass real percentage assigned hours specific period ass real percentage assigned hours outside period ass real percentage assigned hours period ass real shift pattern specific period spat shift pattern pattern specific period pattern qualification cover array days oca qualification cover array day oca qualification cover array days oca qualification cover array day oca specialty training cover array days sca oca specialty training cover array day sca oca specialty training cover array days sca oca specialty training cover array day sca oca average qualification cover array period aca average specialty training cover array period sca aca average specialty training cover array period sca aca average qualification cover array period aca average qualification cover array aca average specialty training cover array sca aca qualification cover array day specific days oca qualification cover array day specific days oca specialty training cover array day specific days sca oca specialty training cover array day specific days sca oca table 
features represent constraint violations case base day period assigned shifts nurse consequently pattern features useful 
features ordinary cover arrays represent values cover violations count nurses shifts count signed shifts 
measure cover single day cover violation takes place days violation days side nurse qualification specialty training 
totals violations take place larger periods days average cover arrays 
defined counting nurses unassigned shifts qualification specialty training 
average cover arrays violations measuring cover period violation period day side early late night shifts 
summarised lines table brevity 
case twelve ordinary cover array features succession violation 
measured days violation separately shifts unassigned shifts specific shift nurse day 
large number features described 
features predicted impact rostering decisions 
feature selection algorithm aims reduce number identify features relevant nurse rostering problem 
genetic algorithm feature weighting selection nearest neighbour distance function retrieval process requires selection features appropriate set feature weights 
effect increase weight particular feature increase influence feature selection process 
decreasing weighting irrelevant features exert influence calculation distance cases increasing accuracy system 
case set equal valued feature weights appropriate case base 
definition set feature weights trivial problem 
manual selection weights difficult task introduce unwanted bias classification process 
automated feature weighting algorithm adaptation ga algorithm proposed kelly davis 
method uses genetic algorithms find optimal set feature weights respect classification accuracy case base 
feature selection effectively extension feature weighting 
feature weights set zero close zero represent corresponding features 
feature selection introduces concept optimal subset features extension optimal set feature weights 
major advantages feature selection reduction dimensionality feature space 
selecting features relevant problem storage requirements case base reduced speed cases retrieved increased 
feature selection algorithm works alongside feature weighting algorithm combination similar suggested 
genetic algorithms optimisation tools concepts natural evolution 
pop ulation solutions manipulated number generations principals natural selection 
solutions represented chromosomes combined produce offspring crossover operations 
crossover operations information parent chromosomes generate new chromosomes 
members population altered generations applying local mutations chromosomes 
members current population selected crossover mutation fitness measure quality solution represent 
members higher fitness selected lower fitness pass solution infor mation generation 
large body literature dedicated theory practice genetic algorithms 
key texts 
problem chromosomes vectors real binary values 
vector split sections 
section contains real valued weights features 
remaining sections represent binary feature selection variables feature 
voting system determine feature selected 
selection variables value associated weighted feature distance function equation feature weight set feature excluded distance function 
sets selection variables effectively smooths fitness landscape reducing impact change selection status feature chromosomes fitness 
violation feature vectors dimension member population represented 
wf 


feature weights feature selection sets point crossover combine parents probability 
operation chooses position chromosomes random creates children swapping parent values right selected position 
children 
xz 
yz crossover point number features children produced crossover 
xc yc 
yz 
yc xc 
xz parents selected crossover roulette wheel selection process 
method individuals selected probability equal proportion calculated fitness contributes sum fitness members population 
chromosomes mutated adding subtracting set amount weights performing operation feature selection variable 
children undergo mutation probability 
elitist strategy chromosome highest fitness passed mutation generation 
fitness individual chromosome calculated normalising weight part chromosome total sum weights equal 
chromosome converted standard weight vector setting weights feature selection variables vote 
weight vector weighted nearest neigh function classification accuracy case base calculated 
initial population filled randomly generated vectors 
feature selection vari ables set randomly bias placed features selected 
feature weights members population vectors normalised mutation crossover op applied 
feature set type violation different algorithm run separately 
result different violation type different set feature weights different subset selected features 
clear advantages treating violations different types separately case base 
intuitive different information needed decisions different types problems separation weighting feature selection allows appropriate emphasis placed relevant data 
results algorithm select features feature weights case base trained expert rostering knowledge nurses 
trained months rosters involving different constraints 
cover early shifts require qualified nurses 
cover early shifts require registered nurse 
cover early shifts require eye trained nurse 
cover late shifts require qualified nurses 
cover late shifts require registered nurse 
cover late shifts require eye trained nurse 
cover night shifts require qualified nurses 
cover night shifts require eye trained nurse 
maximum number consecutive shifts nurses type 
minimum number consecutive shifts nurses type 
succession early shift follow night shift 
totals maximum number hours nurse may days case base contained cases representing different numbers violation type cover succession totals 
comparatively large number cover violations reflects prevalence rosters train case base 
section different approaches feature selection weighting evaluated measuring classification accuracy cbrg method 
feature selections weights generated genetic algorithm simple local search algorithm compared flat equal weighting nearest neighbour function features selected 
local search method applies simple greedy heuristic includes mechanism avoiding local optima 
uses neighbourhood definitions 
generates neighbouring vectors switching selection status feature turn 
second chooses feature random generates neighbouring vectors setting weight feature values discretisation step 
iteration best neighbour selected table 
classification accuracy full initial feature set violation type rca cbrg cbrg ls cbrg ga cbrg ga ls cover succession totals neighbourhoods 
search stops improvement number iterations determined size neighbourhoods 
local search method applied ga generated weight vectors ensure locally optimised 
genetic algorithm run times case base time generations population size 
table shows average standard deviation classification accuracy case base type violation different weighting approaches 
bottom row gives classification accuracy case base account violation types 
rca cbrg columns show random classification accuracy case base calculated times classification accuracy flat weights respectively 
results local search cbrg ls genetic algorithm cbrg ga fourth fifth columns 
final column shows results genetic algorithm followed local search cbrg ga ls 
clear results classification accuracy cbrg method significantly increased applying feature weighting selection algorithms 
results verify flat weighted nearest neighbour similarity measure performs significantly better random selection strategy 
genetic algorithm produces consistently better weight vectors local search method due ability escape bad local optima 
weight vectors produced local search method vary considerably evident larger standard deviations results produced 
furthermore applying local search final solutions produced genetic algorithm increase performance table 
average number selected features full initial feature set violation type cbrg cbrg ls cbrg ga cbrg ga ls cover succession totals vast majority instances 
indicates genetic algorithm capable eventually converging solutions 
noted classification accuracies totals constraint violations signif lower constraint types 
totals violations usually occur larger periods violations typically days 
low classification accuracy reflection difficult nearest neighbour distance measure differentiate different cases data days considered 
improving performance cbrg method totals violations subject going research 
table shows average number features selected best solutions weighting algorithm 
random classification method feature sets included table 
results shown flat weighting original feature set local search method genetic algorithm genetic algorithm followed local search 
feature weighting selection algorithms solutions significantly smaller sets selected features 
genetic algorithm selected slightly features local search 
probably due fact local search features early search may unable re select reducing quality weight vector 
inability escape local optima prohibits performing kind optimisation 
applied final solutions genetic algorithm local search change number selected features instance 
re enforces genetic algorithm capable converging local optima search space 
run took approximately half hour machine intel pentium ghz processor 
large run time part due large number features type violation 
computationally expensive operation algorithm calculation table 
classification accuracy refined initial feature set violation type cbrg cbrg ls cbrg ga cbrg ga ls cover succession totals chromosome fitness 
goal reduce number features stored cases 
reduce runtime operationally feasible levels potentially allow algorithm achieve better classification accuracy re weighting selecting relevant subset 
order test hypothesis round experiments performed refined subset features 
refined sets features determined results initial experiments 
simple selection heuristic applied conditions 
feature retained refined set conditions true 
selected half best performing solutions produced genetic algorithm runs 
selected best solution produced genetic algorithm runs 
new case base created cases included features violation feature vectors 
feature weighting selection algorithms applied new case base 
genetic algorithm run times generations population size 
run algorithm took minutes 
table shows classification accuracy cbrg method flat weights local search genetic algorithm genetic algorithm followed local search 
average number features selected algorithm table 
genetic algorithm outperforms weighting methods violation types 
solutions produced refined set features significantly better solutions produced larger set greatly reduced run times 
classification accuracy cbrg method flat weights improved refined feature set 
table 
average number selected features refined initial feature set violation type cbrg cbrg ls cbrg ga cbrg ga ls cover succession totals fig 

feature weights cover violations local search unable find solutions high quality genetic algorithm difference large 
applying local search genetic algorithm lead improvement fitness violation type 
reduction numbers features selected significant experiment interest half features refined sets selected best solutions 
figures show best set weights discovered genetic algorithm violation type 
violation type observations cover 
solutions produced genetic algorithm large initial feature set displayed high degree homogeneity consequently refined feature set chosen feature selection conditions relatively small 
best solutions runs refined set selected features 
largest weight ass fig 

feature weights violations fig 

feature weights violations fig 

feature weights succession violations fig 

feature weights totals violations percentage assigned hours nurses roster 
indicate order violations repaired captured case base 
early rostering process fewer nurses assigned shifts cover violations easily solved highly qualified nurses 
case process qualified nurses assigned due previous rostering actions 
information qualifications nurses unassigned shifts day violation violation important repairing cover violations 

refinement features carried genetic algorithm second round experiments 
features including refined set selection conditions best solution produced second runs 
important features weighting ass percentage hours assigned nurses type nurse involved violation days outside period violation sca specialty training cover array period violation counting nurses unassigned shift 
shows level shift assignment inside outside violation period repairs violations 
evident specialty training nurses period violation considered 
reflects fact swap operations frequently repair violations 

large number features included refined set selection conditions 
best solution second round experiments selected 
spat received larger weight showing shift pattern nurse violation period important choosing repair 
succession 
features refined set selected best second runs genetic algorithm 
important feature describing succession violation specialty training cover array measured days second day violation counting nurses unassigned shift sca 
bad succession described violations case base night early 
weighting shows repairs considering possibilities swapping early shift nurse unassigned shift possible leaving night shift totals 
features included refined set selected second round experiments 
important ass measures percentage assigned hours outside period violation 
difficult explain result low classification accuracy totals violations indicates relevant features designed 
described method automated selection weighting features case reasoning approach nurse rostering 
genetic algorithm find subset weighted features searching combinations features corresponding feature weights increase classification accuracy case base retrieval method 
increase classification accuracy improves quality repairs generated cbrg method ensuring repair types subsequent nurses days shifts involved appropriate constraint violations repair 
time decrease number features represent cases case base reduces time needed retrieval 
results test genetic algorithm real world data provided insight nature manual nurse rostering 
relative importance features roster making rostering decisions determined 
kind information beneficial researchers developing nurse rostering algorithms 
meta heuristic approaches particular benefit knowledge defining neighbourhood structures evaluation functions 
example information staff qualification levels training considered performing swap operations shifts shift patterns nurses 
case repair generation method enhanced inclusion automatically de feature weights 
fundamental characteristics method ability adapt operational priorities different nurse rostering experts 
automatic weighting feature selection increases ability focusing data important case base experience 
research needed determine nature solution space genetic algorithm particularly frequency local optima proximity 
number mechanisms included genetic algorithm improve ability escape local optima 
efficiency fitness evaluation improved analytically implementing sensible heuristics approximating chromosome fitness 
case methods described thesis easily applied nurse ros tering problems wide range scheduling combinatorial optimisation problems 
problem represented sets constraints repaired simple operators tackled similar approach 
application methods new problem require domain independent knowledge genetic algorithm feature selection weighting greatly speed development process 
research supported engineering physical sciences research council ep src uk number gr queen medical centre university hospital trust nottingham 


interactive constraint nurse scheduler 
proceedings international conference exhibition practical application constraint technologies logic programming 

aha 
tolerating noisy irrelevant novel attributes instance learning algorithms 
international journal man machine studies 

bailey 
integrated days shift personnel scheduling 
computing industrial engineering 

bailey garner hobbs 
simulated annealing genetic algorithms solve staff scheduling problems 
asia pacific journal operational research 

beasley bull martin 
overview genetic algorithms part fundamentals 
uni versity computing 


scheduling staff mixed integer programming 
european journal operational research 

petrovic 
novel approach finding feasible solutions personnel rostering problems 
proceedings th annual conference production operation manage ment society georgia united states 

burke de causmaecker vanden berghe 
hybrid tabu search algorithm nurse rostering problem 
selected papers nd asia pacific conference simulated evolution learning volume volume lnai pages 
springer verlag 

burke de causmaecker petrovic vanden berghe 
fitness evaluation nurse scheduling problems 
proceedings ieee congress evolutionary computation seoul korea pages 

burke kendall soubeiga 
tabu search hyperheuristic timetabling rostering 
accepted publication journal heuristics 

cheng lee wu 
nurse rostering system redundant modeling approach 
technical report department computer science engineering chinese university hong kong 

kathryn dowsland 
nurse scheduling tabu search strategic oscillation 
european journal operational research 

mort reeves petrovic 
handling preferences genetic nurse scheduling problem 
proceedings multidisciplinary international conference scheduling theory applications volume pages 

dasarathy ed 
nearest neighbor nn norms nn pattern classification techniques 
ieee computer society press 

goldberg 
genetic algorithms search optimisation machine learning 
addison wesley 

holland 
adaption natural artificial systems 
mit press 

kelly jr davis 
hybrid genetic algorithm classification 
proceedings international joint conference artificial intelligence pages 

kolodner 
case reasoning 
morgan kaufmann publishers 

kuncheva jain 
nearest neighbor classifier simultaneous editing feature selection 
pattern recognition letters 

meyer auf hofe 
solving rostering tasks constraint optimization 
selected papers rd international conference practice theory automated timetabling lecture notes computer science pages 
springer verlag 

michalewicz fogel 
solve modern heuristics 
springer 

petrovic vanden berghe 
case reasoning employee rostering learning repair strategies domain experts 
technical report tr automated scheduling optimisation planning research group school computer science informa tion technology university nottingham 

petrovic vanden berghe 
storing adapting repair experiences employee rostering 
practice theory automated timetabling iv selected papers volume lncs lecture notes computer science pages 
springer verlag 

punch amd goodman kuhn jain 
dimensionality reduction genetic algorithms 
ieee transactions evolutionary computation 

salzberg 
nearest hyperrectangle learning method 
machine learning 

scott simpson 
case bases incorporating scheduling constraint dimensions experiences nurse rostering 
advances case reasoning ewcbr lecture notes artificial intelligence 
springer verlag 

skalak 
prototype feature selection sampling random mutation hill climbing algorithms 
proceedings international conference machine learning pages 

warner 
scheduling nursing personnel nurse preference mathematical program ming approach 
operations research 

wettschereck aha mohri 
review empirical evaluation feature weighting methods class lazy learning algorithms 
artificial intelligence review 

wren 
scheduling timetabling rostering special relationship 
burke ross editors practice theory automated timetabling volume lncs lecture notes computer science pages 
springer verlag 

