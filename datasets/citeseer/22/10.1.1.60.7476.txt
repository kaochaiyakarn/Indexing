experiences enhancing existing bpm tools bpel import export jan mendling kristian lassen uwe zdun institute information systems new media vienna university economics business administration wien austria 
jan mendling uwe zdun wu wien ac department computer science university aarhus dk aarhus denmark 
lassen daimi au dk 
business process execution language web services bpel de facto standard executable process specifications 
broad industry acceptance bpel forces workflow bpm system vendors consider respective import export interfaces 
existing systems utilize graph bpm languages epcs workflow nets uml activity diagrams bpmn modeling component bpel block oriented language inspired process calculi 
identify transformation strategies reusable solutions mapping control flow graph bpm tools bpel 
furthermore case study applied strategies industry project 
case study shows transformation strategies helpful implementing import export interfaces systematic way easily extended address vendor specific aspects graph bpm tool 
business process execution language web services bpel ws bpel short de facto standard executable process specifications 
bpel standard published oasis systems support bpel including oracle bpel process manager ibm websphere open source system 
overview currently available bpel implementations see 
broad industry acceptance forces workflow bpm system vendors consider bpel support 
basically tool vendors options approach challenge provide native bpel implementation corresponding new modeling tool enhance existing modeling tool bpel import export 
import export option preferable vendors reasons 
quicker easier cheaper implemented native bpel component 
furthermore evolution vendor tool decoupled fig 

graph modeling uml activity diagrams ms visio versus modeling bpel oracle bpel designer potential modifications bpel standard 
experiences went tool valuable asset vendor 
context existing industrial tool option start bpel standard implementation scratch 
desirable enhance existing tool bpel import export 
trade enhancing existing tool bpel import export conceptual mappings identified modeling language bpm tool bpel 
particular mapping control flow nontrivial task especially bpm tool uses graph language 
graphbased languages epcs uml activity diagrams bpmn workflow nets bpm modeling tools handy analysis design phase project 
term graphbased bpm tool refer 
hand processes modeled block oriented fashion similar process calculi 
bpel place block oriented language control flow defined nesting structures sequence flow structured activities 
bpel includes graphbased links flow block 
illustrates graph versus block oriented modeling processes 
representational differences control flow graph bpm tools block oriented bpel major problem implementation bpel import export interfaces 
consider control flow transformation strategies defined solve problem 
section presents available transformation strategies importing exporting bpel graph bpm tools 
section experiences case study utilized transformation strategies implementation export interface commercial graph bpm tool 
tool uses uml activity diagrams modeling component 
discussing related research section give case study section 
transformation strategies graph bpm tools section describe transformation strategies importing exporting bpel respectively graph language epcs bpmn workflow nets uml activity diagrams 
languages support definition sub processes take advantage fact transformation strategies 
idea strategies explicate mapping options bpel graph languages provide formal algorithms adapted specifics graph language 
formal definitions algorithms strategy available 
specific problem mapping bpel graph languages transformation possible 
strategies require structural properties input format satisfied 
table distinguishes structured graphs acyclic graphs 
essentially structured graph uses control flow patterns mapped bpel structured activities 
includes simple loop mapped bpel 
acyclic graph include kind split join conditions long cycle 
implies acyclic graph need structured 
graphs mapped bpel flow permits acyclic links 
furthermore bpel process structured include link elements 
table summarizes input different strategies applicable 
briefly describe transformation strategies import bpel graph bpm tool section export bpel section 
transformation strategy structured acyclic transformation strategy structured graph bpel graph graph graphs bpel graph bpel bpel element preservation flattening element minimization hierarchy preservation structure identification hierarchy maximization structure maximization table 
transformation strategies applicable models exporting bpel graph bpm tool transformation strategies section divided categories preserve graph modeling paradigm mapping bpel flow element preservation element minimization map structured activities possible structure identification structure maximization 
general idea strategy illustrated 
element preservation strategy maps process graph elements flow construct arcs links 
prerequisite strategy process graph acyclic 
bpel flow allowed cycles assign assign graph assign assign element preservation flow link link link empty assign assign target target source element minimization flow link link link assign assign target target source target source source structure identification flow sequence assign assign sequence assign assign fig 

illustration transformation strategies export structure maximization flow link sequence assign assign sequence defined links 
routing elements graph language decision nodes synchronization points mapped bpel empty activities respective join conditions links carrying appropriate split conditions see 
advantage element preservation strategy simple implement resulting bpel similar original process graph correspondence nodes activities 
drawback resulting bpel control flow includes elements needed joins splits translated separate empty activities bpel split join conditions annotated activities 
furthermore resulting bpel difficult read structured activities sequences 
bpel code scenario readability important applied small process graphs elements process graph mapped flow construct 
element minimization strategy simplifies generated bpel code element preservation strategy 
general idea remove empty activities generated joins splits represent splitting behavior transition conditions links joining behavior join conditions subsequent activities 
prerequisite process graph needs acyclic order dead path elimination bpel 
advantage resulting bpel process follows semantics flow construct closely element preservation strategy removes empty activities generated joins splits see 
drawback intuitive identify correspondences process graph generated bpel specification 
strategy scenarios resulting bpel code needs nodes possible 
case runtime performance bpel process matters 
contrast element preservation strategy amount nodes decreased empty activities translated join split nodes skipped 
assign assign target source structure identification general idea transformation strategy identify structured activities process graph apply structural reduction rules defined 
prerequisite process graph needs structured definition described 
advantage strategy control flow translated structured activities see 
regard readability resulting code suitable strategy reveals structured components process graph 
drawback relation original process graph intuitive identify 
transformation strategy appropriate scenario bpel edited bpel modeling tool oracle bpel designer displays process nesting structured activities 
structure maximization general idea strategy apply reduction rules structure identification strategy possible identify maximum structure see 
remaining annotated process graph translated element preservation element minimization strategy 
advantage strategy applied arbitrary unstructured process graphs long loops reduced reduction rules defined 
strategy able translate arbitrary cycles cycles multiple entrance multiple exit points 
drawback strategy structure identification strategy element preservation strategy need implemented 
strategy scenarios models edited bpel modeling tool oracle bpel designer uses structured activities primary modeling paradigm 
importing bpel graph bpm tool transformation strategies importing bpel divided categories bpel structure transformed graph hierarchy flattening strategy graph bpel structure preserved possible hierarchy preservation hierarchy maximization 
general idea strategy illustrated 
flattening general idea strategy map bpel structured activities respective process graph fragments 
nested bpel control flow flat process graph hierarchy see 
strategy prerequisites structured unstructured bpel control flow transformed strategy 
advantage flattening behavior bpel process mapped process graph 
drawback descriptive semantics structured activities get lost 
transformation strategy useful scenario bpel process visually communicated business analysts 
hierarchy preservation strategy maps bpel structured activity sub process hierarchy nested graph processes see 
bpel process flattening hierarchy preservation hierarchy maximization flow link sequence assign assign sequence assign assign target source assign assign assign assign assign assign assign assign assign assign fig 

illustration transformation strategies import nesting structured activities preserved nodes sub process relations 
algorithm defined top way similar flattening strategy 
changes defined transformation structured activities mapped new process graph 
prerequisite strategy bpel code structured links border structured activities expressed subprocess relation 
advantage strategy descriptive semantics structured activities preserved 
furthermore transformation correctly map bpel semantics terminate activities nested scopes 
drawback model hierarchy navigated order understand process 
strategy useful scenario process graphs formally verified mapped back bpel structured activities 
hierarchy maximization disadvantage hierarchy preservation strategy bound structured bpel 
hierarchy maximization strategy aims preserving hierarchy possible applicable structured unstructured bpel control flow 
strategy maps bpel structured activities sub processes links nested cross border activity see 
accordingly strategy prerequisites regarding bpel code structure 
advantage hierarchy maximization structure possible preserved 
transformation logic previous strategies flattening hierarchy preservation needs need implemented realize hierarchy maximization 
case study industry project designed bpel export filter workflow designer uses graph notation uml activity diagrams including product specific extensions 
essence followed element preservation strategy deviated order capture specifics uml activity diagram variant workflow designer 
deviations related start assign assign step node uml activity diagram workflow designer 
assign 
assign 
assign 
assign step actions structure generated bpel export flow link sequence target assign assign sequence empty target assign assign fig 

illustration mixed strategy bpm tool events split elements level modeling concept 
models built workflow designer exactly start node nodes implicit termination semantics 
need represented flow element decided transform bpel 
accordingly arcs connected start nodes mapped bpel links 
workflow designer offers split elements semantics comparable xor split switch nodes alternatives decision nodes multiple alternatives 
decided map elements bpel switch includes empty elements alternative serves source link subsequent activity 
design chosen mapping empty activities order easier distinguish different types splits exported bpel re imported 
furthermore workflow designer offers level modeling approach step nodes similar process graph functions specified sequence multiple step actions 
step nodes part uml model step actions visual representation 
consequence map step nodes bpel sequences nest bpel activities corresponding semantics step actions see 
mapping proprietary concepts workflow designer turned problem 
proprietary concepts include sub workflow elements step actions properties individual visual elements regarding sub workflow concept decided map sub workflow bpel scope nested invoke 
allows define input parameters sub workflow local variables scope represent invocation sub process bpel invoke 
appropriate mapping upcoming bpel spe extension helpful especially variable passing fault compensation handling 
step actions defined class customized number different possible step actions defining local variable inline java code mail sending 
map steps defined generic mapping operation bpel step action class special class overrides operation 
case bpel invoke written output containing name step partner link 
defined mappings number concrete step actions 
instance step action invoking form input partner link set application receiving form input 
inline java code step action transformed snippet 
variable setting step action mapped bpel assign activity 
visual elements workflow designer additional properties 
time conditions escalations influence control flow 
defined special xml namespace properties included attributes respective bpel activity 
map step actions contained step nodes bpel basic activities 
transformation strategies helped find systematic initial approach process transformation workflow designer notation bpel 
useful explaining design decisions 
case study shows transformation strategies mixed 
strategies define ideal prototypical mappings complex product workflow designer case study necessary identify suitable transformation strategy different parts mapping 
addition real world industry product proprietary extensions step actions properties case model elements semantics sub workflows addressed transformation strategies 
require deviations general strategies 
related works transformations bpel graphbased process modeling languages 
highlight refer comprehensive overview 
export bpel graph bpm tool related dedicated model driven development executable bpel process definitions 
conceptual mapping epcs bpel 
authors choose transformation element preservation strategy reason easy implement 
workflow net modeling approach bpel including respective transformation 
similar structure identification strategy workflow nets reduced matching components equivalent bpel structured activities switch pick 
structure identification strategy chosen order generate readable bpel template code executable bpel processes 
takes modeling standards uml bpmn starting point 
bpm specific profile uml generate bpel code 
transformation strategy clear figures suggest author uses element preservation strategy maps sequences bpel sequences 
bpmn specification comes proposal mapping bpel 
bpmn graph bpm language strategies section applied 
subsection bpmn spec presents mapping close structure identification strategy 
mapping prose precise algorithm definition required structural properties missing 
show translation called standard process models bpel 
spm basically reflects commonalities uml activity diagrams bpmn 
authors generate event condition action eca rules activity spm describes event occur condition activity active 
eca translated bpel event handler resulting entire bpel process sequence event handlers invoke 
improve result call activity blocks parts spm things contain splits joins 
improves readability resulting bpel nodes local local bpel 
approach regarded additional strategy transforming graph process models bpel able handle arbitrary cycles 
discussed import export interfaces simple option bpm tool vendors provide bpel support 
identified transformation strategies graph bpm tools bpel helpful predefined solutions problem mapping control flow context 
case study applied transformation strategies implementation export interface commercial bpm tool utilized uml activity diagrams process modeling 
transformation strategies helped find systematic initial approach export 
specifics tool required deviations extensions strategies 
mapping problems motivated envision extensions new bpel version 
utilize bpel specification inline java code envisioned bpel spe extension helpful map sub processes 
vendor specific activity properties escalation considered bpel people extension 
extensions potential facilitate straight forward mapping simpler interchange process definitions bpel 

andrews curbera goland klein leymann liu roller smith thatte weerawarana 
business process execution language web services version 
specification bea systems ibm microsoft sap ag systems 

arkin sid ben bloch francisco curbera yaron goland kartha kevin liu satish thatte prasad alex 
web services business process execution language version 
oasis september 

michael blow yaron goland matthias frank leymann gerhard dieter roller michael rowley 
bpel java 
whitepaper bea ibm 

tracy gardner 
uml modelling automated business processes mapping bpel ws 
proceedings european workshop object orientation web services ecoop 

kiepuszewski arthur ter hofstede wil van der aalst 
fundamentals control flow workflows 
acta inf 

matthias dieter nig frank leymann gerhard alan claus von patrick schmidt 
ws bpel extension people bpel people 
joint white ibm sap july 

matthias dieter nig frank leymann gerhard alan claus von patrick schmidt 
ws bpel extension sub processes bpel spe 
joint white ibm sap 

dieter nig 
ws bpel standards roadmap 
invited talk rd gi workshop xml bpm wi wu wien ac mendling xml bpm ws bpel standards pdf february 

mendling lassen zdun 
transformation strategies graph oriented process modelling languages 
technical report jm wu vienna wi wu wien ac home mendling publications tr strategy pdf october 

dumas ter hofstede 
translating standard process models bpel 
proceedings th international conference advanced information systems engineering caise lncs 

wil van der aalst jens rgensen kristian lassen 
go way requirements colored workflow nets bpel implementation new bank system 
meersman tari editors proceedings coopis doa odbase cyprus lncs pages 

white 
business process modeling notation 
specification bpmi org 

mendling 
epc modelling bpel processes pragmatic transformation approach 
proceedings italy 
