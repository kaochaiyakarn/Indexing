impact inner parameters overlay structure performance bittorrent guillaume keller institut eurecom france adopt simulation approach study performance bittorrent protocol terms entropy qualifies torrent structure overlay distribute content 
find entropy torrent defined diversity characterizes distribution pieces content plays important role system achieve optimal performance 
relate performance bittorrent characteristics distribution overlay built peers part torrent 
results show number connections peer maintains peers fraction connections initiated peer key factors sustain high entropy optimal system performance 
results obtained realistic choice torrent sizes system parameters assumption flash crowd peer arrival pattern 
motivation bittorrent popular applications internet 
focuses content replication swarming techniques content split pieces clients exchange 
popularity stems common belief bittorrent efficient fast replicating content 
number studies focused bittorrent 
experimental works single multiple bittorrent sessions shed lights salient features bittorrent users behaviours 
theoretical studies focused scaling properties bittorrent simplified models protocol 
confirmed built mechanisms bittorrent potential scale 
note modeling piece exchange peers received little attention far 
reason requires keep track bitmaps pieces owned peer torrent bittorrent session 
resulting combinatorial complexity soon explodes number peers increases 
noticeable exception model swarming systems coupon replication systems 
authors focus analysis systems large populations 
simulation approach appealing study dynamics piece exchange bittorrent 
authors simulations investigate scaling behavior protocol homogeneous heterogeneous scenarios 
argue smart seed approach 
approach peers full content seeds upload priority pieces uploaded 
objective increase entropy torrent maximizing variety pieces available torrent 
possible weakness approach pietro michiardi institut eurecom france peer set set peers peer interacts torrent sizes clearly smaller ones current bittorrent clients 
affect typically expects maximize entropy clients connected large number peers torrent 
main objective elaborate dynamics piece exchange torrent 
address issue simulations 
specifically study questions impact key parameters bittorrent dynamics piece exchange 
kind relation exists entropy performance torrent 
kind relation exists structure overlay performance torrent 
focus flash crowd arrival scenario 
observed typical life cycle torrent consists initial flash crowd followed possibly long post period lasts torrent dies 
consider case peers similar characteristics terms upload download capacities 
heterogeneity peer capacity important topic decided focus homogeneous case context expose fundamental characteristics bittorrent context 
note heterogeneity rule internet case corporate context 
ii 
bittorrent overview terminology file sharing applications bittorrent creates dedicated torrent session content 
central entity called tracker maintains list active clients torrent 
new client wants join torrent contacts tracker returns set peers peer set cooperate 
maximum size peer set default maximum size number connections peer allowed establish default 
term outgoing connections connections locally initiated 
content replication swarming file split pieces clients exchange 
algorithms govern behavior peers 
algorithm peer uses elect peers sending data 
set peers elected algorithm called active peer set peer 
second rarest algorithm controls pieces peer request peer 
adopt conventional bittorrent terminology client downloading file called client completed download termed seed 
iii 
simulator overview runs rounds round peer transfers pieces peers active peer set 
round lasts seconds 
note seconds typical duration calls algorithm bittorrent clients 
mode algorithm implemented follows 
sorts peers receives data rate offer 
unchoke send data peers default 
rounds peer chosen random joins active peer set 
called optimistic unchoke 
practice optimistic unchoke round sends data peer average 
seed state algorithm similar state peers sorted receiving rates 
assume bottlenecks peers 
model delay jitter routing failure effect 
allows concentrate mechanisms bittorrent obscuring results complex low level network effects 
simulation time directly depends number peers torrent 
shelf machine ghz processor gb main memory takes approximately hours simulate torrent clients 
larger torrents simulation times quickly explodes 
believe results peers allow get insights actual performance bittorrent internet argue section 
peers arrivals iv 
scenarios explained section focus flash crowd scenarios 
assume peers join simultaneously torrent round initial seed consider variants flash crowd term serial flash crowd random flash crowd 
assume peers numbered peer initial seed 
serial flash crowd scenario peer allowed establish outgoing connections peers random flash crowd case peer allowed connect peer constraint maximum number outgoing connections 
serial flash crowd scenario mimics happens real torrent tracker returns peer list addresses randomly chosen peers joined far 
random flash crowd realistic 
serve illustrate impact structure bittorrent overlay performance protocol section vii 
assume seed remains torrent downloads completed 
assumption realistic case torrents internet 
note situation different corporate context 
adopted convention ease comparison different parameter choices bittorrent 
clients capacities consider files consisting pieces kbytes 
consider scenario similar 
content replicated file size mbytes 
initial seed upload capacity mbits leechers upload capacity kbits download capacity mbits torrents characteristics simulator optimized study performance torrents thousands clients 
reason focus larger torrent sizes believe torrents internet consist active clients time instant 
support claim collected data torrents advertised website 
collected categories content movies music tv applications description torrents category torrents sorted age 
filtered torrent leechers seed 
ended having torrents category 
plot distribution torrent sizes category 
observe instantaneous torrent sizes range peers 
similar observations torrent size distributions 
plotted sizes content downloaded time considering torrents non active ones 
results plotted 
observe expected movie tv categories generate largest content sizes 
mass located range mb gb 
cdf number peers movies tv music app instantaneous torrent sizes cdf fig 

movies tv music appli file sizes mb content sizes fundamental parameters section investigate impact key parameters control bittorrent overlay structure 
parameters peer set size ps percentage outgoing connections oc peer establishing arrival torrent 
considered active peer set size aps 
variations observed tuning parameter significant tuning ps oc 
leave depth study parameter 
objective investigate ps oc affect performance protocol constraint realistic values implementable bittorrent client 
consider values 
note difficult client consistently connected peers depending churn rate torrent 
oc value possible 
observe performance worsens oc greater default value protocol 
focus oc values smaller 
simulation results section obtained serial flash crowd scenario 
compare impact system parameters consider performance metrics average time download file maximum time download file 
depending context metrics importance 
instance bittorrent corporate context patch softwares set machines maximum completion time critical parameter 
internet side prefer consider average completion time 
apply classical strategy varying single parameter keeping constant 
set parameters perform independent simulations results averaged sample paths 
table results different values torrent size 
observations table consistently results worse performance values confirming rarest policy job clients connected large number peers torrent results relatively insensitive different parameter values 
important result torrents clients common internet see section iii 
optimizing average download time roughly equivalent optimizing maximum download time 
significant performance improvements achieved values significantly differ default ones clients 
tuning oc impact tuning ps instance best performance obtained oc 
note observe cases takes quite long time client complete download esp case oc decreased table maximum value download time th percentile distribution 
leave investigation phenomenon 
results obtained section indicate informed choice parameters bittorrent lead significant performance increase 
raise question ps mean max oc mean max ps mean max oc mean max table impact fundamental parameters bittorrent extend performance increased 
clearly optimal performance obtained peers fully continuously utilize upload capacity 
formalize notion section investigate relation optimum performance entropy torrent 
vi 
performance vs entropy objective section introduce metric performance bittorrent relate piece replication process protocol 
main finding achieve best performance bittorrent ensure peers approximately number pieces time pieces equally replicated torrent 
introduce metric depict dynamics torrent discuss results key scenarios 
metrics metric utilization total upload capacity torrent time 
peers torrent respective upload capacities ui 
ri actual upload rate peer round utilization round ri ui typical utilization graph exhibits different periods warm period peers obtain pieces 
phase utilization ramps low utilization values large ones say 
central period peers torrent initial seed leechers 
utilization consistently equal close means performance optimal peer finds round peer exchange pieces full rate 
termination phase leechers seeds 
phase utilization decreases sharply due fact leechers seeds possible connect leechers connected exactly ps peers 
observe download time spans relatively large relatively small range values 
case suggests leechers evolved similarly torrent lifetime receive piece approximately time 
condition hold necessary pieces gracefully distributed peers 
evaluate pieces replica distributed time torrent introduce entropy metric consisting pair variables 
coefficient variation cov cumulative number pieces obtained peer time cov peer 
second cov number replica pieces uploaded initial seed round cov replica 
low values metrics indicate number replica pieces torrent roughly peer roughly number pieces 
shapes cov peer curves figures typically consist initial peaks followed decaying tails 
initial peaks result discrepancy upload capacity initial seed peers peer set 
takes significant number rounds peers receive pieces initial seed redistribute peer set 
time passing discrepancy impact peers engaged distribution pieces 
consequence cov peer values decrease reaching zero peers completed download file 
shapes cov replica curves exhibit initial peaks due pieces initially available replication peers peer set initial seed constitute bottleneck torrent 
similarly previous case phenomenon vanishes time passing pieces available served peers 
scenarios results consider scenarios scenario bs baseline serial flash crowd ps oc scenario oc small oc serial flash crowd ps oc scenario ps small large ps serial flash crowd ps ps oc scenario rd random random flash crowd ps 
investigated performance scenarios 
due space limitation concentrate 
trends results similar ones 
scenario bs baseline scenario default values bittorrent protocol 
figures results scenarios 
observations figures scenarios bs oc rd exhibit similar behaviors cov peer cov replica metrics 
scenario ps small ps value inefficient central period leads longer completion times 
note results larger cov peer cov replica metrics values 
coefficient variation ratio standard deviation mean distribution 
roughly speaking expresses variability distribution mean unit 
direct relationship achieving utilization consistently close maximizing entropy minimizing cov values 
means achieve best bittorrent ensure peers approximately number pieces time pieces equally replicated torrent 
conditions roughly consistently met time peers complete download close time 
confirmed observe short sharp termination phases scenarios ps oc compared scenario bs 
scenario rd default values protocol kept technique build overlay differs achieves performance close ones scenario oc 
result note scenario rd apparently performs slightly worse scenario oc warm period consequence offer slightly larger completion times 
study entropy cov peer cov replica curves reveal significant differences scenarios 
major difference lies structure overlay investigate relation performance overlay structure section 
efficiency sc 
bs sc 
oc sc 
ps sc 
rd round utilization cov replica cov peer sc 
bs sc 
oc sc 
ps sc 
rd round cov number pieces peer sc 
bs sc 
oc sc 
ps sc 
rd round cov number replica pieces fig 

vii 
performance vs overlay structure focus section relation performance bittorrent structure overlay 
observed section vi scenarios oc rd differ warm phases 
phase scenario oc faster scenario rd addition scenarios faster scenario ps 
outperform scenario ps central phase see 
main result section structure lesser extend distances peers overlay efficiency sc 
bs sc 
oc sc 
ps sc 
rd round utilization cov replica cov peer sc 
bs sc 
oc sc 
ps sc 
rd round cov number pieces peer sc 
bs sc 
oc sc 
ps sc 
rd round cov number replica pieces fig 

directly impact performance bittorrent 
focus warm period 
sight warm period appear function distance peers initial seed distance defined minimum number hops peer peer reach seed 
peers directly connected initial seed distance 
peers directly connected peers distance distance distance peers connected seed peer set intuitively closer peers initial seed sooner receive piece start uploading content 
distances initial seed table ii average maximum distances scenarios oc ps rd 
smallest values metrics obtained scenario rd model seed connected peers peers connected ps peers chosen random remaining peers torrent 
distance seed 
collisions peers electing peer peer set drawings prevent reach large compared peers distance 
observe table ii 
scenarios oc ps achieve general larger average maximum distances rd serial flash crowd model 
arrival model peer allowed connect peers results larger distances seed peers integrated overlay confirmed table ii 
observe table ii scenario ps distances clearly large compared scenarios 
surely explains bad performance scenario compared ones see 
main draw table ii large distances initial seed clearly leads long warmup periods small distances sufficient condition achieve small warm periods 
scenario rd consistently offers smaller comparable distances seed scenario oc offers slightly longer warm phases 
case scenario ps smaller distances scenario oc warm period longer values focus overlay structure better understand performance scenario oc 
matrix connections show figures matrix connections peers scenario oc ps respectively 
matrix connections graph dot coordinates peer peer set peer see clear difference matrices 
plot corresponding matrix case scenario rd similar scenario oc uniformly shaded due randomization technique build overlay 
scenarios oc rd distinct peers distance initial seed scenario ps explains better performance 
peers distance important initial seed upload pieces peers active peer set larger fan peers replication power upload capacity system quickly replicate content 
take concrete example imagine initial seed delivering piece peer piece peer significant overlap peer sets globally upload capacity pieces 
happens scenario ps average number peers distance 
contrast scenario oc resp 
rd obtain resp 
peers distance 
point explain scenario oc slightly outperforms scenario ps warm phase 
main difference overlay obtained scenario oc overlay obtained scenario ps scenario oc peers connected initial seed peer sets 
peers query piece initial seed 
downloading piece times seed inefficient especially initial seed uploaded copy piece file 
note lot blocks compared number peers birthday paradox see tells probability collision peers choosing piece negligible 
viii 
simulation approach revealed size peer set ps fraction outgoing matrix considered static hypothesize simulations peers stay torrent peers complete download 
simulation connections broken established peers seed disconnect seeds connected look leechers service 
mean max mean max sc oc sc ps sc rd mean max sc oc sc ps sc rd matrix connections scenario oc table ii distances initial seed fig 

matrix connections scenario ps connections peer allowed establish oc significantly impact performance torrent 
delving actual piece transfer highlighted relation optimizing performance maximizing entropy torrent 
depth comparison ps oc revealed decreasing oc efficient increasing ps 
best knowledge shed light crucial impact oc parameter 
demonstrated structure overlay created bittorrent directly impacted choice parameters actual difference overlay structure obtained tuning ps oc explains outperforms 
observed best combinations parameters result optimal utilizations consistently close capacities peers torrent 
achieved change piece selection algorithm 
especially saw little need simulations smart seed technique advocated 
intend study heterogeneous scenarios 
consider case selfish users leave torrent soon download completed 
note simulation results obtained provide partial answer issue 
best performance obtained cases entropy maximized early departure seeds harmful replicas pieces gracefully distributed leechers remain torrent 
allen probability statistics queueing theory computer science applications academic press professional san diego ca usa 
bharambe padmanabhan analyzing improving bittorrent performance proc 
infocom april 
guo chen xiao tan ding zhang measurements analysis modeling bittorrent systems proceedings acm sigcomm internet measurement conference imc 
keller biersack felber garc dissecting bittorrent months torrent lifetime passive active measurements april 
keller michiardi understanding bittorrent experimental perspective technical report inria version july inria sophia antipolis july 
coupon replication systems sigmetrics pp 
new york ny usa acm press 
bittorrent file sharing system measurements analysis proc 
iptps february 
qiu srikant modeling performance analysis bittorrent perr peer networks proc 
sigcomm august 
yang de service capacity peer peer networks proc 
infocom march 
