tr online multi path routing maze stefan christian heinz institute university paderborn germany sr uni paderborn de september consider problem routing message mesh network faulty nodes 
number positions faulty nodes unknown 
known flooding strategy expanding ring search route message linear minimum number steps causes traffic total number messages 
optimizing traffic single path strategy optimal producing traffic number border nodes neighbored faulty nodes 
deterministic multi path online routing algorithm delivers message steps causing traffic log 
comparative combined ratio log log variant algorithm improves known bound log log 
combined comparative ratio minimum comparative traffic ratio defined quotient competitive time ratio quotient dfg automatic configuration open systems supported dfg massive algorithmen anwendungen eu th framework programme contract dynamically evolving large scale information systems overview sending message fundamental feature communication networks 
consider mesh dimensional communication networks 
networks asics application specific integrated circuits fpgas field programmable gate arrays processor grids wsns wire sensor networks manets mobile ad hoc networks 
networks nodes may fail may unavailable 
node failure noticed neighbors 
straight forward approach regularly test neighbors node collect data distribute map failed working nodes network 
investigate approach knowl edge available message way 
environment explored online initiated processors try transmit message destination 
course lack global information increases delivery time induced message traffic number node node transmissions 
due lack global information routing problem states online problem 
worst case scenario lack knowledge impedes efficient message transmission 
situations fast transmission guaranteed node spreads message neighbors message floods complete network 
results tremendous increase traffic 
compared shortest path single path online algorithm match optimal algorithm worst case scenarios traffic proportional number border nodes inevitable border nodes nodes adjacent faulty nodes 
online routing algorithms deliver messages steps shortest path source target 
interestingly traffic optimal algorithms single path algorithms time time optimal algorithms parallel multi path algorithms expanding ring search time traffic worst case setting 
interested optimizing time traffic time 
expect trade situation measures 
research shows algorithms approximate offline time bound optimal online traffic bound factor rs time 
quotient comparing offline time bound called competitive time ratio quotient comparing traffic bound optimal online algorithm called comparative traffic ratio 
subsequent showed bounds improved polynomial bound term log log log rs 
achieve break line research showing factor log 
specifically deterministic algorithm delivers message multi path route time traffic log log 
shows log tradeoff time online traffic marginal polylogarithmic factor 
furthermore route message asymptotically fast flooding cause traffic increase factor log compared traffic optimal online algorithm 
organized follows 
continue section presenting related research pre senting basic definitions techniques formally 
section formal definition competitive comparative ratios 
section algorithm starting overview description components 
section analysis time traffic performance algorithm concludes 
related routing faulty networks studied various aspects 
similar model za zk investigate routing problem dimensional meshes store forward model 
routing algorithm constructing fault free rectangular clusters offline pre routing stage 
connections clusters stored graph routing stage 
wu wu presents algorithms dimensional meshes local information need pre routing stage 
faulty regions mesh assumed rectangular blocks 
wj wu jiang distributed algorithm constructs convex polygons arbitrary fault regions excluding nodes routing process 
advantageous wormhole routing model helps reduce number virtual channels 
deal virtual channels deadlock freedom consider store forward model 
faulty mesh networks studied field parallel computing cole cms 
ability network tolerate faults emulate original network studied 
general goal construction routing scheme performing online path selection 
bose bm bbc study online routing problem triangulations convex subdivisions planar graphs convex faces 
show deterministic memoryless single path algorithm triangulations 
triangulations traversed greedy algorithm local minima 
show deterministic memoryless routing algorithm convex subdivisions 
relation online routing position routing evident 
position routing reactive routing wireless networks nodes equipped positioning system message forwarded direction target see survey 
due limited range radio transceivers local minima messages routed void regions analog fault regions mesh network 
various single path strategies ksu 
position strategies mainly analyzed worst case setting void regions constructed connections form labyrinth 
case benefit single path strategy traffic efficiency compared flooding ceases 
analyzing time competitive manner including perimeters fault regions express performance worst case point view 
online routing related online navigation task guide robot start point target scenario unknown obstacles 
analogous position routing problem possibility duplicate messages networks 
motion planning problem unknown environment known online searching see ber survey 
addressed stepanov ls performance navigation strategies de obstacles scenario 
proposed strategies suitable traversing mazes 
cases position routing strategies known right hand rule keeping right hand touch wall find way maze 
see lum overview maze traversal algorithms 
analog network model rectangular fault blocks described wu robot navigation strategies obstacles rectangular polygonal shape 
competitive analysis algorithms yannakakis py blum raghavan schieber brs ratio length path chosen algorithm shortest barrier free path considered perfor mance measure 
complies common definition competitive ratio 
stepanov ls angluin westbrook zhu modified competitive measure uses sum perimeters obstacles scene optimal path length benchmark 
competitive ratio length routing path 
length regarded routing time 
induced traffic comparative measure credits cost exploring new obstacles fact online algorithm pay algorithm see section 
improves previous results authors rs algorithm uses single path search strategy flooding alternatingly combined comparative ratio 
reduction ratio log log log achieved algorithm uses grid subdivision search area floods grid squares speed flooding needed justified barriers rs 
problem studied strong relation online search navigation problems 
clear unbounded parallelism modelled robot navigation problems reasonable way usually navigation strategies considered constant number robots 
consider mesh network faulty parts underlying model enables study impact parallelism time needed reaching destination 
basic definitions techniques consider dimensional mesh network faulty nodes 
network defined set nodes set edges vx wx vy wy 
node identified position vx vy mesh 
restriction size network analyze time traffic respect position start target node network 
see major impact efficiency routing algorithm size network 
assume synchronized communication message transmission neighboring node takes time step 
multi hop communication assume messages transported store forward fashion 
assume nodes fail message transported node take message break 
global knowledge faulty nodes 
adjacent nodes determine node faulty 
barriers borders traversals network contains active functioning faulty nodes 
faulty nodes orthogonally diagonally neighboring form barrier 
barrier consists faulty nodes connected overlapping barriers 
active nodes adjacent faulty nodes called border nodes 
nodes neighborhood orthogonally diagonally barrier form perimeter path barrier counter clockwise order called right hand left hand traversal path border node visited nodes perimeter 
perimeter size barrier number directed edges traversal path 
total perimeter size bi 
perimeter size number steps required send message border node barrier back origin border node barrier visited 
reflects time consumption finding detour barrier 
competitive time ratio time number steps needed algorithm deliver message equivalent length path message takes 
compare time algorithm optimal time leads competitive ratio 
called competitive analysis known field online algorithms 
definition algorithm competitive ratio ca copt set instances problem ca cost algorithm input copt cost optimal offline algorithm input 
compare time algorithm length shortest path target 
note shortest path uses non faulty nodes 
definition length shortest barrier free path source target 
routing algorithm competitive time ratio rt message delivery performed steps 
comparative traffic ratio traffic number messages algorithm produces 
regarding traffic comparison best offline behavior unfair bound reached online algorithm 
define comparative ratio class instances problem modification comparative ratio introduced koutsoupias papadimitriou kp see definition rs definition algorithm comparative ratio :10.1.1.23.97
pn max ca min ip max cb ip set instances described parameter set ca cost ip algorithm cb cost algorithm class online algorithms definition address difficulty caused certain class scenarios described terms parameters instance online traffic bound maxx cb 
note choice scenario find optimal offline algorithm maxx cb requires modification comparative ratio kp order obtain fair measure :10.1.1.23.97
online lower bound traffic define comparative traffic ratio 
definition length shortest barrier free path source target total perimeter size 
routing algorithm comparative traffic ratio rtr algorithm needs altogether messages 
combined comparative ratio time efficiency traffic efficiency definition combined comparative ratio maximum competitive time ratio comparative traffic ratio rc max rt rtr basic strategies simple single path strategy barrier traversal algorithm follow straight line connecting source target node 
barrier way traverse barrier remember points straight line crossed resume step crossing point nearest target 
algorithm needs steps length shortest barrier free path sum perimeter lengths barriers 
bound holds traffic single path strategy 
show traffic bound optimal 
straightforward multi path strategy expanding ring search start flooding restricted search depth repeat flooding doubling search depth destination reached 
strategy asymptotically time optimal causes traffic regardless presence faulty nodes 
algorithm algorithm just time exploration 
give overview describe detail important part fast exploration 
overview algorithm starts search area consisting connected quadratic subnetworks environment see 
path target contained squares search area enlarged doubling edge length squares target reached search area expansion 
iteration search expansion modified breadth search bfs started 
expanding ring search algorithm flood area exploration strategy parts network examined visited bfs 
part consider quadratic subnetworks contains barriers traversed easily single path 
subdivided examined multiple paths 
way exploration strategy decides paths bfs 
iteration search depth restricted log edge length top level frame 
exploration takes time bfs slowed constant factor regions proximity leafs bfs tree explored time 
call strategies slow search fast exploration 
consider paths selected exploration strategy 
start initial grid consisting squares 
traverse borders squares called frames order find way target 
barriers intersecting frames paths interior squares 
left hand right hand traversal barriers may produce path longer shortest path 
keep overhead small try traverse interior square bounded time depends frame size 
possible subdivide square smaller squares try traversal 
recursive subdivision yields paths bfs contains approximation shortest path 
exploration process triggered bfs 
leaves bfs tree define border examined area 
call border shoreline 
shoreline starts delay time exploration initial frames 
shoreline uses partitions frames explored contain barriers simple partitions 
shoreline enters frame triggers exploration neighboring frames 
exploration performed proximity shoreline squares explored just time 
size frames explored proportional distance shoreline 
ensures time exploration bfs slowed constant factor time needed exploration proportional size square 
fast exploration bfs uses borders quadratic subnetworks called frames examined exploration process 
definition frame mesh set framing nodes vg vx vy 
exploration process examines frame starting traversal frame nodes border nodes nodes adjacent barrier nodes frame partitioned barrier refer partition frame enclosed frame nodes barrier nodes see 
right hand traversal path partition frame path containing frame nodes partition border nodes adjacent barriers nodes visited counter clockwise order 
call partition frame simple intersected complicated barriers 
require fraction frame nodes side frame accessible barrier nodes 
barrier frame partition partition frame defined right hand traversal initial frames subdivision definition partition frame simple partition contains frame node right hand traversal path starting contains border nodes 
subdivision frame constructed follows contains partition simple subdivide equally sized sub frames apply rule recursively sub frames 
subdivision called perfect contains frames side length intersected barrier 
frame exploration algorithm exploration started frame nodes informed 
nodes called entry nodes 
exploration frame basically consists round trip communication frame node injects traversal messages sent right hand traversal path left hand traversal path frame barriers intersect frame circular tour interior frame 
ideal case message returned sender 
hand complicated barriers prevent forwarding 
want avoid long traversal paths barriers 
allow detour steps message steps 
sufficient checking criterion simple partitions 
hand exploration frame started single frame node 
find mechanism concurrent exploration processes 
need round collect information distribute participating nodes 
st round wake entry node generates traversal message called wake mes sages 
wake message stops encounters entry node started message type travels steps 
frame node counter clockwise order left upper corner exploration node initiates traversal second round 
entry node receive wake message time steps proof barriers 
reverse true 
original message returned originating entry node proves current partition simple 
note message stopped entry node unclear case true 
nd round count exploration node triggered wake message round generates counting messages 
messages travel clockwise counter clockwise border nodes 
meet counting frame nodes partition simple see def 

message traverses checks frame steps 
partition simple messages travel time meet side 
rd round partition simple message produced 
lack third second round message entry nodes current partition notice partition simple 
square subdivided sub squares size 
third message sent inform nodes simplicity partition subdivision stopped 
message available border nodes time happen rounds part shoreline enter frame side trigger subdivision 
see shoreline need enter simple partition 
shoreline exploration smaller frames stopped messages 
contrary exploration smaller frames stops messages 
th round close third round messages meet frame closed 
means exploration smaller frames current explorations parts shoreline entered frame side cut frame border 
simplicity assume nodes explored interior flooding message stops progress fact see precaution necessary long interior processes interfere outside frame 
part shoreline frame border continue flooding frame border 
simple partition checked steps 
th round notify fifth round begins shoreline enters simple partition explored 
exploration neighboring frames initiated 
purpose notification messages sent trigger frame nodes neighboring frames order start exploration 
messages stopped messages type 
frame nodes border unexplored frames new entry points 
fifth message gives estimation shoreline reach point latest 
time notify message needs reach new entry nodes counted frame size neighbor frame chosen smallest power analysis analyze time traffic algorithm separately 
time time behavior measure time shoreline needs reach target 
rely fact shoreline proceeds explored frame nodes notify messages trigger entry nodes explore frames 
exploration done time size frame chosen time succeed worst case unit square explored 
shoreline proceeds frames simple partitions investigate length shortest paths partitions 
lemma mesh frame nodes shortest barrier free path connecting perfect subdivision mesh contains path length 
proof observe recursive subdivision produces fine grained grid proximity barriers nodes adjacent barrier part grid 
part goes barrier part contained grid 
part goes open space part grid replaced path frame 
largest detour caused original path enters frame center side leaves center opposite side enlarges original path factor 
square shoreline delayed barriers 
crucial know maximum number squares size described lemma 
lemma length path number squares edge length intersected path 
proof order determine number squares consider model somebody travels path 
charge square 
enters square pay charge 
reasonable compensation receives mileage allowance 
determine mileage allowance guaranteed obtain estimation maximum number squares visit 
consider squares edge length level squares 
square costs dollar 
fix mileage allowance rate dollars edge length 
traveller starts dollars 
order focus relevant aspects look borders squares especially corners 
moving plane limit scope quadratic area corner level squares center 
depicted dashed square 
touches border scope changes vertically horizontally 
visited squares marked shaded 
visited square scope ignore mark 
possibly pay twice square 
financial strength allows pay extra cost suffice case 
shows cases possible arrangements marked visited unmarked squares scope 
arrangements equivalent cases sym 
transitions cases occur crosses horizontal vertical borders scope 
easily see transitions lead case square visited case squares visited 
transitions cases written horizontal vertical borders scope 
amount money possess point specified 
case joint corner unmarked squares 
needs dollars reaching point 
border scope needs dollars way center scope limited square case occur mark ignored scope changes illustrations proof lemma 
marked squares visited shaded 
transitions denoted arrows 
numbers show costs certain positions 
receives mileage allowance 
note distance border scope center half edge length distances respect manhattan metric mileage allowance dollar paid 
see specified financial requirements agree mileage allowance dollars edge length cases 
fifth case applies initial situation observe visited square scope 
case seed capital dollars required pay charge unmarked squares 
altogether path length need amount dollars 
shoreline uses borders simple partitions 
lemmas show shoreline ap shortest path traversal paths simple partition frames 
lemma path length 
subdivision mesh contains path length log consists traversal paths simple partitions frames proof path visits frames size know lemma 
construct path follows 
construct shortest path perfect subdivision add detour barriers frames 
frame size adds detour length 
consider frames size 
length term log log log rely fact shoreline approximates shortest path 
bound number iterations search area expansion 
iteration search depth doubled time iteration decisive prove time bound follows 
theorem length shortest path connecting algorithm finds path time log 
proof search area expanded log log iteration 
iteration shoreline starts delay time exploration top level square 
search depth restricted log node distance reached see lemma 
speed shoreline slowed factor 
iteration information target sent back source 
messages take reverse paths defined shoreline 
traffic time log log log log log traffic note algorithm starts stays square field field size rounded power 
traffic depends number subdivision done field 
lemma tells frame subdivided extra traffic avoided 
lemma simple partition frame subdivided smaller frames 
orthogonally neighboring frames subdivided size contain simple partitions 
diagonally neighboring frames subdivided size simple partitions 
contain proof simple partition partitioned exploration messages border nodes 
possibility subdivide partition occurs shoreline sends notify message entry node travels short 
may time explore square subdivided 
prove case 
shoreline enters orthogonally neighbored frames size distance square time see fig 

time notification entry point square exploration takes time steps close message succeeds 
algorithm chooses frame size entry nodes simple partition exploration completed shoreline enters inequality true 
claim follows slow factor shoreline 
square subdivided neighboring squares may subdivided larger factor neighbored square barriers may 
barrier caused subdivision pays subdivision neighboring squares 
worst case neighboring squares times larger subdivided squares cause subdivision square times larger see 
extra cost adds constant factor traffic exploring square 
note neighboring frame subdivided subdivision barriers caused subdivision 
theorem algorithm produces traffic log 
proof consider traffic caused exploration squares 
assume border nodes total 
square subdivided contains border nodes 
squares subdivided sub squares 
sub square causes exploration cost rounds shoreline replies 
square visited times exploration recursive subdivision subdivision black square triggers subdivision shaded squares barrier shoreline enters square quadratic node 
exploration square finished shoreline enters traffic top level square size subdivision iteration search area expansion follows 
log tr log log note search square contains shortest path source target approximated simple partitions 
get iterations search area expansion bound tr log log log tr log log log log corollary log algorithm constant competitive time ratio compar ative traffic ratio log 
combined comparative ratio log 
open problems solve open problem efficient online routing meshes faulty nodes 
algorithm route message asymptotically fast fastest algorithm term log messages number faulty nodes obstructing messages plus minimal path length 
considerably improves known factors rs previously log log log rs 
achieved combining techniques 
idea ex ring search doubling search depth search area 
causes iterative retransmission message 
iteration establish adaptive grid frames denser barriers 
grid slowly proceeding shoreline simulates flooding mechanism 
shoreline triggers just time exploration new frames shoreline 
combination techniques lead algorithm needs time log traffic log may chosen log denotes length shortest path denotes number border nodes adjacent faulty nodes 
open problems gives rise open question bounds tight small tradeoff time traffic 
routing time times slower shortest path source target 
achievable decrease constant factor asymptotic increase traffic 
clear 
chance improvement randomized algorithms problems outperform deterministic online algorithms 
straight forward generalization problem dimensional meshes faulty nodes 
algorithm straight forward generalization causes significant increase traffic 
question online routing higher dimensions wide open 
dana angluin jeffery westbrook zhu 
robot navigation range queries 
proc 
th annual acm symposium theory computing pages 
bbc bose andrej carlsson erik demaine rudolf fleischer alejandro lopez ortiz pat morin ian munro 
online routing convex visions 
proc 
th international symposium algorithms computation isaac lncs pages 
springer verlag 
allan borodin ran el yaniv 
online computation competitive analysis 
cam bridge university press 
ber piotr berman 
line searching navigation 
amos fiat gerhard ger editors online algorithms state art volume lecture notes computer science pages 
springer 
bm bose pat morin 
online routing triangulations 
proc 
th ternational symposium algorithms computation isaac lncs pages 
springer verlag 
bose pat morin ivan stojmenovic jorge urrutia 
routing guaranteed delivery ad hoc wireless networks 
wireless networks 
brs avrim blum prabhakar raghavan schieber 
navigating unfamiliar geo metric terrain 
siam journal computing 
cms cole maggs sitaraman 
reconfiguring arrays faults part worst case faults 
siam journal computing 
kp elias koutsoupias christos papadimitriou :10.1.1.23.97
competitive analysis 
siam journal computing 
ksu evangelos kranakis singh jorge urrutia 
compass routing geometric networks 
proc 
th canadian conference computational geometry pages vancouver august 
fabian kuhn roger wattenhofer aaron 
asymptotically optimal ric mobile ad hoc routing 
proceedings th international workshop discrete algorithms methods mobile computing communications pages 
acm press 
ls vladimir alexander stepanov 
path planning strategies point mobile automaton moving amidst unknown obstacles arbitrary shape 
algorithmica 
lum vladimir 
algorithmic complexity issues robot motion uncertain environment 
complex 
mauve widmer hartenstein 
survey position routing mobile ad hoc networks 
ieee network magazine november 
py christos papadimitriou yannakakis 
shortest paths map 
proc 
th int 
colloq 
automata languages programming icalp pages 
elsevier science publishers 
rao shi 
robot navigation unknown terrains intro survey non heuristic algorithms 
rs stefan christian 
competitive time traffic analysis position routing cell structure 
proc 
th ieee interna tional workshop algorithms wireless mobile ad hoc sensor networks ipdps page 
rs stefan christian 
online routing faulty mesh networks sub linear comparative time traffic ratio 
proc 
th european symposium algorithms esa lncs pages 
springer verlag 
wj jie wu zhen jiang 
extended minimal routing meshes faulty blocks 
proc 
st intl 
workshop assurance distributed systems applications conjuction icdcs pages 
wu jie wu 
fault tolerant adaptive minimal routing mesh connected multicomputers extended safety levels 
ieee transactions parallel distributed systems february 
zk lev mark 
fault tolerant message routing multiprocessors 
parallel distributed processing pages 
springer 

