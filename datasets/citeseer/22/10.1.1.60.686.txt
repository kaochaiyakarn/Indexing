evaluation efficient link reliability estimators low power wireless networks alec woo david culler culler cs berkeley edu real time wireless link reliability estimation fundamental building block self organization multihop sensor networks 
observed connectivity low power chaotic unpredictable wireless lans available resources severely constrained 
seek estimators react quickly large changes stable small memory footprint simple compute 
create simple model generates link loss characteristics similar empirical traces collected different contexts 
model simulate variety estimators uses simple exponentially weighted moving average ewma estimator basis comparison 
find propose flip flop estimators superior 
cascaded ewma windowed averaging effective 
vast networks low power wireless devices sensor networks raise family challenges variants classical problems qualitatively new setting 
question link loss rate estimation observed packet arrivals 
traditionally problem addressed contexts determining degree error coding redundancy expected number retransmissions link 
sensor networks arises part network self organization 
network comprises large number resource constrained nodes communicating low power radios transmission node potentially heard small subset network 
observing packets nodes performing set local rules may generate additional packets network form maintain multihop routing topology support higher level communication pattern data aggregation specific node 
example sink node announce desire receive data depth zero 
nodes receive packet determine depth start generating packets carry depth node number data 
periphery depth nodes learn nodes depth start sourcing data sink 
packets routed nearer nodes 
node hears packets neighbors choose smaller depth parent route traffic hop 
progressively distant nodes learn parents spanning tree formed continually maintained data flows sink 
route obstacles find alternative paths nodes fail join 
problem elegant simple algorithm variants low power radio communication highly variable due external sources interference spectrum contention nodes multipath effects obstructions changes environment node mobility 
result hear relation radio cell binary static 
perspective node set nodes hear loss probability nodes varies abruptly time large magnitude 
perfect knowledge environment variations extremely hard predict 
general think wireless connectivity statistical relationship pij representing probability successful packet transmission node node time generally falls distance uniformly 
geographically nearby nodes may poor connectivity large field nodes node far away hear clearly due positive interference 
simply hearing packet basis determining nodes connected 
shortest path tree formed rule typically include long hops low link reliability 
better take hops better typically shorter links 
node keeps track set nodes hears packets addressed packets channel builds statistical model connectivity 
gain estimate pij node packets hears hear set neighbors connectivity graph defined 
example may consider node neighbor probability communication exceeds threshold say 
connectivity necessarily symmetric nodes broadcast estimates neighbors assume links roughly symmetric verify reverse direction links 
information shortest path algorithm greatly improved 
node picks parent neighbor lowest depth link success rate 
implies entire shortest path tree comprised links 
estimate link success rates sophisticated path selection rules 
example may assume inductively nearer nodes maintain estimate path success rate sink 
estimate local link success rate locally combine estimates assuming success rate path neighbor independent arrive neighbor select parent give maximum success rate sink record path estimate children 
maintaining local link success loss rate estimators essential self organization multihop routing routing topologies sensor networks 
challenges 
storage capacity nodes constrained processor powerful 
estimators little space simple compute 
furthermore sufficient estimator eventually converge link status changes fairly quickly 
want estimator agile small settling time route selection adapt reasonably quickly changes underlying connectivity 
transient variations link want estimator stable routing topology change 
fluctuations errors estimate may introduce temporary cycles routing graph due inconsistent partial information route selection 
desires clearly conflict stable estimators tend agile agile estimators tend stable especially ones inexpensive compute 
situation motivates investigate behavior wide range link estimators context low power wireless connectivity purpose multihop route selection 
basis estimation sequence packets node observes 
view series binary events time 
get observe ones directly arrival packet 
receive packet infer intervening zeros sequence number 
course hearing node zeros silent general know expected packet rate node know sample rate may performing local data compression routing traffic nodes 
additional measures required estimate silent losses 
section reviewing investigations estimation techniques related networking problems 
section provides empirical analysis behavior low power wireless network variety contexts 
section develops link loss model mathematical framework simulation methodology 
section defines metrics tuning objectives studies behavior variety candidate estimators setting exponentially weighted moving average serves baseline comparison 
section looks behavior best estimators discuss implications multihop routing protocols conclude section 
related passive probing estimate link reliability wired power rich wireless networks established 
widely deployed internet protocols internal gateway routing protocol enhanced 
reliability measured percent packets arrived link 
reported network interface hardware firmware calculated moving average 
link reliability route equals minimum link reliability path 
experience extensive empirical study effective estimators developed tuned characteristics particular link technologies usage models 
build designing estimators multihop routing low power mobile wireless network 
packet loss silent packet comes particular link sender receiver known priori 
incoming packets detected damaged packets losses 
wireless scenario channel broadcast medium packets damaged totally missed receiver 
furthermore link error dynamics expected different low power 
adapt moving average calculation handle silent losses obtain candidate estimators study 
extensive prior modeling loss characteristics various wireless networks 
trace approach modeling wireless errors 
balakrishnan katz collected error traces wavelan developed gilbert model 
collected gsm traces created markov channel model 
wireless devices transmit power levels orders magni tude greater radios 
potentially different reactions background interference environmental effects mobility 
draw methodology developed studies build empirical characterization regime study established techniques carry 
rich literature network performance estimation especially context multicast overlay topology management 
efforts focus active probing injecting measurement traffic system direct measurement built link interfaces 
example special multicast probes estimate internal multicast network packet loss rate infer topology 

minimize power consumed link estimation focus passive techniques avoid sending probe packets 
additional active measures incorporated yielding interesting accuracy vs energy trade 
prior passive estimation seeks estimate value large set observation meaningful approximation 
example round trip time estimator tcp adjust estimation round trip time measurement 
estimate probability reception discrete events arrival packet silent failure receive packet 
single observation little value history observations 
estimators proved effective regimes may effective 
example highly relevant study kim noble studies behavior collection estimators context responsiveness stability desired face sudden changes 
measuring round trip delay calculate latest available bandwidth filter estimator 
assert flip statistical process control agile stable gain settings provides best estimator 
measurement reveals latest estimate available bandwidth determine latest bandwidth falls certain prediction 
agile estimation deviates process go control flip flop drops agile estimation relies stable prediction 
ability sample sample basis 
develop estimators flip flop concept gain mix agility stability 
empirical link characteristics empirical studies berkeley mote platform indicate connectivity low power wireless nodes non uniform highly variable 
study concludes probabilistic model connectivity 
sophisticated statistical models proposed characterize inter error intervals wireless channels adopt simple strategy characterize connectivity nodes point time probability successful packet transmission 
section seek develop characterization empirically 
experimental platform widely available berkeley mote platform study 
mhz atmel micro processor kb programmable memory kb data memory 
network uses mhz amplitude shift keying ask radio capable delivering kbps 
transmission power output 
tinyos provides programming environment complete network stack platform 
active message layer provides connectionless packet abstraction normal packet size order bytes 
dc balanced scheme encoding byte 
bit crc computed entire packet determines successful packet reception 
experimental setup collect packet loss traces time single sender generating packets uniform rate recording successful arrivals receiver 
placement environment nodes varied 
capture real life behavior experiments done real settings rf isolated chamber 
nodes placed inches ground 
node movement done person picking moving node 
sender rate packets packet containing sequence number 
receiver redirects successful packet serial port computer trace stored 
sequence numbers traces infer losses generate sequence success loss events time constitute trace 
calculate packet success rate time fraction packets received second interval 
empirical traces traces illustrate typical observed behavior 
shows packet reception rate reacts change distance transmitter feet receiver moved feet closer 
changes hours 
distance change results discrete change packet success rate approximately 
furthermore distance substantial variation presumably due interference rf channel distribution appears stationary 
shows packet reception rate changes person stands vicinity receiver 
reception probability sensitive person position discrete changes substantial magnitude 
times blocks communication times effect improves matters 
traces indoor environment outdoor traces show similar behavior 
distance effects 
nodes placed feet obstruction effects 
person deliberately apart 
minutes transmitter moved stands receiver interval minutes 
distance feet remains hours 
empirical traces link characteristics 
shows complex scenario analysis 
experiment begins sender placed feet receiver 
minutes sender placed feet receiver 
minutes placed feet receiver 
minutes moved back feet receiver 
minutes placed feet receiver 
results series steps stationary regions 
movement effects 
transmitter deliberately moved different distances various times 
traces reasonable model communication behavior probability packet reception time changes discrete steps close close 
develop estimators track discrete changes rapidly lock stationary regions despite statistical variation 
synthetic link connectivity model order explore estimator design space construct simple synthetic trace generator empirical traces 
input generator target packet success rate time 
follows discrete steps 
estimators observe successful packets estimate underlying rate 
trace generation outcome packet reception loss success simple model treat packet reception bernoulli trial denoting success loss equals probability success equals probability loss 
sequence packet receptions bernoulli process number packet successes trials follows binomial distribution 
process described binomial random variable packet success rate random variable expected value equals equals assumption model trial independently identically distributed 
reality may case compare resulting behavior observed traces 
investigate follows binomial distribution observable physical influence plot quantiles extracted stationary portion data quantiles derived theoretical binomial distribution 
expected value data set set expected value binomial distribution value 
quantile mean fraction points value 
quantile quantile graph shown 
data follows binomial distribution data set linear degree line 
quantile empirical data quantile binomial distribution 
shows match quantile near mean deviates slightly extremes 
suggests empirical data larger degree variance binomial distribution model 
suggests binomial distribution fairly model approximate reality 
simulation model simple mechanism generate packet loss traces evaluating different estimators simu lation 
uniform random variable 
packet arrival time packet received successfully loss 
estimators observe sequence produce estimate compared underlying target 
model changes link quality resulting mobility obstacles receivers piecewise function time 
model sequence steps shown table 
minutes table definition model shows time series comparison empirical trace simulated trace 
empirical trace simulated obtained faction packets received second interval 
simulated trace captures essence empirical trace slightly smaller degree variance 
time series comparison empirical traces simulated traces 
estimators section layout general form candidate estimators 
describe set metrics evaluation discuss relationship agility stability amount history required estimation 
define objectives tuning estimators estimator corresponding parameters meeting tuning objectives 
general framework goal design link reliability estimator responsive stable reasonably accurate simple little computational requirement memory efficient 
inputs estimators include packet arrivals periodic timer events packet contains transmitter id link sequence number 
lost packet generate message arrival events equivalent zero packet loss events followed packet success event 
periodic timer event provides synchronous input estimator allows better estimate losses message events infrequent 
example node disappear message events occur connectivity estimate go zero 
temporal assumption higher layer protocols provide minimum message rate neighboring nodes 
known estimators safely infer minimum number packet losses time period compensate accordingly 
estimator continuous tuning space 
fair comparisons different estimators pick meaningful points tuning space tuning objectives 
point tune best agility stability target 
tune best stability agility target 
individual estimators tuned meet objectives compared 
simulated trace shown input tuning process 
data rate set packets empirical trace 
set value order drive best estimators 
general framework captured 
message arrival event trace generator timer event estimator minimum data rate constant stable estimation agile estimation general framework passive link estimators 
metrics metrics evaluate estimators relative framework 
settling time length time step reaches remains error bound 
threshold 
crossing time length time step crosses 
known compute mean square error captures degree error places higher penalty large overshoot 
coefficient variance measures stable estimator reaching steady state 
sum errors capture estimator biased may lead systematic errors 
memory resources computation complexity measures efficient estimator 
agility stability history important understand tradeoff estimation stability agility amount history generate estimation 
general larger history yields stable agile estimation 
case binomial distribution determines variance number outcomes 
variance peak decrease variance number samples increased 
problem arises look standard deviation variance 
decreasing standard deviation requires quadratic increase history size 
analysis suggests tuning stable estimation may lead increase history size poses resource concern types estimators reduces agility 
difficult obtain agile estimator small error variance close 
tuning objectives tune estimators studied settings stable agile 
stable estimators aim minimize settling time requiring total error tune estimator accordingly 
agile estimators aim minimize total error requiring crossing time reach ofp packet opportunities 
crossing time chosen arbitrarily concern reveal different shortcomings different estimators tuned objective 
half expect stable estimators 
tuned estimators compare settling time crossing time mean square error coefficient variance memory resources computational requirement 
settling time meaningful stable estimators 
terminology establish relevant terminology presenting different estimators 
current estimation time stamp event number known missed packets sequence number difference guess number missed packets time window current event event 
number packet losses feed estimator 
event event max 
ewma basis comparison exponentially weighted moving average ewma estimator simple memory efficient requiring constant storage old estimate kind history tuning 
ewma widely estimator basis comparison 
ewma uses linear combination infinite history weighted exponentially 
property reactive small shifts agile detector statistical process control applications 
algorithm works follows 
tuning parameter 
event repeat times 
event compute 
input event current time 
successive events intervening events additional losses accumulated input event packet received successfully 
set equals current time stamp 
calculate extract sequence number successful packet subtract sequence number heard plus 
calculated max set 
note process maintaining sequence number heard calculation apply estimators orthogonal actual estimator algorithm 
implementation ewma take bytes floating point byte fixed point store amount computation involved multiplications additions 
shows tuned stable estimator 
reveals keep error ewma set close maximum gain 
large gain agility expected 
crossing time ewma packets settling time close packets 
shows agile version 
probably useful estimator large overshoots expected ewma sensitive small shifts 
agile version detecting disappearance neighboring node relatively short time 
note small decrease large effect agility error normally see contexts 
furthermore practice representing fixed point avoid heavy weight floating point operations may create extra complexity needs quite precise 
flip flop ewma stable agile flip flop ewma estimators stable agile setting suggested best estimator provide agility stability 
statistical control theory provides basis switching estimators 
explore possibility estimator set agile stable ewma ewma study 
stable noise margin simpler approach switch agile stable estimator difference greater 
note flip flop switch directions 
agile default 
agile estimation control deviates difference stable estimation fall back stable estimation 
resulting shown 
approach stable default switch agile estimation detect sudden change mobility earlier 
switching occurs agile estimation deviates stable 
resulting shown 
graphs suggest flip flop idea provide advantage simple ewma setting 
fluctuations agile estimator bad introduces instability error 
study 
show dynamics estimator separately time difficult isolate better setting 
moving average moving average estimator simple estimator widely including routers 
algorithm works follows 
tuning parameter maximum size history window bits 
event append zeros event append take elements avoid overestimating case samples estimator gives estimation number samples threshold 
implementation algorithm take bytes store amount computation involved computing bit shifts addition log shifts full division 
note ease implementation tuning process takes multiples 
illustrates tuned stable moving average estimator stable settings 
achieves settling crossing time packets agile ewma 
bytes storage estimator expensive keep track reasonable number neighboring nodes 
shows agile case 
moving average appears error variance estimation compared ewma 
ewma sensitive small changes 
stable ewma 
agile ewma estimation 
flip flop ewma stable agile 
flip flop ewma stable agile 
uses stable estimation agile estimation goes uses agile estimation goes stable estimation 
stable estimation 
stable moving average 
agile moving average 
different estimators stable agile configuration 
time weighted moving average moving average estimator applies weight packets sliding window 
common im provement apply weighting function places heavier weight samples estimation adaptive temporal changes 
basic algorithm works moving average addition time weighted function tuning parameters estimator study stick weighting function tune perfect function serves purpose observing effect weighting 
choose works follows 
sequence current size sequence length applies weight packets decreases weight samples linearly implementation estimator takes bytes store bits 
amount computation multiplications turned additions 
result additions division 
carries complexity compared moving average 
different different fixed size lookup table store fixed 
note ease implementation tuning process takes multiples 
illustrates tuned stable estimator shows agile version 
visual comparison figures moving average show similar better settling time high frequency fluctuation ewma 
effect weighting function twofold 
increases history required achieve stability objective making memory efficient compared moving average 
second requires floating point operations try avoid 
improves moving average decreasing average settling time packet time maintaining amount error variation 
agile case greater moving average case 
mean square error coefficient variance smaller ewma moving average 
flip flop packet loss success interval ewma success loss ff packet loss interval number consecutive successful packets successive packet loss events 
greater interval better reception probability 
estimation packet loss interval adapts slowly bursts packet successes reacts quickly bursts packet losses 
estimator works follows 
tuning loss 
current average loss interval updated number consecutive success packet loss detected 
average computed ewma follows 
loss loss instance packet success interval reverse packet loss interval 
measures number consecutive packet losses successive packet success instances 
estimation average corresponds average bursts errors 
greater interval worse quality link 
packet success interval adapts slowly bursts packet losses reacts quickly bursts packet successes 
algorithm packet success interval similar packet loss interval average packet success interval updated number consecutive loss packet success detected 
tuning parameter success 
success success instance flip flop mechanism attempt capture best worlds 
stability packet loss interval successes frequent packet success interval losses frequent 
call configuration ff stable 
agile estimations reverse call ff agile 
ewma averaging implementation estimator efficient 
entry takes bytes store intervals bytes fixed point bytes floating point store ewma parameters tuning affect storage requirement 
shows tuned stable ff stable estimator success loss 
estimator stable smooth extremes 
slow rising edges show settling crossing time larger compared estimators ewma 
agile case shown success loss 
estimator agile candidate fluctuations larger ewma 
window mean ewma far estimators discussed update estimation event 
possible perform low pass filtering average time window adjust estimation latest average 
average observation ewma filtering 
tuning parameters 
time window represented number message opportunities events 
algorithm works follows 
updated event 
time window events number received messages number events sum losses events current event 
mean alpha 
entry estimator take bytes storing byte fixed point byte floating point storing amount computation involves additions division multiplications 
computation done event event 
similar ewma storage requirement estimator independent tuning 
shows tuned stable estimator message time 
observed settling time crossing time relatively small high frequency components estimation clearly removed compared ewma case 
fact settling time comparable fastest time weighted moving average 
shows agile version message time 
windowing effect low pass filtering effect small creates shifts ewma sensitive 
result performance agile scenario show significant improvement ewma 
alternative estimation techniques resource constraints platform significantly limit amount processing storage narrows choice estimator significantly 
computing statistically meaningful median previous estimates raises concern storage resources potentially neighboring nodes need estimate perform routing 
similarly rich literature estimation techniques linear regression kalman filter practical platform 
discussion controlled study stable agile estimators hand return question best estimator relative metrics considering 
discuss results may affect multihop routing give guidelines expect designing protocols 
stable estimators table summarizes result stable estimators 
look sum errors 
value approach estimator unbiased 
estimators sum errors small showing biased 
mean square error penalizes estimators large overshoots 
stable extremes 
result achieves smallest mean square error expected estimators come close 
coefficient variance measures effectiveness estimator staying true value 
flip flop packet loss success interval ewma largest coefficient variance ewma best 
values estimators relatively close 
major determining factor settling time 
moving average smaller settling times rest estimators 
desirable agile estimator stay true value best mean square error coefficient variance 
hope crossing time ewma smaller actual setting time 
figures table clear crossing times slightly smaller settling times 
important constraint storage space 
moving average constant storage space stable time weighted moving average estimation agile time weighted moving average estimation 

stable flip flop packet loss success interval agile flip flop packet loss success interval ewma estimation success loss ff ewma estimation success loss ff stable 
agile 
stable window mean ewma 
agile window mean ewma 
different estimators stable agile configuration 
estimator settling crossing mean coefficient sum storage computation time time square error variance errors entry overhead packet time packet time bytes ewma mul add 
moving average add log shifts div add 
mul add 
mul div add 
table simulation results estimators stable settings 
estimator settling time mean coefficient sum storage computation square error variance errors entry overhead packet time bytes ewma mul add 
moving average add log shifts div add 
mul add 
mul div add 
table simulation results estimators agile settings 
best choice balanced dimensions 
agile estimators table summarizes performance agile estimators 
sum errors times larger stable counterpart 
ewma times increase 
suggests estimators biased agile configuration 
agile settings decrease settling time times relative stable settings 
mean square error coefficient variance increase roughly factor 
appears agile estimator useful discover significant change link reliability quickly disappearance node 
multihop routing motivation study understand performance link estimations affect higher level algorithms particular multihop routing 
results suggest build agile estimator large errors stable estimator settling time packets 
routing purposes stable estimator clear choice 
estimate accurate 
choosing parent routing fluctuations tolerated switching better alternative 
reliability cost metric care exercised avoid cycles due variations reliability estimate 
estimation empirical trace shows estimator stable setting performs empirical trace shaped trace generator 
final choice estimator tracks empirical trace 
degree overshoot higher simulation 
expected real traces larger variances 
result estimators tuned tuned stability applied real situations 
estimations empirical data 
real time estimation link reliability vital self organizing network wired wireless routing paths constructed poor links 
case low power wireless networks empirical traces show link reliability varies dramatically changes position environment 
observation justifies need estimate link reliability case routing path reliability links clearly better hop path reliability link 
traces indicate link reliability fluctuates time random process observ able physical changes 
model fluctuations binomial distribution step responses model mobility obstacles 
model approximation empirical data provides simple tool evaluation estimator design space 
search process different estimators resource constraints platform filters complex inefficient estimation techniques helps focus efficient estimators 
different metrics defined ewma average time window performs best 
provides stable estimates react large steps packet times 
furthermore storage requirement constant making attractive estimator resource constrained platform 
study narrowed estimator design space estimator suggests reasonable parameter setting 
remains final process tuning real settings 
konrad zhao joseph reiner ludwig 
explicit loss notification wireless web performance 
acm 
mandelbrot 
self similar error clusters communication systems concept conditional station arity 
ieee transactions communication technology com pages 
bob garcia luna aceves boyle 
fast routing protocol distance vectors 


rutgers state university new jersey technical publication laboratory computer science august 
crossbow www com 
deepak ganesan bhaskar krishnamachari alec woo david culler deborah estrin stephen wicker 
complex behavior scale experimental study low power wireless sensor networks 
technical report ucla csd tr 
nguyen katz 
trace approach modeling wireless channel behavior 
proceedings winter simulation conference pages 
balakrishnan katz 
explicit loss notification wireless web performance 
ieee globecom internet mini conference 
jason hill david culler 
wireless embedded architecture system level optimization 
uc berkeley technical report 
jason hill robert szewczyk alec woo seth hollar david culler pister 
system architecture directions networked sensors 
asplos 
kim noble 
mobile network estimation 
acm mobicom 
duffield horowitz lo towsley 
loss inference multicast network topology 
ieee conference decision control 
jacobson 
congestion avoidance control 
acm sigcomm pages 

