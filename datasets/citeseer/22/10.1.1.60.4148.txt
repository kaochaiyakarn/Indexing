advanced indexing techniques wide area network monitoring xin li fang hui zhang christophe diot ramesh govindan wei hong iannaccone detecting unraveling incipient coordinated attacks internet resources requires distributed network monitoring infrastructure 
infrastructure logically distinct elements distributed monitors continuously collect packet flow level information distributed query system allows network operators efficiently rapidly access information 
argue addition supporting types queries network monitoring query system support multi dimensional range queries traffic records flows aggregated flow records 
discuss design mind distributed indexing system supports creation multiple distributed indices proximal hashing scalably respond range queries 
numerous network monitoring systems designed past operational research uses 
motivation systems includes performance monitoring security enforcement anomaly intrusion detection dos attack detection network troubleshooting maintenance 
systems designed monitor specific subsystems centralized design 
natural step design distributed monitoring systems 
systems consist logically distinct components distributed network traffic monitoring system distributed querying system 
traffic monitoring system consists passive monitors collect store limited time detailed network traces 
analogy monitors collectively form sensor network 
monitors addition generate traffic summaries form flow records suitably aggregated filtered versions thereof 
envision distributed scale robustness reasons querying system allowing users efficiently query traffic summaries 
capability allow network operators examine performance flow aggregates traffic customer correlate flows detect anomalies intrusions importantly capability indicate precisely network monitors contain relevant traces analyzed confirm potential intrusion example system lets users efficiently drill important data locations 
examine interplay networking databases designing querying system 
specifically computer science department university southern california 
email ramesh usc edu intel research cambridge uk 
email christophe diot iannaccone intel com intel research berkeley usa 
email wei hong intel com envision distributed query system consist components scalable dht system allows exact match queries focus kind functionality crucial network monitoring support multi dimensional range queries 
queries traffic summaries naturally expressed multi dimensional range queries flow size greater mb customer prefix time interval 
consider motivation sketch design mind system supports creation distributed multi dimensional indices 
mind consists collection network nodes forms hypercube overlay nodes logically distinct located network monitors 
traffic summaries expressed multiattribute tuples generated network monitors inserted indices 
mind routes tuples nodes tuples near attribute space stored node making multi dimensional range searches efficient 
care taken distributed index network monitoring 
clearly feasible insert flow records network monitor mind approach incur significant traffic overhead 
see mind way database administrators build centralized indices 
network administrator performs careful line analysis decide attributes indexed granularity traffic summaries inserted mind 
database design analysis tradeoff cost building index expected frequency querying system 
analyze feasibility mind detecting suspicious flows analyzing network performance 
conclude summary research challenges arising design 
ii 
motivation existing network monitoring systems centralized research just explore design distributed network monitoring systems 
systems consist logically distinct components distributed traffic monitoring system distributed query system 
traffic monitoring system composed number passive traffic monitors deployed network 
generally traffic monitor collects stores packet traces entire sequence packets observed link multi dimensional indices network diagnosis focus traffic monitoring 
existing systems monitor control plane routing traffic 
arguments apply equally systems 
attached monitor sampled version sequence 
monitor may capable storing large amount traffic observed site allow line detailed analysis network data 
addition traffic monitor generate traffic summaries called flow records real time 
flow record typically counts volume traffic optionally specific time window traffic aggregate 
traffic aggregates flexibly defined terms nodes applications collections thereof 
traffic aggregate defined destination www usc edu port number say measures volume web traffic destination 
example traffic aggregate web requests sent set nodes set nodes 
way node addresses assigned interesting sets nodes usually represented ip address prefixes 
database terms flow records defined view raw packet traces typically involving windowed aggregates various predicates ip addresses 
design traffic monitors represents significant ongoing research challenge 
existing centralized network monitoring systems typically collect store flow records single site 
flows granularity individual tcp connections centralized network monitoring doesn scale 
data abilene backbone indicates flow rates single routers excess flows second single large isp wish instrument links 
centralized store flow records single point failure query hotspot 
reasons consider distributed monitoring system 
prior discussed design distributed approaches evaluating certain kinds declarative queries traffic aggregates 
kind query naturally arises context multi dimensional range query 
flow record represented tuple multidimensional attribute space 
dimensions space include source destination ip addresses source destination port numbers possibly time 
argue distributed system supports multi dimensional range queries essential component widearea network monitoring systems 
design distributed systems supporting range queries started receive attention literature 
systems store multidimensional data manner preserves locality data tuples routed nodes tuples stored node nearby attribute space 
locality preserving hashing enables efficient querying queries routed mechanisms insertions nodes contain relevant parts attribute space 
existing techniques support range queries directly applied network monitoring example systems easily extended support multi dimensional range queries 
mercury replicates data records extent may incompatible volume flow records 
dim logical routing structure closely tied geography system designed different set constraints 
dim design inspired mechanisms mind 
contributions 
discusses design software infrastructure mind supports dynamic creation distributed multi dimensional indices 
design mind informed characteristics network monitoring application 
second argues network monitoring needs best served carefully creating appropriate indices network monitoring task detecting suspicious flows example creating single large index flow records 
approach akin traditional database design problem indices created careful analysis query patterns data distributions 
substantiate feasibility approach analyzing data large internet backbones 
sections describe contributions 
iii 
mind component query system logical structure node mind node hypercube 
nodes join mind manner similar proposed ensure balanced hypercube maximum degree node minimized 
mind assigns node code naturally corresponds location hypercube shown 
consider multi dimensional attribute space 
embed data space hypercube overlay mind partitions data space smaller hyper rectangles recursively sub dividing attribute cyclic order number hyper rectangles equals number nodes hypercube 
hyper rectangle zone assigned code division procedure 
shows dimensional data space divided zones unique code 
example attribute space normalized real number approach generalizes discrete spaces 
mind assigns zone node matching code 
mapping locality preserving sense data zone mapped node data neighboring zones mapped neighboring nodes overlay 
mind indices implicitly created inserting tuple inserted tuple self identifying contains globally unique name index compact description schema index 
tuples may inserted mind node network 
node computes prefix tuple zone code follows 
length node node needs encode tuple bits order see tuple stored 
example code tuple starts node code starts node stops encoding right bit simply delivers neighbors code starts note hypercube neighbor exist 
routing tuple mind fairly straightforward greedy routing 
mind routing interesting feature message destinations refined step wise node routing decisions independently 
general node mind node needs know logn data fig 
hypercube structure node mind network 
space partition points order route messages correctly 
trivially average routing path length hypercube overlay logn average insertion cost mind indices 
multi dimensional range query mind defines hyperrectangle data space general intersects zone 
code range query defined code common prefix zones intersecting query 
queries routed nodes algorithm similar insertions 
response range query tuples contained hyper rectangle 
query processing mind done continuous distributed splitting large range query smaller subqueries ultimately resulting subquery completely contained zone resolved single node 
reason response subquery lost easily detected query originator manifests hole query hyper rectangle 
duplicate responses detected way 
query cost depends size query respect number nodes covered query 
general average query cost depends average query size average number nodes query needs visit 
queries follow exponential zipfian distributions example expect average query cost dominated logn large iv 
mind network monitoring section describe sample queries illustrate network monitoring applications multidimensional indices 
query describe monitoring objective format tuples need inserted index english sql description query 
examples may desirable index subset attributes depending query workload 
point believe common cases 
finding suspicious flows complexity inspecting packet streams line rates spot suspicious flows run complex anomaly detection algorithms subset identified suspicious flows 
common application finding suspicious flows find machines run port scans gathering information just worm 
important measure short connection attempts data fig 
mapping dimensional data space mind network show 
exchange result large number connections source call number fanout source 
generic query suspicious flows find sources attempted connect hosts destination prefix es note destination source fact ip prefix represents continuous ranges ip addresses 
defines dimensional data space destination source node timestamp cases build index attributes 
example translate generic sql statement follows 
select destination specific variants derived sql statement node select list specifying time durations clause 
performance analysis network customer ip prefix find tcp connections customer exchanged number packets bytes large allow estimate classic performance metric roundtrip times loss rates 
generic query performance analysis stated find flows destined sourced carried octets 
defines dimensional data space destination source octets node timestamp index attributes usual choice 
finding applications query identify network applications known ports firewalls packet filters peer peer applications tunnel traffic application layer protocols avoid connection charges dns tunneling 
queries detection ask connections carried large number packets bytes called flow size just say dns icmp request connections transferred disproportionate amount traffic ip addresses 
ip addresses potentially number tuples average load data space zone id fig 
tuple distribution day real world network traffic traces 
sides tunneling 
specifically generic query find flows source destination flow size destination port defines dimensional data space source destination low size port node timestamp cases indexing attributes sufficient especially inserted tuples selected filtered port numbers interest port dns 
research challenges performance issues mind naturally addressed previously proposed techniques 
example proximity routing achieved scheme 
section address research challenges lie ahead design development mind load balancing robustness query optimization 
load balancing system mind talk kinds load balancing balancing routing load balancing storage 
routing load balancing achieved maintaining balanced hypercube replication alleviate query hotspots 
storage load balancing presents additional challenges 
remember mapping data space nodes mind locality preserving 
data distribution skewed careful partition needed balanced storage 
analyzed traffic data collected large networks abilene understand data distribution mind system expect 
network data consists cisco netflow records continuously gathered routers abilene network 
netflow records contain detailed information flows traverse router destination source ip addresses port numbers byte packet counts time packet flow 
collected tuples aggregated fields indicated indices defined section iv 
shows tuple distribution sum indices day traffic traces 
axis represents equal sized zones boxes compose data mismatching factor vs vs vs number equal sized data space zones fig 
daily difference tuple distributions real world network traffic traces 
space axis depicts number tuples falling zones 
clearly coarse granularity see data significantly skewed 
systems considered migrating data node approach entails significant volumes data movement mind 
mind periodically say diurnal time scale adjust mapping data space overlay space re compute hyper rectangles associated node data distribution 
leverages observation network traffic aggregate change dramatically day day 
validate observation analyzed collected daily real world network traffic data 
mismatching factor measure drifting indexed data attribute space day day 
attribute space partitioned equal sized zones 
zone define li number day records fallen average number day records zone mismatching factor data distributions day mf defined mf li intuitively mf describes total data percentage needs moved transform data distributions day day furthermore mf larger gets bigger 
shows difference data distributions adjacent days low justified tuple distribution stable change slowly days clearly suggests feasible daily remap data space mind overlay 
centralized solution histogram generation affordable mind investigating de centralized approach minimize communication overhead 
robustness main robustness concern provide high data availability replication 
choice replication sites considered conditions notice data set steady daily distribution hourly data distributions may highly dynamic 
locally sensitive approach cause excessive unnecessary data transferring situation 
replica far away original data data replication bring high overhead 
replica easy retrieve original data available 
straightforward efficient choice replication mind sibling node 
sibling node sib defined node exactly code bit 
node exist due node join leave sib node shares longest common prefix tuple inserted replica tuple delivered stored sib 
node fails order maintain balanced hypercube adopt node leave handling proposed 
whichever node take space left node easily retrieve data sib 
data base design query optimization point detailed analysis condition satisfied order mind indices efficient simple flooding range queries follow zipfian exponential distributions logn stands total number queries total number insertions total number nodes 
traditional databases efficient way mind create indices query workload 
example canonical query majority query predicates attributes destination octets building index attributes destination source octets efficient index destination octets 
complexity comes dominating query forms 
example suppose user types queries octets destination source 
probability single index attributes sufficient 
probability equals need consider build separate indices treat secondary indices containing partial tuples unique tuple ids 
multiple indices answering query mind needs support join operations indices 
create mind indices distributed rendezvous performing joins similar dhts 
leverage histograms collect load balancing intelligently choose efficient join order indices 
plan experiment different distributed query execution optimization techniques 
vi 
discussed query processing component generic network monitoring architecture mind multidimensional range query support system wide area networks 
fundamental design draws traditional database indices dht research special requirements high speed network environments placed non trivial research challenges 
currently exploring design mind implementation testing planetlab 
abilene backbone network 
abilene internet edu 
adler halperin karp vazirani 
stochastic process hypercube applications peer peer networks 
proc 
stoc pages 
aspnes shah 
skip graphs 
fourteenth annual acm siam symposium discrete algorithms pages baltimore md usa jan 
bharambe agrawal seshan 
mercury supporting scalable multi attribute range queries 
proceedings sigcomm 
cisco systems 
netflow services applications 
white 
cranor johnson shkapenyuk 
gigascope stream database network applications 
proceedings acm sigmod june 
estan savage varghese 
automatically inferring patterns resource consumption network traffic 
proceedings sigcomm pages 
moon lyles cotton khan moll seely diot 
packet level traffic measurements sprint ip backbone 
ieee network 
ganesan bawa garcia molina 
online balancing range partitioned data applications peer peer systems 
proc 
vldb toronto canada 
backbone network 
www net 
grossglauser rexford 
passive traffic measurement ip operations 
appear internet large scale complex system oxford press 
harvey jones saroiu theimer wolman 
skipnet scalable overlay network practical locality properties mar 
huebsch hellerstein lanham loo shenker stoica 
querying internet pier 
proceedings vldb 
iannaccone diot mcauley moore pratt rizzo 
como white 
technical report irc tr intel research sept 
iannaccone diot kurose towsley 
inferring tcp connection characteristics passive measurements 
proceedings ieee infocom mar 
karagiannis faloutsos claffy 
transport layer identification traffic 
proceedings acm sigcomm internet measurement conference oct 
karger ruhl 
simple efficient load balancing algorithms peer peer systems 
proceedings spaa pages 
kurose 
networking successes new challenges expanding waist field approaches 
infocom keynote talk march 
lakshman 
high speed policy packet forwarding efficient multi dimensional range matching 
proc 
sigcomm pages 
li kim govindan hong 
multi dimensional range queries sensor networks 
proceedings acm sensys nov 
moore hall harris pratt 
architecture network monitor 
proceedings passive active measurement workshop apr 
name server transport protocol 
www net projects 
paxson 
bro system detecting network intruders real time 
computer networks dec 
planetlab network 
www planet lab org 
hellerstein ratnasamy shenker 
prefix hash tree indexing data structure distributed hash tables 
peterson roscoe 
sophia information plane networked systems 
proceedings second workshop hot topics networking nov 
zhang goel govindan 
incrementally improving lookup latency distributed hash table systems 
proc 
sigmetrics 
zhang breslau paxson shenker 
characteristics origins internet flow rates 
proceedings acm sigcomm aug 

