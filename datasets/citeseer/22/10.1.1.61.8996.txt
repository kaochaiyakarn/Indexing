appear nasraoui za ane spiliopoulou mobasher yu masand 
eds learning semantics frequent subgraph mining bettina berendt institute information systems humboldt university berlin berlin germany www hu berlin de berendt 
search frequent subgraphs increasingly important application areas including web mining bioinformatics 
graph structures mining take account essential integrate background knowledge analysis patterns studied different levels abstraction 
capture needs propose taxonomies mining extend frequency support measures notion context induced interestingness 
ap ip mining problem find frequent patterns individual patterns constitute interesting context may infrequent 
presents fap ip algorithm uses taxonomy search individual patterns supports graph clustering discover structure individual patterns 
semantics learned process 
fap ip implemented extension gaston nijssen kok complemented ap ip visualization tool allows user navigate detail context views taxonomy context pattern context transaction context 
case study real life web site shows advantages proposed solutions 
acm categories subject descriptors keywords database management database applications data mining information interfaces presentation hypertext hypermedia navigation user issues graph mining web mining background knowledge semantics mining webkdd selected revised papers springer lncs lnai 
background knowledge invaluable help knowledge discovery 
examples include ontologies text mining exploitation anchor texts crawling indexing ranking 
web usage mining background knowledge needed raw data consist administration oriented urls site owners analysts interested events application domain 
past years various algorithms including background knowledge mining proposed 
particular taxonomies association rule sequence graph mining investigated 
raw data individual set sequence graph items generally infrequent 
relying statistical measures interestingness support confidence analyst finds patterns huge unmanageable number 
taxonomies solve problem generally produce smaller bettina berendt number patterns high values statistical measures 
addition allow analyst enhance mining semantic measures interestingness 
number powerful algorithms tools exist mine patterns determined wide range measures 
ignore important source interestingness taxonomic context 
frequent pattern types individual items behaviour constitute distributed equally distributed obeying zipf law 
patterns abstractions visible mining algorithms tools support drill patterns tools provide simultaneous detail views patterns 
provides structured fine grained view data highly focussed sensitive monitoring changes occurring streams data 
context detail views particularly valuable patterns reveal lot structure sequence graph mining 
contributions follows fap ip fast pattern individual pattern mining 
algorithm identifies statistically frequent patterns level gives possibility drilling patterns get detailed information typical individual instances 
fap ip works undirected directed node edge labelled graph transactions patterns connected subgraphs 
propose simplifications speed individual subgraph pattern identification 
applicable transaction data bijective individual label function second uses graph representation aggregates slightly graph structure retains semantic information 
introduce different approaches defining identifying individual patterns relies taxonomy relies graph clustering 
optional pre processing step identifies conceptual structure transactions may differ raw data graph structure miners operate 
visualization tool allows user interact solution space navigating different semantic detail context dimensions taxonomy context patterns individual patterns pattern context subpatterns transaction context patterns embeddings 
demonstrate usefulness proposals case study investigated navigation large real world web information portal 
organized follows section gives short overview related 
section identifies mining problem section describes algorithm 
section illustrates problem conceptual transaction structure pre processing steps solve 
section introduces visualization tool section describes selected results case study 
section concludes gives outlook research 
related frequent subgraph mining problem frequent subgraph mining studied intensively past years applications bioinformatics chemistry computer vision image object retrieval web mining 
semantics frequent subgraph mining algorithms priori principle stating graph pattern frequent set transactions subgraphs frequent 
main problem frequent subgraph mining essential steps involve expensive isomorphism tests pattern candidate may generated repeatedly compared generated candidates second candidates embedded transactions compute support 
algorithms developed discover arbitrary connected subgraphs 
research direction explore ways computing canonical labels candidate graphs speed duplicate candidate detection 
various schemes proposed reduce number generated duplicates 
particular candidates canonical form need developed investigated 
gaston approach leverages fact graph patterns fact full cyclic graphs trees paths simpler canonical forms shown fastest number datasets 
detailed discussion canonical form approach commonalities differences different algorithms see 
detailed analysis algorithm performance see 
algorithms constrain form sought subgraphs search induced subgraphs pattern embedded transaction nodes connected topology transaction pattern 
focus relational graphs graphs bijective label function see section constraints node connectivity 
going exact matching pre process data find rings treat special features introduce wildcards node labels find fuzzy chains sequences wildcards 
general form structural abstraction identify shared topological minors patterns 
taxonomies frequent subgraph mining taxonomies find patterns different levels abstraction differently structured data 
frequent itemsets association rules frequent sequences identified lowest possible levels taxonomy :10.1.1.40.6428:10.1.1.144.4956
concepts chosen dynamically may lead patterns linking concepts different levels abstraction people bought harry potter bought books 
building ideas proposed algorithm finding frequent induced subgraphs different levels taxonomy 
restriction induced subgraphs poses problems number domains 
example web usage mining transactions sessions highly idiosyncratic example fig 
transactions share common subgraph pattern different topology overlaid nodes pattern 
example chain items may part different transactions additional links constituents chain users backward moves different positions chain 
frequent induced subgraph mining pattern 
second problem mentioned section loss taxonomic context brought finding subgraph exceeds frequency threshold 
bettina berendt taxonomies ontologies graphs web usage mining web usage mining concepts abstracting urls common see overview 
general idea map url significant contents services delivered page expressed concepts 
page may mapped set concepts 
example may mapped set concepts relations appear query string 
alternatively keywords page text pages linked may mapped domain ontology general purpose ontology wordnet serving intermediary keywords text concepts ontology 
subsumption hierarchy existing ontology employed simultaneous description user interests different levels abstraction 
scheme aggregating general concepts explicit taxonomy missing 
clustering sets sessions identifies related concepts different levels abstraction 
sophisticated forms content extraction possible latent semantic models taxonomies derived 
association rules taxonomies document clustering combined generate concept recommendation sets 
approaches multiple taxonomies related olap objects case requests requested urls described number dimensions concept hierarchies lattices formulated dimension allow views 
graph structures web navigation studied single user sessions frequent tree mining extensions sequence mining 
ap ip frequent subgraph mining problem requirements described formulate ap ip mining problem dataset labelled graph transactions taxonomy concepts mapping labels concepts minimum support threshold find frequent subgraphs concept level minimum support threshold called aps patterns corresponding ap frequent individual subgraphs individual label level may threshold called ips individual patterns 
example shows role individual patterns transactions contain path harry potter lord rings contain harry potter contain harry potter lord rings harry potter sets disjoint minimal support book book support frequent pattern 
ap frequent individual patterns harry potter lord rings harry potter 
notation mining input 
dataset graph transactions consists finite set nodes set edges labels set taxonomy consisting concepts set mapping concepts ac 
semantics frequent subgraph mining definition 
subgraph connected graph consisting finite set nodes set edges labels frequent subgraph embedded transactions 
ap frequent individual subgraph defined follows graph labels 
exists frequent subgraph graph ac labels ac ac ac ac automorphism called abstraction respect ac 
embedded transaction embedded transaction ap frequent individual subgraph abstraction embedded fap ip algorithm fap ip fast ap ip miner consists graph processing modules standard frequent subgraph miner operates transaction data abstracted taxonomy 
apriori principle miner extends frequent patterns size frequent patterns size frequent edges order generate candidates size miner relies canonical forms avoid possible generation duplicate pattern candidates 
algorithm identifies counts unique candidate embeddings data adds candidate set frequent patterns number embeddings exceeds required threshold 
patterns grown breadth depth order 
depth economical space important consideration handling large numbers patterns arising ap ip mining 
set existing depth miners gaston chosen performance algorithm particular datasets path tree shaped patterns case application domain web usage mining 
gaston forms chose embeddings re computed stored alternative somewhat faster required far memory handle small datasets domain 
resulting algorithm fap ip shown table 
lines constitute procedure 
lines added treated differently signature support constraint line fap ip 
details including completeness proofs reader referred 
mining starts considering frequent edges graphs 
examination embeddings embedding analyzed individual label form 
general mapping embeddings ip frequent graphs 
shown procedure ip gen notation ii graphs 
graph simplified section extended adding forward edge new node node refinement adding backward edge connects nodes connected path cycle closing refinement 
bettina berendt operation refine graph called leg 
node refining leg graph consists node edge label node label 
cycle closing refining leg consists different nodes edge label 
refinement operator leg refines graph adding leg leg 
denotes code vertex invariants 
lexicographically sorted list node labels degrees list enriched edge labels 
leg leg set legs 
cip candidate individual pattern fip ap frequent individual pattern set ip graphs section 
transaction id set transactions pattern embedded called tid list 
ac ac set abstracted transactions labels coarsened taxonomy mapping function ac 
graph codes canonical graph codes defined path graph nodes degree nodes degree sequence node labels edge labels starting nodes degree 
canonical label lexicographically smaller possible sequences 
free tree graph cycles depth sequence obtained depth traversal sequence node depth ingoing edge label node label tuples 
canonical label lexicographically largest possible depth sequences 
cyclic graph graphs concatenation code tree graph grown tree spanning tree graph ii sequence vi vj label tuples defines nodes vi vj connected edge cycle closing refinement 
canonical label lexicographically smallest possible codes 
algorithm fap ip leg ac leg canonical return output graph ip embedding em tid ip gen em ip fip ip output fip leg leg necessary leg support leg ac leg leg node refinement leg fap ip leg ac procedure ip gen cip ip 
cip known automorphism graph ip 
idlist idlist 
return 
cip graph ip cip 
idlist idlist 
return 
cip idlist 
ip ip cip semantics frequent subgraph mining general steps frequent subgraph mining performed aps ips 
ap candidate generation support counting duplicate pruning performed fap ip steps 
ip candidate generation happens step 
main algorithm ip duplicate pruning steps 

ip gen new candidates added list ap frequent ips line 
optimization steps applicable 
particular non canonical aps pruned growing procedure guarantees canonical form graph fap ip step 
possible ips depending individual labels topology encounter embedding canonical form 
principle candidate mapped canonical form list canonical forms ips maintained ap analyzed 
canonical form definition computation relies gaston basic logic code chains trees cyclic graphs canonical form see details 
candidate canonical form needs computed inspected graph known automorphism transformation done 
case simply increment counts ip gen steps see 
graph encountered ips match identical vertex invariants see step transformed canonical form check match case assigned newly automorphism known ip steps 
tests fail candidate new ip steps 
ip support counting occurs addition transaction id candidate occurs lines 
candidate regarded subgraph subset transaction counted 
ip support pruning necessary ips occurrence data ips minimum frequency definition 
size pruning 
maximal pattern size set case recursion step 
main algorithm entered pattern size exceeded shown pseudocode 
fap ip complete gaston finds frequent aps see ips definition embedding embeddings inspected 
main problem situated step 
ip gen computation canonical form isomorphism check general case performed efficiently 
solutions possible search special classes graphs transactions allow efficient computation relaxation ip gen goal partitioning set embeddings full information graph structure labels 
strategies doing described 
simplification data bijective label functions domains individual node label occurs transaction 
example web usage mining sessions usually modelled including visit particular page bettina berendt node graph page label 
modelling gives rise special class graph transactions mapping nodes labels bijective 
simplicity edges join node treated 
case canonical code graphs general case simpler cheaper compute forms explained lexicographically sorted list edges described node labels edge label 
sorting done efficiently speeding step 
ip gen simplification grouping vertex invariants outline ips may set node edge labels degrees 
take simple example distinct graphs described 
map concept common ap path involving instances concept depending domain analysis question coarsened form may bear information describe commonalities differences different ap instances 
particular node label degree illustrate role items concepts endpoint pattern degree hub degree high 
leads second simplification graph code applicable types label functions lexicographically sorted pairs node label node degree plus optionally edge labels 
step 
ip gen simplification implies vertex invariants cip need computed test automorphism 
sorting done efficiently 
graph clustering finding individual patterns notion ap frequent subgraphs rests differentiating possible individual level instances pattern 
lead large variety patterns 
undirected edge labelled graphs ap nodes concepts average branching factor give rise ips 
case study demonstrates ips comparatively sparse transaction data branching factor high example web usage mining requests database fed web sites 
aps define structure patterns question arises possible identify structure ap 
answer carry simplification treating graph cip bag items 
bag available forms ip gen simply set labels embedding nodes 
clustering bags obtain high level grouping graphs content desired salient structural properties 
clusters alternative form ips 
enable form graph clustering basic representation set graphs described bag items enriched information 
example item item distance matrix may derived semantics frequent subgraph mining taxonomy information sources 
alternative decompose item feature vector information tokens treat graph sum item feature vectors 
alternatively addition item may enriched information 
examples decompositions web usage mining sessions section 
clustering may partition hierarchical reveal structure 
forms background knowledge semantics enable clustering algorithm form groups forms semantics learned sense existing instantiations particular template defined graph structure discovered 
web usage mining learning identifies composite application events behavioural patterns data 
time space requirements theoretical evaluation 
fap ip time space worst case requirements determined size dataset number diversity size patterns 
factors indirect influences magnitudes particular lower support threshold larger concept branching factor generally lead diverse longer patterns 
data lead patterns patterns longer patterns 
described briefly influences expected time requirements gaston described embedding ap causes call ip gen test line 
hashtable lookup constant time 
mapping canonical form line 
occurs embeddings worst case complexity exponential pattern size general case log pattern size simplifications sections 
set updates remaining lines take constant time 
determines expected effect pattern size 
shows time needed processing embedding depends data set size number patterns 
number transactions increases factors remain equal number embeddings considered grows proportional number transactions linear dependence expected 
reasoning holds number patterns increases number embeddings increases proportional diversity patterns number ips ap number ways pattern embedded data increases 
space requirements include overhead determined size dataset 
aps current held main memory 
addition ips associated current ap encountered automorphisms stored 
space requirements ip linear number nodes node labels abstracted linear number nodes number edges edge labels abstracted 
experiments 
investigate actual performance simulated real data analyzed 
reasons space section focusses performance simpli bettina berendt fig 

simulated navigation data 
top impact data set size number patterns isolation ps pl bottom combined impact data set size number patterns parameters 
cost context induced interestingness see text details 
fication simulated data tailored domain web usage mining performance base form simplification standard dataset 
section application oriented results respect real data described 
main performance results similar 
experiments focussed semantic abstraction node labels edge label abstraction mapping identity function 
fap ip implemented stl compiled compilation flag extending code gaston re obtained hms nl 
run pentium ghz processor gb main memory pc debian linux 
simplicity simulated data generated order markov models see variation number transactions sessions branching factor concepts level taxonomy number patterns total urls diversity patterns node parameterized transition probability ps randomly chosen node equal distribution transition probabilities nodes length patterns transition probability pl exit average session length pl pattern length increases 
parameter values reflected properties real web usage data 
obtain sufficient numbers diversity patterns data modelled undirected graphs constant edge labels 
semantics frequent subgraph mining fig 

pte dataset cost context induced interestingness see text details 
influence data set size number patterns studied isolation sessions duplicated generate sessions number patterns concatenated times generate sessions shows time linear data set size slope increases number patterns induced increasing concept branching factor 
plots data plus run intermediate branching factor number patterns keeping number sessions constant line 
shows setting time sublinear number patterns 
shows combined effects 
compares mere addition new transactions data addition transactions patterns shows algorithm scales linearly data set size 
similar graphs obtained wide variety parameter settings real data 
runtime increased average pattern size slightly linearly remained linear dataset size 
essential domains average pattern size stable datasets huge growing 
performance costs context induced interestingness performance fap ip directly compared existing frequent subgraph mining fsg algorithms algorithms different 
possible measure cost mining different semantic levels comparing fap ip underlying fsg miner number baseline settings 
cost measure consists parts cost additional interesting patterns time needed fap ip finding frequent aps ap frequent ips minus time needed underlying fsg miner finding frequent aps baseline 
ii cost finding patterns semantic structure time needed fap ip compared time needed underlying fsg miner finding frequent patterns aps baseline 
baseline lower bound fap ip involved operations strict subset operations involved fap ip 
baseline take longer baseline definitional upper bound lower bound relation fap ip 
underlying miner gaston baselines computed gaston ac data input 
baseline support thresh bettina berendt old fap ip run 
baseline lower support threshold determined follows fap ip returned patterns chosen support threshold support gaston lowered value returned patterns lowest value incr returning patterns 
procedure led considerably smaller regard conservative version baseline 
shows comparison settings branching factor 
comparing fap ip baselines sees fap ip need time difference increases number ips additional time needed small compared additional time needed find number interesting patterns conventional way 
expressed differently positive cost additional interesting patterns cost finding patterns semantic structure negative 
shows performance fap ip standard dataset pte chemical compounds web comlab ox ac uk research areas pte commonly investigated support values see 
strike balance comparability artificial data described previous research pte data taxonomy described formulated taxonomies reflect domain knowledge take account frequency distribution atoms dataset 
atoms grouped categories category atom number pte representation available gaston distribution modulo total number categories 
fap ip compared baselines 
directly compared finds frequent patterns restricted induced subgraphs 
shows time requirements baseline shows time requirements baseline 
solid lines equal figures show performance fap ip simplification 
addition shows baseline performance raw dataset frequent ips frequent aps shows performance fap ip categories optimization simplification 
times equal categories cases little ip ap 
reason times equal fap ip categories optimization simplification increase clarity lines removed figures 
general observation similar fig 
settings cost additional interesting patterns positive cost semantic structure interesting patterns negative 
experiments small dataset large pattern sizes performance relative baseline deteriorates support decreases number patterns increases 
examined settings program required mb main memory 
performance analysis fap ip graph clustering performed clustering done external system call weka package www cs waikato ac nz ml weka 
consequently requirements depend weka algorithm parameters chosen 
semantics frequent subgraph mining pre processing graph partitioning finding conceptual transaction structure number domains differently named nodes individual level synonymous purposes analysis 
example web navigation data raw data give rise graph node distinct url access log 
graph may adequate representation conceptual structure navigation sense consider visitor visited medical web pages text diagnosis text diagnosis text diagnosis picture diagnosis 
viewed structure concepts visitor request chain different instances general diagnosis concept ring involving distinct instances general diagnosis concept visitor returning concept 
applications adequate model original sequence 
allow mining interpretation steps applied node raw data concept taxonomy identified distinctions necessary analysis hand distinctions 
call base concepts 
ii original raw data graph partitioned collapsing nodes map base concept node collapsing edges turn 
formally add concept mapping function ac see section base concept function bc bc identical ac node child ac gives rise definition 
graph raw dataset concept mapping function bc conceptual transaction structure defined follows vp vd bc li lp vp ep vp vd vd ed bc li vd lp bc li vd lp 
self loops excluded edges removed 
mining graph dataset transactions replaced conceptual transaction structure 
frequent subgraphs defined def 
replaced preprocessing step may alter graph topology input data determines subgraphs ap frequent 
uses semantics describe base concept graphs exist 
contrast ap ip mining alter graph topology groups individual subgraphs isomorphic map frequent subgraph 
uses semantics identify graphs ap frequent interesting 
steps may necessary understand patterns conceptual level 
formalism portable datasets function maps item label finest level concept lc define ac bc mapping element concept 
shortcut simplify notation 
reason abstractions edge labels disregarded 
bettina berendt fig 

visualization taxonomy context pattern context 
ap ip visualization ap ip visualization tool front fap ip 
implemented java allows user navigate different dimensions different semantic detail context dimensions taxonomy context patterns individual patterns pattern context subpatterns transaction context patterns embeddings 
shows screenshot pattern part transactions subgraphs modelled undirected graphs dataset loaded mining parameters specified result computed frequent pattern appears top left window 
bottom window associated ap frequent individual pattern shown ips browsed searched number 
ips sorted frequency user tests showed absolute frequency values easier understand relative support values 
cluster option mining main menu entry starts dialogue specifies preprocessing script weka command line 
clustering results appear textual form ip window 
top right windows subpatterns shown part full ap lattice shown spanning tree pattern generation order 
rightmost inspect button transfers sub main window 
semantics frequent subgraph mining fig 

visualization transaction context 
transaction context shown separate window fig 

shows full context allowing representation transactions directed multigraphs shown alternatively spanning trees highlights embedded pattern 
part tool ism site maps created specifically visualize single sessions web usage mining 
depending requirements domain visualization options may adequate explored 
case study data navigation data large heavily information site investigated 
site offers different searching browsing options access database diagnoses roughly corresponding products ecommerce product catalog 
diagnosis number different information modes textual description pictures links diagnoses hyperlinked medical ontology links go differential diagnoses 
interface identical diagnosis identical language site offers time data collection english spanish portuguese german 
initial data set consisted close requests collected site server log november november 
order investigate impact language culture sequential search navigation behaviour log partitioned accesses country usual data preprocessing steps applied 
study log partition containing accesses france chosen sample log country logs size exhibited patterns differing support values 
sample log consisted requests sessions 
concept hierarchy mappings ac bc developed 
bettina berendt mining performed base concept graph types information diagnosis mapped base concept information search functions mapped values step location search 
remaining urls mapped corresponding leaf concepts taxonomy 
results basic statistics 
log example concepts corresponding high number individual urls concepts average individual urls highly diverse behaviour individual level 
reflected high ratio number ips aps compared simulated data support value frequent aps sizes ap frequent ips values sizes aps ips values aps ips 
search extended semantically interesting patterns 
fig 

selected frequent patterns 
chains diagnoses frequent patterns chain diagnoses support 
addition patterns diagnoses branching hub diagnosis shown left fig 
support frequent 
rings occurred slightly lower support thresholds see fig 
second left 
search options linear vs hub spoke patterns illustrated different search options 
internal search engine appeared patterns node patterns search engine diagnosis search engine alphabetical search probably subsequent switch second popular graph partitioning simple log data raw data scanned label replaced bc 
routine establishes graph structure works transformed log 
semantics frequent subgraph mining search option 
search engine popular search options far efficient sense searches generally ended diagnosis assuming finding diagnosis goal search sessions 
consistent results studies search behaviour 
alphabetical search option generally prompted hub spoke navigation shown right fig 
support fig 

contrast location search generally proceeded linear depth fashion shown far right fig 
support diagnosis 
may interpreted follows location search prompts user specify clickable map body parts contain sought disease 
search refined similar pattern followed diagnoses support 
narrowing medical problem aspect surface symptoms location body helps user identify approximately correct diagnosis find correct ones retaining focus symptoms finding diagnoses differential diagnosis links 
non expert users particular focus surface features meaning domain acquire medical knowledge process 
alphabetical search hand leads lists diseases narrowed domain constraints name starting letter 
navigation choices may wrong due mistaken memory disease name 
requires backtracking list diseases page choice similarly named diagnosis 
interpretation supported findings study navigation site participants specified physicians patients 
content search preferred patients physicians alphabetical search search engine 
investigation frequent individual patterns alphabetical search showed possible effect layout top level page diagnoses starting frequent 
pattern help filter accesses people just browsing order focus search patterns directed information search 
investigation frequent individual patterns location search showed combination human head location illness diagnosis visually prominently placed result page frequent 
possible effect layout navigation example patterns detected fap ip gone unnoticed individual pattern statistical threshold 
transaction context may give insights individual users user groups behaviour 
example resumption alphabetical search apparently fruitless location search fig 

temporal interpretation shown top bottom ordering fig 
justified site topology go diagnosis coarser bettina berendt coarser search options backtracking 
temporal interpretation backtracking going diagnosis likewise justified site topology left right ordering diagnoses arbitrary 
note may arbitrary number steps transition alph node fig 
diagnosis transition alph node second third diagnosis 
intentional abstraction time serves better underline hub nature alph page conceptual centre navigation 
results graph clustering reveals high number individual patterns observation commonly data individual patterns frequency constituted patterns 
reasons large database web site highly idiosyncratic information needs users request data record set data records infrequent 
obtain coarser meaningful groupings data url enriched icd international classification diseases icd cm com top level group referred 
query mining feature space representation patterns urls reasons apply web server log analyses understand visitors looking obtained empty result sets second urls amenable semantic analysis corresponding web pages consisted pictorial material heterogeneous characteristics 
domain specific ontology icd chosen general purpose ontology wordnet support interpretations avoid spurious similarities linguistic choices unrelated medical information content 
clustering em algorithm number clusters specified ex ante 
aps clusters returned manageable result set size 
example ap shown fig 
gave rise graph ips maximal frequency clusters minimum probability 
regardless search option aps rightmost fig 
small distinct subgroup patterns emerged involved socially embarrassing diseases cluster probability indicating high social value site anonymous point information 
result concerned diseases icd category injury poisoning associated alphabetic search location search mean values cluster representing patterns vs lbs clusters 
addition characterized important clusters longer chains diagnoses diagnoses mean cluster probability 
findings indicate diagnoses retrieved poisoning circumscribed symptomatic location body causes longer search histories desired information 
combined result alphabetic search suitable patients suggests alternative search options dialogues developed location unspecific diseases 
outlook semantics frequent subgraph mining described new mining problem ap ip mining problem fap ip algorithm solves 
fap ip uses taxonomy searches frequent patterns level returns individual subgraphs constituting 
motivated context induced interestingness individual subgraphs generally occur far seldom chosen support threshold interesting instantiations frequent patterns 
proposed graph partitioning graph clustering semantic pre postprocessing steps help focus fewer interesting patterns 
clustering approach advantage refer different taxonomies simultaneously take account semantic information different distance measures partition hierarchical clustering schemes employed grouping ap coarse fine required 
full taxonomy hierarchical structure ap principle possible analyzing ips graph structure clustering affords greater flexibility may avoid problems search space explosion 
research needed explore adequate measures cluster interestingness 
promising approach abstraction suggested inspection single transactions 
rings diagnoses log contained contents navigation search pages 
calls wildcards topological abstraction 
adequate interpretation results deal pattern overlap 
fap ip focusses pattern discovery algorithms finding patterns data set 
ap counted transaction embedded embedded different ways likewise ip counted transaction 
ap transaction different ips may occur transaction 
line idea finding ips doing complete pattern discovery ip level search episode abstracted ap potentially interesting 
patterns share common subgraph occurrences patterns embeddings transaction overlap disjoint 
different aps overlap different ips 
possibility pattern overlap common frequent structure miners including frequent subgraph miners described section 
consequence certain inferential statistics applied patterns combined modular way simulate typical transactions 
overlapping patterns avoided modifying mining algorithms count dataset item request url 
methods doing case frequent sequences described adapted fsg mining 
web dynamics pose interesting challenges ap ip mining content changes suffices extend url concept mapping bettina berendt done semantics evolve 
approach ontology mapping graph patterns comparable store abstracted representation patterns move past 

berendt 

site semantics analyze visualize support navigation 
data mining knowledge discovery 

berendt 

visualizing individual differences web navigation tool analyzing navigation patterns 


berendt hotho stumme 

usage mining semantic web 
kargupta 
eds data mining generation challenges directions pp 

menlo park ca aaai mit press 

berendt 

analysing visualising logfiles tool ism 
proc 
gor 

berendt spiliopoulou 

analysis navigation behaviour web sites integrating multiple information systems 
vldb journal 

borgelt 

canonical forms frequent graph mining 
proc 
workshop mining graphs trees sequences pkdd pp 


dai mobasher 

ontologies discover domain level web usage profiles 
proc 
nd semantic web mining workshop pkdd 



deducing term taxonomy term similarities 
proc 
knowledge discovery ontologies workshop pkdd pp 


vazirgiannis 

site semantics taxonomy enhance web personalization process 
proc 
sigkdd pp 


hofer borgelt berthold 

large scale mining molecular fragments wildcards 
advances intelligent data analysis 
pp 


huan wang prins 

efficient mining frequent subgraphs presence isomorphisms 
proc 
icdm pp 


inokuchi 

mining generalized substructures set labeled graphs 
proc 
icdm pp 


inokuchi washio motoda 

apriori algorithm mining frequent substructures graph data 
proc 
pkdd pp 


inokuchi washio nishimura motoda 

fast algorithm mining frequent connected subgraphs 
research report ibm research tokyo 

jin wang parthasarathy agrawal 

discovering frequent topological structures graph datasets 
proc 
sigkdd pp 


jin zhou mobasher 

maximum entropy web recommendation system combining collaborative content features 
proc 
sigkdd pp 


berendt 

language sensitive search behaviour role domain knowledge 
new review hypermedia multimedia 

berendt 

impact culture website navigation behaviour 
proc 
hci international 

karypis 
frequent subgraph discovery 
proc 
icdm pp 




graphic numerical methods assess navigation hypertext 
int 
human computer studies 

th borgelt ch berthold 

mining fragments fuzzy chains molecular databases 
proc 

mining graphs trees sequences pkdd pp 

meo esposito 

integrating web conceptual modeling web usage mining 
proc 
webkdd workshop sigkdd pp 


nijssen kok 

frequent structure mining difference 
proc 
sigkdd pp 
extended version leiden univ leiden netherlands tech 
report april hms nl 

oberle berendt hotho gonzalez 

conceptual user tracking 
proc 
pp 


srikant agrawal 

mining generalized association rules 
proc 
st vldb conference pp 


srikant agrawal 

mining sequential patterns generalizations performance improvements 
proc 
edbt pp 


fischer philippsen 

quantitative comparison subgraph miners gspan gaston 
proc 
pkdd pp 


yan han 

gspan graph substructure pattern mining 
proc 
icdm pp 


yan zhou han 

mining closed relational graphs connectivity constraints 
proc 
sigkdd pp 


za ane han 

discovering web access patterns trends applying olap data mining technology web logs 
proc 
adl pp 


zaki 

efficiently mining trees forest 
proc 
sigkdd pp 

