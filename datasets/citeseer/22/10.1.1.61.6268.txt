computational soundness formal indistinguishability static equivalence bana till department computer science university california davis usa cs upenn edu cs ucdavis edu cs ucdavis edu 
research relationship formal computational view cryptography approach proposed uses static equivalence cryptographic pi calculi notion formal indistinguishability 
previous shown yields soundness natural interpretations interesting equational theories certain cryptographic operations theory xor 
argue static equivalence coarse sound interpretations equational theories general 
show explicit examples static equivalence fails interesting cases 
fix problem propose notion formal indistinguishability flexible static equivalence 
provide general framework general theorems discuss new notion works explicit examples static equivalence failed ensure soundness 
improve treatment ordered sorts formal view allowing arbitrary probability distributions interpretations 
past years significant amount effort link formal computational methods cryptography 
ways treating cryptographic protocols largely developing independently seminal dolev yao second growing goldwasser micali 
methods advantages drawbacks 
computational method gives realistic detailed description actual protocol probability theory limited computational power account security proofs model done hand complicated notoriously hard verify 
formal method high level treatment amenable automatization reliability questionable protocol formally secure may computationally may insecure reality 
important translate model characterize security proofs simpler formal framework carry computational setting 
address question abadi rogaway passive adversaries 
approach equivalence relations formal computational sides specify messages look indistinguishable adversary define security protocol 
fixing encryption scheme concrete implementation formal operations intuitive interpretation assigns computational object ensemble probability distributions bit strings formal expression 
question arises circumstances equivalence relation preserved interpretation 
formal equivalence expressions implies computational equivalence interpretations say model sound 
mathematical equivalent saying security formal model implies security computational model 
conversely model complete computational equivalence interpretations formal expressions implies formal expressions equivalent 
completeness model indicates formal equivalence notion question supported packard fellowship 
fine formal equivalence relation distinguishes pair distinguished computational side formal model trivial 
note soundness hold trivial case expression equivalent 
completeness important find attacks formally completeness holds existence formal attack implies existence computational attack 
abadi rogaway proved soundness language encryption scheme interpretation call type secure basically hides plaintext 
number papers followed proving completeness generalizing weaker realistic encryptions schemes considering purely probabilistic encryptions including limited models active adversaries addressing issue forbidding key cycles necessary condition originating fact traditional security notions don deliver security keys encrypt cyclically 
line analysis followed abadi rogaway approaches topic emerged 
notably active adversaries considered backes canetti reactive simulatability universal composability frameworks respectively 
probabilistic polynomial time semantics explicit probabilistic reasoning notable 
previous addresses issues related emerged branch relating formal computational models passive adversaries equivalence relation formal side static equivalence cryptographic pi calculi induced equational theory 
equational theories provide framework model algebraic axioms formal world axioms groups rings exclusive equational theory fixed means setting certain formal terms equal static equivalence uniquely determined 
roughly speaking tuples formal terms statically inequivalent formally distinguishable adversary able come formal computations tuples yield results identical equational theory yield different results tuple 
baudet cortier kremer equivalence notion formal side proving soundness exclusive certain symmetric encryptions deterministic length preserving 
abadi employ framework analyze principled formal account guessing attacks 
contributions show static equivalence works obtain soundness results cases analyzed papers important cases flexible notion needed 
brief exposition consider decisional diffie hellman assumption 
baudet describe equational theory describing group exponentiation including logarithm tuples ab statically equivalent 
interpretation theory certain computational group scheme sound scheme satisfies ddh assumption 
formally equivalent 
example ab equivalent statements necessarily implied ddh assumption satisfied 
reason think computational group scheme exists 
analysis goes direction formal model interpreted sound manner computational model look formal theory simplifying sound 
computational scheme satisfies ddh assumption may satisfy conditions mention infinitely follow static equivalence static equivalence group scheme achieve soundness 
course know interpretations formal tuples computationally distinguishable may able incorporate distinguisher formal theory forcing tuples formally inequivalent 
cases don know interpretations inequivalent explicit 
case play safe better assume distinguishable formal theory constructed 
argue equivalence relation finer static equivalence necessary fit number interesting cases static equivalence suitable 
call type equivalence relation formal indistinguishability relation fir 
require properties fir properties initial set relations generate fir 
pair statically inequivalent inequivalent respect formal indistinguishability relation 
static equivalence instance fir 
order test soundness respect computational interpretation check soundness set relations generate fir question 
soundness holds generating set relations soundness holds total 
introducing equivalence notion improvements theory 
baudet require interpretations distribution sampled twice probability collision negligible 
assume exclude formal representation interesting functions significant bit 
ordered sorts allowing names multiple sorts 
introducing basic framework proving general propositions discuss examples 
mentioned ddh assumption discuss introduce fir soundness equivalent ddh assumption 
second example considers case key cycles laud solution 
laud proposed want exclude key cycles theory want assume encryption scheme stronger usual assumptions cpa cca simply assume formal adversary decrypt ciphertexts encrypted keys key cycle 
show assumption corresponds formal indistinguishability relation 
third example describes embedding boolean propositional logic fails sound respect static equivalence formal terms computationally distinguishable turn statically equivalent 
outlined follows 
section describe syntactical framework 
section presents interpretation formal model computational world 
definitions soundness completeness faithfulness useful propositions section 
section apply new definition examples 
jonathan herzog phillip rogaway andre scedrov valuable discussions topic 
formal model subsection summarize treatment including static equivalence subsection introduce new notion formal indistinguishability 
signatures terms frames signature pair triple countably infinite set sorts partial order finite set function symbols 
sorts usually notation 
symbols 
assume unique arity sk 
sk 
constant denote furthermore countably infinite sets elements called variables elements names 
demand sets pairwise disjoint 
assume names variables sorted name variable subset su assigned write say sort su 
require implies set su minimum denote 
subset set names set variables 
require sort infinite infinite empty renaming bijection name terms language sorted elements usual term sort write terms sort defined follows 
tk variable name function symbol arity sk 
sk term ti sort si 
set terms denoted term var set variables occurring names set names occurring term said closed var 

xn distinct variables 
tn terms ti xi 
sorted substitution written 
xn tn 
sorted substitutions omit term sorted 
image substitution xi ti written means occurrence xi replaced ti remains unchanged 
ti closed said closed domain set dom 
xn set var variables union sets var ti 
example 
examples refer paragraph subsection second paragraph subsection 
define postulate axioms 
short equational theory equivalence relation terms stable sorted substitution terms variables application contexts renaming 
definition 
equational theory signature equivalence relation written infix notation set terms properties implies substitution ii implies term variable ti iii implies renaming 
relation intersection equational theories containing smallest equational theory containing say equational theory generated example 
examples refer second paragraph subsection third paragraph subsection 
frame expression substitution names 
list elements explicitly emphasis leave uniquely determined underlying substitution 
say closed closed substitution 
set frames respect understood signature denoted set closed frames denoted fc 
equational theory frame say term deducible respect written exists term var dom names names names means substitution variables substitution 
suppose closed frames dom dom terms var var var sharing names 
intuitively means carrying computations permitted model determined inputs provided get equal results carrying computations input provided produces differing results 
computations distinguish 
distinction closed frames possible way say frames statically equivalent 
definition 
closed frames domain statically equivalent respect equational theory written terms var var var names occurring 
denote static equivalence subset fc fc 
formal indistinguishability frame names ti xi ti frame denote frame names ti names xi ti frames 
disjoint domains 
frame corresponding combination substitutions 
definition formal indistinguishability relation 
formal indistinguishability relation respect equational theory equivalence relation set closed frames dom dom ii frame closed frames var dom names names iii frames implies implies iv renaming 

corresponding sections equivalent frames equivalent 
example names ti xi ti names xi names names names names 
follows ii setting 
frames dom dom dom dom names names names names 
reason 
choose renaming names names names names 
done assumed infinitely names sort 
iv see 
dom dom 
xk 
xk xk 
ii follows 
iv assumption holds applying ii similar fashion obtain 
putting 
useful propositions proved appendix 
proposition 
static equivalence formal indistinguishability relation respect equational theory proposition 
intersection arbitrary number formal indistinguishability relations respect equational theory formal indistinguishability relation 
proposition 
consider static equivalence subset fc fc 
unique smallest subset containing infix notation formal indistinguishability relation respect generated way fc fc 

names 
renaming transitive closure relating formal computational models computational interpretation formal model 
definition equivalent baudet difference allow probabilistic opposed deterministic interpretations symbols ordered sorts 
closed term interpretation assigns ensemble probability distributions bit strings 
definition generalization abadi rogaway originally defined 
signature computational algebra pair fa sort probability distribution polynomial time algorithm draw random elements fa fa fa supp supp sk probabilistic function computable polynomial time 
supp denotes support probability distribution set distribution gives non zero probability 
computational algebra fixed associate probability distribution closed term algorithms 
names supp convert algorithm convert name return 
mk 
ei convert mi fa 
ek return interpretation defined algorithm interpret names convert return security parameter probability distribution convert denoted ensemble denoted call computational interpretation term course name reader note repeated occurrences name random outcome construction corresponding parts completely correlated 
occurrences symbol corresponding occurrences fa invoked independent random coins 
define interpretation closed frame 
xn tn algorithm interpret names 
xn tn ei convert ti 

xn en return notation probability distribution sampled interpret fixed security parameter ensemble distributions call computational interpretation frame model similarly interpretation terms name occurs twice frame corresponding parts interpretation completely correlated 
standard equivalence notion computational world computational indistinguishability 
ensembles probability distributions indexed security parameter said computationally indistinguishable probabilistic polynomial time algorithm distinguish 
formal expressions interpreted consider computational indistinguishability interpretations closed terms closed frames 
notation respectively 
explicitly means ppt algorithm adv pr pr negligible function fixed natural adv sufficiently large 
soundness completeness faithfulness computational model cryptographic scheme sense closer reality formal representation detailed description 
accuracy formal model characterized close computational model specifically formal computational indistinguishability relate interpretation 
important concepts describe definition 
definition 
computational algebra formal indistinguishability relation set frames fc 
say computational algebra sound closed pair frames implies complete closed pair frames implies faithful closed pair frames implies statistical distance negligible ppt algorithm adv negligible 
notions adopt convention set mentioned assumed fc 
known advantage adversary trying distinguish distributions equal statistical distance distributions 
faithfulness means frames formally distinguishable algorithm distinguishes interpretations best possible 

model sound terms indistinguishability fine grained computational model 
particular formal proofs indistinguishability valid proofs computational indistinguishability 

faithfulness definition different baudet 
require existence adversary advantage negligibly close just nonnegligible 
interesting cases assumption strong example shows 
discuss faithfulness example 
example 
suppose add function symbol lsb data data theory data sort 
think significant bit accordingly define interpretation lsb function significant bit significant bit 
consider frames ab lsb lsb lsb lsb 
interpretation security parameter frame contain independent bits uniform distribution interpretation second frame contain completely correlated bits uniform distribution 
adversary distinguish distributions advantage greater statistical distance 
adversary outputs bits identical different clearly best possible 

completeness rewritten form closed pair frames implies 
looks computationally looks formally 
notion weaker faithfulness faithful interpretation complete 
definition 
computational algebra equational theory 
say sound pair closed terms implies pr negligible 
complete pair closed terms implies pr negligible 

reader may ask adversaries definition 
example sense define soundness pair closed terms holds fact advantage adversary trying distinguish distributions exceed statistical distance easy show definition equivalent 
proposition shows fir generated set fc fc suffices check soundness pairs frames see sound 
proof included appendix 
proposition 
computational algebra sound 
suppose binary relation closed frames implies 
sound 
corollary 
computational algebra fc fc sound 
sound 
applications section exemplify utility formal indistinguishability relations refine static equivalence 
theory groups exponentiation obtain fir soundness equivalent decisional diffie hellman assumption 
show handle key cycles encoding laud approach formal indistinguishability relation 
give example propositional boolean logic natural model sound respect static equivalence sound respect particular fir 
decisional diffie hellman assumption consider equational theory model commutative group exponentiation 
sorts trivial ordering function symbols exp simplify notation write exp 
equational theory generated equations observe include symbol discrete logarithm language 
reason want assume computing feasible adversary 
computational group scheme set computational group schemes see example full version computational interpretation signature straightforward 
names sort mapped ensemble distributions corresponding generation random group elements names sort correspond generation ring elements 
addition multiplication translated addition multiplication ring elements group elements correspondingly 
baudet point theory frames ab statically equivalent 
distinguishing interpretations frames decisional diffie hellman problem 
computational implementation sound respect static equivalence imply ddh assumption holds group scheme 
unfortunately soundness imply ddh assumption 
example gab gabc naturals soundness imply computational interpretations indistinguishable 
gab ab gabc 
unreasonable require hold computational implementation 
suggest formal indistinguishability relation 
want assume ddh assumption holds simply set gab ab gabc proposition computational interpretation sound ddh assumption holds 
model exactly frames equivalent equivalence necessarily follows ddh assumption algebraic identities included model 
example gab ab gabc gg ab gg gg gg gg ab gg gg gg gg gg 
follows commutativity group operation property ii iv formal indistinguishability relation definition example case uniform distributions gg computationally indistinguishable 
case include pair frames gg gg gg equivalence follow commutativity 
alternatively include ab ab ab follows gg adf ad adf gg df ad 
key cycles baudet consider equational theory encryption schemes prove soundness static equivalence key cycles excluded 
example framework static equivalence abadi key cycles excluded 
problem key cycles specific static equivalence 
necessarily comes investigation relationship formal computational models abadi rogaway exclude 
ways include key cycles 
encryption scheme interpretation secure presence key cycles formal indistinguishability relaxed 
problem realistic encryption scheme known secure key cycles 
laud proposed simple solution second way simply assume formal adversary decrypt encryptions encrypted keys part key cycle 
formalism means switching static equivalence formal indistinguishability relation 
illustrate recasting original abadi rogaway treatment formalism showing laud solution provides special fir 
abadi rogaway formal language gives signature terminology key data cipher pair key key data cipher data pair data names sort key 
function symbols enc data key cipher symmetric encryption dec data data data symmetric decryption pair data data pair pairing fst data data projection snd data data second projection error data constants equational theory generated equations dec enc pair fst snd fst pair snd pair furthermore dec error sort incomparable cipher incomparable key fst snd error incomparable pair 
computational encryption scheme computational way pairing straightforward assign computational algebra signature simply interpret formal function symbols computational counterpart key distribution key generation 
order state result analogous abadi rogaway need definitions definition 
frame formed contain symbols dec fst snd error 
formed frame set recoverable keys keys deducible keys names key 
set keys consists keys encrypt outermost undecryptable terms undecryptable terms deducible keys names enc keys 
say keys cyclic keys 
km keys km terms 
mm mm ki occurs mi positions second argument enc enc mi ki occurs 
reason excluding symbols abadi rogaway considered expressions built encryption pairing 
symbols course definition static equivalence 
result abadi rogaway says encryption scheme secure type secure defined formed frames implies keys keys cyclic 
exclusion key cycles necessary long encryption scheme type secure 
fact standard computational notions security necessary exclude key cycles 
encryption scheme satisfies stronger security definitions instance kdm secure see key cycles cause problems realistic kdm secure encryptions known time 
mentioned laud method keep computational algebra switch static equivalence formal indistinguishability relation formal side sound presence key cycles 
define static equivalence minus pairs contain key cycles side 
soundness including key cycles hold 
precisely proposition true proposition 
computational algebra 
fc fc set formed keys cyclic formal indistinguishability relation generated formed frames implies proof 
proposition clearly holds removed key cycles 
proof similar proposition 
boolean algebra give example static equivalence identifies frames computationally clearly distinguishable fine grained formal indistinguishability relation better 
consider signature contains symbols constants lsb equational theory generated set tautology propositional boolean algebra 
denote computational algebra supp supp spaces equipped uniform distribution support 
operations interpreted obvious operations boolean algebra defined 

clear sound 
sound ab lsb lsb cd lsb lsb simply ab cd interpretation left hand side distributed pr right hand side pr clearly distinguishable 
satisfy requirement baudet names pr negligible satisfied making minor changes model 
remedy problem static equivalence custom formal indistinguishability relation 
frame sort domain easy compute explicitly probability distribution interpretation formal expressions 
writing explicit recursive formula just consider example ab pr pr pr pr 
define binary relation generating formal indistinguishability contains pairs domains variables sort identical probability distributions 
definition gives formal indistinguishability relation sound faithful 
suggested generalized notion formal indistinguishability provides greater flexibility static equivalence 
needed computational distinguishability just trying distinguish algebraic manipulations allowed formal model 
unrealistic expect indistinguishability relation defined purely algebraic manner relatively simple formal model cover subtleties computational indistinguishability 
computational indistinguishability complex notion cases possible distill simple formal indistinguishability relation impose formal model get sound meaningful theory 
utility new definition demonstrated section pointed natural models certain equational theories static equivalence insufficiently coarse notion formal indistinguishability showed come different indistinguishability relation identify expressions needed 

abadi baudet warinschi 
guessing attacks computational soundness static equivalence 
proceedings th international conference foundations software science computation structures fossacs 
springer verlag march april 
appear 

abadi fournet 
mobile values new names secure communication 
popl proceedings th acm sigplan sigact symposium principles programming languages pages new york ny usa 
acm press 

abadi gordon 
calculus cryptographic protocols spi calculus 
information computation january 
full version available src research report january 

abadi rogaway 
reconciling views cryptography computational soundness formal encryption 
journal cryptology january 
preliminary version ifip tcs 

ad bana herzog scedrov 
soundness formal encryption presence key cycles 
de di vimercati syverson gollmann editors proceedings th european symposium research computer security esorics volume lecture notes computer science pages milan italy september 
springer 

ad bana scedrov 
computational information theoretic soundness completeness formal encryption 
proceedings th ieee computer security foundations workshop csfw pages aix en provence france june 
ieee computer society press 

backes pfitzmann 
symmetric encryption simulatable dolev yao style cryptographic library 
proceedings th ieee computer security foundations workshop csfw pages pacific grove ca usa june 
ieee computer society press 
full version available iacr eprint archive report 

backes pfitzmann waidner 
composable cryptographic library nested operations 
jajodia jaeger editors proceedings th acm conference computer communications security ccs pages washington usa october 
acm press 
full version available iacr eprint archive report january 

baudet cortier kremer 
computationally sound implementations equational theories passive adversaries 
proceedings nd international colloquium automata languages programming icalp volume pages 
springer verlag july 

canetti 
universally composable security new paradigm cryptographic protocols 
nd ieee symposium foundations computer science focs pages las vegas nv usa october 
ieee computer society press 
full version available iacr eprint archive report 

ran canetti jonathan herzog 
universally composable symbolic analysis mutual authentication key exchange protocols 
proceedings theory cryptography conference tcc march 

cramer shoup 
practical public key cryptosystem provably secure adaptive chosen ciphertext attack 
krawczyk editor advances cryptology crypto volume lecture notes computer science pages santa barbara ca usa august 
springer 
full version available iacr eprint archive report dec 

datta derek mitchell shmatikov 
probabilistic polynomial time semantics protocol security logic 
italiano monteiro palamidessi yung editors proceedings nd international colloquium automata languages programming icalp volume lecture notes computer science pages lisbon portugal july 
springer 

dolev yao 
security public key protocols 
ieee transactions information theory march 
preliminary version focs 

goldwasser micali 
probabilistic encryption 
journal computer systems sciences april 
preliminary version stoc 

guttman thayer zuck 
faithfulness protocol analysis message authentication 
samarati editor proceedings th acm conference computer communications security ccs pages philadelphia pa usa november 
acm press 

laud 
encryption cycles views cryptography 
proceedings th nordic workshop secure systems number university studies pages sweden november 

laud 
symmetric encryption automatic analyses confidentiality active adversaries 
proceedings ieee symposium security privacy pages oakland ca usa may 
ieee computer society press 

micciancio warinschi 
completeness theorems abadi rogaway logic encrypted expressions 
journal computer security 
preliminary version wits 

micciancio warinschi 
soundness formal encryption presence active adversaries 
naor editor proceedings st theory cryptography conference tcc volume lecture notes computer science pages cambridge ma usa february 
springer 
proofs proof proposition proof 
items iii trivially satisfied consider frames ii 
terms variables included dom dom dom names common 
names names names names names disjoint names assumption condition ii 
names names disjoint likewise 
holds definition static equivalence 
exactly prove see 
see iv construct renaming way names equal names names identity map 
define names names 
sort preserving bijection number elements names names number elements names names sort names names names equals names names names 
names names choose bijection names names easy see sort preserving bijection question 
expression shares names holds 
expressions happens bijection follows 
proof proposition proof 
indexing set sequence formal indistinguishability relations respect equational theory intersection 
clearly equivalence relation 
items iii trivially satisfied ii 

likewise preserved renaming variables preserved 
iii iv satisfied proof proposition proof 
existence smallest set clear 
order prove statement generate consider transitive closure clear definition symmetric reflexive transitive equivalence relation 
clear definition formal indistinguishability relation construction stay show formal indistinguishability relation 
construction clear satisfies properties iii iv formal indistinguishability relation ii remains 
suppose ii show frames 
pairs 
loss generality assume names names names 
moved away renaming resulting pairs frames show transitivity ensures fix assumption frames form 


renaming names 
names 
names names replace names fresh ones 
done don show similarly 

names occurring 
yl fresh variables 
replace occurrence ak variable yk obtaining frame names 

yl 

yl 
assumption names names proof proposition proof 
consequence proposition sufficient verify production rules preserve computational indistinguishability interpretations frames 
reflexivity transitivity symmetry implied fact computational indistinguishability equivalence relation 
definition interpretation frame clear frame renaming show ii definition implies suppose probabilistic polynomial time adversary advantage pr pr non negligible 
gives adversary distinguishes non negligible advantage concrete frame sample element simply interprets frame values specified variables occurring 
variables assigned unique value sampled var dom 
adversary constructs concrete frame runs outputs output sampled distribution exactly advantage pr pr equals advantage non negligible 
furthermore runs probabilistic polynomial time size encoding constant computed probabilistic polynomial time 
proves claim contraposition 

