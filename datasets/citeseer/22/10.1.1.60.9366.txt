replace file sty meeting sty meeting 
entcs macro home page 
construction attack resistant efficient overlay streaming topologies thorsten jens nter sch fer department telematics computer networks technische universit germany overlay streaming inherently fault tolerant stable system architecture careful neighbour selection significant task 
inappropriate routing decisions lead unstable topology important nodes large set succeeding nodes depend 
algorithm selects streaming neighbours local information passing knowledge parent nodes 
similar splitstream creates inner node disjoint multicast trees 
created topologies broad short paths improving resistance node failure intentional attacks 
malicious node gain knowledge different regions topology successors deliberately move important position hierarchy 
characteristics created topologies revised static simulation study calculating vertex connectivity packet loss node disconnections 
key words service availability application layer multicast cooperative streaming resilient overlay networks content dissemination generally follows main delivery techniques client server unicast network multicast application layer multicast 
client server system architecture relatively easy implement set currently prevalent solution 
suffers draw backs unscalable number clients having single point failure server cluster servers 
network layer multicast far scalable due data replication routers backbone email thorsten tu de email jens de email schaefer tu de published elsevier science sch fer suffers low acceptance largely deployed today 
fact due multitude problems including billing issues inherent lack scalability number multicast groups 
overlay streaming application layer multicast alm resources edge network introduces different load balancing scheme 
due self organisation inherently resistant failure attack nodes 
stability increased multi source systems contrast single source systems construct single streaming tree 
contrast node receives different parts content different nodes nodes necessarily reliant single preceding node 
peer peer systems proven resistant failures organised interference 
robustness system architecture apparent observing file sharing systems efforts disable 
contrast client server set ups cooperative overlays introduce dynamic participants joining leaving failing service cause significant jitter packet loss 
fortunately multimedia streaming services tolerate loss certain fraction packets 
specific error rate exceeded perceived quality presentation drops dramatically 
streaming system defined working properly long participants receive stream acceptable quality 
damage turn measured fraction defective missing frames receivers 
overlay streaming systems basically consist services look service locate resources content participants streaming service parent selection data delivery concerned nature streaming service 
high data rates required efficiently deliver entire content strict timing constraints participants system 
voluminous content cached large quantities easily reproduced 
additional limitation fact content originates single source routed overlay 
node consequently dependent successful operation preceding forwarding nodes part path source 
node failure initially leads loss packets forwarded child nodes successors 
bandwidth participating nodes limited nodes usually maintain high connectivity simply switch source nodes 
furthermore redundant delivery packets immediately leads unwanted traffic overhead 
characteristics effect failures worse intentional attacks important nodes streaming overlay high impact quality received service 
fundamental done understand fault tolerance networks comparably easy create topologies resistant sch fer random node failure accomplishing attack resilience significantly harder task 
implementing quick fall back strategies creating topologies leaf nodes small number forwarding nodes high resilience node failure achieved 
load case provided nodes node failures large set receiving nodes impact 
attacker probably try gain information topology possible choose important node break 
finding nodes directly indirectly serve high amounts nodes protocol analysis probing attacks lead complete destruction service 
consequently addition building efficient overlays main goal robustness topologies node failures importantly attacks 
algorithm construct topologies evenly distributed dependencies order avoid large groups nodes relying small set predecessors 
streaming trees need low possible unnecessary dependencies introduced 
addition algorithm needs suffice little information impossible attacker quickly detect important nodes targets 
construction topologies keeping information secret possible obviously competing goals 
trade 
new scalable distributed algorithm creates attack robust overlay streaming topologies 
aim achieve resistance creating topologies short source receiver paths 
order obtain low degree dependency connected nodes content striped equally sized parts 
node chooses different parents stripe confine damage single failing parent regarding part stream 
short paths source participants constructed avoid chains nodes dependent preceding nodes concerned stripe 
result created overlays high node connectivity low diameter 
rest organised follows related section followed model approach section simulation study section draw describe section 
related research resistant stable peer peer streaming systems divided main categories 
approach achieve quality stream receiver means fec content encoding schemes 
second class systems builds overlays path diverse routes network layer :10.1.1.161.2760
third approach including prm splitstream attempt construct routing overlay topologie robust errors attacks 
sch fer probabilistic resilient multicast prm derivative nice application layer multicast addition regular packet relaying implements randomised forwarding scheme retransmission lost packets 
node top usual child nodes provided received packet chooses additional nodes random 
packets forwarded additional nodes low probability introducing slight redundancy data delivery leads lower susceptibility node failure 
similar prm hierarchical clustered application layer multicast derived nice 
nice cluster cluster leader responsible managing groups forwarding packets siblings cluster member introduces leaders caching strategies order increase resilience 
additionally organises nodes fat trees broadband nodes moved close source low bandwidth nodes moved edge system 
prm achieve robustness specifically constructing stable graphs redundancy reordering caching 
attempts create resistant topologies increasing vertex connectivity streaming overlay 
alongside main goal creating stable topology second goal implement network awareness order achieve network efficient overlays 
approach organise peers directed acyclic graph dag node connecting minimum number parent nodes 
main issues system locating source nodes keeping system circle free 
previous considered constructing dag routing topology live overlay streaming system 
results showed vertex connectivity increase amount selected source peers node 
fact experience close impossible maintain high vertex connectivity nodes level dag serve nodes act relevant hubs 
minimum cut set failure serious impact performance system 
problem identified need information distance node stream source 
hand necessary creating loop free dags gives possible attacker easy access knowledge topology 
main goal splitstream balance load evenly participating nodes avoid unfair distribution load small subset forwarding nodes versus leaf nodes multicast tree 
order create node disjoint paths stripes node aims forwarding stripe id prefix matching 
forwarding topology created rpf route joining request peers en route node member group reached 
transfer different stripes parts stream stripe registered unique multicast group 
splitstream introduces spare capacity group node available bandwidth member avoid bandwidth sch fer shortages dead locks 
design interior node disjoint trees stripe layered streaming codec leads better stability random node failure long nodes served spare capacity group 
regarding resilience splitstream shortcomings 
fact splitstream consider height branches streaming trees unfortunate circumstances susceptible node failures 
second important problem fact splitstream node gather information topology especially locate nodes stripe groups stripes mapped node ids 
resilient streaming overlays content routed source system application layer multicasts create topologies connections neighbouring nodes 
single source streaming systems build chains multicast trees multi source streaming systems create dag cyclic network disjoint multicast trees 
topologies represented special instances graphs system model 
model principle participant vs original source multimedia content camera attached networking device 
joining system requesting node vr locates potential parent nodes joined streaming service forwarding relays 
participating node turn receiving content offers service relaying 
consequently overlay modelled undirected graph finite set vertices 
vn data source vs set edges 
additional packet stream 
pk packets stripes replicated vertex originates data source 
neighbour selection follows local routing decisions limited available bandwidth relaying nodes 
decisions lead efficient mapping overlay underlying backbone avoid unnecessary traffic 
aggregated routing decisions lead topology system 
model efficient routing non negative edge length latency connection ii vertex capacity bandwidth access link problem find rooted spanning trees 
tk ek minimum total cost sch fer ti ei constrained degree vertex ti vs root trees 
merging spanning trees results multigraph ek streaming topology 
basic stability characteristics derived analysing properties multigraph source splits content stripes bandwidth capacity delivering content times nodes direct connection source 
breakdown node leads packet loss successors topology topology destroyed completely simply removing nodes connected source 
broadening topology nodes remain minimum cut set 
due inappropriate routing decisions topology develop characteristics smaller number nodes minimum cut set 
high node dynamic overlay streaming systems dependence nodes path source receiving nodes short possible 
multi source approaches connect child nodes relaying parent implicitly create multitude trees 
resulting topology directed acyclic graph network cycles depends routing decisions nodes 
construction directed acyclic graphs networks hold different possibilities achieve stability 
network node different stripes parent child node dag nodes organised strictly hierarchical 
event failing node orphaned child nodes dag need find position nodes hierarchy order locate alternative parent nodes avoiding loops 
systems creating dag draw backs uneven relevance distribution nodes possibility gain knowledge importance 
networks contrast extra means avoiding loops needed hand 
importance nodes hand balanced better rearranging 
promising approach create stable topologies keep trees balanced low possible splitstream organise participants trees node relaying peer tree receiving leaf 
strategy effect node connectivity decrease amount stripes sch fer resulting digraph broadens branches 
best case minimum cut set set nodes directly connected data source 
basic protocol description introducing properties possible streaming topologies want approach creating stable topologies 
original stream divided stripes forwarded disjoint paths means node forwarding stripes 
stripes allocated node choosing stripe forwards nodes 
streaming service consists operations connect disconnect data delivery pass child 
joining operation joining stream divided basic phases 
stream participating nodes discovered streaming service joined 
locate streams different content order able find set potential parent nodes look service needed 
order construct network efficient overlay topology aware peer peer look service implemented distributed hash table dht location node id assignment 
soon node knows potential parent nodes chooses closest id issues connect request stripes 
contacted node send connection confirmation start forwarding packets reply disconnect request 
connect confirmation disconnect request primitive contain alternative relaying peer requested stream 
node receives disconnect request chosen parent sends new connect request alternative node disconnection message 
topology control reception incoming connection request node accept new connection establish link forward packets requested stripe new child node long available bandwidth left 
requested node runs available bandwidth able serve child nodes node detects major changes topology node requested forward stripe preferred stripe initiates local topology optimisation 
disconnects links moves child nodes different relaying nodes asks child nodes hand part nodes serve re balance amount successors 
topology optimisation done phases 
phase node compares child nodes determines node poses highest cost adds benefit optimal topology 
cost measured evaluating factors order number sch fer links node maintains child child receives stripe different preferred child serves nodes 
second phase node forward disconnected stripe selects node serves nodes alternative source sends disconnect notification dropped node 
strict division stripes cases lead dead locks 
case node drop expensive links forward stripe addition preferred 
try pass respected link different node round 
order able keep topology balanced forwarding nodes keep track amount successors child nodes successors 
node updates successor information parents observes situation change 
keep protocol overhead low highly dynamic phases done waiting ms additional changes 
forwarding node detects uneven topology solve moving node child nodes parent due bandwidth available sends pass node request child successors 
child node sends disconnect request parent alternative node 
leaving node leaves may happen different reasons gracefully quitting service node failure 
event node deliberately leaving service issues disconnect request parent receives forwarded stripe child nodes 
node failure parent detected timeout reacted connecting alternative node parent sent connection confirmation 
fall back node longer part system connection request sent existing parents 
case old parents predecessors remain alive system node start searching parents look service 
performance study order examine algorithm routing decisions takes evaluated characteristics evolving topologies 
simulations system conducted varying capacities amounts stripes acquire snapshots topologies testing 
judge stability metrics measure resistance mean node connectivity fraction received packets node removal 
node connectivity gives indication nodes successfully attacked order achieve fragmentation completely disconnecting group nodes streaming overlay 
equal sch fer number stripes node tries forward preferred stripe bandwidth capacities 
service receiver rendered useless soon comparably low percentage packets missing define service working properly long certain proportion correct packets received 
analyse resilience service breakdown implemented graph representations topologies measured impact node disconnections amount packets 
nodes disconnected chosen random perfect realistic attack 
stable topologies node removal lead packet loss stripe succeeding nodes keeping service alive decreasing quality 
fig 

mean amount disjoint paths source study yield expected results 
lower numbers stripes algorithm created equal amount node disjoint paths observed gain node connectivity grow anticipated 
rising amounts stripes low bandwidth capacities number node disjoint paths increased linear gradient see fig 

topologies created streaming stripes low bandwidth capacity obviously led characteristic significant amount nodes served paths 
increasing capacity helped solving bottleneck situations topologies showed asymptotic behaviour theoretical limit disjoint paths 
additionally increasing number stripes capacity led higher vertex connectivity indicating topologies stable higher amount stripes streamed 
second step exposed topology snapshots node disconnections 
complete routing topologies represented forest multicast trees nodes removed original streaming packets received correctly directed multigraph topology snapshot functions sch fer inca degree drop inca tested nodes fail node failure causing removal alls succeeding links failing node leading drop rd rd 
threshold merely theoretic quality highly dependent codec amount remaining participants requirements service provider 
get idea worst case stability tried find minimum set implemented attack global knowledge 
greedy selection successors nodes calculated node highest successor count disconnected round 
greedy attack completely balanced forest inner node disjoint trees topologies withstand disconnection nodes served source directly 
developed characteristic leading unstable routing 
bandwidth capacities stripes topologies showed behaviour close anticipated results see fig 

increasing stripes led linear gain 
fig 

greedy removal decreasing received packets confidence order examine resilience topologies realistic scenarios additionally implemented realistic attack random node deletion 
usually attacker try gain knowledge system choosing node attack 
impossible probe complete system due protocol attacker collect knowledge topology 
consequently attacker try important possible certain point service 
attacker chance get know important node receiving connection request attack node turn 
order simulate behaviour implemented weighted failure nodes 
node round sch fer fig 

worst case resilience random node failure realistic attack disconnected nodes failure probability proportional amount successors nodes disconnected threshold lost packets reached 
random node deletion third test resembles failure nodes 
causes widespread results gives estimation nodes need fail time service breaks 
results attack failure see fig 
indicated linear gain stability growing capacities numbers stripes 
system streaming stripes attacker get know nodes disconnect time cause denial service 
amount rises increasing capacities 
streaming stripes rises nodes node capacity rising node capacity increases 
higher numbers measured random node failure comparably low capacity stripes stripes nodes fail time cause service fail 
numbers constantly rise increasing node capacities 
discover evaluation lead expected gains analysed topologies achieve estimated results 
realise gaps amount additional stripes rising stability vertex connectivity caused deadlock situations 
topology construction large subsets nodes selected preferred stripe 
behaviour led problems nodes kept forwarding stripe links stripes dropped topology leading long paths 
novel distributed algorithm local knowledge creates network efficient stable streaming overlays 
shown resilient streaming topologies constructed sch fer strategies striping content forwarding stripes inner node disjoint trees flat possible balanced amount successors node 
order create attack resistant topologies information parents preceding nodes needs disclosed generally needed 
currently examining behaviour dynamic system attack 
exposing dynamic simulations system greedy attacks global knowledge order measure volatility messaging overhead amount lost packets due different amounts succesfully attacked nodes 
plan modify avoid detected deadlocks order prevent long evolve 
albert barabasi statistical mechanics complex networks reviews modern physics 
andersen balakrishnan kaashoek morris resilient overlay networks acm press new york ny usa 
banerjee bhattacharjee scalable application layer multicast acm computer communication review pp 

banerjee lee bhattacharjee srinivasan resilient multicast overlays acm performance evaluation review pp 

lu qiao dinda building resilient multi source multicast proceedings ninth international workshop web content caching distribution pp 

castro druschel kermarrec nandi rowstron singh splitstream high bandwidth content distribution cooperative environment proceedings iptps pp 

goyal multiple description coding compression meets network ieee signal processing magazine pp 

liang nahrstedt locality aware failure resilient peer peer streaming multimedia computing networking mmcn proceedings spie appear 
nguyen zakhor distributed video streaming internet proceedings spie pp 

padmanabhan wang chou sripanidkulchai distributing streaming media content cooperative networking proceedings acm ieee nossdav pp 

sch fer chang efficient load balancing strategy cooperative overlay live streaming proceedings ieee icc appear 

