understanding patterns tcp connection usage statistical clustering hern ndez campos smith jeffay department computer science university north carolina chapel hill jeffay cs unc edu describe new methodology understanding applications tcp exchange data 
approach model application level communication suitable statistical cluster analysis 
describe transform tcp connections vectors statistical features cluster vector existing hierarchical clustering methods 
adapt visualization technique developed context gene expression arrays analysis network traffic demonstrate approach possible understand results clustering way meaningful networking research 
methodology provides foundation flexible synthetic traffic generators adapted analysis workloads contexts 
transport control protocol tcp provides common foundation internet applications 
filesharing web email instant messaging applications reliable transport service offered tcp communicate data internet 
wealth applications represents important challenge researchers generally need understanding structure network traffic 
furthermore challenging construct source level traffic models suitable theoretical analysis generating synthetic traffic simulations testbed environments 
current tcp traffic driven large heterogenous collection applications generally dominated web traffic 
example traffic sprint backbone reported shows traffic due web 
similarly weekly netflow report internet reports smaller percentage web traffic 
backbones carry traffic driven changing set file sharing applications bittorrent gaming networks traditional file transfers emails internet applications tcp different ways range opening connection sending single file complicated exchanges control messages data objects 
exact number applications contribute traffic mixes known actual impact known protocols unclear 
due shortcomings state art traffic monitoring registered known nobel department statistics university north carolina chapel hill nobel email unc edu port numbers classify packets computer statistics 
problem new applications registered port fixed port number simply disguise port number application example web port avoid detection pass firewalls avoid rate limits 
example shortcomings port numbers sprint abilene reports leave large percentage traffic unidentified 
behavior applications web file sharing application understood focus significant modeling effort 
applications newer common received attention 
furthermore applications evolve quickly making existing models obsolete 
example extension hypertext transfer protocol support persistent connections major impact web traffic tcp 
addition constructing models application traffic difficult time consuming task models updated publication 
example popular simple mail transfer protocol stmp models quite old wide spread broadband large attachments far common 
goal develop powerful general techniques understanding modeling traffic enable update models frequently effort representative workloads simulation experiments 
key challenges find representation traffic supports comparison different applications understand range application behavior exist today internet 
address challenges traffic model network communication exploring structure traffic statistical cluster analysis 
model described section provides general representation traffic application independent captures nature traffic source level packet level sequence data exchanges points connection 
generality model possible compute set meaningful statistics features connection apply statistical clustering group connections small number traffic clusters 
traffic clusters group connec examples application level data exchanges 
top bottom non persistent connection persistent connection smtp connection 
tions similar source level behavior study helps understand important communication strategies internet applications 
approach described section 
explore structure traffic university north carolina internet case studies section 
efforts demonstrate important shortcoming traditional clustering approaches difficulty interpreting results way meaningful network researcher 
overcame problem adapting traffic analysis visualization techniques developed study genetic data particular gene expression arrays microarrays 
idea combine traditional hierarchical visualization known dendrogram heat map connection features making possible easily interpret clustering result terms traffic types 
technique demonstrated second case study 
sections necessarily brief overview related 
communication model observation perspective network vast majority application level protocols small number data exchange patterns occur logical connection endpoint processes 
model endpoint processes exchange data sequential fashion execute particular application 
transferred data summarized application data units adu size depends application protocol data objects application 
example common type interaction web browser web server hypertext transfer protocol consists single exchange data shown upper diagram 
browser opens connection server sends request specific object html page image 
request adu data exchange 
server receives entire request replies requested object closes connection 
object response second adu connection 
sizes request response depend network characteristics time required send packet browser server bandwidth available hosts 
consequence simply model data exchange example pair data unit sizes bytes bytes 
representation suitable traffic generation source level close loop fashion 
traffic generator establishing connection points exchanging data units specified order general form communication model call model point point communication represented connection vector 
cn epochs 
epoch triplet form cj aj bj tj describe data aj bj quiet time tj parameters th exchange connection 
ai captures amount data sent initiator communication web browser point bi represents data flowing reverse direction 
previous example data exchange web browser web server summarized vector single epoch equals equals 
time parameters tj model quiet times data exchanges sufficiently long represent application level behavior human think times long processing delays 
shows compact graphical representation examples connections captured main internet link university north carolina chapel hill 
mentioned corresponds single data exchange web server web browser 
second example illustrates persistent connection browser server exchange pairs data units 
representation connection model generally ignore values tj idle time threshold second interested capturing inter epoch times clearly caused application user behavior network dynamics 
notice example third quiet time inter epoch time mark 
third example shows simple mail transfer protocol smtp connection established email servers may represented model protocol servers engage conversation includes number small data units carries email address intended recipient single large data unit text email 
notice data unit example sent connection initiator making equal 
patterns data exchange correspond applications tcp underlying process communication protocol 
tcp control data note model assumes causality exchange data sense data unit request received entirety second data unit response sent opposite direction 
connection initiator monitor syn syn ack ack data ack data data ack fin fin ack fin fin ack seqno seqno seqno seqno seqno connection acceptor time tcp sequence numbers provide information determine size application data unit precisely 
includes sequence numbers bookkeeping information packet 
packets establish tcp connection carry application data 
application behavior independent control data transparently handled operating system 
consequently model capture control data concerned modeling way applications exchange data 
consequence workload modeled set connection vectors comparing performance network mechanisms 
example compare flavors tcp employ different control strategies study effect wireless medium common traffic patterns 
refinement model time intervals longer activity connection define exchange boundaries 
helps capture unidirectional communications patterns 
example applications refresh state clients periodically 
idle time threshold unidirectional sequence updates combined single epoch large ai bi sequence epochs 
addition inactivity threshold overcomes potential limitation model capture times successive type data units time data units larger placed separate epochs resulting form ai ti bi ti 
properly reflects prolonged time request response similar application level characteristics communication patterns 
simplicity model possible convert connection connection vector version model deals connections 
concurrent ones data units sent opposite directions time discussed brevity 
current results show concurrent communication far common sequential 
overview approach clustering internet communication patterns 
looking transport level headers packets 
developed tool convert tcp ip protocol header trace set connection vectors 
basic idea shown possible packet diagram sample connection shown 
adu sizes measured tcp sequence numbers 
fundamental idea measurement algorithm reconstruct logical order segments tcp connection 
sorting possible accurately efficiently measure adu sizes presence arbitrary packet reordering retransmissions 
example data unit sequence numbers second 
loss data segment sequence number imply observation retransmission segment loss monitor reordering segment loss monitor 
case reordering segments logical order seqno goes seqno seqno easy measure adu sizes walking ordered list data segments changes directionality data flow detect adu boundaries sequence numbers start increasing different direction seqno 
clustering communication patterns model provides framework systematic identification study application level communication patterns internet traffic 
traffic modeling sampling techniques research areas networking certainly benefit analysis classification patterns 
example performance transport protocols depends heavily patterns data exchange transport connections understanding patterns impact needed balancing tradeoffs result clustering training set connections agglomerative hierarchical clustering 
leaves labeled correspond telnet connections labeled correspond connections 
exist design protocols 
instance tcp tuned provide better performance transferring small data units price higher instability fair allocation bandwidth 
analyze real benefits tuning simulations helping decide change tcp parameters beneficial internet 
simulations broad representative set data exchange patterns workloads help draw general effectiveness new network mechanisms 
statistical clustering techniques see provide useful flexible tool grouping connections traffic classes represent similar communication patterns 
formally clustering scheme procedure divides set feature vectors 
xm disjoint groups 
sk known clusters 
goal clustering find small number clusters feature vectors clusters close vectors different clusters far apart 
approach application level connection vector derived transport connection summarized vector statistical features 
feature captures relevant characteristic sequence number exchanges total number bytes sent initiator homogeneity sizes data units 
feature appropriately normalized values lie 
measure similarity connection vectors similarity associated feature vectors 
consider alternative distance measures see standard euclidean distance xi yi pearson correlation coefficient rp sxy xs sxy xi yi xi yi mean values respectively 
distance pair connection vectors defined vectors grouped number standard clustering algorithms 
applied number different clustering schemes data focused agglomerative divisive hierarchical methods 
methods proven effective gene expression applications graphical representation trees dendrograms provides useful way identifying analyzing groups related communication patterns 
provides overview basic steps methodology described greater detail rest section 
step clustering source level communication patterns extract connection vector number numerical features designed capture important aspects way data transfer described vector 

cn connection vector th epoch triple cj aj bj tj described 
critical features number epochs denoted total number bytes sent con hosts aj bj 

collection type data units measured connection 
useful features include amax max aj amin min aj mean standard deviation second third quartiles denoted respectively 
order better capture sequential structure type data units measure total variation avs aj aj maximum difference afd maxj aj aj lag autocorrelation homogeneity ah amax amin 
cases 
analogous features extracted collection 
bn type data units 
inter epoch times reflect network properties application level behavior restrict attention time features tmax 
assess relationship btype data units measure directionality dir log lag cross correlations denoted respectively 
preliminary analysis rank correlations exhibited diverse meaningful spectrum values different connections 
correlation measurements spearman rank correlation coefficient rs ud ud vd ri si rank xi yi 
xd 
yd respectively 
non parametric equivalent pearson correlation coefficient 
features defined provide reasonable starting point cluster analysis connections final word 
selection new features refinement possibly elimination existing ones subject current research 
whichever features ultimately chooses number practical issues need addressed profitably cluster connections 
issue involves scale 
correlations range features range 
address disparity take logarithms features vary orders magnitude 
feature translated scaled vast majority measured connections value 
exceptional cases connection epochs allow features greater 
allowing features take values outside unit interval avoids possible compression true dynamic range small fraction outliers 
normalized feature plays role determining euclidean distance feature vectors 
may weight contributions different features differently done experiments 
second practical issue features correlations total variation welldefined meaningful connection vectors fewer epochs 
comparing connection epochs epochs look euclidean distance correlation features defined associated vectors normalize number active features resulting distance compared distances longer connections 
initially tested approach clustering training data sets small number connections 
shows result clustering connections collected university north carolina chapel hill 
analyzed data set divisive hierarchical clustering implemented converting connection vector feature vector included statistical features described 
connections data set carried telnet traffic interactive remote shell carried persistent web traffic 
communication patterns protocols quite different appropriate clustering able split data set subpopulations 
shown distinct clusters emanating root dendrogram readily apparent 
visualization binary tree internal nodes represents split set connections axis height correspond dissimilarity children 
leaves represent individual connections 
split example cleanly separates telnet connection web ones 
feature description number epochs total bytes amax bmax tmax maximum bytes seconds amin bmin minimum bytes mean bytes standard deviation quartile second quartile third quartile avs bvs total variation ah bh homogeneity max min lag autocorrelation spearman rank correlation spearman lag table statistical features divisive hierarchical clustering example shown 
clustering examples divisive hierarchical clustering example example clustering traffic study packet header trace collected april main network link connects university north carolina chapel hill internet 
converted trace set connection vectors drew random sample connection vectors epochs 
computed feature vectors connections sample features reported table 
normalizing feature vectors analyzed diana procedure euclidean distance implemented 
algorithm described basic idea sequentially split cluster largest diameter finding dissimilar observation 
observation seed new cluster populated number similar observations original cluster 
result clustering set shown new visualization function implemented language 
dendrogram shown result pruning full dendrogram depth 
plot depicts pruned internal nodes green triangles cluster number leaves red squares connection vector number 
internal node annotated number connection vectors grouped branches 
example root tree annotated connection vectors fall internal node 
triangle left marked cluster number groups connection vectors 
dendrogram reveals useful structure set connection 
connections cluster cor number relatively small due computational difficulties sufficient identify important clusters full data set 
dissimilarity dendrogram obtained divisive hierarchical clustering data set connections pruned depth 
respond https encrypted web traffic aol traffic cluster correspond mail transfer protocols smtp post office protocol pop 
composition clusters clear 
clustering algorithm accurately separated clearly different communication patterns 
clusters include connections type data units zero port numbers map known applications 
cluster grouped https microsoft directory service rtsp connections 
leaf shown dendrogram connection vector ftp data connection 
revealed structure suggestive difficult explain observed hierarchy motivated different tool see subsection 
furthermore computation full dendrogram slow connection example required hours processing time 
difficulty experienced memory requirement statistical clustering algorithms comes need compute distance pair connection vectors step 
agglomerative hierarchical clustering example applied methodology clustering sample connections abilene data set 
sample consisted tcp connections connection transformed connection vector summarized feature vector 
half con number relatively small believe representative coarse grained structure data set possible include graphical output 
applied method larger sets connections 
feature description number epochs total bytes seconds second quartile median afd maximum difference ah bh homogeneity max min dir directionality log spearman rank correlation spearman lag table statistical features agglomerative hierarchical clustering 
random sample port connections half random sample connection ports 
result matrix rows columns 
table describes statistical features part vector 
feature vectors clustered agglomerative method proposed sokal pearson correlation coefficient similarity measure clustering employed implementation algorithm visualization tool developed eisen context gene expression arrays microarrays 
result clustering shown 
colored array center heat map represents matrix feature vectors 
row array corresponds connection column corresponds statistical feature 
fourteen colored cells row represent values statistical features single connection 
values displayed scale increasingly lighter shades blue words larger value lighter color 
left side array rotated dendrogram displays hierarchical clustering connections 
right side array rectangles labeled highlight clusters exhibit high degree internal cohesion correlation substantial separation clusters dissimilarity sharply increases clusters joined cluster 
interpretation resulting clusters confirms effectiveness approach grouping connections homogeneous communication patterns 
note interpretation port numbers know accurate meant illustrate power method 
clusters group connections small type data units 
looking destination port numbers connections correspond file sharing applications mainly kazaa port number edonkey gnutella 
connections cluster show substantially smaller type data units cluster exhibit longer inter exchange times 
believe connections cluster mainly correspond file sharing obtained similar results newer version software supports euclidean distance result clustering sample connections abilene data set 
left right columns heat map correspond afd ah bh dir 
sessions searches file downloads took place file downloads occur connections grouped cluster 
number connections clusters destination ports intra connection dynamics match file sharing applications 
connections provide example port number hijacking technique frequently employed overcome firewalls bandwidth caps 
cluster includes connections small type data units number exchanges significantly larger connections contained clusters destination port numbers correspond variety applications including gnutella https telnet 
connections cluster exclusively destined port nntp show clearly different pattern data exchanges large type data units moderate type data units 
cluster groups connections destined ports https ports web traffic 
cluster composed smtp connections port number pop oracle 
cluster contains ftp data connections 
connections source port vast majority dynamically negotiated port numbers 
confirmed connections carried ftp data traffic verifying parallel ftp control connections existed 
clusters described explored decomposed subclusters operation naturally supported hierarchical structure binary tree 
instance smaller clusters group types communication dynamics exhibited streaming media ftp control connections 
related measuring modeling traffic source level active area research years 
important measurement efforts focused application specific traffic models preceded growth web conducted danzig paxson 
web traffic studied numerous papers file sharing applications focus current :10.1.1.31.3480
traffic classification known difficult problem received attention past 
number papers study identify groups traffic remarkable consume large fraction traffic focus understanding source level structure traffic 
relevant papers evaluate existing monitoring techniques propose powerful alternatives 
compelling case identifying traffic generation key challenges internet modeling simulation floyd paxson 
prominent examples research traffic generation tcplib barford crovella web workload generation saman project lan heidemann 
model internet communication developed methodology clustering connections set small groups 
developed visualization techniques possible easily interpret clustering results 
believe provides starting points understanding types source level behaviors study change time different vantage points 
currently working refining measurement techniques systematically examining clustering structure traffic mixes large number sites 
developing new traffic generation tool structure enable flexible traffic generation representative wide variety traffic internet today 
acknowledgments nlanr measurement network analysis group making data tools publicly available 
support provided national science foundation nsf cooperative agreement 
ani 
indebted michael eisen making clustering visualization tools freely available academic researchers developers language 
michele jeff helpful comments 
supported parts national science foundation itr ccr eia ani cisco systems ibm doctoral fellowship computer measurement group 
andrew nobel supported part nsf dms 
paul barford mark crovella 
generating representative web workloads network server performance evaluation 
proc 
acm sigmetrics pages 
ramon caceres peter danzig sugih jamin danny mitzel 
characteristics wide area tcp ip conversations 
proc 
conference communications architecture protocols pages 
acm press 
kun chan lan john heidemann 
rapid model traffic measurement 
technical report usc information sciences institute august 
internet consortium 
internet netflow weekly report netflow internet edu weekly june 
mark crovella azer bestavros 
self similarity world wide web traffic evidence possible causes 
ieee acm transactions networking 
peter danzig sugih jamin 
tcplib library tcp ip traffic characteristics 
usc networking distributed systems laboratory tr cs sys october 
michael eisen paul spellman patrick brown david botstein 
cluster analysis display genome wide expression patterns 
proc 
natl 
acad 
sci december 
estan keys moore varghese 
building better netflow 
proc 
acm sigcomm 
estan savage george varghese 
automatically inferring patterns resource consumption network traffic 
proc 
acm sigcomm 
brian everitt sabine landau 
cluster analysis 
arnold th edition 
floyd paxson 
difficulties simulating internet 
ieee acm transactions networking august 
sprint advanced technology laboratory ip group 
ip monitoring project data management system 
ipmon com 
gummadi dunn saroiu gribble levy zahorjan 
measurement modeling analysis peer peer file sharing workload 
proc 
th acm symposium operating systems principles sosp 
john hartigan 
clustering algorithms 
wiley 
hern ndez campos smith jeffay 
tracking evolution web traffic 
proc 
th ieee acm symposium modeling analysis simulation computer telecommunications systems mascots october 
ross robert gentleman 
language data analysis graphics 
journal computational graphical statistics 
kaufman rousseeuw 
finding groups data cluster analysis 
wiley 
krishnamurthy wang 
traffic classification application specific peering 
proc 
acm internet measurement workshop 
smith williams dale 
dissimilarity analysis new technique hierarchical sub division 
nature 
bruce mah 
empirical model network traffic 
proc 
ieee infocom pages 
nlanr measurement network analysis group 
trace abilene data set 
pma nlanr net traces long 
html 
vern paxson 
empirically derived analytic models wide area tcp connections 
ieee acm transactions networking 
qiu srikant 
modeling performance analysis bittorrent peer peer networks 
proc 
acm sigcomm 
sokal 
statistical method evaluating systematic relationships 
univ kansas sci 
bull 
