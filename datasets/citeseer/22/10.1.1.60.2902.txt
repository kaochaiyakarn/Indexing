application level relay high bandwidth data transport yong yu don science computer engineering university massachusetts university massachussetts amherst ma amherst ma towsley cs umass edu gong ecs umass edu september data intensive applications require massive amount data transported shared wide area networks 
traditional network congestion control routing schemes proven inadequate fully utilizing available network resource high bandwidth data transport 
explore flexibility control application layer propose various application level data relay schemes largely improve data throughput optimally integrating application level routing transport layer control 
proposed algorithms easily implemented overlay networks 
preliminary experiments shown relay schemes efficient utilizing network resource high bandwidth data transport 
impact application level relays underlay network discussed 
high bandwidth data transport increasingly important emergence data intensive network applications peer peer applications grid computing 
time advances communication technology available physical network infrastructure support point point data transmission speed tens second 
fully utilize network capacity high bandwidth data transport generated considerable research network resource allocation 
network resource allocation carried mechanisms routing congestion control operating different time scales 
coarse time scale routing algorithm aims choosing routes data transport pairs optimize network performance 
largely due complexity topology variability traffic demand capability traffic engineering internet limited 
finer time scale congestion control schemes adjust sending rates data sources avoid congestion paths provided routing algorithm 
objective network congestion control mechanisms including transport control edge queue management inside network core maintain fair bandwidth sharing competing users ensure stability network 
existing transport control protocols called fashion 
principle keeps network core transparent supported part nsf ani ani eia darpa contract dod 
opinions findings authors necessarily reflect views nsf darpa 
users 
traditional transport control protocols tcp proven inefficient obtaining available bandwidth high bandwidth delay product networks 
new congestion control protocols highspeed tcp fast xcp proposed achieve high speed data transport :10.1.1.1.2991
increasing trend employ application level control improve users performance shared wide area networks 
flexibility control application layer helps overcome inefficiencies underlay network routing congestion control 
example application level overlay networks emerged provide services embedded internet :10.1.1.16.8178:10.1.1.11.1007:10.1.1.161.2760
overlay networks participating nodes collaborate application level relay traffic 
application level routing enables users deviate semantics data relayed source destination 
study achieve high bandwidth data transport application level relays 
setting connection source destination application relay employs multiple relay nodes sequentially relay data destination 
relay node buffers packets receipt responsible reliable delivery packets downstream relay node final destination 
neighboring relay nodes data transmission managed transport control protocol 
choose universally deployed tcp data transport relay nodes 
application relay framework independent choice tcp 
transport control protocol primitive build relay 
refer path data relayed relay path 
relay path may may follow default route source destination provided underlay network routing 
example overlay network source node specify sequence overlay nodes relay traffic destination 
focus organize application relays maximize achieved throughput 
start assumption application relays negligible impact underlay network demonstrate network users greatly increase throughput employing relays tcp connections data transmission 
application level relays impact underlay network discussed 
organized follows section briefly describe related utilizing application level control improve users performance parallel tcp overlay routing multicast overlay section study application relay data path provided underlay network 
show optimally organizing tcp connections sequentially parallel significantly improve throughput data transport 
organize tcp relay general overlay networks investigated section 
specifically optimal tcp relay path problem studied multi metric application level routing problem 
various algorithms proposed find relay paths optimized data transport performance metrics throughput hop count overlay network performance measures maximal workload relay nodes 
preliminary experimental results section demonstrate efficiency proposed relay schemes 
section devoted general discussions application level relays impact underlay networks especially performance regular users employing application layer control 
concluded works section 
related efforts improving data transport throughput application level control 
concurrent downloads widely web applications significantly speedup downloads 
applications parallelize download web object opening multiple connections object downloading different portion object connection 
concurrent downloads employed popular peer peer applications bit torrent 
peer peer user sets parallel tcp connections multiple peers concurrently download different portions requested data object 
concurrent downloads employed variant ftp gridftp proposed guarantee high bandwidth data transfer grid applications 
studies shown concurrent downloads violate application level fairness tcp tries maintain connection level :10.1.1.9.1131
study parallel tcp describes approach preserve effectiveness network utilized prioritizes fairness competing traffic network fully utilized 
studies performance improvement application level relay formed sequential tcp connections 
overlay routing allows hosts choose application level routes 
shown overlay routing schemes effective dealing deficiencies today ip routing 
example measurements overlay routing projects ron detour shown large percentage internet flows find better alternative paths relaying overlay nodes improving performance 
shown overlay networks enhance quality service qos perceived users support underlying internet 
application overlays proposed support group communications 
shown overlay group communication tcp scales obtained throughput buffer required group size gets large 
optimal tree construction algorithms discussed maximize throughput multicast group 
proposes overlay multicast architecture incorporates loosely coupled tcp connections deliver scalable solution better accommodates set heterogeneous receivers 
pointed chain tcp connections achieve higher throughput single tcp connection 
focuses set application level relay paths optimized data transport performance metrics throughput hop count overlay network performance measures maximal workload relay nodes 
study application level routing problem 
rich literature qos routing satisfy multiple performance constraints 
various algorithms proposed find paths satisfying performance constraints loss delay bandwidth surprise problem common qos routing 
unique nature data relay overlay network different previous studies 
application level control provides flexibility design implementation proposed data relay schemes 
tcp relay long haul data transport performance transport protocols degrades long haul data transmission lossy links 
studies shown tcp obtain available bandwidth high bandwidth delay product networks 
fairness throughput tcp suffer mobile ad hoc networks manets 
solution deviate semantics multiple relay nodes source destination relay traffic 
doing breaks long connection multiple shorter connections improve efficiency fairness 
section limit case relay path aligns default route 
study optimally place relay nodes default data path improve throughput 
start sequential relay case tcp connections concatenated pipeline relay data 
show tcp pipelines greatly improve throughput data transport 
demonstrate parallel tcp employed efficiently increase bottleneck bandwidth tcp pipeline 
construction optimal tcp relay formulated solved dynamic programming problems 
tcp pipeline throughput improvement tcp relay long haul data transport motivating example consider path nodes lie sender src receiver dst 
denote vi ith node path src dst vn 
pi denote packet loss probability link ei vi vi di way packet delay node vi vi way propagation delay plus possible queueing delays due congestion 
pi small throughput tcp connection node node approximately characterized dk pk simplest case links homogeneous pi di throughput tcp connection nd np hand nodes commit application level packet forwarding user set sequential tcp connections adjacent node pair vi vi relay packets src dst 
relay tcp connection achieve throughput throughput minimum relay tcp connections 
case times larger throughput single tcp connection times larger aggregate throughput parallel tcp connections src dst 
refer set sequential tcp connections relay packets source destination tcp pipeline 
formally tcp pipeline sequential connections partition hop path ith tcp connection runs node va va 
throughput ith segment pipeline 
throughput tcp pipeline minimal throughput constituent segments min partition easy verify min say throughput pipeline sequential tcp connections bounded slowest link src dst 
obviously upper bound achieved pipeline consists sequential connections set pipeline optimally 
application relays alleviate discrimination long haul connections achieved data rate scales number links path 
improves efficiency data retransmissions 
packet lost relay segment retransmitted locally just segment 
avoids unnecessary retransmission links path lost packets recovered faster 
time data relay incurs overhead application level operations 
multiple tcp connections established unicast data transport 
relay path packets sent store forward manner experience additional processing delays intermediate relay nodes 
due rate mismatch tcp connections different relay segments packet buffers coupled back pressure schemes necessary avoid flooding slowest relay segment 
setting pipeline trade throughput gain memory computation consumption 
bound overhead limit number segments relay path 
question tcp connections setup pipeline maximize throughput 
equivalent problem optimally placing nodes relay traffic src dst 
example third link slowest link allowed relay nodes may want place relay nodes ends slowest link 
formally want find optimal partition maximized max min argmax min optimal tcp pipeline segments optimal pipeline problem solved dynamic programming 
optimal connection pipeline vk throughput 
max min argmax min algorithm find optimal pipeline vn upto upto upto min upto min min complexity solving dynamic programming problem 
non decreasing function bounded min 
solving dynamic problem bottom way find smallest achieves 
adding sequential tcp connections won improve throughput throttled slowest link 
time multiple parallel tcp connections helps achieve high throughput congested link 
motivates think optimally combine sequential parallel tcp connections achieve higher throughput 
network multiple parallel connections cover slowest link shown 
tcp relay sequential parallel connections combining tcp pipelining tcp striping congested relay segments tcp striping employed increase bandwidth bottleneck relay path 
data striped sending relay node parallel tcp connections receiving relay node 
receiver data segments received different connections relays downstream neighbor 
data striping reassembly incurs memory computation overhead introduces additional packet delay 
parallel connections cause congestion congested links degrade network performance 
section limit number parallel sequential tcp connections users possibly study organize optimally achieve maximal bandwidth 
previous section partition path src dst segments nodes vq vq parallel connections constraint optimization problem max min integer programming problem subject max min fixed solved dynamic programming problem 
optimal organization tcp connections vk throughput 
satisfies max argmax min min complexity solving problem 
detailed algorithm upto upto upto upto upto min min tcp relay overlay networks previous section studied optimally place relay nodes default data path provided underlay network 
underlay network routes optimized throughput application level relays 
flexibility application level routing overlay network possible find better paths relay data higher speeds 
section study optimal tcp relay problem overlay network 
formulate multi metric application level routing problem 
various algorithms proposed find relay paths optimized data transport performance metrics throughput hop count overlay network performance measures maximal workload overlay nodes 
illustrated underlay network subset network nodes form application level overlay network forward traffic 
overlay network represented directed graph set overlay nodes set logical links overlay nodes 
logical link corresponds physical path underlay network 
note cases graph fully connected meaning node reach overlay runs multiple ases due policy inter domain routing overlay nodes may overlay underlay logical link physical link application overlay built underlay network able talk directly 
assume connected 
application level routing overlay node specify path logical graph reach overlay node 
data relayed destination logical links specified path 
refer path relay data overlay nodes relay path 
previous application level routing focused finding paths high resilience failures best path performance metrics delay loss rate translate throughput tcp connections paths 
objective find relay paths optimized performance tcp relays 
section assume underlay network routes fixed 
widest tcp relay path objective find relay path highest throughput 
throughput tcp relay path minimal tcp throughput constituent logical links 
refer throughput single tcp connection logical link vi vj local tcp throughput vi vj denoted 
calculated packet loss probability round trip time vi vj 
directed overlay graph assign weight link vi vj define width path minimum weight constituent links optimal relay path vi vj widest path vi vj 
widest path problem studied 
widest path tree rooted source constructed simple variant dijkstra algorithm typically construct single source shortest path trees 
algorithm keeps sets vertices set vertices widest paths source determined remaining vertices 
best estimate widest path vertex predecessor widest path 
basic mode operation 
initialize 
vertices sort vertices add vertex largest relaxation connected updates min min 
similar dijkstra shortest path algorithm running time entire algorithm 
implemented link state algorithm 
overlay node broadcasts connectivity link widths nodes 
collecting link state information overlay node compute widest paths nodes 
real network environment local tcp throughput logical link varies time 
link weight calculated representative statistics 
cases quantized avoid unnecessary complexity introduced small differences link width 
quantization important path metrics addition width considered 
discuss issue 
local tcp throughput logical links symmetric undirected graph represent overlay network 
widest relay paths node pairs efficiently constructed finding minimum spanning tree mst associated undirected graph example illustrates overlay network symmetric links 
best path connecting direct link 
overlay network symmetric logical links theorem undirected graph assign weight link vi vj construct minimum spanning tree path nodes vi vj widest relay path node vi vj 
proof prove contradiction 
minimum spanning tree path connecting vi vj vk vk link maximal weight throughput relay path equals 
suppose path vi vj throughput higher links local tcp throughput higher 
removing link vk vk partite trees 
suppose vi vj connects vi vj link vh vh connects 
adding vh vh form new spanning tree smaller cost leads contradiction 
example links weight links path 
mst optimal path node 
widest paths constructed minimum spanning tree naturally loop free 
minimum spanning trees construct optimal overlay multicast trees widest tcp relay path limited hops number logical links relay path corresponds number overlay nodes participating data relay 
discussed section data relay involves computation memory overhead intermediate relay nodes 
overlay network buffer computation power relaying traffic important resources contended competing overlay users 
number relay nodes relay path important measure resource consumption corresponding data transport 
important enforce limit number overlay nodes relay path 
optimal relay problem path length constraint find path hops achieve highest throughput 
find optimal relay paths hops single overlay node overlay nodes develop variant bellman ford bf algorithm designed find shortest paths single source nodes hop counts 
bf algorithm iterative algorithm 
th iteration finds shortest path source destinations hops 
want find optimal relay path hops run bf iterative algorithm iterations 
assign local tcp throughput node vi vj weight link vi vj directed overlay graph 
width optimal path source node hops 
algorithm upto min min set completion algorithm identify smallest possible number relay hops achieve highest throughput destinations 
running time algorithm 
implemented distributed distance vector algorithm 
node communicates directly attached neighbors widest paths destinations hop constraints 
shown basic bf algorithm efficient finding widest paths network densely connected 
improved bellman ford algorithm proposed lower asymptotic complexity log log 
interested readers referred details 
deserves study compare bf different size overlay networks 
find optimal relay paths hops pairs overlay nodes develop algorithm similar recursive pairs shortest paths algorithm 
set neighbors node width optimal path hops 
algorithm bottom order upto min max max tcp relay path optimized width length far focused finding highest throughput tcp relay paths constraint number relay hops 
section introduce path length additional metric search optimal tcp relay paths 
path length secondary optimization criterion optimal relay path shortest widest path source destination 
certain situations strict preference path width path length relaxed 
way trade width length find shortest path satisfying width requirement 
path bounded just narrowest link links path effect path width 
normally widest paths equal width nodes path loops may qualify widest path 
problem serious overlay network different logical links weights physically share bottleneck link similar round trip delays 
overlay network easy logical paths close width 
possible logical paths physically constrained access link bottleneck link network 
delays logical links equal widest paths path length bottleneck ambiguity widest path overlay networks secondary optimization criterion tie path width 
say want find called shortest widest path swp shortest widest paths 
studied previous section logical hop count measure length relay path 
physical hop count number physical links path important length measure 
physical links relay path network resources consumed corresponding data transport 
relay path equally wide choose relay path smaller physical hop count minimize network resource consumption data transfer turn maximizes network utilization 
physical length equivalently propagation delay important metric relay path 
latency transmitting large file dominated transmission delay determined relay path throughput 
study logical hop count physical hop count second relay path metric 
overlay graph assign length logical link length relay path logical hop count assign number physical links logical link length length relay path physical hop count 
multi metric path optimization general intractable problem choice bandwidth length path metrics complexity swp algorithm similar standard shortest path algorithm 
dijkstra link state algorithms bellman ford distance vector algorithms proposed solve swp problem context quality service routing 
extra care taken extending shortest widest path algorithms due properties swp 
path swp doesn mean path swp true replace swp shortest path 
important property correctness dijkstra shortest path algorithms 

swp swp true swp true replace swp widest path 
bandwidth length special properties slowest widest paths network swp path width length 
narrower swp due length larger swp due 
shortest widest relay paths phase search 
phase assign local tcp throughput logical link overlay graph find widest paths source nodes dijkstra algorithm described section 
width widest path node sort nodes list increasing order 
assign link lengths link weights graph 
start node smallest prune links bandwidth 

find shortest path source node pruned graph shortest widest path source node original graph take node sorted list 
go back step list empty 
overlay network choice metric optimal relay path application dependent 
far give width relay path strict priority length 
length metric tie width metric 
strict priority may rigid real network environment 
dynamics underlay network traffic achieved local tcp throughput packet delay logical link vary time 
words link weights accurate 
link weight search algorithms rigid especially regarding preference different path metrics 
doesn sense rule path shorter little bit narrower shortest widest path constructed time mean statistics 
strict priority bandwidth relaxed keeping preference 
practically threshold searching algorithms employed 
specify lower bound width path calculated result widest path search relaxation margin choose shortest path satisfying width requirement 
done previous prune search procedure shortest widest path 
difference width threshold maximal path width prune links 
contention relay nodes limiting length relay path alleviate possible contention relay nodes 
doesn explicitly control workload relay nodes 
avoid overloading relay nodes take contention relay nodes explicitly consideration constructing application relays demand pairs 
somewhat similar network traffic engineering problem find optimal routes demand pairs link contention translated link utilization link delay minimized 
general load balancing routing formulated unsplittable flow problem tries minimize maximum workload node 
wellknown np hard problem 
purpose setting relay path workload overlay nodes objective function optimize solution trivially node sends data directly destination 
really want solution gives high aggregate throughput data transport pairs low contention level overlay nodes 
difficult multi metrics routing problem 
propose heuristic algorithms solve relaxed problem 
solving multi objective optimization problem ask question optimally set relay paths data transport pairs maximize networks aggregate throughput relay node relays traffic data transport pairs 
exactly solve problem difficult 
developed heuristics solve approximately 
find shortest widest path swp demand pairs 
sort demand pairs decreasing order path widths set relay workload counter overlay node 

take demand pair head sorted list increase counter nodes swp remove demand pair sorted list 
repeat previous step overlay node counter reach upper limit remove relay topology source destination demand pair relaying nodes 
reduced topology go back step demand pairs routed 
execution algorithm relay nodes reach relaying capacities remaining demand pairs transmitted directly relay 
experiments show experimental results section demonstrate application level relays effectively increase throughput data transport 
experiments carried ns simulator 
order simulate receiver tcp buffer occupancy back pressure tcp relay path modified module tcp packet header implement tcp flow control mechanisms 
adding advertisement window tcp packet header sender side tcp adjust maximum window size sending data receiver tcp buffer full 
developed specific application module explicitly pulls data receiver tcp buffer 
simulates read operation real applications receiving data socket connection 
application module simulate tcp relay nodes 
sets experiments shown section 
set demonstrate throughput improvement pipelining tcp connections data path provided underlying networks 
second set study tcp relays overlay networks 
show performance improvement widest tcp relay paths limited hops shortest relay paths satisfying width requirement 
performed experiments times got similar results time 
tcp pipeline throughput improvement subsection show performance tcp pipeline linear network topology 
chain topology consists duplex links study throughput node 
link capacity mbps ms propagation delay 
link add tcp tcp tcp tcp tcp tcp linear network topology background tcp flows link indicated 
indicates loss rate incurred link 
links background tcp flows congested links background tcp flows congested 
number background tcp flows large ignore tcp pipeline impact link loss rates 
experiment fix number relay nodes algorithm section optimally set tcp pipeline 
case data transferred source destination single tcp connection 
second case data transferred optimally set tcp pipeline relay node 
third case data transferred optimally set tcp pipeline relay nodes middle 
similarly th case th case 
th case data transferred hop hop tcp pipeline 
shows achieved throughput tcp pipelines optimally established section 
set experiments see throughput increases number relay nodes increases shows performance boost brought tcp pipelining 
tcp relay overlay networks throughput kbps throughput number connections chain topology experimental results demonstrate throughput boost enabled application relay overlay network 
underlying network consists nodes edges created georgia tech topology generator gt itm 
links capacity mbps delays set proportional distance nodes gt itm generated scenario 
links nodes loss rate loss rate randomly set 
nodes randomly choose nodes form overlay network 
overlay network perform sets experiments 
set experiments bellman ford algorithm proposed section find widest tcp relay path different logical hop constraints 
set experiments algorithm discussed section demonstrate trade width length relay path 
set experiments subsection uses widest tcp relay path limited hops algorithm compute optimal tcp relay paths 
randomly choose pairs overlay senders receivers overlay network observe throughput achieved tcp relay 
compare changes throughput sender receiver pairs maximum number hops tcp relay increases 
cases widest paths change time upper limit increases keep upper limit larger 
set maximum hops overlay tcp relay observe throughput reached case 
maximum hops set underlying path sender receiver 
shows throughput achieved sender receiver pairs different tcp relay paths 
see limit maximum relay hops increased wider relay paths achieved throughput shows obvious increasing trend 
second set experiments algorithm proposed section set shortest tcp relay path satisfying width requirement node overlay network 
purpose illustrate trade width length relay path 
choose source destination pairs 
previous discussions trade width length logical physical hop counts path relax width requirement gradually solve shortest length measured logical physical hops relaxation level 
experiment results shown 
throughput kbps hop constraint throughput pair throughput pair tcp relay widest path limited hops level path width relaxation represented relax margin gap width widest relay path width requirement 
shows relax width requirement find shorter path terms relay segments expense smaller width 
observe similar results physical hop counts metric path length shown 
discussions impact underlay network previous sections studied various application relay schemes increase bandwidth data transport 
assumed application level relay negligible impact underlay network 
justified amount traffic employing application relay constitutes small portion total network traffic 
users strong motivation employ application relays improve performance 
application relays popular generating increasing fraction network traffic 
fast growth overlay traffic draws attentions 
section discuss application relays impact underlay network performance normal users 
specifically discussions focus application relays impact efficiency fairness 
application relays overcome deficiencies underlay network congestion control routing 
improve network efficiency ways 
application relay paths set maximize narrowest relay hops 
doing traffic routed away congested links 
application level relays fact help achieve network load balancing 
network layer traffic engineering tries balance workload links 
due cost changing routing tables routers time interval network routing updates scale days 
hand application relay paths updated frequently keep changes network traffic 
relay path relay nodes responsible reliability packets relayed 
lost packets due congestion corruption recovered locally 
local recovery eliminates unnecessary packet retransmissions links path triggered packet losses just link 
saving significant especially wireless links path 
large feedback delay major hurdle stability efficiency congestion control schemes 
tcp connections relay segments experience smaller feedback delays reacts faster connections 
local rate control efficient obtaining width kbps width kbps relax margin kbps source destination source destination source destination width shortest width constrained path decreases relax width constraint 
logical hop counts relax margin kbps source destination source destination source destination logical hop count shortest path decreases relax width constraint 
shortest width constrained path logical hop count path length relax margin kbps source destination source destination source destination width shortest width constrained path decreases relax width constraint 
physical hops relax margin kbps source destination source destination source destination physical hop count shortest path decreases relax width constraint 
shortest width constrained path physical hop count path length available bandwidth time helps maintain network stability 
application level data relay store forward manner naturally supports local caching redundant data 
data intensive applications multicast web server caching application relay greatly reduce amount traffic crossing network 
application relay users achieve better performance regular users 
raise fairness issues different applications 
fair criticize application relay users unfair regular users just achieve higher throughput 
argued splitting long connection multiple smaller connections provides better fairness manet 
moving traffic congested path application relays fact help improve performance regular users congested path 
previous studies fair sharing network resource focused transport layer 
little attention application layer fairness 
fairness issues multi path routing investigated 
studied parallel tcp breaks application layer fairness tcp tries maintain transport layer 
resources consumed application measured amount congestion generates network 
utility price framework proposed study fairness stability congestion control schemes 
transport layer connection utility function incurs cost links path congestion price 
rate control problem studied distributed optimization problem 
utility price approach potentially investigate fairness issue application layer 
application relay employs multiple transport layer connections relay data combine utility functions relay connections study application level fairness problem deserves study 
goal application layer fairness study guide design application level relays trade efficiency fairness competing applications 
works investigate application level relay schemes high bandwidth data transport shared wide area networks 
shown optimally combining tcp connections sequentially parallel tcp pipelining greatly improves throughput long haul data transport lossy links 
improves network efficiency alleviates discrimination long connections 
proposed optimal relay algorithms easily adopted wireless sensors special purpose wired line networks relay data nodes far away 
optimal relay problem overlay networks formulated multi metric application level routing problem 
various algorithms investigated optimize multiple performance measures individual users network 
proposed algorithms readily implemented operating overlay networks 
discuss application level relays impact fairness efficiency network resource allocation 
works pursued directions 
extensive experiments conducted real network environment wide area overlay testbed planetlab test performance proposed relay schemes importantly gain understanding trade offs multiple performance metrics relay paths 

implementation relay schemes overlay networks remains studied 
right way collect statistics regarding underlay network 
pointed independent probes overlay nodes generate considerable ping traffic 
routing underlay proposed collect information underlying internet answer queries overlay nodes 
question answered compute optimal relay paths 
node calculate optimal relay paths distributed algorithms centralized unit set optimization nodes 
depending variability network condition relay paths pre computed updated occasionally state network changes relay paths calculated demand 

major objective application level relay efficiently utilize network resource fairness issue application level deserves study 
trade efficiency fairness application level relays interesting problem look 
open shortest path ospf www ietf org html charters ospf charter html 
label switching mpls www ietf org html charters mpls charter 
html 
chiu jain analysis increase decrease algorithms congestion avoidance computer networks computer networks isdn systems vol 
june 
floyd fall promoting congestion control internet ieee acm transactions networking august 
sally floyd rfc highspeed tcp large congestion windows tech 
rep ietf 
cheng jin david wei steven low fast tcp motivation architecture algorithms performance proceedings ieee infocom march :10.1.1.1.2991
dina mark handley charlie congestion control high bandwidth delay product networks proceedings acm sigcomm 
savage anderson aggarwal becker cardwell collins hoffman snell vahdat voelker zahorjan detour case informed internet routing transport tech 
rep tr 
david andersen hari balakrishnan frans kaashoek robert morris resilient overlay networks proc 
th acm symposium operating systems principles banff canada october 
lakshminarayanan subramanian ion stoica hari balakrishnan randy katz overqos overlay architecture enhancing internet qos proceedings hotnets october 
banerjee bobby bhattacharjee christopher scalable application layer multicast proceedings acm sigcomm 
francois baccelli augustin zhen liu anton sahu scalability reliable group communication overlays ieee infocom 
gu kwon john byers roma reliable overlay multicast loosely coupled tcp connections ieee infocom 
unknown web page www com index 
htm 
cohen bittorrent web site org bittorrent 
globus alliance gridftp web page www globus org datagrid gridftp html 
liu gong shenoy impact concurrent downloads proceedings winter simulation conference december pp :10.1.1.9.1131

thomas hacker brian noble brian improving throughput maintaining fairness parallel tcp proceedings ieee infocom 
stefan savage andy collins eric hoffman john snell thomas anderson effects internet path selection proceedings sigcomm boston ma august september 
zheng wang jon crowcroft quality service routing supporting multimedia application ieee journal selected areas communications vol 
pp 
september 
guerin ariel orda douglas williams qos routing mechanisms ospf extensions proceedings second global internet joint globecom 
williams guerin orda rfc qos routing mechanisms ospf extensions tech 
rep ietf 
ma peter steenkiste hui zhang routing high bandwidth traffic max min fair share networks proceedings acm sigcomm 
guerin ariel orda computing shortest paths number hops ieee acm transactions networking vol 
pp 

srikanth krishnamurthy faloutsos satish tripathi split tcp mobile ad hoc networks symposium ad hoc wireless networks 
padhye firoiu towsley kurose modeling tcp throughput simple model empirical proceedings acm sigcomm 
liu gong challenges congestion control posed concurrent downloads proceedings th ieee conference decision control december 
garey johnson computers intractability san francisco ca freeman 
raghavan thompson provably routing graphs regular arrays proceedings th annual acm symposium theory computing 
ken calvert ellen zegura gt internetwork topology models gt itm www cc 
gatech edu projects 
laurent massoulie stability distributed congestion control heterogeneous feedback delays ieee transactions automatic control vol 
pp 

tan congestion control internet delays stability ieee acm transactions networking december 
misra towsley gong designing improved controllers aqm routers supporting tcp flows proceedings ieee infocom 
jaffe bottleneck flow control ieee transactions communications vol 
com pp 
july 
kelly tan rate control communication networks shadow prices proportional fairness stability journal operational research society 
boudec global fairness additive increase multiplicative decrease heterogeneous roundtrip times proceedings ieee infocom 
srikant congestion control schemes utility functions random losses ecn marks proceedings ieee infocom pp 

steven low duality model tcp queue management algorithms ieee acm transactions networking vol 
august 
planetlab web page www planet lab org 
akihiro larry peterson andy routing underlay overlay networks proceedings acm sigcomm karlsruhe germany august 

