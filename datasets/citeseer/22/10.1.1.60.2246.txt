streams security scalability theodore johnson muthukrishnan oliver spatscheck divesh srivastava labs research divesh research att com rutgers university cs rutgers edu 
network attacks ddos attacks worms threatening continued utility internet 
variety sophistication attacks grow early detection potential attacks crucial mitigating impact 
argue gigascope data stream management system functionality performance serve foundation generation network intrusion detection systems 
phenomenal success internet society providing ability communicate easily people world access provide large variety information services 
success enabled hostile agents internet malicious ways see terms spam phishing viruses worms ddos attacks part popular lexicon 
network attacks increase continued utility internet information infrastructure critically depends ability rapidly identify attacks mitigate adverse impact 
variety tools available help identify thwart attacks including anti virus software firewalls network intrusion detection systems nids 
difficulty ensuring hosts run latest version software limitations firewalls worms known tunnel firewalls nids increasingly popular large enterprises isps 
network intrusion detection systems essentially monitor traffic entering leaving protected network look signatures known types attacks 
practice different nids different mechanisms flexible specification attack signatures 
snort uses open source rules help detect various attacks port scans alert users 
bro permits site security policy specified high level language interpreted policy script interpreter 
variety sophistication attacks grow early detection potential attacks crucial mitigating subsequent impact attacks see :10.1.1.60.3083
intrusion detection systems need sophisticated particular traffic monitored high speed gbit sec links imperative generation nids provide general analysis headers contents elements network data streams ip traffic bgp update messages detect potential attack signatures 
provide highly flexible mechanisms specifying known attack signatures network data streams 
provide efficient wire speed mechanisms checking signatures identify mitigate high speed attacks 
explore utility general purpose data stream management system see particular gigascope purpose argue gigascope functionality performance serve foundation generation network intrusion detection systems 
rest structured follows 
section presents main features gigascope query language example driven fashion 
section describes representative network attacks illustrates gigascope aid detection attacks 
section describes aspects gigascope run time architecture enables high performance attack detection 
gigascope gigascope high performance data stream management system dsms designed monitoring networks high speed data streams operationally ip backbone 
gigascope intended adaptable primary data analysis engine settings traffic analysis performance monitoring debugging protocol analysis development router configuration bgp monitoring network attack intrusion detection various ad hoc analyses 
section focus query aspects gigascope defer discussion gigascope high performance implementation section 
gigascope query language gsql pure stream query language syntax inputs gsql query data streams output data stream 
choice enables composition gsql queries complex query processing simplifies implementation 
main features gsql example driven fashion 
section show gsql detect various network attacks 
data model data external source arrives form sequence data packets interfaces gigascope monitors 
data packets ip packets netflow packets bgp updates interpreted protocol 
gigascope run time system interprets data packets collection fields library interpretation functions 
schema protocol stream maps field names interpretation functions invoke 
protocol packet uint time get time required increasing timestamp get timestamp required increasing uint get unit len get len protocol ethernet packet eth src addr get eth src addr required eth dst addr get eth dst addr required 
protocol ip ethernet uint get ip version protocol ipv ip uint protocol get ipv protocol ip get ipv source ip ip get ipv dest ip 
network protocols tend layered ipv packet delivered ethernet link 
convenience protocol schemas mechanism field inheritance specified parentheses 
example ethernet protocol contains fields packet protocol 
filters filter query selects subset tuples input stream extracts set fields possibly transforming outputs transformed tuples output stream 
query extracts set fields detailed analysis tcp protocol packets 
select time timestamp source port dest port len tcp protocol gigascope supports multiple data types include ip multiple operations data types 
query extracts fields ipv tuples matches names resulting data stream fq referenced subsequent gsql queries 
define query name fq select time ipv ip val ip val user defined functions gsql wide variety built operators situations userdefined function appropriate 
gigascope permits users define functions gsql queries 
query example uses longest prefix matching address local prefix table extract data ipv packets local hosts 
select time ipv tbl aggregation aggregation query counts number ipv packets sum lengths source ip address second epochs 
select tb count sum len ipv group time tb aggregation combined user defined functions create sophisticated analyses 
aggregation query uses group variable computed userdefined function count number ipv packets sum lengths local host second epochs 
select tb localhost count sum len ipv tbl group time tb tbl localhost merges joins gsql merge query permits union streams multiple sources single stream preserving temporal ordering properties specified attributes 
input streams number types fields merge fields temporal similarly monotonic increasing decreasing 
example query merge data packets simplex physical optical links obtain full view traffic logical link 
merge queries proven useful gigascope network data analysis 
define query name merge timestamp timestamp gsql join query supports join data streams temporal join predicate possibly predicates emit tuple pair tuples sources satisfy predicate gsql clause 
query example computes delay tcp syn tcp ack 
select tb source port dest port timestamp timestamp tcp syn tcp ack source port dest port dest port source port tb tb timestamp timestamp sequence number ack number joins combined aggregates complex gsql queries 
user defined aggregation sampling gsql permits users define aggregate functions udafs queries just regular aggregates :10.1.1.113.2257
specification udaf consists multiple functions initialize initializes state scratchpad space erate inserts value state udaf output support multiple return values udaf computation destroy releases udaf resources 
example gsql udaf mechanism approximate quantile streaming algorithms coded accessed query compute median value len source ip address second epoch select tb count percentile len ipv group time tb udaf mechanism useful obtain point values median packet length cumbersome obtaining set values returning sample data stream subset sums reservoir sample 
utility sampling analyze high speed streams gsql supports sampling operator specialized users implement wide variety stream sampling algorithms 
key observation employed differences various stream sampling algorithms follow common pattern 
number items collected original data stream certain criterion possibly aggregation case duplicates insert phase 
condition sample triggered sample large size sample reduced criterion compress phase 
alternation insert compress phases repeated times epoch 
epoch sample output output phase 
example query report common source ip addresses second epoch 
additional functions needed deal gigascope level architecture discuss 
select tb ipv group time tb cleaning local count true cleaning count current bucket current bucket query set complex analyses best expressed combinations simpler pieces 
permitting gsql queries named re clause gsql queries set inter related queries forming query dag defined 
attacks large variety network attacks discussed literature including viruses worms ddos attacks 
see :10.1.1.60.3083
discuss representative attacks illustrate gigascope aid detection attacks 
denial service denial service dos attack characterized explicit attempt attackers prevent legitimate users service service 
dos attacks common form internet attacks 
basic form dos attack consume scarce computer network resources kernel data structures cpu time memory disk space network bandwidth 
email bombing example dos attack attempts consume system network resources email bombing attackers send excessively large email messages accounts specific victim site 
attacker dispersed set sources coordinate attack referred distributed dos ddos attack 
email bombing detected victim site email sluggish possibly trying process messages 
alternative way checking possibility monitor smtp traffic entering protected network gigascope check hosts show significant deviations expected traffic port smtp 
simple gsql query track total smtp traffic individual destination ip addresses 
deviations monitored comparing behavior historical trends 
define query name smtp select tb count sum len tcp protocol dest port group time tb note number destination ip addresses protected network limited number groups created query explode email bombing 
similar semi streaming maintain statistics group entity 
count number packets sum packet lengths increase victim hosts 
number destination ip addresses network large gsql sampling mechanism keep track destination ip addresses largest counts variant query tcp syn flood complex attack network connectivity consuming kernel data structures tcp syn flood attack exploits way handshake establish tcp connection sender receiver 
normal scenario sender initiates tcp connection sending syn packet receiver responds syn ack packet sender completes way handshake ack packet 
sending syn ack packet receiver allocates connection resources kernel data structures remember pending connection pre specified amount time 
tcp syn flood attack occurs attacker repeatedly sends syn packets typically different source addresses causing receiver connection resources preventing service legitimate users 
principle tcp syn flood identified correlating syn packets matching ack packets stream tcp packets alarming syn packets specified time interval appear unmatched 
gsql query set purpose joins shown 
outer join ensures output tuples computed matched syn packets epoch 
note estimate certain loss conditions due epoch boundary issues get approximate results 
define query name syn select tb cnt cnt outer join syn count matched syn count tb tb define query name syn count select tb count cnt tcp syn group tb define query name matched syn count select tb count cnt tcp syn tcp ack source port dest port dest port source port tb tb timestamp timestamp sequence number ack number group tb high speed gbit sec link see syn packets second :10.1.1.60.3083
worst case reasonably large multi second round trip times may require memory compute join matched syn count 
cases sample random syn packets incoming stream see section check matched see 
sampling algorithm reservoir sampling instantiated gsql sampling operator suffice task 
alternatively simply count number syn packets number ack packets specified windows declare possibility attack advocated 
query gigascope approach shown 
define query name syn select tb cnt cnt outer join syn count ack count tb tb cnt cnt define query name syn count select tb count cnt tcp syn group tb define query name ack count select tb count cnt tcp ack group tb worms viruses worm self propagating malicious code 
virus requires user opening infected email attachment negative impact worm exploits vulnerabilities underlying operating system inflict damage replicate propagate 
widely discussed popular press significant damage caused productivity infrastructure users 
viruses rely user action propagation tend spread slowly 
highly automated nature worms relatively widespread nature vulnerabilities exploit allows large number systems quickly compromised 
example code red worm exploited vulnerability microsoft iis servers infected systems hours july 
example slammer worm exploited vulnerability microsoft sql server code affected nearly hosts minutes january 
worms include built dos attack payloads web site payloads code red 
biggest impact collateral damage cause rapidly propagate internet 
known worms worms identified payload specific mechanism propagation 
example activity slammer worm identifiable network presence byte udp packets destined port udp sql server query 
define query name slammer worm select tb count udp protocol dest port total ipv length group time tb number header profiles identified detailed traffic analysis encoded directly gsql queries 
unknown worms worms self replicating ongoing worm propagation reflected presence higher expected string similarity payloads network packets 
similarity due unchanging portions worm packet payload expected polymorphic worms 
intuition exploited various systems frequency substrings packet payloads generate signatures sources content similarity turn indicative potential worms 
gsql query akin compute heavy hitters substring counts payload purpose 
examined utility inverse distribution frequency number substrings appear frequency permit faster detection potential worms 
gsql query computation inverse distribution 
define query name inverse distrib select tb cnt count base distrib group tb cnt define query name base distrib select tb sid count cnt group tb sid cost query depends number distinct substrings payloads independent frequency worm propagation 
probing vulnerability attacks exploit known vulnerabilities services 
typical precursor attacks identification machines specific services available potentially exploited 
takes form attacker probing open ports set host machines see 
ingress detection determine port open attacker sends packet host attempting connect specific port 
target host listening port respond opening connection attacker 
implies probing phase attacker spoof address 
monitoring number distinct dest port pairs check anomalous activity gsql query 
select tb count distinct pack dest port cnt tcp group time tb simpler gsql query simply tracks number distinct targets probed potentially different hosts arise distributed vulnerability probe uses anomalous increase number indicator suspicious activity 
select tb count distinct pack dest port cnt tcp group time tb egress detection target host listening process port different kind response may generated 
example packet sent udp port may generate icmp port unreachable response packet sent tcp port may generate rst packet response 
vulnerability probes port scans identified monitoring number distinct destination addresses generating responses :10.1.1.60.3083
easily captured variant 
scalability gigascope designed monitoring high speed data streams inexpensive processors 
example non trivial query sets run packets sec cpu cpu system 
accomplish goal gigascope uses architecture optimized particular applications incorporating unblocking timestamps heartbeats level architecture sophisticated sampling algorithms described 
unblocking timestamps heartbeats gigascope dsms evaluates queries potentially infinite streams tuples 
produce useful output able unblock operators aggregation join union 
general unblocking done limiting scope output tuples input tuple affects 
unblocking mechanism define queries windows input stream 
gigascope technique localizing input tuple scope require fields input data streams identified behaving timestamps monotone increasing :10.1.1.68.4467
locality input tuples determined analyzing query timestamp fields 
example merge join query relate timestamp fields inputs aggregation query timestamp field group variables 
example suppose time labeled monotone increasing tcp stream 
tb group variable query counts packets source ip address second epochs inferred monotone increasing 
variable changes value existing groups aggregates flushed operator output 
values group variables define epochs aggregation occurs flush epoch 
timestamp analysis mechanism quite effective unblocking operators long input streams progress 
input streams stalls operators combine streams merge preserves timestamp order output data stream stall possibly leading system failure 
happen example merging traffic gigabit primary link backup link primary link fails usually carries traffic attack analysis 
main problem presence tuples stream carries temporal information absence 
situations heartbeats see unblock operators 
gigascope punctuation carrying heartbeats generated source query operators regularly injecting heartbeat messages carrying temporal update tuples output streams 
streaming operator subsequent query node query dag emits temporal update tuples receives heartbeat source streams 
heartbeats propagate query dag 
discusses detailed implementation issues demonstrates effectiveness heartbeats significant reduction memory load negligible cpu cost experiments join merge queries high speed data streams 
level architecture gigascope level query architecture low level data reduction high level performs complex processing 
approach employed keeping high streaming rates controlled way 
high speed data streams network interface card nic placed large ring buffer 
streams called source streams distinguish data streams created queries 
data volumes source streams far large provide copy query stream 
queries shipped streams 
query executed source stream gigascope creates subquery directly accesses transforms executed output general subquery created table variable aliases source stream query current query set 
subqueries read directly ring buffer 
output streams smaller source stream level architecture greatly reduces amount copying simple queries evaluated directly source stream 
subqueries called low level queries gigascope intended fast lightweight data reduction queries 
deferring expensive processing expensive functions predicates joins large scale aggregation high volume source stream quickly processed minimizing buffer requirements 
expensive processing performed output low level queries data volume smaller easily buffered 
depending capabilities nic push subquery processing nic 
general appropriate strategy depends streaming rate available processing resources 
choosing best strategy complex query optimization problem attempts maximize amount data reduction low level processor causing packet drops 
gigascope uses large number optimizations lower processing costs 
low level operators compiled code linked directly runtime library avoid expensive runtime query interpretation 
ensure aggregation fast low level aggregation operator uses fixed size hash table maintaining different groups group 
hash table collision occurs existing group aggregate ejected tuple new group uses old group slot 
gigascope computes partial aggregate low level completed higher level 
query decomposition aggregate query similar data cube computations 
gigascope dsms aspects real time system example system keep offered load drop tuples 
spread processing load time improve schedulability gigascope implements policies operators 
particular aggregation operator uses slow flush emit tuples aggregation epoch changes 
output tuple emitted input tuple arrives finished groups output epoch changes case old groups flushed immediately 
sampling complex query set needed analyze high speed streams attacks need rely approximations streaming algorithms keep input 
streaming algorithms compute samples small sized representative data suitable specific queries pass high speed data stream 
stream sampling algorithms include generic sampling methods reservoir sampling methods estimating specific user defined aggregates heavy hitters distinct counts quantiles 
approach developed develop single operator specialized implement wide variety stream sampling algorithms 
sampling algorithms implemented specializations sampling operator permit simple communication structure individual samples sample summary 
process sampling ways similar aggregation collect output sets tuples representative input achieving data reduction 
analogy leads efficient implementation multiple hash tables specializations sampling operator 
alternative flexible approach implementing individual stream sampling algorithms gigascope user defined aggregate functions udafs 
approach explored sampling udafs sketch udafs implemented :10.1.1.113.2257
added flexibility udaf approach sampling algorithms permits specification algorithms need inter sample communication especially compress phase quantile algorithm 
key performance lessons identified 
early data reduction critical complex querying high speed data streams gigascope level architecture highly suitable purpose 
second range early data reduction strategies choose processing complex aggregates including appropriate 
appropriate strategy depends streaming rate available processing resources choosing best strategy complex optimization problem goal maximizing amount data reduction low level query processor 
network attacks ddos attacks worms viruses commonplace variety sophistication attacks keeps growing time 
early detection potential attacks crucial mitigating subsequent impact attacks 
imperative generation nids provide general analysis headers contents elements network data streams detect potential attack signatures 
provide highly flexible mechanisms specifying known attack signatures network data streams 
provide efficient wire speed mechanisms checking signatures identify mitigate high speed attacks 
argue gigascope dsms functionality performance serve foundation generation network intrusion detection systems 
functionality provided expressive high level gsql query language supports rich variety features including filters user defined functions user defined aggregation sampling joins 
example gsql queries illustrated utility features discerning specifying attack signatures 
performance provided gigascope architecture monitoring high speed data streams incorporating features unblocking timestamps heartbeats level architecture sophisticated sampling algorithms 
network attacks evolve gigascope need evolve 
sophisticated cooperation distributed set gigascope installations needed identify highly distributed attacks network infrastructure 
statistical anomaly detection algorithms parametric non parametric need expressed query language 
sampling signature computations payload involving reassembly network packets prove useful 
think gigascope able meet challenges 
balachander krishnamurthy morley mao sen van der merwe helpful discussions 

abadi ahmad balazinska cherniack 
hwang lindner tatbul xing zdonik 
design stream processing engine 
cidr pages 
cs wisc edu cidr papers pdf 

abadi carney cherniack convey lee stonebraker tatbul zdonik 
aurora new model architecture data stream management 
vldb 
dx doi org 

alon duffield lund thorup 
estimating arbitrary subset sums probes 
pods 

arasu babcock babu datar ito motwani srivastava thomas varma widom 
stream stanford stream data manager 
ieee data eng 
bull 

pfitzmann mcdaniel editors 
proceedings th acm conference computer communications security ccs washington dc usa october 
acm 

cert 
cert advisory ca tcp syn flooding ip spoofing attacks 
www cert org advisories ca html 

cert 
cert coordination center denial service attacks 
www cert org tech tips denial service html 

cert 
cert coordination center email bombing spamming 
www cert org tech tips email bombing spamming html 

cert 
overview attack trends 
www cert org archive pdf attack trends pdf 

cert 
cert cc advisories 
www cert org advisories 

chandrasekaran cooper deshpande franklin hellerstein hong krishnamurthy madden raman reiss shah 
telegraphcq continuous dataflow processing uncertain world 
cidr 
cs wisc edu cidr program pdf 

cormode johnson korn muthukrishnan spatscheck srivastava 
holistic udafs streaming speeds 
weikum nig de editors sigmod conference pages 
acm 
doi acm org 

cranor gao johnson shkapenyuk spatscheck 
gigascope high performance network monitoring sql interface 
franklin moon ailamaki editors sigmod conference page 
acm 
doi acm org 

cranor johnson spatscheck shkapenyuk 
gigascope stream database network applications 
halevy ives doan editors sigmod conference pages 
acm 
www acm org sigmod sigmod papers ind pdf 

cranor johnson spatscheck shkapenyuk 
gigascope stream database 
ieee data eng 
bull 

feldmann paxson sommer 
operational experiences high volume network intrusion detection 
pages 
doi acm org 

estan varghese 
new directions traffic measurement accounting focusing elephants ignoring mice 
acm trans 
comput 
syst 
doi acm org 

gibbons 
distinct sampling highly accurate answers distinct values queries event reports 
apers atzeni ceri paraboschi ramamohanarao snodgrass editors vldb pages 
morgan kaufmann 
www vldb org conf pdf 

greenwald khanna 
space efficient online computation quantile summaries 
sigmod conference 
www acm org sigs sigmod sigmod papers research greenwald khanna pdf 

johnson 
gsql users manual 
accessible www research att com 

johnson muthukrishnan 
sampling algorithms stream operator 
sigmod conference 

johnson muthukrishnan shkapenyuk spatscheck 
heartbeat mechanism application gigascope 
vldb conference 

jung paxson berger balakrishnan 
fast detection sequential hypothesis testing 
ieee symposium security privacy pages 
ieee computer society 
csdl computer org comp proceedings sp abs htm 

karamcheti geiger kedem muthukrishnan 
detecting malicious network traffic inverse distributions packet contents 



kim karp 
automated distributed worm signature detection 
usenix security symposium pages 
usenix 
www usenix org publications library proceedings sec tech kim html 

singh varghese 
scalable attack detection network 
kurose editors internet measurement conference pages 
acm 
doi acm org 

koudas srivastava 
data stream query processing 
icde page 
ieee computer society 
csdl computer org comp proceedings icde abs htm 

crovella diot 
mining anomalies traffic feature distributions 
sigcomm 

varghese 
difficulty scalably detecting network attacks 
pages 
doi acm org 

manku motwani 
approximate frequency counts data streams 
vldb pages 
www vldb org conf pdf 

muthukrishnan 
data stream algorithms applications 
www cs rutgers edu stream ps 

paxson 
bro system detecting network intruders real time 
computer networks 
dx doi org 

singh estan varghese savage 
automated worm fingerprinting 
osdi pages 
www usenix org events osdi tech singh html 

snort 
de facto standard intrusion detection 
www snort org 

tucker maier sheard fegaras 
exploiting punctuation semantics continuous data streams 
ieee trans 
knowl 
data eng 
www computer org tkde tk abs htm 

cert 
technical cyber security alerts 
www cert gov cas index html 

vitter 
random sampling reservoir 
acm trans 
math 
softw 

wang zhang shin 
detecting syn flooding attacks 
infocom 
www ieee infocom org papers pdf 
