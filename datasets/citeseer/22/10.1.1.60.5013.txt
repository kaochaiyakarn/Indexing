real time query processing data streams yuan wei sang son john stankovic department computer science university virginia charlottesville virginia mail yw son stankovic cs virginia edu real time applications traffic control systems surveillance systems health monitoring systems need operate continuous unbounded streams data 
applications inherent real time performance requirements met high volume time varying incoming data streams 
real time data stream query model named provides periodic real time queries data streams aforementioned real time applications 
support model real time data stream management prototype system named rt stream developed provide deadline ratio guarantees periodic queries continuous unbounded data streams 
describe periodic query semantics discuss periodic query model appropriate real time applications 
handle irregular data arrival patterns query workloads propose data admission overload protection mechanism 
conduct performance studies synthetic workloads real workloads network traffic monitoring applications 
experimental results show proposed periodic query model suits need real time applications data admission overload protection approach effective managing workload fluctuations 
emergence large number powerful smaller sensors combined improved wired wireless communication technology computing systems nowadays equipped great power monitoring physical world 
result growing need managing data generated physical sensors 
new applications need query series sensor data proper decisions 
example security surveillance systems surveillance query may need just sensor readings 
needs read se ries sensor readings correlate data series different sensors 
stream data management capability essential requirement applications 
applications inherent real time requirements queries streaming data finished specific deadlines 
consider surveillance systems example 
system alert controlling party human operators certain deadlines target may missed 
real time query processing data streams challenging reasons 
incoming data streams irregular unpredictable peaks may overload system 
data arrival rate high system may queries deadlines 
second execution time queries depends data volume contents data streams 
queries registered databases especially join operations may execution time varies dramatically contents inputs 
third addition cpu constrained system 
total storage space required registered queries may exceed size physical memory system performance degrades drastically intermediate query results forced swapped physical memory 
mainly deal cpu time constraints 
addressing memory constraints data stream query processing important complicated research problem 
plan address memory issues 
rest assume main memory space query processing 
remaining parts organized follows 
sections gives overview data stream management systems 
section introduces periodic query model compares existing continuous query model 
section presents service qos metrics data admission overload protection mechanism 
prototype implementation details described section 
performance stream int id float value char type relation int id select avg value range second id id type magnetic 
example query cql evaluation experimental results section 
section discusses related section summarizes 
data stream management system data stream defined real time continuous ordered implicitly arrival time explicitly timestamps sequence items 
due high volume data streams assumed possible store stream entirety feasible query stream history summaries approximated results 
number data stream query languages developed projects 
choose continuous query language cql specify queries data streams 
cql sql declarative language registering continuous queries streams updatable relations 
cql expands basic sql number operators converts data streams relations vice versa 
choose cql comprehensive set operators expressive existing data stream query languages 
information cql comparisons related query languages provided 
example query written cql shown 
example data stream relation registered system 
data stream sensor reading stream sensing system 
data tuple stream fields id field integer type value field float type type field string type 
relation contains sensor ids target area 
query operates data tuples arriving stream seconds calculates average value magnetic sensor readings target area time period 
real time periodic query existing data stream management systems support continuous query model 
continuous query model query instances triggered incoming streaming data 
new tuple arrives new query instance initiated processed 
query results updated results newest input 
continuous model performs system workloads moderate system resources finish query instances triggered 
number query instances system workloads depend directly unpredictable input appropriate real time applications need predictable responses 
drawback continuous query model application control query executed 
applications queries interesting application need executed 
continuous query model easily achieved 
statically allocating system resource different queries query execution time changes system input 
propose periodic query model real time applications need predictable query response 
model query registered dsms system query instances initiated periodically system 
initialization query instance takes snapshot data streams input 
input change course instance execution newer data tuples data streams 
newly arrived data tuples processed query instance 
semantics query execution interrupted aborted new incoming data 
application gets results periodic query instance knows results reflect state system query instance initiated 
periodic query model query frequencies deadlines specified applications enforced system 
compared continuous query model workloads periodic queries easier estimate time fixed number query instances system 
query qos overload protection fact stream data query execution time bursty system may experience transient overload run time 
system overloaded qos adaptations needed reduce system workloads restore system stable states 
periodic query qos metrics quality stream data query measured qos metrics data completeness data completeness measures percentage incoming stream data compute query results 
due bursty nature stream data techniques sampling load shedding may reduce system workload case overload 
sliding window sampling data stream sampling original query window 
data completeness example data completeness metric quantitatively measures effects operations 
example show concept data completeness 
tuples sampled larger sliding window contains tuples 
ideal case query executed larger sliding window data tuples 
due resource constraints system process tuples 
sampling algorithm selects tuple data stream query executed newly created data window 
sampling process reduces data completeness query 
data completeness notion applies raw data incoming sensor data streams intermediate results output join operator 
ratios ratios measure percentage queries finished deadlines 
data admission controller real time applications partial results desirable queries missing deadlines 
data completeness may traded better query ratios run time 
propose overload protection mechanism called data admission trades data completeness better query ratios 
basic approach reduce incoming data volume system overloaded 
previous research results indicate load shedding effective performed earlier stages query plan design load shedding process performed data stream tuples processed system 
considering certain data stream tuples important allow data stream sources mark important data tuples high importance flags 
data tuples flags admitted system 
proportional integral pi controller control data admission process simple provides acceptable response time workload data streams data ac pi ctrl ac dsms query results ratio threshold 
data admission controller fluctuations 
choose proportional integral derivative pid controller workloads query system vary dramatically sampling period due irregular data arrival rate time varying query selectivity 
adding derivative control signal amplifies random fluctuations system workloads 
data admission control architecture shown 
shown query ratios sampled periodically compared ratio target 
differences passed pi controller generate data admission control signal pac subtracted current data admission ratio 
pac derived equation 
pac pmr short term long term query ratios sampled sampling period 
specified maximum ratio allowed application pmr controller parameters control weights shortterm long term query ratios data admission control signal 
controller parameters hand picked give best system response 
tune controller suit different system responses addressed left 
provide service differentiation multiple data admission controllers data admission controller corresponding service class 
system implementation evaluate real time periodic query model developed data stream management system prototype named 
system developed top stream data stream management system prototype developed stanford university 
prototype system extended query specification language parser added edf operator scheduler data admission controller 
original stream lines code lines code added modified support periodic query model 
query language extensions mentioned earlier cql query language supported stream project comprehensive set operators expressive existing stream query languages 
cql specify timing requirements queries 
rt stream order specify periodic real time queries added constructs cql query language stime starting time periodic query etime time periodic query period period query applicable deadline deadline query relative query starting time importance importance level query new query language specify different types queries 
specify real time non real time queries depending deadline fields set non real time queries infinitely large deadline values 
specify periodic aperiodic queries depending period fields set aperiodic queries infinitely large period value 
provide service differentiation query language allows applications divide queries different service classes specifying different importance values 
query scheduler implemented edf scheduler replace original round robin scheduler 
specification periodic query parsed query parser stored internal object represents query 
query instances initialized periodically specification 
queries ready run stored linked list called active query list 
list sorted importance levels deadlines 
queries active query instances instances finished stored separate linked list called dormant query list 
queries dormant query list sorted starting times query instances 
pseudo code edf scheduler shown 
cpu time divided small time slots currently ms 
slot edf scheduler inspects dormant query list query instances need activated 
query instances query instances activated inserted active query list 
active query list inspected query instances missed deadlines 
tardy query instances exist immediately terminated removed active query run get current system time inspect dormant query list initialize new query instances inspect active query list remove tardy query instances run query finished insert query list insert active query list 
edf scheduler pseudo code list 
inspecting linked lists scheduler executes active query 
query finishes time slot query inserted dormant query list waiting activated query inserted back active query list 
current implementation requires relative deadline periodic query equal period time active query instance periodic query 
concurrency control system allows append operations data streams matches nature data streams 
system supports updatable relations 
system uses timestamp concurrency control algorithm 
requires updates relations marked explicitly timestamps non decreasing order 
relation updates arrive order sorted applied relations 
update applied older update arrives older update dropped 
updates data streams relations handled special system operators called stream source operator relation source operator run priority higher application queries 
data admission controller implement data admission controller described section query ratio statistics need maintained 
long term query ratio data admission controller average ratio query instances 
short term query ratio average ratio query instances 
query ratio threshold set current system implementation 
data admission controller invoked periodically scheduler adjust data admission ratios 
queries divided multiple service classes system maintains query 
range window op system boundary data window stream source operator data stream data window range window op query 

data admission control implementation short term long term ratio statistics service class service class data admission controller 
data admission control need implemented query level different queries different data admission ratios share data stream source 
shown queries share data stream input incoming data tuples data stream processed stream source operator 
stream source operator data stream tuples system 
data admission process queries carried stream data window operators 
example shown range window operators op op perform data admission query query separately 
design different queries different data admission ratios 
operators perform data admission random dropping 
covered semantic dropping improve system performance query semantics considered 
system allows data sources mark important data tuples sure get processed system 
importance flag marked setting highest bit data tuple timestamp 
data tuples flags admitted system regardless current data admission ratios 
operators maintain target data admission percentage dropping unmarked data tuples 
performance evaluation conduct performance evaluation synthetic workloads real workloads network monitoring applications 
synthetic workload experiments test system performance short long workload bursts 
real workload experiments performed show current system overload protection mechanism handle workload fluctuations real application 
experiments carried single machine running redhat linux 
machine equipped parameter value total memory page size page queue stream data rate stream tuples sec query stream total query selection sel 
stream stream join sel 
stream rel join sel 
query period sec query deadline sec pmr data ac period sec experiments run time sec table 
synthetic workloads settings ghz pentium processor gigabyte ddr sdram main memory 
synthetic workloads settings synthetic workloads experiments shown table 
data stream management system configured megabytes main memory space 
system page size set kilobytes temporal result queue adjacent operators pages 
system configured large memory space eliminate effects memory constraints 
data streams registered system registered data stream periodic queries associated 
data streams experiments variable rate data streams average data tuple arrival rate data stream tuple sec 
arrival data tuples conforms poisson distribution data rate shown average arrival rate 
data tuples streams assigned special values selectivity values configurable 
experiments set selection query selectivity stream join selectivity stream relation join selectivity 
sampling period data admission controller set second give fast response workload fluctuations 
total run time experiment seconds 
data streams relations experiments schema example shown 
stream id integer value float type char id integer data stream queries associated 
example periodic queries corresponding data stream 
select range second range second type type id id value value stime second etime second period second deadline second importance 
select range second id id stime second etime second period second deadline second importance 
select avg value min value max value range second id id stime second etime second period second deadline second importance 
select type count range second group type stime second etime second period second deadline second importance query stream stream join query monitors different data streams returns tuples sensor types sensor ids different values 
query joins stream relation 
selects data tuples sent sensors identified ids relation 
query aggregate query maintains statistics sensors specified relation 
query collects statistics incoming data stream 
maintains report count type sensor data stream 
streams registered system system total queries 
set queries real time query specifications executed original stream prototype compare system performance 
conduct experiments systems stream original stream system uses round robin scheduler supports continuous queries 
system runs edf scheduler supports periodic query model 
data admission control system 
dac system single data admission controller system 
dac system multiple data admission controllers service class 
workload time seconds 
workload illustration aware existing real time data stream query systems algorithms 
baselines available performance comparisons 
evaluate system study system performance normal workloads extreme workloads 
shown system workloads configured way normal system workloads system cpu utilization 
evaluate system performance heavy workloads create workload bursts experiment 
workloads burst twice normal system workloads need cpu processing capacity 
shown workload burst short burst 
begins th second lasts seconds 
second workload burst long burst 
begins th second ends th second 
choose heavy workload fluctuations test system performance extreme overload situations 
experiment results shown runs confidence intervals corresponding data values 
single service class set experiments evaluate system performance queries service class 
experiment results shown 
shown system overloaded latencies continuous queries increase monotonically time 
maximum latency reaches high seconds 
latency system continues grow burst ends th second 
reason large number data tuples accumulated queues system needs process data tuples process new incoming data tuples 
length queue decreasing workload burst latency increases due fact data tuples second workload burst takes second process data tuples accumulated second burst 
periodic query model latencies queries bounded specified query deadlines 
shown similar latency continuous queries short term ratio periodic query continues increase burst goes away th second 
short term latency seconds ratio continuous query output latency stream average latency max latency time seconds periodic query ratio data completeness ratio ratio dac data completeness dac time seconds 
single service class latency ratios ratio begins drop 
data admission control introduced system respond workload fluctuations faster 
experiment data admission process returns system query ratio seconds 
process fairly fast magnitude workload fluctuations 
data completeness system maintained long workload burst 
burst data completeness restored seconds 
overhead applying data admission algorithm negligible 
measurements experiments overhead running scheduler data admission controller costs cpu time 
due space limitations show overhead graph 
differentiated services differentiated services required applications 
case overload system guarantee important set queries get processed 
second set experiments test service differentiation capability system 
set experiments streams associated queries divided service classes classes class queries important 
service class data streams queries 
experiment results shown 
data completeness ratio ratio ratio differentiated services class ratio class ratio class ratio time seconds differentiated services dac class ratio class ratio class ratio data completeness time seconds differentiated services dac class ratio class ratio class ratio class data completeness class data completeness class data completeness time seconds 
differentiated services ratios data completeness data completeness data completeness system performance data admission shown graph 
data admission ratios class class queries keep increasing workload burst disappears th second 
graphs show ratio data completeness data admission schemes 
called dac stands data admission control single controller 
scheme data admission controller queries system share data admission controller 
called dac multiple data admission controllers corresponding service class 
results single controller system shown graph 
shown graph system handles workload fluctuations 
ratios class class queries remain experiment ratio class queries restored seconds 
multiple controllers scheme shown graph data completeness class class queries remains close ratio class queries remains 
ratio class queries fluctuations th second 
restored zero seconds 
comes cost class queries 
long workload burst incoming data class queries dropped 
comparing graphs see clearly qos tradeoffs system 
application willing tolerate low data completeness ratios query ratios different service classes substantially improved ratios lower service class queries sacrificed service quality higher class queries preserved 
real network monitoring workloads test system prototype workloads simulate network traffic monitoring system monitors network traffic packet headers network performance measurements 
results queries optimize network counteract malicious attacks ddos attacks 
timing requirements system obvious performance network essentially financial gains depend 
system monitors streams network packet headers format ort ort len flags timestamp workloads experiments types queries network traffic statistics queries collecting statistics ongoing network traffic 
source destination traffic monitoring monitoring network traffic associated particular source parameter value total memory page size page queue stream data rate stream tuples sec query stream total query query period sec query deadline sec pmr data ac period sec experiments run time sec table 
network monitoring settings destination addresses 
application traffic monitoring monitoring network traffic associated particular types applications 
due space limitation provide list queries experiments 
network trace experiment trace ufl passive measurement analysis pma project 
experiment settings shown table 
system configured monitor network traces different router interfaces 
average rate packets second 
order handle high stream data arrival rate queue size increased pages 
total queries registered system 
experiment lasts seconds length network traffic trace 
network traffic workloads experiment results shown 
network traffic average data arrival rate tuples second 
rate variations tuples second 
despite small data arrival rate variations system large query workload fluctuations due query selectivity variations 
variations caused sudden increase certain type traffic workloads 
example selectivity query monitors traffic may change radically packet volume suddenly increases traffic 
shown second graph system experiences large workload burst starting th second 
system responds workload fluctuations seconds returns query ratio back 
see workload fluctuations network monitoring application quite large system needs reduce data completeness low order handle workload burst 
workload burst system restored stable state data completeness seconds 
show workload tuples sec network trace workload time seconds workload interface workload interface ratio data completeness network traffic monitoring workload latency stream ratio dac data completeness dac time seconds 
network traffic monitoring workloads results put latency continuous queries 
workload burst puts query workload system dropping data system takes long time return stable state shown increasing latencies 
results show model data admission control handle workload fluctuations reasonably type applications 
related years number research projects industrial efforts focus stream data management including stream aurora telegraphcq niagaracq gigascope research stream data management divided categories query languages query processing scheduling memory management statistics maintenance stream management distributed environments clustering 
realtime data stream query processing systems different real time multimedia streaming systems sense stream query systems focus executing complicated sql queries data streams encoding decoding transferring multimedia streams 
aurora project claims provide real time data stream processing capabilities 
real time metric average latency data tuples system uses deadline ratios periodic queries 
query models different 
papers discuss qos load shedding issues stream data processing 
tatbul propose technique dynamically insert remove drop operators query plans order handle workload fluctuations 
babcock propose load shedding techniques restricted class stream queries 
approaches data admission approach proposed reduces system workload dropping data tuples 
difference treat query black box pi controller control data admission process 
solution drops data tuples processed queries efficient compared dropping intermediate results 
difference system considers query time requirements data admission process aims minimize query deadline ratios 
system supports query service differentiation allows different service classes different data admission ratios 
research results scheduling query operators 
operator scheduler focusing streaming data management 
authors argue fine grained scheduling approach combination various optimization techniques batch operations significantly improve system performance 
discuss application aware extensions scheduling decisions qos specifications 
proposed scheduling algorithms focus optimizing throughput latency memory consumptions 
timing requirements discussed output latency 
providing deadline guarantees queries main focus 
babcock propose scheduling algorithm called chain scheduling 
authors claim algorithm optimal minimizing run time memory usage single stream queries involving selections projections foreign key joins stored relations 
mainly focuses minimizing memory requirements system proposed algorithm deal query timing requirements 
summary design implementation real time data stream query processing system prototype named 
propose periodic query model alternative continuous query model real time applications 
discuss semantic difference models advantages disadvantages 
introduce real latency max seconds time periodic query qos metrics query language extensions support real time periodic query specifications 
design implement data admission overload protection mechanism reduce system workloads case overload 
performance evaluation synthetic workloads test system performance extreme workload fluctuations real workloads network traffic monitoring applications show current system data admission control mechanism handle workload fluctuations real application 
currently looking directions 
direction build mathematical model data stream queries controller tuning process automated controller performance guaranteed 
direction address memory constraints 
adjust query quality operator scheduling orders deal memory constraints run time interesting research problem 
direction extend current system distributed environments 
data stream sources dsms systems spread distributed environments data stream dissemination intermediate results generation propagation query qos adaptation important challenging research problems 
arasu babcock babu widom 
characterizing memory requirements queries continuous data streams 
acm transactions database systems 
arasu babu widom 
cql continuous query language semantic foundations query execution 
technical report stanford university 
arasu manku 
approximate counts quantiles sliding windows 
rd acm symp 
principles database systems pods 
babcock babu datar motwani thomas 
operator scheduling data stream systems 
vldb journal special issue data stream processing 
babcock datar motwani 
load shedding aggregation queries data streams 
intl 
conference data engineering icde 
babcock olston 
distributed top monitoring 
acm intl conf 
management data sigmod 
babu widom 
continuous queries data streams 
sigmod record 
balakrishnan balazinska carney cetintemel cherniack convey stonebraker tatbul zdonik 
retrospective aurora 
vldb journal special issue data stream processing 
carney cherniack convey lee stonebraker zdonik 
monitoring streams new class data management applications 
th vldb conference 
carney zdonik cherniack stonebraker 
operator scheduling data stream manager 
th international conference large data bases vldb 
chandrasekaran cooper deshpande franklin hellerstein hong krishnamurthy madden raman reiss shah 
telegraphcq continuous dataflow processing uncertain world 
conf 
innovative data systems research cidr 
chen dewitt tian wang 
niagaracq scalable continuous query system internet databases 
sigmod 
cranor johnson spatscheck shkapenyuk 
gigascope stream database network applications 
sigmod industrial track 
ozsu 
issues data stream management 
sigmod record 
guha meyerson mishra motwani callaghan 
clustering data streams theory practice 
ieee transactions knowledge data engineering 
motwani widom arasu babcock babu datar manku olston rosenstein varma 
query processing resource management approximation data stream management system 
conf 
innovative data systems research cidr 
passive measurement analysis 
national laboratory applied network research nlanr 
pma nlanr net 
sullivan 
tribeca stream database manager network traffic 
nd international conference large data base vldb 
tatbul zdonik cherniack stonebraker 
load shedding data stream manager 
th international conference large data bases vldb 
