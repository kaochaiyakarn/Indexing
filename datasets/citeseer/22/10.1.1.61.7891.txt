finding trees unordered data hannes heikki mannila sepp nen hiit basic research unit lab 
computer information science fi helsinki university technology finland hannes heikki mannila fi 
tree structures natural way describing occurrence relationships attributes dataset 
define new class tree patterns unordered data consider problem discovering frequently occurring members pattern class 
intuitively tree occurs row data attributes occur form subtree containing root 
show definition advantageous properties shallow trees significant probability occurring random data definition allows simple levelwise algorithm mining frequently occurring trees 
demonstrate empirical results method feasible discovers interesting trees real data 
frequent pattern discovery extensively studied especially case data various algorithms exist mining frequent itemsets association rules 
propose new class occurrence patterns trees 
idea search hierarchies general specific attributes 
example consider document data tree attribute root children child see 
means general concept specific terms related specialization observed row follows hierarchy described tree attributes tree form subtree containing root 
example fig 
example tree tree row satisfies condition row 
consider task finding trees sufficiently rows violating subtree condition conflicts 
prevent trivial trees consisting attributes occurring rarely additionally require attribute occurring high frequency data 
task consider thresholds find trees conflicts attribute occurring tree frequency 
lots research finding trees tree data see crucial difference start unstructured data mining frequent sets association rules 
hierarchical clustering finding phylogenetic trees see looks finding trees data typically goal find tree containing attributes data 
true finding tree structured bayes nets data 
difference hierarchical clustering phylogenetic tree attributes data leaves tree 
seek trees nodes tree items data 
somewhat analogous class patterns approximate itemsets error tolerant dense itemsets 
relaxed versions frequent itemsets set considered occur row provided attributes set equal row 
similarly patterns tree supported rows items tree 
tree structure reflects closely kinds occurrence fact data 
fragments order type directed itemsets fragment violated rows having items lacking item appear 
fragments order viewed simple unrooted trees having branch 
rest structured follows 
section definition tree patterns 
discuss theoretical properties section 
section give algorithms discovering trees measures selecting interesting trees 
empirical results demonstrating method feasible finds interesting trees section 
extensions pattern class discussed section section short 
tree patterns data set valued attributes called items 
dataset table rows set column headers 
dataset considered unordered multiset rows row subset denote attributes letters value attribute 
denote number rows number attributes 
frequency attribute fraction rows 
tree pair attribute tk set subtrees tree 
leaves tree set empty 
say root tree 
ti form ti ai ci attributes 
ak called children phrasing unambiguous require attribute appears tree 
attribute descendant equivalently ancestor child descendant child set nodes tree simply attributes occurring tree 
conflict count number rows node descendant 
thresholds collection trees consists trees occurring number rows dataset computational problem consider 
problem 
compute 
note definition upper bound number conflicts frequent patterns typically defined lower bound number occurrences 
parameter role preventing attributes low frequency considered 
basic properties tree patterns section consider basic properties tree patterns pattern collection 
monotonicity observation simple monotonicity property typical frequent patterns 
tree rooted subtree tree obtained series removals leaves 
proposition immediate 
proposition 
pattern class monotone respect rooted subtrees subtree 
trees association rules discuss relationship trees association rules 
simple tree containing root child conflict count ab ab frequency attribute set ab relative number rows 
noting ab accuracy confidence association rule nf 
ask complex trees reduced association rules 
find trees just postprocessing set association rules attributes 
see interesting postprocessing collections association rules 
turns case 
row satisfies subtree condition tree rule true pairs descendant simple formula conflict count tree accuracies rules attributes occurring reason tree conflicts row rule violated frequency happens depends interaction different rules 
example consider tree root children ab ac accuracies rules 
conflict count tree vary depending conflicts rows 
algorithm computing take input association rules attributes 
number possible trees number rooted labeled trees vertices follows theorem cayley states number labeled trees see section sequence 
number possible roots course result follows 
implies infeasible consider trees moderate values trees random data address question trees collection random data similarly discussion frequent itemsets 
suppose contains independent identically distributed entries probability entry 
trees root children cause conflict value attribute root conflict probability fairly low 
trees longer branches straightforward demonstrate probability conflict grows fast 
chernoff bounds easy show probability tree longer branches say nq conflicts exp constant trees nodes selected set attributes implying expected number trees nq conflicts bounded exp 
log log log log log expected number trees sufficiently long branches 
omit details 
exponential collection frequencies frequent sets frequency threshold specify distribution data rows uniquely exponential input suffice determine collection 
generating collection levelwise algorithm proposition allows standard levelwise algorithm computing trees computing frequent itemsets start single attributes pass combine trees size trees size 
combination phase simple itemsets 
approach try adding attribute possible position tree large number attributes force algorithm consider prohibitively candidate trees 
possibility try combining pairs trees takes quadratic time number trees 
approach zaki 
briefly tree represented string traversing depth preorder recording attribute node backtracking 
example tree encoded 
encoding sufficient consider combining pairs trees sharing prefix limits quadratic behavior smaller sets complete set trees 
details see note restrict attributes occur tree combinations listed zaki needed 
drawback combination method tree generated multiple times isomorphic copies example isomorphic trees get generated 
optimize database pass accessing database trees children node alphabetical order information isomorphic trees 
possible completely prune copies 
example tree generated trees order property 
possibility canonical forms trees 
size class highly sensitive values parameters 
way ameliorate problem top algorithm similar developed dense itemsets 
remarked previous section random data trees small depth low conflict count 
straightforward modify algorithm construct binary trees guaranteeing longer branches 
omit details 
selecting interesting trees collection cases quite large tools needed selecting interesting trees 
measures selecting interesting trees specificity conflict ratio 
specificity tree size transitive closure tree viewed relation set attributes 
words number ancestor descendant pairs tree 
single branch tree maximal specificity shallow tree leaves children root minimal specificity 
conflict ratio tree obtained comparing number conflicting rows data expectation assumption attributes independent marginal frequencies observed data 
expectation computed recursively tree 
probability conflict independence assumption pr conflicts pr pr pr pr conflicts product taken attributes represented root second child trees conflict ratio high trees fewer conflicts expected independence assumption trees capture interesting occurrence patterns data 
interestingness measures rank trees various ways 
experiments section report experimental results obtained generated real data 
due space constraints discuss results briefly 
generated data generated data procedure 
number disjoint trees different values specificity measure created hand 
number trees experiment varied different subcollections trees 
collection data produced follows 
row generated making attributes equal 
tree selected probability selected sampled subset nodes node probability letting set ancestors nodes bit dataset flipped independently probability create noise 
parameter values data rows generated 
generated data trees mined java implementation levelwise algorithm described section 
parameter chosen tree chance occurring attribute tree may low pq chance occurring 
parameter chosen large possible reasonable number trees obtained typically close limit 
selecting parameters reason disjoint trees considered 
overlapping trees large numbers shallow subtrees generated conflict threshold quite low 
prevents discovery interesting trees 
disjoint trees result set reasonably small containing trees order test trees positioned results respect interestingness measures mined trees partitioned classes specificity class sorted conflict ratio specificity class trees selected final result set decreasing order conflict ratio trees selected 
size final result set measure close top generating trees 
results shown table 
see case number trees needs examine order find generating trees fairly low 
fact extra trees variations generating trees example smallest data set generating trees immediately simple variants precede generating tree conflict ratio order 
sensitivity parameter evident cases shown size output varies non monotonically real data real datasets experiments data terms nfs abstracts database students courses computer science department university helsinki data 
results data sets results similar third 
abstracts data data set consists abstracts describing nsf awards basic research 
observations correspond abstracts variables correspond terms occurring 
preprocessing applied porter stemming algorithm merge variables corresponding terms common stem 
addition reduced dataset random sample observations choosing subjectively interesting stem terms experiments 
final preprocessed data set consisted observations rows variables columns total entries average row 
table shows number trees obtained different conflict thresholds frequency thresholds 
see number elements answer increases rapidly decreasing frequency threshold increasing conflict terms chosen algebra algorithm atom behavior carbon cell cellular channel code comput dna document earth ecosystem educ electron environment genet internet life light link magnet matter metal molecular network nonlinear nuclear numer ocean pi plasma protein quantum record semiconductor social statist theoret transit transport water web 
threshold 
observe quite easy iteratively find values produce outputs desired size 
inspected visually resulting trees look intuitive 
example tree depicted conflict count frequency conflict ratio 
set parameters intuitive tree conflict count frequency conflict ratio 
tree specificity tree specificity 
course enrollment data data consists course enrollment records courses held department computer science university helsinki 
data set observations corresponding students variables corresponding courses 
mean number row 
total number data 
table shows number trees obtained different conflict frequency thresholds 
course enrollment data ordering department recommends students take courses 
instance courses require basic understanding programming concepts courses specific prerequisites 
example tree depicted conflict threshold high conflict ratio 
tree reflects fact advanced courses data structures programming java programming prerequisite computer organization course programming suffices 
order department recommends courses taken 
outlier detection evaluate usefulness discovered trees experimented outlier detection 
observation conflicts strongest tree patterns outlier 
test performed experiment 
took course enrollment data set denoted generated additional data set independent attributes marginal frequencies size original data frequent trees mined augmented data 
specificity class trees maximal conflict ratio selected form subset specificities ranged generated number trees specificity total trees selected row determined trees conflict result rows average conflict count standard deviation average standard deviation 
shows histograms number conflicts row real data added rows noise rows behave clearly differently real data rows viewpoint tree patterns 
table 
results generated data 
number attributes number trees generating process thresholds frequency conflicts size output set size final result set obtained trees cover table 
results abstracts data set 
number trees collection various values 
max largest tree max maximal specificity 
algorithm numer comput cand time sec 
network cell fig 
example trees abstracts data science environment water table 
results course enrollment data 
number trees collection various values 
max largest tree max maximal specificity 
cand time sec 
data structures programming java programming programming computer organization fig 
example tree course enrollment data fig 
histogram conflict count rows data generated trees 
left depicts histogram real rows data total 
right depicts histogram added noise rows total 
original data rows fewer conflicts chosen trees added rows 
see text details 
extensions problem clearly seen experiments large number small shallow trees crop slow algorithm investigated interesting trees 
possible solution restrict class trees considered 
example number children node restricted levelwise algorithm possible fewer shallow trees consider 
way approach problem change search strategy levelwise breadth search 
case frequent itemsets depth algorithms mining maximal frequent itemsets considering subsets see 
adapting algorithms trees interesting direction research 
efficient search strategies developed interesting broaden class patterns directed acyclic graphs natural generalization trees 
introduced idea mining trees unordered data shown pattern class distinct traditional frequent itemsets association rules 
shown empirically levelwise algorithm find interesting trees generated real data 
real data experiments show interesting occurrence patterns naturally captured trees 

chi muntz nijssen kok frequent subtree mining overview 
fundamenta informaticae 
chi yang muntz indexing mining free trees 
proceedings third ieee international conference data mining icdm 

chi yang muntz mining frequent rooted trees free trees canonical forms 
technical report csd tr ucla computer science department ftp ftp cs ucla edu tech report reports pdf 

chi yang muntz hybridtreeminer efficient algorithm mining frequent rooted trees free trees canonical forms 
proceedings th international conference scientific statistical database management ssdbm 

nijssen kok efficient discovery frequent unordered trees 
international workshop mining graphs trees 

zaki efficiently mining frequent trees forest 
proceedings eighth acm sigkdd international conference knowledge discovery data mining kdd 

inferring 
associates sunderland ma 
pei tung han fault tolerant frequent pattern mining problems challenges 
workshop research issues data mining knowledge discovery dmkd 

yang fayyad bradley efficient discovery error tolerant frequent itemsets high dimensions 
proceedings seventh acm sigkdd international conference knowledge discovery data mining kdd 

sepp nen mannila dense itemsets 
proceedings tenth acm sigkdd international conference knowledge discovery data mining kdd 

gionis mannila fragments order 
proceedings ninth acm sigkdd international conference knowledge discovery data mining kdd 

tuzhilin handling large numbers association rules analysis microarray data 
proceedings eighth acm sigkdd international conference knowledge discovery data mining kdd 

lent swami widom clustering association rules 
proceedings th international conference data engineering icde 

liu hsu ma pruning summarizing discovered associations 
proceedings fifth acm sigkdd international conference knowledge discovery data mining kdd 

klemettinen mannila ronkainen toivonen verkamo finding interesting rules large sets discovered association rules 
proceedings third international conference information knowledge management cikm 

pruning redundant association rules maximum entropy principle 
proceedings sixth pacific asia conference knowledge discovery data mining pakdd 

stinson combinatorial algorithms generation enumeration search 
discrete mathematics applications 
crc press 
sloane line encyclopedia integer sequences www 
research att com sequences 

agrawal mannila srikant toivonen verkamo fast discovery association rules 
advances knowledge discovery data mining 
aaai press 
bay uci kdd archive irvine ca university california department information computer science 
kdd ics 
uci edu 


coordinator old world database fossil mammals university helsinki 
www helsinki fi science 

gionis mannila spectral ordering european fossil mammals 

porter algorithm suffix stripping 
program 
bayardo efficiently mining long patterns databases 
proceedings acm sigmod conference management data sigmod 

han kamber data mining concepts techniques 
morgan kaufmann 
