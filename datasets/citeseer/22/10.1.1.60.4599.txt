template detection large scale search engines liang chen department electronic engineering tsinghua university beijing china liang compass net edu cn templates web sites hurt search engine retrieval performance especially content relevance link analysis 
current template removal methods suffer processing speed scalability dealing large volume web pages 
propose novel stage template detection method combines template detection removal index building process search engine 
web pages segmented blocks blocks clustered style features 
second similar contents sharing common layout style detected index building process 
blocks similar layout style content identified templates deleted 
experiment popular web sites shows method achieves faster shingle sst methods close accuracy 
categories subject descriptors information storage retrieval information search retrieval information filtering general terms algorithms experimentation keywords template detection web page segmentation clustering 
templates common parts shared web pages web site 
typical templates include navigation bars advertisement privacy policy contact information templates widely web site design negative factors information retrieval 
words template hurt relevance computation irrelevant content 
second link distribution web pages skewed duplicated links templates 
templates problem demonstrated :10.1.1.4.4087
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sac april france copyright acm 
ye department computer science university california davis ca usa edu xing li department electronic engineering tsinghua university beijing china xing edu done template detection removal :10.1.1.4.4087
methods achieve high accuracy major drawbacks speed scalability 
bottleneck speed identify similar content 
methods compare content compare shingle fingerprint string content compare keywords exactly match contents word 
methods cost computation overhead making template detection time consuming 
propose approach combine template detection removal index building process search engine 
method assumptions templates site share common layout style templates share similar contents 
corresponding assumptions method consists stages 
stage order capture common layout style web pages segmented blocks clustered layout styles 
second stage method uses word offset distribution identify similar contents obtained index building process search engine 
index built word offset distributions computed block 
blocks sharing close distributions identified similar contents 
blocks having common layout style similar content identified templates deleted index 
combination promising solve template problem large scale search engines 
costs computation overhead measure similarity contents 
second scalable large scale search engines adding pipeline stage index building process just costs computation compete index builder disk remainder organized follows 
section reviews previous template detection 
section describes approach experiment result section 
conclude section 
related methods proposed template problem 
employs notion segment web page 
determined number hyperlinks html element 
frequency exceeds threshold identified template 
partition depends number hyperlinks html element may reflect layout web page 
poor segmentation cause failure template detection 
similar method proposed partitions web pages html tag table 
employs partition method 
keywords block content extracted compute entropy block 
blocks small entropy identified templates 
approach faces problems accuracy relies feature selection 
time consuming extract features blocks 
tree structure site style tree sst introduced capture common presentation style web pages 
sst tree merges dom trees web pages 
entropy sst element computed determine element template 
compared methods sst achieves higher accuracy 
drawbacks limit scalability new dom tree merged content dom tree element compared branches sst determine new branch existed 
process costs computation 
dealing large volume web pages sst fit memory 
research template detection related studies web segmentation fragment detection block leveled search block leveled link analysis content extraction 
studies propose methods solve similar problems statistical method machine learning 

approach primary goal method detect remove templates indices search engines 
method consists stages 
web pages segmented blocks blocks common layout style grouped 
second index building process similar contents detected blocks common layout style removed index 
stage approach web segmentation similar 
omit layout style information position web page background color size 
searching template candidates block corpus web site inefficient templates exist blocks sharing layout style 
approach blocks clustered layout style information web segmentation 
searching templates applied blocks common layout style 
second stage word offset distribution block measure similarity contents 
experiment result shows word offset distribution provides information tf term frequency positions word represent content applied measure similarity contents 
practical word offset distribution denoted offset sequence 
explore bloom filter technique finding similar offset sequences 
bloom filter costs low memory computation overhead improves speed method 
web segmentation block clustering segment web page html elements web page parsed 
elements determine layout structure table td tr ul 
mentioned tr td table partition table smaller units 
smaller units contain single object separate template non template blocks 
omit td tr rest boundary block tree segment web pages 
web pages segmented layout style information extracted 
block layout style information includes position web page html elements attributes background color table size 
array integers represent html elements attributes 
number sequence represent block position ith number represents block position ith layer 
gives example 
dark block position sequence rd block layer nd block second layer 
layout style information blocks clustered single pass method 
cluster called block style cluster bsc defined follows 
definition 
block style cluster bsc set blocks bk satisfies requirements ai aj di dj ai denotes html attributes block bi di denotes position bi 
template detection index building modern search engines adopt inverted index 
approach process building index hash table created store words 
word item points linked list element stores block id offset sequence block 
size hash table reaches written disk 
web pages indexed temporary hash tables merged build index search engine 
word hash table offset sequences clustered single pass method 
cluster called cluster defined follows 
demonstrates definition 
definition 
word feature cluster word wn set blocks bk satisfies requirements blocks bk belong bsc wn offset sequences blocks bk similar 
bloom filter determine similarity offset sequences described section 
definition problem computing similarity content decomposed measuring similarity words words offset sequences 
introduce notion template word 
definition 
word wn block bi template word set blocks bk bi follows rules bk belong wn ratio template words words block reaches threshold twr block identified template words block removed hash table 
tb set experiment 
tb define non template word ratio threshold 
tb set 
non template word ratio exceeds block identified block 
necessary compare rest words reduces time consumption 
implementation basic method implementation issues 
difference offset approach difference offset applied absolute offset offset sequence 
advantage difference offset small fragment context changes offsets fragment change 
majority offset sequence remains value 
bloom filter similarity computation evaluate similarity offset sequences introduce bit wise originally comes bloom filter 
implemented array bits 
employ integer variables mi bits totally 
offset sequence partitioned equal length segments corresponding integer variable 
offset segment maps bit corresponding variable suppose offset value ith bit array set 
offset value exceeds integer variable bits offset divided remainder mapped bit 
bit set stays 
evaluate similarity compare array bits offset sequence 
case arrays share large number bit wise marked similar 
evaluation method fast matching bit wise operation 
gives example similarity testing 
explained bloom filter fast approximate comparison errors collisions may occur 
method detect similar content words block 
disadvantage re bsc hash table offset matches 
offset sequence similarity threshold set duced average 
experimental results section show error ratio acceptable 
skip low df words hash table scanned detect template word necessary scan words 
templates occur web pages df document frequency template word exceed certain threshold skip words low df 
fact words low df contribute big proportion index due zip law 
statistics sites listed table shows approximate words df lower 
experiment datasets method aims search engines deal various types web sites sites choose experiment representative 
choose popular sites different categories including commercial sites www com homepage www sun com news site news com education sites www edu cn 
sites chinese web pages 
testing sites listed table 
query accuracy query accuracy important goal solve template problem search engines 
dataset www tsinghua edu cn query log site search engine years 
experiment top popular queries extracted log experiment queries 
ask people label relevant web pages top results manually 
kinds relevant pages pages user expects retrieve table web sites experiment web sites number web pages www sun com www com www cnn com www nba com news com www edu cn www tsinghua edu cn www edu cn number relevant results retrieved web pages 
average number relevant results corresponding method shingle template detection respectively 
pages expected informative attract user attention 
evaluation results shown 
see template detection removal notable effect improving retrieved results relevancy 
templates influence query accuracy divided categories query appears template block 
category lot web pages irrelevant main contents retrieved 
second category main contents retrieved pages contain query relevancy web pages decreased templates 
typical ranking function listed demonstrate 
okapi bm tf length df log tf tf df pivoted tfidf log tf log log df length tf functions common term length templates increase length web page denominators ranking functions decreases web page relevancy 
template detection accuracy section compare accuracy method table template detection accuracy web sites method shingle sst www sun com www com www cnn com www nba com news com www edu cn www tsinghua edu cn www edu cn different templates tsinghua shingle sst 
mentioned section sst deal small number web pages stores dom trees memory 
large sites sites listed table apply sst directly 
problem avoided sampling web pages site 
experiment apply sst large sites multiple samples 
randomly sample web pages site 
people asked identify templates web page recognized correctly 
score assigned page 
score computed follows score number right detect template blocks number total actual template blocks summarize result table 
table see sst accuracy poor www tsinghua edu cn www edu cn caused sampling 
sst pages sampled template detection 
works commercial sites sites templates templates similar 
sampling small amount web pages hurt accuracy results www com news com 
dealing web site having multiple templates accuracy relies sampling unstable 
table time consumption web sites method shingle sst www sun com www com www cnn com www nba com news com www edu cn www tsinghua edu cn www edu cn average time saving time shows different templates www tsinghua edu cn 
case especially web site pages random sampling guarantee accuracy small sampled set 
time consumption time consumption important concern target deployment large scale search engines 
order compare sst sample web pages site 
method involves parsing indexing involve parsing 
order fair run methods build index hash table 
result shown table 
shown table method saves compared shingle compared sst 
main reason word offset sequence compute similarity available index building process 
costs computation methods 
discussion results table table show limitations existed methods shingle sst applied large scale search engines 
shingle omits layout style information time searching similar content shingle values increases greatly increase web pages 
time computing shingle values overhead 
sst ineffective large scale sites unstable accuracy sampling low speed 
compared methods approach achieves stable high accuracy fast speed 
furthermore combination index building easy keep increase index volume 
extra operation method add pipeline stage index building process template detection increases indexing computation overhead compete indexer disk operation 
disk time consuming stage index building reduce execution time applying template detection indexer writes data disk 

propose combine template detection removal index building process large scale search engines 
capture common layout style employ web segmentation block style cluster 
capture similar content word offset sequences available extra computation effort index building process 
steps template detected deleted index 
experiment popular large web sites indicates method promising large scale search engines high accuracy fast speed 

ziv bar yossef sridhar rajagopalan 
template detection data mining applications 
proc 
www conf pages ling ma chowdhury 
extracting unstructured data template generated web document 
proc 
cikm conf pages hua lin jan ming ho 
discovering informative content blocks web documents 
proc 
sigkdd conf pages lan yi bing liu li 
eliminating noisy information web pages data mining 
proc 
sigkdd conf pages deng cai yu ji rong wen wei ying ma 
extracting content structure web pages visual representation 
proc 
conf number lncs pages ramaswamy arun ling liu fre douglis 
automatic detection fragments dynamically generated web pages 
proc 
www conf pages li tong heng hu bing liu 
micro information units internet search 
proc 
cikm conf pages deng cai yu ji rong wen wei ying ma 
block web search 
proc 
sigir conf pages deng cai ji rong wen wei ying ma 
block level link analysis 
proc 
sigir conf pages de castro reis paulo da silva alberto laender 
automatic web news extraction tree edit distance 
proc 
www conf pages arvind arasu hector garcia molina 
extracting structured data web pages 
proc 
sigmod conf pages recognizing nepotistic links web 
proc 
aaai conf pages nicholas kushmerick 
learning remove internet advertisements 
proc 
third annual conference autonomous agents bloom 
space time trade offs hash coding allowable errors 
commun 
acm jain mike dahlin tewari 
bloom filters refine web search results 
eighth workshop web database webdb 
