merkle damg ard revisited construct hash function jean dodis university luxembourg ens fr new york university dodis cs nyu edu card international org 
common way constructing hash function sha iterate compression function input message 
compression function usually designed scratch block cipher 
introduce new security notion hash functions stronger collision resistance 
notion arbitrary length hash function behave random oracle fixed length building block viewed random oracle ideal block cipher 
key property particular construction meets definition cryptosystem proven secure assuming random oracle remains secure plugs construction assuming underlying fixed length primitive ideal 
show current design principle hash functions sha md strengthened merkle damg ard transformation satisfy security notion 
provide constructions provably satisfy notion new constructions introduce minimal changes plain merkle damg ard construction easily implementable practice 
random oracle methodology 
random oracle model introduced bellare rogaway paradigm designing efficient protocols 
assumes parties including adversary access public truly random hash function model proven extremely useful designing simple efficient highly practical solutions problems 
theoretical perspective clear security proof random oracle model heuristic indication security system instantiated particular hash function sha md 
fact separation results illustrated various cryptographic systems secure random oracle model completely insecure concrete instantiation random oracle family supported nsf career award ccr tc 
ccr 
supported nsf darpa 
cns 
hash functions 
important separation results directly attack concrete widely cryptosystems pss pkcs standard rely secure hash functions 
hope particular systems fact secure instantiated hash function 
random oracle model making highly non standard possibly assumption system secure sha proves system secure ideal hash function standard assumptions 
formal proof random oracle model believed indicate structural flaws design system heuristically hope flaws suddenly appear particular designed function say lack structural flaws design 
building random oracles 
glance appears theoretically meaningful said question 
know mathematically concrete function random oracle prove need directly argue security system task usually unmanageable current tools realizable properties collision resistance pseudorandomness wayness usually prove security system 
argue significant gap reasoning 
systems abstractly model function proportional security parameter arbitrary input domain 
hand practice arbitrary length hash functions built heuristically constructing fixed length building block fixed length compression function block cipher iterating building block manner extend input domain arbitrarily 
example sha md hash function know constructed applying variant merkle damg ard construction underlying compression function see function generally fixed iv value yi yi mi return number bit message blocks fixed essentially appends extra block containing binary representation length message prepended string order multiple exact details matter discussion 
compression function constructed scratch block cipher davies meyer construction see ey example sha compression function designed specifically hashing block cipher derived illustrated 
main question 
particular structured design hash function design practice argue exists missing link claim structural flaws exist design system 
know flaws exist modeled monolithic random oracle iterated hash function built smaller building block 
real implementation iterated hash function structure random monolithic hash function structure invalidate security proof random oracle model 
put different perspective ad hoc hopefully secure design effort widely hash functions sha md placed design building block 
hand assumed ideal current proofs random oracle model guarantee security resulting system iterated hash function 
illustrate point known example 
common suggestion construct mac algorithm simply include secret key part input hash function take example mac 
easy see construction secure modeled random oracle adversary output mac forgery negligible probability 
mac scheme completely insecure merkle damg ard construction considered far including merkle damg ard strengthening current hash functions sha block cipher variants iterative hash functions considered matter ideal compression function block cipher 
mac extend message single arbitrary block deduce mac knowing secret key merkle damg ard strengthening forge mac setting actual block depends exact details strengthening 
known example illustrates construction mac iterated hash function requires specific analysis derived security mac monolithic hash function hand merkle damg ard transformation variants intensively studied realizable properties collision resistance pseudorandomness unforgeability randomness extraction clear analyses insufficient argue applicability purposes building hash function modeled random oracle considerably stronger security notion fact unrealizable standard model 
simple concrete example merkle damg ard strengthening easily seen preserve collision resistance instantiated collision resistant compression function just saw yield random oracle just variable length mac holds underlying compression function modeled random oracle 
goals 
summarizing discussion goal fold 
give formal definition means implement arbitrary length random oracle fixed length building block key property definition fact particular construction meets definition application proven secure assuming random oracle remain secure plug construction assuming underlying fixed length primitive ideal 
words safely implementation monolithic random oracle means definition just preserve pseudorandomness properties tricks random oracle model programmability 
example try set fixed length random oracle hash function viewed random oracle 
pseudorandom simple implementation clearly extractable example output unknown extract value observing random oracle queries way extracting show direct attack implementation section 
shows security definition need interesting non trivial task especially want simple natural easy 
second definition seek specific variant merkle damg ard transformation give secure constructions resemble done practice possible 
unfortunately argued current design principle hash functions sha md strengthened merkle damg ard transformation secure ambitious goal 
giving new practically constructions secondary goal come minimal easily implementable practice changes plain merkle damg ard construction satisfy security definition 
results 
give satisfactory definition means implement arbitrary length random oracle fixed length primitive ideal compression function ideal block cipher 
definition framework maurer 
framework enjoys desired closure property seek intuitive easy state 
having security definition provide provable constructions 
start giving modifications insecure plain merkle damg ard construction yield secure random oracle input compression function viewed random oracle fixed length input 
result viewed secure domain extender random oracle interesting result independent interest 
domain studied primitives collision resistant hash functions pseudorandom functions macs universal way hash functions 
works showed variants merkle damg ard yield secure domain corresponding primitive question results sufficient claim domain extender random oracle 
secure modifications plain merkle damg ard construction 
prefix free encoding show inputs plain md construction guaranteed prefix free plain md construction secure 
dropping output bits show dropping non trivial number output bits plain md chaining get secure random oracle input encoded prefix free manner 
construction see show applying independent hash function output plain md chaining construction get secure construction arbitrary length random oracle random oracle model 
hmac construction see show slightly modified variant construction allowing conveniently build function compression function going hmac 
variant implements secure hash function making black box calls plain merkle damg ard construction fixed iv compression function block input getting bit output block bit input obtained truncating padding depending getting final output 
practice hash function constructions block cipher explicitly implicitly sha 
consider question designing arbitrary length random oracle ideal block cipher specifically concentrating merkle damg ard construction davies meyer compression function ey practically relevant construction 
show fixes plain md chaining worked fixed length random oracle secure ideal cipher model plug ey 
specifically prefix free encoding drop non trivial number output bits possible apply independent random oracle output plain md chaining optimized hmac construction allows build function ideal cipher 
definitions section introduce main notations definitions 
security notion secure hash function notion systems introduced maurer 
extension classical notion indistinguishability oracles publicly available random oracles ideal ciphers 
notion ideas universal composition framework introduced canetti model pfitzmann waidner 
notion framework random systems providing interfaces systems equivalently notion framework interactive turing machines 
define ideal primitive algorithmic entity receives inputs parties deliver output immediately querying party 
ideal primitives consider random oracles ideal ciphers 
random oracle ideal primitive provides random output new query 
identical input queries answer 
ideal cipher ideal primitive models random block cipher key defines random permutation ek ideal primitive provides oracle access query primitive answers ek query primitive answers ek 
proceed definition definition 
turing machine oracle access ideal primitive said td ts ideal primitive exists simulator distinguisher holds pr pr simulator oracle access runs time ts 
distinguisher runs time td queries 
similarly said computationally negligible function security parameter polynomially bounded td ts 
illustrated role simulator simulate ideal primitive distinguisher tell interacting words output look consistent distinguisher obtain note simulator see distinguisher queries call directly needed simulation 
fig 

notion distinguisher interacts algorithm ideal primitive ideal primitive simulator algorithm oracle access simulator oracle access rest algorithm represent construction iterative hash function merkle damg ard construction recalled 
ideal primitive represent underlying primitive build hash function 
random oracle compression function modelled random oracle ideal block cipher compression function block cipher 
ideal primitive represent random oracle construction emulate 
obtains setting distinguisher oracle access block cipher hash function oracles implemented ways block cipher chosen random hash function constructed hash function chosen random block cipher implemented simulator oracle access cases indistinguishable distinguisher able tell block cipher chosen random iterated hash function constructed hash function chosen random block cipher tailored match hash function 
shown replace cryptosystem resulting cryptosystem secure model model 
example block cipher iterative hash function random oracle ideal cipher model iterative hash function replace random oracle cryptosystem resulting cryptosystem remains secure ideal cipher model original scheme secure random oracle model 
fig 

environment interacts cryptosystem attacker model left oracle access oracle access model oracle access definition specify means cryptosystem secure model model 
cryptosystem modelled interactive turing machine interface adversary public oracle 
cryptosystem run environment provides binary output runs adversary 
model cryptosystem oracle access attacker oracle access model oracle access definition illustrated 
definition 
cryptosystem said secure model algorithm model environment attacker model exists attacker model pr pr negligible function security parameter similarly cryptosystem said computationally secure polynomialtime theorem shows security preserved replacing ideal primitive theorem 
cryptosystem oracle access ideal primitive algorithm cryptosystem secure model algorithm model 
proof 
provide proof sketch see full proof 
cryptosystem modelled interactive turing machine 
environment attacker model 
model oracle access oracle access ideal primitive environment interacts illustrated left part 
fig 

construction attacker attacker simulator see replace negligible modification environment output distribution 
illustrated merging attacker simulator obtains attacker model difference output distribution negligible 
domain extension random oracles section show construct iterative hash function random oracle compression function viewed random oracle 
start simple intuitive constructions 
random oracle collision resistant way hash function hope emulate random oracle arbitrary length input modelled random oracle collision resistant way hash function modelled random oracle 
show random oracle construct distinguisher fool simulator 
fig 

simulator output receives recover 
illustrated distinguisher generates arbitrary computes 
queries random oracle queries checks outputs case 
easy see distinguisher output interacting outputs overwhelming probability interacting simulator distinguisher interacts simulator receives order output simulator recover query guess value done negligible probability 
plain merkle damg ard construction show plain merkle damg ard construction see fails emulate random oracle arbitrary length input compression function viewed random oracle fixed length input 
simplicity consider usual merkle damg ard variant discussion easily extends strengthened variant appends message length block function md generally fixed iv value yi yi mi return iv fig 

plain merkle damg ard construction mi mentioned counter example mac 
showed mac provides secure mac random oracle model completely insecure replaced previous merkle damg ard construction md message extension attack 
give direct refutation definition message extension attack 
consider block messages block messages 
messages md md 
build distinguisher fool simulator follows 
distinguisher md query receives md 
query random oracle distinguisher md query eventually checks md case outputs 
easy see distinguisher outputs interacting md distinguisher interacts simulate observe information see distinguisher queries 
simulator answer negligible probability 
prefix free merkle damg ard section show inputs plain md construction guaranteed prefix free plain md construction secure 
prefix free encoding enables eliminate message expansion attack described previously 
fix similar fix cbc mac insecure plain form 
plain md construction safely application random oracle length inputs fixed uses domain separation prepending differentiate inputs different domains 
applications specifically ensure prefix freeness satisfied 
prefix free code alphabet efficiently computable injective function prefix 
easy recover 
provide examples prefix free encodings 
consists prepending message size bits block 
block padded bit followed zeroes 
function message length bits 
write mi block padded bit binary encoding important drawback encoding message length known advance problem streaming applications large message processed fly 
second encoding suffer drawback requires waste bit block message function write mi block padded 
prefix free encoding consider construction iterative hash function pf md merkle damg ard hash function md defined previously 
function pf md md return theorem 
previous construction td ts random oracle random oracle model compression function td ts maximum length query distinguisher proof 
due lack space provide proof sketch particular encoding simpler proof proof prefix free encoding provided full version 
particular prefix free encoding consider consists adding message length part input index current block included part input viewed independent random oracle block mi 
specifically construct iterative hash function compression function follows function yi yi mi return mi 
string bit binary encoding message length bit encoding block index 
construction shown 
iv fig 

merkle damg ard particular prefix free encoding 
show cf random oracle random oracle model block length part input compression function cf behaves independently messages different length 
restrict messages fixed length suffices show construction cf message length random oracle consider function outputting intermediate value yj cf definition cf mj mj mj provide recursive proof construction random oracle 
result cf follow 
property clearly holds 
assuming holds show holds lemma lemma 
construction rh random oracle random oracle model 
replacing equation obtains random oracle see illustration 
proceed proof lemma due lack space provide proof sketch 
construct simulator interacting indistinguishable interacting random oracle 
simulator defined follows simulator query return random query check previously queried case query output 
return random output 
iv fig 

output blocks replaced random oracle lemma 
distinguisher interacts 
denote event collision occurs distinct queries denote event distinguisher query previously queried queried directly distinguisher 
claim conditioned complement simulation perfect see full complete justification 
distinguishing probability pr distinguisher making queries gives pr shows negligible distinguishing probability 
chop solution section show removing fraction output plain merkle damg ard construction md obtains construction random oracle 
fix similar method dodis overcome problem plain md chaining randomness extraction high entropy distributions suggestion increase resilience plain md chaining multi collision attacks 
practice design hash functions sha sha obtained dropping output bits sha sha 
show dropping non trivial number output bits plain md chaining gets secure random oracle input encoded prefix free manner 
example dropping prevents extension attacks saw mac application attacker guess value dropped bits extend output mac valid mac longer message 
formally compression function new construction chop md defined follows function chop md md return bits theorem 
chop md construction td ts random oracle td ts 
maximum length query distinguisher really simple drawback method exact security proportional number chopped bits number oracle queries 
achieve adequate security level value relatively high means short output hash functions sha md fixed method 
functions sha naturally fixed say setting 
hmac constructions construction basis popular hmac construction applies independent hash function output plain md chaining 
shown valuable design macs randomness extractors 
show modelled fixed length random oracle independent random oracle compression function gets secure construction arbitrary length random oracle plain md chaining applied prefix free encoding 
intuitively applying gives way hide output plain md chaining prevent extension attack described earlier 
formally function defined see function md return theorem 
construction td ts random oracle td ts min random oracle model maximum message length queried distinguisher 
practically instantiate suggestion implement single compression function 
problem analogous problem going hmac solution slightly different 
simple way achieving domain separation prepending calls calls modeling effectively prefix free encoding mapping appears slightly wasteful 
additionally forces go lower level implementation details compression function avoid 
solution consists applying black box calls plain merkle damg ard construction md iv input getting bit output bit defined follows see function hmac md md return intuitively construction iv obtained prepend fixed block message 
tweak done ensure interdependencies iv message block adversarial control prepended 
high entropy equal analysis easily extended optimization 
theorem 
construction hmac td ts random oracle td ts min random oracle model maximum message length queried distinguisher 
constructions ideal cipher practice hash function constructions block cipher explicitly implicitly sha 
consider question designing arbitrary length random oracle ideal block cipher specifically concentrating merkle damg ard construction davies meyer compression function ey see practically relevant construction 
notice question designing collision resistant hash function ideal block cipher explicitly considered preneel vandewalle formalized extended black rogaway shrimpton 
specifically authors considered block cipher variants merkle damg ard transform included davies meyer variant formally showed exactly variations including davies meyer variant collision resistant block cipher modeled ideal cipher 
model iv iv construction hmac construction fig 

hmac constructions ideal cipher security goal considerably stronger mere 
pointed variants withstand extension attack mac application merkle damg ard strengthening 
restricting fixed number blocks invalidates extension attack collision resistance completely insufficient purposes 
example authors show collision resistance plain md chaining fixed iv compression function ey 
hand easy see method provide secure random oracle definition 
fig 

davies meyer compression function different direction show davies meyer compression function ey secure random oracle ideal block cipher directly apply fixes discussed 
unfortunately case intuitively construction allows anybody compute case true random oracle 
need direct proof argue security davies meyer construction 
luckily direct proofs argue fixes plain md chaining worked fixed length random oracle secure ey 
prefix free encoding drop non trivial number output bits apply independent random oracle output plain md chaining 
respect fix show implement independent ideal cipher similarly case ideal compression function formally block cipher plain merkle damg ard hash function davies meyer compression function defined function md generally fixed iv value yi emi yi yi return mi 
block cipher iterative hash functions pf md chop md hmac defined section md md proof theorem full version 
theorem 
block cipher constructions pf md chop md hmac td ts random oracle ideal cipher model td ts pf md chop md min min hmac maximum message length queried distinguisher 
pointed attention cryptographic community gap assuming arbitrary length random oracle assuming fixed length ideal building block fixed length compression function block cipher 
provided formal definition suffices eliminate gap noticed current iterative hash functions sha md satisfy security notion showed practically motivated easily implementable provably secure fixes plain merkle damg ard transformation 
specifically ensure inputs appear prefix free form drop nontrivial number output bits output hash function long allow methods applicable apply independent fixed length hash function output illustrated conveniently implemented corresponding building block 
interesting open problem provide construction opposite direction construction securely realizes ideal block cipher random permutation random oracle 
luby rackoff construction pseudo random permutation pseudo random function major difference adversary oracle access inner functions 
show rounds required securely realize random permutation random oracle contrasted secret key case rounds necessary sufficient able find proof rounds sufficient 
acknowledgments deeply victor shoup invaluable contribution aspects 
anonymous referees useful comments 

bellare constructing macs fil macs message authentication weakened assumptions crypto pages 

mihir bellare alexandra adriana 
random oracle model scheme hybrid encryption problem 
proccedings eurocrypt 

bellare kilian rogaway 
security cipher block chaining 
crypto pages 
lncs 

bellare rogaway random oracles practical paradigm designing efficient protocols 
proceedings annual conference computer security acm 

bellare rogaway exact security digital signatures sign rsa rabin 
proceedings eurocrypt lncs vol 
springer verlag pp 


bellare rogaway optimal asymmetric encryption proceedings eurocrypt lncs vol 
springer verlag pp 


bellare rogaway collision resistant hashing making practical crypto lncs vol 


bellare canetti krawczyk pseudorandom functions re visited cascade construction concrete security proc 
th focs pages 
ieee 

black rogaway shrimpton black box analysis block cipher hash function constructions advances cryptology crypto california usa 

canetti universally composable security new paradigm cryptographic protocols proceedings nd symposium foundations computer science focs 
cryptology eprint archive report eprint iacr org 

canetti goldreich halevi random oracle methodology revisited stoc acm 

ran canetti oded goldreich shai halevi 
random oracle methodology applied length restricted signature schemes 
proceedings theory cryptology conference pp 


damg ard design principle hash functions crypto pages 
lncs 

dodis gennaro astad krawczyk rabin randomness extraction key derivation cbc cascade hmac modes advances cryptology crypto august 

dodis oliveira generic insecurity full domain hash advances cryptology crypto august 

fips secure hash standard federal information processing standards publication department commerce national technical information service springfield virginia april supersedes fips pub 

national institute standards technology nist 
secure hash standard 
fips 
august 

rfc md message digest algorithm internet request comments rivest april 

shafi goldwasser yael 
security fiat shamir paradigm 
proceedings th annual ieee symposium foundations computer science 

handschuh naccache preneel ed open workshop leuven belgium november 
luby rackoff construct pseudo random permutations pseudo random functions siam comput vol 
april 

stefan 
design principles iterated hash functions available print archive eprint iacr org 

maurer impossibility results reductions applications random oracle methodology theory cryptography tcc lecture notes computer science springer verlag vol 
pp 
feb 

maurer johan 
single key ail macs fil mac icalp july 

merkle way hash functions des advances cryptology proc 
crypto lncs brassard ed springer verlag pp 


jesper nielsen 
separating random oracle proofs complexity theoretic proofs non committing encryption case 
advances cryptology crypto proceedings 
pkcs rsa cryptography standard draft document available www rsa security com pkcs 

pfitzmann waidner model asynchronous reactive systems application secure message transmission 
ieee symposium security privacy pages 
ieee computer society press 

preneel vandewalle hash functions block ciphers synthetic approach advances cryptology crypto santa barbara california usa 

shoup composition theorem universal way hash functions eurocrypt pp 
lncs vol 


secure way hash function built des proceedings ieee symposium information security privacy pages 
ieee press 
