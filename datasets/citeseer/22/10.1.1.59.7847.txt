case approach reusing software measurement christiane von federal university santa production engineering florian brazil eps br 
improvement software quality productivity organizations need systematically build reuse software engineering know promoting organizational learning software development 
integrated support platform developed capturing storing retrieving software engineering knowledge 
technical support complicated specific characteristics software engineering domain lack explicit domain models practice diversity environments 
applying case reasoning propose approach representation relevant software engineering experiences goal oriented similarity retrieval tailorable organization specific characteristics continuous acquisition new experiences 
approach applied validated context goal question metric gqm approach innovative technology software measurement 
keywords 
reuse experience factory case reasoning software engineering software measurement gqm today business involves development software 
state practice software systems lack quality software projects schedule budget 
order successfully plan control improve software projects organizations need continuously evolve software engineering se know tailored specific characteristics needs 
experiences software projects systematically captured reused organization 
enables consolidation organization wide se competencies empower achieve considerable improvements benefits 
currently reuse se knowledge done ad hoc informal manner usually limited personal experiences 
systematic acquisition organization wide communication experiences corporate memories built see 
software domain experience factory ef approach proposes organizational infrastructure analysis synthesis kinds software life cycle experiences products 
acts repository supplies experiences various software projects 
operationalization ef practice need clever assistant supplies right experiences experience base eb user demand 
order comprehensively support software development process various types ew including expertise lessons learned apply design inspections quality models distribution rework effort fault type deliverables software measurement plans requirement documents related processes design inspection measurement different environments retrieved addressing various purposes facilitation planning execution software projects prevention past failures anticipating problems guidance solution occurring problems 
software project different find artifact fulfilling needs actual project completely 
experiences retrieved projects similar characteristics assuming similar situations problems require similar solutions 
se domain example assume measurement programs similar goals similar quality models similar problems occurring design inspections corresponding solutions 
due lack general se models practice organizational software know evolve incremental manner learning new software project 
ef support continuous learning capturing integrating new experiences software projects planned executed 
context case reasoning cbr plays key role provides broad support similarity retrieval kinds ew continuous incremental learning :10.1.1.33.3022
operationalization ef trivial relevant se knowledge identified modeled represented eb 
methods goal oriented retrieval providing support different processes objectives environments se domain continuous acquisition integration new experiences developed 
propose case approach integrated support platform enabling organizational learning se experiences tailorable organization specific characteristics 
approach experiences reusing gqm measurement know context industrial transfer research projects 
reuse gqm measurement plans project team knowledge engineer planning se software project software project execution project plan control experience base feedback lessons learned deliverables experience factory fig 

experience factory organization section give short overview software measurement application domain approach provide scenarios illustrating reuse measurement ew 
software measurement essential infrastructure technology planning control improvement software projects 
organizations collect quantitative qualitative data concerning software products processes build em justified body knowledge 
specific technology goal oriented measurement goal question metric approach gqm supports definition implementation software improvement goals 
precisely specified measurement goal relevant measures derived top fashion set questions models 
refinement documented gqm plan providing rationale selection underlying measures 
data collected wrt 
measures interpreted bottom fashion context models question goals considering limitations assumptions underlying measure 
establishment measurement programs practice requires significant planning effort substantially facilitated reusing measurement ew illustrated scenario 
measurement program abs gqm goal analyze software development process order improve reliability viewpoint software developer abs gqm questions 
total number defects detected delivery 

distribution defects 

type inspections impact effectiveness 

experience developers impact number faults introduced system 
quality models effectiveness inspections context automobile domain assumptions defect density comparable documents 
computation effectiveness number defects detected inspection size document training duration attributes number defects detected inspections size document duration training fig 

excerpt simplified example gqm plan suppose produces embedded software automobiles main departments fi develops software fuel injection devices abs develops software abs brake control devices 
produces embedded software important goals produce zero defect software 
department fi established successfully quality improvement program measurement years ago 
department abs wants start measurement improvement 
contexts departments similar improvement goal experiences available department fi reused abs order reduce planning effort improve quality measurement program 
measurement goal analyze software development process order improve reliability viewpoint software developer abs relevant quality aspects influence factors acquired interviews developers department abs 
represented set questions gqm plan shown 
order operationalize questions gqm plan quality models developed 
assume example question 
type inspection impact effec inspections evaluated similar measurement program department fi 
respective model reused assessing applicability underlying assumptions 
necessary model adapted specific characteristics abs 
example assuming inspector capabilities vary extensively departments effectiveness inspections expected depend size inspected document stated reused model training inspectors new factor included model 
defining model question turned operational refinement question impossible due missing information concerning defect classification 
solution problem guided experiences describing similar problem successfully solved department fi see suggesting follow interviews order acquire required information completely 
addition reusing organizational glossaries support consistent usage terms defect reusing taxonomies representing generalization relations help refinement concepts distribution defects 
phases measurement planning process supported accordingly reuse measurement ew 
representation gqm order facilitate improve planning gqm measurement programs reuse ew experience base developed modeling representing relevant measurement ew 
gqm cases context department fi problem question gqm plan refined operational quality model due missing information 
cause interviews necessary knowledge problem acquired completely project personnel 
solution follow interview performed person mentioned respective quality aspects interviews order clarify formulation gqm question 
outcome required knowledge acquired completely respective quality model defined 
fig 

example problem experience today wrt 
se technologies formal knowledge exists principal source individual project experiences 
se ew primarily captured form cases gqm experience base gqm eb representing context specific experiences gained particular software project specific organization 
order provide comprehensive support different types ew cases modeled flexible object oriented frame representation formalism stored gqm eb gqm product case gqm pec 
cases include gqm products developed planning gqm measurement program 
gqm reused similar software projects basis development respec consider specific instantiation experience base focusing ew planning gqm measurement programs 
tive products resulting reduction planning effort improved quality gqm products 
gqm problem solution case gqm 
gqm explicitly capture problem solution strategies adopted past measurement programs see 
reusing gqm warn potential failures advance guide solution fitting application context 
due specific nature experiential knowledge gqm represented cases describing specific problem cause solution applied outcome achieved 
cases represented set relevant attributes interdependencies domain models see section 
enable retrieval ew cases similar software projects environment case obtained characterized 
done minimal set characteristics business sector improvement goals development process allows identify similar cases discriminate different ones 
order assess reuse potential case cases enhanced basic information viewpoint representativeness 
information past reuses case preconditions reuse required adaptations cost frequency reuse explicitly captured order facilitate reuse experiences adaptation specific project characteristics 
general domain knowledge order model relevant ew facilitate consistent representation acquisition new experiences software projects general domain knowledge gqm ew represented gqm eb 
gqm ew models 
entities related gqm ew explicitly modeled hierarchy classes see 
class structured set attributes represent object gqm product context characterization organization characterization project characterization measurement characterization data collection event software object problem problem cause solution outcome measurement ew gqm product ew case inspection ew gqm problem solution ew case 
gqm goal gqm plan gqm question gqm model gqm measure abstraction sheet quality item item variation item measurement plan data collection procedure data collection instrument questionnaire question periodic event process event artifact event fig 

gqm ew classes relation questionnaire measurement tool interview ing basic values relationships entities 
attributes defined identifier description cardinality type kind relationship default value explicitly stating attribute specified mandatory new instance class acquired 
class gqm measure description defines data collected attributes identifier description cardinality type kind default mandatory id identifies gqm measure identifier assumptions applicability measure text description describes data collected text scale defines scale measure scale unit declares unit measure unit range declares range values measures text model corresponding model defined gqm model gqm measure defines data collected 
includes explicit definition assumptions concerning application measure 
regarding expected values scale unit case numerical values range defined gqm measures derived models determine attributes measured represented defined relation 
gqm measure collection procedure defining data collected defined 
type definitions 
type definitions model qualities se entities developer experience categorize concepts programming languages unordered symbol possible values delphi 
type definitions type class attributes 
facilitate situation assessment support manual adaptation retrieved ew cases explicitly indicating alternatives consistent acquisition experiences projects 
type related supertype range local similarity measure specified 
example experience level developers classified ordered symbols low medium high standard local similarity measure ordered symbols 
symbol types meaning value explicitly defined range definitions high experience may defined worked years application domain 
addition numerical types unit explicitly stated person hours 
glossaries 
glossaries define terminology basic concepts related software measurement 
example failure inability software perform required function wrt 
specifications 
glossary supports adequate terms consistency organization ensures reuse gqm products sound assumptions 
taxonomies 
taxonomies represent ordered arrangements entities presumed relationships organization hierarchy 
guide appropriate refinement objects interest situation assessment acquisition new experiences 
knowledge levels fig 

simplified example class gqm measure software products processes resources characteristics terminology vary different organizations 
domain model tailored specific environment 
generally identify different levels knowledge valid different scopes domains software measurement domain 
general knowledge gqm measurement represented organizations 
level includes gqm ew models general valid types range definitions measurement scale general valid terms glossary software process 
organization domain 
organization specific knowledge related software measurement represented 
gqm technology modified particular organization respective knowledge upper level adapted accordingly 
type range definitions enhanced organization specific definitions 
example organization classify experience developers categories expert participated system development medium participated training organization classify experience high working years medium worked low worked application domain 
glossary taxonomies completed organization specific terms 
project domain 
level instantiations gqm ew cases represented gathered particular software projects 
example gqm pec including gqm plan measurement program project hyper department abs 
experience support gqm planning determination retrieval goals planning gqm measurement programs gqm eb find useful ew guide support improve various se tasks specific environment 
order provide comprehensive support se tasks various types experiences retrieved different viewpoints different environments addressing various purposes support software projects reusing similar products developed past prevention failures anticipating problems guidance solution problems reusing solution strategies adopted past similar problems identification patterns experiences maintenance evolution eb 
goal oriented retrieval method developed retrieves set relevant experiences wrt 
specific reuse goal 
reuse scenarios retrieval goals determined explicitly specifying dimensions retrieve object purpose concerning process viewpoint context environment example retrieve lessons learned guide problem solution concerning software measurement viewpoint quality assurance personnel 
retrieval goals reusability factors determined 
includes specification relevant indexes importance parametrization similarity measure 
example retrieval solution strategy relevant indexes index denote attributes case predict usefulness case concerning situation description retrieval determination similarity value 
problem description task problem occurred potential problems wrt 
specific task identified task 
retrieval process considering different retrieval goals goal oriented method similarity retrieval defined including steps step 
situation assessment 
current situation described user specifying retrieval goal set indexes related specific retrieval goal predefined indexing scheme 
importance index wrt 
specific retrieval goal stated relevance factor assigned index 
relevance factors stored eb manually adapted user 
facilitate assignment relevance factors classified essential important important irrelevant 
indexes marked essential perfectly matched ones situation assessment ones marked important important partially matched ones marked irrelevant considered 
unknown indexes explicitly marked 
table illustrates situation assessment exemplary set indexes 
situation assessment supported general domain knowledge glossaries consistent usage terminology projects taxonomies guide direct appropriate definition indexes 
type range definitions facilitate identification values guarantee consistent description projects 
reuse goal gqm experience base excerpt object purpose lesson learned guide problem solution case case case process sw measurement viewpoint quality assurance personnel environment indexes department irrelevant abs fuel injection fuel injection fuel injection staff size important application domain essential automobile automobile automobile automobile improvement goal important improvement sw improvement sw improvement sw cost reduction sw system reliability system reliability system reliability development programming language irrelevant ada fortran ada dev 
experience important high medium low low sw system size important unknown kloc kloc kloc measurement maturity important initial task essential measurement goal definition measurement goal definition development measurement plan measurement goal definition table 
simplified retrieval example step 
exact matching indexes marked essential 
step cases eb perfectly matched situation assessment wrt 
indexes marked essential determining set potential reuse candidates 
table shows simplified example comparing cases eb situation assessment case considered potential reuse candidates values indexes marked essential application domain task equal ones 
describes experience regarding develop ment measurement plan considered value index task different interest 
step 
partial matching similar cases 
potential reuse candidates similarity value computed partially matching indexes ones marked essential specific similarity measure wrt 
retrieval goal see section 
cases higher similarity value threshold considered sufficiently similar proposed user reuse candidates ranked similarity values 
continuing example shown table case considered similar situation values indexes marked important important similar current ones especially regarding staff size improvement goal 
step 
selection reuse candidate 
proposed reuse candidates user select appropriate case necessary manually adapt fit current needs 
informed decisions supported experiences explicitly captured eb reuses particular case past see section 
system fails propose reuse candidates general domain knowledge gqm product models available support se tasks 
similarity measure retrieval identification similar ew cases concerning various retrieval goals see step section define generic similarity measure sim sit ek parameterized specific goal 
account specific characteristics se domain lack explicit domain models practice diversity environments incompleteness data consideration similarity experiences similarity measure assumptions see details depending retrieval goal particular set indexes defined situation assessment matching 
set indexes represented list features cg cg cg 
wrt 
particular retrieval goal range value ci feature cgi defined respective range definition wi see 
example index set type range relevance vector situation sit gi case fs staff size interval numbers important improvement goal string important improvement system reliability improvement system reliability measurement maturity ordered symbol important initial low routine initial unknown sw system size number important unknown kloc fig 

example situation assessed set indexes wrt 
retrieval goal represented list feature value pairs sit cgi si sit relevance factor si essential including features cgi cg values si wi 
eb ew case ek represents experience feature value pairs experience ek ek ek ek ek 
features eki values eki wi ek ek eki cg respective values eki describing know gathered software project context originates relationships see 
addition threshold stated case determines case sufficiently similar situation assessment proposed reuse candidate 
se domain cases may low similarity value due identical values quite similar programming languages 
local similarity measures introduced 
generic local similarity measures si eki basic value types defined 
local similarity thresholds introduced index cgi determining values considered sufficiently similar 
relevance factors defined reflect importance feature concerning similarity cases wrt 
specific retrieval goal see 
retrieval goal specific index set cg 
index cgi index set cg relevance factor gi defined dependence specific retrieval goal retrieval goal relevance factors represented relevance vector rg 
gi normalized eb 
order explicitly deal incomplete knowledge similarity objects expressed linear contrast weighted differences common different features 
feature sets fs distinguished set corresponding features situation stored case cg cgi sit eki si eki 
example situation assessment stored case state feature experience developer high 
set contradicting features situation stored case cg cgi sit eki si eki 
example past effort reporting tools available situation feature effort reporting tools stated available 
set unknown features actual situation description cg cgi eki sit 
example initiating software project certain information software system size may stated unknown situation description 
set redundant features contained stored case cg cgi sit eki 
example feature developer experience may considered initially important identification relevant cases 
set specific weight defined 
global similarity measure defined sim sit si ik ki si ik ki si ik ki si ik ki si ik ki similarity value calculated case considered reuse candidate features marked essential situation exactly match respective features values represent atomic values relations entities 
case sim sit ek global similarity threshold case continuous acquisition integration incremental evolution feedback industrial applications essential continuously building improving se know 
consequently knowledge gqm eb enhanced updated time new measurement program run organization 
means continuously capture new experiences quality assurance personnel 
order keep effort related knowledge acquisition minimal process intertwined retrieval reuse process see information provided user input retrieval process context characterization reused gqm eb parallel creation new ew cases 
example reusing ew order support solution problem encountered see section concerning definition quality model user provides situation assessment organization application domain automobile problem question gqm plan refined model 
information retrieval process parallel description new case documenting experiences regarding situation 
information contained similar case retrieved reused order capturing situation description new case capturing reused case new case review new case new case situation description retrieval similar cases reuse candidates revise reuse reuse candidate fig 

integration acquisition process solve current problem supplement new case description see 
generated new case reviewed user storage eb 
additional information basic information added necessary deviations reused case adjusted solution different stated reused case applied 
acquisition new experiences guided gqm ew models explicitly address relevant dimensions captured 
glossaries taxonomies facilitate consistent description experiences software projects 
new acquired experiences integrated existing eb available reuse 
implies ew cases stored domain models enhanced necessary generic patterns cases created modified 
project specific cases gqm gqm acquired parallel retrieval process stored instances gqm ew cases gqm eb 
protocols retrieval reuse process comparisons reused new case reuse information added reused case 
example date reuse added frequency reuse increased attributes adapted fit new situation explicitly listed 
addition project specific cases evaluated wrt 
similarity cases gqm eb 
new case differs small details case reused case subsuming project specific cases created case generalization 
development generic patterns knowledge engineer guided taxonomies provide basis derivation abstractions 
evaluation new terms defined specific gqm ew case knowledge engineer organizational glossary taxonomies enhanced 
continuous evolution customizing ef specific environment may require modification representation ew cases indexing scheme similarity measure input retrieval process reused case basis description new case context organization application domain automobile measurement maturity low problem question gqm plan refined operational quality model 
cause interviews necessary knowl fig 

simplified example acquisition user feedback application 
due fact indexes depend specific environment may change time continuous tailoring indexing scheme needs supported life cycle gqm eb knowledge engineer 
example supplemental context characteristics software projects may relevant discrimination cases 
shown attribute measurement maturity considered relevant characteristic context description case past experiences related projects variations concerning maturity 
new measurement program established project different level maturity attribute relevant distinction cases added context characterization 
continuous learning take place wrt 
similarity measure parametrization specific retrieval goals order improve optimize performance 
retrieval reuse process supervised feedback appropriately tailored specific environment knowledge engineer 
protocols documenting user re actions user provided critics suggestions serve basis maintenance knowledge engineer see table 
feedback implication update index manually added addition index indexing scheme retrieval relevance factor modification weight assigned index manually modified index frequently marked irrelevant removed index scheme increasing number changing optimistic strategy similarity measure pessimistic retrieved reuse candidates increase table 
examples retrieval feedback implications added review problem edge acquired completely project personnel 
solution follow interview performed person mentioned respective update quality aspects interviews order clarify formulation gqm reused question organizational taxonomies case software entities consulted 
outcome required knowledge acquired com review pletely respective quality model defined 
frequent rejection specific case affected increase global case cases suggested different cases affected review indexing scheme similarity reuse candidates measure consideration additional critics suggestions user careful analysis causes selection indexes similarity measure adapted accordingly order improve retrieval results 
discussion software domain various approaches exist reuse primarily focusing software code library information science knowledge systems database management technologies 
majority approaches fails recognize complexity se experience general requires thorough classification domain provide means similarity retrieval 
cbr recognized promising approach operationalization learning organizations se domain 
applications developed different se areas capturing formalizing best practices effort prediction change management requirements acquisition 
far exist approach reusing software measurement ew 
approaches offer flexible similarity retrieval methods example context concept similarity environment retrieval dynamic ranking importance ratings indexes partitioning case base prototypes 
multiple retrieval goals supported case base sufficient 
creation distinct case bases test selection diagnosis patdex seen analogy different retrieval goals inefficient due administration maintenance reasons 
contrast approach concept goal oriented retrieval flexible tailorable retrieval method similarity measure advanced similarity model patdex explicitly deals unknown information filter attributes local similarity measures 
integrating experiential knowledge form cases general domain knowledge cbr systems approach explicitly models different levels knowledge focusing different scopes 
concerning tailoring continuous evolution ef organization specific characteristics systems offer mechanisms systematic integrated acquisition user feedback learning possibilities regarding similarity measure tailoring relevance factors see overview represent basis continuous evolution approach 
table 
examples retrieval feedback implications successful planning improvement software measurement ew captured corporate memories reused organization 
application gqm approach practice develop case approach operationalization organizational learning software measurement focusing technical aspects 
relevant measurement ew modeled goal oriented method similarity retrieval tailorable specific environments developed acquisition process intertwined retrieval reuse process described 
currently implementing approach 
empirical research carried experiments industrial transfer projects assess strengths weaknesses approach 

althoff case reasoning decision support diagnostic problem solving approach 
proc 
rd german workshop case reasoning germany 
althoff case reasoning technology build learning software organizations 
proc 
workshop building maintaining organizational memories th european conference ai 
althoff cbr experimental software engineering 
lenz 
eds case reasoning technology foundations applications lnai springer verlag 
althoff evaluating case reasoning systems case study 
postdoctoral thesis university kaiserslautern germany 
aamodt plaza case reasoning foundational issues methodological variations system approaches 
ai communications 
althoff wess case knowledge acquisition learning problem solving diagnostic real world tasks 
proc 
th european knowledge acquisition knowledge systems workshop scotland uk 
hybrid indexing retrieval strategy advisory cbr systems built remind 
proc 
nd european workshop case reasoning 
basili rombach experience factory 
ed encyclopedia software engineering john wiley sons 
basili rombach goal question metric paradigm 
ed encyclopedia software engineering john wiley sons barr corporate knowledge management millennium 
smith faltings eds advances case reasoning springer verlag consortium 
customized establishment measurement programs 
final report project nr frakes representing reusable software 
information software technology wittig desharnais estimating software development effort case reasoning 
proc 
nd int 
conf 
case reasoning ri von althoff intelligent retrieval software engineering 
proc 
th int 
conf 
software engineering knowledge engineering germany von case approach reuse software measurement 
technical report graduate program production engineering federal university santa brazil briand requirements knowledge support software engineering measurement plans 
journal knowledge systems gibbs software chronic crisis 
scientific american von knowledge management experimental software engineering create renew build organize knowledge assets 
proc 
th int 
conf 
software engineering knowledge engineering san francisco california von von case reuse software engineering measurement plans 
proc 
th int 
conf 
software engineering knowledge engineering san francisco california henninger capturing formalizing best practices software development organization 
proc 
th int 
conf 
software engineering knowledge engineering spain kolodner case reasoning 
morgan kaufmann san francisco california kitano experience sharing architecture 
leake ed case reasoning experiences lessons learned directions lam managing change software development incremental knowledge approach 
proc 
th int 
conf 
software engineering knowledge engineering san francisco california common case representation language 
technical report deliverable esprit project maiden sutcliffe exploiting reusable specifications analogy 
communications acm kempter software durch und sowie des software know 
proc 
bmbf seminar software technology germany althoff case reasoning reusing software knowledge 
proc 
nd int 
conference case reasoning springer verlag von representation formalism software engineering ontologies 
proc 
th german conf 
knowledge systems germany 
von representation formalism software engineering ontologies 
technical report fraunhofer institute experimental software engineering kaiserslautern germany 

tversky features similarity 
psychological review 
wess sen systemen zur und 
ph thesis university kaiserslautern germany infix verlag 
software reuse current status trends 
journal systems software 
