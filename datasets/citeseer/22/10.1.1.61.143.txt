tracks duplicates xml melanie weis informatik hu berlin de duplicate detection problem detecting different entries data source representing real world entity 
research abounds realm duplicate detection relational data little duplicates complex data models xml 
generalized framework duplicate detection dividing problem components candidate definition defining objects compared duplicate definition defining duplicate candidates fact duplicates duplicate detection specifying efficiently find duplicates 
framework propose xml duplicate detection method compares xml elements direct data values similarity parents children structure propose heuristics determine choose similarity measure specifically geared xml data model 
evaluation algorithm heuristics validates approach 

xml duplicate detection duplicate detection problem determining different representations entities data source represent real world entity 
prominent application area duplicate detection customer relationship management crm multiple entries customer result multiple person incorrect aggregation sales certain customer application areas include bioinformatics catalog integration general domain independently collected data integrated 
problem addressed extensively relational data stored tables 
today data represented non relational form 
particular xml increasingly popular especially data published web data exchanged organizations 
conventional methods trivially adapt permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigmod june baltimore maryland usa 
copyright acm 
humboldt universit zu berlin unter den linden berlin germany felix naumann naumann informatik hu berlin de need methods detect duplicate objects nested xml data 
xml data semi structured organized hierarchically 
complicates object identification task compared relational data flat usually 
face problems object definition structural diversity 
object definition refers problem defining data values describe object values consider comparing objects 
methods relational duplicate detection assume tuple represents object attribute values describe object 
sufficiently similar data values tuples imply duplicates 
case xml clear child element represents part description element relational attribute represents related object relationship table 
instance xml element artist elements aid name cd elements direct children cd nests title 
nested xml elements clear distinguish actual objects artists cds elements merely describing objects 
means explicitly specify xml elements objects xml elements describe objects heuristics find automatically 
structural diversity second problem addresses fact tuples xml elements describing kind object necessarily equally structured 
structural differences due different representations objects persons may represented managers employees differences allowed schema multiplicities elements persons having multiple phone numbers 
different structures due reason may reconciled schema matching techniques second reason nature semi structured data defeats conventional duplicate detection approaches relations 
contributions 
duplicate detection framework general duplicate detection framework necessary information algorithm provided independently data model relational xml 
allows individual definitions specify objects compare respective descriptions duplicates 
definitions provided offline processed duplicate detection algorithm runtime 

algorithm introduce algorithm duplicate objects get matched xml 
specializes framework successfully overcomes problems object definition structural diversity inherent xml 

domain independence enable providing heuristics choose object description providing domain independent similarity measure xml data 
remainder organized follows section generalized framework object identification 
section introduces algorithm xml duplicate detection implemented framework 
domain independent heuristics relevant algorithm section followed domainindependent similarity measure section 
experimentally evaluate effectiveness algorithm section various real world synthetic data sets 
section describes related ends outlook research section 
framework section define general framework duplicate detection 
form abstraction particular data model distinguish objects elements 
objects real world elements certain data model 
different elements different kinds elements represent real world object 
perform duplicate detection elements describing type real world object 
speak general problem object identification 
framework flexible cover wide range existing algorithms new methods easily included 
framework represented fig 

object identification framework briefly speaking framework consists main components 

candidate definition defines objects data source compared 

duplicate definition defines duplicate candidates duplicates 

duplicate detection defines search duplicates duplicate candidates 
components specify knowledge definitions tools experts provide offline system setup 
serve input online duplicate detection works actual data 
duplicate candidates component specify elements described schema compared 
actual duplicate detection duplicate candidate selection translated executable query query formulation 
query executed produces sets objects called duplicate candidates 
objects set potential duplicates need compared 
object identified certain amount information typed data values 
description necessarily information object data source attributes relation necessarily constrained information provided data source external knowledge may available 
description associate information objects 
association instantiated form called object descriptions ods duplicate detection formulating executing necessary query transforming result od representation 
duplicate detection takes form classification pairs ods defined duplicate classification 
pair duplicate candidates classified duplicates non duplicates 
runtime comparison reduction reduces number pairwise element comparisons efficiency reasons 
pairs duplicates detected pairwise comparisons resulting set duplicate pairs processed obtain set duplicate clusters objects cluster considered duplicates 
presents components detail 
candidate definition goal candidate definition define objects relevant object identification need compared 
observations 
data source may store information various types realworld objects need considered duplicate detection 
ii elements relevant object identification may represent type real world object just represented differently 
compared 
iii hand sense compare objects different real world type duplicates 
observations yield definition formally describes duplicate candidates set objects real world type extracted entire data set selection projection operations 
schema containing schema elements 
sn 
real world type describing real world objects 
scenarios real world type represented different schema elements 
instance realworld type motion picture represented schema elements movie film 
assume mapping associates element types real world types 
definition duplicate candidates 
sk set schema elements describing type real world object oi set instances schema element si 
define duplicate candidates type ot example consider relational schema including relations movie film actor 
movie film possibly obtained integrating data sources different representations type real world objects 
relation may contain duplicates may duplicates tuples movie film compared 
arbitrarily label combined real world type motion pic 
actor tuples need compared movie film tuples contain duplicates 
decisions result actor actor motion pic movie film 
candidate instance actor set tuples actor relation motion pic includes tuples movie relation tuples film relation 
note candidates different structure represent objects real world type 
candidate selection includes specification set schema elements 
set duplicate candidates generated duplicate detection discussed section 
duplicate definition goal identifying duplicate objects essential define characterizes duplicates 
characterize duplicate definition component description ii classifier pairs objects similarity measure 
definition descriptions 
case information object useable useful object identification 
instance cd object effectively described information artist track list publisher textual review cd usually useful indicator 
principle choose data item part description object 
definition description 
candidate duplicate oi define description idi set data instances data source 
set specified selections projections relation oi 
practice object description comprises sibling child parent data attribute values tuple children xml element 
represent object description special data structure called object description od 
definition object description 
object description od relation schema od value name 
attribute value describes instance information name identifies type information name 
tuples od referred od tuples 
believe od schema wide range object identification algorithms 
framework supports easy replacement od schema 
example consider xml schema describing tree structure fig 

corresponding xml document contains movies data represented tab 

assume description movie object title year actors name 
corresponding od instances shown tab 

sample xml schema id title year actor name actor role matrix reeves neo morpheus matrix reeves signs mel gibson graham hess table sample xml data id od matrix title year reeves actor name actor name matrix title year reeves actor name signs title year mel gibson actor name table examples object descriptions duplicate classification 
ods objects duplicate classification classifies pair candidates oi oj oi oj class ci cn classifier oi oj 
framework class class dedicated pairs non duplicates 
practice duplicate detection problem uses classes oi oj duplicates translating oi oj duplicates possibly contains pairs oi oj may duplicates 
typical examples classification methods thresholded similarity measures objects rule decisions 
framework provides means add new classifiers framework 
classifier classes corresponding classification methods added 
example assume classifier classifies pairs candidates oi oj oi oj considered duplicates 
classifier considers candidates duplicates half od tuples odi match od tuples vice versa 
classifier movie movie 
considered duplicates od tuples year reeves actor occuring movies represent half od tuples movie od tuples movie 
hand movie duplicate share od movie movie 
duplicate detection duplicate detection component specifies algorithm performs object identification information provided offline candidate definition duplicate definition components 
prepare xml data duplicate detection undergoes transformations expressed queries extracts relevant candidates second selects candidate relevant data third flattens structure od representation 
remaining steps perform actual detection duplicates od representation 
different steps algorithm performs subject section 
step candidate query formulation execution 
step duplicate detection obtain duplicate candidates specified candidate definition component 
query formulation generates candidate query qc selects instances schema element si result candidate query execution set duplicate candidates data structure representing instance suited data structure 
step description query formulation execution 
description object oi expressed query qd query language appropriate data model hand 
current state framework automatically derives description specification support query languages development 
execution schema query result subset projection schema elements selected description definition original schema needs transformed od schema value attribute pairs 
goal od generation 
step od generation 
od relation obtained mapping result description query formulation od schema od value name 
result od generation set od 
odi od set od tuples describes object oi steps include formulation executions queries 
queries candidate query qc description query qd query mapping od generation 
clearly independent practice queries may combined increase efficiency 
step comparison reduction 
od instance generated necessary information duplicate candidates available start comparisons object pairs 
large data sets number pairwise comparisons computationally prohibitive efficient algorithm include method reduce number comparisons 
consequently comparison reduction provides pruning method efficiently prune pairs 
definition pruning method 
oi oj pruning method pairs candidates oi oj 
oi oj classifier classes signify pair oi oj pruned pair oi oj pruned respectively 
possible methods reducing number pairwise comparisons filtering clustering 
filter reduces set candidate duplicates pruning pairs candidates provably duplicates case clustering candidates duplicates grouped candidates group compared 
pairs consisting candidates different clusters pruned 
step comparisons 
step actual object identification performed pairwise comparisons 
pairs ods compared classified duplicate classifier 
general result comparison step set object pairs oi oj oi odi oj class ck 
practice pairs instantiated classes input processing 
example classes duplicates possible duplicates non duplicates instantiated 
required data cleaning subject revision domain expert 
step duplicate clustering 
relationship transitive 
instance duplicate duplicate transitivity duplicate 
class ck represents pairs duplicates pairs combined duplicate clusters transitivity 
object identification performed duplicate detection algorithm duplicate representations real world entity detected object identification complete 
resulting identified data may input applications data fusion methods etl tools 
specialize framework detecting duplicates xml data 

pointed section object identification xml data bears additional challenges compared object identification relational data 
main problems definition objects description clear ii structural heterogeneity xml elements representing real world type 
section specialize concepts framework algorithm object identification xml 
algorithm takes xml document xml schema file describing mapping element real world type input 
type mapping format name real world type set schema elements 
rendered domain independent description selection specialized heuristics section 
domain independent duplicate classification domain independent similarity measure section 
remaining part framework relies expert input candidate selection 
framework fed objects identify 
intend explore methods determine candidates automatically searching primary element types finding related types schema matching 
start describing detail introductory example shows basic idea 
example input algorithm xml document containing movies tab 

conforms schema depicted fig 

mapping schema elements real world types shown tab 

note example real world type represented exactly element course 
users interested detecting duplicates movie objects simply choose movie list real world types candidate selection mov doc movie 
remaining steps requires choice heuristic description selection specification similarity thresholds duplicate classifier 
parameters need set manually current implementation explore self configuring 
real world type element movie doc movie title doc movie title year doc movie year actor doc movie actor doc movie actor name doc movie actor role table mapping duplicate detection performed outputs xml document shown fig 
description selection similarity measure examples provided section 
cluster duplicate objects element generated identified unique object identifier oid 
duplicate elements cluster identified 
description selection xml duplicate definition definition candidate duplicates selection real world types mapping defines description selection duplicate classification specializing framework duplicate definition component domain independent way 
description selection 
uses domainindependent heuristics define description query qd 
heuristics exploit xml schema tree structure data types element cardinalities show section 
generally defined follows 
definition heuristic descr 
selection 
xml schema heuristic determines selection description element si selection set relative si 
instance scenario fig 
heuristic returning title year description movie results title year 
duplicate classification 
pairs candidates classified classes denoting duplicates respectively 
employs classifier thresholded approach domain independent similarity measure described section 
definition xml duplicate classifier 
sim oi oj similarity measure xml objects oi oj cand threshold value 
classify pair objects oi oj non duplicates duplicates classifier oi oj sim oi oj cand query formulation xml query formulation component takes input set returns xquery result description candidate duplicate xml 
currently developing graphical tool automatically composes consisting selections projections specified users graphical tree representation xml schema selecting specific tree elements 
automating projection schema elements heuristics readily tool query composition algorithm query formulation component 
duplicate detection candidate duplicate specification duplicate definition phases perform candidate query formulation execution step hand objects compared 
definitions provided offline prerequisites duplicate detection phase actual comparisons performed considered online phase 
paragraphs follow remaining steps duplicate detection component framework 
steps description query execution od generation 
xml object identification approach starts online duplicate detection description query execution 
result xquery description candidate 
od generation transforms description od representation xml element description od tuple form text xpath generated 
text denotes string representation text node xml element xpath string representation absolute xpath element xml document 
efficient computation steps chose graph representation associate ods contained od tuples 
step comparison reduction 
reduce number pairwise comparisons element filter oi defined upper bound similarity measure sim oi oj oi reminder elements considered duplicates sim oi oj cand 
oi cand follows sim oi oj oi cand oj calculating similarity oi conclude oi duplicates whatsoever remove duplicate candidates filter individual pairs candidates entire sets pairs single step pairs involving oi 
postpone definition filter oi follow discussion similarity measure sec 
similar distance measures 
step pairwise comparisons 
duplicate candidates pruned object filter compared xml duplicate classifier similarity measure sec 

step duplicate clustering 
pairs objects detected duplicates reflect graph data structure 
transitive closure easily computed results final duplicate clusters 

heuristics select descrip tions section heuristics conform definition 
reminder require heuristic determine candidate description determining selection id domain independently 
propose basic heuristics distant ancestors distant descendants 
heuristics refined conditions 
show heuristics may combined 
heuristics intuition heuristics farther information lies considered element related illustrated section 
xml structure fig 
title year strong describing movie movies title appeared year actor name descriptive single movie 
observation verified wide range schemas 
proximity heuristic determining description 
specifically define proximity ways exploit tree structure xml tree descendants ancestor axes 
referred distant considers description elements depth xml schema differ radius depth 
heuristic 
distant ancestors ai ith ancestor parent element grand parent 
ra radius ancestors consider 
description defined distant ancestors heuristic id xpath ai ra 
heuristic 
distant descendants ei set descendants depth direct children grand children 
rd radius descendants consider 
description defined distant descendants heuristic id xpath ej ej ei 
second way selecting descriptions named closest considers elements breadth order 
note consider closest ancestors distant heuristic 
closest descendants ei th element breadth order subtree rooted 
number elements consider 
description defined closest descendants heuristic id xpath ei 
clarifies heuristics 
bottom selected distant ancestors heuristic ra 
direct children selected distant descendants heuristic rd 
top shows selection closest heuristic 
advantage distant descendants heuristic closest descendants heuristic sure descendants radius considered heuristics closest distance preferred just ordering 
advantage clear consider xs construct schema 
clear element appears 
arbitrarily selecting element defined hardly justified 
hand avoids explosion elements consider schema number instances may explode size ei limited 
clearly sensible choice ra rd essential algorithm effectiveness 
small values resulting ods contain information comparisons 
hand elements selected chances information relevant comparisons considered 
cases may affect effectiveness dramatically 
correct choice essential efficiency selected elements result od tuples compare 
additional conditions xml schema gives additional information refine selection descriptions 
section discuss content models data types cardinality relationships elements optional 
content model xml element content models simple complex mixed 
simple mixed content models allow text node element complex elements nest elements 
text node resulting od tuple value empty 
consequently similar od tuple considered contradictory contains data 
leads condition 
condition 
content model content model condition ccm signifies elements non empty text node considered selection descriptions elements simple mixed content model 
data type due fact similarity measure uses string similarity accurate data types 
introduce condition 
condition 
string data type data type condition signifies elements string data type considered selection descriptions 
cardinality element parent declared mandatory minoccurs key id false signifies exist see tighter relation compared relation optional 
descendants axis description includes elements mandatory furthermore guaranteed available comparisons 
ancestor axis consider elements tightly related mandatory 
condition 
mandatory elements data type condition cme signifies mandatory elements considered selection description 
maxoccurs child equals default relationship parent child 
measuring similarity relationship helpful relationship relationship possible children may missing elements describing object may different subset children 
relationship possible child pose problems 
additionally certain number instances explode 
condition 
singleton elements data type condition cse signifies elements relation considered selection description 
course sensible conditions conceivable restricted mentioned 
combining heuristics conditions heuristics conditions far combined multiple ways 
section discuss combined 
heuristics distant best separately applicable ancestors descendants 
possible combinations heuristics 
combination 
combination heuristics denote selections heuristics respectively 
define combination ii combination 
similarly combination heuristics conditions combined logical operations 
combination 
combination conditions denote conditions 
denote logical combination cc ii logical combination 
heuristics combinations combined combinations refine selections performed heuristics 
combination 
combination heuristics conditions heuristic combination heuristics xpath condition combination condition 
combination denoted new selection defined xpath ei xpath ei ei satisfies 
example want consider direct children string data type having text nodes corresponds conditions ccm respectively 
mandatory ancestors considered applying cma ancestor axis 
denote combination heuristics conditions cma ccm 
evaluation different heuristic condition combinations part experiments described section 
domain independent similarity classify pairs objects duplicates choose thresholded similarity measure approach 
section new similarity measure xml duplicate detection specifically geared purposes 
consider conditions important xml duplicate detection 

od tuples having different real world type mapping objects compared considered incomparable data 
instance consider od tuples od matrix title great review od matrix title sold number describing movies 
titles comparable review sold number comparable conclude similarity movies 

data similarity comparable elements considered addition data equality typographical errors compensated 
movie titles matrix matrix similar considered titles 

identifying power piece information considered 
fact movies appear year strong indicator duplicates title 

comparable contradictory data reduce similarity non specified missing data 
fact movie xml elements different artists indicator represent movie real world 
hand fact movie missing actors penalized similarity measure 
remainder section show meet requirements similarity measure defined upper bound filtering comparison reduction 
similarity measure define domain independent similarity measure sim oi oj classify pair objects oi oj duplicates non duplicates 
ods objects denoted odi respectively 
comparable od tuples wish compare od tuples represent different kinds information contribute similarity objects 
input lookup comparable determine od tuples comparable odi 
considering incomparable data measuring similarity meet condition 
similar od tuples satisfy condition determine od tuples similar ods 
formally possible pair odi od tuples determine distance measure 
definition od tuple distance 
vi ni odi vj nj 
ned si sj edit distance strings si sj normalized maximum strings length 
ni nj ned vi vj comparable od tuples considered similar threshold tuple 
set similar od tuples ods odi tuple note need compare od tuples odi comparable od tuples calculating edit distance 
edit distance expensive operation needs avoided possible 
introduced simple combination upper lower edit distance bounds substantially reduce number pairwise comparisons 
data relevance similarity measure weigh relevance terms condition variation inverse document frequency idf called generally complete set objects document number objects term occurs define idf idf log 
context term od tuple account fact consider exact matches information ods similar matches extend definition idf consider pairs similar terms 
achieved defining number objects occurs 
definition 
pair od tuples tuple 
odi odi defined log set tuple non specified vs contradictory od tuples goal distinguish non specified contradictory data condition sense negatively influence similarity objects reduces similarity 
fact movie xml elements different actors indicator represent movie real world 
hand fact movie missing actors penalized similarity measure 
say od tuple odi contradictory od tuple represent kind object mapping ii similar iii considered contradictory od tuples 
reasons conditions intuitive third needs clarification provided example 
consider countries country country respectively nest cities new york los angeles miami miami boston 
clearly share city miami 
hand differ cities 
contradictory data includes city lists cities exhaustive 
boston contradictory los angeles new york 
los angeles new york may specified list cities 
formally due possibly different cardinalities xml elements reflected odi necessarily od tuples contradictory remaining od tuples considered non specified data 
pairs contradictory od tuples selected highest 
possible contradictory pairs boston los angeles boston new york respective choose highest distance 
pairs contradictory od tuples odi summarized set odi contradictory similarity measure previous definitions considerations define similarity measure sim odi 
sim omitted parameters odi sim clarity 
intuitively sim measures relevance similar data objects relative relevance difference 
note similarity measure considers reasons structural heterogeneity leverages impact similarity 
different schemas solved considering mapping schema elements real world types second captured fact distinguish unspecified vs contradictory data 
explore adapt tree edit distance consider issues similarity measure duplicate detection 
object filter announced section define object filter comparison reduction 
upper bound similarity measure sim odi defined follows odi odi odi intuitively odi measures amount information odi shares compared amount information unique odi 
cost computing comparable cost calculating sim 
needs calculated element sim computed pair elements 
suitable filter reducing number pairwise element comparisons 
experiments section show effectiveness 

experiments evaluate domain independent approach object identification aspects effectiveness similarity measure depending heuristics ii effectiveness object filter 
considered typical scenarios duplicates occur scenario search duplicates single xml document 
errors mainly due typos missing data 
xml schema xml data created duplicates significantly different structure data represented considerably different ways 
case second scenario consider data sources merged context data integration 
search duplicates different sources differently structured represent data differently 
duplicates due synonyms contradictory data addition usual typos missing data 
expect algorithm effective scenario edit distance compensate typos similarity measure specifically designed identify duplicates despite missing data 
hand synonyms having meaning recognized contradictory data similarity decreases 
difficult detect additional knowledge thesaurus dictionary 
expect second scenario yield poorer results 
remainder section different data sets setups experiments 
evaluate effectiveness similarity measure evaluate object filter 
data sets setup different data sets 
dataset non duplicate cd objects extracted dataset artificially generated duplicates cd 
dataset non duplicate movies extracted imdb movies film dienst dataset cds randomly extracted 
artificially duplicated cd objects dataset generated automatically xml dirty data generator parameters percentage duplicates ii percentage typographical errors iii percentage missing data iv percentage synonymous contradictory data set respectively 
dataset represents scenario uniformly structured objects duplicated typos missing data 
hand dataset represents www de www imdb com film dienst kim info de www informatik hu berlin de mac experiment heuristic exp exp exp cme exp cse exp cme exp cse exp cme cse exp cse cme table combinations conditions elements od object description disc string se disc artist string se disc title string se disc genre string se disc year date se disc string se disc tracks complex se disc tracks title string se table elements dataset second scenario duplicate objects different structures representations come distinct data sources 
difference comparable data duplicates mainly due synonyms contradictory information 
example data imdb english data german date formats different 
note apply data scrubbing performing experiments 
dataset show effectiveness algorithm larger amount real world data 
effectiveness similarity measure evaluate effectiveness approach combinations heuristics conditions shown tab 
signifies heuristics specified individually experiments 
series experiments uses dataset errors mainly due typographical errors missing data 
tab 
see xml schema elements part object description increasing hk respectively 
elements see data type mandatory elements singleton elements se 
apply exp exp hk heuristic varying tuple cand 
note experiments applied distance heuristic respectively 
evaluate effectiveness recall precision 
results summarized fig 

see experiments form group 
recall precision curves similar behavior :10.1.1.19.9539
observe increase stability values explained follows disc id available comparisons 
ids apparently generated automatically ids differ character 
falsely recognized similar explains relatively low precision 
recall high duplicate pairs similar affected introduced errors 
recall precision increase added elements artist title high distinguishing power recall percentage precision percentage closest closest effectiveness evaluation dataset idf information available impact errors similarity 
elements added higher low distinguishing power genre year cd extra considered text node tracks 
consequently recall precision stable 
adding track titles recall increases duplicates 
precision drastically drops duplicates track titles include lot information errors longer impact 
due dummy titles track non specified titles approximately cds similarity non duplicates increases 
behavior remaining experiments explained follows exp considers recall precision constant 
exp drops recall precision year small distinguishing power added 
reason exp exp drop genre added 
series experiments see small descriptions sensitive errors yield high precision recall values 
hand data added description non duplicates similar information matches 
observe larger especially smaller identifying power added data 
validates proximity assumption underlying heuristics emphasizes heuristics valuable 
similar observations second scenario duplicates mainly due structural differences dataset 
apply conditions table tuple cand 
comparable elements different data sources available different values summarized table 
recall precision represented distant heuristic fig 

observe similarity measure performs effectiveness highest information selected 
task heuristics select information clear heuristic choose 
due small size schemas dataset dataset give generally applicable advice exp exp exp exp exp exp exp exp recall percentage precision percentage radius distance heuristic radius distance exp exp exp exp exp exp exp exp effectiveness evaluation dataset choosing heuristics 
dataset able measure precision result compare elements hand 
exp heuristic hk pairs duplicates pairs exact duplicates 
shows precision result cand 
observe precision increases increasing cand trivially similarity measure proportional similarity elements 
cand precision reaches 
point duplicates detected 
precision percentage duplicate threshold effectiveness dataset effectiveness object filter evaluate effectiveness object filter defined section original cds dataset vary percentage artificially generated duplicates 
instance duplicates data consists non duplicates duplicates generated duplicates duplicate pairs singletons 
fig 
plot recall precision filter exp 
recall measured number correctly pruned candidates divided number elements od object description imdb elements od object description movie year date se movie year date se movie title string se movie movie title title string se movie aka title title string optional singleton movie genre string se movie genres genre string se movie release date date date se movie date se movie people actors actor name string se movie people person firstname lastname string se movie people actress name string se movie people producers producer name string se non duplicate candidates xml documents 
precision defined number correctly pruned candidates divided total number pruned candidates 
see filter recall precision high percentage duplicates 
conclude filter effective pruning candidates duplicate 
recall precision percentage percentage duplicates effectiveness object filter table elements dataset recall precision 
related object identification received attention relational world efforts exist identifying duplicate objects hierarchical xml data 
section give brief overview past research area 
object identification relational data object identification received attention database communities 
particular research concentrated efficiently effectively finding duplicate records relational data 
research relational duplicate detection classified areas domain dependent domain independent 
assumes certain domain domain help human experts calibrate algorithms 
instance sorted neighborhood method duplicate records table detected sorting records user specified key 
xml data defining sorting key hand straightforward 
examples domain dependent solutions applied include census data sets medical data genealogical data 
authors describe domain independent efficient version sorted neighborhood method 
problem finding sorting key remains adopted graph structure similar suggested plan include notion prime representatives 
domain independent solutions include 
approaches include learning similarity measures 
problem object identification relational data positioned framework 
framework object identification divided steps conversion obtain comparable descriptive information objects ii comparison objects iii classification pairs matches duplicates nonmatches matches degree 
steps framework 
set additional focus candidate definition distinction definitions independent kind data source algorithm 
data cleaning frameworks ajax include object identification 
ajax separates logical physical levels process separate quality performance data cleansing system 
similar separation offline definitions online algorithm 
focus ajax data cleansing details object identification described detail 
sense consider framework zoom matching operator logical physical level 
object identification hierarchical xml data best knowledge closest approach detecting duplicates hierarchical data delphi project inspired 
delphi identifies duplicates hierarchically organized tables data warehouse 
duplicates outer dimension discovered help duplicate detection children table fact table 
authors focus single branch hierarchy consider cases table may children tables 
approach delphi differ similarity measure 
delphi authors choose non symmetrical measure duplicate imply duplicate determines degree containment element 
consequence difference elements reflected result 
similarity measure symmetrical takes account similarity differences compared elements 
identifying similar xml data 
consider accuracy terms recall precision similarity join 
authors concentrate fast execution algorithm focus efficient incorporation tree edit distance framework performing approximate xml joins 
authors upper lower bounds tree edit distance filters avoid expensive tree edit distance computations 
introduce sampling method effectively reduce amount data examined join operation 
solution proposed 
various filtering techniques structural content information tree structured data 
filters integrated socalled filter refinement architecture 
goal reduce number complex time consuming distance calculations query process 
focus efficiency effectiveness filtering techniques effectiveness actual duplicate detection 
approach aware considers recall precision xml similarity joins 
different strategies define similarity function vector space model 
experimental comparison results way 

outlook generalized framework object identification xml specific specialization 
framework consist main components candidate definition specifies objects compare ii duplicate definition defining information part candidate description candidates duplicates 
definitions processed iii duplicate detection component 
duplicate detection divided steps 
prepare data comparisons remaining perform actual duplicate detection pruning comparing pairs candidates clustering pairs duplicates 
algorithm specifically geared solving problems object definition structural heterogeneity inherent xml data 
algorithm xml duplicate detection uses heuristics determine candidate descriptions domain independently 
furthermore uses domain independent similarity measure tailored hierarchical semi structured xml data 
experimental evaluation effectiveness similarity measure seen yields results terms recall precision adequate heuristics chosen 
clearly choice best heuristic trivial investigation include automating choice heuristic exploiting xml schema statistics data 
additional experiments consider effectiveness object filter reduce number pairwise candidate comparisons 
showed candidate filter effective pruning candidates duplicates candidate 
intend validate similarity measure comparing effectiveness similarity measures applied xml 
preliminary experiments shown similarity measure performs better approaches data heterogeneous data sources need validate observation 
furthermore intend explore automation selection candidates domain knowledge whatsoever required 
important aspect object identification marginally considered efficiency approach 
acknowledgment 
research supported german research society dfg 
na 

chaudhuri ganti 
eliminating fuzzy duplicates data warehouses 
international conference large databases hong kong china 
baeza yates ribeiro neto 
modern information retrieval 
acm press addison wesley 
bilenko mooney 
adaptive duplicate detection learnable string similarity measures 
international conference knowledge discovery data mining washington dc 
carvalho da silva 
finding similar identities objects multiple web sources 
cikm workshop web information data management pages new orleans louisiana usa 
galhardas florescu shasha simon 
declarative data cleaning language model algorithms 
international conference large databases pages rome italy 
guha jagadish koudas srivastava yu 
approximate xml joins 
international conference management data pages madison wisconsin usa 
hern ndez stolfo 
merge purge problem large databases 
international conference management data pages san jose ca may 
jaro 
probabilistic linkage large public health data files 
statistics medicine 
jin li mehrotra 
efficient record linkage large data sets 
international conference database systems advanced applications kyoto japan 

kriegel seidel 
efficient similarity search hierarchical data large databases 
international conference extending database technology pages crete 

lim srivastava prabhakar richardson 
entity identification database integration 
international conference data engineering pages april 
monge elkan 
efficient domain independent algorithm detecting approximately duplicate database records 
sigmod workshop research issues data mining knowledge discovery pages az may 

object identification framework 
kdd workshop data cleaning record linkage object consolidation washington dc 
quass 
record linkage genealogical databases 
kdd workshop data cleaning record linkage object consolidation pages washington dc 
rahm 
data cleaning problems current approaches 
ieee data engineering bulletin volume pages 
raman hellerstein 
potter wheel interactive data cleaning system 
international conference large databases pages rome italy 
sarawagi 
interactive deduplication active learning 
international conference knowledge discovery data mining edmonton alberta 
weis naumann 
duplicate detection xml 
sigmod workshop information quality information systems pages paris france 
winkler 
advanced methods record linkage 
technical report statistical research division census bureau washington dc 
