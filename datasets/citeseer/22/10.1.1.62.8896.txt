xing visual xml query language martin erwig oregon state university department computer science corvallis oregon usa erwig cs orst edu visual language querying transforming xml data 
language visual document metaphor notion document patterns rules 
combines dynamic form interface defining queries transformation rules powerful pattern matching capabilities offers highly expressive visual language 
design visual language specifically targeted users 
key words xml user query language document metaphor document transformation extensible markup language xml standardized notation documents structured data 
xml allows definition specialized markup languages domain 
xml emerging standard data exchange vast amount tomorrow data web resources available xml format 
strong demand languages process xml documents data resources 
particular querying transforming xml data format frequent task 
query interface xml documents address important issues 
aspects great influence favoring visual traditional textual notation 
fact computer user internet potential user xml data presents challenge design powerful easy languages processing xml 
general expected users able willing learn sophisticated xml query languages 
particular assume users knowledge xml speak dtd xpath xslt 
user query interface hide technically involved important aspects user 

search engines solely key words powerful exploit structure xml format contributes data 
everybody search engines knows difficult choose keywords lead reasonably sized useful results 
dedicated query languages definitely help case xml find keywords particular contexts 
query languages option users knowledge language keywords variables user query system avoid exposing formal language user 
example experience relational databases shown form query update facilities say sql accepted employed users 
universal character xml data wrapping tool envisioned internet cause specific need xml query systems targeted users 
impact designing implementing interfaces high users huge group xml clients 
visual language easily accessible novice computer users 
propose visual query restructuring language xml called xing pronounced crossing acronym xml graphics 
xing program general rule rule consists patterns 
pattern kind visual sketch xml document visualization xml data forms basis design xing 
design xml visualization driven observation documents people deal typically organized fields text structured data example collection fields entered 
visual representation mimics exactly kinds documents known people 
particular support users obtained general design xing immediately start expressing simple queries just single patterns draw sketch documents data looking 
drawing sketch supported user interface queries eventually constructed just selections pop menus 
general users express queries just knowledge visually constitutes document 
particular concept things keyword variable needed part user 
reason fields implicitly interpreted variables text constants selections act mentioning omitting fields additionally interpreted projection data 
course pose advanced queries particular perform complex data restructuring concepts xing wildcards rules realized see simple syntactic rules learned 
notions users advanced queries contradict 
example argue data restructuring needed users strongly depends data source internal structure 
depends exactly considered user 
example highly structured data sources require restructuring flat lists information 
general longer user works system functionality explores demands 
believe data restructuring part user query system users comfortable system expecting functionality 
section give short xml particular consider query xml documents 
section presents visual language steps xml visualization called document metaphor introduced section 
document patterns rules sections 
section gives semantics document patterns rules informal explanations examples 
formal semantics definitions appendix 
section consider extensions basic notation section explain dtds document type definitions exploited user interface 
related discussed section section 
xml xml text format represent structured documents data 
xml important features simplicity 
structure information obtained named opening closing tags 
text format xml easily read produced transmitted 
generality 
general structure desirable data format instantiated 
standardization 
xml standard developed controlled world wide web consortium 
large important companies supporting xml 
altogether characteristics xml choice data format data exchange representing data internet 
give short xml section 
demonstrate section xml data queried existing textual query languages 
derive design goals user query system section 
xml documents structure xml document obtained tags mark called elements element starts tag example book followed arbitrary sequence elements example title author elements text fragments ends corresponding tag case book 
elements contain attributes included name text pairs start tag element example book year 
contrast sub elements order attributes appear element matter 
tags properly nested xml document document said formed 
apparently formed xml documents organize contents hierarchical way essentially describe trees 
xml document just single xml element called root element 
consider small example 
show xml document containing bibliographic data 
bib book year title concrete mathematics title author graham author author knuth author author patashnik author book article year title linear probing graphs title author knuth author journal algorithmica journal article bib call xml element bib 
root element contains elements book article element year attribute contain elements 
contents structured sub elements elements bib called structured elements 
contrast example title author elements called non structured elements contain text sub elements 
structure xml document constrained called document type definition dtd specifies possible elements attributes allowed nestings 
dtd represents kind type information xml values 
xml document conforming dtd said valid 
deliberately ignore dtds user level reasons information currently available web transformed xml conforming having particular dtd particularly true large amounts unstructured data 
possible query information sources proposed language relying presence dtds cases prohibitive 
second want require users interface knowledge concept schema 
ways nicely exploit dtds 
particular user interface greatly benefit dtds 
shall discuss issue section 
xml query languages recall xml element bib 
simple typical queries document select sub elements certain kind get sub element contains specific piece data 
advanced quite common task regroup elements specific sub elements common 
example interested find query books query publications particular author query list publications grouped authors consider queries expressed textual xml query languages lorel xml ql 
lorel query language evolved semi structured database query language xml query language :10.1.1.22.605
term semi structured data refers data necessarily strongly typed explicit schema :10.1.1.32.3916:10.1.1.11.5081
note lorel name query language lore name underlying database system 
lorel syntax follows tradition sql course additional elements account nested objects 
particular lorel contains path expressions navigate hierarchical objects 
query expressed lorel follows select bib book result just book element book year title concrete mathematics title author graham author author knuth author author patashnik author book wanted store books processing new element say books update mechanism current lore system bit clumsy purpose books oem dummy update books dummy select bib book function oem creates new root element dummy receive contents element 
mechanism possible current lore system rename root elements query results 
second query uses wildcard matching arbitrary tags bib sub elements restriction concerning author expressed clause 
select bib bib author knuth query returns book article element 
wrap results additional element update trick shown 
queries simple selections third task requires restructuring data data source bibliographic data grouped publications require data grouped author 
current lorel system version possible express third query 
envisioned query language allows easily construct new xml elements allows express cartesian product join regrouping nested queries 
query third task follows select xml select xml pub author select bib title bib author bib author query expresses join author elements puts titles author innermost select expression directly corresponding author element 
result case pub author graham author title concrete mathematics title pub pub author knuth author title concrete mathematics title title linear probing graphs title pub pub author patashnik author title concrete mathematics title pub consider xml ql query language proposal illustrate point 
xml ql textual query language differs lorel xml query languages approach formulate queries xml patterns user pose query describing result look obtain 
example query bib database written xml ql construct books bib book book element bib construct books outermost construct builds new root element contains result enclosed construct part 
clause performs selection matching bib element matching book elements 
element bound variable element clause 
variable referenced construct clause builds result causes books appear newly created books element 
second query uses tag variable match element bib element 
note closing tag tag variable just 
nested author element condition expressed elements knuth author matched 
previous query qualifying elements bound variable construct part create result 
construct knuth bib author knuth author element bib construct knuth query third task matches bibliographic entries query restriction author knuth 
construct clause new pub element produced author element nested query finds titles author 
join expressed variable inside inner clause bound outer clause 
construct bib title title author author bib construct pub author author bib title title author author bib construct title title pub xml ql queries definitely verbose lorel queries nice point style conditions structure contents elements directly expressed patterns need cast path expressions additional conditions 
somewhat easier create new xml elements 
altogether pattern matching approach relatively easy somebody knows xml express queries xml data 
xml ql needs know xml syntax notation angle brackets slashes nested tags 
lorel approach technical background required query language usage barrier probably high users 
design goals reviewing query examples derive design goals xml user query system 
define textual query language 
second concrete xml syntax avoided 
levels nesting easily lead confusion opening closing tags 
indicated fact xml data communications humans new lines indentation employed visually emphasize structure data 
fact user hardly see xml data raw form look page properly rendered browser 
employ visualization xml 
ideally visualization presenting xml data representation queries 
third pattern matching powerful concept greatly supports examination structured data pattern matching employed query system 
allows specification queries mainly dedicated query syntax just giving examples 
brought form context pattern matching style querying supported simple point click user interfaces 
general design rule system simple possible 
obvious requirement supported particular design attitude simple queries easy impose concepts advanced queries 
altogether design considerations lead rule visual language xml 
language developed simple visualization xml data called document metaphor described section 
visual xml querying language xing developed simple visualization xml data called document metaphor described section 
introduce concepts document patterns section document rules section demonstrate formulate queries xml data 
describe treatment attributes emphasis deal elements 
helps keep presentation focused 
visual document metaphor seek visualization xml data visually attractive simple intuitive reflects structure xml data 
means particular visualization correspondence xml 
design strongly influenced kind documents people deal faxes product descriptions purchase orders bank statements kinds forms 
documents typically contain portions free text fields data entered 
fields consist header short textual description value text structured part example collection fields 
essentially propose represent elements fields boxes tag printed bold face header box contents visualized inside box 
abbreviation elements contain text tag text 
notational convention greatly simplifies visual appearance documents level nested boxes saved 
lowers visual complexity eases understanding pictures 
notation attributes attribute names set bold face 
similarity notation chosen deliberately mentioned similarity attributes unstructured elements 
altogether representation mimics layout form documents known people 
especially supported abbreviating notation unstructured elements 
instance xml value bib section visualized shown 
order sub elements relative vertical position recall order attributes matter 
course visualization nice tailor layout easier comprehend bib book year title concrete mathematics author graham author knuth author patashnik article year title linear probing graphs author knuth journal algorithmica bibliography xing expression xml representation 
visualization directly employed visual query language 
interesting users user knows documents look sample documents patterns extract information xml data resources 
need learn query language additional visual annotations express queries 
just second pattern result pattern document rules formed offer control results express restructuring transformations data 
document patterns pattern matching provides lightweight approach data processing frees user large degree need language express search 
desired data described samples patterns specify structural contents constraints 
pattern matching suited paradigm user query languages 
usually pattern consists constants variables constants specify objects appear data qualify search result match pattern variables bind data needed processing constraints 
unfortunately concept variables re introduces flavor formal language discouraging users 
striking database query interfaces systems followed query example philosophy popular compared form query facilities offered database vendors 
reason qbe required variables certain tasks exposing complete relation schema called query forms interfaces offered possibility data entry forms pose simple queries just entering sample data explicitly exposing schema new concepts learned 
way document instantly viewed document pattern directly query 
consider queries section expressed xing 
finding books achieved pattern shown bib book find books pattern just matches book elements direct sub elements root element bib 
result query shown 
note root element tag result bib 
get books wrapped books element document rules introduced section 
bib book year title concrete mathematics author graham author knuth author patashnik query result books retrieving publications particular author bit complex 
want match arbitrary subelements sub elements having arbitrary tag 
employ regular expressions tag names case simple wildcard matching tag name 
sub elements want match sub element author content text knuth see 
bib title author knuth find publications knuth wildcard just special case regular expression way generalize weaken queries yield results 
chosen xpath 
possibilities patterns deep queries 
consider section 
requiring users employ regular expressions queries challenging 
empirical evidence combined textual visual representation regular expressions successfully utilized users 
plan investigate improvements query notation direction 
third query expressed just document pattern asks restructuring data 
expressing restructuring requires document rules consider 
document rules document rules restructure query results 
document rule consists document patterns joined double arrow called argument pattern specifies structural content constraints 
argument patterns responsible selection desired data 
called result pattern specifies elements 
means apart doing restructuring result patterns mainly perform projections sub elements 
consider example result query shown 
result somewhat surprising reader expected authors book appear result just knuth 
likewise ask journal shown article element 
reason document pattern just shorthand document rule result argument patterns abbreviates case leads projecting just title author information 
get information elements document rule appropriate result pattern 
simple solution just element name sub elements result pattern 
face problem wildcard argument pattern know element name result pattern 
wildcard lead ambiguities multiple wildcards argument pattern 
require assign additional name element called alias referred result pattern 
alias written tag followed bib book title concrete mathematics author knuth article title linear probing graphs author knuth query result publications knuth regular expression curly brackets 
example opportunity name root element differently 
bib pub author knuth knuth pub details knuth publications query return just document bib root element changed knuth 
refinements query discussed section 
fact user required employ additional result pattern find example full information knuth publications unfortunate design keeps query language simple leads concise consistent semantics 
possible improvement different color marking mechanism tags selection projection 
due lack color bar preceding sub pattern indicate just selection 
extension query expressed just single pattern see 
bib author knuth knuth publications extended pattern result differs previous query name root element bib 
extension express subtle variations queries instance putting bar front knuth find authors publications having knuth author 
extension emulate existential patterns described section 
consider example query asking titles authors publications knuth author 
express pattern shown 
bib title author knuth titles authors knuth publications query expressed existential patterns shown 
meaning extended pattern rule obtained removing sub patterns marked bar 
returning issue document rules example modify book query yield book titles 
done easily just adding sub element title book element 
result query shown 
bib book title concrete mathematics book titles question arises year information shown explicitly requested result pattern query 
reason including attributes default attributes closely tied elements sub elements 
hand interest simplicity query system attributes treated special way 
means attributes returned query results explicit projection result pattern 
previous query book element group title time considered verbose 
remove essentially need document rule express desired result 
obtain flat list book titles adding title element argument pattern removing book element encloses title element result pattern 
query shown 
bib book title title flat list book titles query performs restructuring operation argument pattern selects titles nested book elements result pattern omitting book element describes flattening elements means concatenate title elements books link titles direct children root element 
general flattening means reduce nesting depth xml value level 
hand grouping considered inverse operation flattening list elements transformed list lists basis common values sub elements 
example assume interested list publications grouped authors 
document rule shown accomplish task 
bib title author author titles title authors publications argument pattern specifies selection criterion case collect sub elements bib author title information 
result pattern describes information structured 
intention list authors followed titles publications 
titles wrapped new titles element 
striking nesting structure result pattern considerably different argument pattern 
particular observe differences compared argument pattern nesting depth author tag reduced tag disappeared 
relative nesting title tag respect author tag increased new titles tag appeared level author 
fact pattern differences exploited determine required restructuring operations 
instance observation leads flattening elements matching wildcard 
second observation interpreted group titles authors leads application corresponding grouping operation 
details query semantics explained section 
semantics define meaning xing query need representation documents document patterns rules 
multi way trees purpose 
documents xml values xml uniform representation 
linear textual representation suited formal manipulations 
define couple auxiliary operations transforming xml values 
done section 
section operations define semantics patterns rules demonstrate semantics example 
formal definitions appendix 
basic definitions xml values basically notation introduced xduce similar notation yatl adopted xml query working group element tag sub elements en written en tag text string alphabet note en denotes tree list ei general tree :10.1.1.41.7922
example consider xml value bib shown written tree notation bib book year title concrete mathematics author graham author knuth author patashnik article year title linear probing graphs author knuth journal algorithmica described tree notation powerful trivial look comma acts overloaded concatenation operator lists elements comma concatenates lists adds element list takes single elements combines element list 
clear 
comma concatenates lists need additional notation denote list lists 
semicolon purpose 
xs ys denotes flat list elements xs ys xs ys denotes element list lists 
empty list denoted 
abbreviate empty element tree node children just writing patterns patterns basically documents tree representation xml values 
instance pattern query bib book wildcards expressed corresponding tag names 
extensions deep patterns introduced syntactic extensions needed 
rule simply pair patterns 
example representation query shown pair bib title author author titles title semantics document patterns expressed basis selection projection operations xml values 
additional restructuring power document rules requires flattening grouping operation xml values definition semantics 
define basic operations explain semantics document patterns rules terms operations 
marked xml values decompose semantics description manageable pieces introduce notion marked xml values 
marked xml value written small dot preceding marked unmarked xml values contain marked unmarked sub elements example 
marked xml values perform selection projection independent steps 
example obtain titles books written knuth query shown 
bib book author knuth book title titles knuth books query processed semantics steps left hand side pattern marks books author element contains text knuth intermediate result marked xml value bib book year title concrete mathematics author graham author knuth author patashnik article year title linear probing graphs author knuth journal algorithmica second projection right hand side pattern intermediate value performed selects marked book elements projects title elements 
marks removed 
final result query just bib book title concrete mathematics marks intermediate xml values necessary remember selection lhs pattern projection performed rhs pattern 
hand patterns passes xml value necessary allow selection criteria independent projection 
matching selection matching pattern xml value basic operation needed extracting sub values constructing results 
pattern xn matches element ym tags string match pattern xi matches corresponding element yi 
sub patterns xi matching tag required 
selection operation takes xml pattern xml value returns value parts marked match pattern 
find different possibilities define selection operation uses pattern filter sequence elements 
scope investigate different options detail 
motivate design decision briefly discuss aspect suppose match list patterns sequence zn 
mean mark 
elements zi match strategy kind independent double selection 
subsequence consecutive elements matching followed subsequence consecutive elements matching strategy ignore order sequence pattern matching regular expressions example matching yields different results described semantics 

semantics mark extremes landscape possible interpretations variations sense 
example consider variations second strategy 
allowing repetition pattern leads 
requiring consecutive matching elements yields repetition 
described possibilities obvious best semantics 
chosen variation 
repeatedly mark subsequence necessarily consecutive elements matching followed subsequence necessarily consecutive consecutive elements matching shown example strategy yields result option 
applying selection pattern xn element ym basically returns element matches pattern 
precisely sub elements undergo selection selection try mark elements ym trying repeatedly match sub patterns xn 
projection projection operation takes xml pattern marked xml value returns parts value marked match pattern 
marks dropped result easily achieved applying corresponding unmark function parts element see appendix 
definition projection essentially tries extract pattern value applied 
note seemingly similar selection projection differs important ways addition having matching tag value consideration marked qualify result 
marked element contains unmarked sub elements included result regardless marks long sub patterns explicitly asking matching 
shown examples selection projection description marked xml values 
see xing semantics defined essentially steps elements matching argument patterns selected marked second marked elements projected result pattern 
similarity definitions selection projection possible single pattern abbreviation rule possible argument pattern reasonable way result pattern 
hand differences definitions rules non trivial extension patterns give control restructuring 
flattening illustrate process flattening example 
essentially flattening means eliminate level nesting lift elements level element transformed flattening new element un en en closer look definition flattening raises important questions level eliminated ii remaining elements integrated rest element 
concerning question define flattening eliminate level beneath root element 
define operators apply flattening operator level tree 
regarding second question compute element removed combinations sub elements concatenate combinations removed elements 
combinations sub elements mean 
combinations comparable kind cartesian product obtained computing elements contain exactly sub element original sub element tags 
repeated elements tag lead generation new elements element combination values tag 
call operation product 
removing elements concatenating products called flattening 
example product yields list trees tags generated product operator 
reason wrapping combination additional ensure elements belong stay grouped 
particularly important operations applied 
note carefully operator generated tags ignored matching selection projection functions perform pattern matching 
summarize description example flattening element yields element grouping grouping considered inverse operation flattening list elements transformed list lists basis common values sub elements 
consider instance element grouping creates group value means create element tag value group element combines elements common value name typically new name provided additional argument grouping operation 
obtain result element precisely grouping sub elements xml value xn respect tag means collect xi group list sub element tag called key value say refer sublist 
set different values elements xs elements obtain partition xs different ai groups xs denotes bag equality equality lists reordering 
precisely grouping means extract common key element ai group form new element tag contains key followed elements element 
rest elements wrapped tag consider example value grouping tag respectively yields elements observe second case obtain groups group contains rest 
contains element element null values keys additional group constructed 
operator generated tags really needed larger data examples containing elements element contains sub elements need grouping rests elements grouping rest elements group necessary 
described grouping tag grouping reasonably performed set tags 
formal definition appendix covers general case 
happen element contains elements carrying group tag 
formal definition takes care case 
semantics patterns rules define semantics xing query mapping basic semantic operations 
order describe mapping need syntax document patterns rules 
tree notation introduced section 
pattern just tree rule pair trees 
semantics single patterns straightforward just perform selection pattern followed projection pattern 
semantics extended patterns discussed section fits nicely framework extended pattern denote pattern obtained removing marked sub patterns 
semantics semantics rule perform selection perform projection involved definition rules explain restructuring operations inferred rules 
need refer depth specific element tree denote depth tag pattern process result pattern just try match tags pattern marked value done projection particular reject values non matching tags try identify role non matching tag 
selection performed argument pattern non matching tags encountered result pattern special meaning 
distinguish cases tags 
non matching tag result pattern ys list elements processed 
argument pattern 
tag new tag appear argument pattern 
interpreted renaming root level grouping element lower levels 

tag result pattern higher level argument pattern 
interpreted request flattening data flattening operation applied times compute ys see appendix proceed current match 

tag result pattern deeper level argument pattern 
case tag enclosing new result pattern tags ks higher level level lower interpreted grouping operation operation ks ys performed matching continues see appendix 

tag result pattern level argument pattern deeper level tags ks level argument pattern 
case enclosing tag new result pattern 
interpreted grouping operation operation ks ys performed matching continues 
third fourth case identified encountering required new tag 
semantics xing queries defined follows definition consult appendix 
equation expresses fact single pattern abbreviation rule 
second equation distinguishes cases argument result pattern match 
match rule simply denotes selection argument pattern followed projection result pattern 
argument result pattern match involved value construction performed element possibly renamed 
example demonstrate semantics query shown 
explained earlier representation query rule bib title author author titles title match semantics bib second line second semantics equation 
recall bib xml value section visualized 
difficult see bib yields tree effect renaming operation just change tag root element form bib book year title concrete mathematics author graham author knuth author patashnik article year title linear probing graphs author knuth journal algorithmica applied intermediate value 
line second equation selected get expression author titles title book article applying observe author author author 
remember notation author element abbreviation author strictly speaking author 
author author select second line second equation means apply flattening operator list book article element 
get intermediate result title concrete mathematics author graham title concrete mathematics author knuth title concrete mathematics author patashnik title linear probing graphs author knuth journal algorithmica iteration notices new tag titles performs grouping operation yields author graham titles title concrete mathematics author knuth titles title concrete mathematics title linear probing graphs journal algorithmica author patashnik titles title concrete mathematics proceeds normal projection yields author graham titles title concrete mathematics author knuth titles title concrete mathematics title linear probing graphs author patashnik titles title concrete mathematics recall generated tags ignored matching process 
advanced patterns rules sections introduced basic elements query system patterns rules seen express simple selection advanced data restructuring tasks 
users going particular regard data restructuring 
situations capabilities query interface shown far sufficient express certain queries 
section demonstrate extensions xing extend expressiveness visual notation 
patterns pattern consists distinct patterns matches pattern matched patterns search combine data stored different elements 
allows kind generalization respect schema data source 
simplest form pattern simply applied tags instance book article identical regular expression tag pattern 
interesting patterns consisting structured elements 
example search publications vl conference expressed pattern shown 
inproceedings conference vl article journal vl publications regular expression patterns tags alias refer elements result pattern 
example assume look serious publications serious defined jacm articles publications knuth 
find titles authors publications document rule quantification patterns bib serious author knuth article journal jacm serious publications serious author title recall queries asking knuth publications query yielded information knuth listed author second query listed complete bibliographic entries considered 
wanted see titles authors publications knuth 
solution suggested section extended form patterns sub patterns selection prevent performing projection see 
general solution introduce special purpose patterns universal existential list patterns 
handy expressing conditions repeated elements authors 
author knuth matches list author elements content equals knuth patterns shown match list authors author element matching knuth author elements match knuth 
author knuth 
author universal existential patterns knuth knuth condition existential universal pattern just text pattern example allow abbreviating syntax see avoids nesting level readable especially larger contexts somewhat complex queries 
author knuth author 
author knuth author knuth abbreviations universal existential patterns express query asking titles authors publications knuth shown 
bib pub author knuth author knuth pub title author titles authors knuth publications note universal pattern find publications knuth author 
deep patterns prefix pattern ellipsis obtain deep version pattern matches arbitrarily deeply nested document 
gives flexibility compared just matches elements document level 
example consider deep pattern retrieves publication activities patashnik bib pub role patashnik publication efforts patashnik pattern fact generalizing ways finds kinds bibliographic entries articles books ii finds kinds elements having patashnik value author editor iii finds information level example publication entries nested collection elements top level entries 
querying multiple data sources database languages cartesian product join operators combine data different data sources 
achieve effect simply putting patterns left hand side rule 
example assume xml document person containing information people affiliation interests 
entry grouped person element name person stored name element 
ask instance publications authors stanford 
expressed shown 
bib pub author people person author name school stanford stanford pub publications stanford authors note join condition realized alias pattern name element person renamed author equal variables signifies condition bound values equal part result 
names person document stored author elements needed renaming just author tag 
default join list elements author defined existential semantics example publication author stanford 
equivalent existential pattern author variable 
contrast find publications exclusively written stanford authors universal pattern 
shown 
cross referencing bib pub author author people person author name school stanford pub publications exclusively stanford authors xml uses special types attributes represent graph structures 
element single attribute type id value attribute uniquely identifies element 
elements refer identifiers idref idrefs attributes establish links elements 
means element value id attribute element idref attribute value refers exactly idref attribute contains single idrefs attribute contains sequence establish links multiple elements 
continuing previous example assume person element person defined id attribute called author information bib realized idrefs attribute called authors 
join queries posed value oriented matching equal values change element variables attribute variables accordingly 
graph notation explicitly tied id idref attributes elements fact attribute element represented arrow example expressed shown 
bib pub authors people person school stanford bib pub publications stanford authors referencing version query interpreted existential default semantics 
find publication having authors stanford variation universal pattern arrows shown 
bib pub authors people person school stanford bib pub publications exclusively stanford authors referencing version note cross possible build cyclic structures 
pattern matching power exploit visited elements general marked pattern matching ensure termination 
aggregation dealing collections objects requires support aggregating collections 
standard approach introduce aggregation functions count expressions count author result patterns constrain queries conditions count author put example rules 
number data type xml aggregate functions maximum average easily defined 
having count aggregation introduce specialized visualization regard conditions put condition ellipsis universal pattern see 
bib pub author author bib pub finding publications authors exploiting dtds user interface document type definition restricts attributes possible nesting elements xml data defines range possible instantiations xml values 
deliberately query mechanism independent dtds keep simple generally applicable 
dtds provide useful information data source exploited different ways 
highly useful application user interface 
user construct document patterns build xml queries 
typically happens editor allows users create boxes assign change box tags 
tedious particular new users system faced empty screen clues frustrating discouraging 
having dtd available creating named boxes easy 
step user choose document database query 
offered menu showing xml resources known system 
user select 
immediate feedback pattern consisting just root element chosen name regular expression denoting alternative names shown query space 
fact step dtd needed means step starting construction query performed additional requirements data resources 
user want express conditions selected data source 
users new system try clear idea proceed click menus objects available workspace 
dtd selected data source mouse click root element pop menu showing possible attributes sub elements root element 
menu tags selected box automatically inserted root element containing selected labels 
process repeated couple mouse clicks simple selection projection queries quickly constructed 
highlighting tag invoking pop menu different semantics expressed case selected tag extended selections pop menu means system construct regular expression tag case alternative element tags 
highlighting tag associated box invoking pop menu pattern constructed 
special option pop menu contain queries asking arbitrary sub elements easily constructed 
general novice users tool tips support helpful currently pointed menu item hint automatically displayed select books bib wildcard select bib 
certainly features conceivable construction queries comfortable user 
believe possibility offered dtds offer user context dependent support hints sub elements possible utmost importance helps quickly construct queries return non empty results 
encourages user system 
cases dtd exists tools xtract generate dtds employed user interface level 
related proposed xing emphasized user interface aspects 
gives comprehensive description visual language particular provides precise formal semantics core part 
related described subsections 
xml query languages exist quite query languages xml 
languages queries consist parts extracting filtering formatting restructuring data 
flavor formulating queries differs differences expressiveness xml ql uses seen xml patterns tags constant text variables denote parts document 
construction new elements freely mixed query parts extracting desired elements 
xml ql flexible approach 
queries tend quite long comfortable understanding xml syntax effectively 
lorel uses sql language mainly extended path expressions :10.1.1.22.605
lorel allows users express queries succinctly difficult create new elements rename elements see section 
xql builds directly xpath language denoting parts xml documents 
means viewing xml values trees xpath expressions extract subtrees 
xql extends xpath number operations join text containment 
xql express joins possible express regrouping required third example query 
yatl similar xml ql uses patterns describe selections constructions elements 
syntax patterns expressions xml syntax similar succinct notation section xduce xml query algebra proposal 
important difference semantics yatl preserves duplicates flattening operations xml ql removes duplicates 
xml query working group defined query requirements including great number different example applications queries 
definition xml query data model xml query algebra comprises precise specification xml query languages 
xml query data model xml information set provides description information available formed xml document 
xml query algebra intended formal basis xml query language 
major parts path expressions construct allows formulation iterations sequences elements 
xml query algebra proposal presents elegant powerful core query system conditional expressions ability arbitrarily combine nest different expressions selection projection join quantification restructuring expressed 
support sorting aggregation 
quilt functional language similar xml query algebra provides specialized syntax algebra operations 
xml processing programming languages querying xml regarded special case transforming xml approached programming language point view 
fact number proposals providing special language support write programs processing xml 
language supported xslt rule language xpath 
important feature xslt programs xml documents accessed analyzed transformed xml processing tool 
xduce functional language proposal introduces notion regular expression types particular offers regular expression pattern matching goes far pattern matching languages haskell ml specifically accounts locating data xml documents 
different approaches perform xml processing haskell proposed compared offers set combinators express xml transformations second approach depends existence dtd translates dtd corresponding haskell types functions 
web query languages document processing related issue query world wide web 
example qs system offering query language style sql focuses extensible system architecture weboql functional language powerful operators working versatile hypertree representation arbitrary web contents 
weboql design influenced underlying graph data model unql originally intended query language semi structured data :10.1.1.32.3916
approaches survey see view documents web content tree graph structures define textual query languages quite similar sql :10.1.1.11.5081
area document processing similar proposals 
describes general tree model documents defines pattern matching tree regular languages deterministic tree automata 
generalizes known approach capabilities express contextual conditions document transformations 
visual languages xml expressions essence multi way trees apparent denote trees pictures 
xml gl language proposal exactly idea 
trees represent visual syntax xml documents suited formal language manipulations necessarily enduser query languages 
point view xml gl general purpose visual programming languages trees graphs progress 
icon visual language restructuring web contents 
achieve high degree usability particular sense concreteness directness propose represent xml documents form way nested rectangles attached labels 
hand notation related tree structure precisely determined way nesting directly reflects xml objects represented 
form query interface provided equix important goal achieve simple interface 
form metaphor half outermost level nesting expressed simple indentation 
forms generated semi automatically driven dtd 
means severe restriction data sources providing dtd queried 
expressiveness equix quite limited possible reformat query results speak data restructuring 
possible express conditions arbitrarily deeply nested elements possible textual xml query languages path expressions similar 
queries termed deep queries :10.1.1.32.3916
similar constraints apply qbe languages nested relational data model example 
allow restructuring data depend presence schema demand display complete schema queried relations 
able express deep queries 
form visual query languages intended general purpose database languages 
rule languages similar xing visual appearance nested rectangles displaying data queries screen space requirements generally larger 
possible pose queries schema 
important feature especially cases user limited knowledge schema 
xing possible regular expressions tags 
capable expressing deep queries 
general survey visual query languages see 
visual language represent query xml data 
believe language immediately usable broad audience underlying document metaphor reflects common knowledge forms readily accessible notion document pattern relies particular implicit variables absence key words independence complex textual formal query language prototype system currently implemented intend accessible public internet 
particular envisioning ask interested users construct sample queries gather information usability 
information adapt improve xing 
considering extension document metaphor complete visualization xpath 
define various heterogeneous visual languages xml processing languages built xpath xslt quilt 
acknowledgments author anonymous reviewers helpful comments 
arocena mendelzon 
weboql restructuring documents databases webs 
theory practice object systems 
blackwell 
see need visual perl users 
visual user workshop 
bray paoli sperberg mcqueen maler editors 
extensible markup language xml 
www org tr rec xml 
buneman davidson hillebrand suciu :10.1.1.32.3916
query language optimization techniques unstructured data 
acm sigmod conf 
management data pages 
burnett 
visual programming 
webster editor encyclopedia electrical electronics engineering pages 
john wiley sons 
catarci costabile levialdi batini 
visual query systems databases survey 
journal visual languages computing 
ceri damiani fraternali paraboschi tanca 
xml gl graphical language querying restructuring xml documents 
th int 
world wide web conference 
chamberlin robie editors 
xml query requirements 
www org tr req 
chamberlin robie florescu 
quilt xml query language heterogeneous data sources 
nd acm sigmod int 
workshop web databases 
clark editor 
xsl transformations xslt version 
www org tr xslt 
clark derose editors 
xml path language xpath version 
www org tr xpath 
cluet delobel sim 
mediators need data conversion 
acm sigmod conf 
management data pages 
cohen kogan nutt sagiv 
equix easy querying xml databases 
nd acm sigmod int 
workshop web databases pages 
cowan editor 
xml information set 
www org tr xml 
cruz 
visual language object oriented databases 
acm sigmod conf 
management data pages 
deutsch fern ndez florescu levy suciu 
query language xml 
th int 
world wide web conference 
erwig 
syntax semantics visual languages 
journal visual languages computing 
erwig 
visual language xml 
th ieee symp 
visual languages pages 
erwig 
xml queries transformations users 
xml pages 
erwig meyer 
heterogeneous visual languages integrating visual textual programming 
th ieee symp 
visual languages pages 
fern ndez robie editors 
xml query data model 
www org tr query datamodel 
fern ndez simeon wadler 
algebra xml query 
int 
conf 
foundation software technology theoretical computer science lncs 
florescu levy mendelzon :10.1.1.11.5081
database techniques world wide web survey 
acm sigmod record 
fern ndez malhotra sim wadler editors 
xml query algebra 
www org tr query algebra 
garofalakis gionis rastogi seshadri shim 
xtract system extracting document type descriptors xml documents 
acm sigmod conf 
management data pages 
goldman mchugh widom :10.1.1.22.605
semistructured data xml migrating lore data model query language 
nd acm sigmod int 
workshop web databases pages 
hosoya pierce 
xduce typed xml processing language 
nd acm sigmod int 
workshop web databases 
hosoya pierce 
regular expression pattern matching xml 
th acm symp 
principles programming languages 
hosoya vouillon pierce 
regular expression types xml 
th acm int 
conf 
functional programming pages 
jackson bell 
string pattern matching visual programming language 
journal visual languages computing 
inen mannila 
retrieval hierarchical texts partial patterns 
th acm sigir conf 
research development information retrieval pages 
konopnicki shmueli 
qs query system world wide web 
st int 
conf 
large databases pages 

query example nested tables 
th int 
conf 
database expert systems applications lncs pages 
marchiori editor 
xml query 
www org xml query html 

transformation documents schemas patterns contextual conditions 
rd int 
workshop principles document processing lncs pages 

data model document transformation assembly 
th int 
workshop principles digital document processing lncs pages 
minas 
visual definition virtual documents world wide web 
rd int 
workshop principles document processing lncs pages 
robie editor 
xql xml query language 
www ibiblio org xql xql proposal html 
robie chamberlin florescu 
quilt xml query language 
xml pages 
rodgers 
graph rewriting programming language graph drawing 
th ieee symp 
visual languages pages 
sch rr winter 
visual programming graph rewriting systems 
th ieee symp 
visual languages pages 
shneiderman 
direct manipulation step programming languages 
computer 
ozsoyoglu 
unified visual database access 
acm sigmod conf 
management data pages 
wallace runciman 
haskell xml generic combinators type translation 
th acm int 
conf 
functional programming pages 
wegner wilke 
qbe queries multimedia extensions nested relational dbms 
int 
conf 
visual information systems pages 
appendix semantics definitions single letters denote single elements strings denote lists elements example xs ys 
helps identify type variables name 
matching definition matching induction structure patterns traverses pattern value parallel determines elements match checks lists elements match 
matching tags uses predicate performs ordinary string matching assumed defined 
semicolon separate function arguments 
xs ys xs ys false xs ys xs ys definition says pattern match element tags string match existent sub pattern match corresponding sub element 
selection done matching definition selection performed induction structure patterns uses mutually recursive functions traverse pattern value parallel 
definition simple actual pattern matching done xs ys xs ys xs ys ys xs ys ys ys xs ys xs ys xs ys xs ys note equation pattern appended pattern list second pattern matches achieve iterative matching behavior 
projection unmark function removes marks final results defined follows xs xs xs xs xs xs definition projection final cases express projection unmarked values yields irrespective pattern 
flattening ys xs ys ys xs ys xs xs ys xs ys xs ys xs ys ys ys ys xs ys xs ys flattening xml value means eliminate level hierarchy 
define product flattening operations need auxiliary definitions notations yields tag element gives list children element 
applied list elements yields list elements tags 
xs xs xs xs xs xs denote list xs property holds 
missing denotes list obtained applying xs 
may iterator set example xs ys denotes list expressions obtained ranging combinations xs ys ys inner loop may depend aggregate elements list xs binary operation write xs denotes expression xn example 
define function yields sub element tag list elements tag sense produces kind relational view xml element computing list columns column list elements tag 
example definition xs xs xs need right product operator takes list element lists xs list ys extends xsi ys 
name right product indicates extension element lists happens right 
repeatedly applied columns delivered build element combinations thought tuples sense relational databases tag tag 
argument list xsi column intermediate result application represents kind list partial tuples containing columns processed far 
ts ys xs xs ts ys define operation computes product element simply apply columns element 
order retain tuple structure additionally wrap tuple special tag flattening operation applies children element concatenates resulting lists 
flattening applied directly list elements tree 
supply definition case 
grouping xs xs xs xs xs xs define grouping operation formally need auxiliary definitions 
operation partitions children element lists set tags specify key 
example defined ts xs xs ts xs ts keys exposed elements elements arranged groups equal keys 
done operation defined 
definition function selects element list 
xs ys zs ys xs zs xs final step extract key list obtained wrap key list rest elements separate group element 
done function accepts list trees key computes single element tag element list contains key elements operator generated wrapping tag followed group element tag supplied additional function argument contains list rest elements 
xs xs grouping element xs respect set key tags ts essentially performed steps 
sort xs 
sorting performed tags equal tags recursively sub elements 

partition elements xs ts 

identify sublists equal key elements 

extract key elements steps lead definition 
note takes arguments tags key elements perform grouping ii tag group element iii element grouped 
flattening applied list elements 
include definition case 
ts xs ts xs ts xs ts sort xs inferring restructuring operations depth tag pattern computed function searches occurrence tag xs min xs tag occur tree depth defined 
determine tags key rest elements functions pass tags operation 
define inserts new group tags marks ignored building process 
element tag new say titles tags rest elements appear inside group element directly tags children case title 
key tags obtained determining pattern siblings elements ii children tags element tag 
express selection useful function retrieves children sub element tree having specific tag function finds list elements siblings contain set specified tags 
ts ts ts ks ks ks leads definition functions build values result pattern 
ys xs ys ys xs ys xs xs ys xs ys xs ys xs xs ys xs xs ys xs ys ys ys ys xs ys xs ys definition similar investigates case non matching tags deeply 
side condition require tag flattening operation performed 
definition omitted special case checking root element renaming 
easier check perform possible renaming entering function 
function ys xs ys ys semantics xing queries defined follows 

