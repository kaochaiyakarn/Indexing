instance sentence boundary determination optimization natural language generation describes novel instancebased sentence boundary determination method natural language generation optimizes set criteria examples corpus 
compared existing sentence boundary determination approaches offers significant contributions 
approach provides general domain independent framework effectively addresses sentence boundary determination balancing comprehensive set sentence complexity quality related constraints 
second approach simulate characteristics style naturally occurring sentences application domain solutions optimized similarities examples corpus 
third approach adapt easily suit natural language generation system capability balancing strengths weaknesses subcomponents aggregation referring expression generation capability 
final evaluation shows proposed method results significantly better sentence generation outcomes widely adopted approach 
problem sentence boundary determination natural language generation exists sentence needed convey multiple concepts pan james shaw ibm watson research center skyline drive hawthorne ny usa ibm com propositions 
classic natural language generation nlg architecture reiter sentence boundary decisions sentence planning stage syntactic structure wording sentences decided 
sentence boundary determination complex process directly impacts sentence readability semantic cohesion syntactic lexical realizability smoothness sentence transitions 
sentences complex hard understand sentences lacking semantic cohesion cross sentence coherence 
bad sentence boundary decisions may sentences unrealizable 
design sentence boundary determination method addresses issues employ instance approach mellish pan shaw 
optimize solutions examples corpus output sentences demonstrate properties similar sentence length distribution semantic grouping similar corpus 
approach avoids problematic sentence boundaries optimizing solutions instances corpus 
sentence lexical syntactic realizability consideration avoid sentence realization failures caused bad sentence boundary decisions 
solution adapted easily suit capability natural language generator easily tune algorithm maximize generation quality 
best knowledge existing comprehensive solution domain independent possesses qualities 
summary offers significant contributions 
provides general flexible sentence proceedings rd annual meeting acl pages ann arbor june 
association computational linguistics boundary determination framework takes comprehensive set sentence complexity quality related criteria consideration ensures proposed algorithm sensitive complexity generated sentences semantic cohesion multi sentence coherence syntactic lexical realizability 

employ instance method proposed solution sensitive style sentences application domain corpus collected 

approach adjusted easily suit sentence generation system capability avoid known weaknesses 
currently embodied multimodal conversation application real estate domain potential home buyers interact system multiple modalities speech gesture request residential real estate information zhou pan zhou chen zhou aggarwal 
interpreting request system formulates multimedia presentation including automatically generated speech graphics response zhou aggarwal 
proposed sentence boundary determination module takes set propositions selected content planner passes sentence boundary decisions pan shaw instance sentence generator formulate final sentences 
example system called generate responses user request tell house main attributes house conveyed clear sentence boundary determination module greatly ease generation process improve quality output 
rest start discussion related describe instance base approach sentence boundary determination 
evaluation results 
related existing approaches sentence boundary determination typically employ strategies 
strategy uses domain specific heuristics decide propositions combined 
example proteus davey ritchie produces game descriptions employing domainspecific sentence scope heuristics 
approach particular application readily reusable new applications 
second strategy employ syntactic lexical sentence complexity constraints control aggregation multiple propositions robin shaw 
strategies generate fluent complex sentences take criteria consideration semantic cohesion 
approaches employ global optimization content sentence distributed evenly 
may cause dangling sentence problem wilkinson 
strategy described mann moore guided aggregation process evaluation score sensitive structure term usage sentence 
similar approach rely search find optimal solution 
main difference approach evaluation score computed preference heuristics 
example semantic groups existing domain coded specifically order handle semantic grouping 
contrast framework score computed sentence similarity corpus instances takes advantage naturally occurring semantic grouping corpus 
walker stent statistical features derived corpus rank generated sentence plans 
plan ranker trained existing examples choose plan consistent examples 
depending features size training examples unclear capture patterns semantic grouping avoid problems likes dangling sentences 
examples describe approach detail start examples real estate domain demonstrate properties proposed approach 
sentence complexity impacts sentence boundary determination 
shown table receiving user request details house content planner asked sentence planner describe house set attributes including asking price style number bedrooms number square footage garage lot size property tax associated town school example turn sentence tell house dollar bedroom bathroom square foot acre land car garage annual taxes dollars hills school district 
dollar house 
bedroom house 
bathroom house 
house square feet 
house acres land 
house car garage 
house 
annual taxes dollars 
house 
house hills school district 
bedroom bathroom square foot located acres land 
asking price dollar annual taxes dollars 
house located hills school district 
dollar bedroom house 
bathroom house annual taxes dollars 
bedroom bathroom house 
price dollar annual taxes dollars 
tax rate house percent 
house roof 
bedroom bathroom square feet acres land 
house bedrooms 
house 
square feet 
house acres land 
district name 
proper sentence boundary determination sentence planner may formulate single sentence convey information 
grammatically correct complex exhausting read 
similarly output despite grammatical correctness choppy tedious read 
contrast instance sentence boundary determination module examples corpus partition attributes sentences balanced manner 
semantic cohesion influences quality output sentences 
example real estate domain number bedrooms number closely related concepts 
corpus concepts appear conveyed sentence 
content planner wants convey house attributes price number bedrooms number property tax desirable solution splits concepts separate sentences 
instance sentence boundary determination method generates minimize difference corpus instances 
sentence boundary placement sensitive syntactic lexical realizability grouped items 
example sentence planner asks surface realizer convey propositions sentence realization failure triggered exist corpus independent sentences 
table examples transformed modifier corpus aggregated system 
method takes sentence lexical syntactic realizability consideration order avoid making aggregation request surface realizer place 
generation system capability may influence sentence boundary determination 
sentence boundary decisions balance system strengths weaknesses 
contrast bad decisions expose system 
example sentence generator performing aggregations weak referring expressions may avoid incoherence sentences preferring aggregating attributes sentence splitting multiple sentences 
demonstrate approach achieve goals unified instance framework 
instance boundary determination instance generation automatically creates sentences similar generated humans including way grouping semantic content wording style 
previously pan shaw demonstrated instancebased learning applied successfully generating new sentences piecing existing words segments corpus 
want demonstrate applying principle better sentence boundary decisions 
key idea new approach find sentence boundary solution minimizes expected difference sentences resulting boundary decisions examples corpus 
measure expected difference set cost functions 
optimization criteria sentence complexity quality related cost functions optimization criteria sentence boundary cost insertion cost deletion cost 
sentence boundary cost sbc assuming set propositions conveyed collection example sentences selected corpus convey say realized sentence boundary cost equal sbc number sentences sbc sentence boundary cost 
specific example real estate domain input propositions 
house attr style 

house attr bedroom 

house attr bathroom 
solution contains sentences 
bedroom bathroom house 

house 
sentence boundary involved solution containing boundary cost 
example grammatical sentences transition quite smooth 
sound choppy disjointed 
penalize sentence break sbc 
general sbc parameter sensitive generation system capability competence expression generation 
generation system robust approach tracking focus sentences weak referring expression generation adding sentence boundaries cause fluency problems 
contrast generation system capable maintaining coherence sentences proper sentence boundary cost lower 
insertion cost assume set propositions conveyed ci instance corpus realize inserting missing proposition pj ci say realized ci insertion cost ch pj ch host sentence corpus containing proposition pj 
example real estate domain assume input 
house attr square footage 
assume ci sentence selected corpus realize bedroom bathroom house 
ci contain needs added 
say realized ci inserting proposition insertion cost ch ch sentence corpus house square feet insertion cost influenced main factors syntactic lexical proposition pj system capability aggregating propositions 
example corpus proposition pj realized independent sentence modifier pj extremely high effectively prohibit pj part sentence 
pj defined minimum insertion cost ch pj 
currently ch pj computed dynamically properties corpus instances 
addition proposition depends capable aggregation module combine propositions correctly sentence insertion cost assigned high low accordingly 
deletion cost assume set input propositions conveyed ci instance corpus convey deleting unneeded proposition pj ci 
say realized ci deletion cost ci pj 
specific example assuming input ci instance corpus bedroom bathroom square foot house addition propositions ci conveys proposition 
needed conveying say realized ci deleting proposition deletion cost ci 
deletion cost affected main factors syntactic relation pj host sentence 
new instance ci square foot bedroom bathroom house deleting main object verb rest sentence incomplete 
result ci expensive 
contrast ci low resulting sentence grammatically sound 
currently ci pj computed dynamically properties corpus instances 
second expected performance generation system deletion impacts deletion cost 
depending sophistication generator handle various deletion situations expected deletion cost high method employed naive error prone low system handle cases accurately 
cost assume set propositions conveyed set instances corpus chosen realize applying set insertion deletion sentence breaking operations cost solution cost wi ci pj wd ci pk nb sbc wi wd sbc insertion weight deletion weight sentence boundary cost nb number sentences solution ci corpus instance selected construct solution host sentence proposition pj belongs 
algorithm optimization cost model sentence boundary determination process branch bound tree search problem 
explain algorithm notations 
input set input propositions chosen content planner realized 
set possible propositions application domain 
instance ci corpus represented subset 
assume solution represented cost plus list pairs cis ois cis instances selected solution ois set deletion insertion operations applied cis transform si 
explain representation specific example 
boundary solution represented cost delete insert fas cost wd wi sbc corpus instances selected bases formulate solution host sentence containing proposition general idea instance branch bound tree search algorithm input corpus instance ci construct search branch representing possible ways realize input instance plus deletions insertions sentence breaks 
sentence break triggers recursive call sentence boundary determination algorithm complexity algorithm np hard 
speed process iteration prune unproductive branches upper bound derived greedy algorithms 
details sentence boundary determination algorithm described 
set input propositions 

set current upper bound ub minimum cost solutions derived greedy algorithms describe 
value prune unneeded branches search efficient 

instance ci corpus ci loop step 
goal identify useful corpus instances realizing 
delete propositions pj ci contains propositions ci exist cost wd pj ci pj 
step computes deletion operators associated costs 

ci contains propositions ci 
subset ej ej includes iterate step 
steps possible ways add missing propositions including inserting instance ci separating rest independent sentence 

generate solution pk ej insert pk ci 
propositions ej realized different sentences incurring sbc 

update cost cost wi pk pk ej sbc cost cost cost recursively computes best solution input facilitate dynamic programming remember best solution derived case formulate solutions 

lower bound cost greater established upper bound ub prune branch 

notation described sec 
update current solution cost ci delete pj pj insert pk ej pk operator composes partial solutions 

complete solution empty known best solution cost ub update upper bound ub cost 

output solution lowest cost 
establish initial ub pruning minimum bounds 
general tighter ub effective pruning greedy set partition employ greedy set partition algorithm match set largest 
repeat process solution cost cost sbc number sentences solution 
complexity computation number propositions revised minimum set covering employ greedy minimum set covering algorithm find set corpus maximizes overlapping propositions input unwanted propositions deleted 
assume repeat process empty 
difference previous approach subset complexity computation 
maximum overlapping sentence identify instance ci corpus covers maximum number propositions arrive solution rest propositions covered ci inserted ci unwanted propositions ci deleted 
cost solution wd ci pj wi pj pk pk includes proposition ci includes propositions ci 
currently update ub complete solution 
possible derive better ub establishing upper bound partial solution computational overhead justify doing 
approximation algorithm pruning dynamic programming exact solution expensive computationally 
computing exact solution input size propositions millions states takes minutes see 
search efficient tasks large number propositions input naturally seek greedy strategy iteration algorithm chooses best step regard implications moves 
greedy search policy implemented explores branch uses instance maximum overlapping propositions input ignores branches exploring corpus instances 
intuition policy overlap instance input insertions sentence breaks needed 
demonstrate tradeoff computation efficiency accuracy 
graph instances corpus size vary input sentence length results shown graphs average value typical weight configurations wd wi sbc execution time seconds cost 
compares quality solutions exact solutions versus approximation 
interactive multimedia system currently exact solution input size propositions switch greedy larger input size ensure sub second performance nlg component 
propositions input greedy exact speed difference exact solutions approximations proposition input greedy exact cost difference exact solutions approximations measures dangling sentence split semantic group realization failure fluency evaluations table comparisons evaluate quality sentence boundary decisions implemented baseline system boundary determination aggregation module threshold maximum number propositions allowed sentence simplified version second strategy section 
tested threshold values average maximum number propositions corpus instances 
sentence complexity measures number words depth embedding easily applicable comparison require propositions realized boundary decisions 
tune relative weight approach best fit system capability 
currently weights empirically established wd wi sbc 
output generated systems derive evaluation metrics 
dangling sentences define dangling sentences short sentences proposition follow long sentences 
measure verify claim global local optimization avoid generating dangling sentences making balanced sentence boundary decisions 
contrast baseline approaches dangling sentence problem input proposition multiple threshold values 
row table shows input proposition length set pathological case input proposition sets randomly generated baseline approach produce dangling sentences 
contrast approach generates balanced sentences 

semantic group splitting 
instance approach maintain semantic cohesion better 
test randomly generated inputs propositions containing semantic grouping number bedrooms number 
second row split semantic group table shows algorithm maintain semantic group better baseline approach 
output sentences algorithm generated number bedrooms number separate sentences 
contrast baseline approaches worse 

sentence realization failure 
measure verify take sentence lexical syntactical realizability consideration sentence boundary decisions result sentence realization failures 
realization failure occurs aggregation module failed realize sentence propositions grouped sentence boundary determination module 
third row table realization failure indicates randomly generated input proposition sets length realization happened output 
approach realization failure baseline approaches outputs realization failures 

fluency 
measure verify claim optimize solutions boundary cost reduce incoherence multiple sentences 
randomly generated input propositions length blind test pairs generated sentences human subjects randomly asked rate output coherent 
row fluency table shows human subjects believe particular algorithm generated better sentences 
output algorithm preferred cases baseline approaches preferred respectively 
percentages accounted cases human subject felt significant difference fluency choices 
result evaluation clearly demonstrates superiority approach generating coherent sentences 
proposed novel domain independent instance sentence boundary determination algorithm capable balancing comprehensive set generation capability sentence complexity quality related constraints 
domain independent algorithm possesses desirable properties including balancing system generation capabilities maintaining semantic cohesion cross sentence coherence preventing severe syntactic lexical realization failures 
evaluation results demonstrate superiority approach representative domain independent sentence boundary solution 
anthony davey 

discourse production 
edinburgh university press edinburgh 
robert 

technique clear writing 
mcgraw hill 
william mann james moore 

computer generation english text 
american journal computational linguistics 
pan james shaw 

hybrid case surface natural language generator 
proc 
ehud reiter 

consensus nl generation architecture appeared plausible 
proc 
inlg kennebunkport maine 
graeme ritchie 

rational reconstruction proteus sentence planner 
proc 
coling acl stanford ca 
jacques robin 

automatic generation revision natural language summaries providing historical background 
proc 
brazilian symposium artificial intelligence ce brazil 
james shaw 

coordination ellipsis text generation 
proc 
coling acl montreal canada 
amanda stent prasad marilyn walker 

trainable sentence planning complex information presentation spoken dialog systems 
proc 
acl barcelona spain 
sebastian chris mellish 

instancebased natural language generation 
proc 
naacl pittsburgh pa marilyn walker owen rambow monica 

training sentence planner spoken dialogue boosting 
computer speech language 
john wilkinson 

aggregation natural language generation look 
op term report dept computer science university waterloo 
michelle zhou vikram aggarwal 

optimization approach dynamic data content selection intelligent multimedia interfaces 
proc 
uist santa fe nm 
michelle zhou min chen 

automated generation graphic sketches example 
ijcai acapulco mexico 
michelle zhou pan 

automated authoring coherent multimedia discourse conversation systems 
acm multimedia ottawa canada 
