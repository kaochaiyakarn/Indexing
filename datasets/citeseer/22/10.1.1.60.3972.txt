distributed user interface elements support smart interaction spaces kris karin kris karin university universiteit interdisciplinary institute broadband technology expertise centre digital media belgium show interactive system distributed peer devices 
advantage current trend ambient intelligent environments combination computing resources surrounding user function logical interactive system interaction space 
approach relies fact nowadays computing resources network enabled publish device profile special purpose protocol 
reason federations devices support tasks user composed automatically requirements tasks 
distribution user interface federation devices local non local 
raises opportunity supporting collaborative tasks user interface little extra effort user interface designer 
tools supporting design creation deployment distributed interactive systems device federations maintain usability usefulness dynamic distributed system 
different metrics cope problems interface completeness interface continuity 
modern middleware solutions allow mobile embedded software components communicate residing heterogeneous platforms 
middleware offers automatic discovery mechanisms locate necessary software hardware available ubiquitous environment 
considered step ubiquitous computing vision mark weiser exists large gap actual tasks user able perform user interfaces exposed ubiquitous systems support tasks 
gap caused mainly missing pieces lack suitable task centered user interface design approach hand lack support distributable user interfaces ubiquitous environments hand 
ongoing enable design deployment effective distributable user interfaces heterogeneous environments 
new emerging communication technologies web services available wide diversity devices opportunity exploit potential interconnected personal mobile devices create distributed interaction space 
distributed interaction space uses various resources available user environment accessed user 
distinguish types distributed interaction spaces personal interaction space person interacts interactive system collaborative interaction space different persons interactive system 
goal postulated supporting user interfaces distributed heterogeneous environments serves multiple purposes 
allows user interface distributed heterogeneous devices transparent way 
done manually automatically specialized distribution manager discovery service detect clients user environment user indicate devices wants 
secondly collaborate sharing user interfaces particular application users 
usability metrics focus concepts interface completeness continuity 
obtained ensuring interaction tasks materialized user environment required time obtained defining set transition rules progress task 
assessment usability system provided account care properties complementarity assignment redundancy equivalence guide user interface distribution process 
remainder structured follows section gives overview related field 
section define elementary building blocks define user interface elements heterogeneous devices 
section discusses interaction spaces user interface elements reside section details elements distributed interaction spaces 
section discusses candidate metrics measure usability distributed interaction space continuity completeness 
section describes different prototypes distributed user interfaces take advantage sets federated devices 
section concludes 
related research builds previous different domains interfaces distributed interactive systems user interface description languages 
patern shown web interface partially completely migrated :10.1.1.2.8834
partial migration implies web interface split parts run separate device 
accomplished exploiting information available interactive system flexible language describe interface presentation 
relies models describe interactive system specific user interface description language 
approaches shown combination xml user interface description languages model interface design best suited adapt user interface new contexts 
distributable user interfaces split parts migrated different interconnected embedded devices environment user 
cooperate offer functionality ease tasks user 
notice essential property interface continuously defined section 
larsson identify set new requirements designing distributed interfaces 
modelbased design approach appropriate realize 
requires specialized knowledge different models accomplish considers distribution single level abstraction 
distribution interface locations observed traditional desktop systems multiple displays spread user interface single application 
research goes simple multi display systems 
virtual cohesive interaction space created different surfaces 
cooperative task specification simplified related user interface elements connected create logical display surface 
device independent user interface elements order create user interface elements different types devices currently user interface markup language high level xml user interface description language 
user interface element related task user needs supported multiple uiml documents alternative presentations task 
shows concept different tasks need supported specified task specification language concur ctt notation associated sets uiml documents 
task requires type interaction input output related set uiml documents uiml document set provides different presentation task 
platform user interface element rendered appropriate uiml document chosen rendered platform 
declarative nature uiml allows clear separation user interface content mapping concepts concrete widgets application logic 
main advantages 
separation beneficial multi device user interfaces 
specified user interface example maintained target device changes mapping concrete widget available platform 
secondly experts different fields user interface content provider artist user interface designer 
uiml suitable creation generic user interface designs multiple devices designer needs provide alternative uiml documents different modalities need supported 
associating multiple uiml documents interaction task task multiple ways multiple modalities devices distinct capabilities 
information place combination device profiles create composite user interface distributes user interface elements set tasks federation devices 
devices contained federation selected constraints user location accessibility requirements tasks execution needs voice interface matter 
distributed interaction space distributed user interface classified dimensions location oriented task oriented device oriented 
section discuss dimensions define distributed interaction space 
focus traditional properties distributed system refer interactive part system classification 
discussion challenges traditional distributed systems influence distributed user interface heterogeneity openness security scalability failure handling concurrency transparency refer 
design creation deployment distributed user interface consider dimensions distribution task device location distribution 
subsections discuss dimension section show examples different types distributed user interfaces dimensions 
task oriented distributed interaction space determined tasks users execute certain period time obtain common goal 
shows cooperative task specification users different roles execute different tasks 
notation shown introduced patern 
user role process defined task specification 
sets tasks executed period time primary specifications decide distribution user interface elements available set interaction resources irs 
ir defined way interaction channel output communicate interactive system 
traditional devices pda mobile phone composed irs 
device oriented distributed interaction space determined properties available irs surrounding user 
increasing amount devices publish detailed profile contains capabilities device 
service discovery protocols support detection networked irs environment user 
previous extended universal plug play upnp protocol include physical location profiles available devices 
device discovered identified decomposed set irs mainly separate capabilities device 
irs available distribution user interface elements calculated 
location oriented location application logic user actual location user interface element user space determined care 
showed graphical dimensional representation physical space help allocate user interface elements interaction resources available space 
tool allow designer spatial distribution topology interaction resources user environment 
notice user interface elements distributed available interaction resources change structure long user interface redistribution 
means devices stationary mobile mobile device moves imply redistribution user interface 
shows concept dashed lines indicate topology devices line indicates communication channel 
execution task set topology change user move mobile device regardless ir stationary mobile 
presentation user interface element change response change location ir 
user interface distribution strategies identify different types possible user interface distribution methods ascending order complexity user driven system driven continuous distribution 
subsections discusses possibilities 
give reader idea user interface distribution shows user interface distributed federation devices 
interface distribution daemon idd sure transparent application different user interface 
task sets allocated devices device federation ui distribution topology indicated dashed lines 
elements logical composite user interface element application interact 
idd light weight daemon supports distribution interactive web interface different clients running heterogeneous devices 
detailed discussion daemon 
user driven distribution user connects idd requests user interface personal interaction space 
user manually indicates user interfaces visualized device personal interaction space session 
collaborative interaction space differs number users user interfaces duplicated collaborative fashion 
user driven distribution relies initiative user cases preferred user full control distribution user interface 
shows sequence diagram describing interactions clients idd user interface element descriptions xhtml clear user take initiative 
system driven distribution user connects idd requests user interface personal interaction space 

user interface distributed federation devices idd reacts executing service discovery stage available devices user personal interaction space identified selected profile 
shows sequence diagram describing system driven distribution approach user interface element descriptions xhtml 
user select user interface element different devices available personal interaction space 
idd broadcast device discovery request obtain device profiles including physical location device information decide optimal distribution 
optimal distribution defining cost function needs minimized 
example similar approach 
approach propose cost function vn recursively calculates weight composite user interface sd 
vn different values typify weight service sd minimum screen size minimum number colors minimum memory size minimum network bandwidth 
case screen space input cost function extended incorporate different values 
continuous distribution user may engaged distributed interaction session 
changes interaction environment may trigger changes distribution user interface 
devices may join leave interaction space composed device federation causing need user interface redistribute available de vices 
new client enters environment announces presence sends device profile idd 
new client device better fulfills requirements user interface particular service running interaction space idd decide migrate service interface new client 
decide particular service interface suitable migrate client cost function 
point constraint user interface redistribution ensure optimal continuity 
interaction distribution metrics section discuss candidate metrics determine usability distributed interaction space continuity completeness 
completeness completeness user interface means interaction tasks needed reach goal particular moment accessible user regardless devices available environment including user personal devices 
achieved task centered approach task specification example 
completeness property interactive system enforced traditional computing systems user driven system driven 
distribution system sequence diagrams impossible predict dynamic distributed systems 
compositions device federation change time task interrupted completion lack appropriate ir support task 
dynamic nature distributed user interface constraints design tools enforce completeness 
designer sure tasks task specification related presentations depends available irs certain moment time task executed task specification supported environment 
show task specification include context specific parts alternative task sets certain ir missing 
impossible designer anticipate possible change user environment completeness guaranteed dynamic interaction space 
solution currently explored cope problem usage ai planning techniques try find possibility execute task set set devices locations tasks 
continuity user interface continuity ensures user interpret evaluate internal state system different input output devices 
distribution interface parts changes run time property hold 
providing support preservation continuous interaction pose difficult challenge design methodology tool uses tasks activities temporal relations 
ensure continuity system enforce rules guide redistribution user interface elements 
example possible constraint support continuity fixed task constraint formalized follows task set si executing task set tasks si sj redistributed user evolves execution si execution sj 
task example fixed task constraint 
task centered approach need extend semantics task specification new constraints temporal constraints hierarchical structure optimize continuity design phase 
suppose example tasks executed parallel exchange information performing specified ctt notation different constraints identified tasks 
tasks observable time user 
tasks able exchange data kind communication channel 
constraints enforced system prevent execution task set interrupted 
happen tasks allocated mobile device moves outside range communication channel 
constraint enforced physical means designer able specify alternative continuation task set execution original task set interrupted 
case studies section describes different case studies implemented research lab 
prototypes explore federated devices enabling technology distributed user interfaces 
distributed web interfaces enhanced daemon distribute parts page different devices 
daemon combines tasks hand idd hand serves webpages 
light weight daemon supports distribution interactive web interface different clients running heterogeneous devices pdas smart phones desktop pcs 
devices discovered identified enhanced upnp discovery protocol 
devices belong 
interactive website distributed devices large screen shows picture lower pda choose picture upper pda presents zoom functionality 
user device profile collected device federation 
shows single webpage conveniently distributed federation devices 
approach naturally extended serve located distance users 
distributed user interface shared different users collaborative user interface extra effort 
location different user interface elements wide scale remote users separated hundreds approach share collaborate 
shows devices separate part website allowing users collaboratively interact website mobile devices see effect manipulations large screen 
distributed collaborative peephole displays distributed collaborative peephole displays combine pdas tracking system 
concept explained follows different pdas share application pda functions separate window application 
shows system action 
pdas know position space peephole displays 
user move pda view places shared canvas 
handed interaction possible draw objects larger pda screen long rectangle 
case users see object 
distributed paint application deployed pdas location tracking enabled 
people collaborate system side effect distribution 
time problem users want edit simultaneously 
purpose distributed locking mechanism secures simultaneous interactions 
users wants edit object pda acquire lock object 
impossible multiple users lock object time 
changes user object showed pda realtime 
lock released pda received changes 
example shows different scale distribution users devices nearby application 
case scale distribution limited location tracking 
distribution scale widened replicating tracking methodology different places interaction current application heavily depends hands different users working physical area 
distribution supports limited range devices pdas heterogeneous environments supported previous prototype 
ongoing support design development deployment distributed user interfaces 
currently bottom approach investigate different distribution dimensions proposed influence continuity completeness metrics usability distributed interactive system 
aspects location devices tasks influence metrics provide way classify determine capabilities distributed user interface 
designer able constrain change device location task lead task interruption incomplete user interface provide functionality user 
distributed user interfaces function close range similar device peephole prototype section interfaces distributed web prototype section support wider range different devices constraints location user interface elements 
contrast peephole prototype provides support simultaneous interaction shared resources central server allowing ad hoc collaborations distributed web prototype limited needs central server user interface elements communicate server 
acknowledgments authors alphabetical order tim geert chris jo 
contributed significantly 
part research funded european fund regional development flemish government 
project iwt directly funded iwt flemish subsidy organization 
abrams williams 
uiml appliance independent xml user interface language 
www computer networks 
patern :10.1.1.2.8834
flexible interface migration 
proceedings intelligent user interface iui pages 
patern santoro 
teresa xml language description interactive systems multiple abstraction levels 
pages 

dynamo aid design process runtime architecture dynamic model user interface development 
engineering www cs kuleuven ac research projects human computer interaction interactive systems volume lecture notes computer science pages 
coutaz 
software infrastructure distributed user interfaces 
workshop ubicomp 
coutaz salber blandford may young 
easy pieces assessing usability multimodal interaction care properties 
inter act pages 
kindberg 
distributed systems concepts design 
addison wesley boston ma usa 

continuity human computer interaction 
chi workshop report www 
acm org sigchi bulletin 

supporting goal interaction dynamic intelligent environments 
th conference artificial intelligence pages 
hinckley ramos baudisch smith 
stitching pen gestures span multiple displays 
avi proceedings working conference advanced visual interfaces pages 
larsson 
programming ubiquitous software applications distributed user interface 
sixteenth international conference software engineering knowledge engineering 
abrams limbourg vanderdonckt editors 
developing user interfaces xml advances user interface description languages italy 
workshop advanced visual interfaces avi expertise centre digital media 

task modeling ambient intelligent environments 
th international workshop task models diagrams user interface design pages 

dialog model clustering user interface adaptation 
web engineering proceedings international conference web engineering volume lncs pages 
springer verlag 
mori patern santoro 
design development user interface multiple logical descriptions 
transactions software engineering august 
patern 
model design evaluation interactive applications 
springer 
rekimoto saitoh 
augmented surfaces spatially continuous space hybrid computing environments 
proceedings chi 

continuity interaction nomadic interfaces migration dynamic utilization resources 
universal access information society 
tandler ller streitz steinmetz 
dynamic coupling displays flexible creation shared workspaces 
proceedings annual acm symposium user interface software technology uist pages 

model design support distributed user interfaces 
proceedings third nordic conference human computer interaction pages 
acm press 

light weight distributed web interfaces preparing web heterogeneous environments 
lowe editors international conference web engineering volume lecture notes computer science pages 
springer 
weiser 
computer st century 
scientific american 
