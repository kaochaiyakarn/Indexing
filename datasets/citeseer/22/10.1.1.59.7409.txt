applying disciplined approach development context aware communication application ted mcfadden karen henricksen indulska peter crc enterprise distributed systems technology dstc email mcfadden dstc edu au school information technology electrical engineering university queensland st lucia qld australia email itee uq edu au pervasive computing applications engineered provide unprecedented levels flexibility order reconfigure adapt response changes computing resources user requirements 
meet challenges appropriate software engineering abstractions infrastructure required platform build adaptive applications 
demonstrate disciplined model approach engineer context aware session initiation protocol sip communication application 
disciplined approach builds previously developed conceptual models infrastructural components enable description acquisition management exploitation arbitrary types context user preference information enable adaptation context changes 

current computing environments characterised mobility users heterogeneity computing devices networks context computing applications computing power type available networks quality service communication user preferences may change 
order adapt changes applications need context aware 
need understand context able adjust behaviour context changes 
address continuing challenges building flexible evolvable context aware applications developed innovative approaches modelling context reported funded part cooperative research centre enterprise distributed systems technology dstc australian federal government crc programme department education science training 
context dependent user preferences policies new software engineering abstractions supporting infrastructure :10.1.1.60.274
illustrate models applied example context aware communication application 
communication widely explored compelling application domain contextawareness 
variety application types developed including text messaging chat programs provide users information users presence location mood relevant context communications applications exploit variety information users locations activities available devices channel types assist routing calls disruption minimised missed calls avoided 
second category application illustrate disciplined approach context aware application development 
consider self adapting communication application exploits context preference information allow users communicate seamlessly 
application coordinates set devices communication channels person configuration requirements minimal users need specify individual wish contact means done 
interactions users involve arbitrary number devices variety communication modes including videoconferencing telephone calls text messaging 
application session initiation protocol sip emerging standard session call control 
application exploits rich set contextual information order self configure adapt including location people devices activity types device network status power 
addition application relies system policies user preference information evaluate suitability available communication channels current context 
policies preferences modified fly order support highly flexible behaviour accommodate evolving set system resources user requirements 
context aware communication application builds experiences developing earlier communication prototype 
new application described considerably powerful removes initial setup tasks capable dynamically adapting communication channels mid session 
additionally new application incorporates refined context model building new sensor types improved version context preference management infrastructure 
case study underscores importance expressive flexible set modelling software engineering abstractions support change 
structure follows 
section discusses context aware system models briefly reviews previously developed conceptual models context preference description management programming context aware applications 
description supported brief examples showing models context aware communication application 
section provides overview software infrastructure implemented support conceptual models section shows architecture context aware communication application interactions infrastructure 
section concludes discussion lessons learned development communication application topics 

generic models context aware systems 
context models developing context aware applications continues software engineering challenges 
known solutions assist acquiring processing context information sensors proposed dey schmidt chen kotz :10.1.1.13.1445
addition variety context management systems maintain repositories context information provide sophisticated query facilities context aware applications appeared 
solutions focus removing complex functionality applications placing shared infrastructure place emphasis providing context modelling techniques natural application developer 
address problem developed context modelling techniques provide levels abstraction facts situations 
allow programmers define highlevel classes context appropriate describing context aware functionality 
situations considerably closer collections facts way humans conceptualise context support composition reuse complex situations easily formed incrementally programmer 
modelling context facts 
context facts suitable management context repositories modelled context modelling language cml 
shows cml generic modelling constructs model context information required contextaware communication application 
model describes key entities system including users devices absolute relative locations sip contact uris device characteristics power levels supported communication modes 
fact types define relationships entities denoted sequences role boxes classified static profiled sensed derived 
context model instantiated set facts stored context database fact types define higherorder situations shown subsection 
modelling situations 
model classes context situations 
situations defined constraints context facts expressed variant predicate logic easily combined allowing complex situations incrementally formed programmer 
showed situation abstraction conceptually similar model proposed dey abowd considerably expressive 
example situations context aware communication application shown 
device exists power device power power person mode exists device person device device mode device available example represents condition device low battery power second situation indicates communication mode voice text video currently accessible person 
situation mode available device near person supports mode available 

preference modelling management growing recognition usability challenges associated context aware software related largely known location freshness timestamp legend profiled information derived information sensed information static information location name current location person name sip address uri address location type contains person near uniqueness key constraint alternative uniqueness constraint alternative role quality annotation type place name device id device near device type supports network status busy status address supports mode power device type fixed mobile network type name status unknown busy status busy available sip address uri mode audio video text power person near iff device near device near current location iff person near contains 
context fact model communication application lack user control applications actions 
evaluating existing approaches preference modelling elicitation developed novel preference modelling technique situation abstraction 
preference model supports ranking set choices context 
preference takes form named pair consisting scope scoring expression 
scope describes context preference applies terms situations 
scoring expression assigns score choice score numerical value range increasing scores represent increasing desirability special values prohibit indifferent oblige 
simple user preference set contextaware communication application asserts user preference selecting fixed line phone mobile device fixed dev rate mobile dev rate example simple user preferences considerably sophisticated incorporating arbitrary types context information 
application individual user preferences conjunction system preferences sample selection illustrated user dev rate available dev rate prohibit dev rate true rate average true rate average true rate average system preference set defines standard preference rules applied communication system device selection provides additional composite preferences describe ratings produced individual preferences set preference sets combined obtain aggregate ratings 
illustrate example composite preference prohibit device available assign rating device near user device low power case rating 
system preferences augmented dynamically defined evolvable set user specific preferences 
preference combines aggregate score produced preference aggregate score averaging 
low level preference format shown examples directly exposed users manipulate preferences user friendly graphical interface 

programming models addition developing context preference modelling abstractions created abstractions tools support software engineering process 
current approaches building context aware applications embed simple decision logic directly source code creating undesirable degree coupling applications context models 
reduce coupling allow applications gracefully evolve context models modified reflect changes underlying sensing infrastructure user requirements created new models programming triggering branching models exploit situation preference abstractions 
triggering commonly context aware computing 
branching model supports context dependent choice set alternatives context situation user preferences methods including rank 
methods form api allow context preferences evaluated outside application logic 
models described fully previous communication application demonstrated section 
infrastructure integrated conceptual foundations described section software infrastructure provides context preference management functions implements toolkit support programming models 
infrastructure organised layers illustrated bottom half 
context gathering layer 
layer acquires context information processes information interpretation data fusion 
elvin event notification scheme employs content routing provides loose coupling components layer 
context preference management layer 
gathered context information stored context facts context manager responsible maintaining situation definitions 
preference manager stores evaluates user system preference information 
context toolkit layer 
layer provides programmer toolkit implements triggering branching models provides means querying context preference managers 
context manager central complex component 
features context manager include synchronous query update subscription asynchronous notification context events 
current infrastructure represents substantial refinement earlier prototype incompletely implemented functionality context manager supported programming models 

context aware communication application application leverages context preference information allow seamless communication individuals 
application relies context preference evaluation call initiation mid stream call transfer response context change 
branching programming model trigger branching models 
application controls communications devices instantiates communication sessions devices sip protocol 
subsections describe design application including necessary extensions sip protocol interactions application infrastructure pervasive computing 

context preference manager usage set adaptive communications application context manager initially loaded appropriate fact situation definitions 
context manager populated static profiled context facts device types fixed mobile supported networks 
application running various sensors software agents generate raw context information processed context manager 
example location device status updates fed corresponding context facts context manager 
context manager evaluates update requires registered context fact situation subscriptions receive event trigger 
system sip proxy subscribes situation information concerning active calls 
preference manager initially loaded default application system preference set 
users system may register preference sets 
preference sets application rate suitability device communication specific context 
key context elements preferences include user location user device proximity device status mode 

sip extension sip text application level signalling protocol allowing setup control tear communications sessions sip user agents 
user agent take number forms phone instant messenger program pager pda pc automated software service 
sip uses uris sip emma pace dstc edu au identify logical user service contact points independently specific user agents network addresses communication session endpoints 
communication endpoints may re negotiated mid session 
standard sip architecture defines proxies registrars aid routing sip requests 
sip proxy conceptually similar proxy content information flows control channel 
registrar works conjunction part proxy provide capabilities 
sip user agents may contact registrar locator proxy service register specific forwarding contact sip uris logical uri identity sip domain registrar 
sip proxies registration information route sip requests appropriate hop 
example sip proxy sip domain dstc edu au forward request directed sip pace user dstc edu au sip pace user ipaq dstc edu au ipaq device currently registered contact dstc edu au 
sip registrar proxy behaviour standardised interface sip registrar proxy 
registrar feature sip permits useful dynamic call routing occur places primary burden dynamic behaviour individual user agents provides limited flexibility coordinating behaviour multiple user agents 
system somewhat static sip process registration proxy lookup replaced dynamic context sensitive approach permits call redirection transfer need initiated individual user agent 
done way sip system appears standard sip proxy sip agents illustrated 
allows application existing sip user agents services 
standard sip environment user agent requests sip invite initiate call mediated proxy 
proxy receives request may query locator component associated registrar determine sip uri specified request redirected different contact uri 
system proxy issues asynchronous locate message requested uri available system locators sip locator determine contact uri 
locators static registration tables 
context preference information evaluated context toolkit described subsection determine contact uri available 
locators successfully determine contact uri asynchronously reply proxy message 
message elements include forwarding uri rating produced combining preference scores uri 
sip proxy uses received sip uris ratings determine route original request 
received specified timeout period request rejected 
communication sip proxies locator services components elvin notification service decouple specific component instances allow graceful evolution system 

context toolkit sip locator component process locate messages described locator uses context toolkit perform steps 
context manager queried discover devices near user person near fact type 

devices rated preference combines user system preferences branching model api method 

device gets score selected 
device receives numerical score device highest score selected 
device indifferent score selected arbitrarily devices indifferent scores locator concludes suitable devices respond 
context db situation db invite sip pace dstc edu au sensors locate sip pace dstc edu au sip locator sip locator sip locator context manager device status gateway location activity status sip proxy context toolkit sip pace ipaq dstc edu au preference manager context preference management layer preference db legend context gathering layer elvin notification rmi jdbc application layer layer 
cooperation context aware application infrastructure 
sip address device selected step determined address fact type maps devices sip addresses 
locator finds suitable device sends message containing contact uri choice rank value 
alternative locator behaviors possible discussed 
sip proxy able respond changes context affecting currently active calls proxy subscribes triggers event notifications context manager situation changes affect device preferences change location low power status device 
eca event condition action model terms precondition case true action re evaluate preferences call concern 
re evaluation results selection new devices call re routed 

discussion self adapting context aware communication application implemented conceptual models infrastructure developed basis building context aware pervasive systems 
disciplined model approach allowed exploit rich diverse set context information 
enabled clean separation application underlying context preference information leading considerable flexibility easily evolved time support changes user requirements resources minimal impact application 
exploited facility experiment variety context types preference sets anticipate continue evolve context preferences time 
experiences suggest type experimentation fine tuning essential simplest contextaware applications 
applications tasks adaptation accommodate different types context information balance diverse conflicting objectives exploit new resources available 
resulting complexity lead unexpected emergent behaviours fully explored overcome trial error 
application problem evident phenomenon refer preference surprise 
oc communication device selected interaction match expected user 
cause users preference sets typically capture different requirements preference model relatively easy specify isolation outcome combining intuitive 
adjustment relative weights assigned individual preferences needed bring device selection line user expectation 
currently perform manual adjustment anticipate learning algorithms exploit user feedback user overrides system device selection automatically evolve preference set 
part ongoing research continuing develop additional context aware applications approach communications domains 
designed common context model family applications supporting independent living elderly illustrating potential model approach support reuse context facts situation definitions user preferences 
designing implementing various extensions software infrastructure programming toolkits provide privacy support improved handling imperfect incomplete context preference information 
consistent model approach context aware application development allowed introducing tools reduce effort programming context aware applications automating aspects deploying administering programming infrastructure 
tools built common compiler front text cml context schema representation provide generation sql context databases context manipulation libraries multiple programming languages messaging support content notification systems 
chen kotz :10.1.1.13.1445
context aggregation dissemination ubiquitous computing systems 
th ieee workshop mobile computing systems applications wm csa june 
cheverst davies mitchell 
context crystal ball rewards pitfalls 
personal ubiquitous computing february 
dey abowd 
contextaware system supporting reminders 
nd international symposium handheld ubiquitous computing volume lecture notes computer science pages 
springer 
dey salber abowd 
conceptual framework toolkit supporting rapid prototyping context aware applications 
human computer interaction 
erickson 
problems notion contextaware computing 
communications acm february 
henricksen 
framework context aware pervasive computing applications 
phd thesis school information technology electrical engineering university queensland september 
henricksen indulska 
modelling imperfect context information 
workshop context modeling reasoning nd ieee conference pervasive computing communications percom orlando march 
henricksen indulska 
software engineering framework context aware pervasive computing 
nd ieee conference pervasive computing communications percom orlando march 
henricksen indulska rakotonirainy 
modeling context information pervasive computing systems 
st international conference pervasive computing pervasive volume lecture notes computer science pages 
springer 
indulska henricksen mcfadden 
common context model virtual community applications 
nd international conference smart homes health telematics singapore september 
judd steenkiste 
providing contextual information pervasive computing applications 
st ieee conference pervasive computing communications com pages fort worth march 
lei sow davis banavar ebling 
design applications context service 
acm mobile computing communications review october 
mcfadden henricksen indulska 
automating context aware application development 
ubicomp workshop advanced context modeling reasoning management nottingham september 
de 
presence location instant messaging context aware application framework 
th international conference mobile data management mdm volume lecture notes computer science pages 
springer 
ranganathan lei 
context aware communication 
ieee computer 
rosenberg schulzrinne johnston peterson sparks schooler 
session initiation protocol sip rfc 
ietf 
schmidt tuomela van laerhoven van de velde 
advanced interaction context 
st international symposium handheld ubiquitous computing volume lecture notes computer science pages 
springer 
segal arnold boot henderson phelps 
content routing elvin 
proceedings auug conference 
siewiorek furukawa shaffer 
context aware mobile phone 
technical report school computer science carnegie mellon university 
