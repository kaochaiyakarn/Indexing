ontology user context management challenges imperfection time dependence andreas schmidt fzi research center information technologies information process engineering und neu stra karlsruhe germany andreas schmidt fzi de 
robust scalable user context management key enabler emerging context situation aware applications ontology approaches shown usefulness capturing especially context information high level abstraction 
far problem approached data management problem key scalability robustness 
specific challenges lie imperfection high level context information time dependence variability dynamics different elements 
approach presents layered data model structures problems geared flexible efficient query processing combination relational database logic techniques 
techniques successfully applied context aware corporate learning support 
situation context awareness major topic wide range research areas mobile information systems ambient intelligence adaptive elearning knowledge management systems 
especially information systems research expresses insight quest making available vast amounts information doing efficiently user bottleneck 
order find relevant information user needs specify precisely needs 
cases user capable doing drastically reduces usability system 
usage efficiency dilemma selectivity side ease side overcome system awareness situation user 
system add transparently implicit assumptions user explicit queries actions 
idea sounds compelling closer inspection reveals faces fundamental challenges 
traced back problem system sense usage situation subset state real world relevant interaction system directly rely usage context model situation see fig 

model result mapping highly imperfect nature see mapping incomplete system able capture different aspects situation 
situation usage situation real world mapping explicit interaction user usage context context information fig 

situation context origin problems system mapping uncertain system rely indirect methods heuristics eliciting context information observable data 
mapping imprecise methods yield results limited precision mapping inconsistent consequence contradictions resulting different methods uncertainty imprecision 
especially high level context information context information high level abstraction opposed sensor level information aggravated problem dynamics 
side possible determine context demand system collect pieces advance asynchronicity acquisition usage 
side parts context change quite quickly stable variability rate change 
furthermore efficient user context management requires fairly deep understanding context semantics especially augmenting collected context information inevitable high quality context 
provision context information applications complex task realized specialized user context management service analogy data management systems 
requirement understanding context semantics calls ontology approaches proven usefulness incorporating shared semantics applications ontology management systems currently geared user context data characterized various forms imperfection strong time dependency terms validity reliability combined high update frequency 
approach capable representing efficiently dealing challenges 
organization follows section requirements user context data management analyzed 
section layered data model represent user context data 
section cover issue integrating ontologies data model 
section implementation issues dis cussed frame case study 
close review related section outlook section 
usage scenario scenario main guiding scenario user context management approach context steered workplace learning 
order achieve integration learning processes learning support system rely user searching actively appropriate learning material observes user currently doing 
observations background knowledge competency requirements elements user situation task process role system suggests appropriate learning programs compiled demand finegrained learning objects 
additionally system suggest workers experts certain area similar situation 
approach awareness learning situation help reduce cognitive load self steered learning drastically 
scenario situation awareness different aspects systematically analyzed divided different phases learning process authoring delivery execution 
cases order support scenario sketched technical level service oriented architecture learning support services conceived project learning process 
need services formed basis cases requirements user context management approach derived retrieve feature values current context 
standard case contextaware application retrieval certain context feature values considered relevant adapting system behaviour 
learning system adapt presentation technical context broadband access loudspeakers available selection current project context mid term interests goals 
check certain feature values 
presence incompleteness case slightly different previous query different modalities 
take form user value feature sense application offers support special conditions 
take form possible certain error probability user value feature useful strategies features highly critical emotional state social relationships evidence usually scarce 
query users certain context 
especially area corporate learning social dimension plays important role highly desirable establish contacts employees similar context 
system recommend similar situation certain time frame past 
different case cover current context previous contexts 
trigger actions context changes 
especially proactive system behaviour important context aware applications get timely notification context changed 
example process task changes initiate learning processes 
typical context sources scenario determine higher level abstraction user situation analyzing user interface events bayesian networks rule formalisms applying heuristics data existing sources personal information managers microsoft outlook documents 
requirements closer inspection application scenario revealed requirements aging 
obvious collected context valid indefinitely 
system gets know current task user information valid limited amount time 
consequence user context management system needs aging mechanism 
variability dynamic behavior 
closer inspection aging problem reveals aging uniform different aspects user context information 
information name birthdate changes infrequently aspects personal skills interests goals evolve time tasks location highly volatile 
aging support specific different parts context 
scalability 
want materialize user context information select methods scalable respect large numbers users long time frames 
push pull interaction paradigm 
system support push pull paradigm able answer interactive queries allows trigger style notifications 
open world assumption 
seen mapping situation incomplete application may require able query possibility facts may exploit negative facts directly 
trivial case explicit negative user feedback user context information techniques generate negative facts order increase quality context 
context data model build open world assumption 
layered context model general considerations traditional database management systems proven effective divide management functionality different layers basically independent internal logic lower layers 
spirit grounded layer external layer logical layer internal layer rdbms resolve inconsistencies application specific context schemas map application specific schema fig 

layers context data model consistent view context fact base aging semantics confidence cut offs model initial version allows structuring problem better way see 
internal layer 
internal layer lowermost layer stores collected information users time dependent way called context facts 
context facts queried timestamp value level operators different data types 
logical layer 
layer provides consistent view collected data conforming single specified schema 
specific instant time service layer provide consistent semantically enriched view schema level information background knowledge context facts adheres certain quality criteria 
external layer 
top layer represents usage context particular application certain instant time 
context information schema application understands different logical schema 
layers confused aggregation hierarchy 
achieve aggregation abstraction lower level information higher level information section 
internal layer internal layer represents lowest level abstraction 
provides basic functionality required storing accessing collected context information meta information time validity confidence collected data 
formally context fact defined follows definition context fact context fact valid user context feature signals positive negative fact value valid validity interval value point time added fact base 
probability point time feature value user set context facts called context fact base denoted support negative context facts directly results requirement open world assumption 
practice explicit user feedback certain facts context 
definition context feature context feature tuple uri uri unique identifier data type consisting value space operators data type represent traditional atomic data types integers strings ontological data supported operators discussed section examples show andreas performs task literature search entry andreas performs task 
additional schema level information internal layer aging functions attached context feature allow describing confidence certain value decreases time 
aging function basically monotonically decreasing function ime multiplied initial confidence value order obtain current confidence value 
aging functions assigned heuristically preferably empirical results 
queries logical layer current confidence calculated fact valid context fact instant time interest 
confidence calculated confidence denoting aging function associated context feature logical model internal layer ugly context aware applications 
mainly fact arbitrarily inconsistent data 
analogy traditional databases need notion schema guarantee 
context schema comprised definition context features cardinality constraints feature hierarchy 
cardinality constraints effective instrument checking elementary check consistency 
features clear application semantics value time application expects single value 
order allow better reusing context information different applications model offers possibility define feature hierarchy feature inheritance directly corresponds property hierarchies rdf 
adds basic inferencing capability model applications requests value specific feature values sub features returned 
formalized follows definition feature hierarchy feature hierarchy relation set context features additionally properties hold feature hierarchy compatible feature set value space subset value space multi valued multi valued transitive closure context feature schema defined card set context features card cardinality assignment compatible feature hierarchy 
definition schema conformity set cn context facts ci ui fi vi conforming schema card iff fi vi value space fi 
values hold values card values hold values values notion schema conformity essential imposing defined semantics imperfect data 
basically states defined context features associated data type definitions facts conform data type constraints multivalued features multiple values contradictions resulting positive negative facts 
mapping internal layer logical layer main mapping task resolution inconsistencies 
inconsistency occurs model multiple values feature cardinality constraints enforce single value positive negative facts feature 
conflict resolution strategies responsible transforming set context facts internal layer set context facts conforming context schema 
different strategies resolve inconsistencies 
obvious take value highest confidence usually strategy needs take account facts reinforced facts independent methods determine feature value limited time window 
apply procedure example clear restriction specific instant time provides possible tasks 
applying aging function suppose literature search confidence examine students confidence 
lead simple resolution strategy literature search current feature value specified performs task feature single valued 
conflict resolution strategies maximum confidence strategy heuristic refinements turned quite effective single valued features 
multivalued context features experimenting strategies dempster shafer theory allows aggregating probabilities different sources 
apart conflict resolution mapping involves exploiting feature hierarchy 
done rewriting query fact queries set features sf subfeatures 
problem asynchronous notification typical interaction pattern context awareness publisher subscriber patterns user context management service provides notifications changes user context 
apparently append semantics internal layer typical continuous query scenarios critical points resulting fact actual context time dependent view aging queries non monotonous provide additional results previous results retracted 
consequence notification protocol needs additions removal parts user context 
confidence filtering conflict resolution aggregation operators temporal data stream 
operators implemented way cases self maintainable new arriving data changes view calculated querying 
external layer mapping logical layer external layer intended interface application providing applicationspecific view 
step global context schema logical layer translated application specific schema 
problem dealt similar schema mapping techniques classical information integration approaches 
case simple projections renamings done user context management system powerful mapping features external mapping services method choice spirit 
far challenging problem consider mappings level user context schemas value level especially case ontology data types see 
resulting system architecture model section high level system architecture directly derived see fig 

shows different layers context management service accessed sketches typical added value services components 
internal level different types context sources supported push pull context sources 
push context sources notify context management service changes context information materialized inside system 
pull context sources queries demand soon queries covered features arrive 
reasoning service provides access ontological data 
added value services useful improve context quality facilitate management task 
currently types services agents user context management system blackboard services management system 
important agents augmentation agents inferring additional facts collected ones subcontext agents trying exploit dependencies context improve context switching time needed adapt changes 
augmentation agents raw context facts consolidated view depending inferencing methods logical layer preferred logic approaches imperfection aware methods prefer internal layer 
user modeling systems concentrate problem abstracting aggregating lower level context information information higher level abstraction 
focus architecture imperfection handling easily realized hierarchy user context management services 
lower level services plugged pull context sources higher level services 
integrating ontologies motivation approaches context modelling applying context awareness learning similar domains emphasize potential applying semantic web technologies user context management 
enables creation semantically aware processing methods especially introducing shared vocabulary different tools systems applying reasoning techniques domain knowledge 
subcontext agent push context source context aware application external layer mapping external schema conflict resolution logical layer internal layer application aging functions temporal filtering storage pull context source reasoning service ontologie mapping service augmentation agent fig 

high level architecture user context management service side semantic web technologies quite way go solutions comparable terms scalability traditional data management solutions 
especially true traditional types queries datatype specific range queries temporal data description logics community tries approach problem concrete domains see datalog reasoning 
techniques suited highly dynamic scenarios high volume changes far consider update operations 
approach analyze problem domain turns benefits ontologies ontology constructs feature hierarchy introduced section basically value level 
want instances ontology feature values task examples competency competency catalog 
inferencing capabilities mainly classification descriptions logics mainly needed queries user task type retrieve users expert level competency certain subject area 
idea treat ontologies datatype certain predicates query user context management system just operators dates numbers strings 
currently notion operators description logics spirit operators data model especially standardized query language proposals owl ql sparql started obvious operator instance covers large portions practical cases encountered application domain 
sample query users involved accounting process activity august select users process activity instance department valid user context management service handled splitting query query ontology service query context fact base 
similar join optimization processing order determined result set estimations 
case query ontology reasoner give instances 
query rewritten follows select users process activity process activity 
department valid alternatively query results user context fact base filtered help ontology preferred way large sets instances 
currently extending approach sparql subqueries support powerful navigation 
implementation case study user context management infrastructure successfully project learning process committed implementing learning support context steered learning developments system 
user context management infrastructure implemented user context management service implemented relational database management system 
prototype postgresql subsequent versions oracle xe 
internal layer challenging issue efficient implementation calculation current confidence 
main problem rewrite queries involving calculated attribute current confidence range queries fact attributes 
order avoid calculation combination techniques speed subsuming query prefilter facts calculate confidence approximations initial confidence old facts oracle function indexes 
implementation integration ontologies somewhat similar approaches ontologies query rewriting access ontologies considered preprocessing step 
query condition split parts shipped underlying database system parts shipped reasoner 
furthermore approach basically join context facts ontology results 
consequence tried optimize execution order making result size estimates statistics number instances instance operator 
ontology management system kaon prototype system java api access 
currently moving kaon owl dl sparql support user context context features fairly broad range divided categories personal social organizational technical 
personal context features mainly learner preferences semantic density interactivity level competencies interests 
characterizing social context relied basic social relationship ontology 
organizational level relied organizational unit role business process activity task 
technical features user agent browser operating system plugins bandwidth availability audio input output 
relationship personal technical context features available learning material fairly straightforward needed additional background knowledge relation organizational entities 
mainly done attaching competency requirements organizational entities encoded organizational ontology 
context information exploited called matching service computes background knowledge current user context competency gap compile personalized learning programs gap take account various aspects user context 
matching service operates demand 
order able realize proactive behaviour recommending learning material users context changes architecture additionally consisted learning assistant subscribes user context management service context changes 
matching service decides deliver learning assistant decides deliver displays recommendations unobtrusive manner 
user context acquired contrast prior area business process oriented knowledge management rely workflow management infrastructure capture organizational part context 
experimented variety heuristic sensors application events plugin microsoft office relying template information browser helper object internet explorer url heuristics plugin mozilla browsers 
additionally built interfaces hr applications extract static part organizational context 
personal part context relied static information user currently investigating possibility inferring learner characteristics application sensor data considering time day previous upcoming meetings appointments social relationships mainly annotated address books pull context source similar personal level currently investigating egocentric network analysis methods discover relationships email conversations 
results integrating user context management service system conducted evaluation users companies 
turned system behaviour perceived useful evaluation participants 
technical level tests shown user context management service improves robustness system comparison naive approach handle imperfection 
furthermore architecture proven useful plugging different loosely coupled context sources 
currently setting simulation environment measuring increase quality completeness different assumptions context sources 
related context modeling plenty models dealing user context information traditional community user modeling emerged communities context awareness 
overview context modeling approaches gives 
general stated data management problem neglected area research 
approaches ignore problems imperfection dynamics assume context accessed pull paradigm certainly valid sensor areas appropriate context information high level abstraction 
traced back fact especially approaches high level context information rely ontology techniques imperfection hard integrate approaches exist 
imperfection handling context modeling consideration imperfection dynamics user context information relatively neglected area research especially case high level context information 
investigate quality criteria context information complementing quality service concepts 
define criteria precision confidence trust level context sources granularity 
introduce meta attributes precision certainty update update rate approach similar 
investigated role imperfection systematic way identified types imperfection unknown values contradictory values imprecise values incorrect values 
feature values classified source persistence sensed static profiled derived 
causes imperfection analyzed classification 
approaches consider implication management infrastructure 
imperfection handling data management general major part research handling imperfection data management decade ago see overview 
apart fuzzy logic major part research data management concentrated extensions relational data models 
main approaches identified probabilistic attributes probabilistic relations probabilities level 
current approaches mainly concerned semistructured xml data 
approaches consider time dimension problem aging 
combinations temporal imperfection problems approaches concentrate imperfection temporal perspective impact time distance quality 
outlook approach views robust scalable user context management key enabler rolling context aware application large 
order retain robustness presence imperfection system needs consciously manage imperfect properties data 
approach covers uncertainty attached probabilities incompleteness open world semantics contradictions storing contradictory facts conflict resolution strategies 
additionally accounts dynamics change context information introducing aging functions decrease certainty time 
aging functions specific context feature order deal variability rate change different aspects context 
layered approach helps keep complexity manageable architecture system extensible 
scalability achieved relying traditional data management techniques providing appropriate indexing structures imperfection handling 
possible semantically rich ontologies data types accessing limited reasoning functionality queries 
system successfully applied corporate learning scenario 
central storage user context data raises justified privacy concerns 
architecture easily extended support distributed approach context data stored user separately machine 
single user context management service local storage simply distributes checking permission query individual context management systems registered pull context sources 
incorporate research data type captures imprecision probability distribution value important location information 
lot previous research exists topic integrated approach 
different conflict resolution strategies evaluated effect context quality 
purpose agent simulation techniques 
partially supported european commission fifth framework programme ist project learning process contract ist sixth framework programme ist project agent 

henricksen indulska modeling imperfect context information 
second ieee international conference pervasive computing communications 
workshop context modelling reasoning ieee computer society 
winograd architectures context 
human computer interaction 
henricksen indulska rakotonirainy modeling context information pervasive computing systems 
mattern naghshineh eds pervasive berlin springer 
schmidt bridging gap knowledge management learning contextaware corporate learning solutions 
althoff bergmann nick roth berghofer eds professional knowledge management 
third biennial conference wm germany april 
revised selected papers 
volume lecture notes artificial intelligence springer 
schmidt context steered learning learning process approach 
ieee international conference advanced learning technologies finland ieee computer society 
schmidt potentials challenges context awareness learning solutions 
lernen th annual workshop sig adaptivity user modeling interactive systems saarbr cken 

schmidt user context aware delivery learning material approach architecture 
journal universal computer science 
horvitz breese lumi re project bayesian user modeling inferring goals needs software users 
th international conference uncertainty artificial intelligence madison wisconsin 
schmidt layered model user context management controlled aging imperfection handling 
roth berghofer schulz leake eds modeling retrieval context 
proceedings nd international workshop modeling retrieval context mrc edinburgh scotland july august 
number lecture notes artificial intelligence 
lalmas dempster shafer theory evidence combine aspects information 
journal intelligent systems 
babu widom continuous queries data streams 
sigmod rec 

terry goldberg nichols oki continuous queries append databases 
sigmod proceedings acm sigmod international conference management data new york ny usa acm press 
schmidt xi integration web 
th workshop information technology systems wits barcelona spain 
wang gu zhang ontology context modeling reasoning owl 
ieee international conference pervasive computing communication percom orlando florida 

strang frank cool context ontology language enable contextual interoperability 
stefani eds lncs proceedings th ifip wg international conference distributed applications interoperable systems 
volume lecture notes computer science lncs paris france springer verlag 
nebel smith user profiling component aid user ontologies 
workshop learning teaching knowledge adaptivity karlsruhe 

heckmann specialized representation ubiquitous computing user modeling 
workshop user modeling ubiquitous computing um 

dolog nejdl challenges benefits semantic web user modelling 
ah workshop www 

lutz description logics concrete domains survey 
suzuki wolter zakharyaschev eds advances modal logics volume 
king college publications 
hustadt motik sattler reasoning description logics concrete domain framework resolution 
proc 
th european conference artificial intelligence ecai august valencia spain 

fikes hayes horrocks owl ql language deductive query answering semantic web 
journal web semantics 
prud hommeaux seaborne sparql query language rdf 
working draft 
february 
freytag query processing ontologies 
proceedings th conference advanced information systems engineering caise porto portugal 

maedche motik stojanovic managing multiple distributed ontologies semantic web 
vldb journal 
hustadt motik sattler reducing shiq description logic disjunctive datalog programs 
principles knowledge representation reasoning proceedings ninth international conference kr whistler canada june 

abecker hinkelmann hn sintek context aware proactive delivery task specific information project 
dfki gmbh international journal information systems frontiers isf 
fisher egocentric networks understand communication 
ieee internet computing 
strang context modeling survey 
workshop advanced context modelling reasoning management ubicomp sixth international conference ubiquitous computing nottingham england 

context information logistics 
lindner eds current trends database technology edbt workshops edbt workshops phd pim db heraklion crete greece march revised selected papers 
volume lecture notes computer science springer 
fuhr oil probabilistic extension daml oil probabilistic datalog 
information processing management uncertainty knowledge systems italy 
buchholz quality context need 
th international workshop hp university association geneva switzerland 

judd steenkiste providing contextual information ubiquitous computing applications 
st ieee conference pervasive computing communication percom fort worth 

henricksen indulska software engineering framework context aware pervasive computing 
percom ieee computer society 
motro management uncertainty database systems 
kim ed modern database systems object model interoperability 
addison wesley acm press 
motro sources uncertainty imprecision inconsistency information systems 
motro smets eds uncertainty management information systems needs solutions 
kluwer academic publishers 
parsons current approaches handling imperfect information data knowledge bases 
ieee transactions knowledge data engineering 
barbar garc molina porter management probabilistic data 
acm transactions knowledge data engineering 
dey sarkar probabilistic relational model algebra 
acm transactions database systems 
lakshmanan leone ross subrahmanian flexible probabilistic database system 
acm transactions database systems 
theory probabilistic databases 
vldb proceedings th international conference large data bases san francisco ca usa morgan kaufmann publishers 

fuhr probabilistic relational algebra integration information retrieval database systems 
acm transactions information systems 
jagadish probabilistic data xml 
proceedings th vldb conference hong kong china 

hung getoor subrahmanian probabilistic semistructured data model algebra 
proceedings th international conference data engineering march bangalore india ieee computer society 
snodgrass supporting valid time indeterminacy 
acm transactions database systems 
ross subrahmanian probabilistic temporal databases algebra 
acm transactions database systems 
imperfection human component adding robustness global information systems 
eds information systems engineering state art research themes 
springer 
