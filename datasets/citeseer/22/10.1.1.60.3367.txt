establishing connections formal concept analysis relational databases uta priss school computing napier university edinburgh uk www org uk priss napier ac uk 
relationship relational databases formal concept analysis fca topic papers past 
intends extend ideas previous papers analysing relationship fca central notions relational databases database schemata 
object relational algebra suggested possible replacement relational algebra 
relationship relational databases formal concept analysis fca cf 
ganter wille topic papers past 
discusses relational scaling databases 
translates relational algebra provides theoretical foundation relational databases fca representation 
intends extend previous research fca databases analysing areas database design fca methods useful modelling visualisation areas database schemata 
attempts develop foundations object relational algebra day may serve substitute traditional relational algebra foundation database query language sql cf 


algebra compatible fca uses binary relations interpreted formal contexts 
context concatenations proposed algebra fca applications described priss 
respect database described relationship fca functional dependencies essentially implications different columns database tables 
related functional dependencies defined traditional database theory means reducing redundancy avoiding update anomalies relational databases 
argued fca visualise beneficial primarily educational purposes 
knowledge far relationship fca stated research papers 
object relational algebra traditional database theory relational algebra underlying formalisation query optimisation formal semantics cf 


relational algebra closely tied sql operations correspond directly sql keywords 
close connection difficult extend relational algebra general languages object relational formalisms relational operations 
interest study possible alternatives relational algebra 
types algebras similar related relational algebra relation algebras relation relational 
studied field algebraic logic traced back peirce de morgan tarski schr der cf 
pratt overview 
second krasner algebras explored respect relationship peirce algebra 
third different variations suggested codd original relational algebra field relational databases 
approach suggested relation algebra tarski algebra relational algebra foundation relational databases 
relation algebra ra interpreted respect boolean matrices cf 
kim second respect formal contexts fca 
goal develop algebra suitable relational databases general structures 
call algebra object relational algebra 
object relational algebra binary relations correspond boolean matrices binary formal contexts fca represent aspects database schema table joins subtype relations 
terms relation matrix may interchangeably 
addition binary relations valued matrices correspond valued contexts fca represent values relational database tables 
interpretation relation algebra respect fca contexts tarski relation algebra ra consists set operations complementation dual logical composition null element nul compositional element dia 
maddux provides detailed overview operations axioms basic theorems algebra 
operations derived initial ones logical de morgan complement composition 
complements nul dia nul dia respectively 
appears ra large field applications 
pratt explains chu spaces seen interpretation ra 
maddux derives programming language semantics interpretation ra 
ra operations interpreted respect boolean matrices sense kim 
ra operations applied boolean matrices restrictions 
example require matrices equal numbers columns 
case composition see example number columns left matrix equal number rows right matrix 
operations partially defined set boolean matrices 
matrices logical calculated position wise combining value left matrix position right matrix 
different elements required matrices different sizes 
elements form diam rows columns diagonal 
null elements matrices just new types operations relevance boolean matrices matrices apposition subposition consist adding rows columns written 
second reduction operation red deletes certain rows columns matrix 
ae bg af bh ce dg cf dh example 
matrix composition 
interpretation ra respect boolean matrices extended considering matrices cross tables formal contexts sense formal concept analysis ganter wille 
ra algebra operations fca contexts 
interpretation requires adjustments operations 
rest assumed formal context set formal objects set formal attributes linearly ordered different formal contexts share set objects attributes linear order 
ra operations may meaningful formal contexts applied formal contexts share sets objects attributes 
example composition formal contexts usually assumes attribute left context equals object right context 
distinguish traditional set fca notations matrices type writer font sets elements italics matrices formal contexts 
stated rest denotes formal context set objects set attributes 
subsets elements 
interpretation ra fca contexts necessitates operations matrices converted sets objects attributes vice versa 
linearly ordered set subset operation denotes row matrix length position element 
operations colt defined accordingly colt producing column matrix producing matrix diagonal positions elements 
colt derived composition nul 
notations previous paragraphs sets formal context converted matrices follows 
underlining indicate matrices correspond single element sets contain exactly 
remainder row column matrices single shall called matrices 
matrices converted back sets operations setm 
main operations fca represented summarised table 
plus operator somewhat dual prime operator originates lexical databases cf 
priss priss old 
operations attributes analogous ones table 
noted single element matrices plus prime operators yield result composing corresponds selecting row standard fca terminology existence quantifiers equivalent single element sets 
standard fca relation algebra gim gim gim gim table 
fca terminology translated relation algebra gim gim gim relates gim relate gim relates gim relates gim relates outside gim relate outside table 
quantifiers operations fca contexts known cf 
ganter wille 
knowledge significant amount interest fca researchers ra underlies operations 
reason may fca applications context operations relevance may lead interesting properties lattice visualisations 
argue field databases context operations major importance express quantified relationships database tables 
database table interpreted binary matrix replacing non null value null value 
binary matrices quantified relationships database tables described ra summarised table 
plus prime operators complements roughly correspond basic natural language quantifiers 
interest relational databases currently frequently database language sql supports exists basic quantifier 
hansen hansen observe lack quantifier sql creates problems database users 
advantage approach contrast sql requires valued logic null cf 

approach operations performed valued binary logic 
compositional schemata goal construct complex formal context summarises tables relational database 
order reach goal notion compositional schema introduced 
compositional schema shown consists formal contexts composed quantifiers table 
compositional schemata called relational context schemata priss 
similar concatenations formal contexts discussed ganter wille example 

fig 

compositional schema numbering cells left hand side shall remainder 
compositional schema built formal contexts kj ki kl 
ki kj share set context ki formed 
similarly context kj formed 
existence quantifier construction matrices cells quantifiers table 
context ki formed cell complete schema 
noted kj ki formed composing context left ki formed composing context left context steps context steps left 
exception reflexive transitive relation case cells left empty cells filled identity relation dia 
shows compositional schema constructed formal context denote power set respectively denote element relation quantifiers table cells 
compositional schema summarises information relevant example rows cell show chosen quantifier subset shown set chosen chosen cell lattice diagram constructed cells quantifiers table read lattice diagram 
dia dia fig 

compositional schema compositional schemata utilised summarising information object oriented class hierarchies 
relational composition natural means expressing inheritance respect object oriented modelling 
shows compositional schema class sense object oriented modelling 
matrix describes instances belong classes isub contains class hierarchy describes classes attributes 
noted refers existence attributes values 
example specify class employee contains attributes name address 
compositional schema assumes attributes named uniquely class hierarchy 
condition fulfilled initially prefixing attributes name class defined optionally dropping prefixes required 
relation isub assumed reflexive transitive isub isub isub 
classes classes attributes classes classes isub isub instances isub isub fig 

compositional schema class hierarchies 
types inheritance substitution inclusion constraint specialisation inheritance 
various degrees types combined actual systems notion inheritance quite confusing 
object relational algebra helps clarify types inclusion inheritance ordering classes emerges refers subset relations sets instances classes 
specialisation inheritance ordering classes emerges refers subset relations sets attributes classes 
noted concept lattice formal context cells contains information inclusion specialisation inheritance isub single diagram practical applications diagram large graphically displayed 
types inheritance behaviour substitution inheritance values constraint inheritance explained just binary matrices 
constraint inheritance requires valued relation isub contains actual values attributes instance 
valued matrices discussed section 
relational database tables compositional schema tables tables columns tables tables dia keys fig 

compositional schema relational databases basic compositional schema relational databases simplified version classes 
relational databases tables entity types subtypes tables 
example expressed manager table shall subtype staff table 
isub matrix cell filled identity matrix dia 
follows cell contains dia 
tables columns key columns columns tables dia keys fig 

relational database schema row column contain useful information omitted 
reason presenting schema manner demonstrate relational databases special case object relational databases 
omitting row column attributes grouped key attributes appear left side 
shows emerging schema shows example 
contains information contained single relational database 
example employee table emp retrieved follows emp emp retrieves positions key attributes formal objects 
set emp set formal objects emp set temp set formal attributes dia emp binary matrix relation emp represents formal context emp 
matrix binary contains non null value null value 
actual values table stored mapping mv binary matrices valued matrices 
full database table emp corresponds valued formal context mv 
tables relational database combined manner matrix assumptions name attribute different tables similar meaning name prefixed table name 
temp emp proj eid pid ename eaddr cost pname ptime paul mary carl sue uk uk usa usa fig 

example relational database schema second entities identified keys 
third multiple inheritance anomaly see avoided 
respect second assumption relational databases tables foreign keys part composite keys exact set key attributes usually unique table 
databases entity unique single table cells simply show concatenations individual relations 
cases relational databases contain hidden inheritance structures contain overlapping entities 
example database contain separate tables staff managers employees staff manager 
case database needs carefully designed avoid multiple inheritance anomaly 
schema helps identifying possible problems 
possible problem occurs keys different tables different tables attributes 
tables different keys 
table part composite key different 
multiple inheritance anomaly occur key different tables relating attribute attribute different values table 
case mapping mv defined 
formal context contains information contained power context family wille 
representation different representation relational database tables fca 
power context families represent conceptual graphs connection relational databases conceptual graphs established 
general idea object relational algebra define algebra uses compositional schemata basic elements uses operations ra contains binary ra subalgebra 
due space limitations details discussed 
wk wk wk object relational algebra sql definitions far attempted translate sql expressions ra operations described far 
obviously complex task beginnings explored 
basic sql operations projection selection 
projection corresponds composition dia matrix right selection corresponds composition dia matrix left 
example select ename eaddr emp corresponds dia ename eaddr selection usually constraints 
object relational algebra constraints require valued matrices 
valued attribute called value context constructed depending type attribute 
due space limitations details discussed 
construction similar conceptual scaling ganter wille relational scaling fca 
provide example select statement select ename eaddr emp ename mary eaddr uk corresponds dia mary uk dia ename eaddr 
natural join relational databases fairly closely related relational composition 
natural join combines tables shared column 
difference sql join depending natural join formed subqueries involved query return number duplicates 
queries formulated select distinct eliminates duplicates 
consider example 
database tables emp employee table roj table projects ork table shows relationship employee works project 
sql fairly easy retrieve employees project select emp emp eid eid somewhat difficult retrieve employees project select emp exists select emp eid eid difficult retrieve employees projects select emp exists select proj exists select emp eid eid pid proj pid comparison table shows number negations relational complements sql corresponds ones table 
contrast relational composition second column table sql statements vary complexity 
course statements written statements equal complexity 
experience average database users extreme difficulty formulating sql statements complexity 
users probably create view temporary table asked retrieve employees projects avoid statements 
object relational algebra statements formed dia iw ork pid quantifiers second column table 
fca brief database section explores second means fca modelling aspect relational databases 
relational database design importance avoid data redundancy anomalies occur data inserted deleted updated cf 
textbook relational databases 
standard solution problems database normalisation 
called rely notion functional dependency 
shown database translated power context family functional dependencies database correspond fca implications certain formal context 
fca means visualising structures different representing functional dependencies implications lattice proposed 
suggested visualisations solve computational problem create new means practical implementations 
visualisations meant serve explanatory aids 
experience students tend experience great deal difficulty grasping idea normalisation 
visual aid beneficial 
section mainly focuses second third nf nf boyce codd bcnf briefly described 
noted textbook versions standard proposed literature 
sequence emerged due historical reasons explains bcnf inserted nf nf 
nf nf bcnf rely functional dependencies single table 
functional dependencies describe current state attribute dependent prescriptive state attribute depend 
unambiguous constitute functional dependencies database table 
types dependencies utilise joins nf inter table dependencies 
general current database researchers consider study completed interesting revisit area fca viewpoint shed light differences relations investigate new insights fca implications drawn database research 
hansen hansen relation nf values relation atomic 
words values elements sets tuples 
relational databases usually fulfil automatically modern object relational databases may different story 
database table nf nf non key attribute functionally dependent just part key hansen hansen 
database table nf nf transitive functional dependencies transitivity refers existence functional dependencies non key attributes 
database table bcnf nf non trivial left irreducible functional dependency candidate key determinant trivial implication left hand side right hand side identical left hand side empty set full set attributes determinants left hand sides functional dependencies candidate key means attributes alternative key 
nf nf shall ignored 
fca visualisations database fca visualising functional dependencies including dependencies key attributes considered implicational basis lattice 
lattice called fd lattice database table remainder 
visually inspect 
definition attributes database table dependent key meet key attributes equal bottom node fd lattice 
easiest visualised bcnf described proposition 
proposition 
database table bcnf non trivial implications fd lattice left hand side meets bottom node lattice lattice contains non key attributes true subset key attributes meet bottom node set consisting non key attributes meets bottom node non key attributes lattice 
proposition simply translation bcnf definition fca terminology determinant candidate key means meet attributes equals bottom node keys meet bottom node 
item proposition ensure database table nf nf respectively 
item conditions nf nf simpler general case implications bottom node need considered 
noted nf nf restrict implications key non key attributes non key attributes 
implications non key key attributes restricted nf nf items careful consideration key non key attributes 
examples fd lattices shall help illustrate points 
key attributes distinguished attributes enclosing names box 
lattice contains nodes lattice isomorphic depicted far left example key attributes case attribute attached bottom node 
general bcnf lattices size attributes attached bottom node attached atoms 
atomic attributes meet bottom node filter node complete boolean lattice subset attributes implies attributes 
nf nf difficult visualise 
problem fca notion key versus non key attributes 
lattice left side identical lattice middle fca viewpoint 
left lattice nf non key attribute depends partial key lattice middle nf nf bcnf implies candidate key 
decomposition lattice lattices bcnf shown right 
bcnf candidate key fig 

fd lattices relations bcnf candidate key candidate key decomposition preserve dependencies implies known fact literature bcnf decomposition achieved dependency preservation 
interesting fca question lattice structural approach determined cases bcnf predictably dependency preserving cases 
nf nf bcnf fig 

role keys bcnf decomposition bcnf shows examples lattices bcnf 
pointed sequence second third 
somewhat random historical origin 
experience tutorials students tend detect remove transitive dependencies main nf problem tackle partial key dependencies nf problems 
nf may way basic nf 
determining fd lattice nf nf non trivial implications ones left hand side meets bottom node need checked 
obviously mean nodes need checked practical viewpoint may easier check implication list directly considering lattice 
explained lattice visualisations help convey understanding different mean 
nf meet subset key attributes needs checked 
examples imply middle lattice implies right lattice 
violations nf 
nf needs determined lattice nf 
step non key attributes need considered 
implications non key attributes nf violated 
nf nf nf nf fig 

fd lattices relations nf nf presents applications fca respect relational databases 
algebra suggested means managing database schemata 
fca visualisations database serve means exploring internals 
topics leave open research questions 
long term goal research undertaken ultimately build fca database exploration software front relational databases content 
far know tool currently exists manner 
commercial tool freely available 
focuses scaling attributes facilitate joining database tables 
demonstrates fca tools require user interaction probably degree user training 
possible users simply press button view results 
database exploration tools business intelligence require user interaction training 
opinion fca stands chance compete tools 
minimise workload users fca database frontend carefully designed 
hope research highlight structures lead way 

atkinson bancilhon dewitt dittrich maier zdonik 

object oriented database system manifesto 
proceedings international conference deductive object oriented databases kyoto japan 


codd 

relational model large shared data banks 
communications acm 
missaoui godin 

mining complex structures context concatenation formal concept analysis 
mineau guy fall andrew eds proceedings second international kruse symposium 


ganter wille 

formal concept analysis 
mathematical foundations 
berlin heidelberg new york springer berlin heidelberg 

hansen gary hansen james 
database management design 
prentice hall 



relational scaling databases 
priss corbett eds 
conceptual structures integration interfaces 
lncs springer verlag 




power algebraic logic pal 
eklund ed 
concept lattices 
lncs springer verlag 


kim 

boolean matrix theory applications 
marcel dekker 
maddux 

relation algebraic semantics 
theoretical computer science 



formal semantics sql queries 
acm transactions database systems 


pratt 

origins calculus binary relations 
proc 
ieee symp 
logic computer science 

pratt 

second calculus binary relations 
proc 
th international symposium mathematical foundations computer science poland springer verlag 

priss 

relational concept analysis semantic structures dictionaries lexical databases 
phd thesis verlag shaker aachen 

priss old 

modelling lexical databases formal concept analysis 
journal universal computer science vol 

tarski 

calculus relations 
journal symbolic logic 

wille rudolf 
existential concept graphs power context families 
priss corbett eds 
conceptual structures integration interfaces 
lncs springer verlag 
