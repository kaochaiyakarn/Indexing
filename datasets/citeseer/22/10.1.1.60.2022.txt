object recognition feature matching ali shokoufandeh lars sven dickinson department computer science drexel university philadelphia pa usa computational vision active perception laboratory department numerical analysis computer science kth stockholm sweden school computer science telecommunications information systems depaul university chicago il usa department computer science university toronto toronto ontario canada object recognition formulated matching image features model features 
recognition exemplar feature correspondence 
segmentation errors articulation scale difference class deformation yield image model features don match 
adopting graph representation set features matching algorithm establishes correspondences nodes noisy vertex labeled weighted graphs 
approach reduces problem matching weighted graphs matching weighted point sets normed vector space 
accomplished embedding initial weighted graphs normed vector space low distortion novel embedding technique spherical encoding graph structure 
vector correspondences established earth mover distance framework mapped back correspondences graph nodes 
empirical evaluation algorithm extensive set recognition trials including comparison competing graph matching approaches demonstrates robustness efficacy approach 
key words graph matching graph embedding earth mover distance object recognition preprint submitted elsevier science december problem object recognition formulated matching configurations image features configurations model features 
configurations represented vertex labeled graphs nodes represent image features abstractions edges represent relations constraints features 
scale space structures represented directed graphs relations represent parent child relations sibling relations 
match graph representations hierarchical means establish correspondences nodes 
evaluate quality match distance measure defined value depends node edge similarity 
previous graph matching typically focused problem finding correspondence vertices graphs 
assumption correspondence restrictive assumes primitive features nodes graphs agree level abstraction 
unfortunately variety conditions may lead graphs represent visually similar image feature configurations contain single node correspondence 
limitations assumption illustrated object decomposed set ridges blobs extracted appropriate scales 
ridges blobs map nodes directed graph parent child edges directed coarser scale nodes overlapping finer scale nodes 
images clearly contain object decompositions identical 
specifically ends fingers right hand segmented respect left hand 
quite common due noise segmentation errors single feature node graph correspond collection broken features nodes graph 
due scale differences single coarse grained feature graph correspond collection fine grained features graph 
seek correspondence image features nodes correspondence 
space possible correspondences graphs intractable 
worst case restricting subset nodes connected subset nodes graph match subset nodes 
graph number partitions graph subsets bell number exponential 
partition graph match partition graph size space possible correspondences bounded product bell numbers graphs 
formulate problem finding pair partitions graph mapping elements partition elements fig 

need matching 
images objects similar extracted features necessarily 
specifically ends fingers left hand segmented right hand 
optimizes measure similarity corresponding subsets defined mapping 
approach searches corresponding partitions maintain coherent connected subsets preserving relational structure subsets 
approach transform graphs alternative domain approximating matching tractable 
draw low distortion graph embedding techniques embed nodes graph points low dimensional geometric space 
point embedding space represents node original graph edges original graph explicitly find way new space 
points positioned embedded space euclidean distance pairs points reflects shortest path distances corresponding nodes original graph 
matching graphs formulated problem matching embeddings ll assume roughly aligned space 
solved original problem subset points embedding may correspond set points second 
assumption weight graph edge reflects probability nodes edge spans grouped part correspondence embedding process ensures nodes grouped get mapped points close geometric proximity 
furthermore assume node attributes mapped vector masses point matching problem formulated finding corresponding subsets points points close proximity subsets similar mass fig 

overview approach graphs matched top embedded normed space point mass size pile hole function node attributes points matched emd algorithm computed flows define explicit node correspondences original graphs 
formulation ideally suited earth mover distance algorithm solution computes mass flows weighted point set minimize total 
computed flows turn explicitly define node correspondences original graphs 
approach illustrated graphs embedded space emd match embedded point masses computed flows define correspondence graphs 
review related review basics low distortion graph embedding section leading solution graph embedding matou sek described section 
method begins transforming graph metric tree turn embedded normed vector space 
effective approach suffers significant limitation 
graph embedded vector space dimensionality property graph 
embeddings matched dimensionality reduction step larger required costly prone error 
section novel embedding method spherical coding algorithm 
efficient linear time method embeds metric trees vector spaces prescribed dimensionality precluding need dimensionality reduction step 
section address problem dealing directed edges allowing framework applied hierarchical graphs scale space structures 
evaluate compare embedding functions different view recognition domains section 
perform direct head head comparison approach competing graph matching algorithms algorithm algorithm 
close discussion limitations approach section section 
related problem graph matching studied context edit distance see 
setting seeks minimal set re labelings additions deletions merges splits nodes edges transform graph 
edit distance approach drawbacks computationally expensive polynomial time algorithms available trees method deal occlusion scene clutter resulting effort spent editing extraneous graph structure cost editing operation fails reflect underlying visual information example visual similarity contour corresponding broken fragments penalized high cost merging fragments 
dickinson explored problem region matching context model abstraction images 
set region adjacency graphs representing region segmented images different exemplars belonging known class search space pairwise region groupings graph lead region adjacency graph isomorphic counterparts exemplars spaces 
resulting lowest common abstraction lca represents informative abstraction common exemplar 
effective supervised structure learning technique current form applicable problem matching graphs common abstraction exist 
spectral abstraction hierarchical graph structure originally proposed siddiqi shokoufandeh dickinson zucker problem matching hierarchical trees extended shokoufandeh problem structural indexing 
rooted directed graph subgraph eigenvalues graph subgraph adjacency sub matrix derive low dimensional vector encoding graph structure rooted node 
vector fast structural indexing vector formed heart matching algorithm corresponding graphs subgraphs 
recursive algorithm flesh explicit node correspondences hierarchies node correspondences higher levels effectively defined matching underlying nodes 
belongie similar idea encode qualitative shape occupancy characteristics neighborhood surrounding point 
bipartite matching framework correspondences formed points similar shape contexts despite fact neighborhoods differing numbers points 
hancock decomposed problem matching point sets different cardinality related subproblems point clustering cluster matching matching points matching clusters 
subproblems jointly solved iterative method combined eigenvector technique matching sets cardinality em approach likelihood computation 
resulting hierarchical matching approach proved robust noise occlusion 
gold rangarajan addressed problem partial matching attributed sparse graphs em graduated assignment approach efficiently revised earlier mappings local constraints encoded graphs 
final result oneto matching algorithm maintains intermediate doubly stochastic matrix closely resembles matching matrix 
resulting framework successfully applied non rigid matching image feature sets 
novel generalization scott longuet higgins caelli showed inexact graph matching solved re normalization projections vertices eigenspaces graphs combined form relational clustering 
framework accommodate occlusion directed graphs node attributes may yield high embedding distortion 
low distortion embedding techniques haven proven useful number graph algorithms including clustering line algorithms 
gupta proposed randomized procedure embedding metric trees vector space prescribed dimensions 
goal structurally similar graphs yield embeddings easily aligned matched randomized procedure problematic 
athitsos developed approach learning low distortion highdimensional embedding combination dimensional potentially high distortion embeddings 
approach proved valuable fast database usefulness matching clear onedimensional embeddings chosen approach different objects may differ significantly 
indyk provides comprehensive survey advances applications low distortion graph embedding 
results related properties low distortion tree embedding see 
indyk developed embedding procedure support image retrieval 
image feature distributions color histograms provide convenient mechanism indexing large image databases 
step procedure embed feature distribution vector locality sensitive hashing lsh algorithm gionis retrieve nearby candidates 
embedding method designed distance embeddings mimics earth distance emd respective feature distributions 
nature embedding means explicit correspondences feature sets recovered 
darrell applied framework matching contours represented shape context distributions 
earlier combines low distortion embedding emd reported 
metric embedding graphs problem graph matching intractable subgraph graph assigned subgraph 
goal graph embedding map graphs alternative space approximating matching mapped graphs computationally tractable 
view embedding consistent assumption weight graph edge reflects probability nodes edge spans grouped part correspondence 
transformation mapping nodes graph points geometric space process known graph embedding 
shall see section points embedded graph nodes matched polynomial time 
ensure solution point matching problem embedded space reflects solution graph matching problem original graph space geometric structure points reflect topological structure graph 
requires embedding process ensure nodes grouped get mapped points close geometric proximity 
decade low distortion embedding recognized powerful tool designing efficient algorithms 
low distortion embedding metric spaces normed spaces consider mappings set points original metric space distance function set points host dimensional normed space pair certain parameter known distortion 
intuitively embedding enable reduce problems defined difficult metric spaces problems easier normed spaces 
clearly closer better target set mimics original set consequently distortion parameter critical characteristic embedding definition low distortion embedding maps set points original metric space set points target space 
domain graphs choose suitable metric graphs define distance vertices 
denote edge weighted graph real edge weights say metric vertices 
general ways define metric distances weighted graph 
best known metric shortest path metric length shortest path problem low distortion embedding long history case planar graphs general trees particular 
formally desired embedding subject conjecture conjecture planar graph shortest path metric graph embedding distortion 
conjecture proven case tree 
deterministic tree embedding algorithm matou sek suggesting map graphs trees small distortion adopt matou sek framework 
problem approximating fitting distance matrix tree metric known numerical taxonomy problem 
numerical taxonomy problem open problem general distance metrics explore approximation methods 
numerical taxonomy problem approximated converting distance matrix weaker ultrametric distance matrix 
ultra metric special type tree metric defined rooted trees distance root leaves tree approximation introduces small distortion 
metric ultra metric points max 
unfortunately ultra metric satisfy properties metric distance 
create general tree metric ultra metric need satisfy point condition see max fig 

metric tree representation euclidean distances nodes graph 
gesture image consists regions region representing entire hand shown 
complete graph captures euclidean distances centroids regions metric tree representation multi scale decomposition additional vertices 
metric satisfies point condition called additive metric metric additive tree metric see 
construction tree metric consist constructing ultra metric modifying ultra metric satisfy point condition 
approximation framework called centroid metric tree proposed 
algorithm follows step procedure outlined generates time 
specifically path length vertices mimic metric metric objects vn centroid metric exist labels vi vj tree centroid metric tree star vertex set weighted edge set vi vi vi 
easy see path lengths vi vj correspond vi vj details construction metric labeling metric distance see 
noted construction necessarily maintain vertex set invariant 
ensure embedding process extra vertices generated metric tree construction eliminated 
example constructing metric tree graph shown hierarchical blob decomposition image shown yields graph edge weights reflect euclidean distances nodes centroids corresponding regions shown 
metric tree representation graph shown 
note additional vertices introduced construction shown white removed 
metric tree approximation original graph concept caterpillar decomposition caterpillar dimension capture topological structure 
illustrate caterpillar decomposition rooted tree edge weights 
darkened paths root represent edge disjoint paths called level paths 
remove level paths tree left dashed edge disjoint paths 
level paths removing left additional connected components process repeated edges tree removed 
union paths called caterpillar decomposition denoted number levels called caterpillar dimension denoted cdim 
caterpillar decomposition constructed modified depthfirst search linear time 
caterpillar decomposition denote number leaves represent unique path root vertex segment weight follows path level second segment weight follows path level segment weight follows path level sequences referred decomposition sequence weight sequence respectively 
matou sek embedding metric tree approximation original graph caterpillar decomposition prerequisites matou sek embedding technique maps nodes metric tree points low dimensional euclidean space 
metric tree dimensionality embedding specified number paths caterpillar decomposition 
define embedding relevant coordinates indexed paths vector non zero coordinates corresponding paths decomposition sequence 
returning vector components defined level paths level paths 
furthermore due structure caterpillar decomposition vector non zero components 
details method 
important note embeddings produced graph embedding algorithm different dimensions defined distance preserving transformation translated rotated version graph embedding graph embedding 
order match embeddings perform registration step objective project distributions normed space 
resulting transformation expected minimize initial emd distributions 
details pca alignment technique applied weighted point sets 
spherical coding fig 

path partition tree 
previous embedding procedure suffers significant drawback 
graph embedded vector space dimensionality 
embeddings matched dimensionality reduction step required costly prone error 
section introduce novel linear time method embed metric trees vector spaces prescribed dimensionality avoiding need dimensionality reduction step 
matou sek embedding embedding caterpillar decomposition metric tree 
paths decomposition embedded maximally spaced rays fixed dimension metric space 
construction rays share origin points 
main step embedding identify principal direction ray guarantee rays maximally apart 
practice achieved placing maximally spaced points surface unit sphere unit length vectors origin points principle directions rays 
may observe matou sek method special case embedding dimension embedding space equal number paths decomposition corresponding rays form orthogonal basis embedding space 
spherical code finite set points surface multi dimensional unit radius sphere 
purposes identify spherical code embedding parent node center sphere child nodes points sphere 
minimize distortion distances child nodes interested positioning points sphere maximize minimum distance pair points 
equivalently try minimize radius multi dimensional sphere points placed surface points angular distance fig 

minimum distance minimum angle points 
fig 

edge weighted tree spherical code 
cartesian coordinates vertices 

recall angular distance points acute angle subtended origin 
shows relationship minimum distance minimum angle points 
embedding framework best illustrated example weighted tree embedded shown 
ease visualization limit discussion quadrant 
weighted tree contains paths caterpillar decomposition 
embedding root assigned origin 
seek set vectors path caterpillar decomposition inner products minimized endpoints maximally apart 
vectors define general directions vertices path caterpillar decomposition embedded 
vectors caterpillar paths belonging subtree rooted vertex vector path belonging subtree rooted vertex effectively subdivides quadrant cones cb cd 
volume cones function number caterpillar paths belonging subtrees rooted cone cd turn divided smaller cones ce cf corresponding subtrees rooted respectively 
extreme rays sub cones cb ce cf correspond directions defining embedding 
complete embedding translate sub cones away origin directional rays positions defined path lengths tree 
example embed point move extremal ray cb embed 
similarly sub cone cd translated extremal ray embedding 
dimensional euclidean space rd computing embedding involved 
denote number paths caterpillar decomposition 
embedding procedure defines vectors rd large angle respect surface hypersphere sd radius vectors chosen way endpoints surface spherical distance 
refer vectors separated 
consider set hyperplanes hi hi surfaces spheres dimension recursively construct separated vectors 
construction stops sphere circle surface point dimensions 
known dl minimum angle vectors provides separated vectors 
vectors emanating origin 
embedding directions established proceed embedding vertices 
embedding procedure starts root embedded origin embeds vertices embedding parents 
vertex metric tree associate subtree tv set vectors cv number vectors cv equals number paths caterpillar decomposition tv 
initially root entire set vectors 
consider subtree rooted vertex assume vertex children vk 
partition set vectors subsets number vectors subset sv equals number leaves tv 
embed vertex vl position wl xl wl length edge vl xl vector cv 
recursively repeat process subtree rooted child subtrees consider 
natural question may ask dimensionality euclidean space chosen embedding preserves pairwise distances minimum distortion 
answer question conducted set experiments randomly selected edge weighted trees embedded euclidean spaces varying dimensions measured average distortion fig 

trade distortion dimension 
increasing dimensionality embedding space reduce distortion 
trend continue indefinitely produce isometric embeddings 
dimension 
tree method measure average distortion particular dimension 
computed pairwise node distances embedding 
measured maximum factor pairwise distance changed embedding 
repeating procedure trees average distortion particular dimension calculated 
trade distortion dimension shown 
noted increasing dimensionality embedding space improve quality decreasing distortion trend continue indefinitely produce isometric embeddings 
attributed fact original distances non additive making isometric embedding impossible 
encoding directed edges distance metric defined graph structure undirected edge weights 
embedding preserved distance metric failed preserve oriented relations hierarchical relations common scale space coarse fine structures 
due fact oriented relations satisfy symmetry property metric 
retain important information embedding moving nodes node attributes technique encoding directed topological structure directed geometric structure shape context 
encoding node attributes oriented edges incident node requires computing distributions attributes assigning node 
example node single parent coarser scale children finer scale encode relative scale distribution histogram node attribute 
resulting attribute provides contextual signature node matcher section reduce matching ambiguity 
motivate encoding context directed graphs qualitative shape representation blob ridge decomposition example graphs shown details 
blobs compact regions ridges elongated structures extracted scale space maxima norm lxx lyy 
lxx lyy xy respectively 
color images feature detection performed channels 
represent spatial extent detected image structure windowed second moment matrix tint computed detected feature position integration scale tint proportional scale detected image feature 
orientation anisotropy feature estimated eigenvalues corresponding eigenvectors 
spatial extent feature scale anisotropy orientation 
shows image hand extracted features superimposed 
blobs ridges graphically represented circles ellipses defining support regions radii ridges minor radius proportional spatially overlapping aligned ridges linked spatially overlapping blobs merged 
directed acyclic graphs built coarse fine manner 
specifically graph embedded 
feature fig 

feature extraction extracted blobs ridges appropriate scales 
node graph associated node blob ridge number attributes including position orientation support region 
feature coarsest scale chosen root 
finer scale features overlap root children hierarchical edges 
children turn select overlapping features finer scales children unassigned features feature coarsest scale chosen new root 
children root selected unassigned assigned features process repeated features assigned graph 
child node way multiple parents 
yield rooted graph needed matching step virtual top root node inserted parent root nodes image 
associated edge number important geometric attributes 
edge directed vertex va representing feature fa vertex vb representing feature fb define attributes shown distance 
measures inter feature distance associated edge smallest distance support region fa support region fb normalized largest radii ra rb distance centers normalized radius ra fa direction distance vector centers 
relative orientation 
relative orientation fa fb 
bearing 
bearing feature fb seen feature fa defined angle distance vector xb xa respect orientation measured counter clockwise 
scale ratio 
scale invariant relation fa fb ratio scales tfa examples graphs hand images showing hierarchical edges shown 
pair vertices ru denote attribute vector fig 

directed graph relations resulting node centric distributions 
sociated pair 
entries vector represent set oriented relations example domain blob graphs distance relative orientation bearing scale ratio shown 
vertex denote set vertices adjacent relation denote set values relation vertices corresponds entry vector ru 
feature vector pu point set observe entry vector pu considered local distribution histogram feature neighborhood adopt method distance function vectors pu pp computed weighted combination hausdorff distances values distribution matching embedding vertex labeled graphs normed spaces reduced problem matching graphs matching weighted distributions points normed spaces 
pair weighted distributions normed space earth mover distance emd framework applied find optimal match distributions 
emd approach computes minimum amount defined terms displacements masses associated points takes transform distribution 
emd approach assumes distance measure single features called ground distance 
emd lifts distance individual features full distributions 
main advantage emd lies fact subsumes histogram distances permits partial matches natural way 
important property allows similarity measure deal uneven clusters noisy datasets 
details method extension 
standard emd formulation assumes distributions aligned 
recall translated rotated version graph embedding graph embedding 
accommodate pairs distributions rigidly embedded cohen guibas extended definition emd originally applicable pairs fixed sets points allow sets undergo transformation 
suggested iterative process call ft short optimal flow optimal transformation achieves local minimum objective function 
details compute optimal transformation 
final algorithm algorithm graph matching combination previous procedures summarized follows algorithm graph matching compute metric tree ti corresponding gi section see details 
construct low distortion embeddings ei fi ti ti bi algorithms section 
compute emd ei applying ft iteration computing optimal transformation section see details 
interpret resulting optimal flow ei vertex matching gi complexity analysis algorithm proceed analyze computational complexity algorithm 
computing metric tree ti graph gi takes step see details 
complexity step depends complexity corresponding embedding algorithm 
may take graph dependent dimensionality done linear time spherical coding 
computing emd step transportation problem formulated linear programming problem solved network flow algorithm 
ft iteration alternates finding optimal transformation flow optimum flow transformation 
exact bound complexity iterative emd known experiments iterations necessary matching procedure converge 
step mapping emd solution back graph solution 
assuming number ft iterations constant complexity algorithm 
note complexity improved computationally efficient algorithms transportation problem 
example atkinson vaidya log log algorithm solving transportation problem magnitude largest supply demand emd formulation total number nodes 
experiments demonstrate approach graph matching apply problem view object recognition different graph shape representations 
turn domain view object recognition silhouettes 
view object silhouette represented undirected shock tree nodes represent shocks equivalently skeleton points edges connect adjacent shock points 
tree suitable embedding emd matching rooted node edge weighted 
tree constructed tree discrete skeleton follows 
assume shock point discrete skeleton labeled dimensional vector euclidean coordinates point radius maximal bi tangent circle centered point 
shock point node newly constructed graph 
pair shock points connected edge weight euclidean distance points vector labels 
node edge weights reflect mass grouping strength respectively 
graph converted tree computing minimum spanning tree 
tree nodes correspond shock points tree edges connect nearby 
choose root tree node minimizes sum tree shortest path distances nodes 
node weighted note representation closely related siddiqi shock graph nodes shock points clustered edges directed 
vector essentially encodes local shape information silhouette 
seek canonical node root note shortest path distance matrix structure embedding invariant choice root 
fig 

left silhouette medial axis 
right shock tree constructed medial axis 
darker nodes reflect larger radii 
fig 

sample views objects 
proportionally radius total tree weight 
effect conversion discrete skeleton shock tree replaces step computation metric tree matching algorithm 
illustration procedure 
left portion shows initial silhouette shock points skeleton 
right portion depicts constructed shock tree 
darker nodes correspond fragments average radii larger 
reduce size graph subdivided skeleton number small fragments approximately shock points 
fragment labeled vector average vector labels fragment constituent shock points 
database consists silhouettes objects views object 
representative view object shown 
experiments compute shock tree representation silhouette matou sek embedding embed tree normed space low distortion 
procedure results database weighted point sets representing embedded graph 
object rotated depth views undergo distortion parts 
results skeletal branches varying length setting ideal matching problem 
test approach randomly selected equidistant views object computed distances views remaining database entries distance view zero 
compute distance objects views object find closest view object average resulting distances 
object distances summarized table 
small square table corresponds set matching results views objects associated row column 
simplicity visualization computed normalized matching score block 
magnitudes distances denoted shades gray black white representing smallest largest distance respectively 
due symmetry resulting distances included upper triangle results 
intra object distances shown main diagonal close zero 
average intra object distance objects 
table inter object distances near intra object distances cases binocular clock camera phone car teapot 
average inter object distance objects 
better understand differences recognition rates different objects selected subset matching results views teapot taken respectively shown table 
due highly symmetric structure object implying neighboring views similar distance view teapot neighboring view closer distance objects views 
conversely table illustrates fact due low view sampling resolution certain views certain objects similar certain views objects neighboring views object 
example best non identical match third view cup view phone 
closer inspection degenerate views turns considerable similarity shock tree representations 
hand views cup optimally matched views phone 
top row shows adjacent views teapot 
bottom row illustrates feature correspondences matching algorithm yields 
corresponding node clusters graph mappings shaded color 
note extraneous branch left view matched right view reflecting method ability deal noise 
matching statistics observed experiments closest match selected algorithm neighboring view correct object 
expect increased view sampling resolution ensuring object view exists similar neighboring view error rate decrease significantly 
repeated experiment spherical embedding resulting error rate 
clear improvement performance reduced computational cost 
noted embedding matching procedures fig 

summary matchings object silhouettes 
entry table corresponds set matching results views objects associated row column 
shade gray cell denotes average matching distance block black white representing smallest largest distances respectively 
averaging experiments intra object distance average inter object 
table shows close look matching results views teapot 
distance object view neighboring view closer distance object view objects views 
table depicts subset results separate blocks highlighting cases certain views objects similar views objects neighboring views object 
accommodate perturbation noise occlusion 
due fact path partitions unperturbed portions graph unaffected perturbation 
projections unperturbed nodes unaffected perturbation 
matching procedure iterative process driven flow optimization turn depends local features attributes act matching constraints 
test sensitivity matching algorithm perturbation query performed experiment objects 
view fig 

illustration correspondences 
top row shows adjacent views teapot 
bottom row illustrates feature correspondences matching algorithm yields 
corresponding node clusters graph mappings shaded color 
turn query replacement perturbed deleting randomly selected connected subset skeleton points size chosen randomly fall total number skeleton points 
closest view query unperturbed view matching scored correct 
objects average correct score reflecting algorithm robustness missing data form occlusion 
spherical embedding observed average correct score 
turn domain blob graphs brief overview section 
node edge weights reflect mass grouping strength respectively results applying method images shown feature correspondences colored 
example set blobs ridges describing finger left image mapped set blobs ridges corresponding finger right image 
provide comprehensive evaluation tested framework separate image libraries columbia university coil objects views object eth zurich eth categories exemplars category views exemplar 
view compute arguably coil database ideal testbed image representation case multi scale blob decomposition goal describe coarse shape object 
pca image characterization coil database originally created multi scale blob ridge decomposition provides invariance translation rotation scale minor part deformation fig 

applying algorithm images 
feature correspondences colored 
fig 

views sample objects columbia university image library coil eth zurich eth image set 
multi scale blob decomposition algorithm described 
compute tree metric corresponding complete edge weighted graph defined regions scale space decomposition view 
edge weights computed function distances centroids regions scale space representation 
tree embedded normed space prescribed dimension 
procedure results databases weighted point sets point set representing embedded graph 
coil database removing representative views object view removed views queries remaining view database views objects 
articulation minor class shape deformation 
standard database recognition testing coil database exercise invariants 
perturbation recognition rate coil recognition rate eth table recognition rate function increasing perturbation 
note baseline recognition rate perturbation coil eth 
compute distance query view remaining database views proposed matching algorithm 
ideally query view object vi matching algorithm return neighboring view 
classify correct matching 
matching statistics observe spherical embedding experiments closest match selected algorithm neighboring view 
mismatches closest view belonged object cases 
comparison matou sek embedding yielded matching error mismatches closest view belonged object cases 
eth database chose subset objects categories full sampling views object 
object removed views database view time removed view query remaining view database 
computed distance query view remaining database views 
criteria correct classification similar coil experiment 
experiments showed experiments spherical embedding closest match selected algorithm neighboring view 
mismatches closest view belonged object cases category cases 
matou sek embedding experiments closest view neighboring view mismatches closest view belonged correct object cases category cases 
results clearly demonstrate improved performance offered spherical embedding technique 
demonstrate framework robustness performed perturbation studies coil eth databases represented spherical embedding 
experiments identical coil eth experiments described query graph perturbed adding deleting nodes adjoining edges 
choice spherical embedding motivated better performance matou sek embedding 
results shown table reveal skeleton tree matching example error rates increase gracefully function increased perturbation 
noted skeleton tree blob graph experiments considered worst case reasons 
sampling resolutions viewing sphere high case meaning immediate neighbors particular view may similar 
high similarity neighboring views argued matching criterion overly harsh measure viewpoint distance views away closest match severe 
case anticipate fewer samples object collapse similar views view classes choose prototype aspect class neighboring views dissimilar matching results improve 
second importantly objects symmetric query neighbor identical view object view chosen equal distance scored error 
comparison approaches addition demonstrating effectiveness matching algorithm applied shape retrieval compare matching results leading graph matching algorithms matching algorithm proposed pelillo association graphs matching algorithm proposed sebastian graph edit distance 
comparison rutgers tool database consists shapes organized classes brush hammer screwdriver wrench hand profile horse 
classes hammer screwdriver wrench grouped broader tools category 
sample views class shown 
experiment remove shape query database compare remaining database shapes 
shape put back database procedure repeated second database shape shapes query 
computing similarity values database pair look top matches see category shapes belong class query 
ideally object shapes database top entries belong class query 
shows examples feature matching results obtained algorithm objects rutgers tools database 
results reported correct matches retrieved database colored yellow entries colored red 
considering best matches observe pelillo shock tree approach total mismatched entries sebastian graph edit distance framework approach yield mismatched entry 
addition con fig 

results matching skeleton graphs pairs shapes rutgers tools database 
colors indicate corresponding segments 
observe correspondences intuitive cases 
fig 

sample views objects rutgers tools database 
category matches shock tree graph edit distance approaches yield total errors approach yields errors 
group hammer screwdriver wrench shapes tools category matching approach produces correct matching approaches mismatched entries 
expect need correspondences increases graph edit distance algorithm algorithm yield improved scores 
limitations proposed algorithm applied matching problems undirected directed graphs 
approach limitations 
optimistic reader think embedding approach emd framework solve graph matching problem 
efficacy contingent appropriate edge weights original graph 
edge weights ultimately govern proximity embedded points propensity combined emd step edge weights distances effectively perceptual grouping abstraction heuristic features nodes 
chosen defined poorly emd step converge meaningful solution 
framework assumes node attributes mapped vector masses splitting combining emd computation reflects meaningful correspondences nodes original graphs 
emd global distance tries account points 
experiments shown framework robust perturbation graphs terms missing spurious features method global 
graph includes node representing occluder large mass presence adverse effect computed flows algorithm selectively exclude node 
note fig 

comparison leading graph matching algorithms pelillo left sebastian center algorithm right 
case top matched database objects sorted similarity query 
correct matches colored yellow mismatched entries colored red matches categories colored white 
unique attributes shared nodes matched attributes act constraints emd matching ensuring dirt pile particular color flow holes color 
currently exploring approaches emd compute local correspondences grow correspondences 
ability match image features critical prerequisite constrained object recognition object categorization 
rigid matching schemes assume feature correspondence fail match object instances commonality exists higher level abstraction 
set image features pairwise relations complexity resulting graph matching problem intractable 
novel computationally efficient approximation algorithm matching graphs 
constructing metric tree representations graphs 
embed geometric space low distortion novel encodings graph vertices 
graph matching geometric point matching problem earth mover distance algorithm ideally suited 
mapping node geometric structural context graph attribute vector assigned corresponding point extend technique deal hierarchical graphs represent multi scale structures 
successfully evaluated technique image databases different graph multi scale shape representations capture coarse shape structure include set structural perturbation experiments establish algorithm robustness graph noise 
approach compares favorably leading graph matching algorithms specific image database 
acknowledgments ali shokoufandeh acknowledges partial support provided national science foundation office naval research 
supported part nsf 
sven dickinson acknowledges support nserc iris nsf 
authors nayar bernt schiele coil eth databases respectively 
bafna farach paterson thorup 
approximability numerical taxonomy fitting distances tree metrics 
siam journal computing 
athitsos alon sclaroff 
boostmap method efficient approximate similarity rankings 
proceedings ieee con ference computer vision pattern recognition washington dc june 
david atkinson pravin vaidya 
geometry solve transportation problem plane 
algorithmica 
bell 
exponential numbers 
amer 
math 
monthly 
belongie malik puzicha 
shape matching object recognition shape contexts 
ieee pami april 
buneman 
recovery trees measures dissimilarity 
kendall editors mathematics archaeological historical sciences pages 
edinburgh university press edinburgh 
hancock 
correspondence matching modal clusters 
ieee transactions pattern analysis machine intelligence 
cohen guibas 
earth mover distance transformation sets 
proceedings th international conference computer vision pages kerkyra greece 
conway sloane 
sphere packing lattices groups 
springer verlag new york 
shokoufandeh dickinson 
feature matching spherical coding directed graphs 
proceedings th european conference computer vision prague czech republic may 
shokoufandeh dickinson 
matching scale space feature hierarchies metric embedding 
scale space methods computer vision th international conference pages isle uk june 
gionis piotr indyk rajeev motwani 
similarity search high dimensions hashing 
vldb pages 
gold rangarajan 
graduated assignment algorithm graph matching 
ieee transactions pattern analysis machine intelligence 
gupta 
embedding tree metrics low dimensional euclidean spaces 
proceedings annual acm symposium theory computing pages 
gupta newman rabinovich sinclair 
cuts trees embeddings 
proceedings symposium foundations computer 
indyk 
algorithmic aspects geometric embeddings 
proceedings nd annual symposium foundations computer science 
darrell 
fast contour matching approximate earth mover distance 
proc 
ieee conf 
comp 
vision pattern recognition pages 
ieee computer society 
dickinson 
generic model abstraction examples 
ieee pami 
shokoufandeh dickinson 
graph matching low distortion embedding 
proceedings ieee conference computer vision pattern recognition madison wi june 
caelli 
inexact matching graph eigenspace clustering models 
proceedings spr volume pages 
springer 
schiele 
analyzing appearance contour methods object categorization 
ieee conference computer vision pattern recognition cvpr madison wi june 
lindeberg 
edge detection ridge detection automatic scale selection 
international journal computer vision 
lindeberg 
feature detection automatic scale selection 
international journal computer vision 

liu geiger 
approximate tree matching shape similarity 
proceedings th international conference computer vision pages kerkyra greece 
matou sek 
embedding trees uniformly convex banach spaces 
israel journal mathematics 
messmer bunke 
efficient error tolerant subgraph isomorphism detection 
bruckstein editors shape structure pattern recognition pages 
world scientific publ 

murase nayar 
visual learning recognition objects appearance 
international journal computer vision 
myers wilson hancock 
bayesian graph edit distance 
ieee pami 
pelillo siddiqi zucker 
matching hierarchical structures association graphs 
ieee transactions pattern analysis machine intelligence november 
rubner tomasi guibas 
earth mover distance metric image retrieval 
international journal computer vision 
scott longuet higgins 
algorithm associating features patterns 
proceedings royal society london 
sebastian klein kimia 
recognition shapes editing shock graphs 
ieee international conference computer vision pages 
sebastian klein kimia 
recognition shapes editing shock graphs 
ieee transactions pattern analysis machine intelligence 
shokoufandeh dickinson jonsson lindeberg 
representation matching qualitative shape multiple scales 
proceedings eccv pages copenhagen may 
shokoufandeh dickinson nsson lindeberg 
representation matching qualitative shape multiple scales 
proceedings th european conference computer vision volume pages 
shokoufandeh dickinson siddiqi zucker 
indexing hierarchical structures graph spectra 
ieee pami 
siddiqi shokoufandeh dickinson zucker 
shock graphs shape matching 
international journal computer vision 

