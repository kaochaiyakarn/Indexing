gsfl workflow framework grid services sriram krishnan patrick gregor von laszewski mathematics computer science division argonne national laboratory argonne il indiana university bloomington illinois institute technology chicago il open grid services architecture ogsa tries address challenge integrating services spread distributed heterogenous dynamic virtual organizations concepts technologies grid web service communities 
web service community realized web services reach full potential exists mechanism describe various interactions services dynamically compose new services existing ones 
true case grid services 
analyze existing technologies address workflow web services try leverage grid services different needs standard web services 
discuss special needs grid services flow language gsfl addresses grid services ogsa framework 
key words grid ogsa grid services web services workflow web services approach rapidly gaining momentum industry 
defines web service software application identified uri interfaces bindings capable defined described discovered xml artifacts support direct interactions software applications xml messages internet protocols 
general descriptive definition web service defined platform implementation independent software component described service description language published registry services discovered standard mechanisms invoked declared api usually network composed services goal web services interoperability 
follows definitions requestor access web services standard mechanisms 
ideal world requestor interface application claims web service irrespective language environment 
web services approach appealing modern enterprise inter organizational computing systems 
grid computing involves agglomeration variety resources dynamic distributed virtual organizations :10.1.1.129.8850
grid technologies infrastructures support sharing coordinated diverse resources 
grid technologies currently seeing widespread adoption scientific computing community 
apart problems inherent dealing resources viz 
algorithms problem solving techniques resource management security instrumentation performance analysis network infrastructure grid technologies solve similar problems ones addressed web services viz 
description discovery communication remote invocation fact recognized grid community resulting development open grid services architecture ogsa :10.1.1.114.2815
draft article subject revision update july technology survey ogsa result lessons learned developing globus toolkit de facto standard grid computing 
ogsa uses web services description language wsdl achieve self describing discoverable services 
defines set standard interfaces grid service may export enable features discovery service lookup lifetime management notification credential management 
similar vein web services technology grid services realize full potential mechanism dynamically compose new services agglomeration existing ones 
order describe order services methods execute way export service 
context define term workflow set rules define interactions set services order composed meta service 
show current state workflow languages web services relate grid services 
point shortcomings languages context grid 
solution propose grid services flow language gsfl describe detail 
research problems posed approach take 
technology survey field workflow languages web services seen lot activity past 
variety methods proposed standards major web services software providers 
impossible thorough survey existing technologies due high rate change field focus larger projects getting attention time 
web services flow language wsfl wsfl proposed ibm approaches web services workflow 
wsfl describes composition web services flow model global model 
flow model defines series activities represent operations composite web service specifies order activities execute 
defines flow control data various activities respectively 
cases data flow closely follow control flow 
wsfl flexible accommodate cases may true 
global model defines activities composite web service mapped operations individual web services call 
flow model describes orchestration various activities workflow global model describes implemented participating web services 
wsfl identifies services participating workflow locator element supports bindings static wsdl wsfl definition provided 
local service implementation local 
uddi service implementation looked uddi api 
mobility service provider referenced message generated activity 
service provider restricted flow model 
wsfl supports lifecycle operations flow model composite web services 
supports operations spawn call blocking spawn suspend resume terminate 
advantages wsfl logical consistency wsdl ability define web services recursively composed web services 
version wsfl released ibm may 
written wsfl 
popular implementation wsfl available groups working 
draft article subject revision update july technology survey xlang web services business process design xlang web services business process design xlang proposal microsoft language model business processes autonomous agents 
wsdl unit action operation operation stateless service stock quote stateful service interaction defines process 
third model business processes may autonomous agents supply chain 
chain input output messages occur defined order deemed service process 
calculus theory connection synchronizations 
xlang defines set operations extensions standard wsdl operations assist modeling delays allow thread stall specified time period condition met raise method raise exceptions certain actions process control combines actions conditional iterative statements correlation provides method declaring longer running conversations transaction support allows definition rollback procedures action execution fails contracts create services facilitating way bindings ports technologies xlang evolving 
currently lacks methods add services dynamically business process mechanism export methods services part workflow 
addressed revisions language 
little written xlang initial release may 
web services conversation language wscl wscl conversation language framework proposed hewlett packard modeling sequencing interactions operations interface 
fills gap mere interface definition languages specify choreography complex process flow languages describe complex global multi party conversations processes 
major elements wscl specification document type descriptions types documents service accept transmit defined xml schemas 
interactions model actions conversation participants 
transitions specify ordering relationships interactions 
conversations list interactions transitions conversation 
conversations public interfaces supported service 
add additional semantics wsdl service specifying possible ordering operations 
wscl address recursive composition web services aim grid services 
related web services choreography interface wsci proposed sun sap bea language aimed application application integration tighter level proposed xlang 
wsci proposed june fairly new time writing 
business process modeling language bpml meta language modeling business processes 
bpml provides abstracted execution model collaborative transactional business processes concept transactional finite state machine 
dagman meta scheduler condor manages dependencies jobs 
despite fact dagman deal workflow web services concept directed acyclic graph represent set programs inputs outputs execution inter dependent applied describe dependencies web services 
xcat application factories address workflow issues grid components common component architecture cca framework 
xcat allows components connected dynamically making possible build applications ways possible standard web services model 
draft article subject revision update july grid workflow requirements grid workflow requirements invocation standard methods initial data final data web services workflow engine control data service service service data transferred peer peer methods web services workflow model result survey analysis grid cases established set requirements workflow specification grid 
section describe requirements existing web service technologies address despite providing invaluable techniques reuse 
just web service technologies aim grid workflow specification allow specific activities implemented individual services exported activities workflow 
allow exported activities trigger chain activities 
current technologies wsfl address issue effectively 
try incorporate features wsfl grid services flow language 
furthermore activities exported manner described manner service 
sense specification rich describe workflow wsdl workflow entity henceforth referred workflow coordinator auto generated specification 
workflow coordinator able handle methods dynamically exported composition various activities workflow way clients access standard tools deal individual services 
important requirement recursive composition services 
observed pointed existing web services define workflow way workflow engine intermediate step application sequence shown 
current set workflow technologies designed business business communication may moderate level data transmission web services 
result workflow engine real bottleneck 
grid services exchanging large amounts data norm 
having central workflow engine relay data services bad idea case 
workflow specification needs able allow communication services depicted 
mention ogsa adds extensions wsdl order address grid specific needs 
addresses communication grid services allow services carry asynchronous delivery messages 
needed gsfl provide mechanism connect obviating need workflow engine mediate step 
additionally ogsa uses registries factories locating creating grid services respectively 
appropriately handled gsfl 
draft article subject revision update july gsfl overview invocation standard methods initial data final data grid services workflow coordinator control small amounts data service service service data transferred peer peer notifications grid services workflow model conceivable certain grid services workflow executing 
may due fact services need execute earlier run weeks service executes needs data bootstrap 
grid workflow specification able handle particular need 
additionally able handle instantiation individual grid services method workflow instance basis 
case grid services instantiated workflow instance basis certain activities exported workflow may function certain grid service may run completion may instantiated 
case certain semantics need added ordering exported activities suggested wscl 
section describe grid services flow language address requirements specified 
gsfl overview grid services flow language xml language allows specification workflow descriptions grid services ogsa framework 
defined xml schemas 
simplified architecture shown 
important features expand subsections 
service providers list services part workflow 
activity model describes list important activities workflow 
composition model describes interactions individual services 
lifecycle model describes lifecycle various activities services part workflow 
service providers services part workflow specified list 
service providers identified gsfl document unique name specified part definition 
definition contains type service provider type grid service specified wsdl specification 
service providers located locator element allows looking service providers draft article subject revision update july gsfl overview activity model gsfl definition name target namespace scope imports service providers activity model export model exported activities activity info control model data model control data data control links lifecycle model service lifecycle precedence links list imports namespace location list providers name type locator data links list activities name source composition model notification model notification links activity lifecycle precedence links architecture gsfl number ways 
services located statically static url point running service 
started factories handle available gsfl document 
services looked registries 
activity model lists operations belonging individual service providers role play workflow 
contains list activities name identification purposes source operation web service defined element 
element contains names operation porttype servicename particular operation 
composition model describes different grid services composed form new grid service 
describes control data flow various operations services direct communication peer peer fashion 
consists subparts 
export model contains list activities exported operations workflow process 
client invoke operations workflow instance standard mechanisms 
workflow instance viewed standard grid service recursively part workflow process 
activity exported control data flow described datamodel respectively 
describes chain activities invoked exported activity invoked client 
element contains attribute activity executed draft article subject revision update july gsfl overview composition model service notification source control link data link notification link exported port notification sink composition model action service exported activity invoked 
contains series precedence list activities need successively invoked part exported activity 
datamodel describes flow data occurs exported activity invoked 
flow may necessarily mirror flow control various activities 
datamodel element contains attribute shown data signifies activity receive data provided input exported activity 
attribute shown data designates activity data returned caller 
gsfl document provides information datamodel dynamically generate wsdl activities exported support invocation exported activities dynamically explain section 
notification model provides solution problem workflow engine mediating step activity 
mentioned ogsa services communicate 
provides mechanism link sources sinks vice versa particular topic 
services communicate large amounts data having need go workflow engine 
users control data models communicate control messages small amounts data notification messages recommended form communication large amounts data 
composition model illustrated simple example shown 
services constitute workflow 
notification model consists single notification link connects notification source service notification sink service export model consists couple activities exported draft article subject revision update july implementation details lifecycle model shown detail 
exported activities implemented operations service operation service control model exported activity consists control links operation service serves exported activity 
data model consists single data link may possibly operation may need data invoked 
example data links need necessarily control links 
operation serves operation serves exported activity 
invocation exported activity trigger set operations described flow control data described different types links 
lifecycle model addresses order services activities execute 
contains list precedence links describing order services supposed execute 
services need instantiated start started preceding services stopped executing 
uses scope attribute workflow session application 
session scope means state maintained calls workflow engine 
calls engine legal 
services instantiated call services alive calls 
application scope means state maintained workflow engine calls 
services instantiated instance workflow 
calls workflow engine may valid services implement activities may alive 
add describes order invoked 
words activities invoked certain activities successfully invoked checkout operation online shopping system may invoked buy operations 
ensure services alive calls proper order 
believe addressed requirements workflow grid services design 
discuss issues involved implementation gsfl engine 
implementation details basis prototypical development gsfl selected technology preview 
java implementation current grid services specification utilizing apache tomcat apache axis 
tomcat servlet container official implementation java servlet pages technologies axis implementation simple object access protocol soap submission 
subsections describe important parts gsfl implementation 
gsfl parsing castor parsing gsfl schema generating java bindings 
castor open source data binding framework java generate source java classes representing xml schema 
provides methods xml documents conforming particular schema corresponding java objects vice versa 
castor auto generate java bindings xml schema obviating need write code 
significantly reduced code development time 
castor maps gsfl schema appropriate java classes understanding semantics associated elements schema castor idea import type gsfl schema information namespace location import gsfl document 
castor map type import java class having fields namespace location appropriate getter methods 
draft article subject revision update july implementation details wsdl auto generation client servlet hosting environment ogsa axis gsfl provider gsfl coordinator target service target service client sends request dynamically exported method hosting environment receives request determines processing service url gsfl provider maps call generic coordinator function gsfl coordinator issues request target service target service gsfl control flow target service perform action add wrapper castor generated classes situations handled 
easier having write code 
wsdl auto generation apart castor java bindings gsfl document wsdl dealing wsdl documents individual services 
wsdl toolkit allows creation representation manipulation wsdl documents describing services 
described section gsfl document contains information activities exported 
wsdl services participating workflow available types input output messages messages easily activities 
information rest wsdl operations ports easily derived gsfl 
key auto generation wsdl workflow represent information gsfl schema 
gsfl coordinator heart gsfl workflow service service creates virtual ports services map processes internal workflow 
ports virtual physically exist 
client invoke methods ports get mapped set calls respect 
diagram representing usual flow control shown 
client wishing execute gsfl workflow begins instance gsfl coordinator standard ogsa factory methods 
coordinator instance sent gsfl represents workflow 
receipt gsfl document coordinator dynamically generates wsdl document newly exported operations included 
wsdl clients wishing execute workflow operations dynamically exported 
client calls operation exported gsfl coordinator request sent servlet container ogsa web application 
ogsa utilizes mappings config send call implemented extension standard ogsa class responsible dispatching incoming requests correct service instance url draft article subject revision update july request 
standard provider invocation failed operation physically exist gsfl coordinator 
custom provider intercepts call sends generic function coordinator 
information provided gsfl document coordinator processes request maps operation set calls fact implemented set services participating workflow 
provider provisions differentiate calls operations dynamically exported ports static ones 
static operations interest auto generates wsdl coordinator inclusive dynamic ports described section 
gsfl example example possible gsfl document filtered search service seen 
gsfl document shown contains composition model shown additions 
consists service providers activities part workflow viz 
listed activity model 
export model consists exported activities pqr st composition pqr explained section 
activity st composed activities consists control link data link case control data flows identical 
scope workflow session lifecycle model workflow consists service lifecycle 
shows services active time start done 
despite fact shows toy example demonstrates various constructs language ease workflow defined individual services 
described grid services flow language gsfl workflow framework grid services 
surveyed existing technology addresses workflow web services investigated applicability grid services 
existing web services technologies provided number desirable features reuse certain requirements peer peer service interaction complicated lifecycle management services lacking 
designed gsfl addresses requirements able integrate features provided existing web service technologies 
broad areas application enhancement possible grid services flow language 
progress language continue evolve depending requirements grid community 
ideas features include ability handle process exceptions similar xlang automatic integration graphical workflow editor enhanced ordering tasks workflow possibly constructs loops switch statements 
simple object access protocol soap 
www org tr soap may 
uddi technical white september 
universal description discovery integration discovering web services 
xml schema part primer 
www org tr xmlschema may 
castor 
castor org 
condor high throughput computing 
www cs wisc edu condor 
dagman directed acyclic graph manager 
www cs wisc edu condor dagman 
draft article subject revision update july definitions name sample scope session www mcs anl gov gsfl list service providers name type locator type factory handle localhost ogsa services name type locator type factory handle localhost ogsa services name type locator type factory handle localhost ogsa services list activities activity name source servicename porttype operation activity activity name source servicename porttype operation activity activity name source servicename porttype operation activity activity name source servicename porttype operation activity activity name source servicename porttype operation activity composition model name pqr porttype label link source target label link source target datamodel label link source sink datamodel name st porttype label link source target datamodel label link source sink datamodel label link source sink topic ab lifecycle services label link parent element servicename element servicename parent child element servicename child definitions sample gsfl document draft article subject revision update july globus project 
www globus org june 
web services description language java toolkit wsdl 
www ibm com developerworks projects wsdl july 
world wide web consortium 
www org june 
arkin 
business process modelling language 
www bpmi org downloads bpml spec zip june 
arkin sid scott wolfgang david orchard stefano karsten susan pal nagy 
web services choreography interface 
sun com software xml developers wsci index html june 
version 
armstrong gannon geist keahey kohn parker 
common component architecture high performance parallel computing 
proceedings high performance distributed computing pages redondo beach california 
cca forum berners lee fielding masinter 
uniform resource identifiers uri generic syntax 
www ietf org rfc rfc txt august 
erik christensen francisco curbera greg meredith weerawarana 
web services description language 
www org tr wsdl march 
revision march 
distributed systems department pervasive collaborative computing environment project lbl 
quarterly reports 
www itg lbl gov quarterly reports html april 
foster kesselman editors 
grid blueprint computing infrastructure 
morgan kaufmann publishers july 
ian foster carl kesselman jeffrey nick steven tuecke :10.1.1.114.2815
physiology grid open grid services architecture distributed systems integration 
www globus org research papers ogsa pdf january 
ian foster carl kesselman steve tuecke :10.1.1.129.8850
anatomy grid enabling scalable virtual organizations 
international journal supercomputing applications 
dennis gannon sriram krishnan govindaraju ramakrishnan aleksander 
grid web services application factories 
www extreme indiana edu xcat pdf june 
steve graham simeon doug davis glen daniels nakamura 
building web services java 
sams 
frank leymann 
web services flow language 
www ibm com software solutions webservices pdf wsfl pdf may 
technology preview release 
www globus org ogsa releases june 
apache jakarta project 
apache tomcat 
jakarta apache org tomcat june 
apache xml project 
apache axis 
xml apache org axis june 
sun microsystems java server pages 
java sun com products jsp 
sun microsystems java servlet technology 
java sun com products servlet index html 
satish thatte 
xlang web services business process design 
www com team xml xlang default htm 
hewlett packard 
web services conversation language wscl 
www org tr wscl march 
steven tuecke karl czajkowski ian foster jeffrey frey steve graham carl kesselman 
grid service specification draft 
www org wg drafts gs spec draft pdf june 
draft article subject revision update july 
