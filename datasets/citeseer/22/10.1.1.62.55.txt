improving broadcast operations ad hoc networks hop connected dominating sets signaling data forwarding operations route discovery process demand routing protocols involve broadcasting packets incurs considerable collisions ad hoc networks contention channel access protocol 
propose hop horizon pruning thp algorithm reduce impact broadcasting 
thp compute connected dominating set cds hop connected dominating set 
node uses thp select smallest subset hop neighbors hop neighbors reach nodes hops away 
nodes need covered cds needed additional relays selected cover hop neighbors left uncovered 
compare thp best performing broadcasting algorithms show extensive simulations thp efficient 
show thp improve route discovery process demand routing protocol apply thp aodv new variant named aodv thp provide version thp provides added redundancy 
simulation results show networks low mobility aodv thp improves aodv performance aspects better delivery ratio lower control overhead fewer packet collisions smaller delays 
index terms broadcast route discovery domination graphs wireless ad hoc networks 
broadcasting operations involve transmission packet receivers entire network 
achieving packet broadcasting blind flooding node receiving broadcast packet retransmits node transmitted copy packet network contention medium access control mac protocol induce excessive contention 
effect called broadcast storm problem 
reduce impact broadcasting signaling data packets resulting mechanism reduce number nodes attempt forward broadcast packets adapt dynamics mobile ad hoc network manet run real time limited knowledge network topology 
introduce hop horizon pruning thp algorithm broadcast operations efficient ad hoc networks contention mac protocols 
thp compute connected dominating set cds hop connected dominating set respectively set nodes node network supported part cnpq brazil chair computer engineering marco spohn garcia luna aceves university california santa cruz santa cruz ca jj cse ucsc edu hops node dominating set 
efficiency broadcast operations attained implementing forwarding schemes take advantage cds 
specifically node provides hop neighbors list specifying tuples identifier hop neighbor bit indicating neighbor dominates hop neighbor 
forward broadcast packet node tries obtain smallest subset forwarders hop neighbors node hop neighbors reach node hops away case cds required transmission ranges cover hop neighbors 
cds node find set forwarders cover hop neighbors node keep selecting forwarders additional hop neighbors transmission ranges cover uncovered neighbors 
selection forwarders node broadcasts packet header specifying list forwarders forwarder turn repeats process 
thp heuristic take account hop information selection relay nodes broadcast packets incurring signaling overhead heuristics hop information 
thp neighbor designated algorithm computing 
hop neighbor list hop dominating list communicated node hop neighbors provides node hop horizon broadcast message propagated nodes hops away unknown 
broadcast protocol neighbor information possible maintain fresh routes nodes hops node hop neighborhood information 
example demand routing protocols aodv searching route necessary broadcast route request rreq packet node network disseminating network 
rest organized follows 
section ii summarizes related enhancements broadcasting packets manets establishes nomenclature describe approach 
sections iii iv hop horizon pruning thp algorithm example works 
section presents simulation results comparing thp best performing broadcast techniques known date 
section vi applies thp route discovery process demand routing protocols presents simulation results cds dominating node fig 

cds node distance dominating node 
distance 
comparing aodv aodv thp thp processing route requests 
section vii concludes 
ii 
related broadcasting techniques proposed differ heuristics applied reduce redundancy broadcast transmissions 
broadcasting protocols categorized classes blind flooding node broadcasts packet neighbors receives copy broadcast packet probability methods node re broadcasts packet probability area methods node broadcasts packet information location location neighbors neighbor information methods classified neighbor designated method node transmits packet specifies neighbors forward packet self pruning method node receiving broadcast transmission decides re broadcasting packet 
williams camp shown neighbor information methods preferred types broadcast protocols 
dominating sets ds play major role deciding forwarder list neighbor designated algorithms 
ds set nodes node network set neighbor node set 
graph induced nodes ds connected connected dominating set cds see 
problem determining minimum connected dominating set mcds known np complete 
extensive done finding approximations mcds 
protocol constant approximation ratio proposed wan 
approach requires spanning tree constructed order select dominating nodes forwarders tree constructed broadcast performed 
improve route discovery process approach determining cds real time required 
accordingly focus techniques satisfy basic requirement 
variety conditions may imposed dominating set graph 
conditions distance domination dominating set requires vertex distance vertex fixed positive integer 
follows hop connected dominating set defined dominating set graph induced connected see 
table notation set hop neighbors node ni set hop neighbors node ni hop hop dominating nodes node nj 
hop sk hop fi thp forwarder list computed node ni list candidates forwarders list hop dominating nodes node nj hop need covered distributed algorithm building dominating sets proposed 
lim kim show mcds problem reduced problem building minimum cost flooding tree 
optimal solution problem feasible propose heuristics flooding trees resulting algorithms self pruning dominant pruning dp 
show algorithms perform better blind flooding dp outperforms simplest form self pruning 
dp uses greedy set cover gsc determine forwarder list packet just partial knowledge network topology 
gsc recursively chooses hop neighbors cover hop neighbors repeating process hop neighbors covered 
multi point relay mpr similar dp 
gsc mpr slightly different starting process 
mpr chooses forwarders candidates exclusive coverage hop neighbor apply gsc remaining nodes 
enhancements dominant pruning reported 
lou wu propose enhancements dp total dominant pruning tdp partial dominant pruning pdp 
spohn garcia luna aceves propose enhanced dominant pruning edp applied aodv show improvements compared dp 
general framework self pruning reported wu dai 
authors propose approaches broadcasting self pruning static dynamic 
approaches coverage conditions coverage condition coverage condition ii 
iii 
hop horizon pruning dp forwarder list set hop nodes hop nodes covered 
approach hop horizon pruning thp algorithm pruning process dp efficient topology information hops away node incurring limited additional signaling overhead conveying information 
assume nodes hello messages advertise hop neighbor lists nodes 
hop neighbor lists hop neighbors node determine hop neighbor reach hop neighbor 
node nj derive list hop dominating od nodes running standard dp hop neighborhood node nj source 
addition informing hop neighbors neighbor list node nj communicates od list hop hop neighbors 
reduce space required additional information od list encoded bit map format 
node lists hop neighbors thp forms connected network 
algorithm thp data ni sender hop result fi forwarder list select neighbors hop dominating nodes hop neighbors node nk nl hop nl ni nl hello message od list subset hop nodes hop suffices signal bit node neighbors dominating nodes 
hop neighbor list od list communicated node hop neighbors provide node horizon broadcast message propagated nodes hops away unknown 
node ni set hop nj contain set hop nodes covering hop nodes node ni 
simply hop neighbor coverage main criteria selecting forwarders done standard dp thp uses advertised neighbor od lists hop compute hop neighbors dominating nodes nodes ni nodes node hop neighbors 
algorithm presents pseudocode thp see notation table 
list nodes considered candidates forwarders 
hop neighbors sender need taken account line sender 
candidates forwarders nk list nodes covered set built 
list dk exclude candidates covered candidate nk nm nl nk nm hop nodes neighbors current node ni node ni included list lines 
set covered composed subsets nodes nk nodes covered subset neighbor node node eliminated lines 
candidates nk check node nm candidate forwarder nl node nm neighbor node nl 
case node nm removed set covered node nk 
words candidate nl neighboring node nm may set covered candidate node nk node nm need covered node nk node nl neighbor node nm choose dominating node neighbor covering nodes covered node nm 
case node nl choose node nm dominating node may case node nl neighbor covering nodes advertised node nm neighbors node nm neighbors node nl 
set empty node nk longer candidate forwarder removed set lines 
restriction eliminating redundancy set node nk nodes set checked proceeding node set nodes processed nodes remaining set selected forwarders 
cds required dp neighbor designated mechanism select hop neighbors cover hop neighbor left uncovered set fi 
theorem proves nm nk node nk nm nl nm nodes forwarders 
fi computing cds fdp dp uncovered hop nodes fi fi fdp return fi theorem connected graph node subset computed thp algorithm forms proof definition hop dominating set node nk network set dk hop subset nodes nodes covered 
consider set forwarders defined source ni initial set forwarders fi show constructed 
source node ni list candidates forwarders include hop neighbors node ni 
ni source 
set cover hop nodes node ni cause includes nodes covering hop neighborhood neighbors node ni nj node ni knows hop 
node nk node nk node nl nl nj excluded node nk covered node nl valid candidate forwarder 
assertion holds nodes processed proceeding remaining nodes node nj check condition nodes proceeding node nl 
nodes cover hop hop nodes node ni 
set forwarders fi subset nodes set nodes covered 
turn node nj nj fi computes set excluding sender ni hop neighbors shared sender nodes considered node ni deriving set fi 
node nj nj fi derives list forwarders fj fj fjm empty list source node fig 

thp build node network hops forwarder 
case candidates lead hop nodes 
individual set fj fj fjm cover hop neighborhood nodes nj nj respectively 
set nodes nj nj cover hop nodes node ni joint sets fj fj fjm cover hop nodes node ni 
set forwarders chosen subsequently cover nodes hops distant source distance forwarder source 
forwarder selected previous forwarder source set forwarders connected 
forwarder checks neighbors reach hop nodes guaranteed hop node forwarder selected forwarder hop neighbors 
selection process ends hop nodes reached forwarder guaranteed node network hops distant valid forwarder 
iv 
example thp operation depicts example thp node source 
od lists announced neighbors node dk hop dp hop ds hop hop dr hop 
node source hop neighbors candidates forwarders leads 
node candidate provide dominating nodes hop neighbors node node node hop neighbors reachable node neighbors node 
need node forward packet 
excluding candidates covered forwarder candidate nodes processed alphabetical order 
node listed list node node covering node node nm removed list valid candidate nl covering node nm nm 
source forwarder list defined fa 
node note excluded set sender neighbors 
fk 
node gives fs 
node forwarders 
node forwarders number forwarders dp tdp thp cc edp number forwarders number nodes fig 

number forwarders varying number nodes candidate node node di hop node 
node similar situation candidates nodes lead hop neighbor forwarder 
efficacy thp focus efficiency heuristics customized simulator assume ideal mac protocol collisions occur 
approach adopted compare efficacy heuristics 
compare thp best performing heuristics reported date dp tdp edp coverage condition cc hop neighborhood information hop routing history node degrees priority values 
simulations vary network size measure total number forwarders flooding network 
configuration obtain value metric different networks nodes randomly placed terrain connectivity tested ensure network connected 
results represent average different networks 
network size varied nodes nodes 
number nodes vary terrain size accordingly average nodes km radio range set 
shows average number forwarders broadcast algorithms 
difference dp tdp noticeable larger networks nodes 
pays hop neighborhood sender tdp calculating set covered 
edp tdp similar results edp performs better networks nodes 
tdp performs better cc networks smaller nodes 
network sizes thp performs better distributed broadcast algorithms 
vi 
thp route discovery thp applied type broadcast operation 
operation dissemination route requests rreq route discovery process demand routing protocols 
purpose discovering route destination suffices rreq reaches nodes route desired destination 
cases consider terms thp context 
routes hop neighbors maintained pro actively node hops away destination reply rreq directly 
hand routes hop neighbors available pro actively rreq propagated number ways reaches node hops away destination 
rreq relayed expanding ring search ttl set 
alternatively node compute forwarders neighborhood dominating set technique different thp dp 
study impact thp route discovery process implemented thp basis deciding nodes broadcast rreq messages route discovery process aodv 
named new protocol aodv thp implemented 
address reliability versions aodv thp 
variant aodv thp implements thp described previously 
second variant aodv thp neighbor covered hop nodes just hop neighbor covers hop node requiring dominating node hop neighbor 
second variant call aodv thp increases chances hop node receives rreq 
aodv variants aodv thp tested hello messages sent rate 
aodv results hello messages 
clearly aodv thp incur overhead worked mac protocol exchanged neighbor od information assume exchanged part routing protocol 
network composed nodes spread area 
radio model mbps ieee device nominal transmission range 
traffic sources continuous bit rate cbr 
bytes data packets 
source destination pairs chosen randomly nodes network 
flow duration average follows exponential distribution 
source nodes keep active flows simulation time new destinations randomly selected needed 
simulation time average flows initiated time active flows 
nodes transmitting plus offset uniformly chosen period avoid synchronization initial transmissions 
simulation time set seconds identical mobility traffic scenarios protocols 
initially nodes placed uniformly grid 
nodes move random way point model velocities pause times tested moving 
experiments repeated trials different random number seeds traffic endpoints topologies 
topology traffic pattern fixed line generated mobility packet generation scripts 
means protocols compared having identical node mobility traffic demands 
data point represents average trials 
performance metrics evaluated packet delivery packet delivery ratio aodv thp cover aodv thp hello aodv thp hello aodv hello aodv hello aodv hello pause time seconds fig 

nodes active flows packet delivery ratio delay seconds aodv thp cover aodv thp hello aodv thp hello aodv hello aodv hello aodv pause time seconds fig 

nodes active flows average delay ratio ratio data packets delivered destination generated cbr sources average delay data packets including possible delays caused route discovery latency queuing interface retransmission delays mac layer propagation transfer times routing load number routing packets transmitted data packet delivered destination hop traversed packet counted transmission mac collisions number collisions detected mac layer 
presents results packet delivery ratio 
expected aodv thp perform scenarios frequent topology changes 
key reason difficult get accurate view local topology changes frequently 
rate hello messages increased thp improves performance broadcast transmissions sent nodes respond topology changes faster 
aodv thp hel los sent starts performing better aodv pause time 
dp coverage increased dominating nodes aodv thp cover extra redundancy benefits protocol situations specially high mobility scenarios 
low mobility scenarios accurate view local topology pays making decisions node broadcast packet 
high mobility scenarios thp cover aodv thp cover increases delivery ratio compared variant thp single coverage 
presents average delay results 
normalized routing load aodv thp cover aodv thp hello aodv thp hello aodv hello aodv hello aodv hello pause time seconds fig 

nodes active flows normalized routing overhead cause flows initiated simulation time observe large number redundant broadcast transmissions resulting route discovery process affect delay aodv 
shown previously thp prunes redundant broadcast transmissions localized broadcast algorithm reflects performance demand routing protocol 
frequency hello messages impact delay 
thp hello messages transmitted nodes keep accurate view local topology results packets delivered smaller average delay 
thp cover redundancy transmitted presents slightly larger average delay delivers packets pause values 
aodv frequency hello transmissions affect delay scenarios large number flows 
shows normalized routing overhead results 
thp variants smaller overhead aodv reduction number redundant broadcast transmissions 
impact periodicity hello messages aodv observe slightly control overhead hello messages sent compared variants 
aodv compared hel los performs just slightly better terms control overhead delivery ratio delay 
presents results number packet collisions 
aodv similar results showing increase number collisions due hello messages 
aodv thp observe frequency sent impact number collisions expected 
previous results clear thp improves aodv performance aspects scenarios low mobility pause time larger 
vii 
thp localized algorithm computing connected dominating sets 
nodes network hops distant dominating node 
showed thp applied route discovery process demand routing protocols 
main contribution thp thp reduces number redundant mac collisions events aodv thp cover aodv thp hello aodv thp hello aodv hello aodv hello aodv hello pause time seconds fig 

nodes active flows number mac collisions broadcast transmission show extensive simulations thp outperforms best performing self pruning neighbor designated algorithms known 
thp applied aodv aodv thp show improves performance aodv aspects case low mobility 
show increase reliability thp aodv thp cover perform high mobility scenarios 
aodv thp increases delivery ratio drastically reduces delay routing overhead number collision packets 
direct consequence reduction number redundant broadcast transmissions rreq packets 

tseng 
ni 
chen 
sheu broadcast storm problem mobile ad hoc network wireless networks vol 
pp 

perkins ad hoc demand distance vector routing second ieee workshop mobile computing systems applications 
williams camp comparison broadcasting techniques mobile ad hoc networks proceedings mobihoc pp 

garey johnson computers intractability 
freeman san francisco 

wan frieder distributed construction connected dominating set wireless ad hoc networks proceedings infocom june 
haynes slater eds fundamentals domination graphs 
marcel dekker 
prakash huynh max min cluster formation wireless ad hoc networks ieee infocom march 
lim kim flooding wireless ad hoc networks computer communications vol 
february 
clausen jacquet viennot optimized link state routing protocol ad hoc networks december 
lou wu reducing broadcast redundancy ad hoc wireless networks ieee transactions mobile computing vol 
april june 
spohn garcia luna aceves enhanced dominant pruning applied route discovery process demand routing protocols proceedings th ieee icccn october 
enhancing route discovery process demand routing networks directional antennas proceedings third ifip tc networking conference may 
wu dai broadcasting ad hoc networks infocom 
generic distributed broadcast scheme ad hoc wireless networks rd icdcs may 
dai wu distributed dominant pruning ad hoc wireless ad hoc networks feb 
scalable network technologies simulator 
www scalable networks com 
