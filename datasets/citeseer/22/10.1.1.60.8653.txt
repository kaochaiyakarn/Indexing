grid service broker scheduling science applications global data grids rajkumar buyya lyle grid computing distributed systems laboratory dept computer science software engineering university melbourne australia raj cs mu oz au experimental particle physics group school physics university melbourne australia ph edu au generation scientific experiments studies popularly called science carried large collaborations researchers distributed world engaged analysis huge collections data generated scientific instruments 
grid computing emerged enabler science permits creation virtual organizations bring communities common objectives 
community data collections stored replicated distributed resources enhance storage capability efficiency access 
environment scientists need ability carry studies transparently accessing distributed data computational resources 
propose develop grid broker mediates access distributed resources discovering suitable data sources analysis scenario suitable computational resources optimally mapping analysis jobs resources deploying monitoring job execution selected resources accessing data local remote data source job execution collating presenting results 
broker supports declarative dynamic parametric programming model creating grid applications 
model grid enabling high energy physics analysis application belle analysis software framework 
broker deploying belle experiment data analysis jobs grid testbed called belle analysis data grid having resources distributed australia interconnected 
generation scientific experiments studies popularly called science carried communities researchers different organizations span national international boundaries 
experiments involve geographically distributed heterogeneous resources computational resources scientific instruments databases applications 
data experiments usually massive distributed numerous institutions various reasons including inherent distribution data sources large scale storage computational requirements ensure high availability faulttolerance data caching provide faster access 
known scientific experiments nature include cern led atlas cms experiments kek belle experiment 
users complex environments able carry analysis data generated experiments transparently accessing distributed datasets computational resources 
able share results analysis rest community 
grid computing enables creation virtual organizations bringing communities common objectives 
grid platforms support sharing exchange discovery selection aggregation geographically internet wide distributed heterogeneous resources computers databases visualization devices scientific instruments 
data grids evolved tackle twin challenges large datasets multiple data repositories distributed locations data intensive computing environments 
harnessing complete power grids remains challenging problem users due complexity involved creation composition applications deployment distributed resources 
resource brokers hide complexity grids transforming user requirements set jobs scheduled appropriate resources managing collecting results finished 
resource broker data grid capability locate retrieve required data multiple data sources redirect output storage retrieved processes downstream 
ability select best data repositories multiple sites availability files quality data transfer 
broker called gridbus broker providing services relevant data intensive environments 
application high energy physics domain discussed illustrating belle analysis data grid results experiments conducted 
related context data grid storage resource broker srb san diego supercomputing centre sdsc provides middleware storing datasets network accessing 
deal application execution directly 
similar data replication mechanisms grid data mirroring package gdmp 
european datagrid resource broker installed central machine receives requests decides dispatch jobs system parameters 
cactus numerical problem solving environment scientists supports data grid features mpich globus 
applications cactus environment written mpi implies legacy application adapted run grid 
nile grid computing environment high energy physics constructed corba limited domain 
gridbus broker extends nimrod computational grid resource broker model distributed data oriented grids 
nimrod specializes parameter sweep computation 
scheduling approach nimrod aims optimizing user supplied parameters deadline budget computational jobs 
functions accessing remote data repositories optimizing data transfer 
gridbus broker extends nimrod parametric modeling language supporting dynamic parameters parameters values determined runtime 
nimrod apples pst supports deployment parameter sweep applications computational grids adaptive scheduling algorithm emphasizes data reuse 
users identify common data files required jobs scheduling algorithm replicates data files user node computational nodes 
tries re replicated data minimize data transmission multiple jobs assigned resource 
multiple repositories data considered system scheduling algorithm applicable data grids 
ranganathan foster conducted simulation studies various scheduling scenarios data grid 
recommends decoupling data replication computation scheduling jobs grid 
concludes best schedule jobs computational resources closest data required job scheduling simulation studies restricted homogeneous computational nodes simplified fifo strategy local schedulers 
similar focuses resource scheduling strategy data grid concentrate adaptive scheduling algorithms brokering heterogeneous resources shared multiple user jobs 
addition scheduling strategy implemented gridbus broker feasibility support deployment distributed data intensive applications kek belle high energy physics experiment data analysis real grid testbed australian belle analysis data grid evaluated 
architecture data grid overview brokering data intensive computing environment perceived real world economic system producers consumers data 
producers entities generate data control distribution mirroring various replica locations globe 
lay policies replication guided various criteria minimum bandwidth storage computational requirements data security access restrictions data locality issues 
information data replicas assumed available data catalogue mechanism globus replica catalog 
example system tier level model proposed group cern replicating data produced large collider lhc atlas cms collaborations 
consumers system users proxy applications need analyse data produce meaningful results 
users may want investigate specific datasets set hundreds thousands may specific application requirements need fulfilled computational site 
sample scenario computing environment role broker illustrated 
gridbus data grid service broker architecture gridbus broker shown 
inputs broker tasks associated parameters values 
specified plan file specifies tasks types parameters values tasks 
local file result file gass server broker node grid node application data parameterization local data static dynamic parameters resolver jobs job schedule agent grid scheduler parameters task broker user interface task data requirements actuator monitor user process service node list resource discovery job status feedback remote data host service nodes gridbus broker gridbus broker architecture interaction grid entities 
data service catalogue resource catalogue grid information service network information service task sequence commands describe user requirements 
example user may specify application executed remote site 
requirements may require input file copied execution results returned back 
task encapsulates information description 
task accompanied parameters static dynamic 
static parameter variable domain defined range values single static value set values 
dynamic parameter undefined unbounded domain definition boundary conditions respectively established runtime 
example current implementation parameter type defined describes set files application executed 
set described wildcard search physical logical directory resolved runtime creating dynamic parameter 
task requirements drive discovery resources computational nodes data resources 
resource discovery module gathers information remote information services grid market directory gmd grid index information service availability compute resources 
optionally list available compute resources provided user broker 
broker interacts information service computational node obtain properties 
data files organised logical file names virtual directory structure replica data service catalog 
lfn maps physical file names located grid usually specified urls 
virtual directory structure organised catalogues collections 
mentioned processed may typically specified dynamic parameter broker resolve appropriate physical file location 
task description task associated parameters resolved decomposed jobs 
job instantiation task unique combination parameter values 
unit sent grid node 
set jobs set service nodes input scheduler 
scheduler matches job requirements services dispatches jobs remote node 
jobs requiring remote data interacts network monitoring service obtain information current available bandwidth data sources compute resources 
uses information schedule jobs optimizing amount data transfer involved 
current implementation network weather service nws obtain information 
scheduling algorithm described detail section 
jobs dispatched remote node actuator component 
actuator submits job remote node functionality provided middleware running 
actuator designed operate different grid middleware frameworks toolkits globus primarily runs unix class machines net grid computing platform microsoft windows enabled computers 
possible create cross platform grid implementation gridbus broker 
task commands encapsulated agent dispatched executed remote machine 
data file associated job suitable data host identified file agent obtains file remote data transfer data host 
additionally may require configuration input parameter files obtains broker mechanism gass globus access secondary storage server 
files assumed small tens hundreds kilobytes impact execution time job negligibly data files range megabytes larger 
completion execution agent returns results broker provides debugging information 
monitoring component keeps track job status jobs queued executing finished successfully failed 
updates status jobs fed back scheduler update estimates rate execution performance compute resources 
keeps persistent record job resource states entire execution 
design implementation gridbus broker implemented java deployed web enabled environments tomcat driven portals command line 
interfaces nodes running globus java commodity grid cog kit nodes cross platform manager interface 
uml unified modelling language class diagram displays core entities broker associations shown 
main design entities broker 
compute server object describes node grid 
holds properties node middleware running architecture operating system 
monitors rate progress keeping track number jobs done failed executing corresponding remote server 
subclassed different middlewares globus 
scheduler platform independent view nodes concerned performance 
possible broker operate different middlewares 

jobs job abstraction unit assigned node 
job structure variables variable holds designated parameter value job 
variable hold range values set values single value case called single variable task described task description done job 
task composed set commands 
types commands copy command instructs broker copy file source destination 
copying files broker host remote node vice versa 
provision copy node node broker intervening 
special case copy command multiple copy command instructs broker copy multiple files described wildcard ii 
execute command instructs broker execute application parameter command remote node 
iii 
substitute command instructs broker substitute values encounters variable name text file 
particularly useful configuration file modified job 
job submitted server control passed associated job 
object takes charge translating job instructions understood middleware running designated 
successful submission starts tracks job updates status 
throws exception quits 
org gridbus broker task job job submit terminate job org gridbus broker org gridbus broker org gridbus broker execute terminate org gridbus broker farming globus org gridbus broker variable org gridbus broker getvalue setvalue org gridbus broker farming org gridbus broker farming globus org gridbus broker uml diagram core broker components 

data hosts data hosts nodes data files stored 
objects store details data files stored path disk protocol access 
data host objects maintain list compute resources sorted descending order available bandwidth host 

data files data file object stores attributes input files required application size location 
data file object links different data hosts store file 
broker farming engine component central component broker point contact applications 
farming engine initializes objects broker invokes scheduler distribute jobs 
user interfaces command line web interfaces interact farming engine supply inputs parameterized plan files list compute resources obtain data progress execution 
scheduling algorithm scheduler broker looks data grid point view data 
perceives data intensive computing environment collection data hosts resources hosting data surrounded computational resources 
network proximity compute resource data host measure available bandwidth resources 
data resources may computation facilities case data transmission cost assumed zero data host compute resource site 
algorithm scheduler listed 
scheduler minimizes amount data transfer involved executing job dispatching jobs compute servers close source data 
na way achieving run jobs machines contain data 
data hosts may best computational resources 
difficult impossible define uniform set metrics heterogeneous resources potentially variable architectures 
users point view important measure fast jobs getting done 
scheduler uses job completion ratio ratio number jobs completed number jobs allocated evaluate performance computational resources 
regular polling interval scheduler evaluates progress job completion compute resource manner job completion ratio particular resource number jobs completed particular resource previous polling interval number jobs queued resource previous allocation 
scheduler calculates average job completion ratio th polling interval rs rs rs average job completion ratio th polling interval 
averaging ratio provides measure resource performance scheduling process considered approximate indicator performance resource 
resource assigned job limit maximum number jobs allocated current list jobs waiting execution proportional average job completion ratio 
scheduler iterates list unassigned jobs time 
job selects data host contains file required job selects compute resource highest available bandwidth data host 
allocation plus previously allocated jobs current running jobs resource exceeds job limit resource scheduler looks available nearest compute resource 
detailed experimental analysis performance evaluation scheduling algorithm different scenarios section case study deployment high energy physics application data grid environment 
initialisation 
identify characteristics configuration capability suitability compute resources grid information services gis 

task definition obtain data query parameters logical file name resolve data query parameter obtain list logical data files data catalog ldf get data sources data hosts store file querying data catalog 
scheduling loop repeat exists unprocessed jobs 
step triggered scheduling event 
event period function job processing time rescheduling overhead resource share variation 
compute resource predict establish job consumption rate available resource share measure extrapolation strategy account time taken process previous jobs 
estimate current commitment determine expected job completion time 

compute resource jobs dispatched execution variation resource availability grid move jobs unassigned jobs list 

repeat unassigned jobs scheduled compute resources reached maximum job limit 
select job unassigned jobs list 
identify data hosts contain ldf associated job 
create data list selected job data host identify compute resource complete job earliest current commitment job completion rate data transfer time current available bandwidth estimates 
select data host compute resource pair earliest job completion time data list 
exists resource pair assign job compute resource remove unassigned jobs list 

scheduling loop 
adaptive scheduling algorithm data grid 
case study high energy physics high energy physics hep fundamental science studying matter smallest scales 
probing frontier requires accelerators great complexity typically means single country 
equally experiments hep large technically sophisticated necessarily involve international collaboration institutes long time scales 
computing resource requirements hep increasing exponentially advancements particle accelerators increasing size collaborations 
modern experiments provide access petabytes data hundreds computing power thousands researchers located institutions world 
existing techniques analysis high performance computing sufficient 
cern lhc particle accelerator case point current computational facilities prove inadequate generation scientific experiments frequently cited justification need data grids experimental high energy physics 
belle project charge parity cp violation observed studying decays 
briefly symmetry operation particle inversion space inversion 
issue today standard model sm physics offers complete description cp violation importantly new physics needed explain 
answering question requires detailed study subtle effect 
belle experiment built operated collaboration researchers institutes countries probing cp violation studying decay produced accelerator japanese high energy accelerator research organization kek tsukuba 
increasing efficiencies accelerator led increase rate data production belle experiment 
current experiment simulation data set tens terabytes size 
increase extremely desirable study decays begins pose problems processing access data geographically remote institutions australia 
important data grid techniques applied experiment 
testbed belle analysis data grid testbed set australia collaboration ibm shown 
testbed resources located sydney dept physics university sydney canberra australian national university melbourne school physics dept computer science university melbourne adelaide dept computer science university adelaide 
nodes testbed adelaide connected grid generation network 
year program install develop operate network supporting grid advanced communications services australia 
higher bandwidth melbourne canberra sydney resources 
resources adelaide sydney effectively functioning single processor machines symmetric multi processing smp linux kernel running 
machines testbed running globus nws sensors 
broker deployed melbourne computer science machine broker agents dispatched runtime resources executing jobs initiating data transfers 
australian belle analysis data grid testbed 
data produced site shared sites 
purpose data catalog set belle data grid globus replica catalog rc mechanism 
data catalog global directory structure stores logical file names physical locations lightweight directory access protocol ldap 
set high level tools emulating unix directory structure commands creation management rc developed low level globus rc functions 
primary application belle experiment belle analysis software framework 
application simulation filtering events analysis 
legacy application consists gigabyte code 
execution restricted sites application installed 
case data transferred network delay incurred data completely available executing node 
eliminate dead time modified execute streaming data 
application parameterisation experimental setup typical analysis split streams data simulation 
raw data recorded various sensors detector stored separate measurements events 
simulated monte carlo data involves generation events detailed detector simulation 
point analysis streams similar 
data reconstructed involves correlation sensor information 
data summaries generated ease analysis 
example belle experiment tb data summary information exists 
skimmed produce subsets data interest physicist analysis 
gb size belle users 
analysed generate plots histograms statistical analysis applying cuts 
simulated data process repeated analysis perfected 
simulated data systematic error analysis 
analysis process performed data obtain result provided large differences data simulation 
simulation cpu intensive results saved available collaboration 
validating broker simulation decay chain particles 
decay chain occurs unstable particle decays stable particle state reached 
typical events happen particle accelerator 
experiment consists parts involve execution grid gridbus broker 
part events decay chain ks shown simulated distributed generation data entered replica catalog 
analysis part replica catalog queried generated data analysed belle data grid 
histograms resulting analysis returned output 
results analysis discussed involved accessing remote data 
ks decay chain 
plan file composing analysis belle data parameter sweep application shown 
plan file follows nimrod declarative parametric programming language extended introducing new type parameter called 
dynamic parameter describes logical file location directory collection files broker resolves actual file names physical locations 
plan file instructs copying user defined analysis modules configuration files remote sites execution started 
main task involves executing user defined shell script remote site input parameters full network path data file name job 
shell script invokes remote site conduct analysis data file produce histograms 
histograms copied broker host machine 
logical file name particular experiment resolved monte carlo simulation data files 
experiment set consisted jobs dealing analysis data file 
input data files mb size 
entire data set equally distributed data hosts data files 
data replicated resources dataset resource remained unique 
histograms generated kb size online visualization histogram outputs shown 
monitoring bandwidth resources nws sensor started resources reports nws name server located melbourne 
nws activity monitoring bandwidth defined name server clique containing resources testbed created 
members clique conduct experiments time determine network conditions 
querying name server point provides bandwidth latency members clique 
parameter infile lfn users task copy ana node ana copy node copy analyser node analyser copy node copy node copy event conf node event conf copy recon conf node recon conf copy particle conf node particle conf task main node execute infile copy node log log copy node results evaluation plan file data analysis 
histogram generated belle analysis 
scheduling scenarios evaluated scheduling computation limited resources data scheduling considering location data adaptive scheduling shown optimizes computation location data 
experiments carried april th 
time globus gatekeeper service adelaide machine computational resource 
possible obtain data gridftp 
jobs depended data hosted adelaide server able executed machines second third strategies 
graph depicting comparison total time taken strategy execute jobs shown comparing resource performance different scheduling strategies shown 

jobs completed time mins 
scheduling limited resources data jobs scheduling data optimization scheduling data optimization total time taken scheduling strategy 
melbourne physics melbourne cs anu canberra sydney physics compute resources scheduling limited resources data scheduling data optimization scheduling data optimization comparison resource performance different scheduling strategies 
strategy scheduling limited resources data job jobs executed resources hosted data files related jobs 
data transfers involved scenario 
displayed graph resources adelaide able execute jobs 
jobs scheduled resource failed computational service unavailable 
shows total time taken successful jobs 
time includes time taken scheduler conclude remaining jobs failed 
setup related data exclusively located resource jobs reassigned compute resources 
major disadvantage scheduling strategy exposed 
second strategy scheduling data optimization jobs executed nodes available computational resources 
optimization location data policy 
adelaide server considered failed resource jobs 
jobs utilized data files hosted machine able executed resources 
strategy involves maximum amount data transfer unsuitable applications involving large data transfers utilising resources connected slow networks 
evaluation scheduling data optimization carried scheduling jobs compute resources satisfied algorithm section 
case multiple data hosts data policy reduced dispatching jobs best available compute resource best available bandwidth host related data 
seen jobs accessed data adelaide resource scheduled melbourne physics cs resources consistently higher available bandwidth 
shown plot available bandwidth university adelaide resources testbed measured execution 
nws name server polled scheduling interval bandwidth measurements 
seen strategy took time 
available bandwidth mbps time min melbourne physics melbourne cs anu canberra sydney physics available bandwidth university adelaide resources testbed 
summary grid broker executing distributed data oriented jobs grid 
broker discovers computational data resources schedules jobs optimization data transfer returns results back user 
applied broker data intensive environment analysis belle high energy physics experiment data results evaluation different scheduling strategies 
scheduling strategy proposed broker took consideration network conditions produced best possible outcome executing jobs amount time 
plan conduct evaluations larger file sizes multiple repositories datasets 
ensure data transfer time significant making scheduling decisions scheduler able choose different data hosts 
authors express gratitude members gridbus project collaborators glenn martin school physics sharing thoughts grid enabling belle analysis framework jia yu contribution implementation job wrapper globus hussein gibbins contribution plan file interpretation luther design implementation rajiv ranjan contribution implementation adapter nimrod protocol interface ding hong contribution integration nws broker grids lab brett beeson extending copy command support wildcards broker services develop portal astrophysics steve comments broker services develop portal belle analysis school physics le university adelaide exploring gridbus broker data aware resource scheduling benjamin khoo ibm singapore technical inputs implementation 
gratefully acknowledge ibm donation machines belle testbed providing access cluster system coordinators testbed resources located adelaide university andrew paul australian national university markus sydney university kevin 
hey trefethen uk science core programme grid generation computer systems volume issue pages elsevier science amsterdam netherlands 
atlas experiment cern 
atlas web cern ch atlas welcome html accessed jan 
cms experiment cern 
cern ch welcome html accessed jan 
belle experiment kek 
belle kek jp accessed jan 
foster kesselman editors grid blueprint computing infrastructure morgan kaufmann publishers san francisco usa 
foster kesselman tuecke anatomy grid enabling scalable virtual organizations international journal high performance computing applications vol 
pp 
sage publishers london uk 
chervenak foster kesselman salisbury tuecke data grid architecture distributed management analysis large scientific datasets journal network computer applications vol 
pp 
academic press new york usa 
moore baru rajasekar wan grid blueprint new computing infrastructure ch 
data intensive computing pp 
morgan kaufmann san francisco ca usa 
baru moore rajasekar wan sdsc storage resource broker proceedings conference ibm centre advanced studies collaborative research cascon toronto canada october acm press new york usa 
samar stockinger 
grid data management pilot gdmp tool wide area replication iasted international conference applied informatics ai innsbruck austria february acta press calgary ab canada 
chervenak deelman foster guy hoschek iamnitchi kesselman ripeanu stockinger stockinger tierney 
framework constructing scalable replica location services proceedings supercomputing sc november ieee computer society press los alamitos ca usa 
hoschek martinez samar stockinger stockinger data management international data grid project proceedings st international workshop grid computing grid bangalore india springer verlag berlin germany 
allen goodale seidel cactus code problem solving environment grid proceedings ninth international symposium high performance distributed computing hpdc pittsburgh usa ieee computer society press los alamitos ca usa 
marzullo ricciardi nile wide area computing high energy physics proceedings th acm sigops european workshop ireland sept acm press new york usa 
abramson giddy high performance parametric modeling nimrod killer application global grid proceedings international parallel distributed processing symposium ipdps may cancun mexico ieee computer society press los alamitos ca usa 
buyya abramson giddy economy driven resource management architecture global computational power grids proceedings international conference parallel distributed processing techniques applications pdpta june las vegas usa csrea press las vegas usa 
casanova berman wolski apples parameter sweep template user level middleware grid proceedings ieee sc international conference networking computing nov dallas texas ieee computer society press los alamitos ca usa 
ranganathan foster decoupling computation data scheduling distributed data intensive applications proceedings th ieee international symposium high performance distributed computing hpdc edinburgh scotland july ieee computer society press los alamitos ca usa 
tuecke foster replica selection globus data grid proceedings ieee acm international conference cluster computing grid ccgrid brisbane australia may ieee computer society press los alamitos ca usa 
project cern web cern ch accessed jan 
large collider cern lhc new homepage web cern ch lhc new homepage accessed jan 
buyya gridbus toolkit service oriented grid utility computing overview status report proceedings ieee international workshop grid economics business models april seoul ieee computer society press los alamitos ca usa 
yu buyya grid market directory web web services grid service publication directory technical report grids tr grid computing distributed systems grids laboratory university melbourne australia january 
czajkowski fitzgerald foster kesselman grid information services distributed resource sharing proceedings th ieee international symposium high performance distributed computing hpdc san francisco ieee computer society press los alamitos ca usa 
wolski spring hayes network weather service distributed resource performance forecasting service metacomputing journal generation computing systems volume numbers pp 
elsevier science amsterdam netherlands 
ian foster carl kesselman globus metacomputing infrastructure toolkit international journal supercomputer applications volume issue pp mit press boston ma usa luther buyya ranjan net grid computing framework integration global grids technical report grids tr grid computing distributed systems laboratory university melbourne australia december 
foster kesselman tuecke gass data movement access service wide area computing systems proceedings sixth workshop input output parallel distributed systems pages atlanta ga may acm press new york usa 
von laszewski foster lane java commodity grid kit concurrency computation practice experience vol 
pp 
john wiley sons new york usa 
newman data intensive grids high energy physics grid computing making global infrastructure reality berman fox hey eds 
john wiley sons new york usa 
cms requirements grid proc 
chep beijing september 
science press new york usa isbn 
lyle data grids high energy physics melbourne perspective space science reviews kluwer academic publishers amsterdam netherlands 
australian belle analysis data grid epp ph edu au epp grid accessed jan 
grid generation network www net accessed jan 

