convergence estimation distribution algorithm linkage discovery factorization wright computer science university montana montana usa wright edu sandeep computer science university montana montana usa sandeep yahoo com november estimation distribution algorithms construct explicit model problem solved model guide search solutions 
important class fitness functions bounded epistasis possible construct complete explicit representation fitness function sampling fitness function 
natural model problem solved boltzmann distribution fitness function exponential fitness normalized probability distribution 
exponentiation factor inverse temperature boltzmann distribution increased probability increasingly concentrated set optimal points 
show fitness functions bounded epistasis satisfy additional property called running intersection property explicit computable exact factorization boltzmann distribution arbitrary exponentiation factor constructed 
factorization allows boltzmann distribution efficiently sampled leads algorithm finds optimum high probability 
additively decomposable fitness function adf bit strings written sum simpler subfunctions depends small number bits 
support set subfunction set bits bit positions depends 
adf called epistatic maximum size support sets subfunctions heckendorn wright described randomized algorithm find structure black box epistatic adf success probability 
words prior knowledge fitness epistatic algorithm determine adf decomposition function sampling fitness function 
explores way linkage detection algorithm extended estimation distribution algorithm 
boltzmann probability distribution described fitness function euf euf call parameter exponentiation factor traditionally interpreted inverse temperature 
tends infinity probability set optimal points goes 
sample boltzmann distribution sufficiently large high probability finding optimum point 
feasible general computing denominator require summing points search space 
hlenbein mahnig rodriguez prove factorization theorem gives condition called running intersection property collection support sets additively decomposable fitness function allow boltzmann distribution adf factorized 
boltzmann distribution factorized efficiently sampled 
algorithm consists phases 
phase apply linkage detection algorithm heckendorn wright determine adf structure fitness function 
second phase compute exact roundoff error factorization boltzmann distribution fitness function 
third phase sample boltzmann distribution 
exponentiation factor boltzmann distribution sufficiently high high probability finding optimum sample 
describe algorithm detail 
assume search space set binary strings length 
fitness function known epistatic linkage detection algorithm applied 
success probability find adf structure fitness function log assuming fixed function evaluations probability 
adf structure running intersection property factorization theorem applied produce factorization boltzmann distribution 
computation factorization 
exponentiation factor chosen 
exponentiation factor necessary obtain probability optimum depend fitness separation optimum 
practice exponentiation factor increased high probability optimum obtained sampling 
sampling phase 
algorithm advantage subfunctions adf may overlap may different scales 
estimation distribution algorithms sampling population may difficulties adf fitness functions subfunctions varying scales 
algorithm naturally finds multiple optima 
boltzmann distribution sampled optimal points equal probabilities sampled 
number optima estimated probability single optimum 
algorithm may applications multiple objective optimization 
describe implementation algorithm 
exponentiation factor boltzmann distribution large potential problems floating overflow underflow 
implementation deals problems allows exponentiation factor large 
describe test problem conjecture worst case algorithm 
give test results function fitness functions 
background genetic algorithms effective solving optimization problems large amount interaction variables 
approach solving problem manipulating representation solutions algorithm interacting components partial solutions disrupted recombination operators 
example various reordering operators tried operators slow genetic algorithms optimization framework quick convergence expected 
considerable algorithms evolve representation ordering problem 
includes messy ga gene expression messy ga linkage learning genetic algorithm 
led research methods detect nonlinear interactions variables independent information 
goldberg pioneered methods purpose 
methods perturbations solutions designed test specific interaction variables 
goldberg developed methods detecting pairwise interactions 
heckendorn wright extended results deal higher order interactions extended results kargupta give algorithm discovers structure adf 
show done constant success probability constant degree epistasis log function evaluations assuming success probability constant 
streeter showed adf subfunctions non overlapping pairwise interactions discovered log function evaluations 
estimation distribution algorithms developed way deal interactions variables 
general principle set solutions estimate fitness distribution generate new candidate solutions estimated distribution 
estimation distribution algorithms try estimate interactions variables 
generated new solutions preserving proportions values variables current solution 
algorithms included pbil umda compact genetic algorithm cga 
algorithms problems significant interactions variables 
algorithms pairwise interactions include mimic de bonet pelikan 
dealing pairwise interactions insufficient solve problems higher order interactions efficiently 
important eda deals higher order interactions bayesian optimization algorithm boa pelikan 
boa uses bayesian networks represent distribution uses bayesian dirichlet metric measure quality solutions 
factorized distribution algorithm fda eda uses approximations higher order interactions 
fda uses factorization boltzmann distribution generation new solutions 
factorization theorem proved 
fda requires prior information problem form problem decomposition support sets adf decomposition fitness function 
zhang developed infinite population models umda fda shown uniform populations stable fixed points umda stable fixed points fda 
suggests higher order information fitness function fda better able escape trapped local optima 
zhang hlenbein shown infinite population model fda real variables converge optimum additively decomposable fitness function running intersection property 
algorithm learns factorization lfda described minimally developed 
hybrid algorithm fda lfda applied graph bipartitioning problems 
hlenbein mahnig point sampling boltzmann distribution fulfills conjecture holland population search algorithm 
probability schema time conjecture schema represented current population increase decrease rate proportional observed usefulness average fitness schema minus average fitness population dp dt hlenbein mahnig restatement holland conjecture page 
hlenbein mahnig point simple genetic algorithm behave sampling boltzmann distribution satisfy 
linkage detection factorization algorithm linkage detection factorization algorithm combination linkage detection algorithm algorithm factorization theorem 
phases linkage detection factorization algorithm run linkage detection algorithm determine adf structure fitness factorization theorem compute factorization boltzmann distribution fitness 
sample boltzmann distribution times 
linkage detection algorithm linkage detection algorithm randomized algorithm determines subfunction decomposition epistatic fitness function fixed length binary strings black box 
words prior knowledge fitness function maximum degree interaction bits degree desired probability algorithm determines additive decomposition function probability 
algorithm perturbation algorithm specific perturbations string test interaction bits 
test interaction bits starts background string flips bit individually bits 
sum effects flipping bit individually different effect flipping bits interaction bits discovered 
kind test called probe 
probe order tests interaction set bits requires fitness evaluations 
multiple probes multiple background strings done reliably test interaction set bits 
linkage detection algorithm detects subsets bits interact fitness function constructs adf decomposition fitness 
give brief overview done 
set bits called epistatic bits interact relative fitness function 
set bits epistatic superset epistatic result probe set bits exactly walsh coefficient fitness function index mask set bits 
walsh coefficient determined walsh coefficients masks subsets determined probes subsets background string determine walsh coefficient maximal epistatic set 
walsh coefficients adf subfunction determined inverse walsh transform obtain standard basis description subfunction 
result complete description adf decomposition fitness function 
advantage perturbation methods determine structure fitness function perturbation methods insensitive relative scaling adf subfunctions 
perturbation probe specifically designed test interaction set bits noise subfunctions involved bits problem 
second advantage rigorous complexity analysis number function evaluations needed 
number subfunctions grows linearly string length global success probability find subfunctions wanted number function evaluations log string length 
number fitness evaluations grows exponentially degree epistasis 
number fitness evaluations reduced practice population caching fitness evaluations correctness technique proved 
support sets subfunctions adf nonoverlapping algorithm streeter find pairwise dependencies log time 
clear streeter algorithm combined linkage detection algorithm find adf structure adf fitness function subfunctions overlap log function evaluations 
implemented 
worst case linkage detection algorithm subfunctions needle functions linear special value 
subfunctions deviate cases fewer probes needed 
example subfunctions random mathematically probe needed test interaction set bits 
roundoff error problems mean small number probes 
concepts irrelevant 
due roundoff error tolerance set determination probe result nonzero scaling subfunctions extreme problems due finite precision floating point arithmetic 
computing factorization factorization part algorithm assumes adf structure fitness function known linkage detection phase algorithm 
proof factorization theorem shows write boltzmann distribution fitness product conditional probabilities shows efficiently compute required conditional probability tables 
introduce notation 
set bit strings length 
binary operators denotes bitwise denotes exclusive 
set bit positions 
denote subset mask mask binary string mi mi symbol set mask 
xm 
words xm set length bit strings may positions masked projection mapping takes bit string substring corresponding bit positions example sx 
xs interpreted mask 
sx string length xs string length 
furthermore sx 
fi si adf ei boltzmann probability distribution defined ei ei words boltzmann distribution adf multiplicatively decomposable 
denote marginal probability 
words xl si xsi xsi xsi conditions boltzmann distribution adf factorized computed efficiently sub functions adf 
fitness function written adf sub functions fi support masks si compute new sets di bi ci di sj bi si di ci si di set 
ci sj called successor sj 
theorem factorization theorem fi adf boltzmann distribution 
bi dn ci sj probability 
conditions define running intersection property 
intuitively running intersection property says support sets tree structure determined successor function 
follows written adf running intersection property successor set si example ei xb ei xb ej xb ej consider fitness function written form adf xixj uf uf uf table fitness values 
table represents fitness values sub function fi values si values 
example probability selecting individual computed equation table distribution 
table distribution 
euf uf uf fu probability individual computed factorization probability 
step construct required sets shown set di bi ci computed equations sets empty running intersection property violated 
factorization theorem holds 
easy see successor successor successors 
conditional probability tables computed 
example xb xb xb table probability distribution set 
probability distributions tabulated tables respectively 
equation probability selecting individual example value matches value directly computed equation 
choosing exponentiation factor boltzmann distribution depends parameter call exponentiation factor 
parameter called inverse temperature 
exponentiation factor goes infinity probability set optimal points goes 
algorithm consists setting exponentiation factor suitably large sampling boltzmann distribution 
raises questions large exponentiation factor need 
avoid floating overflow underflow problems computing high exponentiation factors 
discuss questions 
objective setting exponentiation factor sure probability set optimal points boltzmann distribution times probability set optimal points 
suppose fitness optimal point times fitness best point suppose times points optimum points 
want probability set optimum points times probability set optimal points want choose exponentiation factor satisfy inequality cke ck lnc lnk clearly bounded 
summarize lemma fitness optimum times fitness exponentiation factor chosen lnc ln probability set optimum points times probability set points 
way needle haystack fitness landscape adf 
conjecture bounded 
conjecture sufficient choose lnc ln ln section give example fitness function comes close achieving conjectured upper bound 
practice priori knowledge 
example fitness constrained integer known maximum fitness choose 
may point fitness factor optimum equivalent optimal point view user 
moderate value say 
repeated sampling boltzmann distribution increase probability finding optimum 
clearly may lead exponentiation factors lead overflow underflow equations implemented standard floating point arithmetic 
store quantities logarithmic form 
computation equation quantities ei xsi stored logarithmic form 
computation equation involves product summation quantities 
compute product add stored values 
compute summation convert stored values exponential form perform addition convert final result logarithmic form 
computation summation additional precautions taken avoid overflows 
example compute sj stored value computed log computation overflow 
modifications 
define ef maximum representable floating point number language implemented 
maxj sj rescale stored values added way maximum value computation stored value summation done log words subtracted value added 
summation computed exponential values lead overflow addition quantities doesn exceed general 
take logarithm result 
value subtracted earlier added value order change final result addition 
sampling boltzmann distribution final phase algorithm sample boltzmann distribution factorization computed stored described 
sampling applies formula sequentially step choose probability distribution 
note required determine step choose probability distribution 
step determined chosen probability distribution 
chosen compute accumulating factors product 
clearly time necessary compute sample 
exact boltzmann distribution algorithm sampled probability sampling optimal point exactly probability sampling optimal point 
probability optimal set points boltzmann distribution optimal point number optimal points 
exponentiation factor sufficiently large close approximation number optimal points 
illustrated section 
running intersection property hold 
running intersection property strong condition support sets subfunctions adf decomposition fitness function 
basic approaches ordering support sets running intersection property 
method expands support sets running intersection property satisfied 
second method ignores dependencies adf 
example approach junction tree method briefly overview 
graph adf defined follows vertices variables adf 
vertices connected arc corresponding variables contained common subfunction 
words variables connected arc epistatic interaction variables 
assumes adf simplified 
algorithm constructing junction tree briefly described completely described 
vertices junction tree clusters vertices junction tree satisfies junction property equivalent running intersection property 
difficulty vertices junction tree may correspond large subsets variables leads sizes conditional probability tables size exponential string length 
example approach subfunction merger heuristic algorithm 
limitation possibly producing exponential size conditional probability tables 
second approach points dropped support sets adf subfunctions dropped adf order achieve running intersection property 
effect ignoring variable dependencies fitness function 
explore approach depth point linkage detection algorithm gives lot information choose dependencies ignore 
example want know strength interaction variables look walsh coefficient fitness index mask set consisting variables 
example want know magnitude direct interaction look walsh coefficient index binary string bit positions labeled starting left 
find information higher order interactions involving variables looking magnitudes walsh coefficients indices masks sets containing variables 
linkage detection algorithm gives complete information fitness function possible try multiple approaches type described doing function evaluations 
approach ignore interactions cost computing alternative approximate factorizations cost running linkage detection algorithm possible try alternate ways ignoring interactions 
numerical results purpose section validate theory demonstrate algorithm solve difficult problems 
overlapping random needle function test function adf subfunctions needle haystack functions randomly placed needle 
words value subfunction strings randomly chosen string 
recall difficult kind subfunction linkage detection algorithm 
string value randomly chosen positive needle negative needle experiments 
degree epistasis subfunctions 
support set ith function fi overlap bits fi fi 
turns test function optima 
general positive needle subfunctions simultaneously needle set 
optimal value case optimum 
interesting note exponentiation factor set sufficiently large say inequality reasonably large value approximate number optimal points determined probability optimal point 
probability optimal points factorization sampled easy accumulate probability point results sample 
typical example run exponentiation factor optimal points determined enumerating points search space probability optimum determined factorization note exponentiation factor probability optimum shows number function evaluations running test function various string lengths 
number order probes determined formula formula ln ln number order epistatic sets bounded success probability chosen 
example 
plotted constant times log function evaluation complexity predicted 
graph empirically verifies function evaluation complexity linkage detection phase algorithm log 
function suboptimal second test function function comes close realizing conjectured upper bound ratio number suboptimal points number optimal points 
difficult test function know algorithm 
assume multiple support sets function previous function 
function subfunctions types 
bc fi bc mod fi bc mod bc bit count number hard see unique optimum ones string fitness 
point obtained setting bits support sets si mod string ones string zeros string 
points suboptimal points 
verifies formula lnc ln ln lnk analogous formula case 
string length number samples boltzmann distribution 
values chosen shown graph 
trial error determine exponentiation factor give probability optimal point accurate 
number runs test function string length verified consistently optimum high probability 
function eval constant log exponentiation factor experiment theory log string length experiment theory number function evals overlapping random needle log epsilon exponentiation factor function epsilon function suboptimal points scaled concatenation trap functions third function concatenated scaled trap function non overlapping subfunctions 
string length subfunctions 
define subfunction scaling start counting ones function 
fitness zeros string larger fitness ones string 
scaling factor applied subfunction fi order fi randomized 
scaling factor means subfunction smallest scaling scale times subfunction largest scaling 
optimum high reliability 
example exponentiation factor algorithm gave probability optimum 
boltzmann distribution fitness function function exponentiated normalized probability distribution 
parameter boltzmann distribution exponentiation factor inverse temperature 
exponentiation factor goes infinity probability increasing concentrated optimal points 
argued sampling boltzmann distribution ideal genetic algorithm 
see section 
diversity automatic boltzmann distribution entire search space 
general sampling boltzmann distribution feasible 
shows sampling exact boltzmann distribution possible large class fitness functions fixed length binary strings 
class fitness function satisfy properties 
epistatic 
means interaction variables bits limited variables 
fitness functions satisfy condition include max sat nk landscapes order concatenated trap deceptive functions 
epistatic fitness function additively decomposable subfunctions depends bits 
second support sets subfunctions additive decomposition satisfy technical condition called running intersection property 
running intersection property requires support sets tree intersection property 
fitness function epistatic phase algorithm taken determines epistatic structure sampling fitness function assumed black box 
randomized algorithm succeeds predefined success probability 
additionally algorithm computes additive decomposition fitness 
additive decomposition satisfies running intersection property phase algorithm computes exact factorization boltzmann distribution fitness function exponentiation factor 
final phase algorithm uses factorization sample exact boltzmann distribution 
exponentiation factor chosen sufficiently large algorithm find optimum points high probability 
furthermore provide accurate estimate number optimal points optimal points equally sampled 
algorithm rigorous complexity analysis considered constant 
algorithm exponential 
phase linkage detection phase requires log function evaluations 
subfunctions adf decomposition fitness non overlapping reduced log result 
construction factorization done time 
sampling boltzmann distribution requires time 
implementation overcomes potential floating overflow problems large exponentiation factors 
give formulas guide choice exponentiation factor function fitness separation optimum points ratio number optimum points 
give numerical examples demonstrate algorithm works practice 
algorithms developed evolutionary computation framework conditions algorithm guaranteed find optimum predefined success probability time polynomial string length 
baluja caruana 
removing genetics standard genetic algorithm 
prieditis russel editors int 
conf 
machine learning pages san mateo ca 
morgan kaufmann publishers 
de bonet isbell jr viola 
mimic finding optima estimating probability densities 
editor advances neural information processing systems volume page 
mit press 
goldberg deb kargupta harik 
rapid accurate optimization difficult optimization problems fast messy genetic algorithms 
forrest editor proceedings fifth international conference genetic algorithms pages san mateo california 
morgan kaufman 
harik goldberg 
learning linkage 
belew vose editors foundations genetic algorithms pages 
morgan kaufmann san francisco ca 
harik lobo goldberg 
compact genetic algorithm 
ieee ec november 
heckendorn wright 
efficient linkage discovery limited probing 
cant paz editor genetic evolutionary computation gecco lecture notes computer science lncs pages 
springer verlag 
heckendorn wright 
efficient linkage discovery limited probing 
evolutionary computation 
holland 
natural artificial systems 
university michigan press ann arbor michigan 
huang darwiche 
inference belief networks procedural guide 
international journal approximate reasoning 
jensen jensen 
optimal junction trees 
proceedings th conference uncertainty artificial intelligence pages seattle 
kargupta 
gene expression messy genetic algorithm 
international conference evolutionary computation pages 
kargupta park 
gene expression fast construction distributed evolutionary representation 
evolutionary computation 
lauritzen 
graphical models 
clarendon press oxford 
hlenbein ns 
estimation distributions maximum relative entropy principle 
evolutionary computation 
hlenbein mahnig 
convergence theory application factorized distribution algorithm 
journal computing information technology 
hlenbein mahnig 
fda scalable evolutionary algorithm optimization additively decomposed functions 
evolutionary computation 
hlenbein mahnig 
evolutionary optimization estimation search distributions applications graph bipartitioning 
international journal approximate reasoning 
hlenbein mahnig 
evolutionary algorithms boltzmann distribution 
foundations genetic algorithms pages san mateo 
morgan kaufmann 
hlenbein mahnig rodriguez 
schemata distributions graphical models evolutionary optimization 
journal heuristics 
hlenbein paa 
recombination genes estimation distributions binary parameters 
lecture notes computer science parallel problem solving nature ppsn iv pages 
springer verlag 
goldberg 
linkage identification non monotonicity detection functions 
evolutionary computation 
pelikan goldberg cant paz 
boa bayesian optimization algorithm 
banzhaf daida eiben garzon honavar smith editors proceedings genetic evolutionary computation conference gecco volume pages orlando fl 
morgan kaufmann publishers san fransisco ca 
pelikan goldberg cantu paz 
linkage problem distribution estimation bayesian networks 
evolutionary computation 
pelikan hlenbein 
bivariate marginal distribution algorithm 
roy editors advances soft computing engineering design manufacturing pages london 
springer verlag 
streeter 
upper bounds time space complexity optimizing additively separable functions 
kalyanmoy deb editor genetic evolutionary computation gecco procedings part ii lecture notes computer science lncs pages 
springer verlag 
thierens 
analysis design genetic algorithms 
phd thesis katholieke universiteit leuven leuven belgium 
zhang 
stability fixed points limit models univariate marginal distribution algorithm factorized distribution algorithm 
ieee evolutionary computation 
zhang hlenbein 
convergence class estimation distribution 
ieee evolutionary computation 

