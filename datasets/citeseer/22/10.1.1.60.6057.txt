dec xml ver information systems modeling user interests conceptual clustering daniela anal research institute university campus buenos aires argentina received january received revised form january accepted february information available web interest effective personalization techniques 
personal agents providing assistance content web documents user interests emerged viable alternative problem 
provided agents rely having knowledge users contained user profiles models user preferences interests gathered observation user behavior capacity acquiring modeling user interest categories critical component personal agent design 
user profiles summarize categories corresponding diverse user information interests different levels abstraction order allow agents decide relevance new pieces information 
accomplishing goal document clustering offers advantage priori knowledge categories needed categorization completely unsupervised 
document clustering algorithm named webdcc web document conceptual clustering carries incremental unsupervised concept learning web documents order acquire user profiles 
user profiling approaches algorithm offers comprehensible clustering solutions easily interpreted explored users agents 
extracting semantics web pages algorithm produces intermediate results integrated machine understandable format ontology 
empirical results algorithm context intelligent web search agent proved reach high levels accuracy suggesting web pages 
published elsevier keywords personal information agents conceptual clustering ontology learning 
prod type ftp pp col fig nil agents personalizing information related tasks content documents user interests offer users alternative cope vast amount information available web 
due fact personal information agents intensively years accomplish tasks searching filtering summarizing information behalf user community users 
critical component agents capacity acquire model uncorrected proof corresponding author 
tel fax 
mail addresses exa edu ar exa edu ar 
see front matter published elsevier doi article press ed kaushik scan global www elsevier com locate user interest categories user profiles 
profiles allow agents categorize documents features exhibit possible assess full meaning documents agent effectiveness depends profile completeness 
personal agent summarize categories corresponding diverse user information interests user profile interests related hobbies sports movies politics describe user experiences categories different levels abstraction user interest may respond general interest winter sports just sports 
hierarchical view user interests enhances semantics user profiles closer human conception set interests 
assessing comprehensible user profiles agents able communicate representations user interests users explanation exploration purposes agents establish cooperative behavior agent community 
learning meaningful user profiles involves extraction semantics group web pages user reads personal fashion 
extracting semantics resources syntactic web essential step ontology learning approaches semantic web 
semantic web aims extending current web machine processable semantics allowing various intelligent services understand information better access 
central semantic web concept ontology conceptualization domain enables agents reason web content carry intelligent tasks behalf users 
context ontology learning refers semiautomatic extraction semantics web order create ontology 
integrated ontology learning process user profiling approach discovering semantics web pages uncorrected proof contribute build ontologies semantic web 
propose document clustering algorithm belonging conceptual clustering paradigm named webdcc web document conceptual clustering carries article press information systems tal unsupervised concept learning web documents order acquire comprehensible user profiles 
conceptual clustering approach algorithm performs clustering characterization formation intentional concept descriptions extensionally defined cluster 
algorithms paradigm recognized powerful machine learning method find potentially interesting concepts relations ontology learning semantic web 
worth noticing knowledge acquired user profiling foster ontology learning semantic web expected partial benefit problem formulating explicit user profiles 
domain ontology capture concepts shared community users concepts specific reflect interest individual users 
organized follows 
section presents webdcc algorithm principal components 
overview datasets experiments section 
section compares webdcc results obtained traditional hierarchical clustering algorithm 
experience webdcc user profiling web search agent described section 
section places context related ones 
concluding remarks lines research described section 
webdcc algorithm overview algorithms belonging conceptual clustering paradigm introduced include clustering characterization 
formally conceptual clustering defined task sequential presentation instances associated descriptions finding clusterings group instances concepts categories summary description concept hierarchical organization 
section briefly describe elements context webdcc algorithm 
instances algorithm correspond vector representations web pages vector space model 
model document identified feature vector space dimension corresponds distinct term associated numerical value weight indicating importance 
resulting representation web page equivalent dimensional vector di tt wt wj represents weight term tj instance document di obtaining document representation non informative words prepositions conjunctions pronouns common verbs removed standard word list 
word removal stemming algorithm applied remaining words order reduce variant forms word common 
experiments reported terms stemmed porter stemming algorithm 
instances obtained extracting feature vectors documents incrementally webdcc algorithm concerned building hierarchies concepts starting 
conceptual hierarchy classification tree internal nodes represent concepts leaf nodes represent clusters instances 
hierarchy root corresponds general concept summarizes instances algorithm seen inner concepts increasingly specific placed lower hierarchy covering subsets instances 
turn terminal concepts child concepts 
words hierarchy consists arbitrary number concepts denoted politics government elections campaign politics article press information systems fc cng gradually discovered algorithm new instances available 
order automatically assign instances concepts algorithm associates description set terms ci tm wm weighted importance concept summarization 
fig 
shows example hierarchical clustering solution possible achieve webdcc algorithm 
labels added concepts illustrative purpose 
concept description generated clustering algorithm consists set terms 
point need distinction concepts categories 
category considered set instances concept internal representation category 
consider algorithm discovered concept sports set instances 
case concept description sports team score summarizes category sports composed instances algorithm seen belonging concept 
leaves hierarchy correspond clusters instances belonging ancestor concepts 
intuitively clusters correspond groups instances members similar members clusters clusters group highly similar instances observed algorithm 
general terms set ni instances documents belonging concept ci denoted di fd organized collection clusters sji user interest hierarchy sports team sports score user interest concepts football cup basketball nba football basketball clusters experiences uncorrected proof fig 

concept hierarchy illustrating knowledge representation webdcc 
fs containing elements di sli spi lap webdcc integrates classification learning sorting instance concept hierarchy simultaneously updating 
encountering new instance algorithm incorporates root existing hierarchy recursively compares instance child concept descends tree 
concept algorithm considers incorporating instance cluster belonging concept creating new singleton cluster 
possibility new concept creation evaluated order expand conceptual hierarchy depth 
webdcc defined algorithm takes input hierarchy new instance dnew returns updated hierarchy resulting addition dnew learning takes place instances sorted hierarchy incrementally discovered concepts 
time algorithm run concept associated description initialize hierarchy allowing instance classified root category 
initial hierarchy single concept gradually expanded new instances available new concepts gathered starting 
having hierarchy containing concept algorithm sorts dnew recursively assigning instance best child category level 
classification instances categories charge classify function receives instance concept returns value representing evidence fact instance classified category concept represents 
accomplishing goal concept descriptions act classifiers trained algorithm recognize constitutive features categories discriminate documents belonging categories 
uncorrected proof value returned function higher classification threshold instance dnew concept interpreted decision classifying dnew value lower interpreted decision classifying dnew classifying dnew category category classifier updated include article press information systems new instance 
example fig 
top level classifier decides classification documents root category second level classifiers decide classification sports politics categories forth 
denoting concept dnew classified algorithm adds dnew best child concept higher classify dnew concept child classification process stops instance reaches terminal concept classified child justify sorting downward 
case contains category instance able classified needs clustered 
instance basketball previous example expected exceed classification threshold concepts complete path root basketball category 
instance tennis probably classified sports basketball football categories 
instance reaches concept hierarchy terminal non terminal added cluster concept similar instances new cluster similar instances nearest neighbor approach nn 
instances concept category consequently expected share terms describing concept ancestors 
example concept representing basketball category fig 
algorithm decide best cluster concept place new instance terms sports team score basketball nba useless equally appear clusters 
reason terms included description concept ancestors considered moment clustering instances 
algorithm set terms denoted nn function prevent instance comparisons place inside function 
set terms nn function receives input new instance dnew concept instance classified hierarchy returns cluster dnew needs added denoted si parent dnew similar instance existent clusters established similarity threshold new cluster created order contain single instance returned nn function 
instances sufficiently dissimilar clusters level hierarchy create disjoint categories inclusions instances clusters gives place new concepts downward extensions hierarchy 
insertion instance cluster causes hierarchy revision possibly definition new concept summarize category instances 
evaluation function drives entire process conceptual hierarchy formation 
low evaluation value cluster indicates cluster provide information define concept summarizing instances cluster consists instances exist set terms precisely describe instances cluster 
contrary result evaluation function exceeds evaluation threshold new concept defined associated description 
mentioned conceptual clustering relates simultaneously problems hierarchical clustering finding hierarchy useful subsets instances dividing training instances meaningful categories characterization finding intentional definition description categories 
discovering categories previous steps algorithm aims finding subsets similar instances conceptual clustering extends task trying find intensional descriptions categories 
webdcc description new concept cnew generated function set instances contained uncorrected proof cluster si parent function embodies feature selection method extracts set features best characterizes instances cluster 
case filter approach feature selection taken score individually computed feature article press information systems features ordered assigned scores 
feature selection threshold defined weight required feature selected needs higher threshold 
concept cnew associated description added child concept hierarchy instances originally placed cluster leads new concept sibling clusters reorganized new concept form new subhierarchy 
order create new partition instances webdcc algorithm recursively run instance reorganized sub hierarchy having cnew root 
instances classified new category removed original position hierarchy placed cnew subsections main parts webdcc explained detail 
section describes transformation web pages instances webdcc algorithm 
process hierarchical classification instances hierarchy concepts section 
nn approach clustering instances leaf levels hierarchy described section 
section explains hierarchical concept formation process 

web page representation instances considered webdcc algorithm represented bag words approach document representation 
approach documents encoded feature vectors elements weights indicating importance terms 
order weight terms compared performance boolean numerical weighting schemes web domain 
purpose vectors representing web pages constructed syskill webert bank search collections see description section 
boolean scheme term weight term document achieving numerical weights document frequency normalized factor representing euclidean vector length follows tf 
tf algorithm webdcc algorithm uncorrected proof local weighting functions reflect importance term particular document entire set documents 
global functions tf idf term frequency inverse document frequency applicable context incremental clustering approach webdcc entire article press information systems input instance dnew added hierarchy output hierarchy containing dnew webdcc dnew initialize empty concept classification new instance current hierarchy concepts child true classify dnew xt concept higher classify dnew update description include dnew selection best possible cluster contain new instance set ancestor si parent nn dnew add dnew si parent new concept definition evaluated evaluation si parent xj thin cnew si parent add cnew child instances clusters considered reorganized cnew sj parent classify cnew xt remove hnew hierarchy cnew root replace hnew webdcc hnew return document collection priori unknown 
documents incorporated hierarchy terms locally weighted dictionary built purpose 
performance weighting schemes evaluated nn applied lowest levels hierarchy webdcc algo rithm 
clustering solutions resulting nn algorithm known affected order instances values experiment obtained average algorithm runs different sequence instances 
orders instances repeated value similarity threshold 
fig 
shows variations terms clustering quality possible values similarity threshold boolean numerical weighing schemes measured measure 
experimental results measure measure numerical weighting boolean weighting similarity threshold numerical weighting boolean weighting article press consider instances web page representations resulting application numerical weighting scheme previously described porter stemming algorithm reduce morphological variants terms web pages 

hierarchical classification approach stage webdcc algorithm instances assigned categories current hierarchy concepts 
time hierarchy consist single concept representing root category concepts hierarchical levels 
words text categorization problem stated set documents fd assigned set prescribed categories fc cmg particularly categories disposed hierarchy task categorizing text known hierarchical text categorization opposed flat text categorization 
exploiting hierarchical relationships categories global classification problem divided set smaller classification problems corresponding splits hierarchy 
node hierarchical structure separate classifier induced distinguish documents assigned category documents 
consequence decision point hierarchy classifier concerned binary classification problem document relevant category 
hierarchical organization classifiers classification task takes place top manner 
initially instances belonging root category documents categorized level classifiers 
having selected category certain level hierarchy children considered prospective categories level 
procedure continues instances reached leaf node concept hierarchy classified 
motivation construction hierarchy classifiers twofold 
existent experiences shown precision uncorrected proof similarity threshold fig 

measure scores boolean numerical weighting schemes 
information systems recall flat classifiers decreases number categories increases 
dividing classification problem problems involving smaller number categories classifier able classify instances accurately 
second classifier deals simpler classification task focus reduced set features distinguishing instances belonging category classifier represents 
example fairly small set terms sports team score presence instance clearly determines instance belong sports category politics category hierarchy fig 

terms useful classifiers determine category hierarchical level classifiers set features football cup hand basketball nba hand 
reduction number features decreases induction time increase accuracy resulting model 
classifier uses small set features set features different stages classification process 
classifier function dj instance dj returns number represents evidence fact dj classified category represented ci function threshold dj xt interpreted decision classify dj ci dj ot interpreted decision classify dj ci types classifiers potentially applicable problem including decision trees naive bayes linear classifiers exhibit interesting properties context webdcc algorithm 
linear classifiers family text classification learning algorithms examine training instances finite number times order construct prototype uncorrected proof instance compared instances classified 
prototype serves concept description consists weighted vector ci tm wm article press information systems wj weight associated term tj category ci linear classifiers efficient classification linear number terms instances categories easy interpret assumed terms higher weights better descriptors category lower weights 
furthermore representation linear classifiers similar representation documents allowing take advantage standard information retrieval techniques 
webdcc aims obtaining hierarchical set linear classifiers set relevant features 
goal achieved combining feature selection algorithm choose appropriate terms node tree supervised learning algorithm construct classifier node explained section 
order determine instance dnew assigned category ci hierarchy linear classifiers dot product document vector feature weighted vector constituting classifier computed follows classify dnew ci xm dnew ci 
value resulting application function represents confidence fact instance belongs category 
higher classification threshold instance assigned category document considered belonging category 
classification new instances classify function applied concept level hierarchy obtaining confidence value instance belonging 
example categories level hierarchy classify function applied return result case inferred document dnew belong sports hardly belong politics category 
application function categories hierarchy level situa tions possible document exceeds threshold category case classified category classification continues hierarchical level document exceeds threshold category case document classified best category continues hierarchical level document exceed threshold category case classification stops instance clustered category 
naturally value threshold plays important role classification process 
high value prevent instances classified correct category small value cause instances classified wrong categories 
order tune parameter carried number experiments syskill webert collections 
experiments web pages collections divided training set test set 
training set collection resulted instances distributed categories collection 
training set algorithm generates hierarchy shown fig 

training set second collection instances algorithm generate hierarchy shown fig 

detected concept figures summarize terms constituting concept descriptions term weights 
observed algorithm effectively identified concepts involved set pages hierarchical levels second 
hierarchies performed experiments test set conformed remaining mon mus review song root instances case order determine suitable value classification threshold experiments measured effectiveness classification process precision recall measures ratio correct decisions total number decision ratio decisions total number documents respectively 
documents left clusters non terminal categories counted belonging category consequently reducing recall precision 
fig 
plot variation precision recall different values classification threshold collections 
figures trend precision increase classification threshold grows probability misclassification reduced 
growing classification threshold causes strong decrease recall leading higher amount pages placed outside category belong child clusters root category syskill webert collection child clusters root category sports programming languages collection 
figures relationship precision recall summarized measure 
exposed results established threshold value compromise recall precision attained 
uncorrected proof goat sheep med fig 

hierarchy syskill webert collection 
article press information systems team root code race england java visual cup basic game fig 

hierarchy collection 
classification threshold precision recall fmeasure 
non hierarchical clustering approach bottom levels hierarchy algorithm behaves simple nn algorithm 
fundamental assumption ap uncorrected proof proach instances close feature space appropriate similarity measure belong class 
instance reached concept hierarchy concept terminal instance article press precision recall fmeasure classification threshold fig 

classification threshold setting 
information systems classified placed cluster majority nearest instances belong 
order determine instances new instance dnew compared instance seen algorithm 
instance assigned cluster closest instance cluster majority closest instances belong instance close instance current clusters predefined similarity threshold leads new singleton cluster 
nn distance measure instances case documents possible determine degree resemblance vectors representing 
regard dominant similarity measure information retrieval text classification cosine similarity measure evaluates cosine angle conformed vectors space 
cosine similarity calculated normalized dot product pr wik pr pr ik jk sim di dj di dj respective instances wik weights word instance number different words instances 
order handle structures text rdf meta data descriptions specific similarity measures need defined compare instances attributes values 
nn determines best clusters new instance nearest instances similarity measure particularly similarity threshold critical effect nn performance 
carried number experiments mentioned collections order determine range values similarity threshold webdcc algorithm reaches better quality solutions 
experiments analyzed aspects resulting clustering solutions similarity threshold impacts total number clusters cluster homogeneity 
value near produce clusters single cluster grouping highly dissimilar instances informative original collection documents value near produce big number clusters number cluster instances highly informative practically useless 
order take consideration aspects similarity threshold tuning analyzed quality clustering solutions nn algorithm variations number resultant clusters measure cluster homogeneity entropy 
labeled training data entropy calculation clustering expecting clusters generated algorithm homogeneous possible respect labeling containing instances 
best entropy achieved cluster contains exactly single instance suitable value trade entropy number clusters 
fig 
plot achieved values measures values similarity threshold datasets analyzed 
results summarize algorithm runs different sequences instances 
entropy number clusters summarized figures single value means information theoretic external cluster validity measure proposed simply validity measure 
measure refines entropy penalize highly heterogeneous clusters large number clusters 
observed figures lines normalized entropy number clusters proportion maximum possible number clusters cross near similarity threshold value minimum value validity measure achieved 

hierarchical concept formation approach hierarchical concept formation involves gradual creation concepts summarizing instances clusters mainly driven evaluation function 
time cluster updating takes place caused insertion new instance hierarchy function determines new concept defined summarize set instances 
article press information systems validity measure entropy number clusters similarity threshold entropy number clusters validity measure similarity threshold fig 

similarity threshold setting 
incremental nature algorithm concept formation defined instances part cluster consideration assigned clusters hierarchy 
algorithm unnecessarily formation concepts evidence categories gathered 
algorithm intended destination modeling user interests particularly advantageous interests develop similarly user reads sports politics uncorrected proof concept created independently second 
algorithm goal partitioning set instances collection specificity categories suitable evaluation measure recognize opportunity create new concept time existence instance category suspected inside cluster 
words lack cluster cohesiveness considered indicator fact instances belong cluster common features correspond distinctive aspects general category 
furthermore assumed subtracting set features shared instances cluster describe general category new partitioning instances obtained hierarchy gain additional level specificity 
method compute cluster cohesiveness consist average pairwise similarity instances cluster follows evaluation sr di dj sr sim di dj nr size cluster sr mathematically average pairwise similarity instances cluster including self similarity equivalent length centroid vector documents scaled unit length 
cohesiveness value efficiently calculated centroid vector clusters 
cohesiveness value higher threshold new concept created 
updating hierarchy takes place 
empirically determined value comparing hierarchies concepts generated different values syskill webert collections target hierarchies hierarchy containing topics collection hierarchy uncorrected proof containing topics level topics second collection 
case creation new concept established feature selection method applied instances cluster summarized 
method takes input set features article press information systems outputs subset features relevant target concept 
main feature selection approaches machine learning filtering wrapper approach 
feature selection webdcc algorithm performed filter approach ordering scheme 
approach weight individually computed feature features ordered assigned weights 
feature selection threshold defined range weight required feature selected needs higher simple effective approach weigh terms document frequency denoted df tk number instances term tk occurs 
document frequency computed unique term appearing cluster terms document frequency removed feature space 
method assumes rare terms non informative category prediction influential global performance 
feature selection supervised learning algorithm applied learn classifier new category 
particular instantiation rocchio algorithm parameter fixed prototype category ci defined follows ci nci dci 
classifier category ci plain average centroid instances belonging category 
classification new instances closeness instance prototype vector computed dot product described eq 

stated accurate classification features better discriminant power category 
observation propose aggressive selection terms setting selection threshold high value 
analyzed effects varying parameter terms quality achieved clustering solutions 
fig 
plots measure scores reached different measure syskill webert collection collection feature selection threshold values selection threshold syskill webert collections 
cases highest values reached value equal 
dataset description fig 

selection threshold setting 
carried number experiments syskill webert web page ratings collection web page collection 
web pages syskill webert collection belong different categories bands pages pages sheep pages biomedical pages 
original dataset removed empty pages corresponding pages leading total web pages 
dataset contains single user rating interest page point scale hot interesting pages medium quite interesting pages cold uncorrected proof interesting pages 
user ratings provide valuable means evaluate performance personal information agents web page user interest prediction 
second dataset web page collection study hierarchical article press information systems clustering solutions provided webdcc algorithm 
collection subset web pages divided broad categories sports pages programming languages pages 
categories pages belong subcategories motor sports pages soccer pages sports basic pages java pages programming languages 

evaluation clustering results order evaluate webdcc performance compared results obtained traditional hierarchical agglomerative clustering hac 
hac involves building tree structure bottom method 
agglomerative algorithm begins instance distinct cluster successively merges similar clusters step create new internal node tree 
process continues single inclusive root node reached 
result hierarchical clustering algorithm binary tree dendrogram depicts merging process intermediate clusters 
agglomerative clustering depends definition similarity measure clusters determine pairs clusters merged step 
numerous approaches developed computing similarity common alternatives single link complete link group average schemes 
scheme measures similarity clusters maximum similarity documents cluster complete link minimum similarity group average scheme measured similarity clusters average pairwise similarity documents clusters 
order experimentally contrast performance obtaining hierarchical clustering solutions agglomerative clustering webdcc algorithms compared entropy values achieved previous datasets 
resulting dendrogram agglomerative clustering analyzed different levels granularity summarized results obtained stopping agglomeration process clusters left 
results hac different number clusters single link complete link group average schemes shown tables syskill webert collections respectively 
running webdcc algorithm datasets obtained hierarchies high number clusters leaves consequently low entropy values 
order compare webdcc results obtained hac calculated entropy considering clusters syskill webert collection collection 
case clusters correspond terminal categories instances table evaluation webdcc hac syskill webert collection algorithm clusters single link table evaluation webdcc hac collection algorithm clusters single link article press hac average webdcc hac average categories considered single cluster cluster groups instances left root category 
second case clusters correspond terminal categories remaining clusters correspond instances left root category instances left children categories hierarchical level outside terminal categories 
spite non incremental nature hac results comparable webdcc high number clusters considered 
tables best result agglomerative clustering cluster similarity scheme underlined 
agglomerative clustering reached lower entropy values webdcc clusters complete link schemes 
worth noticing webdcc obtained better solutions fewer clusters generated descriptive hierarchies collection incremental fashion 
conversely agglomerative clustering difficult explore descriptive information clusters provided different partitions instances achieved depending level tree 

experience webdcc agent webdcc algorithm applied development agent assists users finding interesting documents web named 
agent carries parallel search popular web search engines filters resultant list web documents user profiles builds observation user browsing behavior web 
reading standard browser agent observes set indicators order estimate user interest web page 
mechanism known implicit feedback allows agent obtain web pages relevant user distracting normal behavior 
indicators time consumed reading relation length amount scrolling page added list uncorrected proof webdcc information systems bookmarks 
web pages considered interesting user means input webdcc algorithm algorithm output corresponds hierarchy concepts constituting user profile 
users interact expressing information needs keywords usual 
agent posts queries popular search engines google yahoo obtaining set documents cover wide portion web 
relevance degree document relation user profile computed agent determine convenience suggesting document user reading 
documents surpass user relevance threshold regard category user profile sent back user result query 
allows user customize desired level assistance moment adjusting threshold agent graphical user interface gui 
order illustrate behavior suppose user possesses number reading experiences visual basic java programming languages readings soccer motor sports 
fig 
shows profile user built web pages collection 
user performs web search keywords programming languages list resulting pages may include pages aspects programming ranging theoretical studies diverse languages search results shown fig 

knowing user interests suggests pages related visual basic java observed fig 

pages belonging languages discarded agent considered uninteresting user 
effectiveness recommend web pages searching evaluated standard precision recall uncorrected proof measures information retrieval 
user point view precision measures proportion relevant documents recommended agent recall proportion relevant documents search results fact recommended user 
order article press information systems fig 

example user profile 
fig 

example search results 
fig 

example suggestions 
calculate precision recall values necessary know relevance document search results 
experiment ratings single user pages syskill webert collection mentioned point scale hot interesting medium quite interesting cold interesting 
total pages marked hot medium build different profiles pages pages second pages third pages 
profiles compared agent effectiveness recommending web pages considering result web search remaining pages search result consist cold pages collection remaining hot medium pages previously profile construction 
fig 
shows average precision recall reached agent different values relevance threshold 
shows variations precision recall value different user profile sizes amount experiences pages 
results conclude agent improves performance user profile grows agent knowledge user interests 
highest accuracy obtained relevance threshold set accuracy relevance threshold regardless user profile size 
results configured value default user manually change relevance threshold gui 
agents assisting users take advantage existing knowledge community cooperation 
quantitative comparison user profiles triple matching model md implemented order enable cooperation 
initial experimental results profile comparison proved similar topics user profiles identified applying previous model 
cooperative approach foster knowledge sharing consequently potentially enrich results individual agents accessing agent experience 

related works hierarchical conceptual clustering plays important role ontology learning semantic web 
manual creation ontologies domain experts presents known problem acquisition bottleneck fully automating creation ontologies unfeasible 
ontology learning aims integrating numerous disciplines particularly machine learning facilitate ontology construction 
example text framework combines knowledge acquisition machine learning extract semantics resources web free text semistructured text schema definitions 
framework ontology extraction major part target ontology web documents learning 
particularly hierarchical conceptual clustering recognized powerful method ontology extraction phase results refined validated ontology learning steps 
line research conceptual clustering algorithm cobweb applied ontology discovery line communities 
cobweb results translated rdf schemes semantic web song recommendation application 
contrast referred works goal uncorrected proof fig 

accuracy web page prediction 
article press information systems extract semantic knowledge web pages approaches clustering objects described ontology meta data proposed 
study impact semantic web learning algorithms user profiling personalization performed 
results study demonstrated available semantic web markup expected outperform conventional machine learning applied plain text regard accuracy learned model 
meaningful potentially reusable knowledge discovered applying inductive logic programming techniques web pages annotated semantic meta data 
user profiling perspective shortcomings existent clustering algorithms build user profiles related clustering solutions able supply resemble user interests way build solutions generally incremental 
regard hierarchical clustering techniques build tree structures bottom agglomerative method top divisive method 
begins instance distinct cluster successively merges similar clusters step create new internal node tree 
process continues single inclusive root node reached 
starts single cluster containing instances splits resulting clusters clusters individual instances remain 
merging clusters individual instances agglomerative clustering splitting divisive clustering usually binary resulting binary tree dendogram contains clustering information different levels 
exploration clustering solutions requires insight user clustering algorithms attempt characterize clusters 
conversely algorithms conceptual clustering paradigm involved create uncorrected proof concepts define exemplify properties set instances 
cobweb example incremental conceptual clustering algorithm constructs tree sequence observations 
discovered concept cobweb records probability attribute value article press information systems updated time instance added 
category utility measure determine child concepts created 
probabilistic concepts cobweb limit application algorithm document clustering space features values highly dimensional 

user profiling document clustering offers advantage priori knowledge user interest categories needed categorization completely unsupervised 
webdcc conceptual clustering algorithm designed support user profiling intelligent information agents 
advantages algorithm twofold 
incremental approach allows agents interact users time acquire adapt user interest categories 
result agents able deal unpredictable changing subject areas anticipated agent developers 
algorithm enables agent discover set categories interests focus aspects categories user really interested 
consequently user profile contains categories different levels specificity user experiences 
second user profiling approaches webdcc offers comprehensible clustering solutions easily interpreted explored users agents 
webdcc capability extracting semantics web documents enables integrated ontology extraction phase brings support ontology learning process semantic web 
compared clustering solutions provided webdcc agglomerative hierarchical clustering hac 
experimental results demonstrated spite incremental nature webdcc performance similar better considering reduced number clusters performance hac 
algorithm offers added value conceptual hierarchy personal agents 
spite potentials algorithm proposed task issues require thorough analysis 
incremental approach webdcc affected order instances 
remains evaluate strategy reduce impact instances ordering improve clustering quality solutions 
second despite preliminary experiments suggested promising results profile comparison agent communities performing collaborative filtering needs analysis 
application webdcc real word agent proved algorithm capacity handling task hand 
experience algorithm generates accurate profiles allow agents provide affective personalization adapt profiles order improve agents efficiency time comprehensible profiles users 
concept hierarchies produced webdcc facilitate profile comparison order assist community users collaborative way identifying concepts users common 
research reported partially supported 
mladenic text learning related intelligent agents survey ieee intel 
syst 

berners lee hendler lassila semantic web sci 
am 

berendt hotho stumme semantic web mining proceedings international semantic web conference semantic web springer pp 

faure corpus conceptual clustering method verb frames ontology acquisition velardi ed proceedings adapting lexical corpus resources sublanguages applications workshop st international conference language resources evaluation lrec granada spain pp 

maedche staab ontology learning semantic web ieee intel 
syst 

article press information systems cunningham hayes ontology discovery semantic web hierarchical clustering semantic web mining workshop 
stepp learning observation conceptual clustering michalski carbonell mitchell eds machine learning artificial intelligence approach morgan kauffmann pp 

thompson langley concept formation structured domains fisher pazzani langley eds concept formation knowledge experience unsupervised learning morgan kaufmann 
salton yang wong vector space model automatic indexing communications acm 
porter algorithm suffix stripping program program 
van rijsbergen information retrieval department computer science university glasgow london uk 
apte damerau weiss automated learning decision rules text categorization inform 
syst 

alessio murray category levels hierarchical text categorization proceedings rd conference empirical methods natural language processing granada spain 
salton mcgill modern information retrieval mcgraw hill 
shannon mathematical theory communication bell system technical journal 
dom information theoretic external cluster validity measure proceedings th conference uncertainty artificial intelligence morgan kaufmann alberta ca pp 

john kohavi pfleger irrelevant features subset selection problem proceedings th international conference machine learning morgan kaufmann 
rocchio relevance feedback information retrieval smart retrieval system prentice hall pp 

dumais platt heckerman sahami inductive learning algorithms representations text categorization proceedings th international conference information knowledge management cikm pp 

koller sahami hierarchically classifying documents words proceedings th international conference machine learning morgan kaufmann pp 

pazzani muramatsu billsus syskill webert identifying interesting web sites proceedings th national conference artificial intelligence th innovative applications artificial intelligence conference portland pp 

uncorrected proof corne large benchmark dataset web document clustering frontiers artificial intelligence applications soft computing systems design management applications 
frakes baeza yates information retrieval data structures algorithms prentice hall 
intelligent agent searching web pages proceedings international joint conference th american conference ai th brazilian symposium ai amia lecture notes computer science vol 
springer pp 

rodr guez assessing semantic similarity spatial entity classes ph thesis university maine 
nez sichman enriching information agents knowledge ontology comparison case study proceedings th american conference artificial intelligence mia lecture notes computer science vol 
springer pp 

article press information systems fisher knowledge acquisition incremental conceptual learning mach 
learning 
maedche clustering ontology metadata semantic web elomaa mannila toivonen eds principles data mining knowledge discovery th european conference pkdd lecture notes computer science vol 
springer helsinki finland pp 

zucker dieng learning ontologies rdf annotations maedche staab nedellec hovy eds workshop ontology learning proceedings second workshop ontology learning ol seattle 
learning knowledge rich user models semantic web brusilovsky corbett de eds proceedings th international conference user modeling lecture notes computer science vol 
springer pp 

muggleton inverse entailment progol new generation comput 
special issue inductive logic programming 
uncorrected proof 
