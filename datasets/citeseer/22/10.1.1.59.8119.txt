reputation network analysis email filtering jennifer golbeck james hendler university maryland college park mindswap baltimore avenue college park md golbeck hendler cs umd edu 
addition traditional spam detection applications new methods filtering messages including social network filters investigated improve mail sorting classification 
email scoring mechanism social network augmented reputation ratings 
algorithm inferring reputation ratings individuals demonstrate experiments accurate current data 
integrate scores mail application show may combination techniques sorting filtering mail 
background fact spam ubiquitous problem email lead research development algorithms try identify spam prevent reaching user mailbox 
techniques highly successful catching filtering vast majority spam messages person receives 
continues refine methods focus shifted new mechanisms blocking unwanted messages highlighting valid messages 
filters methods 
systems users create list approved addresses accept messages 
messages delivered user inbox filtered low priority folder 
systems claim filtered messages spam inbox usable showing messages definitely spam 
nearly effective blocking unwanted email major problems cited 
firstly extra burden placed user maintain secondly valid emails certainly filtered low priority mailbox 
box contains lot spam valid messages especially difficult find 
approaches social networks message filtering 
roychowdhury create social network messages user received 
structural properties social networks particularly propensity local clustering messages identified spam valid unknown clustering thresholds 
method able classify user email spam valid categories leaving filtered techniques 
approach takes basic premises social network filtering extends 
roychowdhury technique builds social network user email folders technique uses network connects users 
system users assign reputation trust score people know 
ratings indicate score email connects users turn set ratings 
result large reputation network connecting thousands users 
user personal view network apply recursive algorithm infer reputation score sender message 
score shown messages inbox messages sorted value 
works users assign high reputation ratings people normally appear see high score inbox 
scoring system preserves benefit making inbox usable making messages prominent 
added benefit scores appear messages people user contact 
connected mutual acquaintance reputation network infer rating 
diminishes problems scores inferred taken directly list fewer valid messages filtered low priority mail folder 
burden creating initial set reputation ratings fall user possible rate fewer people rely inferred ratings 
goal scoring system give low ratings bad senders showing low numbers spam messages inbox 
main premise provide higher ratings non spam senders users able identify messages interest recognized 
puts lower burden user need rate spam senders 
focus algorithm intended solution spam 
envision mail scoring technique conjunction variety anti spam mechanisms 
spam issues particularly effect algorithm 
forged email headers line message altered look valid address issue 
designed address problem assume technique deals forged headers 
technique designed identify messages past spam filters address case person virus sending messages account 
assume spam detection technique flags messages 
previous rest describe mechanisms creating reputation networks algorithms inferring reputation ratings networks prototype application uses inferred values 
yolanda gil addressed issue trusting content information sources 
describe approach derive assessments information sources individual feedback sources 
users add annotations include measures credibility reliability statement averaged viewer 
trellis system users view information annotations including averages credibility reliability ratings analysis 
peer peer context eigentrust system pagerank effectively computes global trust values peers previous behavior 
individuals poor performance receive correspondingly low trust ratings 
system shown highly resistant attack 
levin advogato project calculates global reputation individuals network perspective designated seeds authoritative nodes 
metric composes assertions members determine membership group 
advogato website advogato org example certifies users levels apprentice master 
access post edit website information controlled 
eigentrust advogato metric quite attack resistant 
identifying individual nodes bad finding nodes certify bad nodes metric cuts unreliable portion network 
calculations primarily nodes network remains secure 
centralized metrics golbeck richardson 
metrics local system inferring reputations trust relationships network 
richardson eigentrust presents probabilistic interpretation global belief combinations 
effectiveness system shown context epinions 
creating reputation network algorithms calculating reputation scores appear email messages large connected reputation networks 
technique builds social network user email folders technique uses distributed web social network infers reputation rating user considering paths 
person network set ratings 
individuals connected person rated 
neighbors turn connected people rate 
result large interconnected network users 
illustrates people labeled connected common neighbors 
requirement system network created individuals assert reputation ratings 
context email large email providers take advantage population users starting place 
service providers microsoft networks msn yahoo 
mail america online aol access large numbers users 
integrating reputation relationships services offered users instant messaging chat easily allow members service create foundational reputation network 
internet wide reputation network allow ratings individual slightly complicated 
network experiments semantic web 
benefits web nearly context individuals control data data maintained distributed way 
social networks web currently closed websites restricted members semantic web provides method data stored integrated common foundation 
fig 

building network intermediate connections semantic web world wide web consortium initiative component languages rdf rdfs owl utilize existing web architecture designed support exactly type distributed data management 
languages users create ontologies classes properties instances classes describe data web 
popular projects semantic web friend friend foaf project ontological vocabulary describing people relationships 
millions foaf files online created individuals output standardized way sharing data centralized social network websites 
fig 

reputation network developed part semantic web trust project trust mindswap org 
trust project trust mindswap org extends foaf vocabulary providing mechanism describing reputation relationships people 
allows people rate reputation trustworthiness person scale poor reputation low trust reputation high trust 
scale intuitive human users algorithms applied scale values 
network contains nearly people foundation 
shows current visualization reputation network 
data created research uses general trust ratings users assign ontology allows users create set ratings user 
ratings assigned respect specific topics including ratings specify trust respect email 
allows users specify ratings large number people create large trust network keeping subset ratings effectively email filtering 
generalized trust ratings email specific subset change way algorithm applied 
generalized dataset large available 
algorithms inferring reputation individuals perspective reputation inference algorithms showing potential utility reputation networks mechanism required inferring reputation ratings 
reputation inference algorithm reputation metric reputation network recommendations person called source reputation person sink 
trust reputation literature contains different metrics designed implemented specific purposes 
metrics categorized perspective making calculations 
global metrics calculate single value entity network 
local metrics calculate reputation rating individual network ratings preferences node source query 
global system entity inferred rating 
local system entity rated differently depending node inference 
choice method best depends context 
global metrics highly effective situations experiences users similar 
context users opinions topic vary deciding email valid local metric may appropriate 
local reputation metrics neighbors ratings particular node reputation inference 
network illustrates simple example local metric important reputation networks 
reputation rating infer 
direct path single intermediate neighbor 
rate respective neighbors level highest reputation rating 
neighbors different opinions high reputation low reputation recommended low rating hand receive high reputation recommendation high reputation turn high reputation fig 

depending local opinions inferred values different 
graph node node receive different opinions node opinions highly trusted neighbors differ 
algorithm obviously addresses case path source sink 
focus finding paths networks address creating ratings cases 
social network algorithms roychowdhury eigentrust algorithm cases create stand values 
accurate metrics inferring reputation analyze accurately reputation inferred network created simple metric 
inferred rating source sink weighted average neighbors reputation ratings sink 
notationally reputation rating source sink written source directly connected sink inference necessary source rating 
nodes directly connected source computes rating calculating weighted average reputation ratings returned sink neighbors 
source neighbors perform algorithm find ratings 
source sink mark source seen source rating sink denom num neighbors source seen denom sink min rating source sink num rating source sink mark unseen rating source sink num denom return rating source sink formula shows concise representation weighted 
condition formula ensures source trust sink intermediate node 
reputation metric evaluation js tij tij js tij tij js primary objective experiment determine accuracy metric 
experiment performed iterating individual network 
reputation rating tij neighbor recorded 
connection removed 
rest network selected metric reputation rating tij inferred 
accuracy inference measured tij tij 
control set inferences calculated setting ij average reputation rating network 
average difference ij ij control 
compared possible reputation values difference accuracy 
compare accuracy reputation inferences metrics implemented ij ij values compared control standard tailed ttest 
weighted average metric implemented significantly outperformed control 
average difference actual inferred rating accuracy 
control average rating weighted average global authoritative node ij ij std 
dev 
accuracy global average ratings assigned sink global reputation metrics implemented experiment 
global metric identical local metric node source place node making query 
authoritative node chosen connected node network second global metric calculated ij rating sink average rating direct neighbors 
global metric performed statistically better control 
results support earlier hypotheses regarding benefits local metrics effectiveness metric particular 
shows expect inferred value relatively close value user want 
results confirming high accuracy metric look applying context email scoring 
scalability algorithm minor variation breadth search bfs calculation performed step 
space time complexity bfs graph 
linear algorithm usually desirable considered carefully context internet 
clearly data stored accessed distributed way calculations complexity essentially impossible calculations real time 
envision system distributed regularly updated trust servers application access remote function call web service invocation 
servers spider web collect trust data aggregate trust network model 
inference trust ratings performed servers sent back application 
techniques caching data management required servers scope clearly need addressed inference technique implemented internet wide level 
prototype prototype email client adds reputation ratings folder views message 
allows user see reputation rating individual sort messages accordingly 
essentially message scoring system 
give low scores spam spam filters focus identifying bad messages 
true benefit network relevant potentially important messages highlighted user know sender 
consider case research groups working project 
professors head group know professors know students group 
familiar students group 
part project student sends email group professor professor know message worth paying attention 
name unfamiliar message distinguishable important mail inbox 
scenario exactly type situation improves 
professors need rate students professor 
reputation algorithm looks paths graph just direct edges path professor research group students group direct professor professor link 
student professor met exchanged correspondence student gets high rating intermediate relationship 
turns students sending junk type messages network producing high rating professor simply add direct rating sender downgrading reputation 
override direct ratings factored ratings professor intermediate step path 
fig 

interface ratings alongside messages useful value basically replicate way reputation relationships reputations social settings 
example today sensible polite student professor met start email indication relationships student professors advisor collaborated topic past suggested contact receiving note professor check colleague student claims correct just take claims face value extending trust attention student basis presumed relationship 
effort needed verify student phone email walking hall weighed possible harm student seriously tends extending trust blindly worthwhile 
context mail lowers cost sharing trust reputation judgments widely dispersed rarely interacting groups people 
gathering machine encoded assertions people trustworthiness reasoning assertions presenting augmented assertions user friendly way 
algorithm inferring reputation relationships network method scoring email 
messages rated senders receive score user assigns 
real benefit method highly accurate metric valid emails unknown people receive high scores connections social network 
system complements spam filters helping identify messages indistinguishable unwanted messages 
mechanism intended replace spam filters filtering system 
envision system reputation scores compatible spam detectors social network filters expect strategies combined provide maximum benefit user 
space may involve refinement algorithm inferring reputation relationships 
preliminary analysis shows algorithm effective 
process implementing major algorithms trust literature thorough analysis comparison efficacy 
largest step develop study interface 
number messages receive ratings obviously change size network 
understanding techniques combine best reputation filtering controlled case percentage messages accurately scored important issues understand technique implemented 
supported part darpa arl nsf nist ctc fujitsu laboratories america ntt lockheed martin advanced technology laboratories 
applications described available trust project maryland information network dynamics semantic web agents project trust mindswap org 

roychowdhury personal email networks effective anti spam tool 
preprint www arxiv org abs cond mat 

gil yolanda trusting information sources citizen time proceedings international semantic web conference iswc sardinia italy june 

golbeck jennifer parsia james hendler trust networks semantic web proceedings cooperative intelligent agents helsinki finland august 

kamvar mario schlosser hector garcia molina eigentrust algorithm reputation management networks proceedings th international world wide web conference budapest hungary may 

levien alexander aiken 
attack resistant trust metrics public key certification 
th usenix security symposium san antonio texas january 

foaf friend friend vocabulary xmlns com foaf 
richardson matthew rakesh agrawal pedro domingos 
trust management semantic web proceedings second international semantic web conference sanibel island florida 
