framework visual data mining structures hans rg schulz thomas schumann department computer science university rostock rostock germany email schumann informatik uni rostock de visual data mining established effectively analyze large complex numerical data sets 
especially extraction visualization inherent structures hierarchies networks significant leap forward 
challenging task users explore explicitly large structures 
approach task tightly coupling visualization graph theoretical methods 
investigate visualization benefit common graph theoretical methods mainly developed investigation social networks vice versa 
accomplish close integration introduce design general framework visual data mining complex structures 
especially design includes appropriate processing order different mining visualization algorithms mining results 
furthermore discuss important implementation details framework ensure fast structure processing 
examine applicability framework large real world data set 
visual data mining vdm proven effective method explore large data sets 
combines automated mining algorithms visualization techniques 
variety powerful methods tools infovis card landay toolkit systems polaris tang hanrahan spotfire ahlberg roth lucas burks developed years 
tools combine linked views data high amount interactivity enabling users switch quickly automated visual methods 
integrate mining methods explore numerical data variety research areas instance ai statistics kdd 
methods extract structures inherent data hierarchical clustering 
furthermore number visualization methods developed integrated visualize data structures gathered vdm process data set 
examples structures web link graphs chemical molecule bonds 
prominent example structures copyright australian computer society appeared ninth australasian computer science conference hobart australia january 
conferences research practice information technology vol 

vladimir castro gill ed 
reproduction academic profit purposes permitted provided text included 
social networks apply methods analyze social structures identify central nodes understood essential entire data set 
want discuss question calculation methods graph theory employed essentially enrich vdm tools explore structures 
intention design uniform framework integrates variety known graph theoretical visualization methods structures 
purpose dependencies methods considered design appropriate control flow 
integration graph theoretical methods vdm environments research focus 
main reason high complexity algorithms allow interactive linking brushing vdm environments 
achieve goal special effort needs done 
ankerst classifies current visual data mining approaches categories ankerst 
methods group apply visualization techniques independent data mining algorithms 
second group uses visualization order represent patterns results mining algorithms graphically 
third category tightly integrates mining visualization algorithms way intermediate steps mining algorithms visualized 
approach focus second level separating mining process parts 
execute time consuming automatic algorithms store results 
enable users interactive exploration structures real time combining different visualization time consuming measures 
separating time consuming execution certain algorithms vdm process performance issues high relevance 
efficient data structures access mechanisms managing graphs trees high benefit interactive vdm see 

framework implementation developed mechanisms allows efficient storage structures structural measures algorithm results 
organized follows outline background graph theoretical algorithms visualization methods structures inspiring application areas section 
discuss graph theoretical methods suited vdm especially includes interaction visualization techniques section 
section introduce framework vdm structures 
includes development general design discussion internal data structures performance different graph theoretical measures algorithms 
discuss challenges approach demonstrate application realworld data sets section 
conclude discuss section 
background hand years visualization large structures especially trees graphs remarkably improved 
visualization techniques enable users interactively explore complex structural relationships information objects 
known examples hierarchy representations lamping rao pirolli robertson mackinlay card shneiderman andrews networks examples tollis eades di battista brandes 
major challenge context intuitive navigation large data sets quickly find interesting patterns preserving orientation 
focus context techniques structures developed see 
gansner koren north van ham van wijk 
challenge amount data processed 
methods explore visualize huge structures fit memory developed 
abello korn abello van ham 
ensure interactive data exploration mechanisms decide precompute long lasting algorithms needed developed 
hand variety automatic methods introduced graph theory explore structures 
general done determine complexity graph theoretical algorithms estimate efficiency effectivity practical data sets 

furthermore methods applied refined practical application fields social sciences detect community structures social biological networks newman biotechnology usage generalized interval graphs solve physical mapping problem occurs sequencing fragments dna zhang 
approaches apply graph theoretical measures parameterize visualization vice versa 
instance van ham van wijk van ham van wijk hierarchical clustering graphs represent nodes focus hierarchy level nodes context 
examples abello van ham tal gansner 
systematic approach integrates measures algorithms graph theory interactive visualization methods missing 
fact helpful support vdm structures instance select parameterize tree graph visualization graph measures 
nodes high connectivity specific values interest laid focus 
tree visualization technique resp 
graph visualization technique chosen represent structure dependency similarity tree 
edges deleted graph form tree tree visualization technique choice visualize graph representing non tree edges way see right fekete wang dang aris plaisant 
hand graph similar tree tree visualization techniques appropriate see left default graph drawing technique better choice 
networks represented tree visualization technique schumann large left small right number non tree edges images taken voigt 
algorithmic mining techniques complex structures visualization powerful important part concept vdm visualization technique limits data possibly display 
critical problem occurs analyzing real world data overcome extent appropriate information hiding brushing focus context techniques embedded visualization 
parameterize techniques information data set computed thorough algorithmic pre processing irrelevant data statistical outliers hidden important data needs emphasized bits data similar clustered field graph theory provides wide variety mining techniques finding maximum cliques shortest paths calculating modular decompositions 
different domains theory social networks called web structure mining search engines www bio chemical analysis protein structures supply methods analyzing large amounts structured data 
roughly methods divided categories subtle interrelated simply needed structural measures capture important attributes graph list section overview brandes wagner clustering algorithms decompose large structures methods graph matching identify locate substructures interest 
additionally categories efficient approaches automatically fitting methods help maintain comprehensive overview huge number applicable graph algorithms section 
structural measures structural measures computed locally separately node globally entire graph subgraph 
local measures interest centrality measures understood index important node examples formal description measure refer degree returns number incident edges node deg 
neighborhood nk equals number nodes distance node 
summed lengths shortest paths node yield closeness node cls 
maximum length shortest paths node equals eccentricity ecc max 
betweenness centrality node defined number shortest paths pass sums 
example graph 
similarity measures hand graph clustering layout algorithm position comparable nodes closer nodes minimum number edges removed graph order separate nodes way path exists conn 
node node returns number shortest paths originating passing dep dep 
different concepts centrality similarity stand measures outcome differs ways seen comparing connectivity symmetric measure conn conn dependency usually asymmetric graph classes circles cliques 
user aware differences times choose suitable expressive measure model special goal analysis 
local measures available single nodes general global measures give view structure 
simplest form global measure course average local measures average node degree easily computed 
global measures diam graph equals largest eccentricity value radius equals smallest eccentricity value 
diam rad ecc density graph provides information possible edges 
got possible edges value computed obtain measure structural resemblance tree graph induced circles 
existent measures introduce adaption term optimized visualization process graph called cross edges fraction cross edges respect edges percentage global measures useful determination appropriate visualization method underlying structure identified laid hybrid approach described section 
approach generalizes ideas introduced fekete tree visualization extended similar way 
graph clustering years different flavors clustering developed evolved 
clustering techniques purpose vdm hierarchical clustering algorithms 
yield clustering desired granularity way explore data set browsing clustering dendrogram herman marshall 
hierarchical clusterings computed bottom combining similar elements normalized shi malik single method 
top separating elements differ normalized cut method centrality clustering 
approaches similarity distance measures need computed 
way circumvent need graph decompositions results hierarchical graph partition 
directly graph structure additional measures needed usually computed linear time 
examples modular decomposition decomposition distance cliques sen brandenburg 
graph matching search special structures data set tedious task difficult automate 
different kinds graph matching exact graph matching searches subgraph identical specified pattern subgraph isomorphism problem inexact graph matching searches subgraph similar possible specified pattern 
search largest configuration largest clique longest path 
detection frequent subgraph minimum size 
matching problems quite complex algorithmic point view heuristic approaches find approximate solutions bunke 
semi automated technique selection metadata achieve certain mining goal different algorithmic methods applied 
usually fit particular case better 
determine suitable techniques metadata describing structure derive helpful indications 
example choice fitting algorithms depending graph structure 
mentioned described graph theoretical methods painfully slow due polynomial exponential runtime complexity 
algorithm usually considered efficient large data sets complexity subquadratic 
lack efficient algorithms results intolerable high computation times prevents interactive techniques time bottleneck 
case data set fulfills certain structural constraints efficient algorithms exist problems graph matching clustering decomposition widely known academic worst case constructions occur seldom realworld scenarios desired constraints virtually fulfilled 
example sparseness graph means number edges possible number edges graph 
graphs different areas sparse biochemical molecule sparse atom small number chemical bonds 
social network usually sparse person normally acquaintances 
large website rarely links hypertext document document scientific papers cite field vice versa 
algorithms optimized take advantage sparseness compute results time 
example optimized algorithm method determine node betweenness centrality described brandes 
example core clustering decomposes data set linear respect number edges worst case graph possible edges quadratic runtime bound respect number nodes 
average practical case graph usually sparse contains small fraction possible edges 
runtime complexity subquadratic terms size node set acceptable 
provided global structural measures density see section structural descriptors useful testing directed graph acyclic lead efficient algorithmic solutions np complete graph problems hard solve arbitrary graphs 
test runs linear time tries sort data set topologically 
succeeds resulting topological ordering input fast algorithms especially adapted case 
determining data relationship bertin gives impression structure organized linear circular hierarchical descriptors select parameterize appropriate visualization technique especially suited display exactly described kind structure 
example method graphs shown contrary right part graph left side obviously range technique applicable 
additionally certain graph classes visualized special manners 
instance graph detected interval graph displayed intersection model consisting intervals straight line 
view graph intersection model quite common genetic engineering computational biology 
furthermore algorithmic problems efficiently solved interval graphs 
set detection procedures certain graph classes interest yield useful hints choice suited visualization speed mining process tailor implementations detected graph class provided 
general framework visual data mining complex structures design criteria designing visualization vdm framework sensible process 
decisions early development stages complicated redo 
furthermore variety backgrounds varying data sets tasks require varying software architectures 
list main design criteria vdm framework structures generality adaptability different application backgrounds social networks organic chemistry scalability various users varying background knowledge modular design allowing plug kind visualization techniques mining operators structures flexibility flexible control mechanisms select connect parameterize measures mining algorithms visualization techniques structures scripts interactively menus data flow charts visual queries direct visual feedback support derive additional data gain deeper insight data features extracting relevant substructures usability data abstraction get easy access different kinds structure data sources independent internal external storage format acceptable reply times calculations approximation techniques need considered case unfavorable runtime complexities low upper time bound user intuitive means interacting complex mining methods efficiency handle fairly large data sets avoid screen storage space temporal bottlenecks memory efficiency smart data structures described 
runtime efficiency decoupling interactive parts vdm process non interactive ones discussed 
screen efficiency effectively apply screen space displaying large structures task orientation user fulfill tasks gain exploration target 
includes variety paradigms including focus context overview detail brushing history especially undo redo sorting filtering zooming 
reasonable design vdm framework applicable kinds possible applications tasks 
design general architecture vdm structures easily extended measures methods 
section general modules field structure exploration processing introduced scheme 
modules containers measures visual nonvisual mining methods units supporting general tasks dynamic queries history 
conceptual foundation introduce design consists different functional modules interfaces user interaction extensive mining operations preprocessing unit unit compute structural descriptors algorithmic kernel mining lays data graphical representation 
possible extract complex algorithmic kernel extensive calculations need user input different eventually faster machines user interaction done framework 
way efficiently process needed graph theoretical algorithms fundamentals complexity theory 
schematic overview framework depicted fragments colored function vdm process 
modular design required design criteria section fragments extended different visualization techniques algorithmic modules realize function detail 
fragments provide functionality initial interaction user specifies additional properties structure explicitly included data set 
user able roughly parametrize upcoming algorithmic computations setting upper runtime bounds 
data base cessing calculating descriptors algorithmic kernel substructure extraction calculating structural measures clustering decom position initial interaction zation interaction post processing result general vdm framework design 
preprocessing cleansing filtering data 
calculation descriptors tries gather metadata discussed section enabling user determine fitting mining visualization techniques 
algorithmic kernel actual calculating additional data crucial features vdm framework fulfill computing measures section extracting substructures clustering decomposing graph see section calculating graphical layout resulting data 
interaction gained graphical representation actual visual exploration data set 
post processing done manipulate query data set interactively visualization write back changes data base 
computational steps user defined modules plugged framework executed order 
usually vdm process architecture starts determining promising mining methods analyzing automatically computed descriptors user goals analysis account 
chosen techniques employed data results stored visual investigation 
depending results structured appropriate visualization technique selected generate interactive overview outcome graphically explored 
demanded design criteria wide variety navigational elements filtering searching techniques provided standardized user interface applies modules 
shows detailed view framework representative modules plugged illustrate typical operations different fragments 
detail modules shown add functionalities framework modules initial interaction starting framework modules provide possibility augment mining process additional information data mining goals constraint mining process 
example distinguishing undirected directed graphs user database data scrubbing data normalization data selection data relationship 

tw 

dag 
digraph 
exact inexact graph matching centrality measures closeness eccentricity betweenness distance measures connectivity dependency context 
global structural measures density average node degree cores decomposition distance clique decomposition detecting frequent subgraphs text edge betweenness centrality text clustering single linkage clustering average linkage clustering 
shortest path detail view content view navigation view overview goals analysis 
selection visual query discovered knowledge resulting image brushing focus context annotation overview detail zoom pan rotate rearrangement history undo redo roll back changes 
vdm framework design representative modules 
modules implemented implementation adapted framework 
indirectly influences choice applicable algorithms 
deduced directly context data set link structures hypertext documents form digraph 
additional information affects selection appropriate algorithms contain upper runtime limits insure acceptable reply times explicitly stated goals analysis schumann 
modules directly fulfill design criteria adaptability different application backgrounds scalability users varying background knowledge 
modules preprocessing modules fragment responsible data cleansing measuring errors dangling ends set edges 
furthermore preprocessing phase data selection edge weight normalization performed transformations allow define standardized data format essential design criteria 
modules processing structural measures case digraph structure fragment test graph acyclicity trig ger additional goals analysis selection especially optimized algorithms algorithmic kernel 
furthermore discussed measures section calculated approximated exact calculation time consuming 
modules algorithmic kernel functionalities modules shown fragment addressed section 
appropriate graph algorithmic visualization modules selected calculated measures described 
usually exist single optimal graphical representation aspect data propose fourfold approach style ideas multiple views 
data set inherent structures computed navigational view accessible hierarchical manner 
region interest selected navigational view sub structure associated shown content view 
selecting node edge substructure content view trigger detailed graphical representation detail view 
prevent loosing orientation data set visually exploring static overview provided aid keeping global mental map structure 
possible multiple instances view utilize different visualization techniques 
view concept ensures simple uniform way explore data available screen space effectively 
modules interaction postprocessing fragment contains usual interactions manipulations visualized data set enable user carry common exploration tasks stated design criteria 
includes interactive annotation add supplementary comments clusters substructures similar history concept developed schumann 
implementation functional modules introduced implemented interactive framework qt library 
white colored modules fully integrated grey modules development 
major challenge developing framework implement efficient storage concept structures 
context lot different approaches store graphs discussed literature 
delegating storage issues rd party products relational databases practice techniques widely adjacency matrices fairly small graphs object data structures medium sized graphs objects node link pointers structures contain nodes edges attributes simple linear order suited large graphs 
small memory overhead frameworks processing large graphs utilize approach 
popular example java implementation linear storage large graphs infovis toolkit extends table approach additional features fields auxiliary metadata column ability masking nodes edges list toggling certain selection bits 
table data structure adds functionality columns may contain permutations table rows topological ordering sequence breadth search 
allows store multiple orderings need shuffle table rows sort 
ordinary values cell table may contain entire list efficiently store adjacency lists hypergraph structures variable number nodes hyperedge data structure 
column exist placeholder filled automatically time 
pushes file reading operations computations far back possible may save time memory footprint average case 
improve speed look ups huge lists simple caching layer allows direct access couple entries 
storage concept addresses mainly large complex structures take lot space memory point just fit anymore memory bottleneck 
counters case layered set predefined behaviors chosen automatically interactively 
push storage problems far possible strong emphasize framework lies efficient storage data painstaking space saving tries maintain acceptable average access time 
done mentioned table approach augmented supplementary data memory available algorithm definitely needs 
furthermore data set split smaller subsets structure unconnected components computed separately 

case data fit memory unneeded attributes edge weights previously computed measures vital run specific algorithm loaded memory user explicitly says placeholder columns 

memory sufficiency concern standard modules framework exchangeable external algorithms especially optimized special case 

modules provide special external version smart caching layer introduced frameworks minimize memory swaps 
cases layer employs deliberate usage memory effective fit data 
larger data sets framework utilize layers needed attribute accessed 
imaginable introduce additional intermediate layers certain garbage collection functionalities semi external versions frequently modules situation node set fits main memory 
increase chance prevent generally slower external algorithms 
far layers successfully implemented 
graphical user interface trying visualize set data turns amount data just large fit output device data objects displayed outnumber available pixels screen bottleneck 
reduce visual complexity order circumvent bottleneck additional time consuming clustering steps needed 
sole purpose decreasing structural complexity node aggregation propose heuristics graph decompositions linear runtime bound 
ideally reduction produces hierarchy filter results interactively desired level detail mentioned core clustering 
presents method explore potentially overloaded graphical representation 
visualization method serves demands equally different views data generated needed functionally linked described section content view shown initial layout calculated appropriate visualization module dependency value fruchterman reingold spring embedder method fruchterman reingold graphs trees graphs provides possibilities interaction zoom rotation selection filtering output interactively constrained nodes certain centrality measure range defined sliders right 
additional navigation view dendrogram hierarchical clustering 
subsequent display schumann visualize huge hierarchical structure dendrogram selected cluster root node newly generated subview 
example detailed view shows distribution neighborhood section 
selecting certain neighborhood display content view adapted show exploratory analysis 
summary proposed framework architecture modular extensible design 
general underlying data structure handle various structures different backgrounds 
explicitly integrating application context user goals scalable various users different domains 
offers automatic interactive mechanisms control measures techniques algorithmic kernel especially enabling users specify queries visually instance select substructures 
enables users specify derive apply additional data metadata semi automatic selection suitable algorithms lead users exploration process increase user knowledge handled structures 
furthermore architecture supports handle large data sets smart data structures control mechanism long lasting resp 
interactive processable calculations 
interactive visualization techniques integrated applicable large data sets 
apply focus context overview detail brushing linking paradigms support interactive sorting filtering navigational support 
case study successfully applied framework variety data sets 
included web link graph institute internet pages nodes edges citation network nodes edges peerto peer networks nodes 
demonstrate usefulness framework design interesting insights medium sized edinburgh associative thesaurus data set short eat see www eat rl ac uk 
exemplary analysis exploration process closely related flow design chart giving details depicted modules arrows 
eat data set consists empirical set word associations kiss armstrong piper 
list frequently english words stimuli compiled associative responses test persons gathered 
responses necessarily stimuli eliminated dangling ends data scrubbing preprocess fig 
arrow 
resulting graph contains nodes stimuli connected weighted edges 
initial interaction step context knowledge type history data set leads specification graph digraph arrow 
knowledge variety descriptors calculated preprocessed digraph arrows 
includes calculate relevant selection appropriate visualization described section 
actual data set results means edges deleted order convert network tree edges remain form spanning tree 
calculations specifications started main exploration phase algorithmic kernel arrows 
important global structural measures calculated 
instance estimate graph connectivity calculated average node degree means stimulus word associated approximately stimuli words 
medium average node degree due low value concluded eat graph medium connected network suited laid tree visualization technique 
chose network visualization content view arrow 
get overview nodes arrow spring embedder network visualization technique fruchterman reingold fruchterman reingold 
computation lasted hour intel ghz machine mbyte ram executed non interactively algorithmic kernel 
get details certain nodes user zoom pan rotate graph layout select certain nodes arrows 
furthermore filter crowded representation arrow calculated associative neighborhoods chosen words structural measure neighborhood 
sliders depicted right side user fade nodes neighborhood size certain range arrows 
instance applied neighborhood filter minimum value neighbors maximum 
user investigate sparsely crowded graph main associated stimuli leaving stimuli lesser associated 
maximum value belongs node word man associated word data set 
heavily associated words sex ca 
associative links words 
user get details demand selected nodes fig 
arrows displaying neighborhood diagram selected node detail view arrows 
gave interesting insight nodes lie distance see neighborhood diagram fig 

proof observed medium high density graph indicates isolated substructures 
get grip highly interrelated graph clustered graph hierarchically core decomposition 
computation lasted couple minutes executed algorithmic kernel 
resulting dendrogram user explore graph overview detail manner focusing certain hierarchy levels fig 
arrows 
navigation view certain levels hierarchy displayed see fig 
user interactively focus certain clusters hierarchy leaves interest keeping context visible fig 
arrows 
furthermore clusters interest selected subgraphs induce content view arrows 
brushing mechanism displays subgraphs 
examples words automatically clustered possessive overview framework gui content view showing small part larger data set including highlighted shortest path red colored selected node navigational schumann containing browsable result hierarchical cluster algorithm detailed view neighborhood distribution selected node neighborhood selected 
destructive destroying anticipate instructions await establish interesting connections selected words user interactively select words compute shortest paths arrows 
path depicted focused content view see fig 
showing path words mis trust beautifully keeping rest graph context applying alpha blending 
summarizing user variety possibilities interact provided modules 
framework delivers variety exploration paths support various exploration contexts tasks 
user refine focus data set explore substructures fig 
arrow refine exploration context arrow restart process 
iterative process framework supports alternative visual navigation mining paths desired result arrow 
investigated tight integration methods graph theory visualization methods 
introduced graph theoretical methods applicability vdm structures systematically 
particular described apply methods design visual representations 
furthermore introduced general modular flexible design vdm framework structures outlined implementation details discussed applicability real world example 
tested framework different data sets instance www link structure web sites approx 
links 
gained results highly satisfying 
challenges 
continue testing evaluating framework usability scalability larger structures 
additionally measures algorithms visualization techniques need integrated 
authors express prof andreas dt helpful discussions andreas pohl clemens testing evaluating framework research peer peer networks 
abello korn 
graph sketches ieee symposium information visualization infovis san diego pp 

abello van ham 
matrix zoom visual interface semi external graphs ieee symposium information visualization info vis austin pp 

ahlberg 
spotfire information exploration environment sigmod record acm special interest group management data 
ankerst 
visual data mining visualization techniques proceedings acm sigkdd workshop visual data mining san francisco 

partitioning approach visualization large graphs proceedings th international graph drawing symposium number lncs pp 

bertin 
graphics graphic information processing 
brandes 
faster algorithm betweenness centrality journal mathematical sociology pp 

brandes 
visual unrolling network evolution analysis dynamic discourse ieee symposium information visualization infovis boston pp 

brandes wagner 
analysis visualization social networks graph drawing software springer pp 

bunke 
graph matching theoretical foundations algorithms applications proc 
vision interface montreal pp 

sen brandenburg 
graph clustering distance cliques proceedings th international graph drawing symposium number lncs pp 

fekete wang dang aris plaisant 
interactive poster overlaying graph links treemaps ieee symposium information visualization infovis seattle 

infovis toolkit ieee symposium information visualization info vis austin pp 

tal 
dynamic drawing clustered graphs ieee symposium information visualization infovis austin pp 

fruchterman reingold 
graph drawing force directed placement software practice experience 
gansner koren north 
topological fisheye views visualizing large graphs ieee symposium information visualization infovis austin pp 

newman 
community structure social biological networks pnas 
andrews 
evaluating system interactive exploration large hierarchically structured document repositories ieee symposium information visualization infovis austin pp 

card landay 
toolkit interactive information visualization chi human factors computing systems 
herman marshall 
automatic generation interactive overview diagrams navigation large graphs technical report ins reports centre mathematics computer sciences 
kiss armstrong piper 
associative thesaurus english computer analysis computer literary studies edinburgh university press 
schumann 
history mechanism visual data mining ieee symposium information visualization infovis austin pp 

schumann 
flexible approach visual data mining ieee transactions visualization computer graphics 
lamping rao pirolli 
focus context technique hyperbolic geometry viewing large hierarchies acm proceedings computer human interaction chi denver colorado usa pp 

schumann 
goals analysis visualization visual data mining tasks codata workshop information presentation design march prague 
robertson mackinlay card 
cone trees animated visualization hierarchical information acm proceedings computer human interaction chi pp 

roth lucas burks 
user interface environment exploring information ieee symposium information visualization infovis san francisco pp 


adaptive web representation human computer interaction development management pp 

shi malik 
normalized cuts image segmentation proceedings ieee conference computer vision pattern recognition cvpr pp 

shneiderman 
tree visualization treemaps space filling approach acm transactions graphics 
tang hanrahan 
polaris system query analysis visualization multidimensional relational databases ieee trans 
vis 
comput 
graph 

tollis eades di battista 
graph drawing algorithms visualization graphs prentice hall 

algorithms trees graphs springer 
van ham van wijk 
interactive visualization small world graphs ieee symposium information visualization info vis austin pp 

voigt 
www representation complex information structures german www master thesis university rostock department computer science 
zhang 
method mapping dna fragments united states patent 
