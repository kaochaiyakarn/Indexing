fuzzy multiple heuristic ordering course timetabling edmund burke jonathan automated scheduling optimisation planning asap research group school computer science information technology university nottingham nottingham ng bb united kingdom 
cs nott ac uk address issue ordering events simultaneously considering separate heuristics fuzzy methods 
combinations heuristic orderings employed largest degree saturation degree largest enrollment 
fuzzy weight event represent difficult schedule 
ordered events sequentially chosen assigned slot penalty cost value feasibility timetable maintained process 
rescheduling events performed events scheduled 
proposed algorithm tested benchmark data sets course timetabling problems results show approach produce quality solutions low requirements rescheduling 
significant potential extend approach including larger range criteria 
problem timetabling courses interest concern academic institutions 
basic problem allocate time slot room lectures limited number permitted time slots rooms order find conflict free timetable 
assignment process subject hard constraints satisfied order get feasible timetable student required attend events time 
addition important build quality lecture timetable considers administration requirements takes account lecturers students preferences 
requirements generally considered soft con straints desirable essential satisfy 
task time consuming tedious manually attempts decades generate timetables automatically 
large number events needing assigned resources time slots rooms list constraints needing satisfied search space problem large 
various approaches investigated developed solving course timetabling problems 
approaches include constraint programming graph colouring case reasoning hyper heuristics various metaheuristic approaches including multi neighbourhood local search tabu search ant colony optimisation memetic algorithms variable neighbourhood search great deluge algorithm :10.1.1.46.348:10.1.1.1.9539
overviews state art course timetabling variety papers refer 
introduced zadeh fuzzy methodologies successfully applied wide range real world applications 
scheduling timetabling applications fuzzy methodologies implemented timetabling problems rostering driver scheduling nurse rostering 
context academic timetabling fuzzy methods measuring problem similarity case reasoning yang petrovic 
petrovic employed fuzzy methodologies measure satisfaction various soft constraints 
authors describe modeled soft constraints constraint large exam constraint proximity exams form fuzzy linguistic terms defined related rule set 
memetic algorithm implemented evaluate approach benchmark examination timetabling problem instances 
approaches order events prior assignment time slot discussed authors including boizumault burke burke newall burke petrovic carter 
main principle events ordered certain heuristics event sequentially chosen assigned time slot 
ordering represents difficult schedule events 
idea assigning difficult events avoid generating unfeasible solutions 
feasible solution means events assigned time slots violating specified hard constraints 
studies best way calculate difficulty schedule event 
carter different types heuristic ordering rank exams decreasing order estimate difficult schedule exams 
considered largest degree saturation degree largest weighted degree largest enrollment 
heuristics individually time wanted order exams 
burke newall applied adaptive heuristic technique start ordering particular heuristic alter heuristic ordering take account penalty exams imposing timetable 
burke proposed new hyper heuristic approach solving timetabling problems 
single heuristic find solutions course examination timetabling problems sequence heuristics applied 
authors tabu search deepest descent local search order find best list heuristics guide sequential constructive algorithm finding best solution problem instance 
previous papers fuzzy methodology rank exams assessment difficult schedule account multiple heuristics 
showed heuristic orderings simultaneously considered rank events better results obtained compared single heuristic 
implemented heuristic orderings simultaneously comparison fuzzy ordering single linear combination heuristic orderings 
previous concerned problem creating timetables examinations 
apply underlying methodologies fuzzy multiple heuristic orderings novel context course timetabling 
apply algorithms create fuzzy inferencing systems different penalty function capture different domain characteristics 
section proposed algorithm experiments carried explained detail 
section describes problem definition results obtained 
results discussed sections 
methods basic sequential construction algorithm known analogy basic version timetabling problem soft constraints graph colouring problem see 
best known timetabling heuristics graph colouring heuristics employed basic simple timetabling algorithm see 
consider different versions basic algorithm employ different heuristic orderings respectively require steps assign events time slot 
events ordered difficult applying heuristic orderings 
heuristics employed ordering criteria largest degree ld 
degree event simply count number events conflict sense students enrolled events 
heuristic orders events terms highest degree 
largest enrollment le 
number students enrolled event order events highest number students 
saturation degree sd 
number time slots available order events 
basic motivation events time slots available difficult scheduled 
fewer time slots available higher ordering event 
largest coloured degree lcd heuristic ld 
heuristic events assigned schedule considered events cause conflict 
sort unscheduled events selected heuristic ordering number events inserted recalculate events ordering exist unscheduled events select event highest difficulty scheduled event clash free time slot insert event time slot penalty remove event unscheduled event list find time slots event inserted minimum number scheduled events need removed time slot time slot number scheduled events need removed select time slot randomly candidate list time slots ts number events time slot conflict event select event time slot minimum cost move event move event time slot bump back event unscheduled event list insert event time slot remove event unscheduled event list sort unscheduled events selected heuristic ordering pseudo code general framework sequential construction algorithm weighted largest degree heuristic ld 
number events conflict total number student involved conflict taken account 
events selected sequentially ordering assigned valid time slot cause minimum penalty cost event 
selection clash free time slot penalty cost time slots available available time slot list selected 
clash free time slot available events scheduled earlier need moving scheduled events conflicted new event valid time slot order create clash free time slot current considered event 
process fails find clash free time slot current considered event attempts scheduled events time slot selected randomly list time slots minimum number scheduled events need bumped back 
conflicting scheduled events removed selected time slot new event inserted 
removed events bumped back unscheduled event list 
process continues events scheduled 
rest process referred rescheduling procedures 
description experiments number experiments carried order compare single heuristic ordering simultaneous multiple heuristic orderings 
experiment ordering simply inserted basic general algorithm 
single heuristic ordering order provide comparative test algorithm initially run implementing fuzzy ordering 
approach events problem instances ordered single heuristic ordering 
events selected scheduled ordering 
fuzzy multiple heuristic orderings decision making environments case factors simultaneously taken account 
known factor need emphasised order generate better decision 
trade various potentially conflicting factors 
general framework fuzzy reasoning facilitates handling uncertainty 
fuzzy modeling thought task designing fuzzy inference system 
selection important parameters inference system crucial system behaviour highly dependent large number factors membership functions chosen number rules involved fuzzy operator 
observations implementing fuzzy multiple heuristic orderings examination timetabling problems see cases considering heuristic orderings simultaneously produce better solutions compared single heuristic ordering heuristic orderings 
inspired finding focus creating fuzzy inferencing system single heuristics largest degree ld largest enrollment le saturation degree sd 
heuristics selected ones featured examination timetabling fact design fuzzy system utilising heuristics intractable tuning methodology utilised 
explained variable options membership function shape 
fuzzy system input variables search tuning process needs explore combinations membership functions 
consider fuzzy system input variables tuning process need explore combinations 
data sets system run experiments heuristic orderings take months finish 
restricted form exhaustive search find appropriate shape fuzzy membership functions system 
alternatives may constructing fuzzy model 
implementation arbitrarily restricted search membership functions shown 
triangular shape membership functions employed represent linguistic terms small medium high 
membership function tuned moving point cp universe discourse 
single point corresponded right edge term small centre point term medium left edge term high 
cp parameter fuzzy variable inputs output 
small medium high cp triangular membership function fuzzy multiple heuristic ordering medium high cp small medium cp cp small medium high cp cp range possible membership functions search carried find best set cp parameters 
search point cp fuzzy variables take value inclusive 
increments values data sets 
effect varying point cp shown 
solution quality calculation described section criteria determine fitness membership function combinations 
table illustrates fuzzy rule set consisting fuzzy rules connecting input variables ld le sd single output variable 
note addition basic terms hedge utilised create extra terms output variable 
implementation input values normalised range 
transformation follows mina maxa mina actual value initial range mina maxa 
example normalised value new range 
standard mamdani style fuzzy inference implemented standard zadeh min max operators 
centroid defuzzification utilised obtain single crisp real value represents difficulty scheduling event 
events problem instance evaluated fuzzy system sequential constructive algorithm crisp output event ordering events 
event biggest crisp value selected scheduled process continued events scheduled violating hard constraints 
cp table fuzzy rule set fuzzy multiple heuristic ordering ld le sd sd sd vs vs vs vs vh vs small small medium high vh high table course timetabling problem character data sets 
events 
rooms 
students 
features small small small small small medium medium medium medium medium large implementation problem definition table reproduces characteristics data sets experiments 
problems deal assignment courses time slots rooms violate hard constraints 
student required attend course time 
course scheduled room satisfies features required course 
course scheduled room room accommodate students registered 
course scheduled room time slot solutions violate hard constraints defined feasible solutions 
feasible solutions accepted 
hard constraints solutions try satisfy soft constraints 
student scheduled attend course day 
course scheduled time slot day student 
student scheduled attend courses consecutively day attempt best satisfy soft constraints compulsory 
quality feasible solution measured simply summing number students fail satisfy soft constraints 
number students violate soft constraints better solution quality 
timetable developed week monday friday 
day time slots available 
number time slots available number rooms 
experimental results order reduce computational time number rescheduling procedures allowed limited small medium data sets large data set limited times 
meant search solution events needed fuzzy model currently consideration skipped solution fuzzy model treated infeasible solution 
new fuzzy model tested 
observation cases quality solutions usually produced small number rescheduling procedures required 
setting maximum number required rescheduling procedures implemented single heuristic ordering 
algorithm developed java object oriented programming 
fuzzy inference engine developed sazonov implemented 
experiments run pc ghz pentium mb ram 
heuristic ordering run problem instances 
experimental results shown table 
best results heuristic orderings implemented highlighted bold font 
table indicates feasible solution generated specified maximum number rescheduling procedures 
seen fuzzy multiple heuristic ordering outperformed single heuristic ordering tested problem instances 
term feasibility fuzzy multiple heuristic ordering managed produce feasible solutions data sets best single heuristic ordering sd managed produce feasible solutions data sets 
single heuristic orderings worse 
single heuristic ordering able produce feasible solution large problem instance 
table comparison solution quality single heuristic ordering fuzzy multiple heuristic ordering data sets best fuzzy single heuristic ld sd lcd le small small small small small medium medium medium medium medium large table comparison number rescheduling procedures required produce solutions shown table data sets best fuzzy single heuristic ld sd lcd le small small small small small medium medium medium medium medium large table summarises performance heuristic ordering terms number rescheduling procedures required 
seen heuristics obtained solutions small size problem instances rescheduling procedures 
hand fuzzy multiple heuristic ordering single heuristic ordering sd managed find solutions medium size problem instances rescheduling procedures medium problem instance fuzzy multiple heuristic ordering needed perform rescheduling procedures event 
large problem instance fuzzy multiple heuristic ordering needed perform rescheduling procedures times solution single heuristic ordering sd unable find feasible solution refer table 
discussion main objective research investigate potential implementing fuzzy systems solving timetabling problem 
fuzzy approaches successfully applied problem involve multi criteria decision making proposed new heuristic utilises fuzzy reasoning assess difficulties scheduling events feasible time slots heuristic orderings simultaneously considered 
current practice decision choose event difficult schedule usually single heuristic ordering 
selection decision important order events selected influence search algorithm finding feasible solution 
graph heuristic orderings explained section usually applied individually measure difficulty event scheduled 
expect generate solutions outperform solutions produced iterative improvement methods benchmark data sets expect appropriate ordering events generated heuristic ordering measure difficulty event scheduled 
providing ordering events sequential constructive algorithm hopefully guided search better quality solutions 
looking quality produced solutions summarised table test instances small medium size fuzzy multiple heuristic ordering resulted better solutions compared single heuristic orderings 
large data set feasible result obtained fuzzy multiple heuristic ordering implemented 
consistent previous implementation fuzzy multiple heuristic ordering examination timetabling problems see 
observations indicate fuzzy multiple heuristic ordering approach may applicable wider range timetabling scheduling problems 
table show comparison best results approaches researchers applied data sets 
kept mind method uses simple constructive initial solution compared methods iterative improvement approaches burke 
burke socha start finding solution constructing infeasible initial solution iteratively improving timetable limited number evaluations 
abdullah burke start feasible solutions variable neighbourhood search randomised iterative improvement table comparison solution quality results literature data ns thh amm set small small small small small medium medium medium medium medium large fuzzy multiple heuristic ordering ns neighbourhood search graph hyperheuristic thh tabu search hyperheuristic random restart local search amm ant max min algorithm techniques improve solutions 
burke sequence heuristic orderings construct initial solution applied steepest descent local search improve solution 
approach perform particularly small size problem instances evident results comparable approaches medium large size problem instances 
medium data set obtained best result compared approaches 
think unfair compare constructive approach iterative techniques 
interesting compare burke approach sequence heuristic orderings construct solution heuristic orderings simultaneously construct timetable 
comparing constructive approaches approach produced better results medium size problem instances slightly worse solutions obtained small large size problem instances 
believe initial solutions easily improved applying simple optimisation algorithm 
established significant potential approach adding heuristics 
possible combinations heuristic ordering listed section 
research supported malaysia utm ministry science technology innovation malaysia 
abdullah burke 
randomised iterative improvement algorithm improve solution quality course timetabling 

accepted published mic 
alvarez valdes crespo tamarit 
assigning students course sections tabu search 
annals operations research jan 
burke 
comparison fuzzy ordering heuristics examination timetabling 
editor proceeding th international conference advances soft computing pages 
burke 
fuzzy multiple ordering criteria examination timetabling 
burke trick editors proceeding th international conference practice theory automated timetabling pages 
hofe 
solving rostering tasks generic methods constraint optimization 
international journal foundations computer science 
boizumault 
constraint logic programming examination timetabling 
journal logic programming 
potts smith 
constraint satisfaction problems algorithms applications 
european journal operational research 
burke newall petrovic 
time predefined approach course timetabling 
journal operations research 
burke de werra kingston 
handbook graph theory chapter applications timetabling pages 
chapman hall crc press 
burke jackson kingston weare 
automated university timetabling state art 
computer journal 
burke kendall soubeiga 
tabu search hyperheuristic timetabling rostering 
journal heuristics dec 
burke petrovic qu 
case reasoning course timetabling attribute graph approach 
aha watson editors practical aspects declarative languages international workshop padl san antonio texas usa volume lncs pages 
springer verlag berlin heidelberg 
burke meisels petrovic qu 
graph hyper heuristic timetabling problems 
european journal operational research 
appear 
burke newall 
solving examination timetabling problems adaption heuristic orderings 
annals operations research 
burke petrovic 
research directions automated timetabling 
european journal operational research 
carter 
comprehensive course timetabling student scheduling system university waterloo 
burke erben editors practice theory automated timetabling iii konstanz germany august selected papers volume lecture notes computer science pages 
springer verlag berlin heidelberg 
carter laporte lee 
examination timetabling algorithmic strategies applications 
journal operational research society 
carter laporte 
developments practical course timetabling 
lecture notes computer science 
schaerf 
local search application course timetabling 
lncs aug 
:10.1.1.46.348
goltz 
university timetabling constraint logic programming 
gupta editor practical aspects declarative languages international workshop padl san antonio texas usa volume lecture notes computer science pages 
springer verlag gmbh berlin heidelberg new york jan 
li kwan 
fuzzy genetic algorithm driver scheduling 
european journal operational research 

memetic algorithms timetabling 
reynolds tan mckay editors proceedings congress evolutionary computation cec pages canberra dec 
ieee press 
petrovic burke 
ch 
handbook scheduling algorithms models performance analysis chapter university timetabling 
crc press 
petrovic patel yang 
university timetabling fuzzy constraints 
burke trick editors practice theory automated timetabling pittsburg usa august selected revised papers lncs 
springer verlag berlin heidelberg new york appear 
sazonov 
fuzzy logic expert system automated damage detection changes strain energy mode shapes 
non destructive testing evaluation 
schaerf 
survey automated timetabling 
artificial intelligent review 
socha knowles sampels 
max min ant system university timetabling problem 
dorigo di caro sampels editors proceedings ants third international workshop ant algorithms lecture notes computer science 
springer verlag berlin germany 

fuzzy set theory approach rostering problem 
fuzzy sets systems 
yang petrovic 
novel similarity measure heuristic selection examination timetabling 
burke trick editors practice theory automated timetabling pittsburg usa august selected revised papers lecture notes computer science 
springer verlag berlin heidelberg new york appear 
zadeh 
fuzzy sets 
information control 
