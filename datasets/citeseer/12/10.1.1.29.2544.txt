modelling reasoning evidence legal procedure henry prakken institute information computing sciences utrecht university box tb utrecht netherlands henry cs uu nl www cs uu nl staff henry html article investigates modelling reasoning evidence legal procedure 
dialogue game model relevant parts dutch civil procedure developed players adversaries judge 
model aims legally realistic technically founded 
legally main achievement realistic account judge role legal procedures provided current models 
technically model aims preserve features earlier developed framework player argumentative dialogue systems 

procedural aspects legal argument important topic ai law research 
models developed form dialogue games regulating argumentative speech acts de ning outcome dispute cf 

contributions valuable research needed 
firstly current models judge role modelled limited simple activity determining truth parties claims 
actual legal procedures judges elaborate role 
instance dutch civil procedure judges allocate burden proof determine grounds suciently support claim complete parties arguments legal common knowledge decide admissibility evidence assess evidence 
main aim show procedural models legal argument give realistic accounts judge role legal disputes 
second limitation current models formal foundations ad hoc 
current systems carefully designed hard see underlying design principles design choices turn hard compare various models investigate formal properties 
reasons begun develop general framework permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
st louis missouri usa copyright acm 
argumentative dialogue systems secondary aim show procedural models legal argument framework 
attempt realise aims modelling example procedure viz 
somewhat simpli ed version dutch law evidence civil procedure 
ultimately research lead automated procedural support tools deciding legal disputes 
designing support tool aim 
organised follows 
section surveys legal procedural phenomena modelled 
section discusses formal tools section discusses main tool framework extended suit aims 
formal model section illustrated example section section concludes 

legal analysis dutch civil procedure far modelled brie review dutch civil procedure far relevant purposes pro ting discussion procedure ai law perspective 
procedure divided pleadings phase adversaries case judge provide evidence necessary decision phase judge withdraws decide case 
pleadings phase separated written optional oral part 
written part parties exchange documents 
rst plainti statement claim contain plainti claim plus grounds claim 
grounds may purely factual plainti may leave legal warrant connecting grounds claim may parties arguments 
parties need explicitly state common sense knowledge state knowledge don need prove 
judge decides common sense knowledge 
defendant replies defence contain defendant challenges plainti claim grounds 
challenges may concern issues procedure procedural legality move subject dispute 
adversaries may exchange documents content procedural rules state conditions 
party may ask provide oral 
pleadings phase parties may er provide evidence claims plainti may change initial claim judge assigns burden proof party appropriate party provide evidence 
pleadings phase ended judge gives verdict bound rules 
important principle dutch civil procedure judge passive 
instance judge accept claims adversaries evaluate evidence give verdict basis facts parties exceptions generally known facts legal rules 
allocating burden proof general rule parties bear burden proving claims 
judge may decide basis special provisions grounds reasonableness 
things means burden proof distributed parties making claim automatically create burden prove cf 

assessing evidence provided parties judge bound rules 
conclusive evidence accepted absence party allowed provide 
instance ocial document containing statements legal ocial conclusive evidence content true 
evidence accepted judge attacked 
instance called decisive parties evidence content true 
law states rules admissibility evidence rule witness testimony may count evidence witness observed called de inadmissible 
bounds judge free assess evidence 
legal rules civil procedure parties bound rational rules reasoning discourse studied example philosophers logicians argumentation theorists 
instance parties correctly apply rules logic deductive defeasible respect certain rational conventions discourse 
opinion main task ai law models legal procedure explain rational rules conventions integrated speci legal procedures 
explanation ered clear separation actual dispute takes place pleadings phase rational reconstruction dispute judge decision phase 
second phase modelled 
implications model actual pleadings vs rational reconstruction key element approach model decision phase civil procedure rational reconstruction pleadings phase 
pleadings phase judge participant dispute instance assigning burden proof 
decision phase adversaries involved judge reconstructs dispute pleadings phase dialectical structure compute decision 
identify argumentative speech acts parties including judge procedurally correct logically relate 
judge complete adversaries arguments necessary decide advanced arguments internally strong 
judge con icting arguments 
adversaries involved decision phase phase modelled dialogue judge 
judges activity rationally reconstructing pleadings phase imagined attempt extract argumentative speech acts said writing pleadings building rational dialogue rules rational dialogue game 
approach account relation legal rules civil procedure rational rules argumentative discourse 
firstly respects law governing pleadings phase says instance respecting commitments move relevant 
issues modelled decision phase rules rational discourse 
secondly legal rules governing pleadings phase built rules decision phase dialogue 
instance rational admissibility defendant attacks plainti main claim independent defendant stated attacks defence 
long allowed rules rational discourse judge input attack point rational reconstruction 
defendant attack defence judge subsequently decide attack illegal 
aspects modelled list detail activities modelled 
example dialogue modelled reader invited look ahead section 
parties acts making challenging retracting conceding claim 
stating conceding retracting arguments 
claiming move procedurally illegal arguing claims 
judges acts deciding legality move 
deciding burden proof 
deciding party met proof burden 
involves deciding issues 
complete argument legal commonsense knowledge argument able support absence counterarguments internal validity counterarguments allowed argument survives competition counterarguments dialectical validity 

formal dialectics procedural ai law models largely branch argumentation theory philosophical logic called formal dialectics 
argumentative discourse modelled dialogue games regulating argumentative speech acts determining result dialogue basis players committed logically follows 
walton krabbe identify kinds rules dialogue systems locution rules moves possible structural rules moves admissible commitment rules ects moves players commitments termination rules dialogues terminates outcome 
important contribution ai law formal dialectics possibility counterargument 
formal underpinning contribution provided development ai 
games defeasible argumentation ai research defeasible reasoning resulted dialectical argument games 
games model defeasible reasoning dispute proponent opponent argument 
player attack player arguments counterargument su cient strength 
usually player wins player run moves 
initial argument justi ed proponent winning strategy 
natural idea argument games dialectical asymmetry 
proponent wants prove initial argument justi ed attacks stronger targets strict defeat opponent wants prevent proponent meeting aim attacks may just strong targets defeat 
clearly argument games formal dialectics 
purposes games logical proof theories important limitation assume xed information base arguments constructed 
contrast legal disputes information supplied dynamically dispute 
accordingly showed argument games ed sense cf 

limitation argument games fully capture shifts burden proof party 
suppose plainti ful lls burden proving agreement sales contract reached defendant argues exception time negotiations 
legally defendant burden proving exception logically means dialectical asymmetry reversed plainti suces cast doubt defendant evidence suces simply defeat argument 
showed argument games modi ed cope phenomenon 
essentially argument game dialectical asymmetry parties reversed depending argument moved meet proof burden prevent meeting proof burden 
purposes means time counterargument moved judge rst decide burden proof required defeating force defeat strict defeat attacker determined 
contributions speech act aspects argumentation 
aspects addressed framework embedding argument games dialogue systems 
build framework discuss detail 
combining argument games dialogue systems framework intended player argumentative dialogue systems 
adds elements fth sixth element viz 
proof burden rules underlying dialectical argument game 
framework designed allow maximal freedom variations points bounds general principles 
framework allows various sets speech acts 
act set act components possible targets replies act 
acts replied entirety just component viz 
act 
example challenge claim attacks entire claim 
argue move replied di erent places premises challenged inference rule undercut 
shall ambiguous act act component danger confusion 
kind speech act move initiates dialogue de ned attacking reply reply speech act component 
instance systems claim attacked concede 
line intended meaning act reply 
propositions content speech acts come logical language underlying dynamic argument game arguments moved dialogue valid arguments game 
moves player speech act initial move target 
means non initial dialogue move explicitly reacts preceding move dialogue 
condition induces convenient tree structure dialogue 
move player player act denotes speech act target denotes act component move replies 
dialogical ects speech acts captured terms players commitments set propositions committed dialogue respect rest dialogue 
instance dialogue systems claim move commits mover instance move player allowed 
crucial notion framework admissibility moves 
point dialogue system de ne moves point 
framework leaves content admissibility rules free necessary conditions 
importantly moved speech act de ned reply move target 
argue move admissible underlying argument game 
move structurally relevant sense de ned 
underlying argument game idea taken dispute players implicitly build argument tree containing arguments exchanged 
tree determine admissibility argument moves viz 
underlying argument game cf 

ideally tree determines outcome ideally proponent wins dispute tree dialectical proof main claim basis called move legality name change prevent confusion move legal correctness 
said dispute 
argument tree associated dispute just tree forest trees proponent may give alternative arguments main claim 
idea function exist extracts associated argument trees dialogue 
de nes function 
notion structural relevance essential framework discuss detail 
relevance de ned terms essential notion viz 
dialogical status move 
status captures move currently adequately defended mover 
rst discuss move dialogical status 
attacks directed act component status move de ned terms act components 
ways act component player conceded attacks player successfully replied success determined recursively 
act component conceded reply 
dialogical status leaves dialogue tree attackers status moves recursively de ned upwards definition 
dialogical status moves components moves move components 

move act components 

move component conceded attacking moves reply 
relevance move de ned follows 
definition 
relevance 
target relevant attacking reply changes status main claim 
move relevant replies relevant target 
note reply conceded move relevant 
illustrate de nitions consider gure component attacking moves 
dispute tree left situation tree middle shows dialogical status moves continued replying move ect status irrelevant 
tree right shows situation continued replying status changed relevant 
notion relevance serves purposes 
provides lower bound freedom move alternatives earlier moves 
secondly regulates postponed reply sense 
nally enables elegant notion move relevant turn shifts player soon player succeeded changing status main claim way 
proponent move long main claim opponent move long 
words player rst moves zero rule taken notion dialogical status generalises idea 
innovation extend ideas speech acts moving arguments 
irrelevant relevant dialogical status moves 
moves zero attacker attackers moved player admissible moves dialogue terminated 
fact termination de ned implicitly situation player move admissible moves 
framework assumes notion winning dispute constrained condition termination main claim labelled winner way 

conceptual specification turn modelling example procedure 
challenge twofold 
legal challenge model procedure accurately technical challenge preserve structure general framework 
meeting challenge key issue incorporate third party judge preserving useful roles notions dialogical status relevance 
ideally rst extend general framework third party instantiate procedure 
goes limits con ne de ning particular dialogue game leaving generalisation research 
rst sketch dispute dialogue game generally evolves recall rational reconstruction actual events 
dispute starts main claim plainti challenged defendant adversaries exchange arguments counterarguments challenge premises legality moves 
disagreements resolved conceding retracting claims arguments 
dispute adversaries implicitly build argument tree containing arguments exchanged determining admissibility argument moves 
judge move adversaries decides legality move necessary assigns burden proof argument moved decides internal dialectical strength 
adversaries terminated dispute judge completes new arguments possible 
moves run judge determines winner dispute looking dialogical status plainti main claim 
look elements detail 
players players proponent opponent renamed plainti defendant 
addition third party judge 
plainti defendant called adversaries 
adversary denotes adversary 

underlying argument game underlying argument game assumptions possible 
firstly game allow switches dialectical asymmetry caused shifts burden proof cf 

means players including judge move arguments dialectical roles proponent opponent players di erent roles di erent stages dispute 
game allow reasoning strength arguments 
recall reasoning takes form 
opponent arguments need state priorities defeat target 
proponent attacks opponent argument argument includes priorities making strictly defeat opponent argument moves priority argument priority argument opponent argument defeat strictly defeated target 
priority arguments attacked 
arguments admitted argument game assume divided strict deductive defeasible arguments category subject defeat 
class defeasible arguments may contain instance analogical inductive abductive arguments 
assume game allows undercutting arguments assumption attacks 
note adversaries may state incomplete arguments leaving common sense legal information arguments need admissible underlying argument game judge task decide completed admissible arguments completed versions arguments entered argument game tree associated dispute 
logical language need logical language usual sense 
fact practical applications better allow structured linked pieces natural language toulmin argument schemes cf 
pictorial languages zeno system room system 
speech acts dialogue game contain usual speech acts making challenging retracting conceding claims moving arguments 
game allow conceding retracting arguments questioning legality moves 
move argument taken 
ect give possibility counterargument 
illegal move adapted 
third category speech acts introduced attacks viz 
determiners 
acts played judge replies decide certain issue 
ect determiners dialogical status target speci ed case 
model contain determiners allocations burden proof internal validations arguments 
commitment rules literature formal dialectics issues consistency logical closure commitments 
legal applications issues important legal requirements discussed section choose simple treatments aspects order focus issues 
firstly commitments de ned logically closed admissibility rules look classically follows 
secondly illustration rst point making commitments classically inconsistent admissible 
judge incur commitments instance completing stating argument 
clearly judge respect commitments way players penalty incoherent 
adversaries respect commitments judge common sense legal knowledge 
ects speech acts speaker commitments dialogue game contain usual rules making conceding claim commits claim moving arguments commits premises 
furthermore line moving conceding argument commit material implication premises 
moving argument implicitly creates commitment 
conceding argument di erent means connection premises conceded leaves room challenging premises 
retractions propositions simply assumed retraction ends commitment 
problems implied commitments avoided making unsuccessful retraction inadmissible retracted commitment implied commitments 
retracting argument material implication premises removed commitments 
proof burden stores judge assign burden proof players players commitment store proof burden store 
roughly speaking commitments coherent proof burdens right 
model judge assign burden proof technical way capture judge decision proposition needs proof 
having burden proof independent committed 
assume instance plainti claims defendant challenges judge assigns burden proving defendant 
plainti committed having burden proof defendant burden proving committed 
recall aim regulated relevance 
idea move adversary turn shifts judge decides issues viz 
legality move burden proof necessary internal dialectical strength moved argument 
judge turn completed turn shifts adversary status main claim 
judge turn completed ways 
rst soon changed dialogical status main claim second judge relevant decisions having ected change 
fact intended result moving adversary turned wrong move 
holds long new adversaries moves judge procedure applied 
moves left judge move relevant additional arguments explained 
procedure judge turns judge turns simply de ned xed procedure completion phase explained 
consider move moved 
rst checked legality illegal turn switches back legal argue illegal move turn switches 
move judge decides burden proof turn switches adversary gets 

judge assesses internal validity argument moved invalid turn switches back 
judge decides evidence 
turn switches 
moved argument counterargument turn switches 
judge assigns burden proof 
judge assesses argument dialectical validity 
valid turn switches noted section decisions procedure governed procedural law 
law captured dialogue game modelled instance knowledge system supporting judge various procedural decisions 
examine details procedure 
task map decision tree zero acts dialogue game 
deciding move legality deciding move procedurally legal done moving speech act deciding move illegal done attacking speech act illegal move judged illegal argument move illegal 
speech act determiner attacker adversaries 
replied replies argue legality move disputed adversaries 
judge decision move legality takes form decision dispute 
ects illegal move mover commitments argue ect argument tree associated dispute root new tree 
ect dialogical status attacker viz 

special admissibility conditions illegal move 
note speech act question admissibility move decision phase legality pleadings phase 
assigning burden proof assigning burden proof move counterargument done determining speech act burden player burden proving assigned 
judge taken mean needs proof 
case burden speech act ects speaker commitments case added judge commitments 
burden assignment ect associated argument tree 
assignment followed counterargument possible determine required defeating force accordingly counterpart associated argument tree proponent role modi ed adding priorities strictly defeat target 
note decision regard valid judge move undercutting priority counterargument 
ect dialogical status target follows 
consider rst burden assignment burden adversaries assignment target move move stays target move 
target argue move move stays 
consider assignment burden judge 
fact judge determined true challenge impossible 
done follows 
note method requires re nement notion conceded move 
assignment target move target conceded note target claim move premise component argue move 
conversely assignment target move conceded ects target claim move premise component argue move 
target argue act move conceded target argue act reversely target argue act move target argue act conceded 
proof burden allocations satisfy special admissibility conditions cf 

importantly player prove player burden proving 
deciding internal validity argument rst sight internally validating argument expressed doing 
account possibility judge validates argument completing commonsense legal knowledge 
accordingly deciding argument internally valid expressed speech act valid means validated argument extends zero premises 
move admissible completed argument constructible underlying argument game 
valid move commits judge premises added ect associated argument tree added ect dialogical status target move obvious move stays 
surprisingly deciding move internally invalid starts moving valid move 
purpose add argument associated argument tree invalidated undercutting argument 
sum judging argument internally valid expressed rst making valid move proceeding issue judging argument internally invalid expressed rst making valid move undercutting dialogical status target 
deciding evidence evidence expressed special way deciding argument internally valid viz 
extending deductively valid argument material implication premises 
inadmissible rules underlying argument game 
deciding dialectical validity argument modelling decisions dialectical validity argument recall rst adversaries allowed move counterargument long attacks target priorities required underlying argument game stated adversaries added result assignments burden proof 
judge decides dialectical validity argument associated argument tree fully formed 
note issue dialectical validity arises counterargument moved 
judge validate argument doing 
argument validated counterargument judge indirectly invalidates target 
judge directly invalidate argument moving undercutting argument priority counterargument 
case argument moved proponent role invalidated argument attacking priority part moved opponent role invalidated moving priority argument 
admissibility moves admissibility moves special conditions discussed conditions discussed section 
addition game inherits course necessary conditions general framework described 
dutch civil procedure allows alternative replies move reason sharpen lower bound alternatives provided relevance criterion general framework 
alternative earlier move admissible relevant satis es admissibility criteria 
completion phase pleadings phase moves players dealt dispute terminated information base created dispute enable additional argue moves 
instance factual claim adversaries combined legal rule enable relevant counterargument 
accordingly dialogue game allows judge complete dispute move 
decision phase dispute terminates additional argument moves run dialogical status main claim determines outcome 
note automated support tool generation arguments phase automated 
passivity judge judge passivity respect facts modelled 
firstly commitment incurred judge required generally known factual legal truth said adversaries 
capture silence implies consent principle judge accept claims 
design problem arises claim contested dispute determined dispute terminated 
sense forbid judge incur commitments violate claims adversaries 
reason dialogue game exclude completion phase judge discovers counterargument commitments adversary 
just stated rule contradicted commitment types 
firstly claim earlier adversaries case counterargument reveals claim 
judge argument prevail judge state priority argument said dispute 
secondly contradicted commitment legal rule case judge free determine legal rule correct takes priority 
contradicted commitment generally known fact empirical generalisation 
case happen judge judgement fact generally known con icts claim parties 
situation dutch civil law provides clear answer dialogue game leave judge free prefer argument 
cases judge passivity preserved 
happen judge uses commitment adversary adversary retracts 
deal judge required start completion phase retracting arguments 

formal dialogue game formal model 
space limitations important de nitions detail reader referred speci cation 
speech acts table speci es speech acts type speech acts possible reply 
multi component moves argue illegal moves premise moved argument component argument 
notation formed formulas set formed formulas arguments player move 
rows concerning argue act argument attacking argument attacked burden acts denotes burden allocated 
admissibility moves move admissible dispute satis es conditions listed 
rst set conditions inherited framework discussed section 
rst move claim table speech acts acts attacks determiners claim concede illegal argue argue retract burden illegal concede illegal retract illegal argue argue concede valid illegal retract burden concede concede illegal retract illegal burden valid illegal argue argue argue 
target occurs 
di erent earlier replies target 
act possible reply target see table 
argue move illegal move valid move moving admissible associated argument tree cf 

relevant set conditions taken game speaker denotes player making move 
conditions obvious possibility conditions concessions retractions condition way avoid circular arguments conditions regulate coherence moves commitments 

speaker commitments classically imply 
retracts speaker committed retracting retraction speaker commitments classically imply 
condition allows successful retractions 
instance commitments contain retracting inadmissible 
admissible rst retracted 
players forced explicitly indicate implied commitment retracted 

act argue challenge dispute branch 
proposition challenge move mover withdrawn challenge backtracking concede 

act speaker commitments classically imply 

commitment incurred move player commitments classically imply challenge remaining admissibility conditions motivated aims 

speaker judge completion phase started moves follow procedure speci ed section 

act determiner mover judge 
allocates burden proof proof burdens player player assigned burden proving replies move played act burden burden burden 
replies argue move argue target 
attacks argument moved target ii 
act burden burden burden 

argue move target main claim speaker burden proving claim false 
condition implies speaker earlier attacked main claim move 

argue move moved judge premises generally known facts legal truths commitments adversary 

classically implied judge commitments factual legal truths commitment incurred move 
condition ensures move con icts judge earlier decision factual legal truth 

completion phase judge rst retracts arguments adversary commitment retracted moves argue move admissible associated argument tree 
uses adversary commitment retracted 
termination winning moves adversaries left consider judge completes dispute way described admissibility condition 
dispute terminates automatically judge completion moves left 
winning plainti wins termination main claim defendant wins 

example illustrate dialogue game model example dispute 
save space presentation semiformal 
ects commitments proof burdens associated argument tree shown change ected 
case sales contract created 
plainti argues challenged defendant provides witness evidence 
defendant attacks evidence saying written agreement business oral agreements occur 
judge decides plainti evidence convincing defendant tries alternative attack claiming exception rule er acceptance create contract basis negotiations 
challenged plainti produces court document declaring 
plainti argues inadmissible basis procedural rule judge may ignore documents provided written pleadings phase 
judge declares admissible plainti procedural interests damaged 
plainti challenges authenticity 
judge assign burden proving false plainti appearance counts conclusive evidence 
plainti fails provide dispute ends win defendant 
claim valid contract target added plainti commitments 
valid contract 
target burden target judge assigns burden proving valid contract plainti argue witnesses smith baker heard accept er valid contract 
target added plainti commitments 
valid target judge completes plainti argument rules er acceptance er acceptance valid contract defeasible implication 
completed argument root rst associated argument tree 
added judge commitments 
argue written agreement oral agreements occur business er acceptance 
target defendant attacks plainti argument rebutting 
added defendant commitments 
valid target judge completes 
completed argument added rst argument tree reply added judge commitments 
argue target judge declares defendant attack invalid stating priority argument 
antecedent empty judge simply says plainti evidence outweighs defendant added judge commitments 
added rst argument tree reply argue negotiations acceptance void 
target defendant backtracks alternative counterargument gives rise exception added defendant commitments 
valid target judge completes 
added judge commitments 
burden target judge assign burden proving exception defendant dialectical asymmetry switches 
completed argument added rst argument tree second reply 
target burden target argue court document declares 
target added defendant commitments 
valid target judge complete legally conclusive evidence content 
argument extended replaces third argument tree reply illegal defendant provided document written pleadings phase document inadmissible evidence 
target plainti argues inadmissible evidence 
added plainti commitments 
valid target judge completes plainti argument legal rule document provided written phase document inadmissible evidence completed argument root second associated argument tree 
added judge commitments 
argue plainti interests damaged apply 
target judge rejects plainti claim undercutting argument argument procedural violation damage plainti interests 
argument added second associated argument tree reply added judge commitments 
court document 
target plainti backtracks challenging premise defendant counterargument main argument 
burden target point moves adversaries left consider constructed basis dispute enable new arguments dispute terminated 
labelled defendant winner 

discussion limitations dialogue game features motivate research 
firstly requirement move replies preceding move excludes useful moves lines questioning cross examination witnesses goal revealing inconsistency witness testimony 
typically lines questioning want reveal aiming 
secondly points ways model legal procedural acts clear correspondence language legal decisions 
instance judges merge decisions internal dialectical strength argument usually regard presence defeating counterargument evidence argument internally valid 
practical testing determine indicates aw model clear separation internal dialectical validity improve quality legal decisions 
related research space limitations comparison related research brief 
investigations build earlier ai law models legal procedural mentioned 
said main contributions dialogue system related general framework gives realistic account judge role legal procedure 
formal model legal procedure improves previous models legally technically 
particular procedure modelled techniques generally applicable 
model illustrates usefulness previous ai law research logic legal argument 
model may limitations hope provide fruitful basis formal implemented procedural support tools legal 

bench capon 
speci cation implementation toulmin dialogue game 
legal knowledge systems 
eleventh conference pages nijmegen 
gerard 
brewka 
dynamic argument systems formal model argumentation processes situation calculus 
journal logic computation 
appear 
gordon 
pleadings game exercise computational dialectics 
arti cial intelligence law 
gordon kara 
zeno argumentation framework 
proceedings sixth international conference arti cial intelligence law pages new york 
acm press 
hage 
hard cases procedural approach 
arti cial intelligence law 

theory argumentation frameworks 
doctoral dissertation free university brussels 

hercules hard cases en 
hercules hard cases law legal informatics 
twente university press enschede 
dutch 


legal justi cation dialogical models argumentation 
law philosophy library 
kluwer academic publishers dordrecht boston london 
loui 
process policy resource bounded non demonstrative reasoning 
computational intelligence 
loui norman craven foltz 
progress room testbed public interactive semi formal legal argumentation 
proceedings sixth international conference arti cial intelligence law pages new york 
acm press 
mackenzie 
question non cumulative systems 
journal philosophical logic 
pollock 
cognitive carpentry 
blueprint build person 
mit press cambridge ma 
prakken 
dialogue systems speech acts arguments counterarguments 
proceedings th european workshop logic arti cial intelligence jelia number springer lecture notes ai pages berlin 
springer verlag 
prakken 
modelling defeasibility law logic procedure 
fundamenta informaticae 
appear 
prakken 
relating protocols dynamic dispute logics defeasible argumentation 
synthese 
prakken gordon 
rules order electronic group decision making formalization methodology 
ed 
collaboration human arti cial societies 
coordination agent distributed computing springer lecture notes ai berlin 
prakken sartor 
dialectical model assessing con icting arguments legal reasoning 
arti cial intelligence law 
vreeswijk 
computational value debate defeasible reasoning 
argumentation 
walton krabbe 
commitment dialogue 
basic concepts interpersonal reasoning 
state university new york press albany ny 

