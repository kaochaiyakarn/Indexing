unu iist international institute software technology unu iist report formal design online system uml li zhiming liu guo july unu iist unu iist reports unu iist united nations university international institute software technology research training centre united nations university unu 
macau founded 
started operations july 
unu iist jointly funded governor macau governments people republic china portugal contribution unu fund 
providing fund macau authorities supply unu iist office premises furniture fellow accommodation 
mission unu iist assist developing countries application development software technology 
unu iist contributes programmatic activities 
advanced development projects software techniques supported tools applied 
research projects new techniques software development investigated 
curriculum development projects courses software technology universities developing countries developed 
university development projects complement curriculum development projects aiming strengthen aspects computer science teaching universities developing countries 
courses typically teach advanced software development techniques 
events conferences workshops organised supported unu iist 
dissemination unu iist regularly distributes developing countries information international progress software technology 
fellows young scientists engineers developing countries invited actively participate projects 
doing projects trained 
technical focus unu iist formal methods software development 
unu iist internationally recognised center area formal methods 
software technique universally applicable 
prepared choose complementary techniques projects necessary 
unu iist produces report series 
reports research technical administrative records unu iist activities research development achievements 
reports published conference proceedings journals 
please write unu iist box macau visit unu iist home page www iist unu edu know unu iist report series 
zhou director unu iist international institute software technology box macau formal design online system uml li zhiming liu guo commerce systems changing traditional business activities internet 
ecommerce system seen client server system server maintains information provides searching function client 
commerce system need consider specific functions booking products carrying payment transactions 
online system case study presents formal unified modelling language uml analysis design commerce systems 
demonstrate formalization formal specification system functional requirements safety liveness constraints verification correctness design 
keywords uml commerce formal techniques safety liveness object orientation 
li assistant professor university macau 
research areas interval temporal logic formal specification verification simulation computer systems formal methods system design implementation 
mail mo zhiming liu visiting scientist unu iist leave department mathematics computer science university leicester leicester england lecturer computer science 
research interests include theory computing systems formal methods specification verification refinement fault tolerant real time concurrent systems formal theories techniques object oriented component development 
mail liu mcs le ac uk guo professor university macau 
research areas network communication systems commerce system analysis design 
email mo copyright fl unu iist li zhiming liu guo report july unu iist box macau formal design online system uml li zhiming liu guo commerce systems changing traditional business activities internet 
commerce system seen client server system server maintains information provides searching function client 
commerce system need consider specific functions booking products carrying payment transactions 
online system case study presents formal unified modeling language uml analysis design commerce systems 
demonstrate formalization uml formal specification system functional requirements safety liveness constraints verification correctness design 
keywords uml commerce formal techniques safety liveness 

development internet techniques demand study theories methods development commerce systems increased dramatically 
internet commerce system connects buyers sellers different places 
sellers distribute commercial product information accept orders buyers sell products hours day 
client server system buyer get information server seller web browser transfers information booking payment 
commerce systems viewed special kind client server systems provide electronic business services internet 
searching partly supported british epsrc gr macau secretary social affairs culture project research committee university macau 
study leave university leicester working guest scientist international institute software technology united nations university unu iist macau 
faculty science technology university macau po box macau china email mo department mathematics computer science university leicester uk email liu mcs le ac uk providing information functions general client server systems functions booking products payment transactions specific commerce systems 
uml general purpose visual modeling language specifying constructing documenting artifacts software intensive system 
object oriented methodology accepted international standard modeling language object management group omg 
uml applied describe different develop stages high level requirements design implementation supported case tools uml rational rose 
uml suggested business modeling problems considered development ecommerce system 
uml system functional requirements specified case model contains cases case diagrams 
non functional requirements called constraints textual comments generally uml diagrams 
ocl constraint language form order logic extension mechanism uml kind formal description constraints 
formal semantics cases class diagrams ocl limited fully formalized 
formalization uml models requirement analysis describe constraints functional requirements 
analyzing system requirements unified case driven iterative incremental software development process develop system 
say give system static dynamic design step step case driven analysis 
uml static structure system modelled class diagrams system dynamic behavior models described sequence diagrams collaboration diagrams state diagrams activity diagrams 
deployment component diagrams uml describe system architecture models management 
correctness system design mainly concerned class diagrams interaction diagrams sequence diagrams collaboration diagrams state diagrams activity diagrams realize cases satisfy constraints 
research currently active uml modeling general software systems commerce systems particular 
little formal uml development commerce systems 
wang briefly discusses assurance model checking process design 
formal semantics uml formal specifications commerce system design 
base formal uml shows formal method development commerce system 
purpose shall case study online system developed macau secretary social affairs culture show formal uml necessary developing ecommerce systems require high reliability performance 
example online system real time system accessed concurrently clients possible faults network disconnection long time clients safety liveness properties fault tolerance considered formally 
booking function ticket system properties considered design 
safety ticket paid printed customer booked 
liveness ticket reserved booked infinitely paying 
fairness ticket available coming customer reserve book 
reminder arranged follows 
section introduces general model ecommerce system main functions system architecture 
online system case study briefly introduced section analyze design system uml 
focusing typical booking service commerce system demonstrate formally uml give system design detail 
correctness booking function fault tolerance verified 
section presents formal specification system safety liveness properties interval temporal logic 
section summarizes contributions 

general model commerce system commerce systems designed provide business services internet 
giving general model commerce useful practical system analysis design 
business process includes flows information flow money flow material flow 
obviously information flow handled commerce system internet seen huge distributed system connecting information systems world 
development new techniques network communication money transactions buyers sellers agents brokers banks effective efficient high security 
trend global world economy electronic money real note money 
ecommerce systems widely adopted modern business companies 
material flow adopt traditional ways transactions efficient aids internet information systems 
advantage commerce system communication buyer seller internet faster efficient traditional ways 
commerce systems provide virtual trade markets shops interaction buyers sellers typical kinds system users called actors uml 
buyers clients search useful product information sellers servers netscape web browsers internet 
seller responsible providing information products server 
addition search function buyer orders seller pay orders credit cards bank money transactions 
receiving order payment buyer seller server provides delivers ordered products buyers train airplane 
course invoice issued buyer seller payment 
basic functions commerce system described uml cases relationships actors simply modeled case diagram 
typical actors system users environmental systems commerce system buyers customers agents brokers sellers companies system administrator banks system users typical cases searching information booking products paying products bank transaction issuing invoice delivering products canceling order maintaining server database add product deliver product seller search book pay buyer basic case diagram commerce system architecture commerce system common client server system 
online system includes servers web server application server database server described uml deployment diagram shown 
clients access information database server internet 
seller server side responsible maintaining system database 
main tasks system software development include parts database design control software component server responsible data communication database clients 
system integrates software hardware network communication techniques html xml jsp asp java sql oracle database 
client client internet ap server sun db server sun web server ultra customer customer deployment diagram commerce system architecture important class commerce systems class product class book computer air ticket car service product online system class ticket 
typical classes customer agent bank account agent order 
general conceptual model describes classes relationships application domain 
classes analyze relationships lots textbooks uml object oriented analysis design 
define ticket customer classes online system level booking association shown 
basic attributes operations classes ticket customer listed diagram 
discuss detail sections 
ticket info status ticket price user timestamp reserve book pay print release state customer name personal info getname booking class diagram ticket customer 

analysis design online system people internet easily get information interested 
obviously people prefer booking tickets advance going ticket agent buy office hours 
people book tickets decide buy tickets 
people pay credit cards internet need go ticket selling agents 
tickets sent people home customers print virtual tickets home tickets recorded people personal ic card 
online systems developed internet 
developing system university macau macau secretary social affairs culture 
project aims maintain provide information social cultural activities macau provide online services booking selling tickets 
system specific online system insights case study helpful understanding design analysis general commerce systems 
section analyze system requirements draw case diagram 
focusing key case booking tickets demonstrate formally specify requirements constraints uml 
shall technique define atomic case form pre post pre post conditions order logic 
composite case defined notation hoare unifying theory programming 
furthermore shall employ temporal logic express system dynamic behavioral properties system 
formal treatments essential guarantee correctness system design 
case diagram simplicity draw case diagram online system 
customer actor cases search book pay 
agent responsible issue ticket paid customers 
agents book sell tickets internet customers access internet 
people go agents telephone agents book tickets 
agent actor subclass customer 
means agent access cases customer 
event provider actor cases provide event provide ticket 
just briefly describe follows 

search users search information events held macau movies sport contests car racing 

book customers book tickets select seat plan online 

pay customers pay bookings credit cards line atm cash 

issue ticket agents issue tickets customers paid tickets 

provide event provider create new events web server 

provide ticket provider create new tickets event 

provider responsible maintaining system deleting tickets 
book pay search buyer agent issue provide event provide ticket provider case diagram online system terms formal semantics case considered process realized sequences operations design class diagram collaboration sequence diagrams uml 
entire system parallel nondeterministic composition processes 
ticket system specified ets process 
ets def operator denotes non deterministic choice parallel composition prefixing operator 
step case defined system operation conceptual model 
variable notation denotes value state executing operation 
framing assumption variable keep value unchanged operation primed version appear explicitly post condition operation 
addition need introduce temporal state variable status ticket class attribute class ticket 
conceptual model state ticket available booked paid printed states 
design state diagram introduce state reserved 
variable status function ticket available reserved booked paid printed status denote status ticket state 
association class ticket class customer booking set pairs means customer booking ticket multiplicity constraints association booking specify formally follows 
ticket 
customer booking customer 
ticket booking operator calculates total element number set 
constraint limit customer buy tickets 
case book defined pre post conditions style follows 
book def pre cond customer ticket post cond status available status booked booking booking status available ticket unavailable 
select new means pre condition case book requires input parameters existing objects classes customer ticket pre condition holds function book executed transition current state new result satisfy post condition available booked customer 
function return information ticket unavailable 
select new 
similarly pay issue defined follows 
pay def pre cond customer ticket status booked booking post cond status paid issue def pre cond customer ticket status paid booking post cond status printed cases book pay issue directly implemented operations book pay print class ticket 
just simplified case study demonstrate relationship different models uml 
class diagram drawing case diagram describing function natural language government project investigators engineers 
obviously cases customer agent actors realized calling sequences operations ticket objects defined collaboration diagram 
book case realized calling reserve operation book operation 
ticket unique booked customers 
executions operations methods ticket object mutual exclusive avoid multi booking 
java programming language supplies synchronized function control object operation invocation mutual exclusion 
time customer allowed call operation ticket 
consequently system data inconsistency avoided 
ticket class defines basic atomic operations combine cooperate objects achieve large system functions cases 
similarly techniques define basic operations class ticket formally follows user timestamp denote customer booking value attribute timestamp ticket respectively currenttime denotes current value system clock reserve def pre cond ticket post cond status available status reserved user timestamp currenttime status available ticket unavailable 
select new book def pre cond customer ticket status reserved user post cond status booked timestamp pay def pre cond customer ticket status booked user post cond status paid print def pre cond customer ticket status paid user post cond status printed release def pre cond ticket post cond status available collect pre cond ticket status reserved timestamp min currenttime status booked post cond status available formal description multiplicity constraints booking low level design specified follows 
ticket 
customer status reserved user customer 
ticket status reserved booked paid printed user state diagram interesting problem system concurrent booking conflicts 
system certainly allows users access ticket system time 
ticket obviously booked sold customer 
booking race case avoided 
example customers visit server system period possible download seat plan available ticket information 
suppose book tickets concurrently select available ticket put shop carts 
obviously ticket customer delivers booking 
second customer delivers booking told ticket available asked select new available ticket 
say second customer booking action successful 
system reserve rest tickets second customer book successfully time original available tickets may taken customer 
customer may book successfully times 
avoid unfairness booking service fair customers introduce reserved state ticket class system design 
constraint booking case system guarantee customer definitely book ticket available delivers booking 
ticket reserved locked booked customer 
hand need avoid bad case tickets reserved booked 
system nonfunctional requirement customer allowed reserve book ticket infinitely making payment 
lots tickets sold reserved customers available customers 
constraint reserved state temporary server system collect reserved tickets tickets reserved minutes booked 
similarly give deadline booked tickets 
booked ticket paid deadline released server 
analysis booking case draw state diagram ticket 
ticket initially available ticket created 
reserved reserve operation invoked executed afterward booked book operation called confirm customer minutes paid printed 
ticket reserved state minutes confirmed collected server available 
design active thread server collects reserved tickets database minutes 
time bound transition reserved state available state 
similarly transition state booked available 
state diagram ticket modeled 
available reserved booked paid printed reserve release book pay print release collect timeout collect state diagram ticket collaboration diagram uml collaboration diagram model dynamic behavior system 
objects system collaborate interact sequence order operation invocations provide system service outside 
demonstrates process buy ticket get information ticket corresponding actions second reserve ticket action 
possibilities 
customer disconnects server system long time minutes 
case server collect reserved ticket available customers corresponding action 

customer changes mind release action ticket timeout 
customer sends book request action time 
ticket booked customer 
system set deadline customer pay ticket 
customer pay ticket deadline system collect ticket set available action 
system receives payment customer deadline ticket changed paid state action 
customer ask agent issue ticket agent print ticket customer actions 
agent customer ticket collect timeout release book pay issue ticket print get reserve get collaboration diagram book pay issue cases behavior actions formally specified csp process 
case realized possible sequences actions operation invocations prefixing operator 
implementation case book denoted book imp modeled process sequence operations objects 
similarly search imp pay imp issue imp corresponding implementations pay issue cases 
modeled follows book imp def reserve collect release book search imp def get get pay imp def release pay timeout collect issue imp def issue ticket print customer imp def customer imp customer imp def search imp book imp pay imp issue imp customer imp processes defined specify behavior system finite number registered active customers tickets 
correctness design book imp respect case book concerned postcondition book guaranteed book imp 
strong design considered timing constraints fault tolerance effect book realized book imp booking successful 
pre postcondition definition trace book process book imp implies book reserve book status available status reserved user timestamp currenttime status available ticket unavailable 
select new customer ticket status reserved user status booked timestamp implies status available status booked booking booking status available ticket unavailable 
select new book please see details calculus designs form pre post 

system safety liveness properties correctness system includes aspects 
system provide correct services function requirements captured cases uml 
system guarantee non functional requirements constraints system properties 
safety liveness properties assertions time interval behavior systems temporal logic employed 
interval temporal logic express constraints properties booking function online system 
useful temporal operators denoted respectively 
formula holds interval holds subintervals 
holds interval means exist list subinterval holds 
operators derived basic interval temporal logic operator chop 
formula holds interval chopped subintervals holds holds second 
definitions chop 
true true special formula true holds interval 
assume state variable holds current state holds intervals current state 
constraints formally specified interval temporal formulas 
safety ticket paid printed buyer booked 
ticket customer status booked user status paid user status printed user safety requires consecutive operation calls reserve book pay print ticket customer 
mutual exclusion operations pre postconditions guarantee invariance property 
safety ticket 
ticket 
status paid status printed status paid status printed property guaranteed ticket state diagram consider meaningful life duration ticket ignore delete operation event cancelled 
invariant 
time total money system received equal total money sold tickets 
ss ticket price ticket 
status paid status printed invariant design system variable 
liveness 
ticket reserved infinitely booked releasing available 
ticket 
status reserved server responsible releasing reserved tickets minutes 
ticket reserved minutes checked server collecting thread executed minutes 
say reserved state ticket temporary 
transfer reserved state booked available states longer minutes 
system design state diagram ticket server collecting thread guarantee liveness property minutes bound len duration interval 
ticket 
status reserved len min 
liveness similarly booked state released paid 
set time deadline ticket attribute timestamp design ticket operation book booked ticket collected server deadline 
get liveness property 
ticket 
status booked please note liveness properties implemented timing properties 
course design untimed system guarantees absolute liveness properties fairness assumption operations 
implies traditional methods dealing invariant liveness properties computer systems apply ecommerce systems framework 

discussion online system case study demonstrate important properties commerce systems problems need considered design system 
initial ideas combine uml development methodology formal techniques 
focusing interesting concurrent real time booking function commerce system reliable design system analysis uml framework 
uml express non functional requirements safety liveness properties important system performance correctness commerce system temporal logic suggested useful support uml analysis design 
formal treatment correctness design discussed 
believe ideas fundamental essential formal uml development reliable commerce systems 
understanding treatment safety liveness timing properties fault tolerance online system applied development general commerce systems 
includes detailed formalization relationship interaction models case models properly adding real time fault tolerance framework 
combination pre postcondition definition operations csp definition control flow 
follow approach timed csp associates time stamps events timed linear temporal logic adding time bounds state transitions 
wish prof jifeng discussions formalization uml 
third authors members project shirley tang gong prof li tan analysis design project uml 
hans erik eriksson magnus business modeling uml john wiley sons 
david commerce strategy technologies applications mcgraw hill 
matthew reynolds commerce visual basic asp sql server mts press 
grady booch james rumbaugh ivar jacobson unified modeling language user guide addison wesley 
james rumbaugh ivar jacobson grady booch unified modeling language manual addison wesley 
ivar jacobson grady booch james rumbaugh unified software development process addison wesley 
mark priestley practical object oriented design uml mcgraw hill 
terry visual modeling rational rose uml addison wesley 
dean don management software requirements unified approach addison wesley 
system design uml technical report university macau june 
wang zoltan andrew bailey jr andrew whinston process design assurance model checking ieee computer october 
jos warmer kleppe object constraint language precise modeling uml addison wesley 
li zhiming liu jifeng formal case driven requirement analysis uml published compsac chicago usa october 
zhiming liu jifeng li formalizing uml requirement analysis technical report unu iist report unu iist international institute software technology united nations university macau march 
short version formal uml software requirement analysis published proceedings pdpta june las vegas usa 
zhiming liu object oriented software development uml technical report unu iist report unu iist international institute software technology united nations university macau march 
zhou hoare ravn calculus durations information processing letters 
ben temporal logic programs cambridge university press cambridge uk 
jifeng tony unifying theories prentice hall 
zhiming liu joseph specification verification fault tolerance timing acm transaction programming languages systems vol 

report july unu iist box macau 
