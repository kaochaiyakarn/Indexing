cinema system procedural camera movements steven drucker tinsley galyean david zeltzer presents general system camera movement wide variety higher level methods applications built 
addition basic commands camera placement key attribute cinema system ability inquire information directly world camera moving 
information high level procedures written closely correspond natural camera specifications 
examples high level procedures 
addition methods overcoming deficiencies procedural approach proposed 

camera control integral part interface 
years number techniques interactively specifying camera movement implemented proposed 
techniques provided interface solving problem particular domain remained independent making impossible domains 
domains include keyframe computer graphic animation techniques navigation virtual environments general interaction automatic presentation computers generate presentation synthetic visual narratives users author presentations 
cinema system described camera protocol supports camera interface paradigms useful domains provides framework new interfaces developed 
cinema system procedural interface specifying camera movements relative objects events general state environment 
task level approach enables implementation common interactive metaphors provides ability build higher level parameterized procedures reusable 
brief problem review related camera control describe cinema system including underlying support structure implemen computer graphics animation group mit media lab cambridge ma 
tag dz media lab media mit edu navigating virtual environments brooks mackinlay interaction ware chen automatic presentation karp feiner cinema system animation motion control keyframed camera movements shoemake synthetic visual narratives davenport tation examples demonstrate system 
discuss problems approach suggest alternatives findings 
assumption actions environment occurring independently observer 
making assumption specification camera independent world treated window world impact 
simplification existing camera interfaces reviewed limiting appropriate variety situations 
effective camera protocol support interfaces investigate explore interfaces illustrate world 
begun explore uses system applications 
scientific architectural visualization need explore virtual environment interactively author set illustrative camera movements shown clients colleagues 
electronic books need designer knowledge system generate interface reader view information 
entertainment industry animator direct specify camera movements 
live action film makers may create interactive story boards scenes plan camera movements generate commands motion controlled cameras 
telerobotic virtual environment applications require task level camera protocol order allow human operator efficiently intuitively control view performing directing remote operation 
interfaces supported top camera protocol described 

previous early animation devoted making movement camera continuous developing proper representation camera movements path 
works devoted giving animator greater control creating smooth movements finding ways interpolate user specified keyframes 
generating spline curves camera movement produce smooth paths difficult relate movements camera objects environment 
advent virtual environments related interactive worlds great deal effort spent presenting convenient metaphors change user view object world 
metaphor discussed ware provides user model enables prediction system behavior different kinds input actions 
metaphor appropriate easy learn 
examples metaphors eyeball hand metaphor scene hand metaphor flying vehicle control eyeball hand metaphor degree freedom device position orient camera directly translating rotating input device 
ware method somewhat awkward easy learn 
scene hand metaphor allows user rotate translate scene position input device 
convenient hand sized objects nearly impossible navigating inside closed spaces 
scheme discussed ware control simulated flying vehicle 
user position orientation respectively affected linear angular velocity camera viewpoint direction gaze 
metaphor easy navigate difficult examine particular object 
input devices polhemus system spatial systems enable user specify degrees freedom simultaneously simulations devices done devices 
mackinlay discuss problem scaling camera movements appropriately 
develop methods select object interest move exponentially away object 
way user close object viewpoint changes little far object viewpoint changes rapidly 
selecting point interest authors reorient camera maximal view desired object 
degrees freedom restricted user concentrate task navigating environment 
brooks developed different methods moving architectural simulations including steerable shopping carts devices measure direction speed movement 
shows different interfaces appropriate different application requirements 
view interface ideally suited tasks common underlying structure top different metaphors implemented give user powerful tool interact environments 
important ability allow user select object interest environment 
expanded allowing user general queries visibility orientation objects environment 
allows user manipulate camera motion actions environment 
furthermore direct manipulation certain advantages interactive systems deficiencies 
necessarily repetitive actions action requires great deal accuracy smooth movement cameras necessarily suited input metaphors suggested preceding paragraphs 
problems inherent dof input devices presently available noise inherent user movements number degrees freedom simultaneously controlled 
textual systems interaction built top allow high level input device interface underlying language commands specified directly generated rule bases 
expert system presentation including selection proper camera movements discussed detail karp feiner 
system expert system planning animation design editing emphasize ability incorporate cinematic knowledge construction coherent descriptions scene 
need representations database objects explicit events notion frames shots scenes sequences put effective narrative 
emphasizes knowledge system automatically selecting camera placement choosing appropriate camera movements cinematic considerations 
currently concentrate movements initial placement camera shots transitions shots 

cinema system developed cinema system address problem combining different paradigms controlling camera movements system 
cinema system extensible permitting user build higher level procedures simpler primitives 
provides important ability inquiries database contains information describing state objects environment 
system developed dozen students course entitled synthetic cinematic cinematic knowledge 
course students system explore alternative ways animating scenes 
system mainly synthetic narrative application feel learned applicable domains applications mentioned 
cinema system divided major parts 
database contains information objects positions time events time 
second part parser accepts interprets user commands 
user commands restricted inquiries state database commands query affect state camera 
course taught mit media lab professors david zeltzer davenport short versions january full semester courses spring 
support structure cinema produce cinema procedural interface necessary develop set primitive functions 
parts support structure 
set commands moving camera inquiring current camera state 
second set commands inquiring state world 
set mathematical routines manipulating values returned functions 
sets primitive functions changing camera position orientation 
lower level commands directly set positions vectors commonly computer graphics 
slightly higher level primitives part support structure perform simple camera moves pan tilt roll truck dolly crane 
film industry terms dolly truck loosely 
example truck may mean move move side side 
implementation chosen possible definitions terms avoid confusion 
conversion computer graphics vectors film standards straightforward 
descriptions film frame navigate scene respect objects world 
example ask camera move alongside object looking object interface supports descriptions provide information events geometric spatial relationships position relative occlusion direction glance distances 
example functions obj visibility obj obj visibility find visibility information camera object particular objects 
currently implemented simple ray casting bounding box intersection 
sophisticated techniques provide precise notion visibility 
implementation proven adequate preliminary research 
functions frame events provided support inquiry discrete events take place animation 
addition commands described system provides set supporting mathematical commands including scalar vector calculations 
commands needed manipulate output inquiry commands 
functions inquiry state scene manipulated calculate new camera parameters position vectors 
combinations basic tools higher level procedures built 
implementation entire system currently implemented platforms hp turbo public domain front language called tcl apple macintosh 
macintosh platform provide interactive update rates rendered images successfully wireframe images 
examples examples representative cin ema system different situations 
example shows cinema system interfaced environment implements ware movement metaphors 
second example shows higher level camera move ments built lower level primitives inquiry functions 
example shows cinematic power system filming simple animation 
example camera movement metaphor example shows input device polhemus spatial systems change view scene 
accompanying video ascension technologies bird control position camera looking object called joe similar eyeball hand movement metaphor discussed ware pseudocode shows function implemented cinema system 
function consists inquiry dof input device translating camera translation returned input device 
proc eyeball hand object get input device cam set point lookat object example extensible language procedure shot simulates hitchcock classic shot film camera moves outwards field view grows narrower keeping object constant size center frame 
effect viewers feel moving closer closer unattainable goal 
minutes constructed procedure shot 
proc shot obj rate frames get angle subtended object angle get angle height obj get camera field view fov cam fov compute percentage fov object percent angle fov frames truck specified direction specified rate cam truck rate set field view object percentage frame obj percent example synthetic narrative example shows system simple cinematic teaching purposes 
animation sitting filmed 
cut middle animation changes viewpoint oblique view head view 
views selected match cut achieved 
see sequence frames 

cinema system needs extended provide mechanism easily combine constrain multiple procedures 
example suppose user track motion walking preventing camera moving walls 
ideally procedures tracking avoidance automatically combined achieve desired performance 
currently necessary construct new procedure meeting constraints 
ability combine procedures allow user input treated procedure combined constraints 
camera movements interactively adjusted achieve desired result 
address problems begun exploration constraint satisfaction techniques camera placement movement 
specifying camera relationship objects weighted constraints system find best position satisfies certain criterion 
constraints maintained objects camera moves environment 
additional constraints placed movement camera camera attributes simulated physical object fluid head 

cinema system provides users ability rapidly experiment various camera movement paradigms 
users create new camera metaphors extend existing ones 
ability inquire state objects environment provides support powerful camera movement procedures 
cinema system proven quite useful teaching domain 
students able cinema system explore different ways film simple animation plan real camera shoot 
constraint satisfaction methodology described ongoing area research 
areas explore camera movement systems including rule generations systems codifying stylistic attributes examining cuts interfacing task oriented applications name just 
hope strong support base camera positioning movement produced research areas easier 
cinema system possible experiment camera paradigms quickly conveniently 
intend continue evolving cinema system eye different application domains including telerobotics virtual environments synthetic narratives 
authors wish davenport david sturman mike mckenna steve pieper david chen comments assistance 
hong tan invaluable help implementation macintosh 
students synthetic cinema course provided useful suggestions 
sponsored part japan broadcasting darpa rome air development center contract equipment apple computer hewlett packard 
brooks 

walkthrough dynamic graphics system simulating virtual buildings 
proceedings workshop interactive graphics chapel hill north carolina 
computer graphics 
brooks 

grasping reality illusion interactive graphics serving science 
sigchi 
chen sellen 

study interactive rotation control devices 
proceedings siggraph atlanta georgia 
computer graphics 
davenport smith 
cinematic primitives multimedia 
ieee computer graphics applications 
july 

hochberg brook 

perception motion pictures 
handbook perception vol eds 
friedman 
academic press new york 
chapter 
karp feiner 

issues automated generation animated presentations 
graphics interface halifax nova 

katz 

film encyclopedia 
books new york 


interpolating splines local tension continuity bias control 
proceedings siggraph minneapolis minnesota 
computer graphics 
mackinlay card robertson 

rapid controlled movement virtual workspace 
proceedings siggraph dallas texas 
computer graphics 
ousterhout 

tcl embeddable command language 
proceedings usenix winter conference 

shoemake 

animating rotation quaternion curves 
proceedings siggraph san francisco ca 
computer graphics 
ware osborne 

exploration virtual camera control virtual dimensional environments 
proceedings symposium interactive graphics snowbird utah computer graphics 
zeltzer 

task level graphical simulation abstraction representation control making move eds 
badler zeltzer 
morgan kaufmann publishers california 

