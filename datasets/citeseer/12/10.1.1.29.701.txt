discovery temporal patterns learning rules qualitative behaviour time series frank department electrical engineering computer science university applied sciences emden emden germany frank ieee org 
association rule mining generalized discovery episodes event sequences 
additionally take durations account generalization time intervals 
discover frequent temporal patterns single series labeled intervals call state sequence 
temporal pattern de ned set states interval relationships described terms allen interval logic instance overlaps overlaps equivalently state ends state starts gap covered state 
example consider problem deriving local weather forecasting rules allow conclude qualitative behaviour air pressure curve wind strength 
states extracted automatically multivariate time series characterize trend time series locally assigned time interval 
predict forecast system behaviour near probably best develop global model system estimate parameters help observations past 
identi cation model requires substantial knowledge system absent typical knowledge discovery applications 
expect certain relationships measured variables systems behaviour may snapshots typical behaviour mind far away able model system 
typical key situations associated typical qualitative behaviour measured variables consequently humans control technical systems simple visual inspection displayed trends 
examples rules qualitative descriptions timevarying data domain medical diagnosis material science supported deutsche forschungsgemeinschaft dfg 
kl 
diagnostics supervision qualitative reasoning mention 
consider problem deriving local rules inductively observing variables long period time 
qualitative descriptions 
problem nding common characteristics multiple time series di erent parts series requires notion similarity 
process subject variation time translation dilation measures traditionally estimating similarity pointwise euclidean norm fail providing useful hints time series similarity terms cognitive perception human 
problem addressed authors literature 
qualitative descriptions divide time series small segments easy grasp understand human 
matching time series performed basis labeled segments raw time series 
basic descriptions de ned priori example slightly increasing segment learned set examples labeled training set automatically means clustering short subsequences 
arrive sequence labeled intervals time intervals certain condition holds original time series 
considers problem discovering temporal relationships primitive patterns time series fairly general manner time series turned sequence labeled intervals sect 

temporal pattern de ned number states primitive patterns temporal relationship terms allen temporal logic sect 

discussing count patterns interval sequence sect 
seek frequent patterns sect 
fashion similar discovery association rules extended event sequences 
frequent patterns rules temporal relationships derived 
application algorithm consider problem nding rules qualitative behaviour multivariate time series sect 

state sequences denote set possible trends properties states want distinguish example pressure goes water level constant 
state holds period time denote initial point time enter state nal point time state longer holds 
state sequence series triples de ning state intervals holds 
require state interval ended state interval starts 
enables mix state sequences possibly obtained di erent sources single state sequences 
require state maximal sense series overlap meet violated merge state intervals replace union min max 
temporal patterns allen temporal interval logic describe relation state intervals 
pair intervals possible relationships illustrated fig 

example say meets interval terminates point time starts 
inverse relationship 
denote set interval relations shown gure met overlapped finishes started equals meets overlaps finished contains starts equals time fig 

allen interval relationships 
state intervals capture relative positions matrix elements describe relationship state interval example consider state sequence fig 

obviously state followed lag covered state state interval sequence patterns written matrix interval relations 
formally temporal pattern size de ned pair ng maps index corresponding state denotes relationship dim denote dimension number intervals pattern dim say pattern 
course sets state intervals map temporal pattern 
say set intervals ng instance temporal pattern 
de ne space tp temporal patterns informally space valid temporal patterns arbitrary dimension determine interval relationships assume closed intervals conditions valid temporal pattern instance inverse 
io io time abbreviations overlaps io overlapped state interval sequence temporal relations fig 

example state interval patterns expressed temporal relationships 
de ne partial order temporal relations 
say temporal relation ra subpattern rb ra rb dim sa ra dim sb rb injective mapping dim sa ra dim sb rb dim sa ra ra rb relation re exive transitive antisymmetric ra rb rb ra ra rb due di erent state ordering 
states change semantics temporal pattern 
de ne ra rb ra rb rb ra consider factorisation tp generalized canonically equivalence classes 
antisymmetric partial order equivalence classes temporal patterns 
simplify notation pick subset ntp tp normalized temporal patterns ntp contains element equivalence class tp ntp isomorphic tp 
remainder ntp synonymously tp 
equivalence class order patterns lexicographically initial time nal time state 
ordering unique 
rst pattern ordering representative class 
occurrences temporal patterns state sequences considered interesting temporal pattern limited extension pattern small observed forgetful operator 
choose maximum duration max serves width sliding window moved state sequences 
consider pattern instances observed window 
monitoring control application threshold taken maximum history length displayed monitor inspected operator 
de ne total time pattern observed sliding window support supp pattern 
space limitations prohibit justi cation choice refer interested reader 
illustrate de nition examples fig 

sub gure single state see pattern rst time right bound sliding window touches initial time state interval dotted position sliding window 
observe sliding window reaches position drawn dashed lines 
total observation time length sliding window max plus length state interval support observation duration depicted bottom sub gure 
sub gure shows example overlaps 
observe instance pattern soon see state loose leaves sliding window 
pattern occurs multiple times things may happen gap pattern instances loose pattern support individual instances add support pattern shown sub gure 
gap sub gure see pattern soon rst instance enters sliding window instance leaves window 
matter instances long 
time support support support time time support time support fig 

illustration notion support 
divide support pattern length state sequence plus window width max obtain relative frequency pattern randomly select window position observe pattern probability note need discretization handle time continuously jumping interval bound initial nal time interval bound integrating support jump period 
observability pattern changes sliding window meets interval bounds 
discovery temporal rules pattern called frequent support exceeds threshold supp min task nd frequent temporal patterns ntp create temporal rules 
nd frequent patterns start rst database pass estimation support single state called candidate patterns 
kth run remove candidates missed minimum support create remaining frequent patterns set candidate patterns support estimated pass 
procedure repeated frequent patterns 
fact support pattern equal support subpatterns patterns supp supp guarantees frequent patterns 
level detail procedure identical association rule mining 
candidate generation number potential candidates grows exponentially size patterns 
ecient pruning techniques necessary keep increase number candidates moderate 
di erent pruning techniques 
technique discovery association rules applied temporal patterns due subpattern candidate frequent candidate frequent 
enumerate non candidate patterns possible join frequent patterns share common pattern pre denote remaining states pre respectively 
denote interval relationship candidate pattern rx rx illustrates build pattern matrix rx rp rq rp rq identical respect rst states normalized form true new pattern indicated submatrix 
relationship rst states taken rp rq see fig 
degree freedom pattern pre states build pattern completely speci ed relation sp rp sp 
pattern sq rq sq 
pattern sx rx sx 
ir new pattern fig 

generating candidate pattern patterns identical restricted rst states 
freedom choosing yields di erent patterns candidate patterns possible interval relationships 
restrict loss generality normalized patterns number possible values reduces maximal number 
check patterns frequent subpatterns apply pruning technique law transitivity 
example patterns meets meets share primitive pattern common pre missing relationship obtain candidate 
law transitivity interval relations tells possible set interval relations fis started equals 
normalized form possible relationships remain 
general state rst states apply allen transitivity table relationship rp rq 
values contradict results applications transitivity table yield candidate pattern 
temporal pattern maintain observed expected support set oq eq resp 
set oq contains points time contribute support pattern points time pattern observed sliding window 
consider pattern candidate pattern intersect sets oq subpatterns result gives expected support ep cardinality ep serves tighter upper bound support dim kg 
stays supp min pattern frequent pattern consider candidate 
support estimation due space limitations give quick overview basic ideas detailed report currently preparation contact author 
order estimate support candidate patterns sweep state sequence incrementally update list states currently visible sliding window 
update relation matrix states sliding window incrementally 
act denote right bound sliding window 
set candidate patterns partitioned subsets call set passive active potential candidates 
set passive candidates contains candidates expect current sliding window expected support contain time current window position act ep set potential candidates contains candidates act ep chance observing window 
set active patterns contains patterns currently observable sliding window 
patterns passive patterns 
associated pattern set expected support ep know advance pattern potential pattern activation time ap minft ep set ep organized sorted list intervals minimum simply left bound rst interval list 
keep set passive patterns ordered activation time 
act reaches activation time pattern potential active pattern depending occurs sliding window 
sets oq eq organized lists intervals 
intersection list intervals 
add interval lengths obtain cardinality 
potential pattern remove leading interval ep list store deactivation time dp interval time pattern fall back set passive patterns 
potential pattern passive pattern fall back time dp reached sliding window 
new state interval enters sliding window check potential patterns instance pattern 
set potential pattern may quite large expensive operation 
case potential pattern active pattern keep potential pattern 
pattern instance calculate point time pattern disappears fall back time active pattern 
just set passive patterns set active patterns sorted fall back times 
act reaches fall back time active pattern check new pattern instance entered sliding window 
case pattern remains active pattern update fall back time 
depending dp act active pattern potential passive pattern 
pattern instance support pattern updated incrementally insert period pattern observation support os upper bound remaining support cardinality continuously updated set ep perform fourth online pruning test 
support achieved far card op plus maximally remaining support card ep drops supp min consider pattern longer 
database pass set ep empty op contains support subsequently candidate generation step pruning 
rule generation having determined frequent temporal patterns construct rules 
pair frequent temporal patterns restrict forward rules rules past 
con dence rule conf supp supp greater minimal con dence rule printed 
enumeration possible rules done eciently techniques described 
disjunctive combination temporal patterns analysing rules obtained algorithm keep mind seeking simple interval relationships relationships consist single attribute process started time started result number rules temporal relationships overlaps meets 
con dence true relationship case overlaps meets high con dence values observe rules comparatively low 
allowed add con dence values rules order obtain con dence composed rule 
lead overestimation sliding windows contain multiple patterns simultaneously case count twice 
fortunately possible calculate support composed rules 
support pattern disjunction patterns calculated easily supp card oq 
sets observed support oq calculated execution algorithm store sets access 
note guarantee nd frequent pattern compositions way 
patterns reach supp min individually ful requirement combination 
evaluation discussion examined air pressure wind strength wind direction data small island northern sea time stamps extracted season 
known local di erences air pressure cause wind nd relationships variables 
global weather forecast done perfectly large scale weather simulations possible precisely localize certain weather phenomenon occur extent time 
rules qualitative behaviour air pressure curve help short term local weather forecasting 
steep steep lvl dec val low val high fig 

extracted features time series wind strength april 
data measured hourly years data test algorithm 
applied kernel smoothing order compensate noise get robust estimates rst second derivative 
smoothed series partitioned primitive patterns increasing concave high value see fig 
example 
table shows performance pattern mining algorithm di erent average state densities window widths state series lengths 
threshold supp min chosen data period runs 
computation times ranged seconds minutes mhz pentium iii processor mb main memory 
see pruning techniques quite ecient exceptions processed patterns candidate patterns 
arti cially generated data set rich pattern structure average candidates frequent patterns 
value increases consider runs large window widths 
state density average number state intervals visible sliding window xed run time roughly linear size state series 
years years years table 
results algorithm 
experiments threshold supp min chosen time series length years 
column denotes number distinct states series column denotes window width hours column average state series density average number states visible window 
column contains number frequent patterns percentage frequent patterns candidate patterns percentage candidate patterns processed patterns candidate pruned patterns 
column shows run time state intervals series 
due complexity temporal patterns matching pattern sliding window 
complexity analysis depends parameters uence sliding window width number length intervals generated time series size set labels furthermore sliding window content changes quickly check frequently potential candidates active candidates 
point number uninteresting associations generated interval extraction state series represents extracted local trends time series natural observe frequent patterns increasing segment fore decreasing segment concave convex segment vice versa 
uninteresting frequent patterns combined patterns states arbitrarily considerable impact number frequent patterns run time 
grd high high grd high southwest northwest summer lvl lvl fig 

exemplary rules 
bars indicate temporal relationship intervals length chosen arbitrarily 
label bar describes condition holds interval grd denotes gradient curvature 
due lack space exemplary rules 
generated rules lying respect intervals premise 
rules predicting high gradient wind strength fig 
shows period highly increasing decreasing air pressure overlaps period high curvature wind strength change quickly high gradient 
depicted rule occurs meets relationships air pressure states disjunctive combination described sect 
promising 
example rule concludes change wind direction strong change wind strength 
rule fig 
tells stable weather air pressure nearly constant continued summer constant air pressure segment followed constant air pressure period low winds 
similar rules seasons lower con dence value 
average con dence values rules comparatively low examples 
simple patterns premise observed longer complex patterns patterns comprising premise 
illustrate review fig 
support pattern greater support pattern overlaps length cases 
leads con dence values overlaps examined state series 
investigating measures rule evaluation 
proposed technique discovery temporal rules state sequences stem multivariate time series instance 
examples sect 
shown proposed method capable nding meaningful rules rules thumb human knowledge expert system 
rules easily interpreted domain expert verify rules inspiration investigation 
considerable background knowledge application method valuable known rules incorporate variables readily available 
instance weather forecasting rules discussed information general weather outlook information local weather forecasting station 
information dicult incorporate expensive measure case interested achieve just available variables 
selection best rules gets treatment 

author prof critical review deutsche providing data 
agrawal 
lin sawhney shim 
fast search presence noise scaling translation time series databases 
proc 
st int 
conf 
large databases 
agrawal mannila srikant toivonen verkamo 
fast discovery association rules 
chapter pages 
mit press 
allen 
knowledge temporal intervals 
comm 
acm 
bakshi 
reasoning time modeling analysis pattern recognition temporal process trends 
advances chemical engineering volume pages 
academic press 
berndt cli ord 
finding patterns time series dynamic programming approach 
chapter pages 
mit press 

automated mathematical modeling experimental data application material science 
ieee trans 
systems man cybernetics part aug 
das 
lin mannila smyth 
rule discovery time series 
proc 
th int 
conf 
knowledge discovery data mining pages 
aaai press 
fayyad piatetsky shapiro smyth uthurusamy editors 
advances knowledge discovery data mining 
mit press 

finding informative rules interval sequences 
proc 
th int 
symp 
intelligent data analysis portugal sept 
springer 

und 
edition 
yoshida 
real time qualitative analysis temporal shapes bio process variables 
arti cial intelligence chemistry nov 
kuipers 
qualitative reasoning modeling simulation incomplete knowledge 
mit press 
mannila toivonen verkamo 
discovery frequent episodes event sequences 
technical report university helsinki finland feb 
mcilraith 
qualitative data modeling application mechanism interpreting graphical data 
computational intelligence 
srikant agrawal 
mining sequential patterns generalizations performance improvements 
proc 
th int 
conf 
extending database technology avignon france mar 
