application petri nets workflow management van der aalst department mathematics computing science eindhoven university technology box nl mb eindhoven netherlands telephone mail win tue nl workflow management promises new solution age old problem controlling monitoring optimizing supporting business processes 
new workflow management explicit representation business process logic allows computerized support 
discusses petri nets context workflow management 
petri nets established tool modeling analyzing processes 
hand petri nets design language specification complex workflows 
hand petri net theory provides powerful analysis techniques verify correctness workflow procedures 
introduces workflow management application domain petri nets presents state art results respect verification workflows highlights petri net workflow tools 
times information systems designed support execution individual tasks 
today information systems need support business processes hand 
longer suffices focus just tasks 
information system needs control monitor support logistical aspects business process 
words information system manage flow organization 
organizations complex business processes identified need concepts techniques tools support management workflows 
need term workflow management born cf 
hl kou 
generic tools support workflow management 
result parts business process hard coded applications 
example application support task triggers application support task means application knows existence application 
undesirable time underlying business process changed applications need modified 
similar constructs need implemented applications possible monitor control entire workflow 
software vendors recognized need workflow management systems 
workflow management system wfms generic software tool allows definition execution registration control workflows cf 
law 
moment vendors offering workflow management system 
shows software industry recognizes potential workflow management tools 
os dbms uims wfms appl os appl os appl dbms os dbms appl uims workflow management systems historical perspective 
order aware impact workflow management near useful consider evolution information systems decades cf 
aal 
shows phenomenon workflow management historical perspective 
illustrates evolution information systems decades describing architecture typical information system terms components 
sixties information system composed number stand applications 
applications application specific user interface database system developed application routines user interaction data storage retrieval 
seventies data pushed applications 
purpose database management systems dbmss developed 
database management system applications freed burden data management 
eighties similar thing happened user interfaces 
emergence user interface management systems uimss enabled application developers push user interaction applications 
opinion workflow management systems step pushing generic functionality applications 
nineties marked emergence workflow software allowing application developers push business procedures applications 
clearly shows essence workflow management system generic building block support business processes 
information systems benefit building block organizations starting see need advanced tools support design execution business processes 
reasons increased interest business processes 
management philosophies business process reengineering bpr continuous process improvement cpi stimulated organizations aware business processes 
secondly today organizations need deliver broad range products services 
result number processes inside organizations increased 
consider example 
decade ago just types moment numerous types available 
number products services increased lifetime products services decreased decades 
result today business processes subject frequent changes 
complexity processes increased considerably 
changes environment information system average organization business processes important issue development information systems 
clear need building block named workflow management system 
main purpose workflow management system support definition execution registration control processes 
processes dominant factor workflow management important established framework modeling analyzing hl kou law 
framework petri nets 
petri nets founded process modeling technique 
classical petri net invented carl adam petri sixties pet 
petri nets model analyze kinds processes applications ranging protocols hardware embedded systems flexible manufacturing systems user interaction business processes 
decades classical petri net extended color time hierarchy aal jen 
extensions facilitate modeling complex processes data time important factors 
reasons petri nets workflow modeling ffl formal semantics workflow process specified terms petri net clear precise definition semantics classical petri net enhancements color time hierarchy defined formally 
ffl graphical nature petri nets graphical language 
result petri nets intuitive easy learn 
graphical nature supports communication users 
ffl expressiveness petri nets support primitives needed model workflow process 
routing constructs today workflow management systems modeled 
fact states represented explicitly allows modeling milestones implicit choices 
ffl properties decades people investigated basic properties petri nets 
firm mathematical foundation allows reasoning properties 
result lot common knowledge form books articles modeling technique 
ffl analysis petri nets availability analysis techniques 
clearly great asset favor petri nets workflow modeling 
techniques prove properties safety properties invariance properties deadlock calculate performance measures response times waiting times occupation rates 
way possible evaluate alternative workflows standard petri net analysis tools 
ffl vendor independent petri nets provide tool independent framework modeling analyzing processes 
petri nets software package specific vendor cease exist new version released vendor takes vendor 
petri nets workflow modeling advocated aal wr mem en ah 
remainder show petri nets applied domain workflow management 
introduce basic concepts workflow management workflow management systems 
introduce basic petri net terminology 
section show workflow management concepts mapped petri nets 
section concerned analysis workflow processes specified terms petri net 
conclude describe number petri net workflow tools illustrate petri nets domain 
workflow management systems term workflow management refers domain focuses logistics business processes 
people term office logistics 
ultimate goal workflow management sure proper activities executed right person right time 
possible workflow management workflow management system people associate workflow management workflow management systems 
workflow management coalition wfmc defines workflow management system follows wfm system completely defines manages executes workflows execution software order execution driven computer representation workflow logic 
terms characterize workflow management system business operating system workflow manager case manager logistic control system 
hand workflow management associated workflow management systems limits application domain workflow management unnecessary manner 
possible workflow management workflow management system 
hand workflow management systems give concrete form essential concepts techniques methods workflow management 
workflows case piece executed specific case 
examples cases mortgage insurance claim tax declaration order request information 
cases generated external customer 
possible case generated department organization internal customer 
goal workflow management handle cases efficiently effectively possible 
workflow process designed handle similar cases 
cases handled executing tasks specific order 
workflow process definition specifies tasks need executed order 
alternative terms workflow process definition procedure flow diagram routing definition 
tasks executed specific order useful identify conditions correspond causal dependencies tasks 
condition holds hold true false 
task pre postconditions preconditions hold task executed postconditions hold execution task 
cases handled workflow process definition 
result task executed cases 
task needs executed specific case called item 
example item execute task send refund form customer case complaint sent customer baker 
items executed resource 
resource machine printer fax person participant worker employee 
offices resources mainly human 
workflow management restricted offices prefer term resource 
resources allowed deal specific items 
facilitate allocation items resources resources grouped classes 
resource class group resources similar characteristics 
may resources class resource may member multiple resource classes 
resource class capabilities functional requirements members called role 
classification structure organization resource class called organizational unit team branch department 
item executed specific resource called activity 
take photograph workflow see cases items activities 
items link cases tasks 
activities link cases tasks resources 
case dimension process dimension resource dimension task case item activity resource dimensional view workflow 
shows workflow dimensions case dimension process dimension resource dimension 
case dimension signifies fact cases handled individually 
workflow point view cases directly influence 
clearly influence indirectly sharing resources data 
process dimension workflow process tasks routing tasks specified 
resource dimension resources grouped roles organizational units 
visualize workflow number dots dimensional view shown 
dot represents item case task activity case task resource 
shows workflow management glue cases tasks organization 
sequential routing routing parallel routing conditional routing iterative routing constructs 
focus dimensions concentrate workflow process defined handle cases 
discuss human resource aspects classification resources organizational modeling mapping resources items scheduling detail 
just show mechanisms 
detailed discussion resource management scope concentrate application petri nets 
petri nets process modeling technique application restricted dimensions 
dimensions routing cases main issues 
workflow process definition specifies cases routed tasks need executed 
shows routing constructs identified workflow management coalition wfmc 
wfmc international organization mission promote workflow establish standards workflow management systems 
wfmc founded january wfmc released glossary provides common set terms workflow vendors users developers researchers wfm 
glossary types routing identified ffl sequential tasks executed sequentially execution task followed task 
task executed task completed task started 
ffl parallel task task executed parallel 
means executed time order 
model parallel routing building blocks identified split 
split enables executed completed 
join synchronizes parallel flows task may start completed 
ffl conditional task task exclusive executed 
model choice alternatives building blocks split join 
task executed choice task may start completed 
ffl iteration necessary execute task multiple times 
task executed times 
section routing constructs mapped petri nets 
way concepts case task item activity workflow process defined explicit manner 
issue triggering discussed section 
triggering concept important context workflow management 
unstructured centric collaborative production administrative workflow workflow ad hoc workflow processes structured information centric workflow process workflow processes versus collaborative processes 
business process workflow process 
opinion workflow pro cess characterized qualities 
workflow process 
secondly process considered essential 
thirdly process defined explicit manner 
people term workflow management broader sense 
example groupware software tools lotus notes microsoft exchange called workflow management systems 
correct products support workflow process just allow people collaborate sending messages sharing information 
shows spectrum case business processes 
production workflow concerned highly structured processes variations 
type workflow needs cope cases day 
processing insurance claims typical example production workflow 
administrative workflow corresponds case driven processes follow defined procedure 
alternative routing case possible needs predefined 
adhoc workflow relates processes procedure defined completely advance 
case procedure needs defined existing procedure needs modified 
collaborative processes outside scope definition workflow 
collaborative process emphasis communication sharing information definition processes 
collaborative processes possible necessary workflow processes explicit 
today workflow management systems cosa cosa solutions flowmark ibm open workflow eastman software staffware staffware visual workflow support production administrative workflow 
just products support ad hoc workflow ensemble 
collaborative processes supported groupware tools lotus notes microsoft exchange 
groupware tools support logistic control workflow processes communication layer proprietary workflow system 
restrict real workflow management systems systems support production workflow administrative workflow ad hoc workflow 
wfmc focuses type software tools 
vendors users real workflow management systems joined wfmc identify common characteristics tools standardize terminology define standard architectures interfaces 
results achieved wfmc definition model architecture workflow system 
describe model subtle difference term workflow management system term workflow system 
system generic software product applied organizations staffware cosa 
workflow management system installed configured filled data process definitions applications 
reserve model workflow management coalition wfmc 
term workflow system installed workflow management system process definition data organizational data applications application data database management system configuration files software components periphery actual workflow management system 
shows overview model 
model describes major components interfaces workflow architecture 
core workflow system workflow enactment service 
workflow enactment service provides run time environment takes care control execution workflow 
technical reasons managerial reasons workflow enactment service may multiple workflow engines 
workflow engine handles selected parts workflow manages selected parts resources 
process definition tools specify analyze workflow process definitions resource classifications 
tools design time 
cases process definition tools bpr toolset 
workflow management systems provide process definition tools tool graphical interface define workflow processes tool specify resource classes organizational model simulation tool analyze specified workflow 
user communicates workflow system workflow client applications 
example workflow client application known basket 
basket items offered user 
selecting item user execute task specific case 
necessary workflow engine invokes applications interface 
monitoring tools monitor control workflow 
tools register progress cases detect bottlenecks 
tools set parameters allocate people handle abnormalities 
interface workflow system connected workflow systems 
standardize interfaces shown wfmc aims common workflow application programming interface 
envisaged common set api calls related interchange formats may grouped support interfaces cf 
law 
architecture shown adopted vendors 
interfaces standards proposed 
unfortunately proposed standards technical level emphasis syntax semantics 
consensus conceptual level 
consider example interface 
syntax exchange format defined formalizing meaning states essential building blocks split join 
need conceptual standard clearly specifies semantics basic constructs needed 
claim workflow framework petri nets candidate standard 
remainder substantiate claim 
petri nets section introduces basic petri net terminology notations 
readers familiar petri nets skip section 
historically speaking petri nets originate early carl adam petri pet 
study petri nets increased considerably 
review history petri nets extensive bibliography reader referred mur 
classical petri net classical petri net directed bipartite graph node types called places transitions 
nodes connected directed arcs 
connections nodes type allowed 
places represented circles transitions rectangles 
note states represented weighted sums note definition elementary paths 
definition petri net petri net triple finite set places finite set transitions theta theta set arcs flow relation place called input place transition iff exists directed arc place called output place transition iff exists directed arc fflt denote set input places transition notations similar meanings set transitions sharing input place 
note restrict arcs weight 
context workflow procedures sense weights places correspond conditions 
time place contains zero tokens drawn black dots 
state referred marking distribution tokens places 
represent state follows state token place tokens token tokens represent state follows compare states define partial ordering 
states iff number tokens may change execution net 
transitions active components petri net change state net firing rule transition said enabled iff input place contains token 
enabled transition may fire 
transition fires consumes token input place produces token output place petri net state notations transition enabled state firing results state transition oe firing sequence oe gamma leads state state gamma state called reachable notation iff firing sequence oe gamma oe note empty firing sequence allowed pn denote petri net pn initial state state reachable state pn iff define properties petri nets 
definition live petri net pn live iff reachable state transition state reachable enables definition bounded safe petri net pn bounded iff place natural number reachable state number tokens net safe iff place maximum number tokens exceed 
paths connect nodes sequence arcs 
path elementary node unique 
convenience introduce alphabet operator ff paths 
definition path elementary alphabet pn petri net 
path node node sequence hn hn gamma 
ff fn alphabet elementary iff nodes definition strongly connected petri net strongly connected iff pair nodes places transitions path leading high level petri nets classical petri net allows modeling states events conditions synchronization parallelism choice iteration 
petri nets describing real processes tend complex extremely large 
classical petri net allow modeling data time 
solve problems extensions proposed 
known extensions basic petri net model extension color model data extension time extension hierarchy structure large models 
petri net extended color time hierarchy called high level petri net 
extensions model specific aspects 
formalization aspects scope 
introduce extensions informal manner 
ffl extension color tokens represent objects resources goods humans modeled system 
want represent attributes objects 
insurance claim modeled token petri net want represent attributes name claimant identification number date amount 
attributes easily represented token classical petri net extend petri net model colored typed tokens 
colored petri net token value referred color 
transitions determine values produced tokens basis values consumed tokens transition describes relation values input tokens values output tokens 
possible specify preconditions take colors tokens consumed account 
ffl extension time real systems important describe temporal behavior system need model durations delays 
classical petri net capable handling quantitative time timing concept added 
ways introduce time petri net 
time associated tokens places transitions 
ffl extension hierarchy timed colored petri nets allow succinct description business processes precise specifications real systems tendency large complex 
reason provide hierarchy construct called subnet 
subnet aggregate number places transitions subsystems 
construct structure large processes 
level want give simple description process having consider details 
level want specify detailed behavior 
extension hierarchy allows approach 
elaborate discussion extensions kinds high level petri nets reader referred jen aal hee 
mapping workflow management concepts petri nets systems methodologies support separate modeling workflow process 
modeling structure organization resources organization 
distinction aspects illustrated relates process dimension resource dimension 
reasons decoupling dimensions specifying workflow 
complexity reduced reuse stimulated possible modify process changing organizational model vice versa 
section show petri nets suitable modeling process dimension 
show incorporate resource dimension 
workflow process definition process dimension specified tasks need executed order 
modeling workflow process definition terms petri net straightforward tasks modeled transitions conditions modeled places cases modeled tokens 
illustrate mapping workflow management concepts petri nets consider processing complaints 
complaint registered task register parallel questionnaire sent task send questionnaire complaint evaluated task evaluate 
returns questionnaire weeks task process questionnaire executed 
questionnaire returned weeks result questionnaire discarded task time 
result evaluation complaint processed 
actual processing complaint task process complaint delayed questionnaire processed time occurred 
processing complaint checked task check processing 
task archive executed 
shows workflow process definition processing complaints specified terms petri net 
tasks register send questionnaire evaluate process questionnaire time process complaint check processing archive modeled transitions 
transitions processing ok processing nok added model possible outcomes executing task check processing 
transitions processing processing required added similar reasons 
model states tasks conditions added 
condition modeled place 
example place corresponds condition ready evaluate complaint 
condition true place con register archive evaluate processing check processing processing ok processing nok processing required process complaint time send questionnaire process questionnaire petri net processing complaints 
tains token questionnaire processed time occurred 
note prerequisite task archive task process complaint 
condition start condition condition condition 
workflow process definition shown models life cycle single case 
general cases handled workflow process definition 
cases corresponds tokens 
tokens multiple cases reside petri net tokens may get mixed 
example transition archive may consume tokens correspond different cases 
clearly undesirable 
ways solve problem 
possible high level petri net token value color contains information identity corresponding case case identifier 
transitions allowed fire case identifiers tokens consumed match precondition inspects compares token values 
shows high level petri net case identifiers 
dotted lines associate tokens cases token place value linking case 
way solve problem 
case corresponds unique instance petri net 
cases instances petri net 
think instance layer 
layers put top possible see cases diagram 
interesting management point view gets overview state workflow 
example place contains lot tokens indicate bottleneck 
remainder consider petri nets describe life cycle case isolation 
register archive evaluate processing check processing processing ok processing nok processing required process complaint time send questionnaire process questionnaire case case case case case case tokens case identifier allows separation cases 
petri net models workflow process definition life cycle case isolation called workflow net wf net 
wf net satisfies requirements 
wf net input place output place 
token corresponds case needs handled token corresponds case handled 
secondly wf net dangling tasks conditions 
task transition condition place contribute processing cases 
transition place located path place place requirement corresponds strongly connectedness connected additional transition see 
definition wf net petri net pn wf net workflow net pn special places place source place ffli 
place sink place 
ii add transition pn connects place fflt fog ffl fig resulting petri net strongly connected 
places set correspond conditions transitions set correspond tasks 
note requirements stated definition minimal requirements 
requirements satisfied possible define workflow process definition potential deadlocks livelocks 
tokens wf net represent workflow state single case 
workflow state contains partial information state case 
addition case workflow attributes application data 
workflow state corresponds distribution tokens places marking 
consider example 
workflow state case 
workflow attribute specific piece information routing case 
think workflow attribute control variable logistic parameter 
workflow attribute may age department responsible complaint registration date 
term case attribute refer workflow attribute specific case 
classical petri net pn abstracts workflow attributes 
high level petri net extension color model workflow attributes 
application data manage workflow execute task 
application data outside scope workflow process definition workflow management system knowledge information 
workflow attributes derived application data 
examples application data address evaluation report 
routing constructs process dimension building blocks split join join model sequential conditional parallel iterative routing wfmc wfm 
clearly wf net specify routing cases 
section types routing identified sequential parallel conditional iteration 
sequential routing 
sequential routing deal causal relationships tasks 
consider tasks task executed completion task executed sequentially 
shows sequential routing modeled adding places 
place models causal relationship task task place represents postcondition task precondition task place models causal relationship task task parallel routing situations order execution strict 
example tasks need executed order execution arbitrary 
model parallel routing building blocks split join parallel routing 
split join 
shows building blocks modeled ordinary transitions 
think transitions control tasks added routing purposes 
normal task act split join 
execution split enables task task join enabled execution synchronize 
result task task executed parallel 
means executed arbitrary order 
possible execution coincides case tasks overlap time 
workflow management systems possible execute tasks case time 
case term semi parallel 
semi parallel routing executed vice versa interleaving semantics interpret workflow process definition 
semi parallel routing avoid serious technical problems 
example case applications tasks system share data 
case locking mechanism database system may prevent tasks executed concurrently case 
split join conditional routing 
conditional routing allow routing may vary cases 
way routing case may depend workflow attributes case behavior environment workload organization 
model choice alternatives building blocks split join cases exclusive 
split modeled place multiple outgoing arcs join modeled place multiple ingoing arcs 
shows situation task followed task task choice execution tasks followed execution task place precondition just tasks executed case place 
contains token non deterministic choice choice alternatives depends workflow attributes 
choice workflow attributes deterministic choice 
example routing insurance claim may depend compensation costs 
workflow attribute take account compensation costs 
costs exceed certain amount additional checks necessary 
routing traffic violation may depend type traffic violation represented corresponding workflow attribute 
ways model choice workflow attributes 
recall extension color model workflow attributes 
construct shown add precondition additional enabling requirement workflow attributes tasks enabled contains token 
way model deterministic choice shown join explicit split explicit choice workflow attribute 
transition output places 
transition produces token 
choice workflow attribute positive task executed task special symbol denote fact task split exclusive 
note nondeterministic choice differs choice respect moment choice 
choice moment task completed choice moment executed 
term explicit split choice workflow attributes 
term implicit split reserved situation moment choice late possible 
workflow modeling utmost importance distinguish implicit explicit splits 
introduced special notation explicit split 
split join split explicit join explicit implicit implicit split join building blocks workflow modeling 
denote fact task split join join 
lists main constructs 
split join correspond normal behavior transition classical petri net 
implicit split join modeled places 
explicit split modeled transition produces token output places exclusive xor 
place selected basis workflow attributes 
explicit join modeled transition enabled input places contains token 
general explicit join modeled implicit join place 
compelling need distinguish implicit explicit joins 
avoid explicit joins 
distinction implicit split explicit practical relevance discussed detail concept triggering introduced 
form routing iteration 
iteration modeled building blocks shown 
consider example workflow process definition shown 
task control task checks result task check task may executed 
task executed times 
possible specify task executed zero times 
iteration considered undesirable form routing iteration may executed multiple times 
corresponds repeated execution task making real progress 
unfortunately situations iteration avoided 
example information supplied customer incomplete request refused 
triggering workflow process definition shown specifies case routed tasks need executed order 
arbitrary case specific state workflow state workflow attributes specified tasks executed 
important note fact task executed specific case mean task executed directly 
example task executed employee employee available willing execute task 
employee ill holidays having lunch task executed 
example processing form returned customer 
customer return form corresponding task executed 
examples show tasks additional conditions availability resources information need satisfied 
execution tasks forced workflow management system 
workflow management system force customers return forms force employees execute specific tasks 
workflow management system complete control just supports workflow 
important differentiate enabling task execution task 
enabling task imply task executed immediately crucial distinction 
introduce concept triggering 
trigger external condition leads execution enabled task 
execution task instance specific case starts moment task instance triggered 
task instance triggered corresponding case state enables execution task 
distinguish types tasks 
ffl automatic task triggered moment enabled 
kind triggering tasks executed application automatic user message time types triggering 
require human interaction 
ffl user task triggered human participant user selects enabled task instance executed 
workflow management system user called basket 
basket contains tasks instances enabled may executed user 
selecting task instance corresponding task instance triggered 
ffl message external event message triggers enabled task instance 
examples messages telephone calls fax messages mails edi messages 
ffl time enabled task instance triggered clock task executed predefined time 
example task remove document triggered case trapped specific state hours 
automatic tasks enabling actual start execution coincide 
workflow process definition symbols shown denote type trigger required 
shows workflow process definition processing complaints building blocks introduced 
tasks processing processing required processing ok processing nok see replaced split evaluate split check processing 
diagram extended triggering information 
tasks register evaluate process complaint check processing require user trigger executed human resources 
tasks send questionnaire archive executed application require human interaction 
task process questionnaire executed returns form external trigger required execute task 
task time requires time trigger 
workflow state case token possibilities process questionnaire executed returns form time time executed moment certain period time register time send questionnaire process questionnaire process complaint check processing evaluate archive workflow process definition extended triggering information 
expires 
note moment choice process questionnaire time late possible 
implicit split explicit split 
triggers illustrate essence difference implicit explicit split 
implicit split replaced explicit split send questionnaire chooses process questionnaire time behavior changes dramatically 
example possible forms returned time rejected cases blocked forms returned 
example 
process definitions execution task followed execution process definition moment choice late possible 
execution race external message required task arrives starts executing task executed second workflow process definition choice fixed execution task selected arrival external message influence 
selected bypass shows importance explicit representation triggers states moment choice 
workflow management systems states subsequent tasks problems modeling implicit splits 
problems modeling milestones 
clearly explicit representation states important 
fortunately petri nets allow explicit representation states elegant manner 
implicit split explicit split example illustrate difference implicit split explicit split 
tasks items activities task corresponds generic piece 
task defined specific case type cases task may executed cases 
avoid confusion task enabling task execution task introduce additional terms item activity 
item task enabled specific case item corresponds concrete piece 
sense item combination task case trigger optional 
workflow management system items correspond interactive tasks offered user called basket 
activity actual execution item task executed specific case 
activity combines task case trigger resource optional 
easy map terms task item activity petri net terminology 
tasks corresponds transition item corresponds enabled transition binding activity corresponds transition firing 
consider example 
transition process complaint corresponds task 
contain token case identifier enabled transition process complaint corresponds item 
process complaint fires consuming tokens case identifier firing corresponds activity 
think trigger additional condition needs satisfied task executed 
model terms petri nets trigger corresponds token additional input place task 
far commit rollback start trigger place low level behavior task 
modeled tasks transitions 
mapping tasks transitions internal behavior task 
abstraction convenient workflow modeling 
consider task detail clear execution task takes time time elapses start completion 
fact possible execution task anomalies occur application crashes database information missing 
possible execution task postponed canceled 
shows simple petri net model low level behavior task 
start activity transition start fires followed commit transition commit rollback transition rollback 
note trigger modeled token place trigger place 
think task logical unit activity transaction 
just transaction activity satisfy known acid properties 
acronym acid stands ffl atomicity activity executed successfully commit rolled back completely task completed partially 
ffl consistency execution activity leads consistent state 
ffl isolation effect execution activity parallel activities equal effect execution activity isolation 
ffl durability result committed activity get lost 
acid properties impose technical constraints size task 
choosing tasks right size main issues workflow modeling 
tasks small lot overhead setup times workflow complex manage 
tasks large may problem execute task go possible commit partially completed task put parts task contract 
management resources allocation items users finegrained tasks large allow specialization 
note granularity management resources determined size task 
resource classification clearly petri nets suited modeling workflow process definitions 
far focused process dimension resource dimension 
resource dimension concerned organizational issues formation teams authorization users 
systems provide design tool model organization 
tools structure resource dimension facilitate specification rules allocate items resources 
term resource actor able execute specific tasks 
environments workflow management systems resources mainly human 
indicated section prefer term resource employee participant workflow management restricted offices 
task need specify allowed execute task 
explicitly linking resources tasks considered harmful 
task linked specific user task blocked user absent 
links specific resources reduces flexibility 
workflow process definition needs modified time new employee hired existing employee discharged 
avoid links specific resources resources grouped classes 
resource class group resources similar characteristics 
note resource may member multiple resource classes 
consider example 
resource classes complaints department evaluators support staff processing staff complaints department mike marian pete john tracy bill harry kate eric resource classification 
evaluators processing staff support staff 
marian member evaluators processing staff complaints department member resource class support staff 
resource classification shown specify resources allowed execute user tasks 
tasks register evaluate process complaint check processing executed member class complaints department 
register requires member class support staff evaluate requires member class evaluators process complaint requires member class processing staff check processing requires member class evaluators 
note explicitly linking tasks resources specified marian persons allowed execute task check processing 
section types resource classes introduced roles organizational units 
resource class capabilities functional requirements members called role 
resource classes support staff evaluators processing staff examples roles 
classification structure organization resource class called organizational unit team branch department 
class complaints department example resource class structure organization capabilities members 
workflow management systems associate role organizational unit task 
means task organisational units roles resource resource classification resource member organizational units roles 
executed resource member resource class functional requirements role resource class structure organization organizational unit 
illustrates orthogonal relation roles organizational units 
associating role organizational unit task number resources allowed execute task reduced intersection classes 
advanced concepts needed specify allowed execute specific item 
role organizational unit associated task case dependent 
example insurance claims estimated compensation costs dollars handled senior employee complaints specific department handled team possible specific resources excluded executed related tasks 
example tasks evaluate check processing executed different resources 
means marian executed task evaluate specific case allowed execute check processing case executed mike eric 
term separation functions additional requirement 
resource management resource classification advanced concepts separation functions specify allowed execute item 
multiple resources allowed execute item choice 
mechanisms resolve choice ffl push control system choice sends item specific user item resource chosen 
choice may statistical information load simple heuristics 
ffl pull control workflow management system sends copy item user allowed execute 
moment user selects item copies disappear 
situations pull control preferred mechanism distribute items 
note push control reduces flexibility linking items specific resources 
users workflow management system dislike push control feel controlled system 
choice multiple resources allowed execute item decision 
items order items executed needs decided 
known queuing disciplines known operations management wil order pending items fifo lifo spt shortest processing time shortest remaining processing time edd earliest due date prio tasks priority go 
push control workflow management system force execution items specific order 
pull control user deviate order suggested system 
note ordering items selection resources closely related 
time user executes item setup required case task 
reduce setup times workflow management systems allow chained execution execution 
chained execution corresponds execution multiple subsequent tasks case go user 
consider example workflow process shown 
tasks register send questionnaire evaluate executed specific resource chained execution mean resource starts task register tasks follow automatically case 
chained execution allows tasks clustered 
execution corresponds repeated execution task multiple cases 
example resource executes task register batch cases 
chained execution reduces setup time needed get acquainted case 
execution helps user build routine 
concept closely related chained execution case management 
case management case case manager 
case manager responsible case executes tasks case possible 
case management benefits setup times reduced case manager serves contact customer case handled 
workflow management systems support advanced concepts chained execution execution case management 
summary section introduced number workflow concepts showed concepts mapped petri nets 
routing constructs identified wfmc mapped wf nets 
petri net formalism allowed experience subtle difference implicit split explicit split 
advanced topics milestones triggers difference tasks items activities illustrated examples 
examples show petri net formalism suited deal dimensions shown 
establish link workflow process definition defined terms wf net third dimension resource dimension discussed classification resources allocation resources items resource management 
analysis workflows section focus analysis workflows 
start overview various types workflow analysis 
concentrate specific type analysis verification 
purpose introduce notion correctness called soundness devote rest section petri net analysis techniques establish soundness 
results section illustrate potential petri nets workflow domain 
correctness effectiveness efficiency business processes supported workflow management system vital organization 
workflow process definition contains errors may lead angry customers back log damage claims loss 
flaws design workflow definition may lead high throughput times low service levels need excess capacity 
important analyze workflow process definition put production 
basically types analysis ffl validation testing workflow behaves expected ffl verification establishing correctness workflow ffl performance analysis evaluating ability meet requirements respect throughput times service levels resource utilization 
validation done interactive simulation number fictitious cases fed system see handled 
verification performance analysis advanced analysis techniques needed 
fortunately powerful analysis techniques developed petri nets mur 
linear algebraic techniques verify properties place invariants transition invariants non reachability 
coverability graph analysis model checking reduction techniques analyze dynamic behavior petri net 
simulation markov chain analysis performance evaluation cf 

abundance available analysis techniques shows petri nets seen solver independent medium design workflow process definition analysis workflow 
today workflow management systems give limited support performance analysis 
systems provide rudimentary simulator provide gateway simulation tool 
simulation estimate key performance indicators experimenting specified workflow assumption specific behavior environment 
examples key performance indicators average throughput time cases average waiting time occupation rates resources service levels average number pending cases 
workflow management systems give support verification workflows 
result workflow process definitions operational thoroughly checked correctness 
results runtime errors need repaired fly high costs 
manufacturers users workflow management systems see need analysis tools take care verification workflows 
unfortunately manufacturers technology build tools 
remainder section show workflows specified terms petri nets verified state art analysis techniques 
soundness property consider wf net shown 
easy see workflow process definition contains deficiencies 
time processing fire time processing fire wf net terminate properly token gets stuck 
time time fire task processing nok executed twice presence tokens moment termination clear 
register time time processing processing processing ok processing nok wf net processing complaints 
clearly wf net shown correct definition correctness 
correctness criterion set minimal requirements workflow process definition satisfy 
workflow process definition satisfy requirements listed definition wf net source place start condition sink place condition task condition path requirements verified statically relate structure petri net 
third requirement satisfied case procedure terminate eventually moment procedure terminates token place places empty 
fourth requirement dead tasks possible execute arbitrary task appropriate route wf net 
additional constraints correspond called soundness property 
definition sound procedure modeled wf net pn sound state reachable state exists firing sequence leading state state formally ii state state reachable state token place formally iii dead transitions pn 
formally note soundness property relates dynamics wf net 
requirement definition states starting initial state state possible reach state token place state 
assume fairness cf 
val mur requirement implies eventually state reached 
fairness assumption reasonable context workflow management choices implicitly explicitly applications humans external actors 
clearly introduce infinite loop 
come back issue fairness 
second requirement definition states moment token put place places empty 
term proper termination describe requirements 
third requirement states dead transitions tasks initial state transition possible reach starting state enabled 
definition assumes workflow specified terms wf net 
recall wf net classical petri net satisfies certain properties 
enhanced workflow process definition triggers workflow attributes 
analysis techniques remainder additional information 
triggers simply removed 
join corresponds normal transition petri net 
tokens value uncolored 
map split join task single transition 
split unfolded small network transition alternative 
join replaced transitions 
note overloading notation symbol denote place state token place see section 
removing triggers unfolding tasks obtain wf net 
shows translation wf net removing triggers unfolding tasks 
reasons abstracting triggers workflow attributes 
behavior environment modeled completely 
environment employees customers generates triggers sets workflow attributes 
simulation purposes necessary model behavior environment certain extent 
verification purposes dangerous explicitly modeled environment 
real environment differs modeled environment verification pointless 
incorrect assumptions environment may hide errors design workflow process definition 
triggers workflow attributes 
just assume environment willing generate triggers choice considered non deterministic 
consider example task evaluate 
task replaced transitions model possible outcomes evaluation 
reality choice workflow attributes application data behavior evaluator 
clearly modeled completely 
consider choice non deterministic 
reasons abstracting triggers workflow attributes 
able prove soundness situation triggers workflow attributes hold situation triggers workflow attributes 
triggers workflow attributes allows classical petri nets high level petri nets 
analysis point view classical petri net preferable availability efficient algorithms powerful analysis tools 
register processing time time processing archive sound wf net illustrate fairness assumption 
definition states requirements guarantee possible terminate staring state possible reach final state consider example wf net shown 
state reachable state firing sequence leads state guarantee firing sequence occur 
example possible time outs occurs task archive occurs 
assume strong fairness cf 
val mur 
means consider arbitrary infinite firing sequence extended net pn see transition occurs infinitely 
extended net extra transition added connects making net cyclic 
strong fairness corresponds probablistic interpretation fairness enabling time task negative exponentially distributed enabled tasks selected random order cf 

assuming soundness strong fairness guaranteed case place eventually 
weaker form fairness sufficient 
consider example notion fairness transition enabled infinitely fire eventually 
assume notion fairness guaranteed state reached 
tasks processing time processing time fire alternately task archive enabled spite weak fairness assumption termination guaranteed 
reasonable assume strong fairness context workflow management 
quite easy detect behavior violates assumption strong fairness count number times task executed specific case 
necessary sufficient condition soundness wf net pn want decide pn sound 
purpose define extended net pn 
pn petri net obtained adding extra transition connects extended petri net pn defined follows ft ht iig 
illustrates relation pn pn extended net pn facilitate verification soundness property 
theorem shows extended net allows formulation soundness property terms known petri net properties 
pn pn ft ht iig 
theorem wf net pn sound pn live bounded 
proof 
see aal aal 
theorem shows standard petri net analysis techniques verify soundness 
consider example workflow process definition shown 
standard petri net analysis tools verify extended net live bounded 
workflow process specified guaranteed behave properly cf 
definition 
theorem extension results aal sh 
aal restrict free choice wf nets 
free choice petri nets allowed mix choice synchronization see definition 
independently sh necessary sufficient conditions soundness copa nets 
copa nets correspond subclass free choice petri nets 
structural characterizations soundness theorem gives useful characterization quality workflow process definition 
number problems ffl complex wf net may intractable decide soundness 
arbitrary wf nets soundness decidable expensive terms time space complexity 
fact problem deciding liveness boundedness expspace hard cf 
cep 
ffl soundness minimal requirement 
readability maintainability issues addressed theorem 
ffl theorem show non sound wf net modified identify constructs invalidate soundness property 
problems stem fact definition soundness relates dynamics wf net workflow designer concerned static structure wf net 
interesting investigate structural characterizations sound wf nets 
purpose introduce interesting subclasses wf nets free choice wf nets nets coverable wf nets 
free choice wf nets workflow management systems available moment states tasks states represented explicitly 
workflow management systems building blocks split join join specify workflow procedures 
split parallel routing 
split join conditional routing 
systems states choice inside split building block 
model split terms petri net split corresponds number transitions sharing set input places see 
means workflow management systems workflow procedure corresponds free choice petri net 
definition free choice petri net free choice petri net iff transitions fflt fflt implies fflt fflt easy see process definition composed splits joins splits joins free choice aal 
transitions share input place fflt fflt part split free choice number alternatives 
sets input places match fflt fflt 
shows free choice wf net 
wf net shown free choice archive process complaint share input place corresponding input sets differ 
evaluated workflow management systems systems cosa income leu allow construction comparable non free choice wf net 
sense consider petri nets 
clearly parallelism sequential routing conditional routing iteration modeled violating free choice property 
reason restricting wf nets free choice petri nets 
allow non free choice petri nets choice conflicting tasks may influenced order preceding tasks executed 
routing case independent order tasks executed 
situation free choice property violated mixture parallelism choice 
shows situation 
firing transition introduces parallelism 
real choice enabled parallel execution results situation allowed occur 
execution delayed executed real choice 
opinion parallelism separated choice alternatives 
consider non free choice construct shown improper 
literature term confusion refer situation shown 
non free choice wf net containing mixture parallelism choice 
free choice petri nets studied extensively cf 
bes de des esp hac compromise expressive power analyzability 
class petri nets strong theoretical results efficient analysis techniques exist 
example known rank theorem de allows formulate corollary 
corollary free choice wf net checked soundness polynomial time 
proof 
see aal 
corollary shows free choice nets efficient algorithms decide soundness 
shown sound free choice wf nets safe aal 
workflow management systems allow free choice workflows free choice wf nets completely satisfactory structural characterization workflows 
hand non free choice wf nets correspond sensible workflows cf 

hand sound free choice wf nets sense 
free choice property desirable property 
model workflow free choice 
workflow specification free choice wf net enacted workflow systems 
free choice wf net allows efficient analysis techniques easy understand 
non free choice constructs construct shown potential source anomalous behavior deadlock difficult trace 
structured wf nets approach obtain structural characterization workflows balance splits joins 
clearly parallel flows initiated split joined join 
alternative flows created split synchronized join 
shown split complemented split complemented join 
split join split join split join join split bad constructions 
deficiencies wf net shown fact register complemented join join formalize concept illustrated give definition 
definition handled structured petri net pn handled iff pair nodes nodes place transition pair elementary paths leading ff ff fx yg wf net pn structured iff extended net pn handled 
register time send questionnaire process questionnaire process complaint check processing evaluate archive workflow process definition structured 
consider example alternative complaints handling process shown 
wf net structured split register complemented join disjunct paths leading register evaluate send questionnaire process questionnaire process complaint check processing 
paths highlight fact workflow process shown sound 
task evaluate puts token token gets trapped second path place 
arc process complaint replaced arc archive split register complemented join archive wf net sound 
shows example wf net structured 
structured split register complemented 
structured wf net 
shows typical example structured wf net 
wf net shown example structured net free choice 
wf nets free choice possible verify soundness wf net efficiently 
corollary structured wf net checked soundness polynomial time 
proof 
see aal 
proof uses results es bcd 
structured wf nets free choice wf nets similar properties 
cases soundness verified efficiently soundness implies safeness 
spite similarities sound structured wf nets free choice sound free choice wf nets structured 
fact possible sound wf net structured figures 
coverable wf nets sound wf nets shown 
wf net shown transformed free choice structured wf net separating choice parallelism 
wf net shown transformed free choice structured wf net yielding complex wf net 
place acts kind milestone tested task process complaint 
traditional workflow management systems state case explicit able handle workflow specified 
workflow management systems cosa sl capability enact state workflow 
interesting consider generalizations free choice structured wf nets coverable wf nets seen generalization 
definition coverable wf net pn coverable iff extended net pn satisfies property 
place subnet pn pn strongly connected pn state machine transition pn input output arc definition corresponds definition de 
subnet pn satisfies requirements stated definition called component 
pn strongly connected state machine place input output place transition pn input output place pn wf nets shown coverable 
wf net shown coverable component 
theorem shows coverability generalization free choice property structuredness 
theorem sound free choice wf net coverable 
sound structured wf net coverable 
proof 
see aal 
sound wf nets coverable 
coverable wf net safe 
wf nets sound see coverable 
examples show high correlation coverability soundness 
coverability basic requirements workflow process definition satisfy 
formal point view possible construct wf nets sound 
typically nets contain places restrict firing transition component 
see example rei 
practical point view wf nets avoided 
wf nets coverable difficult interpret structural dynamical properties match 
example nets live bounded structurally bounded 
practical need constructs violate coverability property 
consider coverability basic requirement wf net satisfy 
coverability verified polynomial time 
unfortunately general possible verify soundness coverable wf net polynomial time 
complexity deciding soundness coverable wf net pspace complete 
applications real problem 
cases number tasks workflow process definition number states 
tools standard techniques construction coverability graph problems coping workflow process definitions 
summary structural characterizations free choice structured coverable turn useful analysis workflow process definitions 
coverability desirable property workflow definition satisfy 
constructs violating coverability detected easily tools build help designer construct coverable wf net 
coverability generalization structuredness free choice property theorem 
structuredness free choice property correspond desirable properties workflow 
wf net satisfying properties analyzed efficiently 
shown workflows free choice structured 
consider example 
fact task process complaint tests token prevents wf net free choice structured 
sensible workflow workflow management systems support advanced routing construct 
able state workflows cosa allowing constructs violate structuredness free choice property structural characterizations useful 
wf net free choice structured locate source violates properties check really necessary non free choice non structured construct 
non free choice non structured construct really necessary correctness construct potential source errors 
toolset workflow management rewarding application domain petri nets 
hand petri nets allow design complex workflows advanced routing constructs 
hand powerful analysis techniques verify correctness workflow process definition 
unfortunately workflow management systems petri nets 
just products petri nets design language cosa software ley cosa solutions germany income germany leu bochum germany 
lot practical experience application cosa 
cosa leading products dutch workflow market 
cosa workflow management system consists number components ffl cosa network editor cone cone tool design workflow process definitions 
shows window cone 
ffl cosa user editor classification resources terms roles organizational units 
cosa workflow process definition cone 
ffl cosa simulator cosi cosi primitive simulation tool validate workflow process definitions 
ffl cosa runtime service workflow enactment service consists workflow engines 
ffl cosa comb comb workflow client application basket offers items user 
ffl cosa cond cond extension comb allows user see workflow state case 
ffl cosa administrator coad coad administration monitoring tool handle abnormalities execute changes detect problems collect management information 
cosa petri nets cone uses petri nets design language cosi cond visualize workflow terms petri net uses firing rule enact workflow 
cosa allows enactment complex workflow processes advanced routing constructs 
cosa support verification allow detailed simulation difficult users just interested business process modeling 
cosa combination products overcome problems protos woflan 
products interface 
shows relations cosa protos woflan 
woflan protos cosa pallas athena software ley re design enactment performance analysis verification integrated set tools design analysis enactment workflows 
protos pallas athena netherlands called bpr tool 
protos supports business process reengineering bpr efforts model analyze business processes pal 
tool easy petri nets 
facilitate modeling simple workflows users familiar petri nets possible states 
example bpr tool petri nets switzerland 
tool model simulate business processes exported staffware staffware london united kingdom 
staffware leading workflow products world 
management consultants netherlands model simulate processes modeled terms high level petri nets bak 
versions developed members department mathematics computing science eindhoven university technology 
workflow processes modeled protos cosa imported 
simulation workflow process workflow animated key performance indicators average throughput time occupation rate measured 
analysis windows woflan 
woflan eindhoven university technology eindhoven netherlands petri net workflow analyzer ahv 
woflan verify correctness workflow 
tool workflow management system independent number import functions download workflow scripts woflan cosa protos provided 
woflan uses standard petri net analysis techniques 
analysis results manner users able understand output woflan 
woflan guides user correcting erroneous workflow 
central issues analyzed woflan soundness property 
deciding workflow definition sound sufficient 
cases requirements need satisfied 
workflow definition sound user guided detecting source error support repair error 
woflan offers large selection analysis methods including methods discussed 
example woflan detects constructs violate free choice property coverability calculates invariants detects unbounded places reports dead transitions 
discussed application petri nets workflow domain 
workflow management turns application domain benefit features petri nets 
reasons petri nets workflow modeling analysis aal ffl formal semantics despite graphical nature hand petri nets graphical language allows modeling workflow primitives identified wfmc 
hand semantics petri nets including extensions defined formally 
today available workflow management systems provide ad hoc constructs model workflow procedures 
workflow management systems impose restrictions workflow primitives shown 
workflow management systems provide exotic constructs semantics clear 
problems better established design language formal semantics 
ffl state event contrast process modeling techniques state case modeled explicitly petri net 
process modeling techniques ranging informal techniques dataflow diagrams formal techniques process algebra event transitions modeled explicitly states subsequent transitions modeled implicitly 
today workflow management systems typically event tasks modeled explicitly states subsequent tasks suppressed 
distinction event state description subtle examples show utmost importance workflow modeling 
example workflow management systems states possible implicit split 
ffl abundance analysis techniques petri nets availability analysis techniques 
clearly great asset favor petri nets 
focused verification workflows 
seen petri net analysis techniques determine correctness workflow process definition 
availability techniques illustrates petri net theory add powerful analysis capabilities generation workflow management systems 
today situation respect workflow management software comparable situation regards database management software early seventies 
seventies pioneers field dbmss ad hoc concepts 
situation disorder lack consensus resulted set dbmss 
emerging standards relational data model cod entity relationship model che lead common formal basis dbmss :10.1.1.123.1085
result dbmss boosted 
similarities today workflow management systems dbmss early seventies 
despite efforts workflow management coalition real conceptual standard missing 
result organizations reluctant existing workflow management software 
opinion petri nets constitute basis standardization 
just solid reasons petri net workflow management system 
inspired practical experiences come realize features petri net formalism useful context 
aal van der aalst 
putting petri nets industry 
computers industry 
aal van der aalst 
class petri net modeling analyzing business processes 
computing science reports eindhoven university technology eindhoven 
aal van der aalst 
structural characterizations sound workflow nets 
computing science reports eindhoven university technology eindhoven 
aal van der aalst 
reasons petri net workflow management system 
navathe wakayama editors proceedings international working conference information process integration enterprises pages massachusetts nov 
aal van der aalst 
verification workflow nets 
balbo editors application theory petri nets volume lecture notes computer science pages 
springerverlag berlin 
ah van der aalst van hee 
workflow management modellen methoden en systemen dutch 
academic service 
ahv van der aalst verbeek 
tool analyze workflows 
moldt stehr editors proceedings petri nets system engineering pages hamburg sept 
university hamburg fbi hh 
bak management consultants 
user manual 
bcd 
liveness extended non self controlling nets 
de michelis diaz editors application theory petri nets volume lecture notes computer science pages 
springer verlag berlin 
bes best 
structure theory petri nets free choice 
brauer reisig rozenberg editors advances petri nets part petri nets central models properties volume lecture notes computer science pages 
springer verlag berlin 
cep cheng esparza palsberg 
complexity results safe nets 
editor foundations software technology theoretical computer science volume lecture notes computer science pages 
springer verlag berlin 
che chen :10.1.1.123.1085
entity relationship model unified view data 
acm transactions database systems jan 
cod codd 
relational model large shared data banks 
communications acm june 
de desel esparza 
free choice petri nets volume cambridge tracts theoretical computer science 
cambridge university press cambridge 
des desel 
proof rank theorem extended free choice nets 
jensen editor application theory petri nets volume lecture notes computer science pages 
springerverlag berlin 
ellis keddara rozenberg 
dynamic change workflow systems 
ellis editors conf 
organizational computing systems pages 
acm acm aug 
milpitas ca 
en ellis nutt 
modelling enactment workflow systems 
ajmone marsan editor application theory petri nets volume lecture notes computer science pages 
springer verlag berlin 
es esparza silva 
circuits handles bridges nets 
rozenberg editor advances petri nets volume lecture notes computer science pages 
springer verlag berlin 
esp esparza 
synthesis rules petri nets lead new results 
baeten klop editors proceedings concur volume lecture notes computer science pages 
springer verlag berlin 
cerf estrin 
proper termination flow programs involving concurrent processes 
acm sigplan 
hac hack 
analysis production schemata petri nets 
master thesis massachusetts institute technology cambridge mass 
hee van hee 
information system engineering formal approach 
cambridge university press 
hl hayes 
workflow management software business opportunity 
technical report ovum london 
verbeek van der aalst 
woflan petri net workflow analyzer 
computing science reports eindhoven university technology eindhoven 
jen jensen 
coloured petri nets 
basic concepts analysis methods practical 
eatcs monographs theoretical computer science 
springer verlag berlin 

trigger modelling workflow analysis 
editors proceedings con workflow management challenges paradigms products pages vienna oct 
kou 
workflow imperative 
van nostrand reinhold new york 
law lawrence editor 
workflow handbook workflow management coalition 
john wiley sons new york 
ajmone marsan balbo conte modelling generalized stochastic petri nets 
wiley series parallel computing 
wiley new york 
mem de michelis ellis editors 
proceedings second workshop computer supported cooperative petri nets related formalisms zaragoza spain june 
mur murata 
petri nets properties analysis applications 
proceedings ieee april 
pal pallas athena 
protos user manual 
pallas athena bv netherlands 
pet petri 
kommunikation mit 
phd thesis institut fur mathematik bonn 
rei reisig 
petri nets volume monographs theoretical computer science eatcs series 
springer verlag berlin 
sh 
simple control property business process models 
xv international conference computer science society 
sl software ley 
cosa user manual 
software ley gmbh germany 
val valk 
infinite behaviour fairness 
brauer reisig rozenberg editors advances petri nets part petri nets central models properties volume lecture notes computer science pages 
springer verlag berlin 
wfm wfmc 
workflow management coalition terminology glossary wfmc tc 
technical report workflow management coalition brussels 
wil wild 
production operations management principles techniques 
cassell london 
wr reimer editors 
proceedings international conference practical aspects knowledge management pakm workshop adaptive workflow basel switzerland oct 

