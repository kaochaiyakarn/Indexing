realistic controllable fire simulation philippe beaudoin pierre partement informatique de recherche op universit de montr canada introduce set techniques produce realistic looking animations burning objects 
include new method simulating spreading polygonal meshes 
key component approach consists individual flames primitives animate render fire 
simplification enables rapid computation gives intuitive control simulation compromising realism 
scales making possible animate phenomena ranging simple candle flames complex widespread fires 
key words fire simulation natural phenomena implicit surfaces volume rendering propagation surfaces 
producing controlling real natural phenomena special effects realization challenging costly dangerous impossible 
computer simulations effects represent interesting alternative reduce eliminate obstacles 
fire common natural phenomenon simulation expected find uses contexts 
introduce set techniques produce realistic looking animations burning objects 
addition exhibiting convincing visual behavior techniques efficient provide easier control appearance fire previous simulation methods 
improvement mainly due representation fire uses relatively small set flames dealing large numbers particles 
overview motivated observations approaches modeling fire differential equations result accurate animation achieve require tracking large number variables 
addition simulations produce difficult control propagation animation rendering graphics canada overview fire model 
parameters physical constants relationship desired visual effect usually hard 
physics fire fully understood values parameters guessed 
fire models particle systems :10.1.1.40.5005
limitation particle fire models related rendering 
particles sets succeed fuzzy bumpy boundaries clouds fail show characteristically crisp outlines actual flames extremely large number particles 
answer issues model simplifies physics involved fire retaining control important visual features 
key novel idea model represent fire set flames essentially deformable chains vertices rooted surface 
representation captures behavior simple flames scaling easily picture intricate turbulent fires 
contribution new fire spreading algorithm increases user control maintaining realism 
outlines approach 
divide problem simulating fire subproblems fire propagation flame animation rendering 
propagation refers spreading fire time eventually entire object 
done tracking boundary burning burning regions 
flame genesis animation consist placing flames surface deforming space time dependent vector field order capture visual dynamics fire 
rendering achieved defining implicit surfaces chains displaying volumetric technique 
approach improves previous methods simulating fire respects 
produces convincing images isolated flames burning objects 
second relative simplicity model results reduced time memory requirements compared approaches 
simplifications simulation controllable means easier takes time obtain desired effects 
rest organized follows 
section discuss previous area fire simulation 
section describes technique evolving fire front surface object 
sections explain create animate flames detail method rendering fire 
discuss results summarize achievements limitations techniques give directions investigations 
related number publications devoted computer simulation fire 
early models reeves introduces particle systems modeling animating rendering primitive 
allows simulation natural phenomena including spreading rendering fire 
approach produces effects akin series small explosions genuine flames 
perlin models fire noise function 
turbulent motion incorporated means fractal perturbation 
allows somewhat realistic twodimensional fire constrains viewpoint single position allow fire propagate 
uses physical model light emission transmission combustion focus 
volume rendering techniques uses yield convincing images single flame 
deal multiple animated flames 
chiba takahashi describe methods propagating animating rendering fire 
divide space number cells associated temperature contains certain quantity fuel 
cell temperatures evolved simulation cell receives heat neighbors 
cell temperature exceeds certain threshold 
fire modeled system independent particles influenced vector field 
images produced rendering primitive particle trajectory time step 
large numbers particles method results bumpy flame contours 
perry picard simulate evolution fire front polygonal mesh starting initial ignition point :10.1.1.40.5005
front represented set particles new particles added expands 
technique describe give guarantee new particles lie mesh important requirement properly depicting fire propagation 
particles front deposit fire sources path 
sources emit fire particles affected wind field 
rendering done viewer facing gouraud shaded hexagons aspect ratio depends fire particle age 
produces flames generally blurry outline 
stam fiume cover object map associates fuel density temperature lit flag point surface 
finite difference numerical method applied evolve system time 
approach somewhat costly offer flexible control user 
fire animation done turbulent wind fields 
authors warn model large set interdependent parameters necessarily easy manipulate 
rendering warped blobs technique defines blobs particles casts rays warped trajectories computing line integral way obtain color 
similarly previous method lack defined contours prevents technique producing believable individual flames 
fire propagation mentioned previously possible model fire propagation numerically solving differential equations govern evolution temperature pressure velocity air surrounding burning object 
avoid cost complication simulation observing main visual feature fire propagation growth burning zone 
expansion mainly driven locally defined parameters fuel density oxygen supply wind surface orientation relative gravity 
tracking boundaries parts object burning reached fire possible capture essential characteristics fire propagation relatively low computational cost 
method simulating fire propagation inspired perry picard :10.1.1.40.5005
improve ensuring computed boundaries continuous lie burning object surface necessary condition rest method properly 
representing boundaries boundary represented closed curve surface object 
object closed triangular mesh broken line represent boundary illustrates 
line satisfy property 
consecutive vertices different faces vertices lies edge shared faces 
prevents broken line leaving surface 
burning region boundary vertex fire front broken line representation fire front 
boundary vertices vector valued attributes position velocity 
positions vertices initial boundary coincide ignition point velocities spread uniformly proper order circle lies plane initial face 
displacing vertices follows boundary vertex move triangular mesh velocity 
long vertex remains face complicated deal 
denoting position pi velocity vi pi pi vi vertex may leave face crossing edge necessary specify velocity travels face 
situation define new velocity original face pi destination face transforming velocity equation 
equation ni vi 
equation vi original velocity ni linearly interpolated normal crossing point vector normal destination face 
coefficient chosen preserve magnitude velocity 
equation nice geometrical interpretation vector parallel intersection plane containing vi ni plane destination face shown 
closed manifold meshes welldefined interpolated normals equation interesting properties 
velocity change origin destination faces coplanar 

vector nonzero oriented away crossed edge 

continuity curve preserved neighboring points separated leave face different edges 
property lets propagation process behave correctly arbitrarily planar surface 
property ensures point front get stuck near edge forever crossing successively opposite directions 
property enforced technique perry picard needed subsection enforce property front :10.1.1.40.5005
evolving front wish burning zone grow time 
means boundary expand time step 
say interpolated normal defined positive dot product associated face normal 
enforcing property 
achieved step update procedure 
vertex boundary move velocity vector updating velocity way edge crossed 
second ensure final boundary enforces property introducing new vertices edges needed 
perform step identify consecutive vertices longer face 
property know line segment joined vertices previous time step displaced new continuous curve 
curve crosses edges new vertices added see 
compute intersection curve edges find points original line displaced directly edge 
points efficiently binary search original line segment 
boundary evolution algorithm may eventually produce sparse dense distribution vertices front 
avoid include step new points inserted boundary segments consecutive vertices get far apart 
happens vertices come close triangle simply remove 
nonuniform propagation speeds noted earlier evolution burning surface driven locally defined parameters 
account parameters front propagation alter vertex velocities time step 
sure front shrinks allow modification magnitude velocities 
magnitude computed function velocity direction gravity fuel density surface defined parameter 
example front propagate faster upward direction 
sampling points surface 
generating points surface propagation technique explained possible generate points surface enclosed front 
points appear time step inside area newly swept front 
segment front points generated evolving random point segment randomly chosen time illustrates process 
flame genesis animation stated earlier represent fire set flames 
picture flame stream gas follows air flow surrounding 
implementation stream modeled chain connected particles call skeleton 
particle skeleton root flame attached point burning surface 
rest chain moves turbulent time varying vector field accounts dynamic behavior fire 
field defined user meant mimic convection air flow occurs combustion gives heat 
flames surface step needed perform animation place flames surface 
point generation technique section 
points root new flame 
density points generated surface adjusted capture various effects visible fire 
increasing number points generated area result intense fire 
defining air velocity field model flame skeleton configuration time depend air velocity field moment 
function designed exhibit features specific animated fire 
supports changes space time allowing local temporary wind vortices effects 
achieve flame skeleton air velocity vector field 
build various components bi vi 
equation bi blending function defines region space time component vi effective 
better results bi constant start smoothly evolve return parameters 
vi functions user input capture characteristics animated flame low frequency wind blows fast horizontal oscillation vertical importantly strong steady component opposite gravity included account convection 
noise functions predefined vector functions useful defining vi 
defining flame skeleton root flame placed point surface create skeleton serves basis flame shape 
skeleton approximates curve segment begins root tangent point instantaneous velocity field 
words curve solution differential equation dr du curve parameter initial condition 
skeleton broken line approximation function see 
vertices skeleton denoted 
sn define si factor affects total length skeleton varies flame lifetime describe section 
general case differential equation solved analytically 
simple euler integration scheme 
practice precision critical large integration steps af visual results 
reason steps segments skeleton si si si 
technique yields results small number segments skeleton 
results shown 
skeleton obtained evaluating equation may penetrate burning object yielding undesirable results 
due fact air velocity field defined geometry object necessarily flow 
provisionally adjust vector field adding component normal surface root 
magnitude component chosen brought object 
flames small compared features burning object eliminates majority intersections skeletons objects remain interfere significantly rendering 
effect typical flames surface 
growing shrinking flames allow eventual extinction fire flames assigned life duration 
life span length factor equation skeleton vary arbitrary function 
clamped quadratic function time starting zero prevents popping results believable ignition extinction 
peak length flame taken distribution centered user defined mean length 
length flame life duration depend point root placed vertex values texture mapping 
detached flames technique described previously works case quiet fires candle flames 
highly turbulent fires feature flames take surface drift cooling vanishing 
incorporate effect track detached flames root free move away surface 
flames act particles previous techniques benefit advantages 
detached flame behaves exactly normal flame difference root position updated time step 
root moves ordinary particle velocity field 
time step position function updated euler integration scheme 
root moved rest skeleton evaluated equation length factor varies time manner similar ordinary flames 
decide introduce new detached flame evaluate vertex skeleton 
point exceeds user defined threshold insert new detached flame length initially set zero 
temporarily inhibit detached flame emission skeleton 
insertion mechanisms devised leading various visual effects sudden flame bursts brands 
rendering modeling flame skeletons convey lot visual information effectively previewing animation shown sufficient photorealistic rendering 
achieve higher quality rendering necessary dress skeletons 
actual fires flames close smoothly blend distant flames remain separate 
modeling flames implicit surfaces provides convenient way emulate behavior 
defining implicit surface describes outline single flame 
adjust function behaves context complete fire contribution flames summed 
model color variations seen inside fire 
render final image ray tracing algorithm 
basic shape equation function outline single flame initially defined physical analogy electrical potential induced uniformly charged rod 
chain segment joining vertices si si function expressed ei di sinh zi ri dp zi sinh ri zi di ri zi ri cylindrical coordinates point relative segment see di si si length segment complete flame add contributions skeleton segments ei 
zi ri 
cylindrical coordinate systems skeletons 
making shape asymmetrical isosurface obtained equation distinguish root top flame 
real flames root thin top 
produce asymmetrical shape transform previous equation height dependent radial contraction spans entire flame exp length sn function uses cylindrical coordinate relatively segment sn 
vector joins segment point see 
composed transformation ensures tightened top remains root 
transformation designed empirically isosurfaces function suited representing shape single flame 
defining complete fire preceding function describes unique flame create problems trying define complete fire 
function falls slowly distance skeleton distant skeletons influence envelope 
remove undesirable non local effects preserving shape single flame amplify falloff values smaller user defined empirically derived function takes care ee ev 
function advantage reducing bounding volume flame diminishing time isosurfaces straight skeletons lengths 
needed rendering image see section 
function expresses final contribution skeleton implicit function point 
function value complete fire 
various color layers focused modeling flames shape 
temperature rises center flame radiation emitted different parts features different wavelength distributions 
single flame various colors appear successive layers having shape similar flame outline 
temperature mainly depends distance base flame 
model compute equation progressively smaller flame skeletons layer 
skeletons obtained removing fixed proportion top chain 
iso value new implicit functions obtain sequence surfaces encloses 
single flame result shown 
rendering assign different colors layers order obtain variety fire effects 
computing surface describe surfaces defined may computed 
equation particular layer user defined iso value marching cubes technique obtain closed surface satisfying technique requires evaluating point dense regular grid process time consuming 
cubic grid side length flame skeletons time required proportional computation independent grid volume limit contribution skeleton neighborhood 
start base flame perform flood fill type traversal grid vertices stopping takes value considered negligible implementation uses 
rendering fire layer defined section volume emits light particular color intensity 
color intensity light reaching eye path function path lengths inside layer 
assume light scattering occurring inside fire significant consider straight light paths 
lengths paths inside layer computed easily casting rays polygons obtained marching cubes algorithm 
render scene ray tracing technique considers color contribution layer fire 
scanline rendering method processing polygons back front devised produce results efficiently 
results ran simulation number polygonal meshes 
illustrates front propagation moderately complex cow model triangles 
boundary vertices originate point cow leg spread progressively model surface 
shows evolution flame skeletons sphere 
images fully rendered animations figures 
complete animations web site associated www iro umontreal ca labs papers 
simulations ran mhz intel celeron mb memory 
meshes triangles propagation technique runs hz 
skeleton animation skeletons done rate averaging hz 
rendering number skeletons time consuming program outputs frames minute 
mentioned previously possibly improved replacing ray tracing scanline rendering technique 
important memory requirement method polygon storage rendering purposes remained mb 
discussion aim obtain controllable realistic looking fast fire simulation method 
introduced new propagation technique shown flames effectively animation rendering primitives 
method allows quick previewing animation features intuitive parameters speeds iterative process obtaining desired effects 
enables user simulate simple complex fires 
limitation spreading model fire reach objects disconnected burning object 
modeled starting new propagation processes points located existing flames 
directions include account illumination objects fire destroying altering surface burning objects incorporating smoke animations 
acknowledge financial support fcar nserc 
chiba muraoka miura 
twodimensional visual simulation flames smoke spread fire 
journal visualization computer animation january march 

combustion 
study theory fact application 
abacus press gordon breach science publishers new york 
hilton 
vector fields interactive tool animation modeling simulation physically particle systems soft objects 
computer graphics forum 

simple model flames 
proceedings computer graphics international pages 
lorensen cline 
marching cubes high resolution surface construction algorithm 
sig graph conference proceedings volume pages july 
perlin 
image synthesizer 
siggraph conference proceedings volume pages july 
perry picard :10.1.1.40.5005
synthesizing flames spreading 
fifth eurographics workshop animation simulation pages september 
reeves 
particle systems technique modeling class fuzzy objects 
acm trans 
graphics april 
stam fiume 
turbulent wind fields gaseous phenomena 
siggraph conference proceedings volume pages 
stam fiume 
depicting fire gaseous phenomena diffusion processes 
siggraph conference proceedings pages august 
takahashi takahashi chiba 
image synthesis scenes including simulated flames 
ieice transactions information systems 
front propagation 
animated candle flame 
flame skeletons burning sphere 
burning sphere 
