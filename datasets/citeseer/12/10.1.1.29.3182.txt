relational model temporal logic von karger institut informatik und praktische mathematik christian universit kiel kiel germany mail informatik uni kiel de rudolf institut informatik und praktische mathematik christian universit kiel kiel germany mail rub informatik uni kiel de tarski relational calculus construct model linear temporal logic 
discrete dense time covered obtain denotational domains large variety reactive systems 
keywords relational algebra reactive systems temporal algebra temporal logic 
relational calculus successful modelling possibly non deterministic systems provided fully described terms initial final states 
contrast linear temporal logic ltl manna pnueli designed describing properties reactive systems behaviour initiation termination important 
calculus relations ltl operator sequential composition 
standard model ltl unsuitable semantic domain programs ltl formulae describe properties executions programs 
program constructs temporal connectives mixed 
different relational approach programs relations 
contribution canonical embedding ltl relational algebra 
effectively enriches relational calculus temporal connectives 
conversely say extend ltl operators composition transposition 
doing create denotational domains modelling programs specifications 
discrete dense time treated 
organized follows 
sec 
introduce natural models computation develop axiomatization algebra programs 
discrete time include temporal connectives algebra programs sec 
simple algebraic laws allow deduce axioms complete proof system linear temporal logic 
axiomatization called idle computations able treat continuous case way shown sec 

conclude remarks related research directions 
igpl vol 
pp 
oxford university press relational model temporal logic calculus partial order recalling definition relation algebra introduce natural models computation suggest worthwhile design calculus set relations contained partial order relation 
axioms calculus partial order suggested 
resulting algebra provides foundation integrating relation algebra linear temporal logic 
relations mathematical models computation simplest idea represent program binary relation initial final states 
convenience shall assume initial final states drawn set states programs live domain binary relations 
embedding provides wealth combinators 
sets relations subjected usual set theoretic operations 
relation converse mapping sends relation converse known transposition relations composed sequentially form new relation specific relations occur frequently calculations deserve special names 
empty relation identity relation id set relations governed laws complete boolean algebra 
monoid identity id 

equivalences called names including exchange laws schr der equivalences theorem 
technically algebraic structure satisfying known homogeneous complete relation algebra complete axiomatization relations familiar properties derived 
comprehensive treatment calculus axioms reader may consult textbook 
old fashioned recipe 
lamport suggests mathematical models computations adapted reasoning real time adding clock variable system state 
statebased setting clock conveniently modelled function associates state time point time occurred time totally ordered set 
order time points induces additional structure set programs 
longer pretend pair represents possible transition program initial state final state 
program turn back clock demand 
possible called official axiomatization relation algebra see 
equivalent include completeness assumption 
official axiomatization purely equational complicated 

calculus partial order change state consumes time 
capture distinction possible impossible transitions introduce relation intended model set feasible computations 
constraints feasibility suggest number algebraic laws may add postulates theory programs 
notice composition feasible computations feasible 
relation property known transitive 
secondly time moves forward computation undone hasn changed id 
words require antisymmetric 
identity relation represents program doesn change state terminates immediately 
useful practice program quite valuable calculations certainly want admit theory 
postulate reflexive id 
relation satisfying known partial order aim calculus programs 
definition program corresponds subset convenience shall pretend converse true call relation program def set programs 
lattice structure inherited full relational algebra complete boolean algebra 
complementation operator denoted 
defined program transitivity axiom monotonicity composition imply closed composition 
identity id program axiom conclude monoid identity id 
converse program program special case id necessary replace valuable ingredient relational calculus operator map programs programs 
define relative converse operator play le relational calculus 
similarly programs def def immediately obtain version schr der equivalences programs 
relational model temporal logic antisymmetry axiom reformulated follows id id id 
compiled collection rules govern program operators consideration 
purpose set rules allow conduct investigations bothering details particular model 
words shall regard axioms algebra programs 
consequences axioms investigated thoroughly 
just explain prove laws required 
proofs excellent exercises achieving familiarity relative converses recommend reader tries 
stressed proofs rely exclusively internal structure concrete model important formal rules way guarantee theory safely applied alternative models 
advice general particularly important case going algebraic laws model sets time diagrams relations 
time diagrams introduced shown satisfy sec 

notice axioms enjoy left right mirror symmetry 
consequence theorem corresponding theory dual 
expect reader supplement duals laws stated necessary 
sequential composition distributes unions 
relative converse operators distribute unions 
consequence operators monotonic arguments 
shall frequently important fact mentioning 
relative converse operators associate way write expression parentheses 
characteristic property transposition reversal composition analogous law relative converse reads follows 
cancellation laws immediate consequences schr der equivalences 

calculus partial order inclusion known dedekind modular law useful factorizing intersections 
relation contained identity equal converse 
relative converse similar law provided id 
particular id sided unit relative converse time diagrams id id 
relational model programs introduced previous section may reasoning real time behaviour restricted systems described adequately just observing initial final state 
programs repeatedly interact environment behaviour start termination equally important 
refine earlier model recording just state computation intermediate states 
new model inspired interval temporal logic itl 
inherits algebraic structure old relational model sense satisfies axioms shall see additional structure 
itl formula built atomic propositions boolean connectives binary modal operator concatenating intervals usually referred chop 
minimal grammer ranges set propositions 
truth formula depends observation interval possible world 
possible world represented function time time totally ordered set set possible states 
interval simply set form def time time validity non atomic formula defined 
clause usually read follows composite formula holds interval chopped subintervals holds holds 
syntax interpretation atomic propositions chosen suit particular applications left unspecified 
time time called time diagram 
denote set time diagrams 
formula corresponds relational model temporal logic subset consists time diagrams 
connectives itl explained operators subsets inparticular def power set boolean algebra relation algebra lacks transposition operator 
reason course allow negative intervals 
generalized time diagram pair wheres time arbitrary 
take second component generalized time diagram pair interval negative intervals proper mathematical objects 
sequential composition extended sets generalized time diagrams obvious way transposition defined def easy check set sets generalized time diagrams relation algebra elements relations 
satisfies postulates 
benefit axiomatic approach shows clearly relation algebra designed calculating ordinary binary relations may safely apply results different models 
recall programs just subsets sets proper time diagrams 
set programs admits relative converse operators 
natural interpretation intervals 
example obtained cutting right similarly means cutting left 
new model discovered existing theory natural look additional laws added generic axioms build stronger special purpose calculus new model 
case observe composing backwards step forwards step order results backwards forwards step way moving sideways parallel time 
addition axioms know programs equation yields laws familiar calculus intervals 
states absence true concurrency sense events ordered time 
known axiom local linearity 
second law encodes absence temporal branching 
passing note presence schr der equivalences axiom equivalent temporal dual 
precise statement proof lemma left reader see 
axiom self dual 
algebra programs continues enjoy perfect symmetry left right past 
temporal algebra 
temporal algebra section introduce temporal connectives algebra programs 
see defined terms existing operators properties consequences axioms 
particular possible deduce axioms complete proof system linear temporal logic 
linear temporal logic linear temporal logic extends predicate calculus option reasoning past states 
minimal syntax provided grammar ranges set propositions state space 
operators pronounced previous 
far required time totally ordered set 
interpretation ltl formulae assume specifically time contiguous subset example time time 
validity ltl formulae defined induction structure time andi time atomic proposition time time time time 
obviously ltl formulae interpreted denoting sets time diagrams sense define formula def note id ltl formula 
task define algebraic operations correspond clauses definition validity 
example require unary function holds formula 
note notation syntactical semantical operators 
boolean connectives provided axiom concentrate temporal operators 
known fixed point operator express terms 
reduces task finding algebraic definition operation satisfies time operation relational model temporal logic satisfies time id difficult see step step step step step time set computations precisely time unit 
step written relational expression step id id id 
perform abstraction step take defining equations add temporal connectives complete boolean algebra composition relative converse operators 
id formula defined temporal operators arguments contained id inthis way avoid introducing partially defined operators 
important requirement practically useful calculus programs partially defined operators tend clutter theorems side conditions difficult memorize easy overlook 
course partial function extended total function useful algebraic properties preserved 
shall see definitions satisfy constraint 
algebraic laws ltl exists complete proof systems ltl appears manna pnueli book 
companion demonstrated slight rearrangement sixteen seventeen axioms system deduced laws 
shall prove deduced 
way prove axiomatization complete ltl sense just axiom missing 
seventeenth axiom states time infinite right words state exists state 
built assumption theory destroys perfect symmetry left right incorporated additional postulate 
require schr der equivalences shunting theorem predicate calculus 
true model introduced sec 

temporal algebra step step definition step step shunting step step schr der equivalences step step schr der equivalences step step shunting definition proof start proving advancing retreating step brings back place started 
language relation algebra step injective step step id id id id id id definition step id id id monotonic id cancellation law id prove follows step step definition step step step step definition step step step step step step step absence branching id step id step step step injective step step axiom law step step step step local linearity id id step injective axiom law symmetrical argument prove inclusion follows axioms 
reader may noticed antisymmetry postulate 
results depend axiom 
condition require ensure temporal operators degenerate 
required id id id example pure calculus relations id id id step consequence temporal operators trivial 
time domains continuous time 
interval infinitesimally subdivided id id id step 
section show definitions generalized continuous case covered 
relational model temporal logic continuous case sec 
constructed relational model discrete ltl 
current trend logics continuous time easier reason quantitative aspects called real time 
abandon assumption time discrete attempt extend results dense time 
interesting idle computations formally theory developed previous section depends fact time totally ordered 
time discrete definitions step collapse 
possible define useful operators directly 
hand power elegance temporal logic rests possibility proving liveness properties fixed point induction 
desirable define operator fixed point function refers state 
obvious difficulty lies definition useful operator 
continuous setting state defined state interesting bit computation 
useful vague means interesting may apply theory different instantiations 
just assume computations classified interesting idle 
set idle idle computations chosen arbitrarily subject postulates 
composition idle computations idle idle idle idle 
computation changes consumes time idle subcomputations idle computation idle id idle 
idle idle 
previous section defined terms set step computations length 
concept having length replaced indivisible 
computation indivisible interesting ii decomposition semicolon denotes composition single computations interesting 
redefine step set indivisible computations step def idle idle idle generalizes earlier definition chose idle id equations explain temporal connectives terms step 
axioms conjunction temporal calculus continuous case illuminating 
fortunately nice shortcut gives better insight connection relational calculus temporal logic 
exhibit subalgebra 
continuous case call algebra specifications specs short obey axioms unit element composition idle id subalgebra old definition step coincides new 
manoeuvre transfers entire theory developed discrete ltl continuous setting 
shall drop assumption 
shall longer require antisymmetry postulate 
way admit models computation events spontaneous discontinuities consume time 
earth example law id abstraction time consumed assignment irrelevant 
useful simplification theory includes postulate antisymmetry 
course ensure subalgebra specifications satisfy postulate hold algebra programs 
examples consider specific models computations exhibit case set idle computations 
communicating systems internal state 
possible computations communicating system internal state described triplets discrete time diagram recording communication behaviour initial final state 
communicating systems represented set possible computations composed follows def note intermediate state recorded meaning term internal 
definitions left reader 
model instantaneous changes permitted internal state changes cancel 
follows antisymmetry axiom lost hold 
internal states recorded start meaningful talk internal state 
temporal point view internal state changes uninteresting observable 
idle def time internal states set computations change internal state 
clearly postulates satisfied 
finitely variable time diagrams 
time set real numbers equally set nonnegative real numbers 
consider def time piecewise constant piecewise constant finitely variable called time diagrams form basis approaches real time systems notably including duration relational model temporal logic calculus 
approach easy decide mean state simply state discontinuity 
words computation idle just constant note state state time diagrams may constant 
consequence seventeenth axiom going hold 
piecewise continuous time diagrams 
possible piecewise continuous time diagrams 
idle continuous model applies hybrid systems continuous changes alternate discrete transitions 
introducing clock 
assume deal arbitrary time diagrams continuous domain 
introduce operation simulating clock 
computations happen strictly clock ticks deemed uninteresting define idle def introduces imaginary clock ticks integer time point 
definition idle state fuzzy state unit interval 
algebra specifications labelling certain computations idle decided temporal formulae 
means temporal operators recognize arguments idle computations 
abstraction modelled equivalence relation individual computations equivalent write appropriate idle elements andd 
programs equivalent element equivalent element vice versa 
case idle idle idle idle idle idle idle idle fortunately force calculate equivalence classes class conveniently represented maximal element 
representation works fortunate circumstance set chosen representatives closed boolean modal operators 
call program specification idle idle idle idle greatest element equivalence class 
denote set specifications briefly specs 
theorem closed boolean operators composition relative converse 
algebra satisfies place id purpose theorem provide discrete reasoning continuous systems 
achieve unification theories discrete dense time unusual way 
weakening axioms fit cases 
continuous case conserved full power discrete reasoning showing continuous systems modulo appropriate abstraction 
remainder section devoted proof theorem 
convenience break proof series lemmas 
lemma inclusions valid program idle idle idle idle proof 
follows immediately id idle axiom fact id unit composition axiom sided unit relative converse law 
due axioms law converse inclusions hold specification obtain case equations idle idle idle idle shall give hint spec equations 
virtue axioms law converse inclusions equations hold idle 
immediate consequence lemma program idle spec 
lemma union specs spec 
proof 
assume specs 
idle idle idle idle idle idle distributivity law specs distribute similar argument show idle idle spec 
lemma complement spec spec 
proof 
assume spec 
idle idle idle idle idle idle spec cancellation law twice converse inequation follows immediately id idle monotonicity 
analogous argument shows idle idle 
spec 
lemma idle idle 
relational model temporal logic proof 
idle idle axiom idle idle shunting idle idle schr der equiv 
twice idle idle shunting idle idle monotonicity corollary obtain antisymmetry axiom place id corollary idle idle idle 
lemma idle idle 
proof 
idle idle axiom idle idle shunting idle idle schr der equiv 
idle idle schr der equiv 
lemma spec id idle idle idle id 
proof 
show equation 
id idle idle idle monotonicity axiom idle spec id idle axiom idle id idle dedekind law id idle spec lemma spec idle idle idle 
proof 
show equation 
idle idle idle idle idle distributivity law idle idle lemma monotonicity idle id idle lemma idle idle id transposition law idle id idle spec idle id law idle lemma 
continuous case lemma specs idle proof 
idle assumption id idle lemma idle id transposition law idle id law idle id spec idle lemma assumption lemma composition specs spec 
proof 
assume specs 
idle idle associativity 
remains prove idle idle symmetry need show idle 
idle idle idle local linearity axiom idle spec lemma idle lemma monotonicity step meet specs idle spec follows lemmas 
lemma assume specs 
proof 
need show spec 
symmetry check inclusions 
idle idle local linearity axiom spec 
idle idle associativity spec 
idle idle transposition law spec 
idle idle idle axiom idle lemma spec idle lemma distributivity law relational model temporal logic axioms inherited algebra programs exception involving identity 
idle specification due lemma definition idle idle specification corollary replaces antisymmetry axiom 
completes proof theorem 
related achieved integration tarski calculus binary relations manna pnueli linear temporal logic 
result possible express temporal specifications imperative programs algebra specifications may transformed programs stepwise refinement transformation justified axiom calculus 
theory developed derive csp programs 
authors example broy employed different strategy adapting relational calculus reactive systems 
idea regard systems relations streams relations initial final states 
approach suited describing discrete systems interacting agents proved technically challenging 
complexity stream theories arises necessity model causality lest temporal anomalies may occur brock ackermann anomaly famous example 
approach extends neatly systems continuously changing state 
abadi lamport 
old fashioned recipe real time 
de backer huizing de roever rozenberg editors real time theory practice lncs pages 
springer verlag 
von karger 
design calculus csp 
science computer programming 
brien 
time interval calculus 
bird morgan woodcock editors mathematics program construction lncs 
springer verlag 
brock ackermann 
scenarios model nondeterminate computations 
diaz ramos editors formalisation programming concepts lncs pages 
springer verlag 
broy 
fixed point theory communication concurrency 
bj rner editor formal description programming languages ii pages 
north holland 
chin tarski 
distributive modular laws arithmetic relation algebras 
university california publications mathematics 
emerson clarke 
characterizing correctness properties programs fixpoints 
th int 
colloq 
aut 
lang 
prog lncs pages 
springer verlag 
von karger 
sequential calculus 
available www www informatik uni kiel de 
von karger 
temporal algebra 
appear mathematical structures computer science 
von karger hoare 
sequential calculus 
information processing letters 
manna pnueli 
temporal logic reactive concurrent systems specification 
springer verlag 

related moszkowski 
temporal logic multi level reasoning hardware 
ieee computer 
schmidt str 
relations graphs 
eatcs monographs theoretical computer science 
springer verlag 
stirling 
modal temporal logics 
abramsky gabbay maibaum editors background computational structures volume handbook logic computer science pages 
clarendon press 
tarski 
formalization set theory variables 
number colloquium publications 
american mathematical society providence 
venema 
modal logic chopping intervals 
logic computat 
zhou hoare ravn 
calculus durations 
information processing letters 
received february 
