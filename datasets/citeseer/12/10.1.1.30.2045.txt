open ended systems dynamic bisimulation tile logic roberto ugo montanari sassone dipartimento di informatica universit di pisa italia 
dipartimento di matematica informatica universit di catania italia 
di unipi ugo di unipi vs dmi sos formats ensuring bisimilarity congruence fail presence structural axioms algebra states 
dynamic bisimulation introduced characterize coarsest congruence ccs weak bisimulation reconciles bisimilarity congruence property axioms speci cation open ended systems states recon gured run time cost nitary operation meta level 
show compositional framework ered tile logic suitable deal structural axioms open ended systems speci cations allowing nitary presentation context closure 
keywords bisimulation sos formats dynamic bisimulation tile logic 
semantics dynamic systems conveniently expressed labelled transition systems lts states terms certain algebra labels describe behavioral information 
provided information models possible interactions various components framework yields compositional semantics 
plotkin structured operational semantics sos successful frameworks transitions system perform de ned recursion structure states 
notions equivalence state space ltss considered literature take account particular aspects 
example interested action sequences performed system observe traces truly concurrent approach observe partial orderings actions 
state equivalences de ned basis chosen observables 
consider bisimulation equivalences bisimilarity meaning maximal bisimulation entire branching structure transition system accounted states equivalent transition perform simulate transition observation equivalent states 
research supported cnr integrated project veri ca di sistemi esprit working groups confer tmr network murst project 
main advantages compositional semantics subcomponent state safely replaced equivalent subcomponent ecting behavior 
triggered orts devoted study sos formats syntactic constraints guarantee bisimilarity congruence 
popular formats mention simple de simone format general positive gsos format liberal family formats promoted 
interesting cases formats straightforward 
instance convenient structural axioms states handled ordinary formats 
fall case semantic descriptions chemical machine operators assumed associative commutative unit parallel composition ccs 
examples systems modeled uml graphs taken suitable isomorphisms require lts de ned suitable structural equivalence classes 
nite calculus de ned rules format substitution explicit agents subject substitution axioms 
necessary resort largest congruence included bisimilarity operation closure contexts results congruence longer bisimulation 
dynamic bisimulation performs context closure bisimulation game 
dynamic bisimilarity shown capture coarsest equivalence ccs agents weak bisimulations congruences completely axiomatized axioms strong observational equivalence plus milner laws 
basic idea allow step bisimulation execution action embedding states comparison arbitrary context 
worth remarking dynamical contextual embedding natural interpretation terms dynamic recon guration system nd application practice modeling open ended systems 
main drawback lack convenient representation level sos rules spirit meta construction involving universal quanti cation contexts 
interesting approach style sewell de ning lts reduction systems enrich transition system unary contexts labels transitions state context 
solution meta level nitary principle 
propose recast dynamic bisimulation inside tile model nitely modeled 
tile model formalism modular descriptions dynamic evolution concurrent systems 
relies form rewrite rules side ects called basic tiles reminiscent sos rules context systems collecting intuitions coming structured transition systems rewriting logic 
particular analogy rewriting logic tile model de ned employing logical presentation called tile logic tiles decorated sequents subject inference rules 

horizontal parallel vertical tile compositions 
tile logic 
tile logic extends rewriting logic unconditional case account state changes side ects rewriting synchronization 
basically set rules describes behaviour certain partially speci ed sense contain variables con gurations may interact interfaces 
behaviour system consists coordinated evolution sub systems 
name tile due graphical representation rules form initial input interface initial output interface nal input interface nal output interface written stating initial con guration system evolves nal con guration tile producing ect observed rest system 
step allowed subcomponents arguments context evolve subcomponents producing ect acts trigger triggers ects called observations tile vertices called interfaces 
arrows give border tiles natural model reactive systems compositional space behaviour structured states de ned coordination activities subcomponents compositional time er powerful framework modelling composition computations 
tiles composed horizontally vertically parallel generate larger steps 
operation parallel composition corresponds building concurrent steps disjoint con gurations concurrently evolve 
course border concurrent step parallel composition borders component step 
horizontal composition yields rewriting synchronization ect rst tile provides trigger second tile resulting tile expresses synchronized behaviour 
vertical composition models execution sequence steps starting initial con guration 
corresponds sequential composition computations 
compositions illustrated 
set basic tiles associated tile logic obtained adding canonical auxiliary tiles closing composition horizontally vertically parallel auxiliary basic tiles 
example auxiliary tiles may introduced accommodate isomorphic transformations interfaces yielding consistent rearrangements con gurations observations 
tile logic deals algebraic structures con gurations different ordinary tree presentation terms term graphs partitions preorders relations net processes 
fact structures give rise monoidal categories possess basic operations needed tile con gurations monoidal tensor product gives parallel composition sequential composition category represents application context arguments 
shall monoidal categories elementary way just representing terms substitution diagrammatically arrows arguments result 
particular shall consider categorical models tile logic expressed suitable monoidal double categories axiomatized proof terms decorating tile sequents 
varying algebraic structure con gurations observations tiles model di erent aspects dynamic systems ranging synchronization net transitions causal dependencies located calculi nitely branching approaches name passing calculi actor systems 
addition tile logic allows reason terms variables larsen context systems sos formats ground terms 
formats tiles de ned structure con gurations term algebra signature 
monoidal tile format monoidal structures con gurations observations algebraic tile format cartesian structure con gurations monoidal structure observations term tile format cartesian structures con gurations observations 
ensures tile bisimilarity congruence restricting formats easily recover de simone positive gsos format 
shall focus monoidal term tile formats showing possible manage dynamic bisimulation ordinary tile bisimulation extending vertical signature nite number operators determined signature con gurations 
particular operator horizontal signature shall add observation tile id id id denotes identity appropriate category 
tile applied con guration embedding context producing ect observed ordinary bisimulation game 
shall see congruence proof bisimilarity enriched systems carried tile pasting 
bisimilarity coincides dynamic bisimilarity original system 
idea allowing contexts observations basis promoted format designed dealing higher order languages 
think extension carried natural way framework provided tile logic 
structure 
section notation recall di rule formats transition system speci cations motivate dynamic bisimulation 
section summarize tile formats focus 
section introduces syntactical constraints basic tiles guarantee bisimilarity congruence property 
section presents main results nitary presentation dynamic bisimulation monoidal term tile systems 
bisimulation sos formats notion bisimulation dates back pioneering david park robin milner process algebras provides standard framework express behavioural equivalences complex dynamical systems 
de nition 
labeled transition system lts triple set states set labels ternary relation range range 
hs notation de nition 
lts bisimulation symmetric re exive relation transition exists transition denote largest bisimulation call bisimilarity say states bisimilar equivalently exists bisimulation shall consider lts states terms signature 
results easily extended sorted signatures simplicity focus sorted case 
sorted signature set operators arity function ar assigning operator number arguments takes 
subset consisting operators arity denoted operators called constants 
denote term algebra variables disjoint 
term algebra 
write var set variables appear term said closed ground var 
constant 
substitution mapping 
closed variable mapped closed term 
substitutions extend mappings terms terms usual term obtained concurrently replacing occurrences variables 
substitution mapping denoted xn 
substitution applied elementwise substitution xn yielding composed substitution xn xn context xn denotes term distinct variables xn appear 
term obtained applying substitution xn xn 
context regarded function terms 
notice may appear xn 
example context substitution arguments projection second argument 
term linear variable occurs 
similarly xn linear linear var var substitutions composition form cartesian category subs linear substitutions forming monoidal subcategory 
alternative presentation subs obtained resorting algebraic theories 
algebraic theory cartesian category having underlined natural numbers objects 
free algebraic theory associated signature denoted th arrows correspondence tuples terms free algebra variables composition arrows term substitution 
particular th isomorphic subs arrows bijective correspondence closed terms 
matter notation assume standard naming input variables xm composing arrows resulting term obtained replacing occurrence th term tuple 
example constants arrows binary operator de nes arrow composition ha bi hf angle brackets denote term tupling yields term arrow 
fact ha bi hf hf ai monoidal theories stay algebraic theories linear substitutions stay generic substitutions 
precisely monoidal theories variables duplicated projected 
terms formally annotated variables built confusion arise avoid annotations angle brackets 
lts de ned closed terms signature label alphabet conveniently speci ed collections inductive proof rules called transition system speci cations 
transition rule form range range 
transitions upper part rule called premises lower part 
rule closed contain variables 
transition system speci cation tss set transition rules 
proof closed transition rule set closed premises founded upwardly branching tree nodes labeled closed transitions root labeled set labels nodes node label ar ar closed rule obtained instance rule tss ar 
proof closed transition proof lts associated tss consists set provable closed transitions 
formats guarantee fundamental property bisimilarity congruence associated lts shall recall de simone gsos formats 
remind equivalence relation congruence respects algebraic structure states ar implies ar ar de nition 
signature alphabet observations 
transition rule de simone format form fx ig xn labels ary operator ng variables distinct form set target contain linear 
tss de simone format rule form 
observe source rule de simone format consists single function symbol 
fact crucial proof bisimilarity congruence tss speci ed de simone format 
positive gsos format extends de simone rules ways multiple argument allowed premises tested arguments appear target target non linear context variables 
format generalizes gsos allowing generic terms sources transitions premises 
notice main restriction source persists allowing form xn compromise bisimilarity congruence property example illustrates 
example 
consider process algebra signature fnil ranging suitable set channels nil empty agent complementary unary operator action pre channel binary parallel composition operator 
consider tts consisting axiom plus usual rules propagate operator asynchronously obvious nil nil 
put context nil nil nil nil nil nil nil move 
nil nil nil nil 
dynamic bisimulation de ned reproduce ect run time recon guration open ended systems 
extends ordinary bisimulation game allowing moves put states comparison context 
de nition 
lts dynamic bisimulation symmetric re exive relation unary context including identity transition exists transition states dynamic bisimilar written exists dynamic bisimulation example nil nil 
dynamic bisimilarity coarsest congruence bisimulation 
note context moves observed part game lts 
remarked dynamic bisimulation ordinary bisimulation extended system 
observe dynamic extension nitary construction lts expressed level tss remains meta level 
de nition 
lts dynamic extension lts unary contexts 
proposition 
proof proposition relies fact move simulate move unique way 
tile formats tiles system tuple monoidal categories set objects oh ov set rule names function hs ti suitable objects shall write rule sequent tile making explicit source target arrow 
category called horizontal arrows con gurations 
category called vertical arrows observations 
objects called interfaces 
starting basic tiles system complex tiles constructed horizontal vertical parallel composition 
horizontal vertical identities added system composed basic tiles 
illustrated 
depending chosen tile format satisfy certain constraints suitable auxiliary tiles added composed basic tiles identities possible ways 
set resulting tiles called sequents de ne tile logic associated say entailed logic written sequent expressed composition basic auxiliary tiles 

de nition 
tile system 
symmetric relation con gurations called tile bisimulation exists maximal tile bisimulation denoted con gurations said tile bisimilar particularly interested considering tiles systems monoidal categories con gurations observations freely generated suitable horizontal vertical signatures respectively categories substitutions discussed previous section 
tile format proposed original presentation tiles socalled algebraic tile format perspective ordinary tss con gurations terms certain signature observations arrows monoidal category freely generated certain labels regarded unary operators 
auxiliary tiles lift horizontal cartesian structure horizontal composition tiles 
algebraic tile format basic tiles form labels viewed arrows identities fx xn 
idea interface represents ordered sequence variables variable completely identi ed position tuple standard naming xn variables assumed interfaces 
typical auxiliary tile algebraic format hx hx duplicates observation trigger tile propagating instances unique variable initial interface 
refer details 
algebraic tile format corresponds sos rules form fx ig xn yn ng xn yn contexts corresponding tile di erent 
correspondence follows closed terms label id lts associated sos speci cation includes transition algebraic tile format uniform dimensions cartesian monoidal non symmetric 
idea observe contexts replicating part horizontal structure vertical dimension prefer cartesian structure altogether resorting simpler monoidal tile format linear contexts allowed consider general term tile format cartesian 
notice monoidal theories suce expressing closed terms explained term tile format expressive 
tile formats categories con gurations observations freely generated horizontal signature signature associated set labels monoidal algebraic term tile systems usually represented tuples form 
term tile format basic tile form xn xn xm fx chosen set variables horizontal signature con gurations vertical signature observations 
course contains elementary actions regarded unary operators 
tiles concisely logic sequents number variables upper left corner tile explicit values recovered lengths 
standard naming variables interfaces assumed 
example variable appears ect rule ect depends ith component initial con guration 
analogously remaining connections 
remarked variable denotes ith element di erent interfaces border arrows tile matter fact occurrences denote element initial input interface 
auxiliary tiles term tile systems consist term tiles terms empty signature terms tiles perform consistent rearrangements generic interface dimensions 
typical auxiliary term tile consistently duplicates unary interface 
observe term tile format extends positive gsos format 
interesting question concerns suitable restrictions monoidal term tile formats tile bisimilarity yields congruence 
main properties investigated literature obtaining tile bisimilarity congruences basic source tile decomposition 
tile decomposition completely formulation applies tile systems 
de nition 
tile system enjoys decomposition property arrows sequents entailed exists exists proposition 
enjoys decomposition property tile bisimilarity congruence operations horizontal category sequential parallel composition 
address explicitly de nitions tiles apply case term algebras modulo structural axioms associativity commutativity parallel composition ccs results immediately extended 
basic source results section mildly extend 
consider equivalences closed terms re ne notion tile bisimulation ground tile bisimulation 
de nition 
monoidal resp 
term tile system 
symmetric relation closed con gurations elements called ground tile bisimulation id exists id ground tile bisimulation exact counterpart ordinary bisimulation lts 
di ers tile bisimulation de ned contexts 
ground terms need trigger ground bisimulation tests ects produce 
maximal ground tile bisimulation denoted closed con gurations said ground tile bisimilar fact interested lts associated tile systems 
de nition 
monoidal term tile system lts associated lr fx id decomposition property re ned related tile bisimilarity congruence property 
de nition 
term resp 
monoidal tile system enjoys ground decomposition property sequent id unary resp 
linear unary context ground term exists observation ground term resp 
linear context id 
theorem 
term tile system 
ground decomposition property implies ground tile bisimilarity congruence 
proof 
standard 
de ne congruence minimal relation unary context 
obviously show ground tile bisimulation coincides ground tile bisimilarity 
fact unary context 
ground decomposition id exist observation unary context id 
id horizontal composition tiles id 
de nition 
theorem 
monoidal tile system ground decomposition property implies ground tile bisimilarity congruence 
proof 
similar proof theorem requires minimal relation linear generic unary context 
observe congruence property holds generic contexts 
fact linear xn linear context obtained replacing occurrence hole di erent variable closed terms 
contexts 
linear 
ground decomposition property enforced syntactical constraints basic tiles 
tile system veri es basic source property initial con guration basic tile consists single operator generic context 
proposition 
monoidal resp 
term tile system enjoys basic source property ground tile bisimilarity congruence 
proof proposition consists steps rst prove basic source implies ground tile decomposition conclude exploiting theorems 
theorems hold structural axioms imposed con gurations necessarily case proposition rst part argument may fail 
monoidal tile format proof coincides de simone format formats essentially 
dynamic tile bisimulation basic source property satis ed congruences 
consideration applies di formats speci cation contains rules distinguish context dependent redexes 
example corradini heckel joint second author suggested may deal situation closure operation tss rules 
sewell passing reduction systems transition systems performs closure adding transition labeled state context react order perform reduction 
closures expressed meta level handled adding rules original speci cation 
di erent perspective dynamic bisimilarity satisfactory allows concise de nition congruence looking 
tiles expressive power reconcile nitary system speci cations dynamic bisimulation perspective adding suitable auxiliary tiles 
closure contexts expressed simply adding just basic tiles operators signature 
signature nite additional auxiliary tiles needed 
de nition 
term resp 
monoidal tile system dynamic extension obtained adding operator auxiliary operator auxiliary tiles 
generic horizontal context denote corresponding vertical context extended signature obtained replacing operator appears vertical counterpart leaving variables unchanged 
proof main theorem need technical lemmas require acquaintance term tile format 
corresponding lemma proved monoidal tile format considering linear contexts 
lemma 
term tile system context xn proof 
proof proceeds induction maximum depth tree representation base case trivial 
ary operator context maximum depth strictly apply inductive hypothesis conclude xn 
composing parallel sequents get 


sk id id id id 
id 

id 
id 


xn variables suitably renamed initial input interface 
horizontally compose auxiliary tile term tile systems copies inputs xn xn 

obtaining sequent xn compose auxiliary sequent extended system horizontal identity ect vertical identity nal con guration composition yields sequent xn xn concludes proof 
similar argument shows lemma 
lemma 
term tile system context theorem 
term tile system 
ground tile bisimilarity de ned de nes congruence proof 
notice auxiliary tiles uence de nition ground tile bisimilarity deals null triggers 
prove enjoys ground decomposition property get expected bisimilarity congruence property 
fact generic sequent id entailed construct tiles source respectively decompose illustrated 
theorem 
ground tile bisimilarity denoted coincides dynamic bisimilarity lr proof 
show lr inclusion lr follows directly technical lemmas whilst inclusion lr involved 
key point showing auxiliary context tile gives rise new transitions label appears manifestly auxiliary tiles hidden inside proof originate unexpected reactions 
show id suppose proof id contains auxiliary tile operator proceed induction number auxiliary tiles case analysis 
lr lr take auxiliary tile proof examine cases ect propagated nal ect observed tile horizontally composed appear ect vertically composed ects override 
case corresponds context move lr case composition yields vertical identity course entailed case ect overridden structural axioms observations particular involving projections 
shown projections throw away result applying context intermediate state thrown away proof 
reduce proof auxiliary tiles adding contexts conclude proof inductive hypothesis 
monoidal tile systems proof simpli es considerably case occur 
observations subject structural axioms observations axioms extended case proof compromised 
example 
take process algebra example associative commutative unit 
nil nil nil nil nil nil 
nil nil nil nil 
concluding remarks proposed tile logic compositional framework suitable deal open ended systems dynamic bisimulation structural axioms states 
characteristics follows naturally geometrical concepts tile con gurations observations 
particular winning feature possibility exploiting analogy horizontal vertical arrows making observations contexts 
dynamic bisimulation handled nitary enrichment speci cation congruence proof simple pictorial representation exploits ground decomposition 
lines suggested limit run time recon guration sub class contexts sub class con gurations 
discussed issue tile logic deal trace semantics 

bernstein 
congruence theorem structured operational semantics higherorder languages 
proc 
th lics ieee press 

berry boudol 
chemical machine 
theoret 
comput 
sci 

bloom meyer 
bisimulation traced 
journal acm 

meseguer montanari 
process term tile logic 
technical report sri csl 
sri international 

meseguer montanari 
executable tile speci cations process calculi 
proc 
fase vol 
lncs pages springer 

meseguer montanari 
symmetric monoidal cartesian double categories semantic framework tile logic 
mathematical structures computer science 
appear 

montanari 
zero safe nets comparing collective individual token approaches 
information computation 

corradini heckel montanari 
sos speci cations structured coalgebras bisimulation congruence 
proc 
cmcs vol 
elect 
notes th 
comput 
sci elsevier science 

corradini montanari 
algebraic semantics structured transition systems application logic programs 
th 
comput 
sci 

de simone 
higher level synchronizing devices meije sccs 
theoret 
comput 
sci 

ferrari montanari 
tile formats located mobile systems 
information computation 

gadducci montanari 
tile model 
proof language interaction essays honour robin milner mit press 
appear 

groote vaandrager 
structured operational semantics bisimulation congruence 
information computation 

larsen 
compositionality operational semantics contexts 
proc 
icalp vol 
lncs pages springer 

lawvere 
functorial semantics algebraic theories 
proc 
national academy science 

meseguer 
conditional rewriting logic uni ed model concurrency 
theoret 
comput 
sci 

meseguer montanari 
mapping tile logic rewriting logic 
proc 
wadt vol 
lect 
notes comput 
sci pages springer 

milner 
calculus communicating systems vol 
lncs springer 

milner parrow walker 
calculus mobile processes parts ii 
information computation 

montanari sassone 
dynamic congruence vs progressing bisimulation ccs 
fundamenta informaticae 

montanari talcott 
actors agents live 
proc 
vol 
elect 
notes th 
comput 
sci elsevier science 

park 
concurrency automata nite sequences 
proc 
th conference vol 
lect 
notes comput 
sci pages springer 

plotkin 
structural approach operational semantics 
technical report daimi fn aarhus university computer science department 

sewell 
rewrite rules bisimulation congruences 
proc 
concur vol 
lect 
notes comput 
sci pages springer 
