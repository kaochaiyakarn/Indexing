dealing non functional requirements experimental studies process oriented approach lawrence chung brian nixon university texas dallas university toronto quality characteristics vital success software systems 
remedy problems inherent ad hoc development framework developed deal non functional requirements quality requirements nfrs 
premise quality product depends quality process leads highlevel nfrs product framework objectives represent nfr specific requirements consider design tradeoffs relate design decisions nfrs justify decisions assist defect detection 
purpose give initial evaluation extent framework objectives met 
small portions information systems studied authors framework 
framework empirical studies evaluated viewpoint domain experts reviewed framework studies framework developers users 
systems studied variety characteristics reflecting variety real application domains studies deal important classes nfrs systems accuracy security performance 
studies provide preliminary support usefulness certain aspects framework raising open issues 
longer version available authors chung computer science program university texas dallas box richardson tx chung edu nixon dept computer science university toronto toronto ont nixon ai toronto edu 
initial versions prepared author dept computer science university toronto 
quality characteristics accuracy security performance vital success software systems credit card medical record taxation systems 
systems central everyday life concern quality 
credit card system example desirable account information maintained accurately stored securely processed quickly user friendly manner 
quite appropriately concerns non functional requirements quality requirements nfrs recognized playing crucial role requirements engineering 
deal nfrs 
past relatively little attention paid process systematically dealing nfrs 
example nfrs securely update account retrofitted late development process pursued parallel separately functional design update account 
ad hoc intuition development process difficult generate systems meet user expectations justify resulting systems detect defects faults conflicts ambiguities requirements corresponding designs early correction design implementation errors costly correction requirements phase 
remedy problems framework developed systematically deal nfrs :10.1.1.29.2587
premise quality product depends largely quality process leads high level nfrs product framework objectives represent nfr specific requirements consider design tradeoffs relate design decisions nfrs justify decisions assist defect detection section 
purpose 
purpose give initial evaluation extent framework objectives met 
small portions information systems studied authors framework 
credit card health insurance gov 
administration cabinet taxation domain commercial commercial gov professional governmental characteristics short transactions continuous improvement longer term large transaction vol 
large transaction vol 
lower transaction vol 
internal external emphasis external emphasis internal confidentiality confidentiality nfrs performance accuracy performance sorts security confidentiality user friendliness user friendliness accuracy table characteristics studies 
framework empirical studies evaluated viewpoint domain experts reviewed framework studies framework developers users 
approach 
carried empirical studies small portions information systems representing variety domains credit cards public health insurance government administration information systems table 
variation affected types nfrs stated types design rationale number nature techniques meet requirements 
studies dealt important classes nfrs accuracy faithful representation information security protection information system resources performance efficient responsive system resources 
systems meet nfrs may lead loss money trust incorrect treatment inefficient administration 
studies appendix domain descriptions existing systems dealt small portions systems carried line examining documents involvement actual participants development process 
develop systems consider quality issues systems 
tried minimal assumptions faithful source documents varied amount detail provided involved government systems consideration proposed extensions systems 
studies provide analysis quality requirements development decisions requirements 
important aspect evaluation studies experts domains 
obtain feedback positive negative circulated earlier draft questionnaire developed nfrs 
report interviews conducted date experts familiar systems kinds organisations studied 
twin starting points tool applications reviewed section studies credit card public health insurance government administration cabinet documents taxation appeals information systems appendix :10.1.1.29.2587
due space limits credit card study described fully appendix studies details longer version available authors 
evaluations discussions body studies 
extends material methodology nfr framework section conduct studies presents evaluations studies viewpoints domain experts section framework developers users section 
final sections describe related concluding remarks 
review illustration tool nfr framework takes spirit rational design process oriented approach dealing nfrs complementary traditional product oriented approach emphasis lies product evaluation usually involving metrics :10.1.1.29.2587
framework influenced decision support systems daida environment information system engineering 
software development process framework allows treating nfrs potentially conflicting synergistic goals achieve considering development alternatives meet stated nfrs examining design tradeoffs relating design decisions nfrs justifying decisions relation needs intended application domain assisting defect detection 
framework nfrs integral part entire software development process drive process act selection criteria 
prototype tool nfr assistant available offers functions corresponding interfaces assist developer process 
illustrate developer nfr assistant deal quality issues developing system including studies example section draws credit card study appendix 
authenticate account criticality account confidentiality internal confidentiality account performance space account account link method induced correlation dependency nfr goal satisficing goal argument node legend sub password account account security biometric account account sub accuracy time sub account subsort account availability claim internal fraud frequent sample goal graph structure 
illustration suffices say requirements including accounts secure accounts maintained performance 
developer represents nfr goal security account shown top goal graph structure see 
similar spirit trees notion goal satisficing assumes development decisions usually contribute partially particular goal rarely accomplishing satisfying goals clear cut sense 
consequently generated software expected satisfy nfrs acceptable limits absolutely 
framework goal graph structure record structure nfrs design alternatives decisions rationale 
uniformly treated goals denoted nodes related links 
illustration developer starts initial set security performance goals refines nfr goals 
nfr goals developer considers design alternatives called satisficing goals tradeoffs refines selections justifies recording design rationale called argumentation goals 
process impact design decision propagated top level nfr goals labels indicating degree satisfaction 
components framework aims development process ad hoc advocates simon uses term refer decision methods look satisfactory solutions optimal ones 
similarly notion assurance refers satisfying security requirements acceptable limits 
accuracy completeness confidentiality availability performance user friendliness system boundary internal external response time throughput secondary storage main memory integrity space nfr sort security cost time sort hierarchy 
formal systematic methodology 
nfrs associated rich potentially confusing set concepts sorts organised hierarchy guide developer 
development knowledge specific nfrs taken literature industrial experience captured methods reuse help developer generate new goals links 
example techniques incorporated security evaluation criteria performance responsiveness principles accuracy concepts 
non functional requirements systematically integrated development 
represented potentially conflicting synergistic goals 
top goals instance security sort account parameter typically represents information items attributes 
developer decompose goal sort parameter 
subsort method decompose goal goals accuracy faithful reflection information confidentiality guarding unauthorized disclosure availability guarding interruption service account 
developer successively generates specific goals offspring generated aim satisficing parent goal 
shows main control window taken show developing research expense management system implementation uses conceptbase knowledge base management system :10.1.1.29.2587
developer uses main control window select goal refine indicate method apply 
developers select built methods displayed hierarchy automatically generate offspring goals parent offspring links appropriate define methods correlation rules see table bottom intended formally systematically represent assist detection synergistic antagonistic interactions goals 
figures sort names abbreviated link types shown 
current nfr assistant method hierarchy methods decomposition implemented satisficing argumentation 
main control window nfr assistant 
generate new links existing goals suggest generation new goals making tradeoffs explicit 
example developer confidentiality authenticate method impact positive accuracy account correlation rule generates link goals 
rule may note fingerprint biometric authentication improves security system hindering time performance see dotted line left 
nature strengths relationships development decisions represented link types effects development decision systematically evaluated 
goal contribute positively goal designated sub link negatively sub biometric time 
conflict goals resolved favour time stating argument important 
goal graph expansion process effect design decision propagated offspring parents labelling evaluation procedure labels notes satisficed denied undetermined assess degree goal achievement 
satisficed denied alternatives form part development history goal graph structure uses components systematically concisely record development actions consequences methodology describe process nfr framework 
carrying studies 
step knowledge acquisition step acquisition knowledge specific nfrs 
obtain knowledge particular type requirement security performance 
sources knowledge included industrial experience academic literature 
encoded knowledge catalogued produce terminology quality requirements list generic techniques tradeoffs interactions 
step acquisition domain knowledge 
obtained documents organisations systems studying 
depending organisation nature documents varied 
case received system development documents requirements design implementation 
obtained partial schema information workload information information organisation operations system 
received general public information annual reports 
conducted initial review documents understand domain characteristics obtain nfr related information possible get initial idea main requirements 
due varying amounts information available provide augment information schema requirements experience violating available domain knowledge 
detailed development application framework involved iterative steps 
step application nfr framework step identification nfr related concepts 
step takes domain information sorts categories lines main components nfr framework 

identification important nfr goals 
came initial estimate important critical system 

identification development design implementation techniques 
include described document knowledge area quality requirement step 

identification design rationale arguments 
identified catalogued relevant arguments 
step linking nfr related concepts 
step link concepts identified step order show framework meet stated nfr goals development system 
conducting studies consider identified concepts hang seeing goal graph structures produced meaningful way meet needs real systems 

refining clarifying relating goals 
related development design implementation techniques nfr goals 
identified conflict synergy 
clarified meanings goals individually document suggests goal easily directly clarified known category associatively cases goals direct dependencies security confidentiality ii 
decomposition methods introduced relationship goals established 
called approach archaeology mode attempted dig documents identify fill gaps producing goal graphs contact developers 
identified factors underlying correlations 

identification critical nfr goals 
related identifying development design implementation techniques repeatedly emphasised 
involved identifying critical goals critical dominant parts workload 

providing design rationale 
located applicable design rationale source document workload description 
basis development tradeoffs goal graph structure construction provide design rationale certain particular techniques chosen 

assessing goal achievement 
applied evaluation procedure determine stated nfrs particularly important ones achieved 
part procedure involves examination nature strength relationships goals 
reader referred summaries studies appendix sections evaluate results studies viewpoints 
evaluation studies domain experts approach 
important source evaluation framework studies comes familiar domains systems studied 
conducted interviews health insurance system study dominic medical computing consultant consultant commission inquiry confidentiality medical records government cabinet documents system part study lou melli independent systems consultant part government organisation studied takes interactive approach dealing systems requirements government taxation appeals system part study bill project leader group information management systems branch revenue canada credit card system study composite information different credit card associations date initial discussion going questionnaire detail brian brett manager card services systems retail banking royal bank canada 
credit card studies contacts interviews 
responses may generalise applicability classes systems studied 
distributed draft questionnaire appropriate detailed versions studies including 
due time constraints part authors sufficient time interviewees fully review material 
major findings 
nfr framework 
interviewees said framework components helpful developers helpful broad domains studied 
cataloguing development techniques nfr specific knowledge helpful cases comparable advanced current practice domains considered medical systems catalogues available guide people 
goal graph structures components considered helpful 
interviewees initially understand details goal graphs 
cases remedied explanation framework interview 
understood goal graphs appreciated 
goal graphs need understandable easier read improvements naming presentation help 
applicability specific domains studied 
conducting studies initially aimed framework deal real quality related problems large real systems 
interviewees felt studies generally domains illustrated approach government systems goal prioritisation tradeoffs results different produced assumptions results understandable 
realised lack consultation domain people study left gaps domain knowledge 
medical interviewee evaluate coverage level presentation shallow compared level detail particular system studied old ill structured hard experts understand 
applicability broader domains 
warm appreciation potential framework broader classes systems considered 
interviewee felt techniques medical field interviewees associated university toronto 
developing procurement criteria enhancing products existing ones development 
scalability 
issue scalability framework raised 
goal graphs considered nice approach large system credit cards 
needs tested practice 
level large goal graphs may cumbersome 
training costs payoff 
open question raised interviewees time costs needed training staff framework developing goal graph structures surpassed payoffs development framework findings 
framework emphases 
appreciation framework emphases 
interviewee considered focus evaluation important felt evaluation approach needed explanation 
sort hierarchy captured kinds concepts needed detail added 
felt need clarify meet requirements framework ability refine focus critical goals understood 
study design rationale little hard understand 
formality 
ability formal considered positive 
framework useable domain systems staff currently informally 
process oriented approach 
interviewee questioned framework premise quality product depends quality process 
example quality processes lead quality products 
tradeoffs correlations 
felt deal tradeoffs early 
currently balanced treatment tradeoffs medical systems secure rigid increase flexibility security features may disabled 
hand government systems consultant record conflict synergy interviews developing prototypes discussed client 
determining main requirements 
broad quality issues accuracy performance security addressed interest organisations 
open question finds specific main top level requirements 
furthermore goals dealt small clusters results combined 
application domain findings 
domain knowledge proportionality 
government systems learned interviews give proportion important nfrs address important tradeoffs workload components 
attribute lack contact domain people studies obtained documents 
notably studies importance accuracy met presence tradeoff 
taxation appeals study treated time space important fact response time important space due relatively small number appeals 
treatment decompose workload interactive individual requests periodic batch reporting 
result address problem maintaining accuracy speed batch reports produced 
fact central concern actual system needed considered specific implementation techniques properly deal important requirements tradeoffs 
cabinet study correspond domain lacked knowledge domain priorities terminology 
treated security main goal domain accuracy nfrs 
similarly detected interaction requirements minor domain 
arguments domain quite right due lack knowledge domain terminology 
methodology findings 
lifecycle issues 
larger systems studied quite structured methodologies deal phases lifecycle including post development 
framework date emphasis early phases suitably integrated methodologies include production testing complaint handling feedback 
framework help large existing systems built scratch 
requirements acquisition 
government agencies interview approaches requirements acquisition ascertain client needs 
interviewee able relate framework decomposition approach adaptive interview approach consultants determining requirements small government system 
documentation 
interviewee nice goal graph lot documentation concisely page 
initial cost extra time understand goal graphs time advantage expected time savings due savings amount documentation 
note size documentation problem organisation 
training 
interviewees pointed processes methodologies need people practice 
variety people developers administrators reason security crucial thought clients particular primarily interested bringing system existence 
addition system store actual cabinet documents just header information topic date 
trained framework 
improvement software quality methodology needs determined 
approach start cost effective 
lessons learned 
comments domain experts valuable reality checks 
reviewing interviews feel studies benefit interactive approach involve repeated contact early study ensure appropriately captured priorities requirements allow studies closer actual problems organisations studied allow specific evaluation results studies 
evaluation framework developers studies described appendix credit cards public health insurance government administration cabinet taxation information systems differences domain characteristics reflected types nfrs stated number method applications topology goal graph structures 
experience developers users framework describe positive negative findings 
positive findings 
deal nfrs feel need consider key domain characteristics capture nfr specific concepts detect defects 
feel studies suggest need dealt certain extent met nfr framework 
framework observations 
boehm insightful experimentation developers aware quality concerns helps improve software quality 
reflected experience explicit expression initial set nfrs goals improved awareness commitment led systematic development 
furthermore conflicts synergy nfr goals explicitly described able consider design tradeoffs selecting alternatives nfr goals 
set goals prioritisation technique determine goals important need identify focus critical goals pointed quality goals general performance particular 
presence competing alternatives expressing critical goals effect design decision labelling facility helped resolve conflicts record design rationale accepted page preface explicit attention characteristics software quality lead significant savings software life cycle costs rejected alternatives 
explicitness place able explicitly concisely link design decisions back source nfrs feel improve traceability 
catalogues methods enabled succinctly capture large number nfr specific concepts security performance organised manner 
particular methods division decomposition satisficing argumentation provided needed vocabulary subject matter development process 
sorts method hierarchies acted basis thinking nfrs central studies 
performance requirements example able capture knowledge implementation techniques workload statistics layers methods 
knowledge captured methods organised hierarchies axes 
helpful government taxation study 
goal graph structures important development history record initial development longterm review maintenance system time 
example health insurance system subject lengthy review proposed long term changes system 
felt goal graph structure concisely captured review essential descriptions nfrs mainly involved finding right place goal graph structure 
focus attention portion goal graph dealing class issues performance layering approach helpful credit card study 
defect detection observations 
dealing nfrs small portions systems involved repeated clarification goals missing details detection goal synergy conflict 

goals ambiguous documents sorts leading various interpretations 
methods helped clarifying meanings particular sorts varied applications 
instance notion sort security varied credit card fraud prevention form commercial integrity confidentiality medical information confidentiality government records 
performance goals distinguish minimising response time minimising variability response time defining additional specialised sorts 

distinguishing goals types framework helped detect omissions 
omission nfr goals detected nfr related satisficing goals corresponding nfr goals 
hard detect goal synergy conflict hinders enforcement appropriate satisficing goals 
cabinet document system example operating cost goal implicitly inferred documentation information collection maintenance effort 
omission satisficing goals quality target design implementation acceptable 
credit card system direct communication devices help prevent fraud security raises need address recorded correlation rule 
omission arguments hard justify particular decisions 
health insurance system example wondering internal checks performed confidentiality 

antagonistic correlation rules helped detect conflicts 
health insurance system thorough review investigators involved discovered accuracy claims conflicted confidentiality certain methods carried third party 
correlation rule evolution similar system take effort 
credit card study time space tradeoff select implementation 
framework detect redundancies opportunities details longer version available authors 
retrospect sense framework defect detection somewhat syntactic straightforward 
due framework semi formal notation distinguishes kinds goals sorts parameters 
see ability assist defect detection important benefit framework approach formal analysis systematic software development 
negative findings 
feel room improving framework 
coverage 
coverage hit ratio methods high current studies provide new decomposition methods systematically bridge gap nfrs satisficing goals 
felt definition specialised methods require additional expertise 
design rationale 
feel comprehensibility limit level nesting argumentative structure 
agree view deeper level argumentation gets harder understand meaning arguments 
qualitative approach 
framework qualitative approach allows capture intuitions missing quantitative metric 
observed numeric values response time seconds rating relative priorities goals marginal utility additional alternative method application available framework allow systematic treatment numeric quantities 
dealing changes see 
scalability 
goal graph structures ranged size goals individual government systems credit card system 
fuller sized studies anticipate goal graphs larger 
intuition essential remain unchanged sure process leads remain unchanged 
related focus evaluating framework way studies real systems treat nfrs 
contrast finkelstein green compare goal oriented approaches including nfr framework treat set general requirements example 
uses nfr framework including organization modelling project risk management 
fuller studies include performance hospital system quantitative approach accuracy criminal record system domain analysis 
studies dealt nfrs framework advocates systematic qualitative approach 
quality function deployment house quality industrial engineering applied software quality assurance 
nfr framework media communication planning provide conceptual map customers requirements designs implementations 
nfr framework focusses semi formal representation systematic development process additional features design rationale 
studies available effectiveness improving industrial quality report experience nfr framework software systems 
interesting examine nfr framework reduces rework scrap inducing shorter production time lower cost sibling 
thorough evaluations reported quantitative product oriented approaches emphasis defect defection reduction 
instance gives elegant evaluation cleanroom approach emphasis carrying different inspection tasks independent teams 
similarly gives realistic evaluation fold inspection technique emphasis replicating requirements inspection task independent teams 
technique noted inspecting written general requirements primarily detecting defects 
evaluations studies focus nfrs evaluate qualitative process oriented generative framework takes semi formal systematic approach representing nfrs software development 
related observations defect detection large empirical study requirements traceability involves developing life requirement origin phases development 
conducted empirical studies small portions software systems order give initial evaluation framework dealing non functional requirements nfrs software development process 
studies dealt nfrs primarily accuracy security performance 
perspective domain experts consulted date nfr framework helpful developers 
cataloguing development techniques nfr specific helpful cases advanced current practice domains considered 
studies domains illustrated approach 
detailed studies necessarily reached organisations studied mainly due source documents ongoing contact domain experts study 
significant appreciation prospects applying framework broader fields studied particularly medical computing 
contacts interviews domain experts 
perspectives framework developers users feel nfr framework helped represent large number nfr specific concepts central studies organised manner 
representations provided needed subject matter vocabulary acted basis thinking variety nfrs 
representations able consider design alternatives tradeoffs respect conflicts synergy nfrs determine effect design decision justify decision needed design rationale accepted rejected alternatives 
ability able explicitly concisely link design decisions back source nfrs 
representations distinguishes kinds goals sorts parameters identifies corresponding methods correlation rules able detect defects 
process feel goal graph structure important means developing quality software development history 
domain experts identified directions 
feel studies regarded initial evaluation 
learned importance capturing domain expertise feedback preferably early study process order study correspond closely needs organisation studied 
scalability framework respect larger studies open issue 
furthermore clear significantly larger studies handled nfr assistant tool currently implemented due slowness studies 
need find cost effective way train variety users developers administrators framework 
resolve issues larger diversified applications needed actual system development opposed line study 
study methodology 
conducted studies test hypothesis nfr framework usefully applicable variety domains concerning analysis quality requirements development decisions requirements 
extent studies said confirm deny usefulness framework 
area management information systems case studies address phenomena directly observable human factors organisational power ergonomics 
studies unable meet classical requirements scientific method natural sciences meet requirements rigorous research 
rigour achieved testing things theory falsifiable allows replicability 
methodology framework conduct studies variety systems information systems summarising experiences obtaining feedback framework studies domain experts 
studies documents varied nature granularity making harder comparisons 
addition great deal organisation culture may stated documents vital understand context system developed 
directly dealt issue interview approach may help 
evaluation experience designing framework 
evaluation domain experts interviews providing opportunity real personal feedback 
studies regularities discrepancies applications different domains example usefulness methods obtained feedback certain aspects nfr framework help improve current practices 
able look variety systems obtain expert feedback needed rigorous evaluation framework 
involve real studies spectrum developers variety different types systems addressing additional factors interplay nfr framework social setting user acceptance resistance seamless integration existing development tools 
notwithstanding open issues framework feel evaluation studies shown preliminary evidence contribution development quality systems 

sincere gratitude professor john mylopoulos moral support ongoing discussions encouragement pursue avenue research 
eric yu excellent suggestions graciously reading drafts benefitted organisational 
lou melli dominic bill review draft insightful comments clarifications brian brett david sharing enthusiasm domain expertise enjoyable series discussions 
gratitude honey robb national daly association information referrals lead fruitful discussions domains 
nfr assistant implemented authors ian advice david thomas rose 
national revenue providing information income tax appeals process 
families support sacrifices 
summary studies credit card system domain characteristics 
consider information system bank credit card operation maintains information sales merchants 
transactions authorised accounts updated 
actual statistics visa mastercard credit cards banks canada year ended october estimate workload hypothetical large bank assuming national market 
cards circulation merchants day deal sales slips lost stolen cards cards 
treatment nfrs 
examined organizations documents show differences domain characteristics types nfrs 
commercial credit card system quality important market highly competitive 
timeliness security response time considered important quality factors 
important synergy case reducing time transaction posting account pointed document benefits time reduction enormous able post rapidly cardholder account improve risk control lowering exposure transaction pipeline reduce float costs merchants merchant members 
informal concerns security ambiguous due nature document inviting possible interpretations 
example nfr satisficing goal needs clarification expressed terms sort name clear explanation 
recognizing importance accuracy confidentiality aspects security decomposed security goal sec account sort goals confidentiality availability integrity 
integrity goal decomposed accuracy completeness goals 
refinements led goal transaction faithful representation information lifetime transaction 
prioritisation technique goal treated critical 
supported market surveys show timely accuracy strategic importance recorded argument adapted prioritisation technique vital trivial principle rule focusses attention items vital 
methods applied reflect security breach take place internally staff accessing system externally terms forgery requests trade benefits installing device increased costs 
system correlation rules detect potential conflict 
selected input device arguing synergistic benefits outweighed antagonistic penalties 
time transmit transaction information system installing direct communication devices synergistically improving timeliness security major selling point 
method bring negative side effects security breaches due wire tapping 
framework assist detecting reporting omissions 
result design process input devices installed transaction point improve security cardholder accounts 
performance important nfr due high transaction volume need cancel stolen cards immediately 
time performance means seeking fast response space performance means low usage 
repeatedly followed pattern goal components identifying focussing critical component goals keeping principles achieving responsiveness 
decomposed goal response time cancelling lost stolen cards goals operational components 
focussed accessing attributes credit card status attribute updating critical cancelling card 
satisficed updating status start operation effectively cancels card non critical tasks may continue background 
space performance goals interacted negatively treatment time goals 
example sought space performance storing attributes card 
cards compressed format save space compressing status attribute cause conflict slowing critical operation retrieving card status 
satisficed space goal dominant case compressing attributes 
avoided negative impact notion accuracy similar external consistency comparable notion authenticity notion validity complementary completeness database integrity 
critical time goal uncompressed format status meet non dominant storage goal 
considering performance implementations designs layering approach showed introduce domain knowledge associated design components 
helped control number potentially interacting implementation concepts consider time 
example goal graph higher layer deal integrity constraints lower deal attributes 
approach inspired layered framework performance prediction relational databases 
health insurance system health insurance system involves governmental professional commercial organizations 
confidentiality important concern due sensitive nature medical treatment information accuracy rejected claims important 
information patients treatments practitioners claims taken claims cards 
reports breaches confidentiality brought major investigation reported breaches confidentiality occur externally system involving service handle patients personal information 
refining goal confidentiality treatment information able focus aspect external confidentiality investigators emphasised 
government health offices investigators identified small number critical large number 
accordingly narrowed focus study considering individual offices branch branch basis method identifying critical branches prioritisation technique adapted vital trivial principle focusses attention items vital 
reduction search space accordance investigators report provided evidence usefulness vital trivial argumentation method 
important discovery investigators service enforce certain methods verification consistency checking synergistically improving accuracy boosting employee morale decreasing operating costs claims processing 
synergy expressed precisely introducing appropriate sorts parameters goals 
methods conflict confidentiality goal treatment information handled district branches service bureau acting behalf practitioner 
able concisely represent third party issue goal graph structure 
government systems considered projected extensions government information systems provide support decision making long period time recording tracking information decisions cabinet document system government ministry manage flow documents decision making process cabinet income tax appeals system manages handling taxpayers appeals decisions tax returns :10.1.1.29.2587
highly interactive processes subject constraints months years 
projected cabinet document system manages documents submitted cabinet consideration schedules history approval process 
process requires concurrence committees 
initial system partially automated spread sheets considered projected extension 
system relatively low transaction volume approximately documents year deals solely flow information government 
reflected types decompositions satisficing methods 
focussed decomposing confidentiality goals parameters satisficing methods suitable defined goals 
consistent source document decomposed user friendliness goal goals sorts simplicity helpfulness 
cabinet submissions attributes particular attribute may shown staff members 
furthermore attribute may derived explicitly input 
handled situation decomposition method 
choosing representation implicit explicit correlations reflecting tradeoffs confidentiality accuracy user friendliness goals 
reducing exposure particular attribute security purposes implicitly conflict allowing user friendly input menus method accuracy explicitly operating costs exceed budget limit requires additional operations information items 
goals arguments try determine accuracy nfr goals implicit documents requirements design level procedures satisficing methods 
example clarify purpose carefully selected methods introduced accuracy goals stated methods effective evaluated goals labelling procedure satisficed 
confidentiality goals appears mechanism suffices 
income tax appeals system manages handling appeals taxpayers disagree decisions canadian department national revenue 
appeals process taxation officer contact taxpayer may consult staff members 
system specification existing appeals database available access statistics operational procedure manuals partially describe appeals system 
actual taxation workload statistics study year appeals completed decisions days advance service standard deadline 
currently workload control supervision progress appeals cases automated 
partially automated tracking follow service helpful added design specifications details study private communications lou melli 
reported development team explored alternatives 
purposes cabinet documents study treated confidentiality main requirement subsequently learned domain expert section accuracy considered paramount 
letter acting director policy programs division department national revenue taxation november 
performance requirements reasonably expected system including issuing reminders staff consult taxpayers deadlines 
started goal time performance issuing reminders appeals staff contact taxpayers 
knowledge implementation techniques semantic data models particularly temporal integrity constraints see represented conjunction knowledge actual application workload statistics 
arguments actual statistics workload patterns cases resolved faster service standard requires rule implementation techniques 
result implementation structure selected consisting list actions ordered time executed list allowed early removal entry facilitates handling cases completed deadline 
developing trusted systems dod std th annual computer security applications conf tucson arizona dec pp 

boehm brown 
merritt characteristics software quality 
amsterdam north holland 
boehm industrial software metrics list ieee software sept 
information systems final evaluation 
tech 
rep project deliverable sintef univ trondheim norway feb 
briand melo basili characterizing assessing large scale software maintenance organization proc th int 
conf 
software eng seattle washington april 
canadian bankers association mastercard visa statistics toronto ont dec 
chung rios nixon mylopoulos process management assertion enforcement semantic data model 
schmidt ceri eds advances database technology edbt int 
conf 
extending database technology venice italy mar proc pp 

chung representation utilization nonfunctional requirements information system design 
anderson bubenko jr eds advanced information proc rd int 
conf 
caise trondheim norway may 
berlin springer verlag pp 

chung mylopoulos vassiliou information system requirements designs mapping framework 
information systems pp 

chung representing non functional requirements process oriented approach :10.1.1.29.2587
ph thesis dept comp 
sci univ toronto june 
tech 
rep tr 
chung dealing security requirements development information systems 
rolland eds advanced information systems engineering proc th int 
conf 
caise paris france june pp 

chung nixon yu quality requirements drive software development 
workshop research issues intersection software engineering artificial intelligence sorrento italy may 
chung nixon yu quality requirements systematically develop quality software 
proc th int 
conf 
software quality mclean va oct 
chung nixon yu non functional requirements systematically support change 
proc 
ieee int symp 
requirements eng york england march 
chung nixon yu non functional requirements systematically select alternatives architectural design 
proc icse workshop architectures software systems seattle washington april 
clark wilson comparison commercial military computer security policies proc 
ieee symp 
security privacy pp 

dardenne van lamsweerde fickas goaldirected requirements acquisition science computer programming special issue th int 
workshop software specification design como italy 
feather requirements juncture domain instance 
proc ieee int 
symp 
requirements eng san diego ca january pp 

fickas automating software specification process tech 
rep comp 
sci 
dept univ oregon dec 
finkelstein green goal oriented requirements engineering 
tech 
rep tr imperial college london univ forthcoming 
finkelstein analysis requirements traceability problem 
proc int 
conf 
requirements eng colorado springs 
hahn jarke rose teamwork support knowledge information systems environment ieee trans 
software eng may pp 
hauser house quality harvard business review may june pp 

specifying software requirements complex systems new techniques application ieee trans 
software eng vol 
se jan pp 
reprinted thayer dorfman eds tutorial system software requirements engineering ieee computer society press 
hull king semantic database modeling survey applications research issues 
computing surveys sept pp 

performance prediction relational database management systems 
ph thesis dept comp 
sci univ toronto 
office official publications european communities information technology security evaluation criteria provisional criteria ver 
june luxembourg 
jarke mylopoulos schmidt vassiliou daida environment evolving information systems acm trans 
info 
sys jan pp 

jarke ed conceptbase user manual 
univ passau 
jarke bubenko rolland sutcliffe vassiliou theories underlying requirements engineering overview nature genesis int 
symp 
requirements eng san diego ca jan 
frank jr bingham jr 
eds quality control handbook rd ed new york mcgrawhill book 
quality function deployment japan 
quality progress oct pp 

laudon data quality due process large interorganizational record systems cacm jan pp 

lee boulton thomson composable trusted systems tech 
report csri computer systems research institute univ toronto may 
lee scientific methodology mis case studies mis quarterly march pp 

lee extending potts recording design rationale proc th int 
conf 
software eng austin texas may pp 

linger cleanroom software engineering software proc th int 
conf 
software eng baltimore md may pp 

martin security accuracy privacy computer systems 
englewood cliffs new jersey prentice hall 
mastercard international annual report 

mccabe pareto principle applied software quality assurance eds 
handbook software quality assurance new york van nostrand reinhold pp 

motro integrity validity completeness acm trans 
database sys vol 
pp 

mylopoulos chung nixon representing non functional requirements process oriented approach 
ieee trans 
software eng june pp 

mylopoulos chung eric yu nixon requirements engineering selected papers 
tech 
rep tr dept comp 
sci univ toronto july 
nilsson problem solving methods artificial intelligence 
new york mcgraw hill 
nixon mylopoulos integration issues implementing semantic data models 
buneman eds advances database programming languages 
new york acm press reading ma addison wesley pp 

nixon implementation information system design specifications performance perspective 
kanellakis schmidt eds database programming languages bulk types persistent data rd int 
workshop 
aug greece 
san mateo ca morgan kaufmann pp 

nixon dealing performance requirements development information systems 
proc ieee int 
symp 
requirements eng san diego ca january pp 

nixon representing performance requirements development information systems 
jarke bubenko jeffery eds advances edbt th int 
conf 
extending database technology cambridge united kingdom march proc pp 

ontario health insurance plan computer system chapter volume ii 
report commission inquiry confidentiality health information vol 
ii iii 
toronto thatcher queen printer ontario sept 
parker restating foundation information security nd annual north american information system security symp oct toronto 
representation project risk management knowledge 
sc 
thesis institute informatics technical univ estonia 
potts bruns recording reasons design decisions proc th int 
conf 
software eng pp 

revenue canada taxation objections appeals information circular 
ottawa june 
revenue canada taxation taxation operations manual vol 
objections appeals 
ottawa 
dept national revenue taxation appeals branch quarterly statistical report period ended march 
ottawa 
reports quarterly periods ended june september jan 
dept national revenue taxation appeals branch number days objection january march 
ottawa 
reports periods oct dec apr june june sept 
schneider martin tsai experimental study fault detection user requirements documents acm trans 
software eng 
apr pp 

simon sciences artificial nd ed 
cambridge ma mit press 
smith performance engineering software systems 
reading ma addison wesley 
sullivan quality function deployment 
quality progress june pp 

visa canada association visa canada regional report 
toronto 
visa international annual report canada region conklin observations commercial issue information system proc computer pp 

yu mylopoulos understanding software process modelling analysis design 
proc th int 
conf 
software eng sorrento italy may pp 

yu framework process modelling reengineering 
ph thesis dept comp 
science univ toronto 
quality function deployment software structured requirements exploration eds 
total quality management software new york van nostrand reinhold pp 

