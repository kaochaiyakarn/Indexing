query engines web accessible xml data leonidas fegaras elmasri department computer science engineering university texas arlington yates street box arlington tx email cse uta edu xml rst introduced schema self describing data representation language proposals xml schema descriptions 
addition schema information opens new opportunities established database management technology storing handling xml data databases traditionally focused data conform xed prede ned schema 
schema information allows better data integrity ective data storage ecient query evaluation 
describes ective framework storing xml data object oriented database optimization framework translating xml queries ecient algorithms 
xml data scattered web text les unknown locations address problem querying entire internet answer query presenting indexing technique structure content information xml documents algorithms locating relevant documents match query high degree precision 
rst presenting new type system describing xml data integrated odl type system odmg standard captures schema semi structured schema xml data 
introduce small set syntactic extensions odmg oql powerful oql full edged xml query language 
presenting framework translating xml queries oql queries xml schema information 
translation schemes purely compositional 
inventing semi structured algebra expressing translations target transformation rules oql code precise semantics focus various optimization techniques 
schema information indispensable component transformations 
disambiguating terms multiple interpretations wildcard tag projections choosing storage format xml data generating oql code guided choice storage 
second problem addressed precise indexing web accessible xml data 
presenting inverse indexing technique indexes text words element tags xml document account element structure document 
xml oql query system capable constructing oql query inverse index structures retrieves locations web accessible xml documents satisfy containment constraints xml oql query 
query construction compositional xml oql syntactic construct translated independently translations combined steps 
motivation xml emerged leading textual language representing exchanging data web 
xml developed active involvement mainstream database community database researchers actively participated development standards centered xml query languages xml addressed storage performance issues xml data repositories 
wide range opinions relationship xml databases 
researchers believe xml dominate database area eventually replace relational databases dismiss tree structured representation di erent lisp expressions hierarchical data models 
regardless side takes news xml standardization arena may open new opportunities database research area 
xml introduced schema self describing language proposals xml schema languages dtd document type declaration xml schema 
development schema descriptions driven eciency concerns se need enforcing data integrity 
hand databases traditionally focused data conform xed prede ned schema 
remained focus emerging database languages object relational object oriented database oodb languages 
reason tendency databases static typing addition safety data integrity schema information allows ective data storage access paths ecient query evaluation 
historically computer languages ranging general purpose domain speci evolved strict type disciplines starting untyped languages lisp followed languages rigid type systems pascal currently functional languages polymorphic type inference engines haskell sml 
strong typing reduces expressiveness language demands extensive type annotations enforces programming discipline crucial software engineering allows detection programming errors aws compile time promotes program optimizations 
strong typing necessarily imply exibility capturing data diversity web today 
modern computer languages address data heterogeneity supporting union data types parametric polymorphism 
long time advocates strong typing programming languages nd encouraging xml community starting appreciate importance strong typing disciplines proposed data models languages 
majority xml data currently available web come prede ned schema hope change near changed programming languages past 
research centered xml handle schema schema xml data framework 
type information valuable users writing valid xml queries ect way xml queries expressed 
type information may xml systems validating queries compile time resolving ambiguities choosing ective storage indexing techniques ecient retrieval algorithms xml data 
research semi structured databases started time independently development xml :10.1.1.32.3916
focus research query languages algebras schema tree database web page structures 
long xml introduced researchers area realized semi structured model adapted handle xml data 
increasing research activity direction 
implicit assumption semi structured database research traditional database models rigidly structured capture heterogeneity irregularities intrinsic web xml data radical new data model algebra needed go traditional models :10.1.1.32.3916
fact algebras semi structured data including algebra structural recursion yatl sal algebra :10.1.1.32.3916
hand research ort devoted query algebras complex data types successfully formal basis various optimization techniques object oriented object relational databases path indexing query :10.1.1.32.3916
algebras handle tree data structures implicit schema xml data 
xml schema provided xml data easily mapped complex data xml queries translated algebraic forms complex data algebras 
commercial products take advantage established database management technology storing handling xml data 
fact nearly relational database vendors provide functionality storing handling xml data systems oracle xml developer kit 
see similar products showing oodb vendors poet content management suite object design system 
systems support automatic insertion canonically structured xml data tables utilizing xml schemas generating application speci database schemas 
provide methods exporting database data xml form querying transforming forms xml query languages 
consequently systems classi ed semi structured xml schema information better performance 
systems classi ed schema niagara project 
basic assumption systems schema description valuable information optimizing storage queries xml data 
xml schema descriptions may contain nested elements levels closely resemble nested collections elements relational tables 
schema approaches relational database technology niagara project moderate success far due normalization nested xml structures tables may require joins reconstructing original xml data 
tree structured data naturally mapped nested objects relations navigations xml paths easily expressible term oodb path expressions terms joins 
addition query language odmg standard object oriented databases oql provides functionality performing complex operations xml data string pattern matching sorting grouping aggregation universal quanti cation random access xml subelements essential realistic xml query language 
oql full edged xml query language minimal ort 
relational languages hand allow query nesting arbitrary points query group values query results manipulation construction xml data dicult 
consequently believe oodb technology better potential relational technology basis storing handling xml data 
oodbs xml data christophides lore project open problems related query processing optimization :10.1.1.22.605:10.1.1.22.605
important criticism xed schema approach practice source xml data part database 
xml data scattered web text les unknown locations 
requiring xml data stored databases course unrealistic 
users familiar web search engines write queries select title download bib book author lastname smith query entire web xml les contain book nd books written smith 
really care dtds schemas 
willing put wildcards query necessary narrow expand search space query get relevant answers 
xml query ective means adding structure content requirements web search hopefully result selective precise search 
challenge retrieve documents web contain paths appearing query high probability successfully satisfying query condition 
current document indexing techniques inverted les content 
techniques may ective indexing xml data structure essential component xml data 
speci cally evaluating query retrieving relevant xml les web 
precise relevant xml le match paths query match paths bib book title bib book author lastname contain requested partial content information contain book authored smith 
addition relevance query contains approximate matching query results prioritized done current web search engines 
web search engines relevant documents downloaded queried just returned links documents raises interesting issues 
links may invalid query evaluation proceed parallel multiple links 
furthermore caching policy xml data database may improve system performance considerably 
approach inspired niagara project believe opportunities established database management technology storing handling xml data 
claim schema description valuable information optimizing storage queries xml data 
example xml data stored trees tree node allowed undetermined number children xml elements may contain multiple subelements 
naturally leads nested list implementation xml data requires multiple deeply nested list scans retrieve information deep inside tree structure 
may lead bad performance avoided knew exactly children tree node records lists 
information asserted schema 
presenting new xml query language called xml oql basically small set syntactic extensions oql 
query language resembles current related proposals quilt uniformly integrated oql precise semantics 
believe framework easily applied xml query languages 
presenting framework handle schema semi structured xml data uniformly 
rst describe schema mapping xml data oodb objects xed odmg odl schema spirit core interface proposed xml document object model dom 
presenting method translating xml queries odmg oql queries xed schema 
identify problems caused lack schema information schema driven translation address problems 
schema guided translations focus potential great performance improvement 
give extensions type system odl incorporate xml types type system type check xml queries 
provide number compositional algorithms mapping xml types odl schemas translating xml queries oql queries 
type system allows mixture typed untyped xml data parts xml data may xed schema may schema 
starting point christophides storing handling sgml data oql go supporting type system integrated odmg odl supports semi structured schema xml data 
furthermore query language supports xml data construction form xml tags feature xml query languages 
related provide precise compositional semantics query language 
knowledge rst attempt give operational semantics non trivial xml query language form compositional transformation rules 
inventing algebra calculus expressing semantic transformations target transformations oql precise semantics form object algebras calculi focus various optimization techniques path indexing path materialization query 
optimizations speed xml queries 
schema information indispensable component transformations 
disambiguate terms multiple interpretations wildcard tag projections choosing storage format xml data generating oql code guided choice storage 
way xml data stored compact form manipulated ectively default schema mapping 
produced oql code fast written hand 
example pointer dereferencing idref attribute may link di erent xml documents simply mapped object 
system ers high degree data independence storage access details decided system hidden user 
second problem addressed precise indexing web accessible xml data 
inverse indexing technique indexes content words element tags xml documents account element structure documents 
inspired context xml search engine niagara project framework indexing xml data precise easier implement ecient niagara 
niagara framework uses inverted lists index content words index xml tags web accessible xml documents 
niagara addition word location tag ranges word tag nesting level stored may result accurate indexing 
nesting level successfully containment query processing engines 
main contribution method related way search indexes retrieve relevant documents 
related approaches retrieve inverted list tag name word appears path expression perform kind intersection lists takes account containment restrictions path derived tag order path 
order intersections important poor choices may lead performance degradation 
instance may xml documents top level tag 
starting search tag may result creation large intermediate inverted lists 
niagara uses special indexing algebra seen ective optimization rules algebra 
approach novel simple oodb query optimizer decide best way indexes statistical information 
set rules transform xml oql query oql query indexes 
result index query list relevant documents satisfy original xml oql query terms structure content 
way method non standard interpretation xml oql queries reminiscent querying system catalog query translation 
requires minimal extensions current oodb optimizers 
translation schemes xml oql plain oql compositional translation xml oql expression depend context embedded subexpression translated independently translations composed form nal oql query 
property soundness translations easy prove 
compositional translations easy express verify produced translations may contain levels nested queries overwhelmingly slow interpreted essential success framework oodb system support translations ectively 
built fully functional high performance oodb management system called lambda db part previous 
system sophisticated query optimizer nested queries materializes path expressions pointer joins uses cost polynomial time heuristic join ordering uses rule cost driven optimizer generate physical plans 
furthermore query evaluation engine stream supports evaluation algorithms including external sorting block nested loop indexed nested loop pointer join sort merge join group 
lambda db choice implementing framework commercial systems lambda db performs complete query unnesting essential performance requirements framework 
organized follows section describes small number syntactic extensions oql full edged xml query language 
section describes rst attempt storing handling xml data odmg database 
attempt schema information xml data stored tree form tree node xml element list children nodes subelements 
see approach problematic reasons notably inecient 
main contribution section describes schema driven mapping data queries 
section discusses various practical problems need addressed framework real web application 
section reports prototype implementation framework section compares approach related 
xml object query language xml query language extension standard oql 
captures important features xml query languages 
unsurprisingly dicult extend oql syntax special constructs handle xml data data tree structure naturally mapped linked objects 
fact proposals extensions lorel weboql oql :10.1.1.22.605
proposed languages developed called xml oql syntax better suited query translation proposals 
proposals xml oql designed clear semantics form de ned compositional translation standard oql turn clear formal semantics form complex object algebras calculi 
supports decidable type checking system integrated type checking system oql 
clear semantics foundation query optimization frameworks 
correctness program transformations established clear formed semantics eciency demonstrated designed performance measurements 
syntax xml oql illustrate basic features language simple query xml data conforming partial dtd vendor book required author required idrefs lastname pcdata 
rest elements pcdata 
conforming schema query retrieves information books written authors published containing word computer title titles related documents example query select list author lastname title select list related bs document bibliography bib vendor book bs year count author title computer xml elements constructed syntax xml oql am um 
expression constructs xml element name tag attributes am subelements content 
attribute bound result expression xml data accessed directly database name document document bibliography downloaded web url address download www acm org xml index xml 
tree structure xml data traversed path expressions form projection tag name projection tag labeled element depth wildcard projection attribute subelement ordinal number indexing nv subelements satisfy predicate ltering xml oql expressions tag attribute name variable 
form xml query languages including xpath 
form unambiguous version xpath element ltering subelement binds variable subelement evaluates predicate result subelements satisfy scope variable expression 
explicit variable semantics ltering ambiguous arbitrary nesting expressions allowed 
example book title related year title ambiguous book nx title related ny year title 
note syntax allows idref dereferencing done title inner select statement example query variable idref book element 
note oql powerful functional query language allows complex expressions composed simpler ones 
oql philosophy xml oql syntactic extensions oql allowed appear place oql expression expected including complex aggregations universal quanti cations sorting group bys 
addition odl data converted xml data vice verse may mixed query 
querying schema semi structured xml data rst attempt store xml data xed odl schema account type information xml data 
framework translating xml oql queries standard oql queries xed schema 
section translation guided schema information result ecient queries 
shows possible odl schema storing schema xml data 
element projection expression type listh xml element translated oql expression tag projection type listh xml element de ned follows oql de ne tag projection listh xml element tag name string listh xml element select list case element pcdata list tag element tag name tag name element tag content list enum attribute kind cdata idref id idrefs enum element kind tag pcdata union attribute type switch attribute kind case cdata string value case idref string id ref case idrefs listh string id refs case id string id struct attribute binding string name attribute type value struct node type string name listh attribute binding attributes listh xml element content union element type switch element kind case tag node type tag case pcdata string data class xml element extent elements attribute element type element odl schema schema storage xml data select list syntax extension standard oql allows construction list collections select query select distinct allows construction sets bags 
case expression extension oql allows decomposition union values 
query scans list subelements elements nd tag name tag name 
may elements tag name elements returns list elements 
projections form translated projection similar tag projection true condition expression 
wildcard projections require transitive closure supported directly oql simulated recursive function 
speci cally translated wildcard projection de ned follows de ne wildcard projection listh xml element listh xml element select list case element pcdata list tag wildcard projection element tag content list concatenation 
attribute projection translated attribute projection signature attribute projection listh xml element attr name string listh attribute type easily de ned oql query 
dereferencing idref attribute expensive schema xml data requires scanning class extent elements nd xml element id equal idref value 
signature deref idrefs listh attribute type listh xml element presents translation rules xml oql path expressions 
notation means translated assertion means expression type projection wildcard projection attribute projection listh xml element tag projection listh attribute type fa deref listh xml element integer list nv select list default translation xml oql path expressions fraction conditional assertion 
rule requires type listh xml element distinguish regular oql projection xml projection 
rule enforces idref dereferencing result attribute projection indicated type 
rule converts path indexing list indexing di erentiate bold faced square brackets indicate list indexing regular square brackets indicate path indexing 
rule translates path ltering select list query 
element construction form am um allows expressions type string expressions types xml element listh xml element string listh string translated oql expression xml element element element type tag struct name tag attributes list content 
attribute type cdata translation depends type type string list xml element element element type pc data type listh string select list xml element element element type pc data schema guided translation translation scheme xml oql queries schema xml data problematic reasons projections expensive require nested list scans 
knew schema records store content elements lists 
case xml oql projections translated ecient record projections 
addition programmers learn complete details xml structure tend write queries wildcard projections 
transitive closures implement wildcard projections programmers tend avoid due high cost de es language 
second pointer dereferencing idrefs expensive framework 
constant time done oodbs 
predicate year example query type correct year translated oql expression type listh xml element list may empty subelements tag name year may contain multiple elements tag name 
leads ambiguity 
addition clear result comparing string integer correct predicate exists year data element year data 
fact translation scheme predicates refer xml data undergo similar treatment 
quite tedious error prone 
lore project addresses problem implicitly coercing datatypes concatenating text content set valued attributes may programmer intended :10.1.1.22.605:10.1.1.22.605
xml query languages quilt allow syntax provide semantics 
address problems section making type information disambiguate projections translate xml oql queries ecient programs 
xml odl type system section extend syntax odl handle xml data 
goal integrate xml schema information odl types single type system called xml odl translate xml oql queries 
xml types de ned xml odl special type declaration form typedef xml type name syntax described 
de nes new xml type name type name 
declaration type name appear point odl type expected 
furthermore anonymous xml types form xml appear point odl type expected referenced xml types idrefs 
xml types regular expressions uenced xduce 
rst glance di erent proposed xml document description standards dtd xml schema capture important features proposals 
concatenation represents type xml element pairs 
alternation union type represents choice types 
optionality operator de ned terms alternation treated separately 
combination labeled type type attributes de nes type xml element attributes 
decided separate attributes labeled types semantics easier express 
concatenation alternation left associative concatenation identity similarly repetition optionality identity 
normalization rules simplify types 
type attribute path single idref path contains multiple idrefs 
path precisely specify location id attribute idref refers 
points di erent xml type path starts xml type name 
type name missing assumed name current xml type 
goals integrate schema schema xml data arbitrary xml element identity labeled tagged type fv type attributes concatenation alternation repetition 
optionality primitive type integer string image id primitive type path path path xml type name path syntax xml types xml types names attribute types framework attribute type allowed point schema elements equal 
example dtd section captured xml odl type typedef xml bib vendor id id name string email string book isbn id related bib vendor book isbn title string publisher string year integer price integer author string lastname string author string lastname string bibliography de nes new xml type called bibliography 
attribute related list idrefs books 
notice author elements appear twice book rst author element rst book author second author element list coauthors 
standard way expressing type terms type serve example describe method disambiguate tag projections 
class bibliography objects examples class biblio extent bibliographies attribute bibliography entry note real world applications xml schemas prede ned 
xml data downloaded schemas dtd form web sites queries executed data address problem carefully section 
assumed xml schemas prede ned 
xml oql query section type type system listh xml bib author string string title string related title string returns list xml objects 
listh xml element struct fv vn id new class class extent key attribute info attribute attribute vn bind path path fv vn fv vn struct info vn struct fst snd struct union kind tag left right listh primitive type primitive type primitive type primitive type path path path listh path string mapping xml odl odl mapping xml odl odl rules mapping xml types odl 
speci cally xml mapped type name type name name current xml type 
semantic brackets denotational semantics separate syntactic structures semantic operations 
extra parameter path expression similar idref path attribute types 
rules map types attributes 
type attribute type id new class declared type mapped class name rule mapped simple odl struct rule 
environment lists global variables contain information generated classes 
environment binds path expression id attribute class name environment binds path xml type 
environment translating idrefs class rules 
avoid ambiguity classes allowed assigned path 
alternation implemented struct rule odl support polymorphic union types union values constructed union tag type enum choosing left right components struct 
optionality simply mapped type allows null values applies odl type 
example odl type xml odl schema bibliography listh struct struct fst snd struct struct struct fst fst snd snd tag inl struct tag inl left left right null struct tag inr left null right right struct struct select list null null handled section rules nv select list struct translation xml oql path expression oql fa class captures attributes content vendor class vendor type id attribute class extent key id attribute string fst string snd fst vendor name email listh snd info books vendor attribute string id class captures bib attributes content class key isbn attribute string fst string snd fst title publisher integer snd fst year integer snd fst price string fst string snd snd fst rst author listh string fst string snd snd info coauthors attribute string isbn attribute listh related translating xml oql oql oql translation xml oql projection fa 
oql expression implementation type example xml oql translation biblio entry bib translated oql expression biblio entry similarly biblio entry bib list biblio entry biblio entry bib vendor book translated select list select list info snd select list biblio entry basic query unnesting equivalent select list select list info snd biblio entry line bs biblio entry bib vendor book bs example query translated bs select list select list info snd biblio entry bs basic query unnesting equivalent biblio entry info snd 
translation author lastname query interesting tag name author appears twice book rule applies subelements book author subelements 
name rst author retrieved info fst snd snd names coauthors retrieved select list snd info snd 
consequently author lastname translated struct fst info fst snd snd snd select list snd info snd xml oql allows xml element constructions form am um type expression allowed types xml fst snd listh listh xml element primitive type unambiguously converted xml type addition primitive type class list class class name cases member environment 
unambiguously generates type type element construction xml fa am 
translation xml oql construction oql follows type translation straightforward 
attributes translated struct fst struct fst snd snd construction attributes form am um rst translated construction attributes struct info am um translation rules xml oql projections constructions example query translated oql query select list struct fst struct fst struct fst info fst snd snd snd select list snd info snd snd info fst fst fst fst fst snd select list info fst fst fst fst fst related biblio bibliographies biblio entry info snd info fst fst fst snd count info fst snd info fst fst fst fst fst computer really matter translations contain long chains projections record projections converted address sets compile time 
note implicit pointer dereferencing path info fst fst fst fst fst class 
pointer dereferencing evaluated fast current oodbs 
type checking xml path expressions type checking xml oql queries done queries translated oql code standard oql type checking engine 
type checking xml path expressions code generation provide actual xml type expression may useful information query optimization 
type checking accomplished help typing rules kind path expression 
developed full type checking framework xml oql give sample rules 
xml type xml projection xml type example type biblio entry example query bibliography equal xml type bib vendor id id name string email string book bt bt isbn id related bib vendor book isbn title string 
includes attributes content book 
type biblio entry bib vendor id id name string email string book bt turn implies type biblio entry bib vendor id id name string email string book bt type path expression biblio entry bib vendor book bt third rule reduced bt identity types eliminated concatenations repetitions 
type checker infer range variable bs type bt implies range variable type bt 
indexing web accessible xml data implicit assumption translations xml schema xed prede ned 
realistic assumption 
xml data scattered web unknown locations 
consider query discussed section select list title download bib book author lastname smith rst glance query may dicult evaluate schema framework 
address problems intrinsic type query carefully 
suppose able retrieve relevant xml les web 
xml les may schema information may incompatible schemas may cause type checking error query 
queries traditional database system rst type checked xed schema optimized 
dicult type checker able download type information type checking 
example typechecker encounters xml oql expression download www acm org xml index xml parse rst lines index xml le retrieve location dtd description exists 
download dtd le convert xml type fact result type checking download expression 
xml le imported database type checker send request catalog manager create new schema storage manager create new transient class extents store imported objects 
problem needs addressed multiplicity heterogeneity downloaded schemas schemas expression download query 
suppose type checker nds web search engine relevant documents url locations schemas xml xml respectively 
recall document schema assigned type xml 
unfortunately possible assign type xml document proceed just query path expression query mapped concatenation types type document 
example path author lastname assigned type xml string string string document 
better alternative evaluate query times document concatenate results pairs 
ith query evaluated document place document 
document causes type error query document simply ignored 
situation complicated presence multiple download calls query xml documents joined idrefs 
case permutations downloaded les considered 
challenging problem needs addressed evaluating query retrieving relevant xml les web 
precise relevant xml le cause compile time error query structure requirement match paths bib book title bib book author lastname contain requested partial content information content requirement contain book authored smith 
case multiple download calls query combinations relevant les associated calls relevant relevant document may di erent paths 
furthermore deriving actual paths may challenging xml oql supports xml projections oql expression 
previous normalization query unnesting valuable extracting paths 
inspired text context xml search engine niagara project algebra framework indexing xml data precise easier implement ecient niagara 
niagara framework uses inverted lists word index tag index indexing content words xml elements indexing tag names 
oodbs inverted lists speci ed class extents class xml word key word extent word index attribute string word attribute seth string url integer level integer location occurs struct element spec string url integer level integer loc integer loc class xml tag key tag extent tag index attribute string tag attribute seth element spec occurs rst class associates words documents 
assume oodb create primary index tree primary key 
case class extent behave inverted list 
occurs attribute contains occurrences word web accessible xml documents 
addition location word document keep nesting level depth word document 
word level indexing technique precise niagara 
second inverted list tag index indexes xml element tags 
tag documents loc attribute speci es location loc speci es location matching indexing framework basically non standard interpretation xml path expressions 
standard interpretation path expressions yields course xml elements elements reachable path 
non standard interpretation path expression yields set document urls set element spec precise 
documents matching path terms content structure 
non standard interpretation indexing achieved compositional rules tag projection equal select tag index occurs tag url url level level loc loc loc loc wildcard projection level level predicate level level 
correction equal 
interpretation increased depth level select url url level level loc loc loc loc content indexing necessary comparison path constant value author lastname smith done regular indexes databases 
case comparison operator cmp cmp equal select word index occurs word cmp url url level level loc location loc location translations ective query optimizer able perform basic query unnesting projection yields nested query 
example rules query unnesting condition author lastname smith translated select tag index occurs tag index occurs word index occurs tag author tag lastname url url level level loc loc loc loc word smith url url level level loc location loc location note typical oodb optimizer primary index tag index word index extents key equalities query 
general xml path expressions query presence multiple document calls query composed calculates relevant document urls 
advantages implementing web searching query inverted indexes 
oodb query optimizer able nd best way evaluate query statistical information may necessarily nested loop join proceeds left right path expression implicit niagara web search engine 
example may xml documents top level tag 
starting searching dictionary tag may wise 
expect achieve ecient search niagara 
furthermore method number books schema schema cpu time secs number books schema schema comparing schema schema implementations ective multiple document retrievals query query generated precisely relates di erent documents involved document may linked query idrefs content constraints 
addition framework extendible rule easy validate 
implementation implemented schema translation xml oql oql lambda db object oriented database management system built top shore object storage system 
implementation part latest release lambda db available lambda uta edu lambda db html 
schema guided translations require substantial changes underlying oodb engine especially type checker query translator 
believe gain signi cant performance improvement implement schema driven framework 
support claim compiled bibliography xml odl schema regular odl schema hand 
indicates data take times space schema data 
compared performance queries various database sizes select book author book title document books vendor books select lastname title vendors books authors query xml oql schema database query oql schema database 
queries tested various random databases containing books 
platform experiments pentium iii mhz mbs running redhat linux 
shore client bu er set mb 
see schema query takes times time schema query 
expect substantial performance gain complex xml oql queries contain path expressions multiple documents idref dereferencing 
preliminary results encouraging far complete 
near planning compare performance schema implementations schema implementations wider spectrum queries 
planning implement compare web indexing method related proposals terms accuracy eciency possibly niagara system commercial xml indexing system www com 
related proposals xml query languages unql struql yatl weboql lorel quilt oql :10.1.1.22.605
survey languages 
claim query language basically extension oql powerful better 
language goal capture important features languages simplest way possible give clean compositional semantics 
believe semantics transformations applied languages albeit ort 
features lacking language primitive recursion traversing tree structures particularly important semi structured data 
primitive recursion important feature xslt xml language stylesheet transformations important component unql form structural recursion 
primitive recursion missing oql simulated recursive functions 
recursion dicult optimize 
xml query languages support features restructuring xml data filter construct quilt suspect may complex formal semantics 
commercial oodb systems poet content management suite object design system provide functionality storing handling xml data 
furthermore research projects oodb technology xml query optimization lore purely schema xml data 
highly uenced christophides storing handling sgml data oql dtd schema information 
go supporting type system integrated odmg odl supports semi structured schema xml data 
furthermore query language supports xml data construction form xml tags feature xml query languages 
describes algebra path expressions object identity give brief sketch translation language algebra 
provide precise compositional semantics query language 
inventing semi structured algebra transformations targeting core oql turn translated favorite complex object algebra plenty 
web indexing engine uenced niagara uses special search engine called text context retrieve relevant xml documents xml ql query 
niagara uses special indexing algebra intermediate form xml ql queries seen ective optimization rules algebra 
approach require special algebra 
oodb query optimizer decide best way indexes statistical information 
time writing proposal xml indexing relational databases came uses tag word inverse indexes closer framework niagara 
indexing technique concentrates simple xpath queries restricted single document source support xml data construction path expressions xml oql proposed xml query languages quilt may context path expression title example query variable bound path expression query 
translation queries easily accomplished compositional transformation rules subexpression translated independently translations composed form nal translation 
context propagated translations form binding lists shown 
framework storing xml data oodb management system translating xml queries oql queries xml schema information 
schema xml data may bene semi structure model algebra schema xml data naturally mapped nested storage structures oodb system 
schema information type checker resolve ambiguities ll missing details query presence complex patterns path expressions 
accomplished compile time evaluation time resembles pattern decomposition techniques functional programming languages 
framework require fundamental change query optimizer evaluator oodb system xml queries translated oql code type checking optimization 
second contribution related novel framework maps xml oql query web accessible xml data oql query inverse indexes ectively summarize content structure documents 
similar indexes xml indexing systems framework utilizes best way possible oql query optimizer construct usage plan statistical information 
acknowledgments supported part national science foundation iis texas higher education advanced research program 
abiteboul aguilera amann cluet hills hubert 
marian milo dos santos tessier 

xml repository active views demonstration 
proceedings th international conference large data bases vldb edinburgh scotland pages 
arocena mendelzon 
weboql restructuring documents databases webs 
proceedings fourteenth international conference data engineering orlando florida pages feb 
beeri 
sal algebra semistructured data xml 
acm sigmod workshop web databases webdb philadelphia pennsylvania pages june 
buneman davidson hillebrand suciu :10.1.1.32.3916
query language optimization techniques unstructured data 
proceedings acm sigmod international conference management data montreal canada pages may 
buneman fernandez suciu 
unql query language algebra semistructured data structural recursion 
vldb journal 
carey dewitt franklin hall naughton schuh solomon tan white 
persistent applications 
proceedings acm sigmod international conference management data minneapolis minnesota pages may 
cattell editor 
object data standard odmg 
morgan kaufmann 
chamberlin robie florescu 
quilt xml query language heterogeneous data sources 
acm sigmod workshop web databases webdb dallas texas pages may 
christophides abiteboul cluet scholl 
structured documents novel query facilities 
proceedings acm sigmod international conference management data minneapolis minnesota pages may 
christophides cluet sim eon 
wrapping query languages ecient xml integration 
proceedings acm sigmod international conference management data dallas texas pages may 
cluet delobel 
general framework optimization object oriented queries 
proceedings acm sigmod international conference management data san diego california pages june 
cluet delobel simeon 
mediators need data conversion 
acm sigmod international conference management data seattle washington pages june 
cluet moerkotte 
nested queries object bases 
fifth international workshop database programming languages italy page sept 
deutsch fernandez florescu levy maier suciu :10.1.1.32.3916
querying xml data 
ieee data engineering bulletin 
deutsch fernandez florescu levy suciu 
query language xml 
www computer networks 
fegaras maier 
optimizing object queries ective calculus 
acm transactions database systems dec 
fegaras srinivasan maier 
db odmg object oriented dbms 
proceedings acm sigmod international conference management data dallas texas page may 
fernandez florescu levy suciu 
query language web site management system 
sigmod record 
fernandez simeon wadler 
algebra xml query 
fst tcs delhi dec 
florescu levy mendelzon 
database techniques world wide web survey 
sigmod record 
goldman mchugh widom :10.1.1.22.605
semistructured data xml migrating lore data model query language 
acm sigmod workshop web databases webdb philadelphia pennsylvania pages june 
hosoya vouillon pierce 
regular expression types xml 
acm sigplan international conference functional programming icfp montreal canada 
acm press sept 
kemper moerkotte 
advanced query processing object bases access support relations 
proceedings sixteenth international conference large databases brisbane australia pages 
morgan kaufmann publishers aug 
leung mitchell subramanian vance zdonik :10.1.1.32.3916
aqua data model algebra 
fourth international workshop database programming languages manhattan new york city pages 
springer verlag workshops computing aug 
maier 
database desiderata xml query language 
query languages ql 
available www org ql ql pp maier html 
mchugh widom 
query optimization xml 
proceedings th international conference large data bases vldb edinburgh scotland pages 
naughton dewitt maier 
niagara internet query system submitted publication 
available www cs wisc edu niagara papers pdf 
shanmugasundaram tufte zhang dewitt naughton 
relational databases querying xml documents limitations opportunities 
proceedings th international conference large data bases vldb edinburgh scotland pages 
wadler 
markup languages 
second conference domain speci languages dsl invited talk austin texas oct 
widom 
data management xml research directions 
ieee data engineering bulletin special issue xml sept 
world wide web consortium 
extensible markup language xml 
www org xml 
zhang naughton dewitt luo lohman 
supporting containment queries relational database management systems 
proceedings acm sigmod international conference management data santa barbara may 

