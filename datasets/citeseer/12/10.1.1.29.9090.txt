queries computation web serge abiteboul 
victor vianu computer science department stanford university stanford ca univ california san diego cse la jolla ca usa 
introduces model web infinite semistructured set objects 
reconsider classical notions genericity computability queries new context relate styles computation prevalent web browsing searching 
revisit known declarative query languages order logic datalog datalog negation consider computational characteristics terms notions introduced 
particular interested languages fragments thereof implemented browsing browsing searching combined 
surprisingly stratified founded semantics negation turn basic shortcomings context inflationary semantics emerges appealing alternative 
world wide web tremendous source information viewed sense large database 
nature web fundamentally different traditional databases raises qualitatively new issues 
main characteristics global nature loosely structured information holds 
consider fundamental aspects querying web 
model web abstraction captures global nature semistructured information holds 
fundamental aspect model view web infinite 
point view new suggested researchers amm 
believe captures intuition exhaustive exploration web soon prohibitively expensive 
assumption viewed convenient metaphor turing machines infinite tapes useful abstractions computers finite potentially large memory 
note approach fundamentally different previous attempts model infinite data ch kkr focus finitely representable supported part national science foundation number iri 
author permanent position inria rocquencourt france 
supported part air force wright laboratory aeronautical systems center arpa contract air force rome laboratories arpa contract databases 
contrast assume web finitely represented 
view possibly nonrecursive infinite structure entirely explored 
model leads focus querying computation exploration web controlled 
raises issues akin safety classical databases 
data model similar models unstructured data introduced cacs bds 
web consists infinite set objects 
objects value may objects labeled links 
set labels object fixed attributes relation 
intuitively object viewed web page value content page labels provide links allow navigating web hypertext style 
exploring notion computable query context web 
model lines computable queries chandra harel ch 
introduce machine model computation web call web machine 
works turing machine takes input infinite string may produce infinite answer 
introduce particular machine models capture directly main styles computing web browsing searching 
browser machine model allows navigational exploration web 
browse search machine additionally allows searching style search engines 
web machine define notions computability eventual computability queries 
notion arises fact infinite answers queries allowed 
query computable answer finite computable halting web machine 
query eventually computable web machine possibly nonterminating eventually outputs object answer query 
interesting connections hold browser machine browse search machine 
show generic computable query fact computable browser machine 
confirms intuition browsing sense way control computation web 
show set generic queries eventually computable web machine precisely set generic queries eventually computable browse search machine 
done combination browsing searching 
express queries needs query languages 
interested ability declarative database query languages express queries web 
revisit classical languages fo order logic datalog datalog questions interest language queries language computable eventually computable 
ii fragments language implemented browsers combination browsing searching 
provide syntactic restrictions guarantee computability browsers browse search machines fo datalog interesting results respect negation 
positive fragment fo eventually computable 
addition recursion yields problem 
negation brings trouble simple fo queries eventually computable 
datalog languages yield surprises standard semantics stratified founded grs ill suited expressing eventually computable queries procedural inflationary semantics av kp turns naturally suited express queries fundamental advantage semantics 
computation web infancy premature propose definitive model 
clear right abstractions 
believe model web captures essential aspects developments may confirm invalidate 
clearly ignored investigation important aspects communication costs associated browsing searching notion locality essentially distributed nature web fact concurrent processes may participate evaluating query updates fact users satisfied incomplete imprecise partially incorrect answers 
query languages web attracted lot attention ql ks focuses extensibility websql amm provides formal semantics introduce notion locality weblog lss datalog syntax 
html core structure web viewed instance sgml querying structured document cacs pertinent querying semistructured data see 
query languages hypertext structures mw cm mw relevant 
section introduce web machines browser machines browse search machines 
formalize notion eventually computable query web 
section considers fo datalog datalog establishes connections eventual computability browsing searching 
provide 
computation web model web set semistructured objects style bds 
precisely view web infinite database fixed relational schema oid ref source label destination val oid value meaning relations follows 
obj provides infinite set objects 

relation ref specifies objects finite set links objects label 
precisely ref indicates edge labeled 
relation val specifies value objects 
val specifies object value intuitively object corresponds web page 
value content page model labeled links pages 
web instance infinite structure schema satisfying constraints obj source ref oid val satisfies fd source value destination ref obj obj oe source ref finite 
object value objects 
object value finitely objects 
referenced object belong specified set objects instance 
set web instances denoted inst web 
web instance 
object obj description consists finite set tuples coordinate description object provides outgoing links value 
provide set going links infinite 
may regard ref labeled graph vertices objects 
say object reachable object holds labeled graph ref 
distance objects defined respect ref graph 
attempt wish formalize notion query web 
explore straightforward extension classical notion query soon refine 
query mapping inst web associates web instance subset obj 
wish notion generic computable query appropriate web 
classical definition proposed chandra harel ch query generic commutes isomorphisms inst web 
precisely query generic mapping ae domain extended obvious way ae ae 
intuitively means result depends information independent particular encoding chosen definition computability requires departure classical definition inputs outputs possibly infinite 
web machine turing machine tapes right infinite input tape twoway infinite tape right infinite output tape 
initially input tape contains infinite word encoding web instance output tapes empty 
input tape head positioned cell 
moves standard output tape head move right erased written output tape 
web instances encoded input tape straightforward manner 
ff successor relation elements occurring including oid labels values 
element occurring enc ff binary representation rank ordering ff 
instance encoded enc ff enc ff enc ff om infinite structures mentioned countable specified 
list oid obj order specified ff enc ff standard encoding respect ff description 
recall description finite structure 
note encoding finite information object clustered 
nontrivial consequences 
results hold 
encoding presents advantage models accurately real situation web information clustered pages 
output query input set objects encoded enc ff enc ff objects order 
particular order imposed presentation objects answer possible answers possible 
allowing flexibility important technical reasons results hold required objects output lexicographical order 
intuitively output object certain smaller object answer 
slight abuse notation denote presentation answer enc ff 
attempt defining notion computable query 
query computable abandon soon definition exists web machine input enc ff halts produces enc ff output tape inst web ff 
note computable query produces finite answer input 
query eventually computable exists web machine computation input enc ff properties content output tape point computation prefix enc ff encoding enc ff occurs output tape point computation 
note eventually computable web machine required terminate happens finite 
turns definitions need refining 
things stand queries computable sense trivial 
precisely call query trivial web instance claim computable query trivial 
note nontrivial eventually computable queries infinite databases query outputs set oid argument computable queries goes follows 
suppose computable query input web machine computes observe reads finite prefix enc ff 
consider instance consisting infinitely isomorphic copies disjoint sets oid ordering fi elements prefix enc fi 
clearly fi exist genericity infinite 
contradiction computable produces finite answers 
similarly nontrivial eventually computable query produces finite answers 
observe computability sense finite databases corresponds standard notion computability 
concerned web instances infinite 
terminating computation remains important context modify notion computability allow meaningful finite computations 
second attempt source problem definitions far finite computation enc ff sees arbitrary finite sample determined encoding 
unsatisfactory clearly want allow possibility meaningful finite computations 
leads naturally solution adopted practice carry computation starting designated web object 
particular object part input query 
formalized follows 
web query mapping associating web instance object obj subset obj 
object called source query 
definitions computable eventually computable query encoding input web machine input tape enc ff enc ff 
henceforth adopt definitions web query computable query eventually computable query 
observe presence source object indirectly allows refer constant vertex query 
done linking source object objects wish name edges new labels 
example 
notions computable eventually computable queries illustrated queries input 
computable find objects reachable path labeled labeled edge followed labeled edge followed labeled edge 
find objects path length find objects lying cycle length contains 
eventually computable possibly infinite answers computable find objects reachable find objects referencing find objects belonging cycle 

eventually computable finite answers computable find objects shortest cycle containing find object shortest distance 
eventually computable find objects belong cycle 
find objects referenced object 
output iff objects reachable non nil particular clear examples computable eventually computable properties closed complement 
nil modeled special object named nil 
browse search web machine captures general form computation web 
particular modes computation web prevalent practice browsing searching 
define machine models capture directly computation 
called browser machine models browsing 
second called browse search machine models browsing searching combined 
idea underlying browser machine access web object starting input object browser machine infinite browsing tape infinite tape right infinite output tape 
equipped finite state control includes special state called expand 
computation machine input follows 
ff fixed successor relation elements initially browsing tape contains encoding enc ff source object expand state reached point computation browsing tape contains encoding enc ff object obj replaced browsing tape enc ff encoding finite description see earlier notation encodings 
query computable browser machine exists browser machine input halts produces output tape encoding 
definition query eventually computable browser machine analogous 
obviously browser machines limited computing ability access portion web reachable input object 
intuitively appealing approach controlling computation 
prove result confirms central role style computation context web 
theorem 
generic computable web query browser computable 
proof 
sketch formalism departure familiar terrain provide detail proof 
generic computable web query web machine computing input denote subinstance consisting descriptions objects reachable show done clearly computable browser machine 
difficulty may finite case web instance 
fix problem augmented infinite set new new objects new value say 
surely web instance 
technical reasons need similarly augment augmented objects new 
show 


suppose hold 

browser machine compute simulating computation 
browser generates portion tape encoding prefix starts simulating input tape 
attempts move past right input tape extends tape browsing finite exhausted generating encoding object new 
objects new standard encodings simply browser 
prove ff successor relation elements computation enc ff halts inspected finite prefix enc ff 
clearly exists successor relation fi elements prefix enc fi 

proof similar starting computation input 

observe previous result hold assumption web instances infinite 
consider query input output consists precisely objects pointing computable web machine browser machine 
ii addition computable queries browser machines compute queries eventually computable computable find objects reachable 
exist eventually computable queries eventually computable browser machine find objects 
augment browser machines search mechanism 
search essentially selection operation relation schema condition specifies conjunction finite set equalities involving attribute constant 
examples selections oe value sgml val returns tuples sgml object value sgml ii oe label department ref selects edges label department iii oe label ref returns edges label oid destination iv oe source source ref returns edges 
general search triggers eventually computable subquery result may infinite 
leads problem integrating nonterminating subcomputations computation query 
adopt model 
browse search machine browser machine augmented search answer tape separate search condition tape 
distinguished search state 
computation machine nondeterministic 
search triggered writing selection operation search condition tape entering search state 
search answer tape functions similarly answer tape eventually computable query 
answers previously triggered searches arrive search answer tape arbitrary times arbitrary order 
precisely suppose set selections triggered point computation foe oe ng 
subsequent move machine possibly empty finite subset answers oe appended search answer tape 
non deterministic 
order answers produced arbitrary 
tuple answer oe prefixed oe encoded obvious way 
guaranteed answers triggered search eventually produced computation terminate 
note generally way know time answers particular search obtained 
rest computation occurs browser machine 
web query computable browse search machine exists browse search machine computation input halts produces encoding answer tape definition query eventually computable browse search machine analogous 
power browse search machines 
elucidated result 
theorem 
generic web query eventually computable iff eventually computable browse search machine 
ii generic web query computable iff computable browse search machine 
proof 
sketch consider query eventually computable browse search machine expand operations easy simulate finite time web machine note uses fact encodings tuples describing object clustered 
searches simulated follows 
selection web machine scans input tape left right search answers selection 
tuple answer encoding placed portion simulates search answer tape searches terminate interleaved rest simulation standard way 
conversely suppose eventually computed web machine browse search machine simulate follows 
triggers search selection condition true objects 
objects arrive search answer tape expanded encoded tape expand 
interleaved simulation portion input tape constructed far 
part ii follows immediately theorem 
query languages tempting classical declarative query languages context web 
clear extent languages appropriate framework 
examine issue light notions eventual computability discussed far 
specifically consider languages fo order logic datalog datalog due space limitations assume familiarity languages see definitions ahv 
programs clear browse search machine uses search feature nontrivial way terminate 
consider input web relations obj ref val constant source interpreted object input instance 
language interested questions queries language eventually computable 
ii fragment language implemented browsers 
turns conventional wisdom counted context 
fo longer nice tractable language expresses queries eventually computable 
see negation main source problems languages consider 
surprising eventually computable queries queries computable browser machines closed complement 
discussion languages negation positive fo fo negation universal quantification denoted fo datalog 
easily shown 
theorem 
fo datalog queries eventually computable 
particular fo datalog query implemented browse search machine 
clearly fragments implementable browser machine special interest 
note navigational languages proposed web implementable browsers 
particular languages specification paths source object regular expressions see amm fragments datalog implementable browsers 
isolate fragments datalog fo eventually computable browsers syntactic restriction variables limits range values reachable source 
provide definition datalog induces analogous restriction fo viewed nonrecursive datalog 
definition 
set source range restricted variables datalog rule minimum set variables satisfying occurs body rule idb predicate variables source range restricted source constant source range restricted ref occurs body rule source range restricted source constant source range restricted occurs body rule source range restricted 
rule source safe ss variables source range restricted 
program source safe rules source safe 
example datalog program source safe eventually computable browser machine 
second program source safe 
eventually computable browser machine 
reachable nodes answer source answer answer ref nodes leading answer source source answer answer ref show 
theorem ss fo queries computable browser machine 
ii ss datalog queries eventually computable browser machine 
consider languages negation 
expected things complicated 
recursion easily express queries eventually computable 
consider fo query fx ref source source ref asks finite set objects referenced edge labeled source object 
easy see query eventually computable 
fo consider datalog stratified founded inflationary semantics 
obtain fragments eventually computable browser machines natural extend source safe restriction languages 
definition ss datalog precisely datalog proviso occurrences predicates required definition ensure source range restriction positive occurrences 
precisely definition obtained replacing occurs occurs positively definition source safe datalog 
definition source safe fo program spirit omit details 
straightforward show theorem 
queries ss fo computable browser machine 
consider ss datalog language provides interesting surprises 
classical stratified founded semantics appear wellsuited express eventually computable queries inflationary semantics quite behaved 
recall finite case fo subsumed stratified datalog subsumed datalog founded semantics grs ii datalog founded semantics answers reduced positive portion equivalent datalog inflationary semantics gel 
infinite case things different continues hold ii 
quite easy see ss datalog stratified semantics expresses queries eventually computable 
example consider stratified ss datalog program source ref ref answer query asks vertices reachable source going edges labeled vertex reachable source 
show stratified semantics founded semantics query eventually computable 
inflationary semantics able show recall founded semantics uses valued model 
theorem 
query ss datalog inflationary semantics eventually computable browser machine 
generally queries eventually computable computable browser machine expressible ss datalog inflationary semantics 
example computable query output iff number objects ref 
familiar difficulty theory query languages due lack order domain 
consider web instances augmented total order relation oid obj 
call web instance ordered 
web instance source infinite infinitely objects reachable instance called source finite 
show theorem 
language ss datalog inflationary semantics expresses exactly queries eventually computable browser machine ordered source infinite web instances 
ii language ss datalog inflationary semantics expresses exactly queries computable browser machine polynomial time respect number objects reachable source ordered source finite web instances 
proof involves simulation browser machines 
tape cells machine encoded indexes consisting objects reachable source 
recall browser machines may terminate infinitely cells may encoded 
works source infinite instances case browser machine inspects finitely objects reachable source 
source finite instances ss datalog inflationary semantics construct polynomially indexes tape cells 
theorem allows show interesting connection ss datalog languages various semantics negation 
proposition 
ordered web instances query eventually computable browser machine expressible ss datalog founded semantics expressible ss datalog inflationary semantics 
proof uses fact source finite web instances ss datalog program founded semantics evaluated time polynomial number objects reachable source 
proposition follows complexity completeness argument explicit simulation 
remains open find uniform simulation ss datalog founded semantics eventually computable browsers ss datalog inflationary semantics 
remains open proposition holds unordered web instances 
view results ss datalog inflationary semantics emerges particularly appealing language context web 

notion source safety developed ensure programs implemented browser 
develop restrictive notion safety geared eventual computability guarantee program implemented browsing searching combined 
consider instance datalog recall datalog queries negation eventually computable browse search ss datalog programs inflationary semantics eventually computable browsers 
relax source safety restriction ss datalog allowing mix idb defined positive rules idb defined source safe rules 
hybrid rules positive source safe allowed idb occurring negatively defined source safe rules variable occurring negation bound positive occurrences predicate 
programs express inflationary semantics queries eventually computable browse search 
omit details 
explored basic aspects querying computing web 
doing revisited adapted fundamental concepts theory database query languages genericity computability 
substantial differences arising fact model web semistructured infinite object 
results viewed posteriori formal justification computation style adopted practice context web browsing source object 
considered fo datalog datalog context web characterized respect eventual computability 
identified fragments language implementable browsing 
surprises fo longer nicely behaved language finite case 
semantics negation datalog stratified founded semantics fundamental shortcomings inflationary semantics emerges particularly appealing context 
fo datalog datalog query web results guide design practical languages 
particular believe nice properties source safe datalog inflationary semantics suggest useful ways extend previously proposed languages browsing 
emphasized abstraction web left important aspects plan include investigations 
important communication costs associated browsing searching notion locality 
locality introduced model having sorted edges graph ref local remote added condition connected component subgraph ref consisting local edges finite 
fact local browsing searching guaranteed terminate turn exploited language level allowing explicit local links language 
locality explicit notion languages proposed web amm 
natural provide extended notions safety locality browsing searching 
abiteboul 
querying semistructured data 
proc 
icdt greece 
ahv abiteboul hull vianu 
foundations databases 
addisonwesley reading massachusetts 
amm mihaila milo 
querying world wide web 
draft available ftp milo math tau ac il 
av abiteboul vianu 
procedural declarative database update languages 
proc 
acm symp 
principles database systems pages 
bds buneman davidson suciu 
programming constructs unstructured data 
proc 
dbpl 
berners lee cailliau luotonen nielsen secret 
world wide web 
comm 
acm aug 
cacs christophides abiteboul cluet scholl 
structured documents novel query facilities 
sigmod acm 
ch chandra harel 
computable queries relational data bases 
journal computer system sciences 
ch completeness results recursive data bases 
proc 
th acm symp 
principles database systems pages 
cm mariano consens alberto mendelzon 
expressing structural hypertext queries graphlog 
proc 
nd 
acm conference hypertext pages pittsburgh november 
gel van gelder 
alternating fixpoint logic programs negation 
proc 
acm symp 
principles database systems pages 
grs van gelder ross schlipf 
founded semantics general logic programs 
proc 
acm symp 
principles database systems pages 
ralf hartmut roberto zicari david 
algebra structured office documents 
acm tois 
kkr kanellakis kuper revesz 
constraint query languages 
proc 
th acm symp 
principles database systems pages 
kp kolaitis papadimitriou 
negation fixpoint 
proc 
acm symp 
principles database systems pages 
ks konopnicki shmueli 
qs query system world wide web 
proc 
vldb pages 
lss laks lakshmanan sadri iyer subramanian 
declarative language querying restructuring web 
proc 
th 
international workshop research issues data engineering ride new orleans february 
mw watanabe 
queries structure hypertext 
foundations data organization algorithms fodo pages 
springer 
mw mendelzon wood 
finding regular simple paths graph databases 
siam comp 
quass querying semistructured heterogeneous information 
article processed macro package llncs style 
