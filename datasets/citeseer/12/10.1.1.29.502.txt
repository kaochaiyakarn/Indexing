achieving quality natural language requirements iei cnr maria pisa italy dip 
di informatica corso italia pisa italy proposal quality model natural language requirements concentrates linguistic properties requirements documents 
deploy quality framework krogstie superordinate rationale supporting design quality model 
time quality model intended cover classify corpus linguistic techniques proposed literature analysis requirements 
result identified number factors criteria affect linguistic quality requirements documents 
model choose appropriate techniques apply order reach desired quality level 
keywords natural language requirements quality models linguistic analysis 
quality software engineering extent historical path quality classical engineering 
methods tools proposed past achieve specific quality objectives 
vast majority outcome painful trial error process 
stories projects ended disaster taught software project experiences successful projects common sense taught 
approach useful childhood discipline reached limits 
classical engineering switched quality control total quality management need switch best practices systematic comprehensive unifying approach understanding analyzing problems 
concentrate quality natural language requirements 
natural language properties deserve particular attention main purpose requirements document convey information gathered partially funded progetto cnr com 
di software 
customer sources developers communication mediated language 
vast majority applications requirements validated customers users expertise formal semi formal conceptual models 
recognize importance addressing natural language requirements observe linguistic issues play crucial role production control analysis natural language requirements 
years papers reported investigations construction conceptual model problem related linguistic mechanisms analysts natural language requirements concepts 
approaches try capture mechanisms tools able generate semi automatically formal semi formal conceptual model problem hand starting natural language requirements 
systematic classification relevant linguistic properties requirements documents techniques natural language processing pursued 
quality model extending proposal krogstie linguistic cognitive theories 
quality models proposed past consisted bread butter lists properties jargon 
model contrast identifies syntactic structural semantics pragmatic aspects natural language requirements documents definite quality framework 
organized follows 
section general quality models section presents rationale approach 
sections detail proposed linguistic quality model 
section compares proposal quality models 
follow 
quality models generic quality model product consists definition set identified product properties bear ability satisfy stated implied needs stakeholders 
quality model simply enumeration properties better structured hierarchically properties sub properties properties defined quality model called factors indicated goal properties bear ability product satisfy stated implied needs 
usually quality factors defined aiming minimum overlap maximum orthogonality 
allows factor controlled separately 
addition quality models complemented set support properties called criteria serve indicators predictors factors 
criteria may decomposed hierarchically case basic measurable properties 
case derived measure assigned criteria composing measures leaves decomposition tree 
objective measuring quality determine extent product exhibits properties defined quality model 
generic quality model instantiated specific quality model product 
quality objectives specified terms required quality levels expected profile specified defining qualitatively quantitatively range admissible values criteria 
quality objectives agreed stakeholders 
particular measurable profile necessarily adopted means non ambiguous verification final product quality 
quality models complemented collection activities influence criteria factors 
performing activity means control quality product hopefully improving 
refer reader deutsch willis software quality models 
context advantages defining quality model requirements include descriptive prescriptive uses model analysis control requirements documents quality 
scope project quality models central planning controlling verifying expected quality levels product 
ground establishment quality improvement programme rational classification comparison selection aggregation appropriate terms effectiveness budget schedule tools techniques writing checking evaluating requirements 
rationale proposed approach rationale approach follows 
propose definition thorough linguistic quality model obtained meeting point ways looking quality requirements engineering 
hand years high level quality frameworks requirements requirement engineering proposed intention capturing basic products agents relationships involved requirement engineering process 
research area point proposals pohl merged refined krogstie 
hand specific natural language processing nlp techniques tailored purpose analyzing controlling software requirements 
techniques different kinds investigated ranging purely lexical analysis extraction abstractions natural language texts speech act modeling 
tools developed techniques 
summing state art hand high level quality frameworks proposed hand techniques tools available specific tasks 
starting considerations investigated definition linguistic quality model meeting point approaches 
proceed top bottom way 
top analysis discussed section chose consider modification framework krogstie specializing purely linguistic aspects 
resulting linguistic framework consists relationships interestingly coincide syntactic structural semantic pragmatic components nl documents 
bottom analysis section starts collection existing nlp techniques best practices tries common functionalities 
sources collection included journals acm ieee tse ieee software specialized ones requirement engineering journal knowledge engineering review project reports books number conference proceedings 
obtained meeting point approaches linguistic quality framework superordinate rationale supporting classification nlp techniques homogeneous groups refining krogstie framework finer elements extending order accommodate existing nlp techniques covered original quality model 
meeting point quality model aims comprehensive embrace characteristics requirements documents affect linguistic quality sufficiently specific applied classify number techniques tools practices proposed literature 
top way systematic approach proposed analysis quality properties requirements specifications 
proposals pohl merged refined krogstie attempts systematic analysis quality issues 
worth noting distinguishing feature framework krogstie closely linked linguistic concepts 
main motivation adoption framework basis analysis 
quality framework krogstie conceptual model collection specification statements relevant problem 
conceptual models include requirements specifications 
summarize main concepts framework see knowledge participant domain model audience interpretation syntactic quality semantic quality pragmatic quality quality appropriateness appropriateness appropriateness social quality language perceived semantic krogstie quality framework conceptual modeling ffl audience set individual organizational actors called participants technical actors systems tools need understand model 
ffl model set statements explicitly implicitly audience problem hand 
participant audience part model considered relevant seen projection total model 
ffl language set statements vocabulary grammar modeling language 
formal informal languages time 
ffl domain set statements correct relevant problem hand 
denotes ideal knowledge problem evolves requirement engineering process 
notice concerned problem solution 
ffl audience interpretation set statements audience thinks model consists 
ffl knowledge participants set statements correct relevant addressing problem hand knowledge participants 
starting basic components involved requirements engineering process quality types proposed krogstie nate relating various components described 
quality types syntactic semantic perceived semantic pragmatic social quality 
addition appropriateness relations considered shown 
quality type refined set properties called goals goal collection means achieve proposed consisting model properties activities influence model properties 
keeping standard quality terminology term factor goal criteria model property syntactic quality correspondence model language express 
semantic quality correspondence model domain 
mnd model contain invalid statements nm model incomplete 
total validity completeness rarely achievable krogstie introduce notions feasible validity feasible completeness trade offs benefits drawbacks costs removing adding statements model 
pragmatic quality correspondence model audience interpretation 
main purpose comprehension model understood audience understandability 
total comprehension unrealistic individual comprehension usually sufficient participant interpretation coincide projection model relevant 
perceived semantic quality correspondence participant interpretation model knowledge 
analogously semantic quality perceived validity perceived completeness stated objectives notions feasible perceived validity feasible perceived completeness introduced 
social quality correspondence interpretations participants 
stated goal agreement weakened form feasible agreement appropriateness considerations affect quality conceptual model including appropriateness language adopted describe problem hand participants 
refer reader complete version quality framework 
defining linguistic quality framework defining linguistic adaptation shown consider elements quality framework directly connected model language 
language set statements may specified formal knowledge participant domain appropriateness req 
doc 
syntactic quality semantic quality audience interpretation structural quality pragmatic quality perceived semantic quality appropriateness appropriateness structure language social quality appropriateness linguistic quality framework nl requirements syntax informal means english grammar 
semantics may formal informal common sense 
cases assume entailment relation exists relates sets statements statements implied 
introduce structure set specifies formally informally structure requirements requirements documents 
requirement structured collection statements 
requirements document corresponding model structured collection requirements 
structure chapter section paragraph list statements called structural unit normally evolving requirements process parts empty time 
depart definitions krogstie consider set statements relation 
structure subproperty modifiability 
prefer lift structure prominent role due relevance obtaining important properties comprehensibility 
include requirements explicitly implicit ones done krogstie choice inessential theoretical level due assumption entailment relation exists statements 
practical point view definition closer real requirements documents emphasizes fact nlp techniques deal statements explicitly 
consider notions audience stakeholders 
audience defined need understand model including stakeholders development process clear audience stakeholders coincide 
adhere 
audience distinguish individual organizational actors called participants technical actors 
maintain definitions domain audience interpretation interestingly relations highlighted bold coincide syntactic structural semantic pragmatic components natural language documents 
social quality perceived semantic quality concentrate social agreement cognitive aspects linguistic issues directly related requirements documents 
observe broad sense social perceived semantic quality linguistic component affected syntactic structural semantic pragmatic qualities 
fully capture linguistic component explicitly model social agreement cognitive processes largely scope 
appropriateness relations directly related requirements documents 
fact real processes relevant phase preceding requirements analysis selection language structure audience domain 
interesting notice process choice elements forced organizational constraints remaining ones may selected accordingly 
framework detail quality types factors top components linguistic quality model 
quality types distinguish linguistic quality types syntactic structural semantic pragmatic corresponding relationships depicted 
syntactic quality correspondence statements language structural quality correspondence structural units structure semantic quality correspondence requirements domain pragmatic quality correspondence audience interpretation 
general precedence relation achieving quality types 
syntactic quality instance prerequisite semantic quality pragmatic quality 
shows increasing levels achieving quality objectives 
consequence activities affect factor affect factors quality types higher levels 
practical point view precedence relations suggest quality improvement programme organization set achieve quality types order shown starting syntactic social quality 
quality increasing level quality structural social quality semantic syntactic quality pragmatic quality quality semantic perceived precedences quality types factors refine quality types factors considering sensible correspondence relations mentioned composition finer relations validity completeness 
syntactic quality refined syntactic validity factor property statements dual factor syntactic completeness property contains statements sense included model 
structural quality refined structural validity structural completeness factors 
property structural unit legal structure property structural units mandatory turning semantic quality distinguish properties 
semantic validity property statements domain words correct relevant problem hand 
semantic completeness property statements deduced entailment relation words requirements document contains implies correct relevant statement problem hand 
factors pragmatic quality valid comprehension property statements audience interpretation complete comprehension property statements words valid comprehension means understood participants statement complete comprehension means statement understood participant 
general full coincidence unrealistic simple problems participant assumed understand part extent corresponds determined definition quality objectives requirements document 
original model individual comprehension usually sufficient 
depart approach krogstie define feasibility notion 
hand feasibility notion considered explicitly defining factors criteria feasibility analysis naturally occurs quality model determining expected quality objectives 
notion feasible semantic completeness instance corresponds defining profile necessarily targeted achieving full completeness correct relevant requirement requirements document deducible 
hand observe model verifying evaluating quality product notion feasibility sense directly concerned product development 
contrary profile means verifying measured values criteria expected range 
bottom way attempts conducted order apply general nlp techniques purpose analyzing controlling usually software requirements expressed natural language subset natural language 
looking literature observed problem tackled researcher different backgrounds including computational linguistics software requirement engineering business information systems database systems 
section recall proposals 
natural language processing requirements nlp usually divided main areas understanding problem extracting meaning sentences generation problem generating sentences conveying meaning 
refer reader allen nlp techniques 
recall main components nl analysis ffl morphology study rules word formation ffl syntax study rules sentence formation ffl semantic study interpretation sentence ffl pragmatic study usage language certain context 
literature address components 
mention relevant proposals 
pulman apply domain independent nlp techniques control production natural language requirements 
propose application nlp techniques requirements documents order control ffl vocabulary fixed agreed ffl style writing set pre determined rules satisfied order documents clear simple understand ffl ambiguity associate ambiguity rate sentences depending degree syntactic semantic uncertainty sentence ffl information conveyed requirements discovering missing informations unconnected statements 
discuss nlp techniques help design subsets english grammar limit generation ambiguous statements 
rolland propose conceptual model linguistic approach formalizes linguistic mechanisms analysts observed phenomena concepts 
propose validation conceptual schema built means paraphrasing techniques natural language generation 
similar approach taken maiden part nature project 
nature project holm exploited speech act taxonomy linguistic means improve requirements analysis domain contracting organizations libraries introduced linguistics model way people language inform certain state affairs 
speech acts somewhat related ordering discourse type classification speech act analysis may detect information incompleteness respect specification sub activities information needs rules activities 
papers investigate translate natural language requirements formal semi formal specification languages statements 
cite francez 
problem translating natural language formal languages widely studied context natural language databases queries object oriented requirements analysis 
goldin berry implemented tool extraction abstractions natural language texts repeated segments identifying significant concepts application field problem hand 
technique proposed restricted strict lexical analysis text 
long time software engineering community debating advantages disadvantages formal vs informal specifications 
cite meyer informal specifications showing sins specifier noise silence overspecification contradiction ambiguity forward thinking practice undesirable properties natural language requirements rough linguistic quality model informal requirements 
papers arguing favor natural language informal specifications cite le charlier lawrence 
brief overview summarize state art saying works investigating applications nlp techniques case natural language requirements 
systematic classification techniques characteristics analyzed techniques pursued 
meeting point section match factors linguistic model techniques collection establishing criteria model properties requirements documents refine factors hand common functionalities techniques hand 
factors express users needs criteria properties requirements documents 
case activity application technique means control verify property requirement documents 
proceeded allocating activities factors 
resulting groups identified common functionalities influence facet quality 
facet criteria model shown table simplified version 
table cite activities criteria identified aimed evaluating quality aimed inducing requirement production process 
interesting notice top bottom analyses undergone evolution process 
fact activities easily allocated factors deriving original framework driven extend model described 
criteria syntactic validity lexicon correctness syntax correctness ensuring correct sentences formed correct terms lexicon grammar 
structural validity reflected structure correctness criterion ensuring structural unit requirement document complies rules defining structure structural completeness criteria include structure top meeting bottom quality types factors criteria activities syntactic syntactic lexicon correctness lexicon checking validity controlled vocabulary syntactic correctness syntax checking syntax driven writing structural structural structure correctness structure checking validity template documents structural structural unit checklists completeness presence template documents structure hard check 
modifiability tracing semantic semantic domain independent ambiguity checking validity correctness semantic driven writing domain dependent domain modeling correctness semantic driven writing semantic domain independent consistency checking completeness completeness speech act modeling domain dependent case reasoning completeness intelligent dialogue pragmatic valid presentation ordering fwd 
checking comprehension structural modeling readability readability formulae style guidance complete navigability browsing comprehension hypertext editing conciseness document size size limitation table simplified linguistic quality model nl requirements documents 
unit presence ensuring structural unit declared mandatory requirements document structure modifiability ensuring structural units added disrupting existing structures 
criteria semantic validity resp completeness domain independent domain dependent correctness resp completeness 
property statements correct resp complete respect logic property statements correct resp complete respect formalization model application domain 
example presence statement negation indicates problems account particular application domain absence statement specifying switch turned turned spotted knowledge nature switches domain switches 
criteria valid comprehension include presentation ordering readability 
presentation ordering property requirements grouped respect homogeneous topics topics linear fashion 
readability property statements allowed syntax easily readable fashion 
presentation ordering reflects actual structure affects comprehension readability reflects actual syntax affects 
complete comprehension navigability conciseness criteria 
property readers access requirements document non linear fashion desired 
property requirements convey non redundant information 
point general criteria may overlap contrast sense achieving criteria may facilitate contrast achievement criteria 
example readability conciseness adverse sense improve readability redundant statements may introduced concise documents may harder understand long ones 
likewise linearly ordered documents tutorials facilitate valid comprehension randomly accessible documents materials facilitate complete comprehension 
activities may influence criteria possibly different effects different criteria 
example syntax driven writing ensures syntactic correctness affects necessarily positive manner readability conciseness 
details classification activities criteria 
comparison section outline existing quality models covered proposal 
particular survey sins specifier meyer model 
sins specifier meyer indicates noise silence overspecification contradiction ambiguity forward thinking common problems informal requirements documents 
noise presence information covered conciseness allows deduce noise real harm making comprehension difficult 
overspecification presence details concerning solution problem hand problem 
overspecification linguistic property documents depends information external documents customer constraints may impose specific implementation choice 
silence absence relevant concepts covered domain independent domain dependent correctness criteria semantic correctness implies semantic interpretations document acceptable correct 
silence serious defect noise silent document convey information specify right problem 
ambiguity weakened form silence leaves multiple acceptable semantic interpretations opened 
contradiction means semantic interpretation requirements document domain dependent independent semantic incompleteness 
forward long structurally valid issue covered general presentation ordering criteria 
point thinking unrealistic requirements concerned social quality agreement participants 
model model categorizes defects requirements documents groups ambiguity redundancy inconsistency terminological errors 
ambiguity inconsistency discussed previous section 
redundancy presence repeated correct relevant information problem conciseness akin noise serious helps valid comprehension detriment complete comprehension 
terminological errors wrong terms indicate domain concepts covered lexicon correctness problem syntactic validity 
dangerous compromise semantics pragmatic quality documents 
quality models provide thorough understanding desired product properties basis planning controlling improving verifying quality product development assessment 
goals extremely important case requirements quality heavily affect quality final product budget schedule 
natural language crucial requirement process common practice collecting validating user requirements 
convinced linguistic properties deserve particular attention main purpose requirements document convey information communication mediated language 
motivations mind proposal linguistic quality model natural language requirements documents 
model propose distinguishes quality types refined factors criteria classify organize number existing nlp techniques 
model context quality assurance programme defining expected quality profiles selecting effective tools techniques budget schedule organizational constraints writing checking evaluating requirements order achieve expected quality profile 
elaboration currently addressed directions validation model real case studies design tool industrial partner project helps applying validating quality model design appropriate metrics measuring quality design methods assessment certification requirements document quality 
iso iec 
quality management quality assurance vocabulary 
international organization standardization 
nd edition 
allen 
natural language understanding 
benjamin cummings publishing 

processing natural language requirements 
proceedings ase pages 
ieee press 
di 
applying metric framework software process experiment 
brian editor proc 
rd european workshop software process technology volume lecture notes computer science pages 
springer verlag 

creating formal specifications informal requirements documents 
acm sigsoft software engineering notes 
le charlier 
specifications necessarily informal myths formal methods 
journal system software march 
appear 
deutsch willis 
software quality engineering total technical management approach 
prentice hall 

modeling achieving linguistic quality natural language requirements 
technical report iei cnr 
appear 
carenini 
assisting requirement formalization means natural language translation 
formal methods system design 
fraser kumar 
informal formal requirements specification languages bridging gap 
ieee transactions software engineering 
goldin berry 
prototype abstraction finder natural language text requirements elicitation design methodology evaluation 
proceedings international conference requirements engineering 
jackson 
counterpoint requirements need form formality 
ieee software march 
jarke bubenko rolland sutcliffe vassiliou 
theories underlying requirements engineering overview nature genesis 
st intl 
symp 
requirements engineering 
krogstie 
deeper understanding quality requirements engineering 
th international caise conference volume lecture notes computer science pages 
lawrence 
point really need formal requirements 
ieee software 

understanding quality conceptual modeling 
ieee software march 
pulman 
natural language processing requirements specifications 
anderson editors safety critical systems pages 
chapman hall 
pulman 
method controlling production specifications natural language 
computer journal 
maiden 
reuse oriented requirements engineering nature 
acm sigsoft software engineering notes july 
meyer 
formalism specifications 
ieee software january 
francez 
automatic translation natural language system specifications temporal logic 
proceedings cav number lecture notes computer science pages 
holm 
capturing information systems requirements enterprise speech act modeling 
th international caise conference volume lecture notes computer science pages 
pohl 
dimensions requirements engineering framework applications 
information systems 
rolland 
natural language approach requirements engineering 
th international caise conference volume lecture notes computer science pages 

english formal specifications 
computer journal 
