high capacity internet middleware internet caching system architectural overview gary tomlinson novell provo ut usa novell com previous studies measuring performance general purpose operating systems running large scale internet server applications proxy caches identified design deficiencies contribute lower expected performance scalability 
introduces high capacity proxy cache service built specialized operating system designed efficiently support largescale internet middleware 
suggests specialized operating systems better meet needs services general purpose counterparts 
concludes measured performance scalability proxy cache service 

previous studies shown general purpose operating systems lack key abstractions necessary large scale internet server applications 
study performance internet server applications general purpose operating system lower expect underlying hardware 
studies modeled implemented operating system extensions designed alleviate deficiencies 
microkernel provides execution semantics interfaces necessary reduce observed impedance mismatches design assumptions general purpose operating systems requirements internet server applications 
microkernel provides large scale resource provisioning execution contexts network connections persistent storage objects innovative semantics context scheduling event notification transport 
coupling key abstractions provided microkernel known finite state machine processing models novell developed internet caching system ics fast highly drew major novell provo ut usa novell com ron lee novell provo ut usa novell com scalable proxy cache architecture implemented microkernel technology 
outlines characteristics microkernel support systems constitute middleware platform 
presents core design model proxy cache service respect underlying platform 
presents series performance measurements demonstrate performance scalability ics service 

operating system platform operating system platform host ics service roots specialized operating system similar concept exokernel 
platform utilizes fundamentally different design center typically general purpose operating systems unix 
kernel processes rigidly separated 
services applications implemented loadable modules extend system 
loadable modules resource context resources attached including provided operating system memory interrupts points schedulable entities event messages 
second loadable modules may run supervisor memory protected user memory 
rudimentary support provided trap quarantine faulty supervisor memory loadable modules complete fault containment provided user memory modules 
third handles resource points file descriptors 
typical unix system support file descriptors process system practical limit imposed 
constrained primarily memory algorithms components 
block diagram platform 
microkernel microkernel provides services roughly equivalent systems genre 
discuss services microkernel utilized ics 
process model loadable modules somewhat analogous unix processes differ fundamental aspects threads provided directly microkernel directly linked modules including microkernel tcp ip network fast path api microkernel directory security file system disk 
platform block diagram 
execution contexts known tasks may bound threads objects 
number tasks associated loadable module 
case ics proxy cache service tens thousands tasks loadable module 
task bound thread uses thread stack maintain state 
task bound object maintain self encapsulated persistent state 
turn object shares pool threads bound queue objects queue 
scheduler support provided non preemptive threads preemptive threads symmetric multiprocessing processor affinity 
classes objects fast todo run queue processor 
objects placed fast queues run fifo order processor current thread just prior thread switch 
objects programmed block 
run queue pool dedicated threads 
objects placed queues run fifo order threads servicing queue 
objects may block sparingly avoid stalling queue thread pool 
event messages event model call model described clark 
mechanism lower layer system signal event higher layer system means procedure call known event service routine call back routine 
event messages primarily service interfaces system resource advisories including volume mounts low memory exception handling 
inter process communication inter process communication ipc model organized core linking facilities provided loader 
case intra address space resolution direct link established representing null rpc provider consumer 
case inter address space resolution rpc stubs generated behalf provider server stub consumer client stub 
inter address space rpc mechanism uses call gate provides necessary marshalling parameters 
platform services microkernel may nucleus system doesn constitute platform 
standard services provided establish middleware platform 
fast path api service model platform services subscribe 
differs substantially file socket system call interfaces provided unix 
implemented directly ipc event message systems provided microkernel 
second completely asynchronous event completion 
third supports vectored direct unified buffering standard part shipping product years contrast papers subject 
provides resource handles file descriptors 
network service provides network access comprehensive set lan wan topologies including ethernet fast ethernet gigabit ethernet fddi token ring frame relay atm 
tcp ip service provides tcp udp transport applications services 
ip provides additional functionality routing transparent proxy routing network address translation ipsec secure channels 
extended policy management provided allows application control packet merging transmission checksum caching case intelligent adapters adapter dma buffer transfers optional adapter checksum processing 
disk service provides access comprehensive set mass storage media including ide scsi usb 
file service provides comprehensive file services including support multiple volumes multiple spindles multiple name spaces 
intrinsically supported name spaces include microsoft dos microsoft windows microsoft windows nt apple macintosh berkeley unix 
directory security service provides authentication configuration system policy system management services 
support provided public key infrastructure schema policy frameworks ldap 
objects organized hierarchical containers unified access control model 
replication directory database supported 

ics service model investigating multi threaded event driven server models came previous studies thread process connection servers ncsa apache scalable event driven servers harvest squid 
execution model decided hybrid execution model uses thread tasks monitor operations object tasks eventdriven proxy cache service finite state machines 
tasks associated single loadable module 
illustrates execution contexts employed ics 
monitor threads supervisor memory microkernel loadable module monitor threads 
execution contexts 
quiescent state objects activated state objects running state objects queue thread pool tasks need run frequently needed support system 
may block yield necessary complete 
chose tasks bound threads monitor activities system configuration system console web console snmp agents 
finite state machines tasks need run real time pseudo real time 
great number thousands run concurrently 
short lived existing duration single transaction 
chose build object tasks design principles asynchronous event driven processing fast shuttle activation events quiescent state objects state processing avoid blocking multiprocessing processor bound activities 
execution context states quiescent state 
tasks waiting event said quiescent state 
hold execution context associated objects scheduled activation event occurs 
activated state 
tasks scheduled running said activated state 
run fifo order available pool thread 
running state 
tasks bound thread said running state 
hold execution context thread running avoid blocking terminate transition new state 
transaction service components proxy components comprised series finite state machines linked chains process requests 
illustrates ics component architecture 
connection manager provides network communication management client server proxies 
substantial capability added network service provided tcp ip including data transfer file system cache buffers network channels flow control policy management tcp network event multi homed server load balancing availability monitoring socks ssl channel processing 
object cache manager manages caching policies ram cache 
acts broker coordinating ram cache object store client proxies necessary service cache requests server proxies 
cache object store cos manages persistent storage cached objects 
responsible migrating objects ram cache disk 
operates independent platform standard file system directly utilizing disk system 
component addition system earlier versions standard file system persistent storage 
previous studies measuring performance web proxy caches identified persistent storage system principal bottleneck performance scalability 
principally due poor spatial locality file system layout temporal locality cache working set classic file systems designed meet 
cos specifically designed operational requirements temporal cache storage system 
features cos design include increased disk efficiency 
read write code paths optimized increase efficiency disk drives participating cache 
similar reductions create delete paths 
optimizations designed allow object store single disk efficiently take full advantage multiple drives multiple channels 
improved spatial locality 
organization content disk optimized html xml source documents embedded objects located region disk 
optimization possible provide automatic read ahead capabilities requesting user agents composite pages 
server proxies dns ftp https icp filter framework connection manager ssl socks tcp ip network client proxies dns ftp gopher https icp fast path api microkernel object cache mgr cache object store disk 
ics block diagram 
directory security file system server proxies communicate user agents 
act servers operating behalf web servers 
requests user agents processed dispatched cache manager processing 
server application protocol 
currently server proxies dns acceleration ftp ftp acceleration acceleration https icp 
client proxies communicate web servers 
requests web servers behalf cache manager cache misses cache refreshes pass conditions 
client proxy application protocol 
currently client proxies dns ftp gopher https icp 
filter framework provided access control filtration content distillation 
provides filter module extensions similar available 
chose efficient scalable process model execution external process model cgi fastcgi 
intrinsic filters provided system access control pics rating labels 
pics ratings loaded system rules generated administrator third party pics label providers 
access control granularity provided individual identity group identity dns host name ip address ip subnet 

measured performance past years number performance scalability measurements performed ics 
established benchmarks web server acceleration proxy cache performance measurements obtained 
live deployment system provides real world sample scale points 
web acceleration benchmark study measuring peak performance web acceleration reverse proxy standard workload ics predecessor capable servicing url objects seconds throughput mbits sec 
earlier benchmark submission spec demonstrated earlier versions system capable high performance 
studies operate controlled lab environments ascertain peak acceleration performance capability 
instance studies ics times scalable commercial systems 
properly configured web accelerator serves majority hit rate ram results isolate network channel cache disk showcase performance ics unified buffering 
proxy cache benchmark contrast study mentioned previous section performed study measured steady state working set far greater fit ram 
done benchmark tool large workload derived production logs zipf distribution data set size gb 
conditions ics capable servicing url objects second 
ics ability service high rates requests directly due cos allowed improve performance standard file system 
completed study done national laboratory applied network research measured steady state performance proxy caches constant offered request rate uniform popularity model 
conditions utilize persistent connections ics capable servicing requests second degradation response time 
live proxy cache deployment ics predecessor production service utah education network past years 
time graciously participated numerous pilot experiments produced empirical data studies 
studies describes single proxy cache supporting workstations daily user population averaged concurrent persistent connections school hours 

research development project described part ongoing effort produce large scale internet middleware applications services hosted novell microkernel platform 
ongoing research activities 
exploring suitability platform middleware services including additional application proxies brokers 
specifically prototyping data stream distillation applications operate inter positioned filters running conjunction application proxies 
fox advocated java multi tier web applications 
exploring suitability java middleware applications conjunction advanced java virtual machine 
proxy cache service capable saturating elements industry standard hardware pci bus lan controllers disk controllers disk channels 
scale single system node prototyped cooperative service clustering evaluating controlled deployment 

discussed ics proxy cache service capable serving tens thousands concurrent web users 
service hosted specialized operating system designed meet rigorous demands large scale internet middleware services 
described measured performance scalability significantly proxy cache services running generalpurpose operating systems 

operating system platform ics result people efforts numerous list 
go anonymous referees thoughtful comments bill cox chip webb provided valuable comments feedback earlier drafts 

almeida cao measuring proxy performance wisconsin proxy benchmark 
proceedings rd international www caching workshop tf cache meeting 
june 
available ja net events workshop cao ps almeida cao providing differentiated quality service web hosting services 
proceedings st workshop internet server performance june 
available www cs wisc edu cao final versions ps 
anderson pasquale performance container shipping system 
proceedings fifteenth acm symposium operating system principles page copper mountain dec 
apache organization 
apache server project 
available www apache org banga druschel mogul better operating system features faster network servers 
proceedings st workshop internet server performance june 
available www cs wisc edu cao gaurav ps 
ceres douglis feldmann glass rabinovich web proxy caching devil details 
proceedings st workshop internet server performance 
june 
madison wi 
available www cs wisc edu cao final versions anja ps danzig neerdaels schwartz worrell 
hierarchical internet object cache 
proceedings usenix technical conference 
jan available www usenix org publications library proceedings sd danzig html clark structuring systems calls 
proceedings th acm symposium operating system principles pages 
dec 
danzig architecture deployment 
proceedings rd international www caching workshop tf cache meeting june 
available ja net events workshop pdf 
feeley measured access characteristics world wide web client proxy caches 
proceedings usenix symposium internet technology systems december 
available www usenix org publications library proceedings usits html dmtf organization 
directory enabled networks den 
available www dmtf org spec html fox database web servers pragmatic web 
proceedings st workshop internet server performance june 
available www npac syr edu users gcf working wisc ps micro kernel architecture key modern operating system design 
unix review 
november 
available ftp ftp chorus fr pub reports cs tr ps hamilton spring nucleus microkernel objects 
proceedings summer usenix conference pages oh june 
ford solo internet public key infrastructure certificate crl profile 
ietf rfc 
available ftp ftp isi edu notes rfc txt 
ietf organization 
policy framework policy working group 
available www ietf org html charters html jones leach draves barrera modular real time resource management operating system 
proceedings fifth workshop hot topics operating systems hotos orcas island wa 
may 
engler ganger hunt mazieres grimm mackenzie application performance flexibility exokernel systems 
proceedings sixteenth symposium operating system principles saint malo france 
oct 
lee tomlinson workload requirements high capacity proxy cache design 
progress th international web caching workshop march 
available www ircache net cache workshop papers lee ps gz 
major powell overview operating system 
proceedings usenix winter technical conference january 
available www usenix org publications library proceedings sf html 
major specialized operating system design novell microkernel 
preparation 
major direct unified framework employed 
preparation 
microsoft 
internet server api 
available www microsoft com win dev htm microsoft 
web capacity analysis tool 
available msdn microsoft com subscriptions index jan universal development asp 
mogul operating system support busy internet servers 
proceeding fifth workshop hot topics operating systems hotos orcas island wa 
may 
national center super computing applications ncsa university illinois 
common gateway interface 
available ncsa uiuc edu cgi national center super computing applications university illinois 
ncsa httpd server 
available ncsa uiuc edu national laboratory applied network research 
squid internet object cache 
available squid nlanr net netscape netscape api function 
available developer netscape com docs manuals enterprise htm novell services internet acceleration software 
available www novell com novell novell demos hits second web server acceleration 
novell research note october 
available www novell com pdf 
novell internet caching system 
available www novell com products nics novell single proxy server supports seat network utah schools 
novell research note december 
available www novell com html open market fast cgi 
available www fastcgi com pai druschel zwaenepoel io lite unified buffering caching system 
technical report tr rice university cs dept houston tx 
available www cs rice edu vivek io lite tr ps ritchie thompson unix time sharing system 
bell system technical journal 
wessels chisholm ircache web cache bake official report 
proceedings th international web caching workshop march 
available ircache net report ps gz khalidi 
efficient zero copy framework unix 
technical report tr sun microsystems laboratories may 
available www com technical reports tr ps standard performance evaluation 
specweb results hp hits specweb ops sec 
web server acceleration mhz lh may 
available www spec org osg web results res web html 
wahl howes lightweight directory access protocol 
ietf rfc 
available ftp ftp isi edu notes rfc txt world wide web consortium 
pics label distribution label syntax communication protocols version 
rec october 
available www org tr rec pics labels 
ziff davis 
available www com html 
