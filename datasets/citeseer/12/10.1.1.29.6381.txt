negative selection niching artificial immune system network intrusion detection kim peter bentley department computer science university college london gower street london wc bt phone fax mail kim bentley cs ucl ac uk presents negative selection algorithm niching artificial immune system network intrusion detection 
starts introducing advantages negative selection algorithm novel distributed anomaly detection approach development network intrusion detection system 
discussing problems existing approaches negative selection network intrusion detection presents modified negative selection algorithm niching shows diversity generality requires computation time 
network packet data introduced novel genotype encoding scheme handle data corresponding fitness function explained 
biological immune system successful protecting human body vast variety foreign pathogens 
growing number computer scientists carefully studied success competent natural mechanism proposed computer immune models solving various problems including fault diagnosis virus detection mortgage fraud detection dasgupta 
various areas intrusion detection vigorous research area employment artificial immune system examined dasgupta somayaji hofmeyr forrest 
main goal intrusion detection detect unauthorised misuse abuse computer systems system insiders external intruders 
automated intrusion detection systems particular system network intrusion detection known network intrusion detection system ids monitors number hosts network audit trails multiple hosts network traffic 
usually comprised main components anomaly detector misuse detector 
anomaly detector establishes profiles normal activities users systems system resources network traffic services detects intrusions identifying significant deviations normal behaviour patterns observed profiles 
misuse detector defines suspicious misuse signatures known system vulnerabilities security policy 
component probes misuse signatures auditing trails 
currently network ids developed diverse approaches 
remain unresolved problems build effective network ids kim bentley 
approach providing solutions problems previous kim bentley identified set general requirements successful network ids design goals satisfy requirements distributed lightweight 
addition kim bentley introduced number remarkable features human immune systems satisfy design goals 
anticipated adoption features help construction effective networkbased ids 
proposes negative selection niching artificial immune system developing effective network ids 
artificial immune model network intrusion detection kim bentley consists different evolutionary stages negative selection clonal selection gene library evolution 
stages stage negative selection investigated 
efficient implementation negative selection niching feature artificial immune systems 
organised follows section discusses negative selection algorithm originally devised forrest hofmeyr somayaji niching mechanism artificial immune system smith forrest perelson solution identified current negative selection problems 
section introduces modified negative selection niching shows employed network intrusion detection 
section describes details network traffic packet data 
section detailed implementation points including genotypes phenotypes genetic operators fitness functions provided 
concludes briefly describes 
related basic idea human immune system ability distinguish self normal non self abnormal 
human body various detector cells called antibodies continuously generated distributed body 
distributed antibodies monitor living cells detect non self cells called antigens invading human body 
main procedure performed evolutionary stages described stage plays different significant role making immune system function successfully kim bentley 
negative selection human immune system important feature human immune systems ability maintain diversity generality 
able detect vast number antigens smaller number antibodies 
order possible equipped useful functions kim bentley 
function development mature antibodies gene expression process 
human immune system gene libraries types organs called thymus bone marrow 
new antibody generated gene segments different gene libraries randomly selected concatenated random order see 
main idea gene expression mechanism vast number new antibodies generated new combinations gene segments gene libraries 
gene library antigen antibody gene expression process mechanism introduces critical problem 
new antibody bind harmful antigens essential self cells 
prevent serious damage human immune system employs negative selection 
process eliminates immature antibodies bind self cells passing thymus bone marrow 
newly generated antibodies bind self cell released thymus bone marrow distribute human body monitor living cells 
negative selection stage human immune system important assure generated antibodies attack self cells 
negative selection algorithm clear role negative selection human immune system eliminate harmful antibodies shows important features help devise effective anomaly detection algorithm 
conventional anomaly detection algorithms generally establish normal behaviour monitored system spot significant deviations established normal characteristics 
antigen detection mechanism antibodies follows conventional anomaly detection algorithm way shows strengths conventional algorithm 
forrest forrest hofmeyr somayaji proposed negative selection algorithm various anomaly detection problems 
algorithm consisted phases defining self generating detectors monitoring occurrence anomalies 
phase defines self way anomaly detection approaches establish normal behaviour patterns monitored system 
words regards profiled normal patterns self patterns 
second phase generates number random patterns compared self pattern defined phase 
randomly generated pattern matches self pattern pattern fails detector removed 
detector pattern monitors subsequent profiled patterns monitored system 
monitoring stage detector pattern matches newly profiled pattern considered new anomaly occurred monitored system 
negative selection algorithm successfully applied detect computer viruses forrest tool breakage detection time series anomaly detection dasgupta 
practical results haeseleer forrest helman showed advantages negative selection novel distributed anomaly detection approach 
formidable features novel approach define specific anomalies detected require prior knowledge anomalies 
feature allows able detect previously unseen anomalies 
addition detection distributed local 
trait originates aggregation distributed independent detector detection 
say individual detector contains subset patterns needed describe existing anomalies monitors small parts system 
detector recognises anomalies small section system monitors abnormal status diagnosed collection independent detection results 
distributed detection local detectors provides robustness system 
anomaly detection problem computer security computer virus detection intrusion detection especially requires robustness detection algorithm 
robust withstand attack system faults 
multiple detection points independent detectors uniqueness detector allow robust kim bentley forrest hofmeyr somayaji 
current negative selection algorithms show drawbacks 
significant problem excessive computational time caused approach building valid detectors 
results exponential growth computational effort size self patterns haeseleer 
difficult know number generated detectors large satisfy acceptable detection failure probability 
haeseleer derived formula presenting appropriate number detectors acceptable failure probability claimed derived formula allows negative selection algorithm tune detection accuracy cost generating storing detectors 
accomplished unrealistic assumptions take account false positive error independence self patterns 
furthermore considered binary patterns simple contiguous bit matching rule 
easy estimate appropriate number detectors negative selection algorithm employs numerical patterns sophisticated matching rule 
difficulty may force negative selection algorithm adopt arbitrary number detectors may cause unexpected low detection accuracy inefficient computation generating sufficient number detectors 
niching artificial immune systems new antibodies surviving negative selection assured self tolerant efficacy detect antigens unknown released bone marrow thymus 
new antibodies randomly generated verified self 
hold non self patterns antigen patterns 
order exclude detectors human immune system adopts evolution antibodies existing antigen patterns 
evolution process human immune system uses unique niching strategy maintain generality diversity antibodies part clonal selection process forrest 
human immune system niching process operated antibodies released thymus bone marrow 
artificial immune system remarkable feature human immune system maintains diversity generality antibodies applied improving efficiency negative selection algorithm 
evolution process originally suggested random generation detectors computational time reduced 
addition problem tuning appropriate number detectors may solved multimodal convergence feature niching strategy 
forrest niching strategy artificial immune system follows analogy human immune systems 
explored able detect common patterns randomly antigens ii discern maintain diverse antigen population 
model created population antibodies population antigens randomly 
ga evolve antibody population constant antigen population 
conforming niching strategy human immune system generation modified ga selects arbitrary size random sample antibody population single random antigen antigen population 
antibody sample matched selected antigen fitness score antibody showing highest match score increased fitness scores remain 
algorithm forrest showed antibodies evolved match antigens extent 
analysis result showed antibodies evolved finding common schema shared antigens 
various experiments observed algorithm sustain multiple inconsistent antibody patterns appear multiple peaks search space similarity antigens affect capability 
compared niching strategy artificial immune system fitness sharing algorithm smith forrest perelson 
comparison reported result antibody sampling mechanism niching strategy artificial immune system controls generality antibody sample size 
precise sample size decreases selective pressures moved generating population general antibodies 
artificial immune system network intrusion detection various artificial immune models suggested diverse purposes dasgupta previous kim bentley introduced salient functions human immune system respect network intrusion detection 
view normal activities monitored networks self abnormal activities non self design artificial immune system distinguishing normal network activities abnormal network activities 
network ids monitor network packets identified anomalies show critical signatures various network intrusions 
artificial immune system designed distinguishing normal network activities abnormal network activities expected detect various network intrusions 
primary ids secondary ids network packets router communicator communication flow detectors physical architecture artificial immune system view proposed novel artificial immune system network intrusion detection kim bentley see 
artificial immune system network intrusion detection consists primary ids secondary ids 
artificial immune system primary ids view equivalent bone marrow thymus generates numerous detector sets 
individual detector set describes abnormal patterns network traffic packets transferred monitored single network domain 
unique transferred local host 
view local hosts secondary lymph nodes detectors antibodies network intrusions antigens 
secondary ids local hosts detectors background processes monitor non self network traffic patterns observed network traffic patterns profiled monitored local host 
primary ids secondary ids communicators allow transfer information 
proposed artificial immune system sophisticated mechanisms human immune system embedded evolutionary stages gene library evolution negative selection clonal selection 
processes allow artificial immune system satisfy identified main goals designing effective network ids kim bentley 
negative selection algorithm network intrusion detection evolutionary stages comprising artificial immune system negative selection stage system generates diverse pre detector patterns selects mature detector patterns eliminating false pre detector patterns binding self patterns kim bentley 
apply negative selection algorithm firstly need generate pre detectors requires creation gene library containing various genes 
human immune system immature antibodies generated gene expression process gene segments different gene libraries randomly selected rearranged random order 
process genes gene libraries contain genetic information determines specific structure antibody binding area complementary structure existing antigen binding area 
genes usually inherited ancestors genes 
precise genes gene library human immune system initially knowledge antigens attempted attack ancestor body 
returning problem genes initial gene library artificial immune system genes selected fields profiles describe anomalous network traffic patterns 
initial genes set values fields observed previously known network intrusion simulated 
simulation network intrusion difficult task network administrators users monitored network operative 
reason employ forrest negative selection algorithm forrest generate pre detectors initially require network intrusion simulation 
described section algorithm consists stages defining self generating detectors monitoring occurrence anomalies 
step define self building profile normal network activities 
understanding detailed mechanisms network protocol security holes define fields profiles 
details fields described section 
general fields created profiles represent normal activities tcp ip protocol single connection 
second step negative selection algorithm randomly generates fields self profiles values fields randomly generated 
generated field values compared self profiles 
values common fields self similar pre detector removed 
scheme measure similarity discussed section 
surviving pre detectors detectors contain specific values originally defined fields self profile 
third step continuously generate profiles current network activities way compare field values detectors field values 
values fields new self detector similar self pattern regarded signature network intrusion 
negative selection algorithm niching negative selection algorithm provides strengths network intrusion detection necessary resolve excessive computational time caused random generation approach 
haeseleer introduced efficient detector generation algorithms linear time algorithm greedy algorithm 
basic idea provide efficient method enumerate candidate detectors allowing negative selection algorithm select valid detectors complete candidate detector set 
algorithm binary immune system simple continuous bits matching rule 
enumerate possible valid detectors counting recurrence potential bit binary strings self strings 
haeseleer suggested non binary alphabet immune system important investigation natural cases 
result algorithms negative selection algorithm network intrusion detection introduced adopts niching strategy smith forrest perelson artificial immune system build valid detector set 
modified negative selection algorithm niching simply replaces random generation pre detectors evolution pre detectors non self 
phase modified negative selection algorithm build self profiles 
research raw network traffic packets gathered packets parsed built self profiles 
profiles equipped previously identified fields distinguish normal abnormal network activities 
profiles encoded appropriate data representation 
second phase self profiles encoded negative selection algorithm niching starts generating detectors 
case number different self profiles created negative selection algorithm generate different detector set self profile 
second phase repeated self profile self profiles detector sets 
second phase algorithm generating detector set self profile summarised follows self profile corresponding detector set 
detector patterns generated random fitness values initialised zeroes 

sample detector patterns randomly selected generated detector patterns 

single self pattern randomly selected self profile 

detector sample compared selected self degree similarity measured 

fitness value single detector sample shows similarity increased 
fitness values detectors remain 

processes repeated typically times number antibodies smith forrest perelson 

fittest detector patterns selected parents genetic operators crossover mutation applied generate new detectors 

worst detector patterns deleted space children 

new detector population created including selected parent detectors offspring detectors generated 
processes repeated fitness values cease change 
finishing second phase performing negative selection algorithm builds new self profiles parsing newly captured network packets 
third phase detector patterns detector set compared patterns corresponding new self profile 
similarity detector pattern new self pattern predefined threshold algorithm generates alarm signal 
seen section niching strategy controls generality detector detector sample size 
practical reasons expect algorithm create general detectors detector match intrusion 
means detector bind intrusion exactly match number intrusions degree 
approach suitable network intrusion detection 
clearly see section length self chromosome search space self chromosomes form larger complex search spaces handled simple negative selection algorithm haeseleer 
furthermore expect computation time modified negative selection due evolution random search 
appropriate number detectors naturally determined multimodal convergence evolution process 
network traffic data section details network traffic data described 
data gathering data chosen research available iris cs uml edu network html 
set tcpdump data collected part information exploration project providing datasets publicly available exploration discovery collecting results participants 
network packet capturing tool tcpdump executed single gateway connects intra lan external networks 
captured tcp packet headers passed intra lan external networks intra lan 
different data sets generated 
tcp packet headers set collected intrusion occurs sets collected different intrusions simulated 
intrusions ip spoofing attack guessing rlogin ftp passwords scanning attack network hopping attack 
details attack signatures attack points different attacks available 
data originally fields tcpdump format time stamp source ip address source port destination ip address destination port data profiling tcpdump designed security purpose primitive fields build meaningful profile 
consequently stage data profiling program extract meaningful fields distinguish normal abnormal 
researchers identified security holes tcp protocols porras valdes fields profiles selected extensive study research 
usually defined describe activities single connection 
automated profile program developed extract connection level information tcp raw packets 
tcp packet headers original file collected chronological order 
original data dumped ms sql server dbms automated profile program implemented java jdbc accessing sql server 
profile fields connection established source port executing source host destination port operating destination host 
tcp protocol time source port process source host intends communicate destination port process destination port establishes connection 
tcp connection fields extracted connection identifier connection defined fields initiator address initiator port receiver address receiver port 
fields included profile order identify connection 
known port vulnerabilities network intrusions attack various types port vulnerabilities 
fields indicate initiator port receiver port potentially hold known vulnerabilities 
way handshaking tcp protocol uses way handshaking reliable communication 
network intrusions attack violate way handshaking rule 
fields check occurrences way handshaking errors 
traffic intensity network activities observed measuring intensity connection 
example number packets number kilobytes specific connection describe normal network activity connection 
total self profile fields types different fields 
profiling categories network profile fields extracted describe single connection activity data research limited apply initial profile 
limit data collected quite short time minutes 
brief period different connections established 
insufficient quantity data collected build different connection profiles 
necessary group different connections meaningful categories category sufficient number connections build profile 
consequently total number connections potential profile category counted 
data categorised different groups inter connection intra connection 
interconnection group connections established internal hosts external hosts intra connection group connections established internal hosts 
furthermore preserve anonymity internal hosts single fake address extra information external hosts network topology provided 
profiles specific hosts insufficient 
research profiles specific ports hosts considered 
various possible categories established connection number profile counted 
case apart profile class connections profile classes grouped different classes class connections 
different self profiles built 
class names number established connections shown table 
table class column inter connection shown internal host internal port number external host address external port number 
connection established 
class column intra connection internal host address internal port number internal host address internal port number 
indicates host address port number 
addition known shows ports range trusted ports 
ports restricted superuser program running root listen connection 
port numbers commonly ip services ftp telnet fixed belong range 
common network services employ authentication procedure intruders sniff passwords 
worthwhile monitor ports separately ports 
number connections profile category specific port hosts sufficient categories new classes wellknown port known port 
table self profiles inter connection class number connection known known known known intra connection known known implementation section describes detailed implementation negative selection algorithm niching proposed 
introduces genotype phenotype representation genetic operators fitness functions similarity detector pattern self pattern 
genotypes phenotypes section details handling continuous values suitable genotype encoding genotype representations mapping genotypes phenotypes described 
discretisation seen section network activity profile fields 
fields values fields continuous values fields discrete 
specifically continuous values fields show wide range values 
order handle various broad range values simple discretisation algorithm required 
discretisation algorithms available freitas 
algorithms require long processing times 
system report occurrence intrusions immediately simple discretisation algorithm requires computing time 
algorithm consists steps 
step range real values field sorted 
second step total cluster number variable number records cluster uniformly determined 
words lower bound higher bound cluster determined ensuring cluster contains number records simple algorithm provides different types discretisation non overlapping minimum overlapping maximum overlapping 
cluster boundary defined simply identical number data points crisp boundary defined simple method may reliable 
expect algorithm correct unreliability defining fuzzy boundaries 
precise continuous field self profile 
values number equal total number gathered records performing discretisation clusters 
means 
cluster 
number points cluster adjacent clusters 

relations points clusters represents non overlapping discretisation integer values real values performed shows minimum overlapping discretisation integer values performed describes maximum overlapping discretisation integer values performed 
minimum maximum overlapping discretisation real values overlapping range proportion number overlapping points 
number points cluster relations points adjacent clusters number points cluster 
shows minimum overlapping discretisation real values performed represents maximum overlapping discretisation real values performed 
summary non overlapping discretisation performs crisp clustering original idea described 
minimum overlapping discretisation integer values allows neighbour clusters overlap minimum element 
maximum overlapping discretisation integer values adjacent clusters overlap points apart element 
real values overlapping proportion predefined 
minimum overlapping discretisation allows neighbour clusters overlap predefined proportion maximum overlapping permits adjacent neighbours overlap remainders predefined overlapping proportion 
encoding simple discretisation algorithm uses fuzzy boundaries clusters certain cluster formed serious information loss 
result negative selection niching lets cluster evolve 
fixed boundary cluster lower bound higher bound cluster adaptively evolve 
order possible genotypes carefully designed follows 
genotypes consist genes gene represents field detector 
described section profile built fields number determines total number corresponding genes detectors 
gene comprises cluster number minimum offset number maximum offset number 
seen nucleotide alphabet cardinality values 
example gene indicates field profile number packets sent initiator 
field integer values values discretised clusters predefined cluster number 
discretisation performed cluster table generated 
contains intervals clusters indexed ascending sequential numbers 
field self profile corresponding cluster table nucleotide corresponding gene represents cluster number stored cluster table 
purpose cluster evolution offset table created cluster table 
shown table columns offset id offset point 
offset point shows actual value lower bound higher bound cluster moved 
instance second nucleotide gene corresponds offset id offset table 
offset point offset id shows 
lower bound cluster cluster number shown nucleotide changes original 
similarly original higher bound cluster changed offset point offset id third nucleotide 
gene detector gene cluster offset tables gene cluster table offset table id id interval offset point detector genotypes case offset points offset table dynamically determined considering variance points cluster 
discretisation algorithm creates clusters contain identical number points 
leads interval sizes cluster calculated higher bound lower bound various 
offset points determined considering various interval sizes 
precise total number offset points number offset points defined cluster defined number clusters 
oc set containing offset points belong cluster calculated number offset points cluster oc defined oc oc oc oc oc oc oc lower bound higher bound cluster shown offset points dynamically defined depending variance points individual cluster 
method permits lower bound higher bound cluster move offset point 
consequently cause lower bound cluster larger higher bound 
case bounds simply swapped 
dynamic genotype granularity discretisation tuned total number clusters offset points 
numbers set larger numbers genotypes expected specific clusters 
similarly nucleotides genes define offset numbers extended nucleotides 
total number clusters offset points starting negative selection algorithm chromosome consists fixed length nucleotides having alphabet cardinality 
nominal type field known source port indicates source port known cluster interval cluster table defined simply meaning group offset table generated 
mapping generation detectors self profiles application genetic operators performed genotype level measurement similarity selected detector pattern self pattern operated phenotype level 
difference negative selection algorithm forrest hofmeyr somayaji dasgupta 
usually performed evaluation procedure genotype level simple continuous bit matching rule 
order measure similarity genotypes generation mapped phenotypes 
step negative selection niching described section extended follows genotype detector sample mapped phenotype instructions cluster tables offset tables 
degree similarity phenotype detector selected self measured 
degree similarity measured phenotype level directly determines fitness values 
details fitness function described section 
fitness functions phenotypes mapped evolved genotypes represented form detector patterns 
shown field detector phenotype represented interval having lower bound higher bound field self phenotype described specific value 
step measuring similarity checks value field self pattern belongs corresponding interval detector phenotype 
value self pattern field included corresponding interval detector phenotype fields matched 
case degree similarity measured distance value self pattern field closer value lower bound higher bound 
bounds comprise interval corresponding field value detector pattern 
assigning distance similarity score individual field detector pattern total similarity score detector pattern calculated summing individual similarity scores 
noted summing score normalised 
detector number packet duration termination half closed self phenotype number packet duration termination normal detector phenotype self phenotype nominal type field fields matched maximum similarity score individual field assigned nominal field 
nominal type field information order different clusters 
uniform similarity score case 
genetic operators introduced section negative selection algorithm niching applies genetic operators crossover mutation 
fixed number cardinality represents genotype simple point crossover applied selecting random crossover point 
random mutation applied low probability 
described negative selection algorithm niching network intrusion detection 
existing negative selection algorithm analysed proposed modified negative selection algorithm niching anticipated advantages modified approach network intrusion detection discussed 
studies real network packet data introduced 
outlined number novel implementation aspects including novel genotype allowing evolution clusters evolution detectors fitness function evaluates phenotype level 
implementation details introduced various experiments currently performed 
particular experiments focus investigation complexity computation maintenance generality diversity evolved detectors 
partially supported korea international collaboration research funds ministry science technology korea 
haeseleer distributed approach anomaly detection acm transactions information system security 
www cs unm edu patrik dasgupta overview artificial immune systems applications dasgupta 
editor 
artificial immune systems applications berlin springer verlag 
pages 
forrest genetic algorithms explore pattern recognition immune system evolutionary computation 
forrest self nonself discrimination computer proceeding ieee symposium research security privacy los alamos ca ieee computer society press 
www cs unm edu forrest papers html forrest hofmeyr somayaji computer immunology communications acm 
freitas generic set oriented primitives support data parallel knowledge discovery relational database systems 
ph thesis university essex uk july 
kim bentley human immune system network intrusion detection th european conference intelligent techniques soft computing aachen germany appear 
kim bentley artificial immune model network intrusion detection th european conference intelligent techniques soft computing aachen germany appear 

network intrusion detection ieee network 
porras valdes live traffic analysis tcp ip gateways proceeding isoc symposium network distributed system security 
www csl sri com emerald downloads html smith forrest perelson searching diverse cooperative populations genetic algorithms evolutionary computation 
immunology th ed saunders college publishing 
