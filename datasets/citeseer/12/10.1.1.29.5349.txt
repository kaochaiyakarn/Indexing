synchronization logics am sernadas cristina sernadas carlos caleiro departamento de matem atica ist av 
pais lisboa portugal email facs css math ist utl pt november motivated applications software engineering propose forms combination logics synchronization formulae synchronization models 
start reviewing satisfaction systems consequence systems step derivation systems theory spaces functorial relationships 
define synchronization formulae consequence systems provide categorial characterization construction 
illustration consider synchronization linear temporal logic equational logic 
define synchronization models satisfaction systems provide categorial characterization construction 
illustrate technique cases linear temporal logic versus equational logic linear temporal logic versus branching temporal logic 
lift synchronization formulae category logics consequence systems 
key words combination logics synchronization formulae synchronization models temporal logic equational logic 
software development process usually carried heterogeneous environment methods languages formalisms platforms 
universal formalism sight 
necessary provide combinations formalisms supporting different viewpoints 
particular specifications formalism seen lead theories appropriate logic institution necessary provide variety mechanisms combining different logics 
software engineering community started address problem relating structuring combining specification logics theoretical results see 
bulk contributions area combination logics different motivations see instance 
appear journal studia logica special issue combining logics numbers edited dov gabbay pirri 
motivated software engineering experience new techniques combining logics synchronization formulae synchronization models 
techniques reminiscent technique proposed winskel synchronizing processes actions leading constraint resulting behavior 
synchronizing formulae language combined logic subset cartesian product languages pair indicates logic interpreted logic viceversa 
synchronizing models language combined logic disjoint union languages class models resulting logic subset cartesian product classes models interaction logics imposed constraining class pairs models 
synchronization formulae studied level consequence systems language plus consequence models irrelevant 
synchronization models studied level satisfaction systems language plus models plus satisfaction 
reason start reviewing section satisfaction systems consequence systems step derivation systems theory spaces 
functorial relationships adjunctions categories special attention novel adjunction step derivation systems consequence systems 
step derivation systems necessary categorial characterization synchronization formulae 
theory spaces included completeness 
categories alternative universes define logics satisfaction systems hell consequence derivation systems earth theory spaces heaven 
instance logics institutions defined signature indexed categories satisfaction systems logics institutions defined signature indexed categories consequence systems 
avoid signature indexing technique typical institution approach 
sections synchronization techniques level instances logics section address problem synchronization level logics 
clearly tradition identify logic collection instances 
section presents mechanism synchronization consequence systems formulae 
section presents mechanism synchronization satisfaction systems models 
sections study example combining linear temporal logic systems unsorted equational logic systems 
section analyze detail combination linear branching temporal logic systems 
sections follow common structure motivation definition worked examples categorial characterization 
category theory helpful reading 
significant part grasped avoiding categorial concepts basically forget morphisms look categories classes functors maps avoiding completely categorial characterization subsections 
category theory recommend classical textbook mac lane 
foundational issues concerning instance categories classes adopt mac lane approach 
approaches see 
hell earth heaven review basic universes satisfaction systems consequence systems step derivation systems theory spaces shall need examine functorial relationships 
establish adjunction category consequence systems category step derivation systems traditional fixed point construction 
sequel set denotes category pointed sets 
objects category sets selected element morphisms total maps preserve selected objects 
similarly cls denotes category pointed classes 
review slight adaptation general notions satisfaction system satisfaction system morphism ideas 
definition satisfaction system triple hl fli ffl pointed set selected element ffl pointed class selected element ffl fl theta relation fm fl tg fl clearly language class models fl satisfaction relation formula true improper model satisfies formulae 
definition satisfaction system morphism hl fli hl fl pair hh ffl morphism set ffl morphism cls fl iff fl recall set morphisms preserve selected elements 

likewise morphisms cls note formula translation map reduct map contravariant 
prop definition satisfaction systems morphisms constitute category sat 
review notions consequence system consequence system morphism 
definition consequence system pair hl pointed set selected element map ffl ftg ffl gamma gamma reflexivity ffl gamma gamma idempotence ffl gamma psi gamma psi monotonicity 
clearly language formula true consequence operator 
properties consequence operator usual ones 
just point idempotence corresponds cut defining consequence relation 
definition consequence system morphism hl hl morphism set gamma gamma prop definition consequence systems morphisms constitute category csy 
sequel shall need notions step derivation system step derivation system morphism 
idea able obtain consequence system step derivation system usual fixed point construction functorial 
definition step derivation system pair hl deltai pointed set selected element delta map ffl delta ftg delta ffl gamma delta gamma reflexivity ffl gamma psi delta gamma delta psi monotonicity 
derivation systems similar consequence systems 
derivation operator idempotence property expected step operator 
definition derivation system morphism hl deltai hl delta morphism set delta gamma delta gamma prop definition derivation systems morphisms constitute category 
sake completeness picture introduce notions theory space theory space morphism 
definition theory space complete lattice omega definition theory space morphism omega omega map omega omega 
note joins meets exist theory space joins required preserved morphisms 
prop definition theory spaces morphisms constitute category tsp 
establish functorial relationships categories starting coreflection satisfaction systems consequence systems 
prop definition maps ffl hl hl gamma gamma lg selected element gamma gamma lg ffl hl hl hh gamma constitute functor csy sat 
prop definition maps ffl hl fli hl ffli ffl hl fli hl fl constitute functor sat csy 
clearly ffl denotes semantic entailment operator induced satisfaction relation hand gamma ffl gamma ffl gamma ffl iff model fl fl fl gamma fl 
theorem adjunction coreflection 
proof counit ffl fffl ffl hffl ffl defined follows hl fli ffl ffl id ffl ffl fl 
csy sat oo hl ffli hl ffli ffl hl fli hl oo hl oo universal property counit morphism ffl hl fli hl 
ffl hl ffli hl fli morphism sat ffl closed ffl ffl ffl preserve selected elements satisfaction condition immediate 

universal property see morphism sat unique csy ffl ffi 

unit hl id hl semantic entailment hl defined psi ffl iff psi gamma gamma gamma gamma qed expected close relationship categories csy reflection 
need recall fixed point result originally due tarski proof see details see 
theorem hu complete lattice monotonic map 
ordinal 
sequel denote lfp ordinal 
expect fixed point construction functorial 
prop definition maps ffl hl deltai hl gamma lfp delta gamma ffl hl deltai hl delta constitute functor csy 
proof clearly working complete lattice hl 
hl deltai consequence system clearly ftg due fact delta ftg delta monotonicity delta 
reflexivity immediate reflexivity monotonicity delta 
clearly lfp delta lfp delta gamma lfp delta gamma idempotence holds 
monotonicity easily follows monotonicity delta 

morphism csy start proving induction delta gamma delta gamma ordinal easily gamma delta gamma delta gamma gamma sets base case 
prove induction step successor ordinal ffl delta ffl gamma delta delta ffl gamma delta delta ffl gamma morphism delta delta ffl gamma induction hypothesis monotonicity delta 
prove delta gamma delta gamma limit ordinal delta gamma delta ffl gamma ffl delta ffl gamma ffl delta ffl gamma ffl delta ffl gamma ffl induction hypothesis delta gamma immediate gamma gamma qed prop definition maps ffl hl hl ffl hl hl constitute functor csy 
theorem adjunction reflection 
proof unit fj id hl deltai 

hl deltai hl deltai morphism obviously gamma gamma lfp delta gamma 
delta gamma gamma monotonicity delta definition fixed point 

universal property morphism unique morphism csy ffi 
morphism csy prove induction delta gamma gamma ordinal base case easily delta gamma gamma gamma reflexive 
prove induction step successor ordinal ffl delta ffl gamma delta delta ffl gamma delta ffl gamma morphism gamma induction hypothesis monotonicity gamma idempotence 
prove delta gamma gamma limit ordinal delta gamma delta ffl gamma ffl fh delta ffl gamma ffl gamma induction hypothesis definition join 

commutativity uniqueness clearly ffi uniqueness follows fact id 
counit ffl hl id hl consequence operation hl gamma lfp gamma 
idempotent gamma lfp gamma 
qed establish reflection categories consequence systems theory spaces 
prop definition maps ffl hl hf gamma gamma lg ffl hl hl gamma gamma constitute functor csy tsp 
clearly join theories closure union 
meet simply intersection need close intersection theories theory 
prop definition maps ffl omega omega fa omega agi selected element ffl omega omega constitute functor tsp csy 
theorem adjunction reflection 
proof unit fj hl 
hl hl morphism csy gamma gamma lg selected element preserved ftg gamma ff gammag ff gammag gamma gamma gamma gamma 
universal property morphism csy unique ffi gamma gamma 

counit ffl omega isomorphism ffl omega inverse ffl gamma omega fb omega ag 
qed sat csy oo fflffl tsp oo oo picture sat csy tsp functors 
synchronizing consequence systems motivation consequence systems say linear temporal logic lt unsorted equational logic eq respectively 
combine systems order able system kinds reasoning 
furthermore imposing certain formulae counterparts vice versa results say equational reasoning propagated side derivations temporal reasoning 
main ideas underlying proposed synchronization consequence systems formulae language combined system included cartesian product languages pairs may want impose instance equation eq goes formula lt formula counterpart logic impose goes logic envisaged consequence operator resulting system allow mixed reasoning advantage consequence operators bridges logics established pairs 
instance gamma fht ha eq grounds derive substitution reach pair ha lt grounds purely propositional reasoning derive reach pair ha xi 
example detail formal definition synchronization consequence systems formulae 
synchronization formulae defining formally envisaged synchronization construction need recall products exist set product cartesian product theta selected element ht usual projections prop definition hl hl consequence systems 
ff theta ff theta morphisms set ff ff synchronization formulae ff ff consequence system ff ff ffl hl ffl ff ff ffl gamma lfp delta gamma delta gamma gamma ff gamma ff gamma 
proof clearly delta reflexive monotonic 
ft ft ff ft ff ft ff ff 
clearly ht ff ff delta delta fht ig delta 
furthermore hl deltai ff ff ffl qed construction ff ff called formula synchronization maps 
combining consequence systems choice maps crucial 
guidelines useful choosing value ff 
play role counterpart 
formula represents applies mutatis mutandis ff clearly imposing ff ff ht obtain extreme case interaction prescribed systems 
proposition formula synchronization maps morphisms csy ffl ff ff ff ffl ffl ff ff ff ffl proof clearly ff gamma ff ff gamma delta ff gamma ff gamma qed consequences preserved resulting system ff ff ffl note extension necessarily conservative may infer combined system language consequence systems 
course case interaction resulting extension conservative 
worked example lt versus eq propositional linear temporal logic recall propositional linear temporal signature pi just set propositional symbols 
set pi formulae inductively defined follows pi pi pi pi pi pi gl pi sake simplicity operator common linear temporal logic 
sequel feel free known abbreviations derived propositional connectives 
abbreviation 
propositional linear temporal logic signature pi establish consequence system clt pi hl pi pi follows ffl pi set pi formulae selected element ffl gamma pi set pi formulae derived gamma 
describe detail derivation calculus temporal logic see instance 
useful recall examples derivations ffl pi ffl pi ffl pi 
unsorted equational logic recall unsorted equational signature sigma family sigma pairwise disjoint sets sigma set operation symbols arity recall sigma equation triple hx set variables disjoint sigma sigma terms elements sigma 
may write set variables occurring unsorted equational signature sigma establish consequence system ceq sigma hl sigma sigma follows ffl sigma set sigma equations selected element xi ffl gamma sigma set equations derived gamma 
describe detail derivation calculus equational logic see instance 
useful recall examples derivations ffl sigma ffl fu sigma ffl fu sigma clearly term obtained replacing simultaneously uniformly occurrence variable term synchronization formulae assume consequence systems clt pi ceq sigma proviso fa sigma pi 
practical motivation combine temporal reasoning clt pi equational reasoning ceq sigma order specify behavior object time dependent attribute formula intended assert value equational reasoning deriving assertions values 
temporal reasoning deriving assertions behavior 
choose formula synchronizing maps follows ffl ff pi pi theta sigma ff xi ffl ff sigma pi theta sigma ff hx hx ii pt ht hx ii clearly want pass assertion temporal side equational side definition ff putting temporal formula hand want pass assertions values temporal side ground equations put corresponding equivalences 
see example mixed deduction clt pi ff ff ffl ceq sigma easy verify resulting consequence system ha xi fha xi ht ig letting gamma fha xi ht ig ffl gamma ffl gamma sigma ffl ff gamma sigma ffl delta gamma ffl similarly ha xi delta gamma ffl delta gamma ffl delta gamma pi ffl ha xi ff delta gamma pi ffl ha xi delta gamma ffl ha xi gamma categorial characterization pointed formula synchronizing maps ff ff morphisms csy 
characterize nature ff ff ffl category csy 
consider case formula synchronizing maps introduce interaction proposition thetal thetal morphisms set ffl ffl ht ffl coproduct injections proof 
morphisms csy clearly formula synchronization map morphisms 
universal property consequence system morphisms 
consider map ffl 
course consequence system morphism unique ffi ffi qed diagram depicts universal property coproduct respect formula synchronization morphism set ff ff ff ff ff ff ff 
ff yy ff fflffl ff ff ff ff ffl ff ff unique morphism ff ff ffi ff ff ff ffi ff proposition ff theta ff theta set consequence system morphisms morphism ff ff ffl csy ffl ffi ff ffl ffi ff proof straightforward consequence universal property coproduct fact ff ff epimorphism 
qed remains see consequence system ff ff ffl obtained categorial construction general case maps 
relationship csy categorial construction want carried category 
prop definition maps ffl hl deltai ffl hl deltai hl delta constitute functor set proposition hl deltai map set delta gamma ft delta morphism hl deltai hl delta cocartesian hl deltai delta gamma gamma delta gamma gamma proof 
hl delta derivation system reflexivity immediate definition delta monotonicity straightforward fact gamma gamma gamma psi gamma psi delta ft ft delta gamma ft ft delta delta 

morphism csy easily delta gamma delta gamma gamma delta gamma 

universal property see assume hl deltai hl delta morphism csy morphism set ffi 
unique morphism csy ffi just prove morphism csy 
delta gamma 
cases 
firstly assume delta gamma gamma 
delta gamma gamma delta gamma gamma 
delta gamma gamma delta gamma gamma delta gamma 
secondly assume gamma gamma delta gamma 
qed denote codomain cocartesian morphism hl deltai 
proposition ff ff ffl ff ff 
set hl deltai hl deltai fflffl 
fflffl hl delta universal property cocartesian morphism hl deltai hl deltai hl deltai case delta gamma ft delta 
proof note ff ff gamma gamma fi ff gammag fi ff gammag 
ff ff gamma gamma gamma gamma 
ff ff hff ff deltai delta gamma gamma ff ff ff ff gamma gamma applies ff ff ht iff ff iff ff ff ff ff ffl qed synchronizing satisfaction systems motivation satisfaction systems say linear temporal logic lt equational logic eq respectively 
combine systems order able single satisfaction system formulae 
models pairs putting model satisfaction systems 
synchronization purposes just forbid pairs 
instance may want impose keep pairs hm fl sigma fl pi order achieve model level interaction similar described previous section formula level 
synchronization models defining formally envisaged synchronization construction need recall coproducts exist set coproduct disjoint union ft ft plus selected element expected injections clearly 
need products cls product class theta selected element hz usual projections definition hl fl hl fl satisfaction systems 
theta synchronization models satisfaction system ffl hl fli ffl ffl hm fl iff fl construction called model synchronization relation 
combining satisfaction systems choice relation obviously crucial 
clearly interaction desired chosen theta proposition pairs morphisms sat ffl hi ffl ffl hi ffl proof result immediate definition fl hm provided hm qed corollary maps morphisms csy ffl ffl ffl ffl 
consequences preserved resulting consequence system ffl 
note extension necessarily conservative may infer combined system language consequence systems 
course case interaction resulting extension conservative 
worked example lt versus eq models propositional linear temporal logic signature pi pi model improper model map pi indicating instant propositional symbols hold proper model satisfies formula written fl pi iff ffl true provided ffl provided pi ffl pi provided ffl fl pi pi provided ffl fl pi provided ffl fl pi provided 
proper model satisfies formula written fl pi iff fl pi signature pi establish satisfaction system slt pi hl pi pi fl pi pi class pi models 
models unsorted equational logic signature sigma sigma model sigma algebra hu sigma selected model taken algebra domain singleton 
variable assignment ae value term sigma ae written ae inductively defined usual 
algebra satisfies equation hx iff ae ae variable assignment ae signature sigma establish satisfaction system seq sigma hl sigma sigma fl sigma sigma class sigma algebras 
synchronization models assume satisfaction systems slt pi seq sigma proviso fa sigma pi 
practical motivation combine slt pi seq sigma order specify behavior object timedependent attribute formula intended assert value choose model synchronizing relation follows ffl hm ai iff fl pi fl sigma accept pairs hm ai equational model satisfies ground equation temporal model satisfies corresponding equivalence attribute values 
worthwhile look example see resulting semantic entailment reflects intended interaction 
easy verify fa ffl hm ai fl fa ffl fl sigma definition fl ffl fl sigma soundness substitution eq ffl fl pi definition ffl fl pi definition fl ffl fl pi soundness propositional reasoning lt ffl hm ai fl definition fl 
worked example lt versus bt propositional branching temporal logic recall propositional branching temporal signature pi just set propositional symbols 
set pi formulae inductively defined follows pi pi pi pi pi xl pi gl pi gl pi sake simplicity quantified operators restricting branching logic proposed 
abbreviations useful 
ffl ffl 
signature pi pi model triple hw ffl set worlds ffl binary successor relation exists hw ffl pi map valuation propositional symbols worlds 
recall branch sequence fi fi hfi fi model satisfies formula written fl pi iff ffl true provided ffl provided pi ffl pi provided ffl fl pi pi provided ffl fi fl pi branch fi provided ffl fi fl pi branch fi provided ffl fi fl pi branch fi provided 
model satisfies formula written fl pi iff fl pi signature pi establish satisfaction system sbt pi hl pi pi fl pi pi class pi models 
clearly selected improper model corresponds case set worlds empty unique map pi 
synchronization models assume satisfaction systems slt pi sbt pi proviso pi pi practical motivation combine slt pi sbt pi way linear properties branch branching model related branching properties 
choose model synchronizing relation follows ffl hm mi iff improper linear model exists branch fi fi pi accept pairs hm mi linear model proper correspond branch illustrate means example kind interaction achieved synchronization 
easy verify pi ffl fact hm mi fl fp ffl fl pi definition fl ffl fi fl pi fp definition fl pi ffl fi fl pi definition fl pi fi ffl fi definition fl pi fi ffl definition ffl fl pi definition fl pi ffl fl pi definition fl pi ffl fl pi definition fl pi ffl hm mi fl definition fl provided proper corresponding branch fi 
result trivial 
course branching linear extrapolation properties possible kind interaction 
see go opposite direction 
assume existence propositional symbol ffi pi fw ffi fw consider model synchronizing relation ffl hm mi ffi iff improper exists branch fi fi pi accept pairs hm mi improper corresponds branch initial state uniquely determined propositional symbol ffi 
possible check pi ffi ffl fact hm mi fl ffl fl pi definition fl ffl fi fl pi definition fl pi ffl fi fl pi definition fl pi fi ffl similarly fl pi definition fl ffl fl pi definition fl pi ffl definition fl pi ffl fi definition ffl fi fl pi definition fl pi fi ffl fi fl pi definition fl pi fi ffl fi fl pi definition fl pi fi ffl fl pi ffi definition fl pi hypothesis ffi ffl hm mi fl ffi definition fl provided proper corresponding branch fi improper result immediate 
model synchronization relations considered 
instance restricting acyclic tree branching models considering existence positional symbol distinguishing exactly worlds visited branch considered enable expression inevitability properties selected branch branching model rendering corresponding linear fairness properties 
similar technique instance 
refrain details full study possible synchronizations particular case scope 
categorial characterization pointed pairs hi hi morphisms sat 
characterize nature ffl category sat 
consider case model synchronizing relation introduces interaction theta proposition system thetam ffl coproduct injections hi hi proof 
hi hi morphisms sat clearly hi thetam 
morphisms 
universal property satisfaction system morphisms 
consider thetam ffl course satisfaction system morphism unique ffi hi ffi hi qed diagram depicts universal property coproduct respect model synchronization morphism set theta cls op hi hi hl theta hl ri pair hid inclusion map 
proposition theta satisfaction system morphisms morphism ffl sat ffl ffi hi ffl ffi hi proof straightforward consequence universal property coproduct fact hi hi epimorphism epi formulae mono models 
qed remains see satisfaction system ffl obtained categorial construction general case relation way similar described previous section case formula synchronization 
hi hi hi zz hi fflffl hid ffl hid unique morphism hid ffi hi hi hid ffi hi hi prop definition maps ffl hl fli hl mi ffl hl fli hl fl constitute functor sat set theta cls op proposition hl fli sat hl mi hl set theta cls op surjective implies fl iff fl morphism hl fli hl fl cocartesian hl fli fl iff fl 
proof 
hl fl satisfaction system clearly fl defined 
conditions straightforward fact morphism set theta cls op 
morphism sat trivial definition fl 
universal property assume hl fli hl fl morphism sat hl hl morphism set theta cls op ffi 
unique morphism sat ffi just prove morphism sat 
fl iff fl iff fl iff fl iff fl iff fl iff fl qed denote codomain cocartesian morphism hl fli 
proposition ffl hid 
proof obviously applies id bijection 
clearly satisfaction relation fl hid fl iff fl fl satisfaction relation fl iff fl desired equality ffl hid holds 
qed synchronizing logics sake simplicity consider logics earth synchronization formulae 
expect trouble adapting ideas logics hell synchronization models 
category logics define logic indexed class instances consequence systems indexes take values base class 
definition logic map class base 
definition logic morphism pair hk ffi ffl map ffl ff fff family morphisms csy 
tempted definitions functorial 
define functor category csy establishing notion close concept entailment system 
attempt functor definition morphism 
feasible want keep possibility non conservative combinations logic morphism combined logic logics 
possibility restrict morphisms allow instances case consequence systems logic 
prop definition logics morphisms constitute category log 
definition synchronization logics earth definition ffl logics ffl ff fff ff theta ff ffl ff fff ff theta ff phi phi oe fflffl fflffl oo ff csy hk ffi hk ffi logic morphism provided map ff morphism csy synchronization formulae families ff ff logic ff ff ffl theta ffl ff ff ffl hb ff ff ffl 
proposition pairs morphisms log ffl hp ff ff ff ffl ffl hp ff ff ff ffl example linear temporal logic versus equational logic logic lt maps signature pi consequence system clt pi base lt class propositional linear temporal logic signatures 
logic leq maps signature sigma consequence system ceq sigma base beq class unsorted equational logic signatures 
choose formula synchronization families ffl ff pi sigma pi pi theta sigma ff pi sigma xi ffl ff pi sigma sigma pi theta sigma ff pi sigma hx hx ii pt fa sigma pi ht hx ii concluding remarks motivated software engineering applications developed alternative techniques combining logic systems synchronization formulae consequence systems synchronization models satisfaction systems 
provided categorial characterizations constructions cocartesian liftings 
case necessary carry categorial construction category step derivation systems 
illustrated techniques simple sufficiently meaningful examples 
outlined technique synchronizing logics top technique synchronizing consequence systems 
adopted categorial approach useful order assess universality constructions 
instance ask proposed construction synchronizing formulae right 
fact able establish universal property indicates canonical defined context 
proposed techniques general sense assumed systems logics combined establish monotonic consequence operators 
working developments synchronization techniques establishing relationship obtaining results preservation relevant properties soundness completeness 
working categorial characterization fibring 
contrarily synchronization fibring allows mixing connectives logics formula 
categorial approach workable case fibring providing useful insights 
stage relationship fibring synchronization clear 
combination theory spaces finding suitable notion effective combination logics sense computability theory research issues interest 
evident variety combination techniques necessary dealing problems appear software engineering 
experimental needed practical application combination techniques identified literature methodological principles 
expect useful forms combination arise synchronization fibring 
acknowledgments grateful colleagues acl initiative discussions role categorial techniques computing 
grateful colleagues group cerioli jos fiadeiro till mossakowski pawlowski reggio giuseppe scollo andrzej tarlecki uwe wolter elena zucca discussed idea combining logics institutional setting 
express gratitude mark ryan pierre yves gave feedback early stages research 
partially supported praxis xxi project mat esprit iv working group aspire 
fiadeiro 
unifying theories different institutions 
haveraaen owe 
dahl editors trends data type specification pages 
springer verlag lncs 
barwise 
axioms model theory 
annals mathematical logic 
ben ari manna pnueli 
temporal logic branching time 
th acm symposium principles programming languages pages 
williamsburg va 
acta informatica 
blackburn de rijke 
combine logics 
studia logica 
print 
blass 
interaction category theory set theory 
gray editor mathematical applications category theory pages 
ams series contemporary mathematics 
burstall goguen 
putting theories specifications 
reddy editor proc 
th intl 
joint conf 
artificial intelligence pages cambridge massachusetts 
cerioli meseguer 
may borrow logic 
sokolowski editors mathematical foundations computer science pages 
lncs springer verlag 
fiadeiro sernadas 
structuring theories consequence 
sannella tarlecki editors trends data type specification pages 
springer verlag 
finger gabbay 
adding temporal dimension logic system 
journal logic language information 
finger gabbay 
combining temporal logic systems 
notre dame journal formal logic 
gabbay editor 
logical system 
oxford science publications 
gabbay 
overview fibred semantics combination logics 
baader schulz editors frontiers combining systems pages 
kluwer academic publishers 
goguen burstall 
institutions model theory specification programming 
journal acm 
goldblatt 
logics time computation 
csli 
second edition 
kracht wolter 
properties independently axiomatizable bimodal logics 
journal symbolic logic 
mac lane 
categories working mathematician 
springer verlag 

lassez nguyen sonenberg 
fixed point theorems semantics folk tale 
information processing letters 

extensions order logic 
cambridge university press 
meseguer 
general logics 

ebbinghaus editor proceedings logic colloquium pages 
north holland 
penczek 
temporal logic event structures 
fundamenta informaticae 
tarlecki 
moving logical systems 
haveraaen owe 
dahl editors trends data type specification pages 
springer verlag lncs 
tarski 
lattice theoretical fixpoint theorem applications 
pacific journal mathematics 
tarski 
concept logical consequence 
editor logic semantics metamathematics pages 
oxford clarendon press 
thomason 
combinations tense modality 
gabbay guenthner editors handbook philosophical logic ii pages 
kluwer academic publishers 
winskel nielsen 
models concurrency 
gabbay abramsky maibaum editors handbook logic computer science pages 
oxford science publications 

