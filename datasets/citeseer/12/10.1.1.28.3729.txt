learning temporal rules state sequences frank department electrical engineering computer science university applied sciences emden emden germany consider problem learning rules temporal relationships labeled time intervals 
learn rules single series labeled intervals obtained multivariate time series extracting various features interest instance segments increasing decreasing local trends 
seek identification frequent local patterns state series 
temporal pattern defined set states interval relationships described terms allen interval logic instance overlaps overlaps equivalently state ends state starts gap covered state 
spirit association rule mining propose algorithm discover frequent temporal patterns generate temporal rules 
application consider problem deriving local weather forecasting rules allow conclude qualitative behaviour air pressure curve 
computer aided monitoring control variables measured 
plain record quantitative values time invoke appreciable levels cognitive activity human 
simple visual inspection displayed trends human operator capable controlling process bakshi rules consider qualitative behaviour curve short term local weather forecast examples rules qualitative descriptions time varying data domain medical diagnosis aes ultsch material science qualitative reasoning kuipers mention 
rules derived deductively means understanding underlying supported deutsche forschungsgemeinschaft dfg 
kl 
contact frank ieee org ijcai workshop learning temporal spatial data aug th seattle 
process inductively observing variables long period time 
lack model reasonable amount data want go inductive way 
typical knowledge discovery application 
qualitative descriptions 
problem finding common characteristics multiple time series different parts series requires notion similarity 
process subject variation time translation dilation measures traditionally estimating similarity pointwise euclidean norm fail providing useful hints time series similarity terms cognitive perception human 
human breaks time series suitable segments points segment behave similar follow local trend 
segments usually simple shape easy grasp 
human labels classifies small number primitive shapes patterns 
matching time series performed basis labeled segments raw time series 
primitive patterns defined priori example slightly increasing segment bakshi mcilraith learned set examples labeled training set aes ultsch automatically means clustering short subsequences das arrive sequence labeled intervals time intervals certain condition holds original time series 
considers problem discovering temporal relationships primitive patterns time series fairly general manner temporal pattern consists number states primitive patterns temporal relationship terms allen temporal logic allen sequence labeled intervals seek frequent patterns fashion similar discovery association rules agrawal extended event sequences mannila frequent patterns rules temporal relationships derived 
application algorithm consider problem finding rules qualitative behaviour multivariate time series 
outline follows section define notion state sequence 
subset state intervals state sequence characterized means relative positions 
leads definition temporal pattern section 
consider question pattern occurs state sequence section 
adapting ideas discovery association rules propose algorithm discover temporal patterns section 
application example section come section 
state sequences denote set possible trends properties states want distinguish example pressure goes water level constant 
state holds period time denote initial point time enter state final point time state longer holds 
state sequence series triples defining state intervals holds 
require state interval ended state interval starts 
enables mix state sequences possibly obtained different sources single state sequences 
require state maximal sense series overlap meet violated merge state intervals replace union min max 
example classified points time series qualitative states increasing decreasing constant 
states partition time series completely state continued gap state 
possible primitive patterns increasing highly increasing 
missing patterns decreasing cause gaps description particular time series hinder analysis state sequence 
follows assume state sequence 
temporal patterns allen temporal interval logic allen describe relation state intervals 
pair intervals possible relationships illustrated 
example say meets interval terminates point time starts 
inverse relationship met 
abbreviate set interval relations shown state intervals capture relative positions matrix elements describe relationship state interval example consider state sequence 
obviously state followed lag covered state state interval sequence patterns written matrix interval relations 
formally temporal pattern size defined pair met overlapped finishes started equals starts contains finished overlaps meets meets overlaps finished contains starts equals started finishes overlapped met time allen interval relationships 
ng maps index corresponding state denotes relationship dim denote dimension number intervals pattern dim say pattern 
course sets state intervals map temporal pattern 
say set intervals ng instance temporal pattern 
define space tp temporal patterns informally space valid temporal patterns arbitrary dimension time state interval sequence temporal relations io io abbreviations overlaps io overlapped example state interval patterns expressed temporal relationships 
partial order temporal patterns define partial order temporal relations 
say temporal relation ra subpattern rb ra rb dim sa ra dim sb rb injective mapping dim sa ra dim sb rb dim sa ra ra rb relation reflexive transitive antisymmetric ra rb rb ra ra rb due determine interval relationships assume closed intervals conditions valid temporal pattern instance inverse 
different state ordering 
states change semantics temporal pattern 
define ra rb ra rb rb ra consider factorisation tp generalized canonically equivalence classes 
antisymmetric partial order equivalence classes temporal patterns 
normalized form temporal pattern simplify notation pick subset ntp tp normalized temporal patterns ntp contains element equivalence class tp ntp isomorphic tp 
remainder ntp synonymous tp 
intuitive idea order state intervals time increasing index 
ordering slightly complex arbitrary intervals points 
ordering states say temporal pattern ra normalized form dim sa ra dim sa ra conditions hold case 
intervals identical states maximality assumption time gap intervals merge state intervals single new contains intervals 
case possible relations 
preserve temporal ordering require 
case 
case distinct initial times 
initial times intervals different ordering initial times normalized form finished overlaps meets cf 

case initial times coincidence 
starts started byg 
intervals identical order states normalized form require note sure subcase final times different require started sure interval index ends interval index occurrences temporal patterns state sequences considered interesting temporal pattern limited extension pattern small observed operator 
choose maximum duration max serves width sliding window moved state sequences 
consider pattern instances observed window 
monitoring control application threshold taken maximum history length displayed monitor inspected operator 
note necessarily mean points set state intervals ng differ max denoting temporal extent duration pg pg max general 
illustrates fact case intervals length exceeds max window drawn solid lines 
state lasts time period longer max observe pattern contains window 
pattern window drawn dashed lines example observe pattern max observe contains dashed window final time visible pattern may represent overlaps finishes relation 
act sliding window max time sliding window width max state sequence 
define total time pattern observed sliding window support supp pattern illustrate definition examples 
subfigure single state see pattern time right bound sliding window touches initial time state interval dotted position sliding window 
observe sliding window reaches position drawn dashed lines 
total observation time length sliding window max plus length state interval support observation duration depicted bottom subfigure 
subfigure shows example overlaps 
observe instance pattern soon see state loose leaves sliding window 
pattern occurs multiple times things may happen gap pattern instances loose pattern support individual instances add support pattern shown subfigure 
gap subfigure see pattern soon instance enters sliding window instance leaves window 
matter instances long 
divide support pattern length state sequence plus window width max obtain relative time support time time support support support time support illustration notion support 
frequency pattern randomly select window position observe pattern probability note need discretization handle time continuously jumping interval bound initial final time interval bound integrating support jump period 
observability pattern changes sliding window meets interval bounds 
discovery temporal rules pattern called frequent support exceeds threshold supp min task find frequent temporal patterns ntp create temporal rules 
find frequent patterns start database pass estimation support single state called candidate patterns 
kth run remove candidates missed minimum support create remaining frequent patterns set candidate patterns support estimated pass 
procedure repeated frequent patterns 
fact support pattern greater equal support subpatterns patterns supp supp guarantees frequent patterns 
level detail procedure identical association rule mining agrawal candidate generation number potential candidates grows exponentially size patterns 
efficient pruning techniques necessary keep increase number candidates moderate 
different pruning techniques 
technique discovery association rules agrawal applied temporal patterns due subpattern candidate frequent candidate frequent 
enumerate non candidate patterns rp 
pattern rq 
pattern rx 
ir new pattern generating candidate pattern patterns identical restricted states 
possible join frequent patterns share common pattern prefix 
denote remaining states prefix respectively 
denote interval relationship candidate pattern rx rx illustrates build pattern matrix rx rp rq rp rq identical respect states normalized form true new pattern indicated submatrix 
relationship states taken rp rq see degree freedom pattern prefix states build pattern completely specified relation freedom choosing yields different patterns candidate patterns possible interval relationships 
restrict loss generality normalized patterns number possible values reduces maximal number 
check patterns frequent subpatterns apply pruning technique law transitivity 
example patterns meets meets share primitive pattern common prefix 
fix missing relationship obtain candidate 
law transitivity interval relations allen tells possible set interval relations fis started equals 
normalized form possible relationships remain 
general state states apply allen transitivity table relationship rp rq 
values contradict results applications transitivity table yield candidate pattern 
temporal pattern maintain observed expected support set oq eq resp 
set oq contains points time contribute support pattern points time pattern observed sliding window 
consider pattern candidate pattern intersect sets oq subpatterns result gives expected support ep cardinality ep serves tighter upper bound support dim kg 
stays supp min pattern frequent pattern consider candidate 
support estimation order estimate support candidate patterns sweep state sequence incrementally update list states currently visible sliding window 
update relation matrix states sliding window incrementally 
act denote right bound sliding window 
set candidate patterns partitioned subsets call set passive active potential candidates 
set passive candidates contains candidates expect current sliding window expected support contain time current window position act ep set potential candidates contains candidates act ep chance observing window 
set active patterns contains patterns currently observable sliding window 
patterns passive patterns 
associated pattern set expected support ep know advance pattern potential pattern activation time ap minft ep set ep organized sorted list intervals minimum simply left bound interval list 
keep set passive patterns ordered activation time 
act reaches activation time pattern potential active pattern depending occurs sliding window 
potential pattern remove leading interval ep list store deactivation time dp interval time pattern fall back set passive patterns 
potential pattern passive pattern fall back time dp reached sliding window 
sets oq eq organized lists intervals 
intersection list intervals 
add interval lengths obtain cardinality 
new state interval enters sliding window check potential patterns instance pattern 
case potential pattern active pattern keep potential pattern 
pattern instance calculate point time pattern disappears fall active pattern 
just set passive patterns set active patterns sorted fall back times 
act reaches fall back time active pattern check new pattern instance entered sliding window 
case pattern remains active pattern update fall back time 
depending dp act active pattern potential passive pattern 
pattern instance support pattern incrementally updated insert period pattern observation support os upper bound remaining support cardinality continuously updated set ep perform fourth online pruning test 
support achieved far card plus maximally remaining support card drops supp min consider pattern longer 
database pass set ep empty op contains support subsequently candidate generation step pruning 
rule generation having determined frequent temporal patterns construct rules 
pair frequent temporal patterns restrict forward rules rules past 
confidence rule conf supp supp greater minimal confidence rule printed 
enumeration possible rules done efficiently techniques described agrawal disjunctive combination temporal patterns analysing rules obtained algorithm keep mind seeking simple interval relationships relationships consist single attribute process started time started result number rules temporal overlaps meets 
confidence true relationship case overlaps meets high confidence values observe rules comparatively low 
allowed add confidence values rules order obtain confidence composed rule 
lead overestimation sliding windows contain multiple patterns simultaneously case count twice 
theoretically consider complex relationships discovery process probably combinatorial explosion candidate patterns pruned appropriately longer possible interval relationships normalized form 
fortunately necessary consider combinations execution algorithm calculate support composed rules 
support pattern disjunction patterns calculated easily supp card 
sets observed support oq calculated execution algorithm store sets access 
note guarantee find frequent pattern compositions way 
patterns reach supp min individually fulfill requirement combination 
evaluation discussion examined air pressure wind strength wind direction data small island northern sea 
time stamps extracted season 
known local differences air pressure cause wind find relationships variables 
features measured hourly years data 
applied kernel smoothing order compensate noise get robust estimates second derivative 
smoothed series partitioned primitive patterns 
encourage meaningful findings temporal patterns tried simulate way human partition time series 
stage air pressure curve segmented increasing level decreasing segments 
increasing segments derivative larger values measured increasing derivatives refine additional state highly increasing larger speak highly increasing 
alternative overlapping state definition defined exclusive partition highly incr highly incr increasing having chosen threshold values heuristically sure chosen meaningful respect patterns want discover 
see example sure threshold values define states hierarchical definition preferable exclusive 
pattern highly increasing segment meets level segment meets highly decreasing segment time series depicted 
threshold values derivatives chosen appropriately increasing flank second wave classified highly increasing 
state series discover pattern increasing segment meets level segment meets highly decreasing segment 
choose exclusive state definition depicted state series contributes partially support discussed patterns 
badly chosen threshold values hierarchical state definition sure find similar pattern terms employed state hierarchy 
addition states characterize slope states address second derivative air pressure curve 
high values second derivative hierarchical high exclusive high dec dec lvl high high dec derivative domain lvl dec state definitions slope series time highly incr 
increasing level decreasing highly decr 
state series states definition highly incr 
increasing level decreasing highly decr 
state series states definition ways partitioning time series 
distinguish sharp peaks flat hills example 
simplify notation state abbreviations dec lvl decreasing constant increasing trends respectively 
ccv denotes concave convex curvature 
additional suffix high highly increasing high concave ccv high segments suffix indicates segments refers wind strength air pressure wind direction curve respectively 
window width max chosen hours supp min total time years conf min 
calculation took minutes mb laptop computer pentium ii mobile processor running linux 
usually context rule mining large number rules 
due lack space exemplary rules 
autumn known strong winds find rules autumn high high temporal relationship autumn contains high contains high depicted autumn high high confidence rules applied sliding window positions 
minimum confidence small obtain rule seasons lower confidence 
expected rules reflect relationship change air pressure change wind strength 
rule fore cast highly increasing wind strength applied time series confidence value dec high dec high dec high dec high example phenomenon described section rule ccv ccv high high temporal relationships depicted ccv ccv high high ccv ccv high high rules differ premise equals relation rule confidence applicability finished relation second rule confidence applicability 
disjunctive combination rules increases confidence significantly 
interestingly rule ccv high high confidence level 
emphasizes importance concave segment rules finished highly concave segment 
highly concave segment concave segment lower probability highly increasing winds pattern 
note detected rules chosen exclusive state definition 
proposed technique discovery temporal rules state sequences stem multivariate time series instance 
examples section shown proposed method capable finding meaningful rules rules thumb human knowledge expert system 
rules easily interpreted domain expert verify rules means background knowledge inspiration investigation 
considerable background knowledge application method valuable example known rules incorporate variables available specific technical system 
example weather forecasting rules discussed information general weather outlook information local weather forecasting station 
information difficult incorporate expensive measure case interested achieve just available variables 
step focus enrichment qualitative rules quantitative discriminating values example air pressure falls quickly hours wind strength increase hour 
prof frank fruitful discussions deutsche providing data 
agrawal rakesh agrawal heikki mannila ramakrishnan srikant hannu toivonen verkamo 
fast discovery association rules 
fayyad chapter pages 
mit press 
allen james allen 
knowledge temporal intervals 
comm 
acm 
bakshi bakshi george 
reasoning time modeling analysis pattern recognition temporal process trends 
advances chemical engineering volume pages 
academic press 
antonio 
automated mathematical modeling experimental data application material science 
ieee trans 
systems man cybernetics part august 
das gautam das king ip lin heikki mannila gopal padhraic smyth 
rule discovery time series 
proc 
th int 
conf 
knowledge discovery data mining pages 
aaai press 
fayyad usama fayyad gregory padhraic smyth uthurusamy editors 
advances knowledge discovery data mining 
mit press 
aes ultsch alfred ultsch 
method temporal knowledge conversion 
hand kok berthold editors advances intelligent data analysis proc 
rd int 
symp pages amsterdam netherlands 
springer berlin 
dieter 
und 
edition 
kuipers benjamin kuipers 
qualitative reasoning modeling simulation incomplete knowledge 
mit press 
mannila heikki mannila hannu toivonen verkamo 
discovery frequent episodes event sequences 
technical report university helsinki finland february 
mcilraith sheila mcilraith 
qualitative data modeling application mechanism interpreting graphical data 
computational intelligence 
