advantages generative grammatical encodings physical design gregory hornby south street demo lab brandeis university waltham ma hornby cs brandeis edu jordan pollack south street demo lab brandeis university waltham ma pollack cs brandeis edu applications evolutionary algorithms automatic creation designs 
evolutionary techniques scale complexities necessary actual engineering problems argued generative systems genotype algorithm constructing final design encoding 
describe system creating generative specifications combining lindenmayer systems evolutionary algorithms apply problem generating table designs 
designs evolved system reach order magnitude parts previous generative systems 
comparing non generative encoding find generative system produces designs higher fitness faster non generative system 
demonstrate ability system go design manufacture constructing evolved table designs rapid prototyping equipment 
evolutionary algorithms eas successfully applied variety design problems shown evolutionary techniques scale complexities necessary typical design projects 
past typically direct encoding solution parameterizing search space component representation solution 
argued generative encoding scheme encoding specifies construct phenotype achieve greater scalability self similar hierarchical structure 
addition re parts genotype creation phenotype generative encoding compact encoding solution 
examples generative systems cellular automata rules produce shapes context rules produce tiles graph encoding animated creatures cellular encoding artificial neural networks 
lindenmayer systems systems generative encoding ea 
systems grammatical rewriting system introduced model biological development multicellular organisms 
rules applied parallel characters string just cell divisions happen parallel multicellular organisms 
complex objects created successively replacing parts simple object set rewriting rules 
systems mainly construct plants 
difficult hand system produce desired form 
previous combining systems eas generate plant structures architectural floor designs limited results achieved :10.1.1.43.7334
evolving systems uses parametric contextfree systems systems powerful class previously evolved 
system define component language constructing objects voxels define fitness function table designs evolve table designs thousands voxels 
compare generative encoding encoding find better designs evolve faster system generative encoding designs complex regularities tables created non generative representation 
evolved tables automatically manufactured rapid prototyping equipment 
section outline design space describe components generative design system 
give examples tables evolved different encoding schemes discuss results 
method system creating generative designs consists design builder evaluator system module evolutionary algorithm 
systems evolved evolutionary algorithm individual systems scored goodness design builder simulator 
result system static structures evolve tables 
design builder evaluator design constructor builds model sequence build commands 
built model simulated evaluated 
commands listed table 
command string consists sequence build commands give instructions logo style turtle construct object voxels 
matrix voxels starts empty voxels filled turtle enters 
push pop current state consisting current orientation stack 
forward moves turtle forward table design language command description symbol push pop orientation stack block repeat enclosed block times forward move turtle positive direction units backward move turtle negative direction units rotate heading turtle axis rotate heading turtle axis left rotate heading turtle axis right rotate heading turtle axis clockwise rotate heading turtle axis counterclockwise rotate heading turtle axis current direction backwards moves turtle back space place block space exists 
turn left right clockwise counter clockwise rotate turtle heading appropriate axis units command sequences enclosed repeated number times specified brackets argument 
example structures 
example string forward left forward forward left forward forward left forward forward interpreted forward left forward left forward left forward left forward forward left forward left forward left forward left forward forward left forward left forward left forward left forward forward produces structure construction language allows voxels placed existing voxels evolved designs guaranteed generate single connected structure 
design simulator determines stability object 
system specification executed stability object determined resulting structure evaluated fitness function described section 
parametric systems class systems encoding parametric context free system system 
formally lsystem defined ordered alphabet system set formal parameters nonempty parametric word called axiom finite set productions 
symbols separate components production predecessor condition successor 
example production predecessor condition successor cd written cd production matches module parametric word iff letter module letter production predecessor number actual parameters module equal number formal parameters production predecessor condition evaluates true actual parameter values substituted formal parameters production 
implementation reasons add constraints system 
condition restricted comparisons production parameter greater constant value 
parameters design commands constant value production parameter 
parameters productions equations form production parameter constant production parameter constant 
system language defined table consists productions production containing condition successor pair forward forward left starting system produces sequence strings forward forward left forward forward forward left forward forward left forward forward forward left forward forward left forward forward left forward string commands produces tree trees arbitrary size created starting production system different argument tree created system starting 
evolutionary algorithm evolutionary algorithm evolve individual 
initial population systems created random evolution proceeds iteratively selecting collection individuals high fitness parents create new population individual systems mutation recombination 
addition system individual contains values initial calling parameters production rule maximum number iteration updates performed 
describe initial population systems generated variation applied 
initialization systems predetermined number production rules fixed number arguments production bodies 
new system created generating random string build commands production body trials single command string commands blocks commands 
added block enclosed push pop brackets block repetition parenthesis 
mutation mutation creates new individual copying parent individual making small change 
production rule selected random production rules rule changed way 
changes occur replacing command perturbing parameter command adding subtracting small value changing parameter equation production adding deleting sequence commands successor changing condition equation encapsulating block commands turning previously unused production rule 
example production selected mutated possible mutations mutate condition mutate argument mutate symbol delete random character insert random sequence character encapsulate block characters recombination recombination takes individuals parents creates child individual making copy inserting small part 
done replacing successor successor inserting sub sequence commands successor replacing sub sequence commands successor sub sequence commands successor 
example parent rule parent rule possible results recombination successor replace entire condition successor pair replace just successor replace block experiments results section results evolving tables non generative encoding system generative encoding 
trials run maximum generations evolutionary algorithm individuals 
best individuals generation copied elitism remaining individuals created equal probability mutation recombination 
grid size evolved tables wide deep high grid tables manufactured grid wide deep high 
generation generative non generative performance comparison encoding system generative encoding 
fitness table function height surface structure stability number excess voxels 
height number voxels ground 
surface structure number voxels maximum height 
stability function volume table calculated summing area layer table surface 
maximizing height surface structure stability typically result table designs solid volumes measure excess voxels reward designs fewer bricks 
height height highest voxel ymax surface number voxels ymax stability ymax area area area convex hull height excess number voxels surface 
experiments combine measures single function fitness height surface stability excess tables evolved non generative encoding 
appropriate method evolving criteria may multi objective approach 
tables evolved system generative encoding 
determine generative encodings better encodings ran sets experiments equation fitness function 
non generative encoding command language listed table block replication operator 
individual consisted single sequence maximum commands 
generative encoding system described section production rules maximum condition successor pairs production rules parameters command language table 
encodings mutation recombination operators 
graph plots average maximum fitness trials different encodings shows average fitness system generative encoding significantly better non generative encoding 
different weightings variations components fitness function tried cases generative encoding produced better tables non generative encoding 
table designs systems tended voxels largest shown consists voxels 
examples high fitness designs evolved non generative encoding shown 
evolutionary runs system half trials converged poor structures run produced structures complex regularities 
tables evolved generative encoding encoding shown 
trials converged structures low fitness regularities 
tables evolved non system generative encoding block replication system encoding block replication 
difference non generative encoding generative system encoding block replication parametric production rules 
block replication parametric production rules variants generative encoding performed small number evolutionary runs 
variant consisted removing production rules generative system leaving block replication 
single command sequence encoding allowed grow commands 
system original generative encoding production rules produced better tables non generative encoding 
variant tried system block replication 
system performed worse original system block replication better non generative encoding 
variants produced tables regularities second variant necessarily sequential replications structure variant improvements non generative encoding 
contains table evolved alternative generative encodings 
automated manufacture evolved table designs achieved rapid prototyping equipment 
designs manufacture tables shown simulation left reality right 
generated evolutionary system saved file format describing shape 
tables constructed printing printer shown 
discussion regardless achieved generative encoding incorporate bias re modules 
re code re parts actual design certain types design changes easier 
example table created modules changing length table leg requires change leg building module 
direct encoding scheme require change occurrence table leg genotype 
designs complex likelihood change happening simultaneously uses part increasingly direct encoding change modular generative encoding 
generative encoding table genotypic structure related structure table system started command goes iterations parallel replacement structures created intermediate stages shown 
iteration produces string fp uses block replication encode table legs reducing block replication parameter results legged table 
block productions called time called 
structure base encoded productions 
reducing number voxels created backward command productions reduces width depth table 
calls conditions fail sequence productions produces build commands 
calls stage stage stage stage growth table 
calls calls productions produce bricks 
changes direction turtle build table legs help table legs surface encoded productions construct legs surface repeated calls 
parameter values select production body 
height legs encoded successor condition succeeds initially called time calls 
calls condition fails second condition succeeds resulting call begins sequence commands constructing table surface 
evolution changed production rules resulting table shown counting production head character condition characters character production body specification length encoding table characters encodes command sequence commands compression factor produce table voxels 
block replication production rules parameters differentiate previous evolving 
block replication production rules similar features past evolutionary design analogues computer languages 
block replication similar loops computer programs identical multiple re writing recurrent symbol life register cellular encoding recursive limit parameter graph encoding 
production rules subroutine calls programming languages similar automatically defined sub networks cellular encoding automatically defined functions adfs genetic programming 
analogues loops parameterized subroutines evolution generative encodings evolution computer program genetic programming 
beauty systems generative encoding general generative encoding system 
changing language terminals different structures generated plants artificial neural networks creatures 
system automatically producing generative design systems regular structure achieved parametric lindenmayer systems generative encoding evolutionary algorithm 
compare performance generative encoding non generative encoding defined voxel language building structures fitness function evaluating table designs constructed language 
system tables thousands voxels evolved order magnitude parts previous generative systems 
evolution system generative encoding consistent producing table designs produced better results faster non generative component encoding 
research supported part defense advanced research projects administration darpa 

authors members demo lab dejong ficici funes levy lipson melnik viswanathan watson 
bibliography husbands ives 
applications genetic algorithms component design 
fogarty editor evolutionary computing 
lncs pages 
springer verlag 
lipson pollack 
automatic design manufacture robotic 
nature 
bentley editor 
evolutionary design computers 
morgan kaufman 
kane marc schoenauer 
genetic operators shape optimization 

lutton ronald schoenauer snyers editors evolution ea 
springer verlag 
bentley 
generic evolutionary design solid objects genetic algorithm 
phd thesis university 
funes pollack 
computer evolution objects 
phil husbands inman harvey editors proceedings fourth european conference artificial life pages cambridge ma 
mit press 
marc schoenauer 
shape representations evolution schemes 
fogel angeline back editors evolutionary programming 
mit press 
bentley 
exploring component representations secret creativity evolution 
fourth international conference adaptive computing design manufacture 
hugo de garis 
artificial embryology genetic programming artificial embryo 
iris group editors dynamic genetic chaotic programming 
wiley 
bentley kumar 
ways grow designs comparison embryogenies evolutionary design problem 
banzhaf daida eiben garzon honavar smith editors genetic evolutionary computation conference pages 
karl sims 
evolving virtual creatures 
siggraph conference proceedings annual conference series pages 
frederic gruau 
neural network synthesis cellular encoding genetic algorithm 
phd thesis ecole normale superieure de lyon 
lindenmayer 
mathematical models cellular interaction development 
parts ii 
journal theoretical biology 
prusinkiewicz lindenmayer 
algorithmic beauty plants 
springer verlag 
jacob 
genetic system programming 
davidor schwefel editors parallel problem solving nature iii lecture notes computer science volume pages 
gervautz 
genetic algorithms improve visual quality fractal plants generated csg pl systems 
proc 
fourth international conference central europe computer graphics visualization 

genetic algorithms lindenmayer systems 
eiben schoenauer schwefel editors parallel problem solving nature pages 
springer verlag 
coates jackson 
exploring dimensional design worlds lindenmayer systems genetic programming 
bentley editor evolutionary design computers 
carlos fonseca peter fleming 
overview evolutionary algorithms multiobjective optimization 
evolutionary computation 
gervautz 
genetic algorithms improve visual quality fractal plants generated csg pl systems 
proc 
fourth intl 
conf 
central europe computer graphics visualization 
frederic gruau 
cellular encoding interactive evolutionary robotics 
technical report university sussex 
karl sims 
evolving morphology behavior competition 
brooks maes editors proceedings fourth workshop artificial life pages boston ma 
mit press 
koza 
genetic programming programming computers means natural selection 
mit press cambridge mass 
kitano 
designing neural networks genetic algorithms graph generation system 
complex systems 
hornby lipson pollack 
evolution generative design systems modular physical robots 
intl 
conf 
robotics automation 
hornby pollack 
body brain coevolution systems generative encoding 
genetic evolutionary computation conference 
