word sentence 
problems tokenization gregory grefenstette pasi tapanainen rank xerox research centre grenoble laboratory france grefen xerox fr xerox fr appeared rd conference computational lexicography text research 
complex budapest july 
linguistic treatment freely occurring text provide answer considered token 
artificial languages definition considered token precisely unambiguously defined 
natural languages hand display rich variety ways decide considered unit computational approach text 
discuss tokenization problem computational lexicography 
discussion cover aspects usually considered preprocessing text order prepare automated treatment 
roles tokenization methods tokenizing grammars recognizing acronyms abbreviations regular expressions numbers dates 
problems encountered discuss effects seemingly innocent choices 
linguistic exploitation naturally occurring text seen progression transformations original text 
original text sequence characters 
syntactic analysis corpus performed transformations usually take place 
sentences isolated grammars describe sentences 
order sentences isolated words isolated original stream characters 
isolation word units text called tokenization 
results tokenization types tokens type corresponding units character structure recognizable punctuation numbers dates type units undergo morphological analysis 
linguistic textbooks tokenization quickly dispatched relatively uninteresting preprocessing step performed linguistic analysis undertaken 
reality tokenization non trivial problem 
confronted large corpora raw text computational lexicographer come transformations schematically difficult choices choices repercussions felt long 
discuss choices possible effects subsequent linguistic treatment 
raw corpus text preprocessor tokenizer morphological analyzer linguistic analysis text transformations linguistic analysis 
preprocessing consider dealing text electronic form sequence characters scanned image text 
electronic text readily available days increasing numbers usually produced product typesetting 
text contains extra whitespace number mark ups indicate font changes text subdivisions special characters things 
indications carry meaning help reader understand text usually filtered text preprocessing stage linguistic processing tokenization begins 
little normalization exists typesetting codes discuss matter provide method eliminating sgml type code running text unix workstations furnish general purpose character stream scanner called lex flex 
scanner permits definition actions taken certain regular expressions matched input text 
provides simple lex program deletes sgml markings public domain sgml parser called available anonymous ftp site ifi uio 
directory pub sgml 
parser allows finer handling sgml codes 
notation regular grammars shown matches character newline 
matches line 
matches line 
nn matches newline character 
abc 
character class matches characters abc 
abc 
negated character class matches character abc 
newline 
jr alternation matches 
concatenation matches 
matches 
matches zero 

matches zero 
grouping matches call file lx run flex cf lx gcc lex yy lfl pass simple filter text file called toto run toto echo echo flex program filtering sgml markings 
call file lx run flex cf lx gcc lex yy lfl pass simple filter text file called toto run toto printf flex program text 
input file 
things filtered marked text things 
common case appears raw text hyphenation right margins 
hyphenation usually circumstantial related width page meaning text easily consider eliminating text files employ 
short lex program eliminates trailing hyphen text rejoins hyphenated word second half line 
regular expression filter recognizes lower case letter followed hyphen number tabs spaces followed newline character spaces 
alphabetic character retained printed filter 
characters file pass unchanged 
course introducing hyphenation text typesetting produce lines hyphen word split naturally occurring hyphen happened chance appear word split 
suppose word small town split line typesetting filter return string token 
order test just happen reality took brown corpus francis kucera corpus tokenization hand corrected ran typesetting program introduced line 
brown corpus contains words 
typesetting brown corpus produces lines formatted text ended letter plus hyphen 
joining lines filter produced correct errors words appear original text 
examples erroneously joined words ring rosie 
experiment gives taste type choices tokenization 
access dictionary morphological package stage test cases analyzing constituent parts making informed decisions mechanism sophisticated construction rarely considered preliminary stage linguistic treatment 
may consider errors words unknown words treated stage just accept noise system 
roles tokenization input text corpus preprocessed string characters corresponding linguistic processors consider text 
stage linguistic processing elements text considered belonging certain syntactic class 
example string dog considered singular noun 
order classes assigned strings original text considered long string divided units recognized members class 
traditional role tokenization recognition units 
traditional role tokenization recognition sentence boundaries linguistic analyzers consider sentence unit treatment 
consider traditional view demonstrate implemented show limitations handling certain ambiguous cases word sentence boundaries 
word sentence 
isolating word sentence boundaries involves resolving ambiguous punctuation 
second role tokenization attacked 
structurally recognizable tokens contain ambiguous punctuation numbers alphanumeric ab dates acronyms punctuation abbreviations 
classes recognized regular expression grammars predict structure tokens illustrated 
units recognized uses separators non ambiguous surely delimit words sentences 
sentences punctuation 
exclamation point question mark unambiguous examples punctuation 
semicolon separator list elements sentence separator 
prevalent ambiguous separators period extremely ambiguous 
trivial decide full part abbreviation 
brown corpus sentences ended full period question mark contain non terminal period 
consider period full original sentences correctly recognized 
cases consider simple heuristics sufficient 
sections see sentence recognition count improved adding increasing levels linguistic sophistication 
ambiguous separators numbers numbers ambiguous structural types 
structure numbers language specific constructions example english number written french newspaper text 
regular expression recognizes english version numbers 
regular expression accepting french version expressions strings outside class numbers recognizers sufficient 
rarely sees strings ordinary text probably want considered number 
table gives regular expressions english numbers dollar values constructions incorporated tokenizer 
recognizing strings eliminates ambiguity comma period characters comprised token longer considered separators 
fractions dates percent decimal numbers recognize numbers expressions considering included periods full stops sentences incorrectly recognized adding sentences count correct brown sentences simple heuristic remaining period equals full 
improves sentence recognition 
abbreviations numbers important class tokens incorporating period element class abbreviations 
lists abbreviations long lists proper names incomplete creation abbreviations productive process 
consider lists see far get regular expressions recognize abbreviations periods considered full stops 
consider period followed blank full 
number recognizers added heuristic adds correctly recognized sentences original sentences correctly recognized raising percentage 
experiment lexicon want better course 
find better approach analyzing structure abbreviations 
consider classes abbreviations single capital followed period sequence letter period letter period capital letter followed sequence consonants followed period st insert blanks parentheses commas colons questions marks sequences brown corpus 
automatically consider sequences non sentence abbreviations word followed final right times 
details table 
example third class regular expression defined abbreviations word uppercase vowels matches actual abbreviations times commits errors recognizing strings abbreviations example ash recognizes real abbreviation times sentence terminator 
case sentence period absorbed abbreviation period nunberg 
regular expression correct errors full za 
za za np 
totals means consulting lexicon structure words correctly recognize non numeric token periods part abbreviation unique true brown abbreviations 
introduce errors recognizing true full stops false abbreviations correctly recognizing abbreviations realizing full stops 
number original brown sentences correctly recognized number recognizers abbreviation recognition scheme 
sentences contain type abbreviation recognized expressions sentences incorrectly joined final recognized cases 
abbreviations brown match regular expressions listed order decreasing frequency month names sen gen rev gov state abbreviations fig 
rep ave figs 
figs 
hr 
lbs 

dia 
stat 
ref 
prof hr 
sec 
eqn 
chap 

dist dept ex vol 
tech 
rte 
reps prop 

oz 
viz 
var 
seq 
prop 
pro nos 
mos 
min 
mil 

ex gov eqns 
dept 

ter 

sha 
sens ss 
ry 

st msec 
mcn 
maj lond 
jas 
grev 
gre 
cir 
cal 

degrees 
lb 
kc 

hp 
ft oct 
ft 
ml 
lb 
oz 
lb 
yr 
mg 
mv mv 

experiment lexicon corpus filter order reduce list non recognized abbreviations referencing lexicon corpus filter identifying abbreviations 
define abbreviation string letters terminated period followed comma semi colon question mark lower case letter number followed word capital letter period 
definition abbreviations matches unique abbreviations brown corpus introduces large number false positives behavior better board box break bull eye words happen sentences followed sentence number 
apply corpus filter eliminating list abbreviations strings appear terminal periods corpus 
drastically reduces collection abbreviations strings light rev rend abbreviations 
abbreviation total correct incorrect unique unique unique za appearing period apply corpus filter eliminating list abbreviations strings appear terminal periods corpus 
drastically reduces collection abbreviations strings light rev rend abbreviations 
abbreviation total correct incorrect unique unique unique za appearing period corpus filter accepting candidates abbreviations accepting structures internal periods period period form za za non terminal abbreviations sentences incorrectly divided 
sentence ends incorrectly identified sentence internal abbreviations mistakenly joining sentences meaning original brown sentences correctly recognized 
gives recognition rate corpus filter lexical access 
abbreviations technique 
sept rev jan fig 
mass 
pa la hr 
cf 
tex mt 
wash hon 
hr 
eqn 
chap 
ore mar sp 
oz 
hp 
ex tech 

eq 
ed 
oz 
seq 
prop 
nos 
mos 
min 
mil 
fed ex gov eqns 
ed 

vs sha 
sens ss 
st pfc 
ok mcn 
maj kas 
eng 
del cmdr cal app 
degrees 
lb 
kc 

hp 
ft oct 
ft 
ml 
lb 
oz 
lb 
yr 
mg 
mv mv 

experiment lexicon abbreviations observations suppose abbreviation recognition process access lexicon 
examine gained lexicon look cases 
suppose trying solve ambiguities tokenization phase tokenization reduced number recognition splitting words spaces unambiguous separators 
word sentence real abbreviations period sent morphological analyzer trailing period 
role morphological analyzer decide trailing period isolated separate sentence character 
supposition brown corpus produces tokens period sorted 
suppose complete lexicon containing words brown corpus abbreviations proper names 
discover abbreviations method 
consider ordered filter strings terminated period 
followed lower case letter comma semi colon known abbreviation 
lower case string known abbreviation exists word lexicon final period abbreviation abbreviation 
begins upper case letter known abbreviation appears corpus trailing period appears twice corpus abbreviation probably proper name 
abbreviation 
list known abbreviations defined contains unique upper lowercase abbreviations occurring total times brown 
sample known abbreviations order decreasing frequency follows jr st vs calif lb 
cm 
list derived captures cases corpus 
lowercase initial strings appearing final period 
instances correspond known abbreviations correspond words final periods appearing lexicon 
instances words really abbreviations 
happens string appears entire word abbreviation fig appearing fig 
consider cases sentence non abbreviated words sentences contain chap 
fed fig 
nos 
words considered sentence internal abbreviations really sentences full stops 
instances words recognized step abbreviations ca 
cf 
ed 
eqn 
eqns 
ex gov ex figs 
hp 
mil 
min 
mos 
oz 
pp 
seq 
sp 

time reach step decided period terminated string cases 
step decided case remaining uppercase initial possible abbreviations 
step finds remaining cases correspond uppercase initial words corpus final period remaining appear twice considered abbreviations 
heuristic incorrectly identifies occurrences strings sentence non abbreviations appear period app 
cal del ed 
jan mar 
rev ss 
sept tech 
times corpus 

cf 
cmdr eng 
eq 
jas 
kas 
maj mcn 


pfc 
st pt 
reps rte 

ry 
sens sha 
spec 
vol 
vs wm 

step identifies remaining candidates abbreviations aug ch 

col dec feb fig 
figs 
hon 
lt martinez 
mt nov oct op 
pp 
prof ref 
rep 
sec 
sen stat 
combining abbreviations recognized steps sentences erroneously split contain unrecognized abbreviations sentences strings thought sentence internal abbreviations 
incorrectly join sentences 
words method lexicon abbreviations corpus filter tokenize recognizes sentences original brown sentences 
slight degradation comes fact recognized known abbreviation step sentences incorrectly joined sentence 
experiment lexicon abbreviations consider lexicon lower case words corpus contains frequent abbreviations meaning titles dr sen month name abbreviations jan feb mar state abbreviations ala calif penna common abbreviations fig abbreviations 
implement procedure sequence letters terminated period followed lower case letter comma semi colon abbreviation exists abbreviation lexicon consider consider word sentence terminator 
list list abbreviations lexicon provides sentences contain unrecognized non terminal abbreviations candidates brown corpus 
original sentences abbreviation recognized correctly techniques giving success rate correctly recognized sentence boundaries 
abbreviations recognized strings containing internal periods single letters state names titles av 
ave bldg 
blvd cf 
ct dept dist eq 
fig 
figs 
jas 
jr 
msec 
mt mts 
op 
rd rte 
sr st stat 
tech 

vol 
vs yo 
ca 
cc 
cf 
cm 
cu 
dia 
ed 
eqn 
eqns 
fig 
figs 
ft gm 
hp 
hr 
kc 
lb 
lbs 

mc 
mg 
mil 
min 
ml 
mm 
mos 
nw 
oz 
pl pp 
prop 
sec 
sq 
var 
viz 
vs yd 

related sentence boundary recognition palmer hearst produced technical report describing approach sentence boundary uses neural net applied morphologically tagged text decide case terminal periods 
achieved success rate minute neural net training 
capitalization clues technique applied languages german upper case text 
technical report mention applied solving problem regression analysis individual probabilities words appearing punctuation riley rules lexical endings words surrounding punctuation mller 
morphologically analyzed words major question answered designer tokenizer exists correspondence token set classes token correspond sequence classes 
example brown corpus word governor considered token tagged possessive noun 
susanne corpus string divided tokens governor possessing tag 
case choice tokens little importance suspect subsequent linguistic treatment rebuild possessive structure corresponding produced token anyway 
greater significance division case strings english contractions 
strings retained token linguistic analyzer handle case single token corresponds sequence tags 
questions answered languages 
french decided addition donne le va il est dire le tape 
retained token divided 
problem choice arguments way order generalizations grammar break separate article introduces ambiguity tagging pronoun 
word rendez vous possible readings tokens hyphen separate words 
case noun rendez vous imperative form reflexive verb interrogative form verb inverted subject 
choice linguistic component take account different systems different choices turn comparing results sharing tokenized text researchers difficult 
example available statistical tagging programs choose parts speech words immediate context brill treat case surface form correspond tokens 
seen problem preparing raw text linguistic treatment raises problems 
order maintain flexibility possible tokenization process considered series modular filters text selectively passed 
technical report retrieved anonymous ftp tr ftp cs berkeley edu 
subdirectory pub cs tech report cds postscript format 
available anonymous ftp directory ota susanne 
seen original text file undergoes preprocessing eliminates markings rejoins hyphenated words 
tokenization proper begins 
main purposes tokenization recognize sentence word boundaries lexical look proceed 
certain character ambiguities resolved analyzing structure input strings order produce pass tokenization 
pass produced consider treatments tokenized text lexical lookup performed 
example consider point parts proper name separated blanks 
justified role tokenizer space considered ambiguous separator disambiguated contextual clues 
english contextual clues uppercase letters appearing word sentence 
rarely discussed quickly dismissed tokenization automated text processing system poses number thorny questions perfect answers 
brill 

simple rule part speech tagger 
proceedings third conference applied natural language processing trento italy 
acl 
francis kucera 

frequency analysis english 
houghton mifflin boston 
mller 

als einer zur von 
ein verfahren zur im 
sprache und 
nunberg 

linguistics punctuation 
lecture notes number 
center study language information stanford ca 
palmer hearst 

adaptive sentence boundary 
technical report ucb csd university california berkeley computer science division 
riley 

applications tree modelling speech language indexing 
proceedings darpa speech natural language workshop pages 
morgan kaufmann 

