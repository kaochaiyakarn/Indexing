time critical multiresolution rendering large complex models enrico eric crs center advanced studies research development sardinia uta ca italy www crs large geometrically complex scenes exceeding millions polygons hundreds objects arise naturally areas interactive computer graphics 
time critical rendering scenes requires ability trade visual quality speed 
previous shown done representing individual scene components multiresolution triangle meshes performing frame convex constrained optimization choose mesh resolutions maximize image quality meeting timing constraints 
demonstrate nonlinear optimization problem linear constraints associated large class quality estimation heuristics efficiently solved active set strategy 
exploiting problem structure lagrange multipliers estimates equality constrained problem solutions computed linear time 
results show algorithms data structures provide low memory overhead smooth detail control guarantee acceptable limits uniform bounded frame rate widely changing viewing conditions 
implementation details results tests memory needs algorithm timing efficacy 
key words multiresolution modeling level detail adaptive rendering numerical optimization time critical graphics large geometrically complex models common number application domains including rigid body simulations computer aided design architectural visualizations flight simulation virtual prototyping 
models exceeding millions polygons hundreds distinct possibly animated objects displayed directly interactive speeds high machines 
traditional approach render time critical setting pre compute small number independent level detail lod representations object fig 

multiresolution rendering example 
snapshots illustrate example rendering atlas experiment pit part lhc facility cern 
bottom image objects rendered maximum resolution 
top left image viewer sees interactive navigation resolution object modified meet timing constraints 
top right image depicts resolution chosen object lighter shades representing detail 
composing scene switch run time lods 
solution drawbacks terms memory needs quality results 
propose model scenes collections multiresolution triangle meshes choose resolution mesh solving continuous constrained optimization problem maximization scene quality timing constraints see 
image quality degradation rendering time predicted customizable heuristics 
demonstrated solution predicts image quality degradation rendering time smooth customizable heuristics leads significantly higher quality results current lod approaches 
build developing improved optimization method tailored large class heuristics 
multiresolution scene rendering framework improves current lod selection methods areas ability meet timing constraints 
contrast current static feedback algorithms technique predictive aims guaranteeing uniform bounded frame rate widely changing viewing conditions technique appropriate time critical setting enables usage user input prediction reduce perceived lag application level scene hardware independence 
image degradation associated low resolution meshes hardware behavior modeled customizable heuristics 
possible incorporate context sensitive quality constraints automatically adapts applications specific hardware running primary importance distributed graphics applications visualizing shared model low memory overhead 
contrast standard lod approaches multiresolution structure compact remaining fast high speed rendering 
specific compression techniques overhead associated structure single full resolution mesh memory footprint position normal associated vertices smaller attributes colors texture coordinates smooth measurable image degradation 
multiresolution structure efficiently supports geomorphs smooth transitions resolutions obtained cost need resort costly blending effects 
rest organized follows 
section reviews previous time critical multiresolution scene rendering 
section gives overview general ideas approach section concentrates image quality degradation rendering time prediction heuristics section discusses particular problem structure deriving selected heuristics details customized optimization algorithm 
section describes multiresolution mesh representation 
section shows experimental results discusses advantages limitations method 
section presents view 
background related levels detail time critical rendering applications dealing time critical graphics include possibility store model fixed number independent resolutions vrml 
main advantages lods simplicity implementation fact lods pre calculated polygons organized efficient way triangle strips display list exploiting raw graphics processing speed retained mode graphics 
main drawbacks technique related memory overhead severely limits practice number lods object 
example representing object just lods cause overhead single resolution version 
small number lods introduce visual artifacts due sudden changes resolution differing representations importantly limits degrees freedom lod selection algorithm 
run time lod selection typically done static heuristics feedback algorithms 
static heuristics distance coverage perceptually motivated lod mappings adaptive inherently unable produce uniform frame rates feedback algorithms adaptively vary lod mappings past rendering times suffer unavoidable overshoot oscillation problems complexity environment varies rapidly entering room walkthrough application 
demonstrated funkhouser quin guarantee bounded frame times predictive algorithms optimize lod selection estimates rendering time image degradation 
having guarantee total maximum lag application necessary precondition prediction techniques lag reduction 
unfortunately combinatorial optimization problem associated lod selection equivalent version multiple choice knapsack problem np complete approximation algorithms guarantee optimality 
current state art techniques funkhouser quin greedy algorithm mason blake incremental technique produce result guaranteed half optimal solution running time depending number objects number lods object 
demonstrated problems overcome appropriate multiresolution data structures enable express predictive lod selection framework continuous convex constrained optimization 
improved optimization algorithm efficiently exploits problem structure associated large class image degradation rendering time heuristics 
dynamic simplification alternative object lod selection dynamically re visible objects continuously viewing position shifts 
dynamic re tessellation adds run time overhead approach suitable dealing large objects static environments time gained better simplification larger additional time spent selection algorithm 
reason technique applied entire scene seen single multiresolution object extract variable resolution representations 
classic applications dynamic re tessellation techniques terrain visualization see survey 
hoppe introduced view dependent simplification progressive meshes applying visualization single large objects :10.1.1.153.3865
xia discuss application progressive meshes scientific visualization 
luebke apply hierarchical dynamic simplification large polygonal cad models adaptively processing entire database decomposing environment individual objects 
support interactive animated environments composed objects focuses object view independent resolution selection 
overview approach approach relies scene description objects represented multiresolution triangle meshes compact data structures able efficiently provide demand triangle mesh approximation object requested number faces 
frame aim find fixed short time triangle mesh representation potentially visible object produces best quality image target frame time 
done optimization phase takes input set potentially visible objects determined culling algorithm bounding box occlusion culling selects output list triangle meshes rendered 
formally triangle mesh piecewise linear approximation shape denoted tuple simplicial complex specifying connectivity mesh simplices adjacency vertices edges faces 
vm set vertex positions defining shape mesh 
am set attributes associated vertices quality approximation rendering complexity dependent sizes multiresolution representation mesh vertices triangles seen function takes input desired resolution produces output mesh approximates shape rn faces 
number triangles discrete smooth transition lods obtained geomorphs interpolating neighboring representations :10.1.1.153.3865
frame culling algorithm produces parameterized representation visible objects set associates parameter value actual set triangle meshes 
mn rn 
goal find optimal parameter vector viewing configuration includes parameters environment influence computation image object viewpoint viewing frustum number type active lights 
define heuristics visible object set cost heuristic estimates time required render scene containing visible objects resolution degradation heuristic estimates quality degradation rendered image due lower resolution objects replace full resolution ones 
complexity multiresolution representation discontinuous number triangles discrete safely assume degradation cost heuristics smooth 
simplifying assumption core approach introduces error clearly negligible sufficiently large values respect error intrinsically induced heuristics 
formalism approach predictive adaptive rendering stated follows minimize degradation subject cost desired denote componentwise inequality constant vectors desired target display time 
difficulty solving problem depends largely nature degradation cost heuristics 
see suitable multiresolution representation simple forms heuristics leading efficient solution methods applicable time critical setting 
cost degradation heuristics cost heuristic time critical typically running top pipelined graphics hardware implementing buffer algorithm 
scene display starts initialization phase initial setup buffer clears followed sequential rendering meshes finishes finalization phase buffer swap 
initialization finalization time considered constants assuming fast cpu efficient multiresolution mesh representation mesh rendering dominated time define rendering attributes process triangles time fill covered pixels depending pipeline bottleneck hardware configurations time define rendering attributes process triangles just dictated speed graphics pipe line operations rasterization 
high graphics systems fetching triangles multiresolution structure may dominant phase 
cases assume cost remains linear number triangles need determine speed dominant phase prediction rendering time 
see results section assumption verified data structure 
words cost rendering multiresolution mesh resolution estimated follows setup max tri pix pix maximum number triangles mesh setup time associated setup rendering environment object material binding time opengl tri time send triangle pipeline maximum time fetch triangle multiresolution structure processing rasterization pix time fill pixel pix estimation number pixels covered mesh rendered viewing configuration equation derive minimal resolution min reduction resolution possibly quality reduce rendering time min pix pix tri cost heuristics modeled cost fixed max min fixed init final setup resolution independent portion frame time init final frame initialization finalization times max vector containing maximum rendering time tri mesh min vector minimal resolutions equation 
constants setup tri pix init final determined benchmarks preprocessing step 
constants obviously depend rendering attributes shading model number light sources texturing pre compute values combination rendering attributes choose run time appropriate set values object 
cost model assumes ideal environment rendering time dictated rendering operations 
practice process scheduling page faults direct indirect blocking kernel calls user control impact rendering time 
current approach reduce unwanted variations frame rate add fixed worst case estimate impact system application environment rendering time 
image quality degradation heuristic degradation heuristic provide estimation perceptual distance image produced rendering viewing configuration scene composed multiresolution objects resolutions image obtained configuration objects full resolution 
local illumination models time critical applications global image quality degradation approximated summing object quality degradation measures 
visual degradation modeled equation form degradation si image si ri resolution independent weighting factor measuring importance object user viewpoint image factor estimating image produced mesh resolution approximates image mesh maximum resolution 
resolution independent factors implementation object importance modeled wv ws wv factors proportional decline visual acuity apparent object velocity distance focus point ws user definable object importance factor impose higher quality interactively manipulated objects 
various authors derived velocity eccentricity factors experimental data 
models developed reddy tailored computer graphics imagery wv log apparent velocity object bounding box center apparent distance projected bounding box focus point screen center cursor position object manipulation 
measured visual degrees account physical display resolution physical viewing distance 
conversion pixels visual degrees straightforward tan rx min wx ry wy number pixels visual degree rx ry horizontal vertical display resolution wx wy physical horizontal vertical display size physical viewing distance 
similar models different formulations wv 
resolution dependent factors accurately measuring image challenging task measuring image difference perceptually meaningful image metric open research subject see proposed techniques require excessive amount computation carried line 
main techniques proposed run time lod selection predict visual degradation analytic function explicit model effects simplification graphics models 
formulation generalizes wide class proposed heuristics image wi wi resolution independent weighting factor exponent defining shape error curve 
common choices parameters wi pix wi pix wi pix formulations intuitively express image degradation function monotonously increases average projected triangle size 
temporal coherence degradation heuristic defined previous sections purely image quality depend quality variation time 
possible explicitely take account temporal coherence including equation hysteresis factor penalising resolution changes done example 
complex scenes hysteresis necessary resolution changes distributed objects factors primarily affect objects changes noticeable 
include hysteresis quality degradation heuristic 
optimization algorithm resolution optimization problem cost degradation heuristics resolution optimization problem written min ci ar max max 
max 

desired fixed min min min wv ws wi wv ws wi wv mn mn ws mn wi mn see particular problem structure leads efficient numerical solution techniques 
idea active set strategy order necessary conditions existence minimizer constrained optimization problem require existence lagrange multipliers rf ai ai bi active set index set inequality constraints ai denotes th row constraint matrix bi denotes th element constraint vector implies possible search solution original inequality constrained optimization problem edges faces feasible set solving sequence equality constrained problems form min iteratively refining working set aim determining optimal active set satisfies condition 
type optimization technique known active set strategy proven effective bound constrained quadratic programming problems 
performance method depends efficient generate initial feasible solution solve equality constrained problems iterative refinement phase compute lagrange multipliers checking convergence 
see sub problems solved extreme efficiency case resolution optimization 
active set strategy resolution optimization initialization phase generation feasible starting point initial working set problem straightforward known lower resolution bounds min cost heuristic monotonously increasing degradation heuristic monotonously decreasing 
problem infeasible cost min desired problem feasible objects full resolution cost desired optimization process terminates appropriate values readily returned 
cases know problem solution rendering time exactly cost desired means time constrained case constraint number timing constraint satisfied optimum 
initialize working set 
simplest solution generate feasible starting point start searching solution min know feasible 
incremental technique produces value closer optimum start resolution objects computed previous frame minimal resolution newly visible objects iteratively reduce problem feasible object resolutions factor starting objects highest degradation cost ratio 
iterative refinement iteration feasible current working set find search direction solving equality constrained problem min bi solution problem easily computed introducing lagrangian function bi solving 
plugging equation solving gives simple analytic formula bi ai bi ai ci cja 
index set variables value determined active lower bound constraints 
index set variables value determined active upper bound constraints step take minimizer subspace defined current working set may violate new constraints 
compute largest possible step size violate constraint set working set updated including constraints active process repeated convergence 
convergence test feasible solution problem minimizer subspace defined order optimality conditions imply exist multipliers know rf ai minimizer original problem 
case iterative refinement process terminate solution remove working set constraint negative enabling decrease value subsequent iterative refinement steps 
necessary convergence test easily computed finding minimum norm solution equation 
plugging unique set lagrange multipliers equation solving formula ci ai ci ai time critical optimization algorithm gives simple analytic algorithm efficient requiring operations step possible large scenes time needed find optimal solution high real time 
frame algorithm starts solution close computed previous frame produces sequence intermediate solutions monotonously converging optimum know acceptable approximate results available certain time deadlines 
possible create time critical version algorithm modifying termination criterion include convergence test test expiration allocated time 
idea algorithm 
cpu time spent optimization time spent rendering meshes resolution suggested optimization algorithm parameters algorithm externally imposed 
characteristics ideal candidate optimization stage time critical rendering pipeline 
time critical rendering pipeline time critical rendering pipeline aims display image certain time deadlines independently complexity scene 
reach goal exploit properties algorithm adaptively controlling frame time budget allocated optimization desired display time 
parameters system control maximum visual feedback lag lag fraction frame time devote optimization 
frame perform culling optimization display steps sequence 
culling step time may vary dependent type algorithm complexity scene seen current viewpoint 
starting optimization step measure frame time available allocate range appropriate time budgets optimization display steps 
optimization step run allocated time result passed final algorithm active set strategy solving min starting point timing constraint opt done false stopped false done stopped arg mind arg mini ai done true arg max min bi stopped time elapsed opt ensure feasible ensure done optimal optimal active set ensure done time elapsed opt ensure done time elapsed opt display stage 
time critical computing approach bounds maximum visual feedback lag enables prediction techniques extrapolate past user input data time points lag reduction 
single processor machine maximum visual feedback lag dictates maximum visual feedback frequency 
multi processor machine visual feedback frequency independently controlled separate threads pipeline stage 
multiresolution mesh representation optimization approach independent particular data structure represent multiresolution meshes 
requirements ability represent mesh arbitrary number triangles traverse structure arbitrary resolutions faster graphics pipe line time compatible linear cost model 
additional requirement approach practical large scene databases data structure compactness 
progressive mesh pm representation suitable candidate structure :10.1.1.153.3865
pm representation compact rendered directly traversed construct single resolution mesh structure rendering 
managing dynamic mesh structures associated multiresolution representation introduces time space overhead scene rendering application 
experimental results indicate reconstruction rate triangles sec pentium pro mhz 
cost amortized frame single resolution meshes cached expense memory 
exploiting object frame frame coherency partial solution complex scenes discontinuity scene complexity caused objects entering exiting viewing frustum 
section propose simple multiresolution triangle mesh structure tom totally ordered mesh efficiently supports vertex packing indexing 
structure compact requiring small overhead single full resolution mesh provides fast triangle vertex traversal rates resolution 
similar structure independently developed gu streaming geometry vrml 
tom totally ordered mesh algorithms published simplify polygonal mesh iteratively contracting vertex pairs 
vertex pair contraction operation denoted replaces vertices single target point incident edges linked removes triangles degenerated lines points 
operation quite general express edge collapse vertex clustering algorithms 
primary difference vertex pair contraction algorithms lies particular vertex pairs contracted chosen new vertices positioned 
define vertex substitution denoted restricted form vertex pair contraction target point constrained second vertex pair see 
iteratively applying vertex substitution triangle mesh reduced removing vertex possibly degenerated faces time 
research results demonstrate simplification quality speed obtained technique 
ta tl tb tr tc ta tb tc fig 

vertex substitution 
left substitution removes triangles edge 
right substitution just connects disjoint mesh regions 
cases simplification information retrieved data stored vertex level original vertex list 
data structure iterative vertex substitution modify vertex data add new vertices information stored explicitly vertex substitution history vertex 
total order defined vertex list triangle list contraction resolution 
sorting order simplification generates compact efficient data structure see 
ordering vertex list obtain packed representation active vertices vertex resolution rv exactly ones vertex array size ordering triangle list way iterate triangles define mesh arbitrary resolution time depending number active triangles lengths vertex substitution chains 
memory overhead introduced store multiresolution mesh limited space required store vertex substitution history associated vertex pair contraction 
encode vertex substitution associating vertex vertex resolution transformation occurs vertex substituted 
vertices sorted resolution tom vertex list triangle list active vertices active triangles traversal rv rt vertex substitution chains fig 

tom data structure 
multiresolution meshes stored vertex list triangle list sorted contraction resolution 
nv nt vertex needs stored vertex resolution implicit vertex index 
minimal vertex resolution triangle vertex resolution triangle removed mesh contraction edges need stored retrieved short time traversing substitution chains vertices 
representation space overhead single resolution mesh representation equal just vertex index vertex 
typical mesh triangles considering bits represent vertex index floating point number overhead associated structure single full resolution mesh memory footprint position normal associated vertices smaller attributes colors texture coordinates 
mesh traversal render mesh specified number triangles determine vertex resolution rv triangle number collapses traverse triangles vertex chains active vertices reached 
triangle traversal stops collapsed triangle time triangle equal vertex indices 
noted structure vertex substitution impossible get approximation exactly triangles substitution deletes faces typically manifold objects 
case traversal algorithm enumerates faces introducing error 
demonstrated results section lengths substitution chains limited relatively independent model size 
case lenght full resolution triangle traversal full resolution strictly linear 
resolution decreases traversal rate decreases slowly vertex substitution definition create long chains vertices 
fact vertex substitution increments depth vertex chains containing vertex keeps unchanged length chains containing vertex 
smooth transitions resolutions obtained interpolating vertex data 
vertex substituted simplification step attributes active vertex interpolated traversal 
currently implement feature linear interpolation data 
implementation results experimental software library supporting time critical multiresolution scene rendering algorithm described implemented tested silicon graphics irix windows nt machines 
results obtained silicon graphics pc running windows nt configured single mhz pentium iii processor kb cache mb ram graphics chipset 
tom data structure triangle meshes evaluation selected available public domain enable comparison approaches 
characteristics meshes summarized table 
multiresolution versions constructed memoryless simplification algorithm similar introduced lindstrom turk modified building tom data structures incrementally constructing vertex chains simplification 
detailed description simplification technique scope 
details available 
mesh vertices triangles site bunny www graphics stanford edu fandisk www research microsoft com hoppe cow www cs cmu edu garland cow html table triangle meshes tests memory table summarizes storage requirements tom structure test meshes compared original mesh face vertex form typical lod representation levels details progressive mesh pm representation memory resident data structure simplified removing face level attributes comparison fair 
pm representation rendered directly traversed construct single resolution mesh structure provide representation minimum maximum memory required corresponding rendering mesh lowest respectively highest possible resolution 
size estimations assume mesh contains normals vertex attributes bits integer floating point data 
mesh bunny fandisk cow face vertex tom lod pm pm table minimum storage needs rendering application 
sizes kb percentages respect mesh face vertex form 
see table tom multiresolution structure compact overhead respect single resolution mesh face vertex form 
overhead fraction reduced associating attributes vertex normal color texture coordinates 
traversal rendering focusing time critical scene rendering applications important results relative triangle traversal rate multiresolution structure 
overhead respect traversing single resolution mesh dependent lengths vertex substitution chains 
presents overhead associated traversing bunny fandisk cow meshes various resolutions 
see results different meshes similar 
overhead grows slowly simplification ratio cases exceeds 
possible traverse active triangles retrieving vertex attributes speed sufficient feed graphics pipeline high accelerators 
triangle traversal overhead bunny fandisk cow resolution fig 

multiresolution traversal overhead 
ratio extra vertices traversed render meshes multiple resolutions 
resolution expressed fraction vertices 
presents data structure traversal rendering performance obtained multiresolution structure cow mesh 
similar results obtained meshes 
benchmarks directional lights gouraud shading viewing configuration compressing mesh pixel area avoid fill rate bottlenecks 
current implementation renders meshes strict opengl core command set sequence independent triangles vertices specified calls 
expect performance improvement ext vertex array extension 
see standard opengl rendering performance resolutions multiresolution version similar limit rendering streamlined version mesh 
cases meshes rendered constant speed second resolutions showing linear cost heuristics approximation rendering behavior 
triangle traversal rates multiresolution structure measured having traversal routine call empty vertex normal procedures rates obtained rendering code resolutions range second second 
expect timing predictions linear cost heuristics current high machines 
speed triangles second tom traversal tom rendering streamlined opengl rendering resolution fraction total triangles fig 

multiresolution traversal rendering performance 
timing statistics cow mesh 
experimental measures sgi single mhz pentium iii kb cache mb ram graphics 
rendering environment directional lights material object gouraud shading independent triangles normal vertex time critical rendering test behavior algorithm written simple walkthrough application top multiresolution modeling time critical rendering libraries 
application culling phase uses simple bounding box test optimization phase uses algorithm rendering performed opengl positional light material object gouraud shading normal color vertex 
application single threaded high api timing measures 
tests parameters wi pix degradation heuristic 
videotape demonstrating system recordings live sequences available 
fig 

scene walkthrough environment 
test scene full resolution contains objects total triangles 
camera moving point point path colored black looking point cost model coefficients cost model coefficients corresponding rendering environment benchmark application determined experimentally rendering sample objects variety sizes lods 
table summarizes values tests 
description cost model coeff 
value initialization finalization setup final triangle draw tri tri pixel fill pix pix material setup init obj table cost model coefficient benchmark application 
experimental measures sgi single mhz pentium iii kb cache mb ram graphics 
rendering environment positional light material object gouraud shading independent triangles normal color vertex test environment recorded various parameters walkthrough test scene containing objects total polygons see 
constructed randomly distributing plane colored replicas cow mesh 
images displayed window 
scene constructed camera path established include various extreme viewing configurations representing typical situation scene exploration object inspection sudden changes interest 
objects initially visible point progressively exiting viewing frustum point reached camera focusing objects remaining background 
point camera suddenly changes orientation large number objects immediately visible 
camera moves back point looking scene 
resolution adaptation rendering times machine tests varies milliseconds frame depending number visible objects 
experimental results discussion number potentially visible triangles observer viewpoint test path number triangles rendered meet display time constraint desired ms bottom diagram 
corresponding frame time statistics top 
predicted frame time closely matches actual measured frame time validating cost model assumptions 
actual frame time maintained desired time presence large variations visual complexity 
speedups respect full resolution rendering range 
relatively large number objects see optimization time remains relatively small compared display time 
tests performed time constraint optimization step opt ms 
large portions path optimization completed time sensibly inferior allocated limit typically ms producing optimal solution leaving time system tasks 
elaborate implementation feedback algorithm adaptation opt fig 

test scene seen viewpoint smooth shading flat shading resolution mapping 
presents scene seen viewpoint image objects rendered smooth shading viewer interaction 
middle image presents scene seen viewpoint objects rendered flat shading emphasize tessellation details 
image depicts resolution chosen object lighter shades representing detail 
triangles time frame frame predicted frame measured frame measured optimize visible triangles rendered triangles desired optimize fig 

statistics observer viewpoint test path 
predicted time closely matches actual frame time maintained targeted ms presence wide variations potential scene complexity 
particular frame resolutions distributed range 
mapping illustrates effect degradation heuristic distribution polygon budget 
see wide variation resolutions little perceptual differences levels detail appear evidence flat shading 
timing quality results significantly better obtained standard discrete lod approaches 
cad visualization example computer aided design cad architectural models typically contain hundreds objects hundreds thousands millions primitives 
algorithm display models interactive rates 
tested experimental walkthrough application model atlas experiment pit component large collider lhc particle accelerator facility european laboratory particle physics cern geneva switzerland 
full resolution model contains triangles parts 
presents images detector 
image detector rendered full resolution 
middle image resolution detector component adapted meet rendering time constraint ms machine tests 
complexity model consequently reduced triangles original 
image depicts resolution chosen object lighter shades representing detail 
mapping illustrates reduction detail obtained simplifying small components interior detector 
shows frame walkthrough user focusing details reduced view 
construction details foreground clearly visible timing constraints met reducing complexity background objects 
fig 

atlas experiment pit part lhc facility cern 
full resolution triangles adaptive resolution triangles resolution mapping 
fig 

atlas experiment pit detail part lhc facility cern 
full resolution triangles adaptive resolution triangles resolution mapping 
described framework time critical rendering large geometrically complex scenes 
technique relies scene description individual scene components represented multiresolution triangle meshes 
perform constrained optimization frame choose resolution potentially visible object generates best quality image meeting timing constraints 
image quality degradation rendering time predicted customizable heuristics 
previous focused general solution problem valid long problem remains convex demonstrates particular optimization problem associated large class commonly heuristics solved efficiently active set strategy searches solution original inequality constrained optimization problem edges faces feasible set solving sequence equality constrained problems 
exploiting problem structure lagrange multiplier estimates equality constrained problem solutions computed linear time 
important area development validation perceptually accurate image degradation measures approximations leading simplified numerical solution methods applicable time critical setting 
applicability approach depends ability represent mesh arbitrary number triangles traverse mesh structure arbitrary resolution short predictable time 
data structure satisfying criteria described 
current data structure supports view independent resolution rendering appropriate scenes composed small scale objects 
working extending data structure support high speed variable resolution traversals 
case optimization algorithm assign polygon budget visible objects timing constraints object decide distribute budget frame 
approach improve visual quality scenes composed large objects linked pieces 
currently selecting different resolutions pieces may lead cracks assembly problem avoided treating group linked pieces single multiresolution object 
experimental results demonstrate algorithms data structures provide low memory overhead smooth level detail control guarantee acceptable limits uniform bounded frame rate widely changing viewing conditions 
system enables handling scenes totaling millions polygons hundreds independent objects standard graphics pc 
believe ultimately time critical rendering system combine algorithms occlusion culling image rendering rendering acceleration methods 
system automatically partition scene choosing appropriate methods different sets objects cost quality consideration algorithm constraints 
acknowledgments hugues hoppe michael garland stanford graphics group making benchmark datasets available research community 
atlas dataset courtesy cern geneva switzerland 
greatly appreciate help received marco fabio experimental measures 
research partially sponsored european project es contract 
acknowledge contribution regional authorities 
paolo cignoni enrico roberto scopigno 
representation visualization terrain surfaces variable resolution 
visual computer 
issn 
hugues hoppe 
smooth view dependent level detail control application terrain rendering 
proceedings ieee visualization pages 
ieee 
hong shigeru arie kaufman dirk 
virtual voyage interactive navigation human colon 
turner whitted editor siggraph conference proceedings annual conference series pages 
acm siggraph addison wesley august 
isbn 
patrice olivier enrico jean pierre eric 
system collaborative prototyping 
rard editor proc 
international scientific workshop virtual reality prototyping pages june 
conference held laval france june 
enrico eric 
time critical multiresolution scene rendering 
proceedings ieee visualization pages conference held san francisco ca usa october 
ieee computer society press 
open inventor architecture group 
open inventor manual official document open systems 
addison wesley reading ma usa 
vrml international specification iso iec december 
paul heckbert michael garland 
multiresolution modeling fast rendering 
proc 
graphics interface pages banff canada may 
canadian inf 
proc 
soc 
url www cs cmu edu ph 
michael reddy benjamin watson neff walker larry hodges 
managing level detail virtual environments perceptual framework 
presence teleoperators virtual environments 
john james helman 
iris performer high performance multiprocessing toolkit real time graphics 
andrew glassner editor proceedings siggraph orlando florida july computer graphics proceedings annual conference series pages 
acm siggraph acm press july 
isbn 
thomas funkhouser carlo quin 
adaptive display algorithm interactive frame rates visualization complex virtual environments 
james kajiya editor computer graphics siggraph proceedings volume pages august 
mathias wloka 
lag multiprocessor virtual reality 
presence teleoperators virtual environments september 
mason edwin blake 
automatic hierarchical level detail optimization computer animation 
computer graphics forum august 
proceedings eurographics 
issn 
de paola enrico 
hierarchical terrain models survey formalization 
proceedings sac pages phoenix ar march 
hugues hoppe :10.1.1.153.3865
progressive meshes 
siggraph proc pages aug 
url www research microsoft com research graphics hoppe papers html 
julie xia amitabh varshney 
dynamic view dependent simplification polygonal models 
ieee visualization 
ieee october 
isbn 
julie xia el amitabh varshney 
adaptive real time level detail rendering polygonal models 
ieee transactions visualization computer graphics april 
david luebke carl 
view dependent simplification arbitrary polygonal environments 
turner whitted editor siggraph conference proceedings annual conference series pages 
acm siggraph addison wesley august 
isbn 
michael reddy 
development evaluation model visual acuity computer generated imagery 
technical report ecs csg dept computer science edinburgh university february 
lewis 
virtual planetary exploration large virtual environment 
virtual reality visualisation ieee visualisation pages 
yamamoto tamura 
gaze directed adaptive rendering interacting virtual space 
ieee virtual reality annual international symposium vrais pages 
ieee october 
laszlo neuman werner 
perception color image difference 
computer graphics forum september 
roger fletcher 
practical methods optimization 
volume constrained optimization 
wiley new york ny usa 
philip gill walter murray margaret wright 
practical optimization 
academic press 
hugues hoppe 
efficient implementation progressive meshes 
computers graphics january 
andr gu gabriel taubin bill horn francis lazarus 
framework streaming geometry vrml 
ieee computer graphics applications march april 
hugues hoppe tony derose tom duchamp john mcdonald werner stuetzle 
mesh optimization 
siggraph proc pages aug 
url www research microsoft com research graphics hoppe papers html 
andr gu 
surface simplification variable tolerance 
second annual intl 
symp 
medical robotics computer assisted surgery pages november 
michael garland paul heckbert 
surface simplification quadric error metrics 
siggraph proc pages august 
url www cs cmu edu garland quadrics 
peter lindstrom greg turk 
fast memory efficient polygonal simplification 
proceedings ieee visualization pages 
ieee 
hugues hoppe 
new quadric metric simplifying meshes appearance attributes 
proceedings ieee visualization pages conference held san francisco ca usa october 
ieee computer society press 
kobbelt hans peter seidel 
general framework mesh decimation 
wayne davis kellogg booth alain fourier editors proceedings th conference graphics interface gi pages san francisco june 
morgan kaufmann publishers 
eric enrico 
tom totally ordered mesh multiresolution triangle mesh structure time critical graphics 
technical report crs center advanced studies research development sardinia italy september 
enrico eric 
time critical multiresolution scene rendering 
technical report videotape crs center advanced studies research development sardinia italy october 
zhang dinesh manocha thomas hudson kenneth hoff iii 
visibility culling hierarchical occlusion maps 
turner whitted editor siggraph conference proceedings annual conference series pages 
acm siggraph addison wesley august 
isbn 
daniel 
automatic image placement provide guaranteed frame rate 
siggraph conference proceedings annual conference series pages 
acm siggraph addison wesley august 
daniel jonathan cohen andrew wilson zhang carl kenneth hoff thomas hudson wolfgang eric baker rui mary fred brooks dinesh manocha 
framework realtime walkthrough massive models 
technical report tr department computer science university north carolina chapel hill march 

