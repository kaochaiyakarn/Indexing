february graph theoretic foundations program slicing integration available cacs tr arun lakhotia center advanced computer studies university southwestern louisiana lafayette la fax arun cacs edu revision history generalizes program slicing algorithms originally defined representations programs operate directed graphs 
doing provides uniform framework model weiser ottenstein ottenstein approaches program slicing mathematical operations transparent concerns program structure semantics 
transparency helps deriving calculational style proofs algebraic properties slices making general assertions properties previously established generalizing weiser slicing criterion allow union statements 
program integration algorithms due reps horwitz prins reps program slicing elementary operation generalized integrate directed graphs 
algorithms integrate versions artifact may represented graphs instance versions specification design software systems 
slice program respect program point variable consists statements program may affect value point program slicing technique extracting program slice introduced weiser wei 
showed program slicing aided debugging programs 
works program slices measuring module cohesion assisting software maintenance 
works kl ah introduce notion dynamic slice set statements affect value variable particular instance program point execution specific input 
comparison slice defined weiser termed static slice 
section restrict attention static program slices 
henceforth explicitly stated program slice implies static program slice 
approaches program slicing due weiser wei due ottenstein ottenstein oo referred weiser slice slice respectively 
approaches differ slicing criterion factor slice performed technique table comparison various slicing algorithms 
weiser algorithm identify set statements slice performing reachability analysis representation graph slicing criterion 
modified weiser algorithm section uses slicing criterion weiser algorithm produces similar results performing reachability analysis 
algorithm scope procedure february representation slicing criterion technique weiser wei multiple flowgraph statement variable ottenstein ottenstein hpr horwitz reps binkley hrb modified weiser section incremental flow analysis single program dependence graph statement reachability analysis multiple system dependence graph statement reachability analysis single extended pdg statement variable reachability analysis detecting statements belonging slice shown table :10.1.1.50.4405
specific slicing algorithms gal hrb oo ot wei differ process single procedure multiple procedure programs internal representation programs 
interesting application program slicing problem integrating multiple versions programs 
problem formalized horwitz prins reps hpr may informally stated follows 
programs variants third program base 
program preserves changed behavior wrt base preserves preserved behaviors base problem program integration find base 
program exist said interfere base algorithm detect 
need program integration commonly arises scenarios persons may perform simultaneous modifications program modifications needed merged conditions stated satisfied 
horwitz prins reps program slicing identify preserved changed behaviors programs 
reported algorithms program integration hpr algorithm hpr reps algorithm rep yang algorithm yan 
gives schematic diagram comparing internal representations algorithms 
obvious proof correctness slicing integration algorithms properties results depend strongly internal representation programs operations produce results hpr rep wei 
algorithms different representations operations proofs need established afresh combination 
define modified weiser algorithm slicing criterion weiser algorithm uses reachability analysis detect statements belonging slice 
implies modified weiser slicing algorithms perform reachability analysis detect statements slice 
differ representation program operate slicing criterion 
leads reachability analysis technique detecting statements slice operation directed graphs 
call graph slicing 
phrases single procedure slice multiple procedure slice mean intraprocedural slice interprocedural slice respectively 
due similarity spellings phrases require extra caution authors readers alike 
programs operands hpr reps integration algorithm program dependence graph representation yang integration algorithm program representation graph representation program result schematic view hpr reps yang program integration algorithms 
algorithms translate operand program respective internal representation integrate operands internal representation create program corresponds internal representation 
graph slicing integration directed graph graph representation february artifact specification design program program design specification schematic view benefits abstracting slicing integration operations operations directed graphs 
hpr reps program integration algorithm integrate programs graph representations pdg 
analogously artifacts domains designs specifications may sliced integrated meaningful results 
constraints representation meaning resulting artifacts discussed section 
note hpr reps integration algorithms yang algorithm defined program dependence graph representation programs program slicing graph theoretic set theoretic operations perform operation 
define analogous algorithm directed graphs graph slicing 
call operation graph integration 
generalization program slicing program integration operations graphs benefit allows investigation properties operations independent context usage 
leads isolating properties algorithms categories 
derived solely graph theoretic reasoning referred syntactic properties february 
depend interpretation associated graph representations referred semantic properties 
implies syntactic properties program slicing integration algorithms derived properties analogous graph operations 
proof properties combination representations operations extrapolated proofs corresponding properties graphs 
model weiser program slicing algorithms graph slicing 
discover property union slices syntactic property modified weiser slices generalized investigated weiser 
loosely speaking weiser union slices statement different variables slice statement variables 
find union slices different statements variables slice union slicing criterion 
properties relate meaning resulting program operand programs integration slicing algorithms classified semantic properties 
properties intrinsically need established combination interpretation associated language relations encoded graph representations 
reps yang ry operational interpretation programs formulate meaning program preserved slices slicing theorem 
similarly establish meaning program generated hpr integration algorithm terms operand programs stated integration theorem 
generalization gives interesting insights integration operation 
splits integration theorem parts syntactic integration theorem semantic integration theorem 
theorem states relation structures operands results integration graph theoretic expressions second theorem relates meanings operands results 
directed graphs specific interpretation state second theorem terms interpretation 
show semantic integration theorem proved interpretation satisfies slicing axiom 
implication generalization multiple procedure slicing algorithm abstracted terms graph slicing satisfies slicing theorem hpr reps program integration algorithms currently defined integrating single procedure programs integrate programs multiple procedure programs 
horwitz reps binkley hrb multiple procedure slicing algorithm unfortunately abstracted graph slicing possibility program integration hpr reps integration algorithm investigated explicitly bin follow findings 
interesting implications generalization 
discussed section outlined 
rest organized follows 
section background information 
includes notations definition program dependence graph hpr modified weiser program slicing algorithm hpr program integration algorithm 
section defines graph slicing presents properties slices 
section models hpr modified weiser slicing algorithms abstraction developed section 
section defines graph integration section outlines requisite slicing axiom hold derive semantic integration theorem 
section presents implications generalization 
background notations february directed graph set vertices graph edges 
notation denote denote elements belonging set edges notation denote coordinate pair notation denotes graph subgraph shorthand extrapolated defined follows 

respectively 
binary operator 
set theoretic operators extends tuple 
tuples 
extended element tuple referred set tuple gives set elements elements 
programs restrict study programs written simple programming language consisting assignment read write statements conventionally accepted syntax 
statement appears program may list variables 
special type output statement list variables values interest program 
language statements declare start program declare variables local program 
scalar variables permitted 
procedure declaration statements considered non executable statements significant slicing integration 
statements called executable 
language consists common features languages horwitz prins reps hpr weiser wei performing single procedure slices 
restricting language enables compare slicing integration algorithms different sources 
program slicing algorithms guided data control dependences statements program may gathered flow analysis asu hec 
sets variables associated node statement procedure statement 
consists variables values may changed statement set variables values uses 
sets defined follows contains occurs contains read contains print occurs contains contains occurs occurs february contains variable said referred statement defined 
flowgraph hec path containing defs nodes said definition clear wrt node node definition variable node said reach node iff def definition clear path wrt node node definition node said reach node vertex flowgraph associate set set vertices containing definitions reach vertex program dependence graph ottenstein ottenstein oo define program slice pdg representation programs 
program slicing algorithms approach employ variation graph 
hpr reps program integration algorithms operate pdg representation programs 
subsection presents brief sketch program dependence graphs 
pdg representation oo variation theme introduced 
definition program dependence graph paraphrased hpr 
program dependence graph program multigraph 
vertices pdg represent program components edges represent flow control dependences components 
vertex assignment control predicate program 
addition pdgs include categories vertices distinguished vertex called entry vertex variable defined vertex labeled 
entry vertex treated predicate vertex true 
edges pdg divided control dependence edges data dependence edges 
kinds data dependence edges flow def order dependence edges 
source control dependence edge predicate vertex 
control edge predicate vertex vertex represents program component immediately nested control construct predicate represented control dependence edge labeled truth value branch occurs 
flow dependence edge vertex vertex denoted defines variable uses variable control reach execution path intervening definition def order dependence edge vertex iff conditions hold define variable branch conditional statement encloses exists program component appears left program syntax tree 
def order edge denoted shows program program dependence graph 
program pdg denoted definition pdg feasible exists program corresponds infeasible 
flow dependence edges classified loop carried loop 
classification significant purposes omitted 
program entry february program dependence graph sample program 
control edges represented boldface arrows 
truth values edges shown keep graph simple 
loop carried edges represented solid arrows hash mark 
loop independent edges represented solid arrows 
def order edges represented solid arrows circle mark 
ottenstein ottenstein program slicing algorithm ottenstein ottenstein definition slice oo differs weiser wei original definition program slice 
program slice set program statements directly indirectly contribute computation performed program point 
slicing criterion parameters program sliced definition consists statement 
slicing algorithm operates program dependence graph representation program may stated terms graph program 
vertex pdg slice respect written graph containing vertices transitive flow control dependence reps yang ry show semantic properties program slices computed algorithm 

feasibility lemma 
program slice feasible pdg 

slicing theorem 
slice program respect set vertices 
state halts state agrees variables initial definition vertices halts compute sequence values program point final states agree variables final vertices ottenstein ottenstein express slicing algorithm 
formalization done horwitz prins reps hpr 
defined believe definition precise included slice requires edge february horwitz prins reps generalized slicing criterion consist set statements defined resulting slice replacing definition showed term slicing criterion consisting single statement unit slicing criterion 
weiser program slice weiser slicing algorithm differs ottenstein ottenstein respects 
slicing criterion consists tuple statement variable 
performs incremental data control flow analysis program detect statements slice 
implication difference set slicing criterion program may sliced weiser algorithm cross product set statements set variables program 
set larger set statements set unit slicing criterion slicing algorithm 
second difference weiser slicing algorithm computationally expensive pdg program computed constant number passes program number passes program required weiser algorithm depends nesting depth statement slice performed 
agrawal horgan ah observed program slice weiser slicing criterion say var pdg representation may performed finding reaching definitions var node traversing program dependence graph nodes 
statements set vertices visited traversal constitute desired slices 
statement quite precise gives gist relationship 
may stated precisely definition program statement variable respectively pdg call algorithm modified weiser algorithm 
pdg represent relationships def rd program slice defined completely terms program representation pdg 
order able define extended pdg section pdg extended contain relations 
weiser extended slicing criterion allow set variables single variable 
incorporated definition appropriately 
weiser showed set variables 
program integration problem february definition hpr ry informally integration programs respect program program preserves changes meaning respect changes meaning respect similarity meanings respect may stated formally follows 
definition ry program integration programs variants program initial state halt halts variable final states disagree final state agrees final state variable final states disagree final state agrees final state variable final state agree final state agrees final state definition programs interfere respect exist program integrates 
hpr reps program integration algorithms operate pdg representation programs 
schematic view functioning shown 
create pdgs operand programs integrate pdgs respective algorithms create program corresponding resulting pdg 
hpr program integration algorithm hpr program integration algorithm implements expression 
program corresponding pdg exists integration programs respect non interfering 
informally different set preserved points statements meaning set affected points set statements program meaning changed meanings programs preserved ensured interfere 
programs interfere feasible pdg 
tests interference referred horwitz type type ii interference tests respectively 
reps yang ry proved hpr algorithm integrates non interfering programs 
sake brevity reps program integration algorithm rep 
section state algorithm may generalized operate directed graphs 
unreachable subgraphs graph slices section defines graph slices properties slices graph 
february subgraph unreachable rest simply unreachable subgraph reachable 
theorem set unreachable subgraphs graph closed vector intersection union proof directed graphs unreachable subgraph unreachable subgraph 
prove unreachable subgraph unreachable subgraph 
results proved discussion proving individual expressions subproof 
subproofs assumptions set theoretic deductions theorems set theory subsection 
subproof subproof subproof 
expression symmetric 
subproof 
subproof assertions proven calculational style proof procedure gri 
hints justification proof steps written smaller font underlined 
sake brevity hints steps may derived definitions obvious set theoretic formulations omitted 
graph slices different vertices 
subproof 
subproof 
february definition set unreachable subgraphs graph partial order defined equivalently 
corollary lattice 
element empty graph greatest element definition unreachable subgraph respect vertex set minimal unreachable subgraph respect subgraph minimal number vertices notation denote minimal unreachable subgraph wrt referred graph slice properties graph slices 
proofs quite straight forward left reader 
definition said slice reps rep defines analogous operator relate programs program slice 
denotes cardinality size set lemma proof exercise 
defines partial order theorem graph slice may computed follows proof exercise 
lemma unique graph slice respect set vertices 
proof exercise 
lemma unreachable subgraph graph slice set vertices 
proof exercise 
lemma proof exercise 
february interesting fix point properties graph slices stated proof fix point equations form equality equation form lemma 


proof exercise 
modelling program slicing graph slicing model weiser slicing algorithms terms graph slices 
note program dependence graphs extended dependence graphs directed graphs multigraphs pdg hypergraph ber extended pdg tuple defined 
modelling slicing algorithm definition pdg tuple constraints notice tuple directed graph 
set corresponds set vertices set flow control edges def order edges pdg 
constraint elements specifies condition exists def order edge pdg program exist flow edges 
definition means completely models pdg model types february associated vertices edges 
types necessary slicing algorithm identify vertices belonging slice 
slicing algorithm may modelled terms graph slices follows 
definition pdg clear construction directed graph pdg need prove additional constraint lemma definition proof definition pdg establish prove union slice slice union slicing criterion 
earlier proved reps yang ry 
deductive reasoning establish proofs 
contrast proof procedures calculational style 
proofs better gries gri proponent style shorter easy internalize directly show assertion established symbol manipulation 
theorem proof 
definition graph slicing model program slicing know prove prove modelling modified weiser slicing algorithm february definition extended pdg tuple pdg discussion denote tuple constructed set denotes set variables program 
sets def reaching definitions program follows iff iff iff relate 
set variables set definition extended pdg contains constraints involved construction pdg set relations types associated vertices edges pdg 
model extended weiser slicing algorithm define function follows 
definition determined context function simply stated function equivalent expression definition modified weiser slicing algorithm section 
lemma iff proof exercise 
definition lemma defined extended pdg program represented pdg proof hint feasibility theorem ry construction 
implies february investigate union weiser slice relates union slicing criterion 
extend definition slice take slicing criterion consisting tuple consisting set statements set variables 
definition slice definition 
defined replacing previous lemma proof exercise 
hint definition extended pdg feasible exists program corresponds infeasible 
theorem feasible extended pdg 
proof hint pdg adequate represent programs hpr 
program represented union extended pdgs due union pdgs contained 
union sets corresponding reaching definitions may corresponding set extended pdg program represented due result worth investigating union extended pdgs resulting modified weiser slice 
point view program slicing extended pdg generated slicing important program represented program just stated represented pdg contained extended pdg theorem states constraints program slice generated union weiser slicing criteria due union independent slices 
theorem proof theorem lemma result may stated program 
analogous assertion wei may stated general assertion 
theorem proves note weiser extended slicing criterion allow set variables set statements 
extension general weiser 
base base february example integrating graph variants 
created base deleting vertex edges incident adding new vertex edge changes preserved base base example interfering graph variants 
created removing edge base 
adding vertex edge variants interfere integrated 
graph theoretic foundations integration hpr integration theorem previous section defined notion graph slice parallel program slice 
see hpr integration algorithm operates graphs pdgs uses graph slicing program slicing 
call hpr integration algorithm 
definition hpr integration algorithm graph integration defined follows graphs variations graphs interfere note type ii interference related feasibility pdg translated directed graphs constraints structure 
february rest section symbols shorthand respectively defined 
symbols definitions 
gives example graph integration variations graphs changes interfere 
discussion included 
theorem structural integration theorem 
graphs interfere respect 


proof clauses follow definition non interference 
third clause proved lemma 
definition henceforth symbols define lemma defines properties symbols defined 
stated proof 
lemma 





proof exercise 
lemma proof exercise 
lemma proof symmetrically lemma proof definition february lemma show implying symmetrically show reps integration algorithm february reps rep studies algebraic properties program integration operation laws associativity distributivity 
instance associativity context program integration means variants program integrated means variant integrations result produced matter variants integrated 
investigate properties reps formulates hpr integration algorithm operation brouwerian algebra constructed sets dependence graphs 
brouwerian algebra distributive lattice operation characterized iff algebra defines program integration operation solely terms operations 
just hpr integration algorithm reps integration algorithm graph integration simply replacing program program dependence graph directed graph slice graph slice reps description 
say construct brouwerian algebra sets directed graphs 
abstracted algorithm reads original algorithm different terms expand 
leave reader validate claims 
semantics graph slicing integration graph slicing integration algorithms developed abstracted various program slicing integration algorithms concern interpretation associated graph 
require constraints structure directed graphs contents vertex edges associate interpretation may analogous interpretations programs 
may note graph integration operation defined graph slicing graph theoretic operations 
study meaning result integration terms interpretation slicing operation 
interpretation broadly speaking mapping elements domain study domain interpretation 
definition domain graphs domain vertices constructing elements domain interpretation equality function interpretation vertices elements denote interpretation show interpretation satisfies slicing axioms semantic integration theorem stated ahead satisfied irrespective specific interpretation structure domain axiom slicing axiom corollary slicing corollary february definition interpretation graph respect graph said similar vertex set interpretation interpretation changed different 
definition set vertices graph similar interpretations 
definition set vertices graph interpretations different 
theorem semantic integration theorem graph resulting successful integration graphs respect graph interpretation graphs 
satisfies slicing axiom preserves changes interpretation respect changes interpretation respect similarity interpretations proof follows theorem structural integration theorem slicing axiom observations 
defined previous section 
related works venkatesh ven performs analogous study semantics various types program slices 
classifies result various slicing algorithms dimensions static vs dynamic forward vs backward closure vs executable 
static dynamic slices defined section 
forward slices set statements values affected values variable program 
backward slice set statements affect value variable program 
closure slice set statements related variable closure dependence 
set may form syntactically valid program preserve behavior original program statements slice 
executable hand syntactically valid preserve behavior program statements enclosed slice 
algorithms model generate static backward executable slices 
forward slicing algorithms bin typically perform transitive closure outgoing edges graph 
modelled reversing direction edges graph performing graph slicing defining dual unreachable subgraph subgraph reach vertex complement 
february dynamic slicing algorithms korel laski kl agrawal horgan ah adaptations static slicing algorithms weiser wei ottenstein ottenstein oo respectively 
korel laski adapt weiser algorithm performing incremental flow analysis trace program execution trace sequence statements representing execution program input 
analogous adaptation modified weiser algorithm may performed model algorithm 
agrawal horgan adapt slicing algorithm defining notion reduced dynamic program dependence graph program trace 
dynamic slice program statement input set statements reach corresponding reduced dynamic dependence graph 
agrawal horgan slicing method modelled graph theoretic framework 
notion closure executable slice related syntax semantics program associated slice graph representation 
syntactic validity corresponds notion feasibility program graph slice representation 
notion semantics outside scope abstraction performed graph 
develop graph theoretic foundations algorithms program slicing program integration 
abstracting ottenstein ottenstein oo weiser wei program slicing algorithms horwitz prins reps hpr hpr reps rep program integration algorithms operating directed graphs program dependence graphs 
benefits generalization summarized elaborated 

provides simpler platform investigate algebraic properties intersection union slices 

provides uniform framework model different program slicing algorithms investigate properties slices concern underlying representation program semantics 

classifies properties program slices program integration structural semantic category may proved graph theoretic reasoning 

hpr reps integration algorithms transparent underlying program representation outlines requirements representations qualified algorithms see 
graph integration algorithm integrate versions artifact just program may abstracted graphs meaning resulting artifact derived meaning preserved slice representation see 
benefit seen discussions section 
sections respectively introduce notions graph slicing graph integration mentioning programs representations 
algorithms perform respective functions establish properties results independent program representation 
section models weiser slicing algorithms graph slicing 
slicing algorithm modelled graph slicing mathematical model program dependence graph 
weiser slicing algorithm modelled terms slicing algorithm extended pdg representation pdg extended program relationships 
february modelling benefit properties weiser slice slices compared mathematically 
generalize weiser slicing criterion statement set variables set statement set variables derive results 
set slices program forms lattice vector union meet operator vector intersection join operator 
set weiser slice form lattice operators 

generalize weiser assertion union slices performed statement different variables slice performed statements union variables union slices performed set statements set variable slice performed union statements union variables set statements identical set variables identical 
section abstracts hpr integration algorithm directed graphs 
algorithm defined primarily program slicing set theoretic operations abstraction directed graph straightforward 
horwitz prins reps defined meaning operands integration result operational semantics procedural programs 
define relationship operands results integration separate relationships 
structural integration theorem defines relationships slices operands results integration different sets vertices representing changed preserved behavior 
second semantic integration theorem defines relationship meanings programs interpretation 
says interpretation associated graph satisfies slicing axiom stated inside result integration satisfy semantic graph integration theorem 
implies hpr slicing integration algorithms graph representations programs pdgs slicing axiom hold 
candidate replacement yang program representation graph yan 
restating hpr integration theorem abstracting specific representation pdg interpretation operational semantics benefit algorithm may integrating versions artifact may represented graph 
interpretation associated graph satisfies slicing axiom derive meaning result semantic integration theorem 
graph notations data flow diagrams er diagrams structure charts state transition diagrams prevalent representing specifications designs pre implies potentially hpr integration algorithm integrating non interfering versions specifications designs 
subject associating interpretations notations satisfy slicing axiom capture intuitive formal meaning associate notations 
exploring scope 
bibliography february ah agrawal joseph horgan 
dynamic program slicing 
acm sigplan notices june 
asu alfred aho ravi sethi jeffrey ullman 
compilers principles techniques tools 
addison wesley 
ber claude berge 
hypergraphs combinatorics finite sets 
north holland 
bin david binkley 
multi procedure program integration 
phd thesis university wisconsin madison wi august 
gal keith gallagher 
program slicing software maintenance 
phd thesis university maryland baltimore 
gri david gries 
teaching calculation discrimination effective curriculum 
communications acm march 
hec matthew hecht 
flow analysis computer programs 
north holland new york 
hpr susan horwitz jan prins thomas reps integrating non interfering versions programs 
proceedings fifteenth annual acm symposium principles programming languages san diego pages 
hpr susan horwitz jan prins thomas reps adequacy program dependence graphs representing programs 
proceedings fifteenth annual acm symposium principles programming languages san diego pages 
hrb susan horwitz thomas reps david binkley 
interprocedural slicing dependence graphs 
acm transactions programming languages systems 
kl bogdan korel janusz laski 
dynamic program slicing 
information processing letters 
kuck muraoka chen 
number operations simultaneously executable fortran programs resulting speed 
ieee transactions computers december 
oo karl ottenstein linda ottenstein 
program dependence graph software development environment 
acm sigplan notices may 
ot linda ott jeffrey 
relationship slices module cohesion 
proceedings th international conference software engineering may 
pre roger pressman 
software engineering practitioner approach 
mcgraw hill second edition 
rep thomas reps algebraic properties program integration 
jones editor lecture notes computer science volume pages 
springer verlag new york ny 
ry thomas reps wuu yang 
semantics program slicing program integration 
proceedings colloquium current issues programming languages barcelona spain lecture notes computer science volume pages 
springer verlag new york ny 
february ven venkatesh 
semantic approach program slicing 
proceedings acm sigplan conference programming language design implementation pages 
wei weiser 
program slicing 
ieee transactions software engineering 
yan wuu yang 
new algorithm semantics program integration 
phd thesis university wisconsin madison wi august 

