defective sign encrypt mime pkcs moss pem pgp xml don davis trust verify 
russian proverb simple sign encrypt secure 
cryptographers know application programmers standards authors tend put trust simple sign encrypt 
fact secure mail protocol old new codified naive sign encrypt acceptable security practice 
mime pkcs pgp pem moss suffer flaw 
similarly secure document protocols pkcs xml signature xml encryption suffer flaw 
naive sign encrypt appears file security applications narrow scope important rapidly growing class commercial users 
file mail encryption seeing widespread flawed encryption play expect widespread exposures 
analyze naive sign encrypt flaw review defective sign encrypt standards describe comprehensive set simple repairs 
various repairs common feature signing encryption combined inner crypto layer depend outer layer reveal tampering outer layer 
invention public key cryptography cryptographers known naive combinations encryption signature operations tend yield insecure results :10.1.1.43.5306
guarantee security properties carefully designed security protocols necessary 
security protocols past years focused securing network connections relatively simple file encryption problems received surprisingly little attention protocol designers 
affiliations technology second ave suite needham ma curl technology sq cambridge ma curl com don mit edu users programmers prefer think security analogy familiar symmetric key secret codes 
mail handling file handling security designers relied heavily simple asymmetric encryption signing naively combined 
naive sign encrypt surprisingly different security semantics symmetric encryption difference subtle subtle non specialist users programmers grasp 
senders sign encrypt guarantees security properties symmetric key cryptography gives 
types crypto sender sure ffl recipient knows wrote message ffl recipient decrypt message 
difference appears recipient security guarantees recipient symmetric key ciphertext knows sent simple sign encrypt recipient knows wrote message assurance encrypted 
naive sign encrypt vulnerable surreptitious forwarding symmetric key encryption 
users assume sign encrypt similar symmetric key secret codes tend trust naive sign encrypt 
standards exist simple file encryption chiefly pkcs mime tend allow secure sign encrypt implementations prevent surreptitious forwarding surprisingly file security standards don require fully secure implementation operation 
similarly important new security standards xml security specifications offer lowlevel toolbox apis 
established standards new ones allow insecure compliant implementations 
application programmers need security guidance toolbox apis offer order build effective security applications 
guidance programmers tend suppose incorrectly simply signing extended markup language encrypting message file give security 
limitations naive sign encrypt probably known designers standards discuss see 
standards authors assumed explicitly implicitly applications programmers endusers understand naive sign encrypt complete security solution 
application programmers expected know standard sign encrypt feature protocol elements 
time users expected careful security judgments application application security features correctly rely product offers limited security 
standards authors expectations may realistic years ago acme boot button began internet 
unfair fault standards designers insufficient expectations hopelessly outdated standards serve users 
surreptitious forwarding naive sign encrypt insecure 
simply vulnerable surreptitious forwarding alice signs encrypts bob eyes bob alice signed message charlie see 
charlie believes alice wrote directly detect bob 
bob just alice charlie ff love ff love bob misled charlie believe alice loves charlie 
serious bob exposes alice confidential information competitor ff sales plan ff sales plan case alice blamed conclusively bob exposure secrets 
alice signs message bob alice may willing charlie see message notation alice public key private key 
encrypted ciphertext signed message 
assume asymmetric key cryptosystem behaves similarly rsa signature private key encryption 
sign message charlie ff ff user relied understand sign encrypt vulnerable surreptitious forwards alice wouldn worry bob forwarding message charlie 
reality charlie gets alice message bob charlie assume alice sent directly 
alice doesn care bob message may harmed bob able forward signature 
don sign ciphertexts interestingly naive encrypt sign isn better sign encrypt 
case easy eavesdropper replace sender signature claim authorship encrypted plaintext jb ff idea ff idea note charlie block bob receipt alice original message sending re signed ciphertext 
problem encrypt sign arises alice uses rsa el gamal encryption 
sequel abadi robustness principles anderson showed encrypt sign dramatically weaker thought 
suppose alice uses rsa keys send bob message bob pretend alice encrypted signed arbitrary message msg choice 
alter alice plaintext bob uses factors rsa modulus nb calculate discrete logarithm alice message msg base bob arbitrary message msg msg mod nb bob needs certify xb nb public key order alice original ciphertext signature valid bob new encryption xb xb anderson attack minor limitations ffl modulus factor short digits bits allow discrete log calculation ffl bob new public exponent xb obviously unusual full length bitstring usual small integer value 
alice safe attack long bob public key substantially longer digits bits 
unfortunately alice tell factoring bob rsa bob prime factors prepare rsa key pair 
bob large modulus key pair small factors alice naive encrypt sign leave vulnerable bob attack 
want sign ciphertext anderson attack forces alice sign ciphertext plaintext bob public key bg formats offer different advantages signing plaintext alongside ciphertext gives nonrepudiation signing encryption key easily understood defense anderson attack 
format bob alter msg simultaneously alice ciphertext order preserve alice signature bob choose msg hash value alice signed difficult 
course encrypt sign isn useful anyway ciphertext plaintext non 
follows simplicity ll ignore encrypt sign ll concentrate analyzing fixing sign encrypt defects 
purpose intends fill gap doit toolbox apis box secure networking standards ffl section describes problem technical social scope ffl section analyzes problem cryptographically ffl section reviews standards accept naive sign encrypt secure ffl section presents comprehensive variety simple solutions 
goal help security standards offer variety secure ways sign encrypt messages 
application programmers constrained size fits protocols shouldn understand nuances cryptographic design 
problem scope old easy problem worth discussing late date 
designing secure sign encrypt protocol easy cryptographers different class engineer faces problem nowadays 
application programmers rely crypto vendors crypto standards order learn write crypto applications 
unfortunately vendors standards left big gap support application programmers 
current security standards don give application programmers simple recipe file encryption problems 
technical scope secure session protocols attracted lot research attention effective session security protocols standardized naive sign encrypt problem session security 
standards kerberos tls set give straightforward box solutions 
files way messaging current security standards give developers kind toolbox support variety security options clear firm guidance combine options sign encrypt effective security solution 
providing cryptographic protocols appropriate low level mechanism ipsec applications secure mail programmers need cryptography cryptographic toolkits 
naive sign encrypt come characterize file handling mail security applications 
pkcs cms mime pgp suffer defect 
xml signature xml encryption working groups explicitly set task cryptographic message syntax 
pretty privacy world wide web consortium see org supplying xml mime style security 
demand simple file security message security big growing widespread naive sign encrypt security models lead widespread exposures 
social scope increasingly secure applications designed built application programmers cryptographers 
factors obliged mainstream application programmers undertake public key protocol design ffl commercial pki widespread deployment ffl secure networking standards don address ffl demand cryptographers greatly exceeds supply 
application programmers need help seek help crypto vendors crypto standards 
unfortunately vendors standards offer high level secure connections low level toolkit mechanisms 
offering file encryption easy 
available standards specifications intend support security applications specifications tend standardize lowlevel apis cryptographic primitives leave designers flexibility possible 
defective standards naive sign encrypt known issue mime 
similar flaws appeared version pgp message format 
flaw discovered burrows correct repair proposed anson mitchell 
unfortunately workers failed apply anson simple repair correctly pem pkcs suffer defective version anson repaired sign encrypt defect codified mime 
parallel developments pgp independently retained naive sign encrypt defect 
current protocols flaw substantially similar original flaws pgp 
historical flow inheritance ffl zimmermann described naive rsa sign encrypt protocol pgp ffl codified flawed naive encrypt sign independently pgp ffl burrows anson described workable sign encrypt protocol ffl pem applied cryptography mail transport naive anson repaired ffl standards extended generalized pem 
moss extended pem support mail adding naive sign encrypt mail attachments 
pkcs generalized pem non mail applications preserved flaw intact 
cms mime carried pkcs generality flawed back email community 
ffl today nascent xml security standards expressly intend support naive sign encrypt 
relationships aren complicated look moss pkcs mime descended pem pem pgp xml completely independent efforts 
rest section discuss defective standards chronological order listed 
pgp pgp similar pem simpler mime pgp provides security options sign encrypt sign encrypt 
security options interested pgp sign encrypt discuss sign encrypt standards subsections 
pgp message format similarities features pem mime ffl symmetric key encryption message bodies ffl unformatted message bodies ffl independent crypto layers 
discussion ll omit pgp ciphers bulk encryption irrelevant surreptitious forwarding attack 
pgp strongest security option naive sign encrypt pgp vulnerable surreptitious forwarding ff deal ff deal alice cancelled deal bob bob gets re encrypting redirecting alice signed message business partner charlie 
note pgp plaintext message bodies unformatted containing names sender recipient 
pgp doesn allow formatted message bodies extra signature layer signed attributes pgp doesn admit protocol repairs describe mime pkcs see xx 
version version included simple protocol secure message exchange employing secure message tokens structure msg burrows pointed readily replace signature leading attribute message msg see eqn 
anson mitchell offered repaired token structure ff bob msg unfortunately anson cryptographic notation hard understand text didn emphasize exactly corrected token secure modification involves additional effort far token construction concerned simply require encryption enc data done signature operation 
anson text incorrectly implied replaced fact repair worked alice sign recipient name bob message 
signed name proved alice intent write bob 
alice signature hadn included bob name anson new token just naive sign encrypt fully vulnerable surreptitious forwarding 
clearly anson influenced early pki standards community pkcs various rfcs cited 
pem mail standards didn cite anson followed advice pem pkcs cms provided eqn simplified token structure leaving various nonces parameters 
sign encrypt basic operation mime explicitly deprecated encrypt sign 
suggest anson explained necessity signing recipient name standards sign encrypt correctly 
note original encrypt sign token cf 
eqn 
fixed signing simple addition sender name similar anson signed recipient name msg repair anson blocks burrow attack cf 
eqn 
bob detect charlie replacement signer certificate doesn match alice name inside plaintext bob conclude message tampered 
repair repairs encrypt sign non repudiation problem alice signs plaintext explicitly 
repair blocks anderson plaintext replacing attack see 
pem privacy enhanced mail notable standard internet 
pem designed specified late early 
version pem relied exclusively symmetric key cryptography pki specification settled versions pem increasingly emphasized public key cryptography 
pem reliance naive sign encrypt led pem descendants moss pkcs mime follow suit 
specifications tried hard support backward interoperation pem 
purposes pem provides essentially variants mail security message signed signed encrypted 
pgp pem descendants pkcs cms mime pem applies signature encryption steps message body smtp header header encapsulated header carries pem message keys names 
pem notion signing authenticating ancillary attributes doesn support extra crypto layers repairs discuss mime pkcs see xx won pem 
prevent surreptitious forwarding pem message author include recipient name directly message body 
course difficult receiving pem find recipient name body check automatically surreptitious forwarding 
today pem widely pem vulnerability surreptitious forwarding just matter historical interest 
pem accomplishment influence great pem successfully achieved platform independent cryptographic interoperation time new internet heterogenous affair today 
moss moss extended pem cryptography principal ways 
adding cryptographic support multipart messages popularly known attachments 
allowing encryptions signatures applied order mime 
decoupling secure mail monolithic public key infrastructure failed mid 
pem moss mime pgp little heard today 
moss feature valuable purposes secure mail protocols moss explicitly provided default sender alice able sign message header message body 
moss email standard gives users box mechanism signing recipient list 
mime ess feature allow header signing explicitly intended link oriented security feature military mail servers 
see discussion ess half header signing easy moss provide moss treated header just part message 
alice moss message carried signature encryption message body message header alice moss message recipients fairly surreptitious forwarding 
unfortunately moss header signing optional feature moss rfcs don discuss valuable 
specified moss vulnerable attack mail protocols 
worth noting alice choose sign moss header moss cryptography relies bob sophistication mail security ffl bob receives alice moss message read alice signed header sure alice intended send message 
ffl alice cc list long bob read signed header step automatic reliable 
ffl alice mail client doesn bother sign mail headers bob probably won notice ll vulnerable messages 
issues vanish moss header signing mandatory 
bob mail reader presumably automatically scan header looking bob decryption key name form search fail moss mail reader raise error message warning bob 
pkcs pkcs created file oriented adaptation extension pem platform independent cryptographic features 
accordingly pkcs inherited naive sign encrypt pem 
order pkcs sign encrypt security pkcs author securely attach names file message 
pkcs message fields specification allow fields signed encrypted 
pkcs provide authenticated attributes pkcs application create signed list attribute prove recipients author intended recipients 
crucially pkcs require suggest effective security signed list accompany message 
pkcs defines various attributes pkcs messages similarly fails provide attributes holding senders recipients names 
note order authenticated attributes repairing pkcs sign envelope separately apply signature encryption steps signed construct 
combined construct doesn support attributes note 
signed data content type provides cryptographic enhancements similar resulting sequential combination signed data data content types 
signed data content type authenticated unauthenticated attributes provide enveloping signer information signature sequential combination signed data data content types preferable content type compatibility encrypted process type privacy enhanced mail intended 
pkcs simple signed message protocol affords cryptographically secure naming 
way signed recipient know intended see message surreptitious forwarding occurred sender include recipient name message body 
mime cms mime set secure email standards specify encrypt sign messages handle keys certificates crypto algorithms 
cms specification describes data formats procedures needed encryption signatures 
cms identical pkcs descends 
mime specification acknowledges cms sign encrypt isn secure mime specification fails discuss main defect 
document tells implementors shore sign encrypt 
mime specification merely users implementors rely message security 
mime implementation able receive process arbitrarily nested mime reasonable resource limits recipient computer 

possible sign message envelope message 
implementor user choose 
signing securely obscured enveloping 
enveloping exposed possible verify signatures removing enveloping 
may useful environment automatic signature verification desired private key material required verify signature 

security ramifications choosing sign encrypt 
recipient message encrypted signed validate mime cms pkcs specification documents verbs encrypt envelope interchangeably 
encrypted block unaltered determine relationship signer unencrypted contents message 
recipient message signed encrypted assume signed message altered careful attacker may changed unauthenticated portion encrypted message sic 
sec 
signing encrypting 
excerpt mime specification discussion sign encrypt limitations 
features excerpt deserve comment ffl paragraph presents security issues tradeoff confidentiality ease verification ffl paragraph hints attacker replace external signature encrypted message ffl mention sign encrypt vulnerable surreptitious forwarding replacement outermost encryption layer 
paragraph unauthenticated portion refer unauthenticated ciphertext unauthenticated plaintext 
ffl excerpt presents choice signing encrypting 
mention repairing option defects 
mime flexible allow sign encrypt defect repaired 
specification excerpt paragraph provides mime application able process sign encrypt signed messages encrypt sign encrypted messages 
suffices reveal alteration sender crypto layers long receiving client knows detect alterations see xx note double signing superficially resembles mime optional feature different mechanism purpose 
mime enhanced security services specification provides specialized security related message attributes support certain features signed receipts secure mailing lists 
order support ess features mail servers apply extra signature ciphertext user signed encrypted message triple wrapping features service concept triple wrapped message 
triple wrapped message signed encrypted signed 
signers inner outer signatures may different entities entity 
note mime specification limit number nested encapsulations may 
purpose triple wrapping messages need triple wrapped 
triple wrapping message signed encrypted signed attributes bound encrypted body 
outer attributes may added removed message originator intermediate agents may signed intermediate agents final recipient 
outside signature provides authentication integrity information processed hop hop hop intermediate entity mail list agent 
outer signature binds attributes security label encrypted body 
attributes access control routing decisions 
triple wrapping allows mail servers securely annotate messages fly hop hop primarily benefit mail servers 
contrast repair alice applies outer signature extra attributes signed encrypted message basic cms specification allows 
similarly alice intended recipient bob validate inner outer signatures 
sum security feature ess uses triple wrapping support link oriented security features 
ess triple wrapping serve different purposes 
ess paragraphs mention user alice apply outer signature ess document gives reason attach signed attributes ciphertext 
ess document suggests triple wrapping necessary repair security defect sign encrypt 
fact ess specification committee intend triple wrapping repair surreptitious forwarding defect 
ess specification written fulfill dept defense purchasing criteria secure mail demanded server oriented security features 
mime repair option comes cms specification core piece mime standards suite 
pkcs cms provides signed attributes offer different way prevent crypto alterations 
suppose sender includes signed list attribute suppose recipient knows process interpret attribute 
recipient identify intended receive message attacker profit replacing outer crypto layers 
unfortunately pkcs specification cms specification stipulate suggest naming attributes specification suggest signed attributes 
mime repairs cumbersome barely meet mail industry needs 
crucially specification requires repair mentions features serve repairs repairs interpretations aren standardized different vendors mime applications readily full sign encrypt security 
xml security writing spring xml signatures draft specification nearing completion allied xml encryption working group just starting 
groups explicitly committed producing low level toolkit specifications describe combine basic publickey operations rich array xml features 
particular groups unwilling stipulate high level security behavior sign encrypt full security 
extent proper standards intended support broad class applications possible including document preparation handling financial applications wire protocols potentially intricate cryptographic security protocols 
secure groups say don want require secure high level behavior specifications don want constrain low level applications xml security features 
explicitly hope higher level xml security specification ofthe box idiot proof security built someday follow current specifications 
certainly xml signatures draft specification suitable experienced security engineers cryptographers application programmers don want specialize security 
analysis propose users file security need simple security semantics symmetric key semantics sufficient users applications needs 
semantics natural easy unsophisticated users understand 
section overlapping views wrong naive sign encrypt 
summarize discuss arguments defense naive sign encrypt standards 
discuss flaw survived committees deliberations 
asymmetric security guarantees glance naive sign encrypt quite secure message author alice gets security guarantees needs signature proves authorship knows read message 
reader bob doesn get guarantees 
knows wrote message doesn know encrypted doesn know alice read message 
note asymmetry ffl sends signed encrypted message knows read trusts divulge message ffl receives signed encrypted message know hands passed trusts careful 
seen way flaw naive sign encrypt gets proof encrypted message 
hindsight obvious public key algorithms usually don automatically authenticate encryptor message 
certainly applications necessary feasible give recipient assurance sender seen message plaintext 
example mail security applications need flexibility full symmetric key semantics 
possible default mail file security applications give endusers easy understand security guarantees 
symmetric key semantics users tacitly expect public key file encryption offer security semantics symmetric key offers 
way describe sign encrypt problem signing encryption applied naive sign encrypt fails duplicate security meaning symmetric key ciphertext 
receives symmetric key ciphertext safely assume ffl sent message ffl seen plaintext ffl intended receive plaintext 
naive sign encrypt assumptions break recipient may rely crypto layer supply intended recipient names 
problem arises ffl message plaintexts don mention sender target names ffl sender recipient names important understanding message security import ffl recipient assumes signer encrypted message 
conditions attacker successfully forward naively signed encrypted message 
sign encrypt cross refer suggest messaging standards treating public key encryption digital signatures fully independent operations 
independence assumption writing standards writing software cryptographically incorrect 
independent operations applied top outermost crypto layer replaced security weakened 
abadi needham simple rule protocol design principal signs material encrypted inferred principal knows content message 
hand proper infer principal signs message encrypts privacy knows content message 
anderson needham plaintext substitution attack encrypt see strengthened abadi prescription sign encrypting 
signature affixed encrypted data 
third party certainly assume signature authentic nonrepudiation lost 
principles understood soon defect discovered fair published early versions pem pkcs mime published 
pkcs mime revised abadi anderson papers wellknown updated standards repaired 
mail standards treat sign encrypt problem user interface issue security ramifications choosing sign encrypt 

signing encryption independent defective standards treated crypto operations independent converting content content 
conceptually easy users programmers layer crypto operations arbitrary depth arbitrary order 
device standards authors sought avoid constraining application developers designs 
independent operations hard fulfill recipient security expectations 
order properly signature layer encryption layer refer achieve basic symmetric key security guarantees users expect 
recipient needs proof signer encryptor person necessarily entails signing recipient identifier sign encrypt encrypting signer identifier encrypt sign 
cross place attacker remove replace outermost layer inner layer reveal alteration 
section repair options ways give recipient cross referenced proof encryptor identity 
repairs sender identifies outermost operation key holder inside innermost content bind sender recipients names 
example repair sign encrypt puts decrypting recipient name inside signed plaintext message ff bob repair straightforward user implementor hard standards specification stipulate different crypto operations tied breaking full generality content transformation model 
trust risk common defense naive sign encrypt users careful trust equivalently users carefully assess risk putting sensitive material cryptographic protection 
view recipient signed encrypted message invest trust message technology sender reputation support 
argument plausible turns address problems naive sign encrypt 
way gauge risk message people unknown gauge risk know trustworthy people forwarded message general assess privacy decrypted plaintext shouldn trust privacy knows encrypted 
sum accept trust risk argument encryption step sign encrypt quite pointless receiver point view 
security ease common defense mime naive sign encrypt users shouldn trust unsigned information signer intended recipients 
argument misses point mime weakness supposing users relying unsigned smtp header identify sender intended recipients 
users mistake subtle re relying encrypting key certificate secure record sender intended recipient 
unrealistic expect today users catch subtle point 
pem mime designed pki users expected system administrators fairly sophisticated users modern internet electronic commerce play expect users understand cryptographic nuances 
similar defense defective secure mail standards specifications aren broken applications put names content want 
argument assumes application programmers shouldn try incorporate cryptographic security programs place understand security cryptography design security protocols 
argument insists security standard complete prevent ignorant programmers shooting foot 
ready answer argument ssl 
ssl specification gives fairly complete security outof box 
non specialist programmers able set secure ssl connections appli cations having patch ssl protocol 
happen 
authors pem mime xml security standards working groups explicitly discussed surreptitious forwarding deliberately left flaw 
committees accepted cryptographic neglect reasons ffl optional coverage specifications allow senders put recipient name mail header message body signing 
addition protocols explicitly provide optional mechanism signing mail header recipient list 
ffl contextual repair way pem committee discussion explicitly decided message context usually solve problem 
example alice signed dear bob salutation reveal re encryption 
ffl scope pem committee noted surreptitious forwarding type replay mail mechanism prevent mail replay 
pem committee inappropriate worry surreptitious forwarding signed encrypted mail 
xml signature working groups explicitly decided outset emulate mime security 
groups decided address mime pkcs vulnerability surreptitious forwarding related reasons 
xml signature xml encryption explicitly low level protocols 
standards force higher level protocols follow particular cryptographic model 

intends xml documents format specifications semantics specifications generally kept separate 
accordingly surreptitious forwarding issue sign encrypt semantics treated separate xml security semantics specification 

document format working group shouldn try resolve questions minute details cryptographic implementation discussions invariably time wasting 
xml security working groups intend specifications accepted strictly low level cryptographic primitives 
hard reconcile low level label working groups early proposal emulate mime mime claims offer high level comprehensive secure messaging 
hard blame secure mail standards groups having cryptographic mistake 
clearly worked faith promote secure usable technologies 
important acknowledge hard write networking standards general mail related standards particular 
hard design cryptographic security protocols cryptographic difficulty formal mathematical affair different difficulty designing workable networking protocols real world deployment 
design concrete security protocol hard problems solved simultaneously including ffl flexibility application programmers ffl flexibility network sys ffl interoperation protocols ffl os platform differences ffl scaling ffl server ffl ffl time market 
clearly secure mail standards committees tried codify cryptographically correct protocol 
worst said working groups underestimated subtlety adding cryptography burdened portfolio 
repair options independent equivalently secure ways fix naive sign encrypt problem 
sign recipient name plaintext 
encrypt sender name plaintext 
incorporate names 
sign signed encrypted message 
encrypt signed ciphertext 
case signing layer encryption layer interdependent binding sender name layer recipient name layer 
alternatives suffices establish alice authored plaintext ciphertext 
note effective security standard require author provide proofs recipient demand proof 
naive sign encrypt message arrives proof signer encryptor person application software warn recipient message privacy authenticity suspect 
naming repairs part reason naive sign encrypt secure common payload messages secure 
example alice just signs encrypts text dear bob deal 
alice alice message secure albeit accidentally 
presence names crypto layers crucial including names strictly necessary 
alice wants sign encrypt needs enclose bob name link outer layer key inner layer 
signing bob name message alice explicitly identifies intended recipient 
equivalent anson repair discussed section 
alice prefers encrypt sign encrypt name message sign outside ciphertext block anderson plaintext replacement attack links outer layer key pair inner layer prevents attacker replacing alice signature 
encrypting sender name works subtle way prove alice performed encryption enclosed name shows encryptor intends outer signature carry name alice 
outer signature turn says alice touch ciphertext 
bob knows alice performed encryption 

alice encloses names message body avoid having pay attention cryptographic choices early formatting message text 
send bob ways ff ff name formats suitable flexible standards specification mime layers crypto applied order 
enclosing names message simpler judging fly names enclose depending choice cryptographic 
repairs rational examples mart abadi catherine meadows rule thumb designing security protocols ffl abadi identity principal essential meaning message prudent mention principal name explicitly message 
principle ffl meadows general safer include names explicitly inside crypto protocols messages 
sign encrypt sign surprisingly get effective repair alice signs encrypts plaintext signs ciphertext bg means alice hashes bob key name 
message means ffl inner signature alice wrote plaintext ffl encryption bob see plaintext ffl outer signature alice key encrypt 
bob conclude alice wrote message encrypted 
seen way variation including sender name inside plaintext encrypted signed see sec 
bullet 
inner signature key links encryption layer outer signature layer 
alice signs bob key protect anderson plaintext substitution attack 
notational simplicity represent signatures stuff stuff encrypt sign encrypt conversely alice get security guarantees re encrypting ciphertext signature message means ffl encryption bob sees plaintext ffl signature alice wrote plaintext ciphertext ffl outer encryption bob see alice wrote plaintext ciphertext 
bob forward message invalidating alice signature 
outer encryption serves prevent attacker replacing alice signature 
variant including recipient name inside plaintext signed encrypted see sec 
bullet 
alice signs plaintext ciphertext protect anderson attack 
time alice signed plaintext gives bob non repudiation 
costs advantages course naming repairs double signed repairs offer different trade offs 
naming repairs bring performance cost require new standards standards arguably intricate current standards interdependence layers conflicts arbitrary nesting layers 
double signed repairs quite expensive speed virtues ffl double signing quite compatible existing cms mime specifications 
change double signing bring standard require recipient check innermost layer key outermost layer key 
ffl applications double signing may preferable having put names payloads 
clear simplest repair add recipient name sign encrypt bullets 
solutions require extra hash message encrypting key block anderson plaintext replacement attack 
forensic history naive sign encrypt insecure cryptographic primitive come widely trusted standardized implemented despite insecurity 
notion naive sign encrypt secure arisen pgp description 
mistake reinforced proposed repairs 
leading standards file encryption secure mail relied naive sign encrypt 
defective standards fixed easily repair intricate 
secure session protocols authentication protocols typically rely naive sign encrypt affected findings 
weakness naive sign encrypt somewhat subtle easily fixed ways 
repairs show signing encryption viewed independent operations repairs rely linking outer operation key inner operation payload 
realization public key operations necessarily independent re commonly thought coupling layers profitable primitive may prove novel useful axiom protocol designers analysts 
profitable discussions ideas expert critics mart abadi ross anderson marc dave carver dan peter gutmann philip hallam baker paul hoffman russ steve kent norbert john ellen mcdermott joseph ed simon win charlie ralph swick henry 
people patient attention 
abadi needham prudent engineering practice cryptographic protocols digital src research report june 
anderson needham robustness principles public key protocols lecture notes computer science don coppersmith ed advances cryptology crypto pp 

springer verlag 
crocker freed murphy internet rfc mime object security services october 
www faqs org rfcs rfc html burrows abadi needham logic authentication proc 
soc 
lond 
pp 

allen internet rfc tls protocol version january 
ftp ftp isi edu notes rfc txt solo editors xml signature syntax processing working draft september www org tr core hoffman internet rfc enhanced security services mime june 
ftp ftp isi edu notes rfc txt paul hoffman personal communication 
internet rfc cryptographic message syntax june 
ftp ftp isi edu notes rfc txt russ personal communication 
anson mitchell security defects ccitt recommendation directory authentication framework acm comp 
comm 
rev apr pp 

fraser ts schiller leech ip security protocol ipsec charter www ietf org html charters ipsec charter 
html joux discrete logarithms gf april 
announcement number theory mailing list 
www polytechnique fr talk ecc ps gz international telegraph telephone committee ccitt 
recommendation directory authentication framework 
data communications network directory recommendations pp 

vol 
ccitt blue book 
geneva international telecommunication union 
internet rfcs privacy enhancements internet electronic mail part message encryption authentication procedures february january august february 
ftp ftp isi edu notes txt ftp ftp isi edu notes txt john personal communication 
stephen kent personal communication 
meadows verification security protocols lecture rsa cryptographers colloquium palo alto ca 
neuman kohl internet rfc kerberos network authentication service september 
ftp ftp isi edu rfc txt internet rfc mime version message specification june 
ftp ftp isi edu notes rfc txt rivest shamir adleman method obtaining digital signatures public key cryptosystems comm 
acm feb pp 

rsa laboratories pkcs rsa cryptography standard version 
amendment multi prime rsa www 
com pkcs pkcs rsa laboratories pkcs cryptographic message syntax standard version nov 
www com pkcs pkcs rsa laboratories pkcs selected object classes attribute types february 
www com pkcs pkcs joseph personal communication 
xml encryption requirements working draft april www org tr wd req ed simon personal communication 
visa international mastercard secure electronic transactions protocol specification www org set specifications html zimmermann official pgp user guide mit press 
zimmermann proposed standard format rsa cryptosystems ieee computer 
