centrum voor wiskunde en informatica multi relational data mining blockeel siebes van der wallen information systems ins ins may report ins issn cwi box gb amsterdam netherlands cwi national research institute mathematics computer science 
cwi part stichting mathematisch centrum smc dutch foundation promotion mathematics computer science applications 
smc sponsored netherlands organization scientific research nwo 
cwi member ercim european research consortium informatics mathematics 
copyright stichting mathematisch centrum box gb amsterdam nl kruislaan sj amsterdam nl telephone telefax multi relational data mining arno ae netherlands com hendrik blockeel katholieke universiteit leuven department cs celestijnenlaan heverlee belgium hendrik blockeel cs kuleuven ac arno siebes cwi box gb amsterdam netherlands arno cwi nl van der wallen ae netherlands van der wallen com important aspect data mining algorithms systems scale large databases 
consequence data mining tools machine learning algorithms data attribute value format 
experience proven single table mining algorithms scale 
downside format complex patterns simply expressible format discovered 
way enlarge expressiveness generalize ilp mining multiple table mining support mining full relational databases 
key step generalization ensure search space explode efficiency scalability maintained 
framework architecture provide generalization 
framework semantic information database schema foreign keys exploited prune search space architecture database primitives defined ensure efficiency 
framework induces canonical generalization algorithms generalized algorithms run single table database give results single table counterparts 
framework illustrated algorithm multi relational generalization apriori algorithm 
mathematics subject classification computing reviews classification system keywords phrases data mining induction multi relational data mining inductive logic programming rdbms note carried institute project 
important aspect data mining algorithms scale large databases 
paying lot attention efficiency especially necessary case databases may contain complex patterns 
databases search space patterns may large scaling large database impossible 
precisely reason mining large relational databases containing table little attention 
show analysing multiple tables efficiently feasible multi relational data mining framework exploits extensive information data model optimisation 
knowledge significantly prune search space prevent combinatorial explosion occur 
data mining algorithms currently available attribute value setting restricts datasets consisting single table relation 
attribute value paradigm allows analysis fairly simple objects 
requires object described fixed set attributes single unstructured value 
able represent complex structured objects employ relational database containing multiple tables 
object described multiple records multiple tables 
able analyse relational databases containing multiple relations properly specific algorithms written cope structural information occurs relational databases 
multirelational data mining framework described base multi relational data mining algorithms 
framework supports range multi relational data mining algorithms direct generalisations common attribute value induction algorithms 
explain concepts attribute value algorithms generalised multi relational setting 
idea multi relational data mining algorithms full generalisations attribute value counterparts means run database containing single table result single table version algorithm run 
important extension attributevalue learning achieved multi relational data mining language describe patterns 
attribute value learning language sets conditions attributes table describe particular selection objects 
multi relational data mining conditions values attribute existence related records tables 
way include statements structural information objects selections 
set patterns derived relational database potentially bigger set patterns derived single table 
lot attention reducing search space efficiently evaluating potentially interesting patterns 
show lot information stored data model prune search space set candidate patterns manageable 
candidate patterns valid data model evaluated sent efficient server validates patterns data 
server supports small number primitives provide necessary statistics candidate patterns 
primitives direct generalisations data mining architectures attribute value paradigm 
primitives expressed sql sent conventional rdbms supported dedicated server optimised compute primitives efficiently 
briefly sketch architecture server primitives supports 
architecture direct generalisation existing data mining architecture successfully commercial products 
relational database containing multiple tables strictly necessary multi relational data mining algorithm 
ways relational database single table format traditional attribute value algorithms able database 
way doing create universal relation involves joining tables form single table 
resulting universal relation extremely large impractical handle 
second way transforming relational database single table involves creation new attributes central fact table summarise aggregate information tables 
method linus system 
produces wide tables lots data repeated 
data produced lot information data originally structured lost main source efficiency multi relational data mining 
creation useful understandable informative new attributes may require substantial amount domain knowledge may defy purpose kdd 
approach attractive especially efficiency point view proper way dealing multiple relations necessary 
idea mining multiple tables new 
studied extensively field inductive logic programming ilp 
approaches data stored prolog programmes little attention data stored relational database knowledge data model help guide search process 
lot attention efficiency scalability issues 
approach combines achievements kdd field ilp field 
demonstrate existing ilp algorithms shown practical applicability implemented special instances multi relational data mining framework 
ilp seen learning set predicates multi relational data mining seen learning relational database 
extensional predicates predicates ground facts exist counterparts tables relational database 
intentional predicates predicates rules correspond concept views 
multi relational data mining differs ilp aspects 
firstly restricted discovery non recursive patterns 
secondly semantic information database exploited explicitly 
thirdly emphasis database primitives ensures efficiency 
outline follows 
multi relational data mining describe basic problem intend solve 
description model data relational database high level knowledge database 
section framework describe basic multi relational data mining framework specifically knowledge data model prune search space 
efficient architecture support multi relational data mining framework architecture 
demonstrate framework implement multi relational data mining algorithms give algorithm finding association rules multiple tables section instance 


multi relational data mining assume data analysed stored relational database 
relational database consists set tables set associations constraints pairs tables describing records table relate records table 
tables associations known relations terminology able distinguish concepts 
association tables describes relationships records tables 
nature relationship characterised multiplicity association 
multiplicity association determines records table relate single multiple records second table 
multiplicity determines record table needs corresponding record second table 
formally define predicates related multiplicity association tables definition multiple iff record may correspond multiple records definition zero iff record may corresponding record note predicates defined predicates may may hold way different possible multiplicities association special case association tables foreign key relation 
foreign key relation foreign key table primary key table association hold multiple zero multiple zero associations physical data model foreign key relations 
example shows example data model describes parents children toys relate 
referring example 
data model shows parents may children children may data model example database 
toys parents may bought toys 
note toys owned particular child may necessarily bought parents 
presents parents 
note children parent simplicity 
discovering multiplicities associations tables part conceptual data model database 
physical data model relationship records attributes tables known keys 
keys may built attributes loss generality assume consist single attribute 
multiplicity associations tables usually determined modelling phase database 
multiplicity discovered existing database 
process similar discovery foreign key relations described 
number records cardinality key attribute join respectively decision tree determine values multiple zero analogous 
objects patterns data model consists multiple tables single kind objects central analysis 
choose kind objects want analyse selecting tables target table 
record target table refer corresponds single object database 
information pertaining object stored tables looked associations data model 
data mining algorithm requires particular feature object dependent attribute classification regression define particular target attribute target table 
purpose multi relational data mining discover interesting sets objects relational database 
refer descriptions potentially interesting sets objects multi relational patterns simply patterns clear context 
express pattern sql order logic expressions 
graphical language selection graphs defined section translated language 
multi relational patterns looking interesting subgroups frequent patterns 
context prediction multi relational patterns leaves decision tree left hand side predictive rules 
definition support multi relational pattern database number objects covered equal number selected records target table 
example highlighting attribute car parent table indicates parent target table car attribute interest target attribute 
means primary interest parents considering different sets parents order come indicators classifying parents car owners 

framework order describe set conditions related multi relational pattern introduce concept selection graphs definition selection graph pair set pairs table data model possibly empty set conditions attributes type operator operator usual selection operators set triples called selection edges selection nodes association data model 
zero multiple selection graph contains node corresponds target table objects target table covered selection graph records satisfy conditions recursively exist tuples tables graph linked indicated associations satisfy conditions defined table 
selection graphs represent selections objects 
selection node represents selection records corresponding table determined set conditions relationship records tables characterised selection edges connected selection graphs intuitive expressions sql prolog reflect structure data model refinements existing graphs may defined terms additions edges nodes 
selection graph translated sql prolog straightforward manner 
algorithm shows translation sql 
produce list tables table list list join conditions join list list conditions condition list combine produce 
similar translation prolog 
fact state select distinct select caused fact record may covered selection graph multiple ways 
target table represents objects counting suffices 
example selection graph corresponding sql statement represents set parents older child bought toy necessarily children select distinct parent name parent child toy name name age child parent toy age table list condition list join list node selection graph table list add table name condition condition list add edge join list add left node left attribute right node right attribute return select distinct primary key table list join list condition list refinement 
multi relational data mining framework proposed idea level wise search patterns basically top search 
search patterns considered promising refined 
selection graph define refinement operations add condition 
refinement simply add condition selection node changing structure add edge node 
refinement instantiate association data model edge corresponding table add add edge 
refinement add edge nodes refinement valid association exists corresponding tables data model 
set refinements main source efficiency multi relational data mining framework 
allowing addition edges consistent data model unnecessary invalid patterns pruned search space 
refinements exploit existence associations tables optimisation 
show existence multiplicity association achieve efficiency 
refinement multiplicity refinements possible way search algorithm uses refinements governed multiplicity available associations 
knowledge nature associations tables guide optimise search 
note information multiplicity available decisions constant time 
knowledge possible ways look ahead 
refinements multi relational pattern set objects support pattern changed 
may desirable look ahead form extra refinements 
multiplicity association involved refinement directly decide refinement changes support pattern look ahead necessary 
example know data model parents required child know refining pattern parents parents child effect support pattern 
look ahead refining table association necessary holds zero 
multiple instantiations associations 
cases desirable multiple instantiations particular association selection graph 
example may interesting consider parents children various characteristics 
refining pattern parents son condition having daughter sense parents allowed multiple children 
multiple instantiations instance table instance table allowed holds multiple 
mutual exclusion 
algorithms refine single pattern set derived patterns basis value single nominal attribute 
subsets belonging patterns necessarily form partitioning original subset sense may parent toy child child parent toy overlapping 
algorithms notably inducing decision trees require subsets mutually exclusive 
partitioning original subset refining table association produced holds multiple 

architecture client server architecture support multi relational data mining framework proposed previous section 
server responsible storing managing data computing primitives explained detail section 
client hand perform actual search algorithm involves generating new candidates sending primitive calls server order test candidates 
way clear separation handling massive datasets performing intelligent search achieved 
operation optimised separately 
lot done implementing efficient client server architectures mining attributevalue data 
centred expressing primitives sql order conventional rdbms extending sql language support potential specific needs data mining algorithm may 
alternative approach dedicated data mining server optimised specific operations common data mining 
data mining server support loading data example conventional rdbms small set primitives examining data 
operations common conventional databases transaction processing locking roll back ad hoc querying left optimal performance 
previous projects worked data mining architecture attributevalue data mining design principles compute possible pre processing 
datasets data mining tend stable benefit multiple times 
specifically data coded stored indexed 
original data codes indexing cross tables efficient storage processing 
exploit column oriented nature kdd algorithms 
data mining algorithms column oriented operations record oriented operations common transaction processing 
column oriented data storage paging techniques attractive 
exploit structure search space 
refinements previously examined patterns supported subset original set supporting objects 
storing intermediate results reduce amount repeated primitives drastically 
exploit inherent parallelism algorithms 
data mining algorithms ideal candidates parallelisation due large set extremely similar operations performed 
parallelism high level partitioning search space candidate patterns available processors low level partitioning data performing single primitive parallel 
optimise low level details 
may involve disk access effective paging optimisation inner loops 
design principles apply multi relational data mining architecture 
specifically principle great benefit 
pre processing associations record table list corresponding records table may constant time 
means partial joins readily available contrast conventional rdbmss query multiple tables involves re computing join 
associations effectively means trading space time 
association effectively means creating lean indexing structure building join related tables 
associations pairs tables combinatorial explosion 
primitives multi relational data mining primitives order get necessary counts database 
primitives similar conventional data mining extra facilities cope data multiple tables 
note primitives represented sql better understanding actual architecture provide optimised function calls primitives 
primitives produce counts terms objects interest terms records target table select count distinct primary key table list join list condition list primitive basic primitive compute support multi relational pattern 
select target count distinct primary key table list join list condition list group target primitive produce distribution values target attribute set objects belonging multi relational pattern 
compute range interestingness measures pattern 
note sum counts resulting multirelational histogram equal result primitive 
select target count distinct primary key table list join list condition list group target primitive produce distribution pairs values target attribute arbitrary nominal attribute tables 
resulting multi relational cross table compute range statistical measures describe dependency attributes 
note sum counts exceed support multi relational pattern attribute table target table 
multiple records different values selected attribute may correspond single record target table causing record contribute multiple counts cross table 
select target count select target primary key min table list join list condition list group target primary key group target primitive compute dependency numeric attribute target attribute 
assume record target table multiple associated records table sets records table compute minimum attribute interest primitive produces list counts pairs values target attribute occurring minimum 
occurring minimums produce list candidate tests attribute fact testing set values contains value threshold equal testing minimum values threshold 
analogous call maximum exists 
primitives evaluate set add condition refinements 
single call primitive nominal attribute supply support set patterns refinements current pattern condition value occurring similarly single call primitive numeric attribute supply support set patterns refinements current pattern condition interesting threshold occurring explained 
support refinements conditions type produced primitive uses max 
example support pattern introduced example computed primitive 
order establish portion parents car single call attribute car 
primitive examine effects age child ownership car 
primitive produce list minimum ages households frequent minimum establish interestingness various thresholds age children 

instance example specific multi relational data mining algorithm incorporated proposed framework consider algorithm search association rules multiple relations 
algorithm searches patterns support threshold 
resulting set frequent patterns produce rules just single table counterpart apriori 
instance search interesting patterns find patterns people having car people having son age people having car son age interest sufficiently high support 
intersection unexpectedly large respect support provides support claim people son car 
rule called frequent multi relational rule 
frequent multi relational rules seen generalisation association rules single relation 
algorithm described framework follows algorithm basically level wise search patterns 
level frequent patterns previous level produce candidates apriori 
candidate considered validated database 
note potential add condition refinements tested single primitive call single scan data 
type primitive depends type attribute considered refinement 
actual refinement added set frequent patterns set infrequent patterns depending support 

traditional data mining algorithms data stored attribute value format single table 
limits class objects represented type knowledge discovered 
introduced multi relational data mining framework range algorithms data stored relational databases multiple tables 
databases allow representation complex structured objects 
framework respects underlying relation model considers patterns adhere model 
potentially huge search space patterns greatly reduced scaling large databases feasible 
inspired language bias common ilp algorithms introduced selection graphs generic refinement candidate primitive refinement minsup add add return describe patterns 
node graph denotes existential strong focus existence substructures part objects 
just testing existence substructures consider richer languages patterns include absence substructures expressions groups substructures 
intend examine extensions framework areas 
concepts easily dedicated data mining server absence patterns may include conditions absence related records parents child 
universal patterns may include conditions related records parents children adults 
aggregates patterns may include conditions characteristics groups related records parents children 

blockeel de raedt relational knowledge discovery databases proceedings sixth international workshop inductive logic programming volume lecture notes artificial intelligence springer verlag blockeel de raedt top induction order logical decision trees artificial intelligence date database systems volume systems programming series addison wesley dehaspe de raedt mining association rules multiple relations proceedings seventh international workshop inductive logic programming volume lecture notes artificial intelligence springer verlag knowledge discovery client server databases proceedings pkdd dzeroski inductive logic programming knowledge discovery databases advances knowledge discovery data mining aaai press freitas sql primitives parallel db servers speed knowledge discovery large relational databases proceedings 
george parallel data mining architecture massive data sets published hahn info charger data sheet www de htm kersten mannila toivonen perspective databases data mining proceedings kdd john lent data proceedings kdd discovering foreign key relations relational databases proceedings scalable industrial implementations ilp seminar ilp kdd portugal lavrac dzeroski grobelnik learning nonrecursive definitions relations linus proceedings fifth european working session learning springer berlin lavrac dzeroski inductive logic programming techniques applications 
ellis horwood lindner morik coupling relational learning algorithm database system workshop notes workshop statistics machine learning knowledge discovery databases mannila toivonen algorithm finding interesting sentences proceedings martin relational data mining tool genetic programming proceedings pkdd nantes france ribeiro kaufman kerschberg knowledge discovery multiple databases proceedings kdd ullman principles databases knowledge systems volume computer science press wrobel algorithm multi relational discovery subgroups proceedings pkdd yao lin searching multiple databases interesting complexes proceedings pakdd 
