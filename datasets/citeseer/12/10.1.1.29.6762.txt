disseminating active map information bill schilit computer science department columbia university new york ny mobile hosts marvin theimer xerox palo alto research center coyote hill rd palo alto ca mobile computing di ers desk top computing dynamic nature system state users move sets stationary mobile objects control types information wish access change 
navigating mobile environment aided active maps describe location characteristics objects region change time 
describe active map service keeps clients informed changes environment 
primary issue driving design question scale active map service able handle updates queries su ciently large regions space satisfy clients interests able handle peak loads occur example attend meeting 
solution detects sets clients wish receive active map information dynamically assigns multicast groups 
guarantee clients communication links overloaded active map provides guaranteed limits bandwidth 
years extended form computing emerged called mobile distributed computing di erent mobile stationary computers course day 
computation longer occurs single location single environment spans multitude situations covering ce meeting room home airport hotel plane signi cant aspect emerging mode computing frequently changing execution environment users long running applications exposed 
users move sets mobile stationary objects interact producing highly dynamic execution environment location important 
location information necessary users applications want query interact nearby devices supported xerox 
portions paid contract dabt 
currently visiting xerox palo alto research center palo alto ca services 
information allows stationary clients track moving objects 
general location information enables software adapt location collection nearby people objects changes objects time 
term context aware computing describe software exhibiting general capabilities 
articles general topic include 
focuses communication issues encountered disseminating location information interested clients 
introduce notion active map service ams publishes location information objects region 
shall term located object refer entities managed map service 
descriptions associated physical location 
examples located objects include persons printers terminals workstations services information agents associated particular parts store building 
akey issue faced building active map service scale 
variety issues dealt avoid overloading ams clients communication facilities join large meetings mobile users may cause considerable tra context aware clients meeting remote applications may need informed frequent occupant changes 
high message volume may occur high tra locations building 
low bandwidth links usually wireless limit amount information sent clients 
mobile hosts signi cantly stricter resource budgets hosts 
example concern power conservation may limit activity battery powered hosts willing perform ongoing basis 
unfortunately simply partitioning ams servers managing small area limited help clients frequently desire know information covering entire region size independent suitable ams 
illustrated common ways wehave observed clients location information users may wish track particular located object moves region 
examples include tracking worker wish talk tracking ce ee cart order aware nearby 
users wish track located objects speci ed set attributes particular region 
example tracking members workgroup 
users nd located object nearest speci ed location usually meets speci ed set constraints 
examples include nding nearest printer nding nearest system administrator 
users frequently wish monitor activity particular location 
typical example keeping track display devices current location 
examples rst represent regional queries require ams cover region size building small campus irrespective ams implementation 
architecture addresses issues primary focus 
worstcase usage scenario architecture designed handle meeting scenario people context aware applications converge period minutes 
illustrate issues involved consider location information scenario disseminated people involved simplest naive unicast approach result updates going clients quickly gets hand 
waiting quiescence batching updates reduce message count ton sacri ce timeliness 
broadcast multicast updates reduce aggregate message tra increase tra seen clients interested exactly information 
increase may problematic clients residing small hosts pdas connected low bandwidth links 
approaches exhibits di erent trade server network client loads 
solve problems controlling balancing component loads techniques detection sets clients wish receive information dynamic assignment groups update suppression guarantee clients communication links overloaded 
section describes context aware computing active maps system model greater detail 
section presents design disseminating active map information section describes performance testbed implementation done section describes related section summarizes presents 
context aware computing active maps context aware computing context aware computing ability mobile user applications discover react changes environment situated 
system mobile users run software constantly monitoring subscribing information world 
monitoring done variety reasons including provide display interesting located objects 
keep record located objects persons encountered applications activity information retrieval uses context time data stored assist retrieval 
detect location speci information example electronic messages left user public perusal 
keep look nearby devices opportunistically applications additional display terminals room 
detect nearby people located objects services relevant reminders actions set triggered presence 
descriptions variety location applications 
describe particularly illustrative application detail locations program 
program displays located objects region textual list map marked descriptive icons 
interesting located objects usually means persons chosen location publicly available say con nes ce building organization set objects location information available displayed mobile object person moves associated information updated locations display 
important aspect locations program crowded meeting rooms large regions ltering done order obtain manageable amount information display 
information clients interested subset location information 
ltering done turn important issue controlling behavior system 
users system employ interact heterogeneous changing set hosts 
addition stationary hosts devices may carry wireless pdas notebook computers 
consequently context aware applications able run small mobile hosts traditional powerful stationary ones 
furthermore prepared deal variety di erent network media relatively slow wireless links high speed lan links 
mobile users expect able monitor regions immediately surrounding expect monitorable remote parties 
example person visiting remote site wish agent process running back home site interested parties determine 
similarly person wish monitor various activities occurring home site presence absence colleague wish call phone 
active maps ams represents located objects tuples key value attribute pairs 
kind information client wishes publicly available stored registration located object include location attribute describes current physical location 
active map consists hierarchy locations containment relation example rooms contained buildings buildings contained region 

shows privacy issues surrounding may gain access location information scope addressed 
observation people willing limited version location information available workers con nes workplace 
example active hierarchy 
region buildings floors rooms located objects example hierarchy 
set locations maintained single active map server 
detailed structure depth region location containment hierarchy region speci focus far providing useful location information ams regions cover localized administrative entities buildings small campuses 
believe located objects useful context aware computing close hand located requiring short time get 
context aware applications monitor contents room building situated contents building town 
emphasis proximate information address question manage information larger regions cities countries 
assume clients accept burden interacting ams regions interested 
important consequence approach able scale implementation ams service cover regions size buildings small campuses regional queries implemented cient fashion 
clients active map service publish information objects particular location submit queries obtain information published located objects 
queries matched attribute keys values located objects stored ams 
standing queries called subscriptions speci ed ams send information changes time subscribing clients 
receiving updates response subscriptions common way clients interact ams 
characterize form interaction precisely publications hp pmi 
set located objects ams maintains information 
client specify interest dynamically changing subset publications submitting subscription query si 
set subscription queries denoted members run state member changes 
assume time member change state changes time set subscription queries matching object denoted update query set uq 
associated set clients receive noti cation change denoted update client set uc 
illustrate ams works describe examples 
rst mobile users continually monitor current locations various reasons outlined previous section 
system personal information user managed user agent process mobile users employ user agents monitor user whereabouts various means publish information ams 
user agent user leaves location enters location perform ams operations cancel publication presence cancel subscription noti es changes objects located publish presence subscribe noti ed changes objects located 
subscription returns current set objects return value 
clients ams monitoring location location clients noti ed user movement 
second example implementation locations program described earlier 
program issues subscriptions ams order noti ed changes relevant located objects speci ed region 
region ams region smaller sub region ams location hierarchy contains smaller internal regions building 
obtain information people program restrict subscription query match located objects example key value attribute pair key type value person 
system model context aware applications active map service examples wehave described require things underlying system infrastructure 
particular assume suitable location sensing facilities available track locations mobile objects suitable databases available describe locations stationary objects interest 
system deployed laboratory uses di erent technologies detect locations mobile objects people attached mobile objects monitored sensors embedded ceilings rooms corridors 
assumption holds practice ams receives information changing objects rpc processes rpc turn 
see information user agents system design 
input activity mice monitored detect presence logged stationary workstations 
nano cell di infrared communications communicate pdas provide room sized cell location information 
nano cell radio communications communicate portable notebook computers provide roughly room sized cell location information 
location information various sources user agent person 
person user agent may publish location information ams subject privacy constraints user set 
addition availability location sensing facilities assume ams clients reached packet communications asip 
requires applications mobile hosts able form mobile ip communications protocol employ mobile host agent architecture 
approaches deliver messages mobile hosts di erent ways 
mobile ip message delivery network function architecture uses known user process intermediary track forward possibly lter packets appropriate manner 
addition assuming packets routed mobile hosts require cient multicast communications 
currently standard combined communications protocol imagine extending current mobile ip protocols support multicast 
assume supported system 
section discuss implications relaxing assumption allow unicast wireless links 
disseminating active map information basic unicast design simplest implementation active map service involves reliable unicast communications remote procedure call rpc ams clients 
time clients rpc satisfactory communications paradigm 
reason part objects moving subscribers ams directly connected high speed networks sharing slow speed communication link 
objects moving people primary movable located object system time stationary 
furthermore time people separate ces wirelessly connected computers occupy di erent nano cells isolation 
course signi cant numbers workplaces assumptions stationary separated people hold 
similarly wireless technologies employ room sized cells communications 
brief periods increased load handled simply letting unicast design queue ams update messages transmission batching multiple updates 
bene ts gained way packet overhead update message amortized update items interval updates spans sightings moving object fewer update items sent including latest sighting object 
disadvantages approach subscribers obtain information timely fashion obtain accurate information activity 
problem example client may nd late client wanted know passed nearby 
discarding updates requires additional message processing ams 
case approach controlling overload works overload lasts brief period time 
reliable multicast design ams load generated overload situations due sending update message di erent subscribers 
duplication eliminated employing multicast distribute update message interested subscribers time 
shall refer data structure needed inside ams implement reliable communications particular multicast group multicast channel 
channels implement standard negative acknowledgment protocol 
support multicast message contains sequence number 
receivers check sure see sequence number turn 
missing message discovered receiver sends heal request specifying missing sequence number 
sender retransmits requested message heal response 
order bound time takes receivers detect missed message normal message tra longer synchronization interval synchronization message sent 
high load situations waiting synchronization messages detect misses rarely occurs data messages perform function 
single multicast channel ams sends asynchronous noti cations callback messages contain information changing context 
single multicast channel callback messages minimizes ams load 
information located object change state sent client subscription query matches event 
network segments having multiple clients load minimized identical messages occur 
reduction server network load comes exchange additional load placed clients communication links 
clients communication links joining ams receive updates ams sends 
clients power conscious attached slow communications links pda attached bps infrared link solution unacceptable 
multiple multicast channels indiscriminately sending update information clients multiple multicast channels order send information selective groups clients 
requires ams able gure assign updates multicast channels dissemination 
de ne general multicast channel assignment problem follows 
recall de nition ams section set publications set subscriptions update client sets uc 
hg collection multicast channels 
desire de ne mapping mc uc clients speci ed uc listen multicast channels speci ed mc time ams sends update information intended uc multicast channels speci ed mc time hold subscription client receive update information speci ed query si system overhead disseminating update information minimized 
unfortunately considered full generality consider choosing mc 
furthermore overheads borne erent parts system partly comparable ams bears cost computing mc sending updates changes disseminating mc 
clients bear cost tracking changes mc ltering unwanted updates 
duplicate update messages put additional load communication links 
noti cation time ected extra messages 
ams sends multiple messages update information introduce delay rst group recipients 
cost borne clients 
di erent cost metrics di cult de ne minimum system overhead means 
worse restrict problem choosing particular cost metric easily solvable general 
example minimize server communication costs requiring exactly message 
mc restricted update client set uc mapped exactly member case minimizing system overhead mean choosing mc message ltering overhead client subscribers experience due receiving unwanted update messages minimized 
unfortunately problem contains solution space exponential number publications subscribers multicast channels involved 
detecting multiply subscribed queries general multicast channel assignment problem di cult resort special case approach solving limited form problem 
experience collection location aware applications determined largely regional object speci queries issued large numbers clients queries monitoring locations frequently changing contents example meeting rooms hallways 
contrast hot spots activity monitoring single located object moves place human time frame produces light message tra second observation cases clients specify similar subscription queries particular meeting regional object speci subscription queries 
ams exploit situations recognizing multiple clients specifying subscription query employing multicast channel service update tra query 
approach imposes additional ltering overhead clients reduces server communication system load extent clients encouraged employ subscription queries 
particular clients specify query subscription particular location meetings handled ciently ams assign single multicast channel query send single update message clients submitted query 
similarly clients specify regional subscription query ams service subscribers single multicast channel dedicated 
detailed description approach works 
observe require slightly di erent mapping de ned 
speci cally de uq maps update query sets multicast channels associated update client sets 
collapse clients queries 
de ne mq de ning equality relationship subscription queries string equality ascii source representation queries de ning mq times equal subscriptions map member unequal subscriptions map di erent members size assumed su ciently large allow 
ams computes uq count number current subscribers submitted query assigns multicast channels pre speci ed minimum number subscribers particular ams maintains record di erent query corresponding currently submitted client subscription record contains count eld multicast channel identi er list clients submitted query 
unique unicast callback address maintained client 
count corresponds number clients currently interested particular subscription query 
count query equal multicast channel identi er send update information relevant clients 
count update information disseminated list client callback addresses attached record 
ams receives new subscription request contains th instance query assigns multicast channel clients may withdraw subscriptions subscriptions garbage collected submitting clients detected gone away 
query records channel identi er noti es clients subscribing query listen new multicast channel update information 
list unicast callback addresses attached query record 
detecting multiply subscribed queries clients specify queries 
encourage de ne standard set query templates parameterizable standard set located object attribute types 
clients substitute parameters example location identical queries result 
provides fairly exible set queries easily recognized mapped appropriate multicast update channels ams 
clients encouraged standard queries having applications er easily selected options user interfaces 
example locations program er appropriate regional queries menu options determining located objects display information 
standard located object types include printer person common ltering criteria include color vs black white printers various region speci organization group names people 
detecting recurring update query sets previous section described updates clients subscribing queries disseminated common multicast channel 
section presents idea di erent queries result updates set clients share multicast channel 
happen recognize recurring update query sets uq sets non identical subscription queries repeat number update events 
occur situations di erent groups clients want di erent possibly overlapping cuts large amount location information available particular location region 
example consider large multi organization conference place 
members organization may want see location information pertaining organization sister organizations information attendees conference 
especially true clients sitting small hosts connected slow communications links 
regional queries similarly specialized 
side bene recognizing recurring query sets allows ams simpler form query equality recognizing multiply subscribed individual queries 
queries source form match specify logical query appear level query sets 
example query key type value person second query having key type value person key department value legal identical match located objects people query location legal department 
detect recurring update query sets ams keep history update query sets computed past 
new update event occurs time ams computes update query set uq searches history update query sets see query set occurred 
occurred times candidate having multicast channel assigned updates set handled single update message 
precisely ams keeps list maximum size previously computed query sets 
list element contains representation previously computed query set count number times ams encountered particular query set multicast channel identi er 
just individual query records count query set equal prespeci ed value multicast channel identi er designate multicast channel disseminate update information 
count multicast channel identi er nil 
multicast channel assigned update query set update information disseminated separately subscribers query query set 
done follows query query set send update information multicast channel list unicast addresses associated query 
shall refer means update multiple messages query algorithm rest section 
exact steps ams performs update event occurring time 
compute uq 

search exact match history list exact match occurs query uq equal exactly query candidate query set hi 
matching done ciently hash scheme reduce number potentially equal query sets candidates 
equality matching query sets done representations sorted canonical order 

exact match uq added front ofh count nil multicast channel identi er 
causes size exceed query set discarded list 
maintain doubly linked list query sets item moved front list 
query sets sorted order item rear list discard 
update information sent multiple messages query algorithm 

exact match suppose element hi steps performed increment count 
hi multicast channel identi er nil indicated multicast channel send update information 
hi multicast channel identi er nil count eld send update information multiple messages query algorithm 
hi multicast identi er nil count eld exactly perform steps assign unused multicast channel query set assign channel identi er multicast channel eld query set record 
query query set send update information identi er newly assigned multicast group query algorithm 
clients expected henceforth listen designated multicast channel update information ability detect multiply subscribed queries recurring update query sets wonder important load reduction 
observe system large diverse multicast tra go channels belonging recurring query set scheme 
tracking multiply subscribed queries allows query set scheme avoid sending large numbers unicast update messages query set multicast channel update dissemination 
scheme tracking queries preferable tracking recurring update query sets 
bandwidth limited approach clients sitting low bandwidth communication links hosts limited computational resources available ancillary applications program question limit ams update tra extremely important 
client waits communication channel updates action di cult send message adjusting smaller subscription 
unfortunately easy infer amount tra ams subscription query generate circumstances dynamically change 
ams service clients best allowing specify desired bandwidth limits part subscriptions 
ams guarantees send tra client client bandwidth limit speci es means sending update information client subscription query matched 
order alert clients missing update information bandwidth limitations add additional count eld update messages indicates updates pending 
clients receiving update message non zero count eld know received latest available location information object included update message may unaware latest changes object mentioned update message 
client decide deal partial update information 
ect bandwidth limited subscription multicast update schemes follows single multicast channel multiply subscribed query recurring update query set multicast channels number di erent bandwidth limits speci ed relevant individual query ofthe queries relevant recurring query set 
multicast channels note reliable multicast clients guaranteed nd changes set multicast channels listen relevant multicast message 
care taken ensure client detects missed multicast message contained information client asks relevant messages sent new multicast channel 
send di erent band update tra query query set 
example bandwidth limits speci ed query employ multicast channels andm 
rst bytes update tra second sent 
tra available sending second bytes sent 
remaining data sent 
clients desiring bandwidth limit told listen 
clients desiring limit 
clients bandwidth limit told listen multicast channels 
di erent multicast channels fashion described ams send update message times 
price paid approach clients told new multicast addresses listen particular new client shows di erent bandwidth limit seen subscription query 
information rst multicast channel assign query query set disseminated assigned multicast channel overhead really problem 
availability design relies centralized active implying ams functioning server crashes 
problem practice reasons active map server host independent run available server machine 
distributed watch dog facility monitor restart server fails 
awell known multicast channel allow newly restarting server obtain current location information located objects currently region 
clients ams expected listening channel address location re submit subscriptions ams receive server restart message 
result approach active stay long assuming system available potential server hosts 
addressed issue partitioning ams region 
imagine ams clients starting new instances server partition notice absence having servers watch known multicast channel mentioned perform re integration partitions heal 
represents 
tempted avoid availability issues centralized service altogether trying implement ams distributed communications protocol exchanging information changing location objects interested clients 
located objects multicast update information clients multicast queries nd need know current state part system 
unfortunately approach general impose ltering load system located object managers clients centralized tra router extensive knowledge interested importantly interested 
need avoid overloading weak clients slow communication links consider disadvantages totally decentralized design outweigh advantages especially ability centralized server quickly recover failure 
local scope versus internet multicast groups assumption applications large numbers multicast groups currently reasonable general internet setting dynamic global address assignment di cult signi cant numbers internet wide multicast groups overload routing tables 
fortunately ams clients reside hosts local ams region 
limiting range messages sent multicast group example campus group recycled campus 
currently limit range ip multicast datagrams setting time live ttl parameter multicast datagrams forwarded subnet ttl certain threshold 
small drawback approach ams regions correspond ttl regions de ned multicast network routers network routers ttl region de nitions appropriately tuned 
clients may reside remote hosts ams rely solely multicast groups disseminate heavily subscribed updates 
cases simply unicasting relevant updates remote clients interested su cient addition disseminating local scope multicasts 
ams obtains internet multicast group addresses alleviate load cases signi cant number remote clients exist interested heavily subscribed updates 
works extent fewer internet multicast groups needed ams obtained 
demand additional internet multicast groups increases ams control load reusing internet multicast group multiple multiply subscribed queries recurring query sets forcing remote clients assume additional ltering overhead 
note internet multicast groups kept completely separate ams handling local clients local multicast groups long clients readily determined 
problems dealing remote clients need ect local system 
dealing unicast wireless links wireless communication technologies current cellular telephone systems er multicast support 
agent implementation routing packets mobile hosts provision multicast di cult agents communicate mobile hosts essentially unicast fashion 
scheme help somewhat systems support multicast semantics wireless communications links ams employs multicast reduce load communications directed agent processes lan connected hosts convert multicast tra unicast forward actual client applications running mobile hosts 
unfortunately alleviate load problems occur update message gets sent separately clients residing slow wireless communications cell 
problem partly alleviated moving relevant client applications partly wholly stationary hosts directly connected multicast capable network 
suitable local host available may di cult may simplify matters complicated ltering needed cull small manageable amount information update tra generated overload situations done faster stationary machine slower resource power conscious portable machine 
nal information results presumably smaller size original update tra sent application front ends reside users portable machines 
cases suitable local host may 
mobile user home ams region access trusted workstation server machine safely run applications 
user visits remote region may access suitable local machine forced run applications remotely machine home region 
depending applications networks involved additional delays impose may issue 
general conclude unicast wireless links partially dealt especially clients access local trusted hosts availability wireless links far preferable basis ams system 
implementation laboratory currently implementations ams running older version system production people years new version exists simulated testbed environment 
built order explore ideas results section obtained 
testbed system built designed tell di erent things active map server built works kinds loads occur various di erent user movement scenarios 
particular interested characterizing behavior system normal load circumstances meeting people took place 
shows micro benchmark numbers ams testbed 
measurements sun sparcstation client communicating sun rpc ethernet sparcstation server machine running active map server 
line marked query match shows time required match simple query collection ams objects single object successfully matched returned query client 
slope shows additional object matched contributed microseconds service time 
line marked query return shows cost returning objects size time ms subscriber update query match query return objects subscriptions micro benchmark numbers active map server running sun sparcstation 
bytes client slope line indicates milliseconds needed additional object returned 
line marked subscriber update shows ams service time unicast subscriber updates depends number messages sent disseminate information update event 
system behave di erent usage scenarios built arti cial workload generator producing sets sightings played back active map server 
workload generator discrete event simulation user movement consisting multiple people moving graph representation building 
building simulated consists multiple copies oor plan laboratory 
person transition probability matrix called mode rate transition 
activities meeting occurs workload simulation change mode rate group people 
workload generator knows paths distances main destination users mode takes destination expands sequence steps sightings shortest path 
steps emitted times step distance global travel rate 
move complete workload generator chooses poisson distributed random sleep time move rate person leaves person stationary length time repeating entire process 
reasons located objects system large twofold descriptions consist attributes relatively ine cient facilities encode object descriptions 
signi cantly reduce size object descriptions qualitatively change results obtain 
large object size obtain conservative bounds system perform smaller object sizes improve things 
able build arti cial sightings hundreds users hundreds locations 
test ams designed types workloads meeting normal 
meeting workload people start individual locations point converge single location speci ed period time typically minutes 
normal workload users spend time ces venture location 
see large normal community handled ran normal workload unicast version ams users system 
input workload generator probability ce location resulted community mobile time average 
translated mobile users seconds resulting computed average moves minute 
generated workload executed sparcstation hosts client processes hosts server monitor program 
running workload produced updates expected rate encounters people occurring moves 
regional queries included workload users monitored locations 
unicast design observed average delay ms receiving updates twice unloaded case ms implying ams easily able handle excess users normal conditions 
con rm fact things meetings quickly overload unicast design ran meeting workloads unicast version ams 
shows results indicating meetings participants started produce excessive move response times 
contrast single multicast channel version ams able support meetings participants 
performance version ams incorporates multiple multicast schemes described determined primarily average number update messages server ends sending update event 
cost managing data structures needed schemes small compared cost sending update messages network users employ standard queries way client applications try encourage average number messages ams send update event quite low 
update events single message su ces update regional subscriptions 
true subscriptions meeting locations 
unfortunately production system real users write new applications tell non standard subscription queries occur practice 
illustrates maximum size meetings handled ams server depends average number messages sent update event 
values obtained disabling multicast channels identical clients sets generating arti cial meeting workloads di erent numbers distinct subscription queries 
graph maximum meeting size point ams receiving updates quicker disseminated 
graph shows potential bene merging update query set sizes start numbering cost sorting canonical order storing start signi cant 
design predicated assumption di erent queries match update event 
update service time ms number meeting members average update time clients monitoring meeting function meeting size 
client update sets multicast channels query matching 
related mentioned number articles topic location systems including 
broadest overview available topic 
distinguishing feature rst addresses issues scaling overload conditions systems covering medium sized regions buildings small campuses 
take advantage lower level communications technologies developed 
include ip multicast mobile ip mobile ip multicast 
anumber systems publish subscribe style information dissemination notably 
systems employ broadcast groups implementation resulting extensive client side ltering messages 
contrast approach aggressively employs large numbers multicast groups order keep client ltering overhead slow communication link loads minimum 
max 
meeting size av 
number msgs update maximum size meeting handled function average number messages sent meeting update event 
summary described active map service supports context aware computing providing clients information located objects objects change time 
focused communication issues disseminating information active map server clients 
particular addressed overload situations occur 
simple unicast callbacks interested clients located objects moving time clients wish know move 
people moving region clients interested motion ams may experience overload due quadratic nature communications involved 
overload ects server slow communications links 
generated workloads illustrate extent potential overload problem system capable handling excess users normal low load circumstances exempli ed people sitting ces meetings people manage overwhelm handled means unicast communications 
contrast ams employs multiple multicast groups able support meetings participants 
approach problem exploit multicast techniques avoid requiring ams repeatedly send update information message di erent receivers 
order avoid losing update information reliable multicast channels require clients monitor sequence numbers multicast message request retransmissions detect missed sequence number 
avoid increased client ltering overhead added overhead slow communications links multicast channels ams clients see subset ams updates interested 
assigning multicast channels suitable subsets update tra order minimize system load general hard problem 
special case solution pursued recognize subscription queries submitted multiple clients sets subscription queries match multiple update events 
approach observations ams load generated regional queries submitted large numbers clients update tra related relatively small number hot spot locations objects 
encourage queries clients structured applications er standard queries easily invoked menu options 
structuring applications fashion sharply increase likelihood clients employ query 
ability tailor ams clients key factor enables design succeed 
essence ensure load reduction schemes making sure client applications generate exactly kinds queries schemes designed handle 
ams applications designed keeping mind exhibit regular patterns ams depends controlling system load 
tailoring applications behave properly key design feel important er exibility possible con nes design 
example recognition scheme ams dynamically recognizes multiply subscribed queries applications change set standard queries employ having change notify ams 
nonstandard queries design 
important feature design ability strictly limit update tra clients exposed desire limit 
allowing clients explicitly specify bandwidth limits ams update tra blocked slow communications link important application tra inadvertently consuming power conscious host resources 
pursued centralized design ams feel causes availability problem active map server host independent restarted available server host 
restarting server done fairly quickly known multicast group address solicit location subscription information clients system 
consequence felt need explore complicated expensive fully decentralized designs 
remains done dealing partitions ams region 
hope explore extension centralized design relies dynamically creating servers partition merging servers partitions heal 
clients ams expected local region covers ams uses local scope multicast groups reach local clients avoiding di culties large numbers internet multicast groups globally allocated managed unicast reach remote clients 
experience signi cant numbers remote clients 
remote clients remain rare small preallocated set internet multicast group addresses ams region may su ce dealing ciently unicast 
activities common design problematic ams regions obtain large numbers easily managed internet multicast group addresses private 
observe approach disseminating information relies availability multicast system including wireless communication links 
multicast added straight forward manner experimental infrared radio facilities built lab readily available part current commercial cell phone infrastructure mobile ip protocol proposal 
described agent approach enables system wireless communications take partial advantage multicast solutions believe widespread deployment active map facilities facilities require widespread wireless mobile multicast facilities 
acknowledgments colleagues discussed ideas especially doug terry steve deering provided valuable insights feedback early phases design 
conversations lixia zhang helped understand techniques bandwidth limiting 
number people worked location systems lab including mike spreitzer karin petersen david nichols phil james 
editors referees provided plenty comments 
appreciate mark weiser leadership pursuit ubiquitous computing vision umbrella pursued 
acharya badrinath 
delivering multicast messages networks mobile hosts 
th intl 
conf 
distributed computing systems pages may 
norman adams rich gold bill schilit michael tso roy want 
infrared network mobile computers 
proceedings usenix symposium mobile location independent computing pages 
usenix association august 
stephen deering david cheriton 
multicast routing datagram internetworks extended lans 
acm transactions computer systems may 
andy harter andy hopper 
distributed location system active ce 
ieee network pages january february 
john ioannidis daniel duchamp gerald maguire jr ip protocols mobile internetworking 
proc 
sigcomm pages 
acm september 
christopher alan demers ron frederick robert mark weiser 
experiences wireless environment 
proceedings usenix symposium mobile location independent computing pages 
usenix association august 
michael lamming william newman 
activity information retrieval technology support personal memory 
vogt editor personal computers intelligent systems volume ifip th world congress 
proceedings information processing pages 
ifip elsevier science publishers north holland 
brian oki manfred alex siegel dale skeen 
information bus architecture extensible distributed systems 
proceedings fourteenth acm symposium operating system principles pages asheville nc dec 
sigops acm 
steven reiss 
connecting tools message passing eld environment 
ieee software july 
bill schilit norman adams rich gold michael tso roy want 
parctab mobile computing system 
proceedings fourth workshop workstation operating systems iv pages 
ieee october 
bill schilit marvin theimer brent welch 
customizing mobile application 
proceedings usenix symposium mobile location independent computing pages 
usenix association august 
mike spreitzer marvin theimer 
providing location information ubiquitous computing environment 
proceedings fourteenth acm symposium operating system principles pages asheville nc dec 
sigops acm 
roy want andy hopper veronica falcao jonathan gibbons 
active badge location system 
acm transactions information systems jan 
mark weiser 
computer st century 
scienti american september 

