methods competitive evolution finding opponents worth beating submitted icga christopher rosin richard belew cs ucsd edu cognitive computer science research group department computer science engineering university california san diego la jolla ca evolution refers simultaneous evolution genetically distinct populations coupled fitness landscapes 
consider competitive evolution fitness individual host population direct competition individual parasite population 
competitive coevolution applied game learning problems tic tac toe ttt nim small version go 
new techniques competitive evolution explored 
competitive fitness sharing changes way fitness measured shared sampling alters way parasites chosen testing hosts 
experiments ttt nim show substantial improvement performance methods 
preliminary results evolution discovery cellular automata rules playing go 
evolution refers simultaneous evolution genetically distinct populations coupled fitness landscapes 
consider competitive evolution fitness individual population direct competition individual population 
interactions hypothesized occur nature modelled game theoretic constructions maynard smith evolutionary stable strategies prisoners dilemma 
arises evolution ai game playing strategies range potential strategies difficult establish sort fixed exogenous fitness function typically genetic algorithms gas 
generally number situations arise complex software engineering applications construction appropriate test suites demonstrate reliability software considered important development software 
viewing software solutions population test suites competitive evolution allows simultaneous search 
note distinction domains competition symmetric games prisoners dilemma example domains asymmetric example solution test case distinction 
games ones may asymmetric due example advantage enjoyed player move 
symmetric asymmetric cases individuals evolving populations take turns testing tested 
term host refer individual fitness consideration parasites refer individuals testing host 
parasites evolving fitness competition outcome success host implies failure parasites 
repeated failure host parasite populations represents evolutionary challenge lead evolutionary arms race 
new genotypes arise defeat old ones 
perspective ga engineers desire process go indefinitely 
new parasite type serve drive innovation creating greater levels complexity performance 
goal implementation competitive evolution discovery diverse consistently strong set novel parasites worth computational effort beating 
weak parasites determinants host fitness give rise mediocre solutions drive better 
testing small set parasites allows evolution hosts may prove robust face broader experience 
evolution offers potential solution problem 
new improved host type note terminology differs somewhat hillis 
creates new niche parasites defeat 
give rise wide diversity niches containing wide variety competitors 
new types evolve compete parasites robust offer new challenges competition 
common software engineering problem testing candidate solutions considered separately developing solutions 
perfect solution testing problem minimal complete set extremely difficult test cases typically difficult identify realistic problems 
note test set may poor parasitic population knew 
hosts competing rigorous parasites may fare poorly 
evolution requires information fitness variation guide search 
coevolution may provide 
generation parasites varying degrees evolutionary success evolved far difficulty required defeat current hosts 
generations progress expect drive difficult test cases arise 
result pedagogical series parasites gradually increase difficulty host solutions gradually increase competence 
competitive evolution applied game learning problems tic ttt nim small version go 
new techniques competitive coevolution explored 
competitive fitness sharing changes way fitness measured shared sampling alters way parasites chosen testing hosts 
methods intended increase useful diversity coevolving populations support evolutionary innovation 
experiments simpler versions competitive evolution nim unsuccessful game solved new techniques similar improvement due methods observed go 
competitive fitness sharing shared sampling defined detail effect evolution considered 
experiments done tractable ttt nim problems representations kept simple results comprehensible 
typical runs shown problems replicated experiments demonstrate performance variations introduced 
preliminary results evolution discovery cellular automata rules playing go 
methods experiments done evolutionarily distinct populations competitions place populations 
population gets turn hosts parasites fitness measured measure fitness respectively 
competitive fitness sharing usual way assign fitness success set competitions add score competitions score binary value indicating success failure 
called simple fitness 
different method similar fitness sharing tested improves performance test problems 
fitness sharing sharing function defined measure similarity individuals 
individual fitness divided sum similarities individual population 
rewards unusual individuals 
method parasite treated independent resource shared hosts population defeat 
having separate sharing function parasite called competitive fitness sharing just sharing brevity 
fitness assigned host defeating parasites set indices total number hosts population defeating parasite fitnesses comparable hosts compete set parasites case experiments 
effect method reward hosts defeat parasites rewarded host defeat parasites 
relevant exist hosts defeat parasites 
case host defeats parasites may contain important genetic material 
example advantage sharing may provide consider situation host type defeats parasites host type defeat 
assume types defeat parasites average important contains information defeating parasites defeats average number parasites 
assume small number representatives population 
new innovation old niche important 
may simply random fluctuations carried population low numbers 
simple fitness average fitness stand chance extinct generation exact probability depending type selection 
competitive fitness sharing individuals type receive substantially greater fitness rare fitness divided small number individuals 
prevalent types lower individual fitness fitness divided larger number host individuals 
small number individuals type stand chance selected preventing ate extinction sort situation competitive fitness sharing able allow survival important poorly represented types 
greater number diverse niches competitive fitness sharing 
niches exist necessarily small subject extremely low numbers due sampling errors 
simple fitness greater danger extinction conditions competitive fitness sharing 
opponent sampling desirable reduce computational effort expended competition testing individual host population limited sample parasites population 
simple way collect representative sample parasites pick random subset 
technique explored 
information available individuals previous generation information try select challenging sample parasites parasites selected previous generation population 
example parasites best fitness generation preferentially selected play generation 
niches parasite population tend pick similar individuals niche happened highest fitness selecting diverse set parasites niches 
alternative technique select subset parasites challenges segments host population 
natural way choose new sample members maximal competitive shared fitness current sample 
way successive member sample chosen competes hosts previous generation members current sample compete 
technique sampling parasite population called shared sampling specified detail algorithm 
note opponents individuals previous generation rate fitness parasite population sampled 
initialize current sample empty set opponent previous generation beat current sample beating current sample full parasite sample samp fit fitness sample opponent beat gen samp fit beat samp fit maximal add individual current sample opponent previous generation beat opponent gen increment beat shared sampling interesting note shared sampling provide effects competitive fitness sharing described competitive fitness sharing 
addition choosing parasites challenge hosts shared sampling tend choose representatives parasite types beat large number hosts 
parasite types defeated large segment host population generally represented sample defeated members host population 
simple fitness hosts receive greater fitness defeating parasites hosts defeat 
effect simple fitness shared sampling provide performance comparable competitive fitness sharing seen results 
structure experiments test problems representations test problems experiments simple games ttt nim 
test methods progress difficult problem strategies game go evolved discussed section 
ttt players alternate placing markers grid 
player obtain row horizontally vertically diagonally wins 
games frequently draw result optimal play sides 
nim position game consists piles stones 
players alternate removing arbitrary number stones single pile 
player take stone wins 
configuration starts piles containing stones 
configuration allows player force win optimal play 
representation games gene corresponding single position game 
ttt symmetric positions removed genes ordered genome arbitrary way 
board configuration may represented digit base number digit indicate square empty indicate opponent holds square indicate moving player holds square 
positions generated numerical order starting squares empty 
position assigned gene reachable actual play contain win squares open choice needs symmetric form reflected rotated previous gene 
yields genome board positions 
nim positions placed genome lexicographic order quadruple gives number stones piles 
needed representation total genes 
ttt control function learned 
gene take number allele values equal number open squares corresponding position 
uniquely specifies legal move position 
contrast nim binary evaluation function gene take allele values 
move legal moves tested evaluation function position evaluated selected move 
positions tested order 
piles selected order fourth 
pile containing stones moves leaving pile gamma stones tested order 
positions evaluated move ordering generally move selected default 
simple problems 
certainly perfect play easily achieved games game tree search 
note task facing ga difficult respects 
genomic representation assumes knowledge searching games underlying tree structure 
furthermore ga solve problem finding parasites test candidate strategies order solve games 
evolving ttt strategies competitive environment difficult problem different representation symmetries eliminated 
genetic algorithm ttt nim experiments populations compete 
population individuals searching perfect strategy second population opposes 
nim population seeks perfect player strategy plays 
ttt population seeks strategy loses going second 
generation fitness evaluated population manner 
sample opponent population selected parasites test current host population 
sample contain opponents contain opponents previous generation shared sampling 
host individuals compete parasite sample fitness assigned simple fitness competitive fitness sharing 
ttt host parasite competitions involve games player getting chance go second competitive fitness sharing parasite treated independent shared resources goes goes second 
runs terminated perfect strategy meeting criteria stable population 
simple single individual elitism elite individual displaced generation new individual strictly greater fitness exists 
guarantees perfect strategy stably held population elite 
ga parameters chosen modest amount exploration parameter space 
types tournament roulette selection tried tournament selection superior problems 
mutation rates chosen basis experiments showed fairly high mutation rates 
population size chosen fairly large success achieved consistently 
simple elitism large elite sets somewhat detrimental performance perfect strategies repeatedly lost elitism 
general parameters chosen conservatively give consistent results attempting achieve optimal performance run 
long reasonably large sample parasites selected generation reasonably large population sizes eventual success methods critically dependent parameter value choices 
ga operates population independently 
child created recombination parents 
parent selected independent tournament 
crossover points selected probability gene 
mutations chosen probability gene ttt gene nim 
mutation selects random legal allele value gene ttt 
mutations nim flip binary allele value 
ttt population individuals total nim individuals 
results types data obtained typical runs nim ttt followed comparison various techniques test problems 
analyzing results performance measured number generations required solve game 
sharing shared sampling provide substantial performance improvement techniques required solve nim 
help understand results additional aspects experiments 
usage positions game 
time move position game single generation counter position incremented 
significant usage threshold set number positions usage threshold measured generation populations 
threshold set level goal significantly positions usage strongly selected ga positions simply happen times due chance mutation 
larger number significantly positions indicate greater diversity games individuals selected 
sort diversity important test hosts fully generation provide richer fitness information 
purposes comparison significant usage averaged generations run average quantity multiple runs 
ttt positions corresponding genes counted 
significant usage substantially higher sharing shared sampling 
second aspect analyzed loss potentially important genetic material 
described sharing shared sampling reduce extinction host types defeat parasites 
generation population count number sampled parasites meeting conditions 
existed hosts generation defeated parasite 
second host selected contribute genetic material generation 
describes sort extinction considered 
note loss single important host may counted extinction events parasite beat host beat 
purposes comparison average number extinction events generation calculated average quantity multiple runs 
extinction events typically fairly rare fewer extinction events sharing shared sampling 
typical runs shows average number wins populations run shar brings measure closer correspondence gene usage 
generations ttt run average number wins population population ttt average number wins ing shared sampling parasite population 
ttt easier problems parameters tuned perfect solutions game pairs games 
early part run flaws population discovered second population 
runs displayed initial stage sufficient find perfect strategy 
runs initial stage best population individuals typically defeat opponents generations 
second population occasionally discovers flaws quickly corrected population perfect strategy 
significant usage typically shows quick initial rise level particular configuration ga support followed fluctuations 
features similar seen significant usage nim see 
nim difficult 
probably due factors 
greater constraint moves perfect player 
second game tree somewhat deeper substantially distinct paths 
defeat means lose going second representation epistatic ttt genes enter move decision 
generations nim run average number wins population generations nim run significant usage population nim average number wins significant usage displays average wins significant usage population run sharing shared sampling 
second population average wins near mirror image quite due sampling nim perfect solution games parameters tuned 
typically success competition nim balanced populations run 
population spends time trying strategies employ incorrect move 
strategies perfect difficult beat moves optimized 
eventually strategy employing correct move optimized point perfection 
significant usage threshold set uses 
significant usage displays initial rise followed fluctuations due part temporary convergence failure population 
population begins converge temporarily successful type fitness spikes generations diversity loss seen drop significant usage 
periods relative failure example generations types strongly selected significant usage drops 
comparison results ttt shows average performance runs variants ttt 
variants possible combinations random sampling shared sampling simple fitness competitive shared fitness 
levels sampling 
sharing shared sampling clearly improve performance 
performance difference random sampling simple fitness shared sampling shared fitness significant levels sampling 
interesting runs sampling level successful corresponds parasites test host population 
pushed lower runs parasite test host population successful 
table shows average number significantly positions generation ttt averages taken runs 
significant usage threshold set uses 
corresponds number games hosts play parasites 
qualitative results fairly number game pairs percent opponents sampled ttt performance simple fitness random sampling simple fitness shared sampling shared fitness random sampling shared fitness shared sampling ttt performance comparison robust choice threshold 
runs opponent sampling 
refers population serving host sample parasites second population second population sample population 
difference usage simple fitness random sampling shared fitness shared sampling significant populations treating average run independent sample fitness sampling simple random simple shared shared random shared shared table ttt significant usage table shows average extinction events generation runs variants ttt 
game parasite yield separate extinction events goes goes second 
runs opponent sampling 
extinction events second population hosts playing population parasites 
events population hosts playing second population parasites probably evolutionary task fairly easy 
difference extinction events simple fitness random sampling shared fitness shared sampling significant 
fitness sampling simple random simple shared shared random shared shared table ttt average generation nim nim simple fitness shared fitness tested sampling entire parasite population random sampling shared sampling 
nim results averaged runs sampling opposition sampling 
lower levels sampling worked results robust changes parameters 
table shows performance results variants studied 
sampling game twice population individual playing host population individual playing host results case reflect fact game played counted outcome purposes 
shared fitness shared sampling best 
note runs simple fitness sampling random sampling completed 
variations run generations initial progress runs showed hope eventual success 
table shows significant usage variants nim 
significant usage threshold fitness sampling avg std dev simple simple random simple shared shared shared random shared shared table nim number games solve millions set versions sampling 
correspond number games hosts play parasites 
variants find perfect strategies generations data 
difference shared fitness shared sampling simple fitness random sampling significant 
populations fitness sampling simple simple random simple shared shared shared random shared shared table nim significant usage table shows average extinction events generation variants nim 
variants find perfect strategies generations data 
note sampling potentially far extinction events parasites 
second population difference extinction events simple fitness random sampling shared fitness shared sampling significant 
fitness sampling simple simple random simple shared shared shared random shared shared table nim average generation evolving cellular automata rules go game go proved difficult computers 
description game early getting computers play 
game involves placing stones intersections grid 
go fairly visual playing involve intuitive pattern matching 
addition properties game nearly invariant position grid 
reasons cellular automata ca provide natural representation strategies game 
hand designed cellular automata rules program written allan apparently success 
intersection go board corresponds cell ca 
cell contains bits state may modified action evolved rules 
bits show current placement black white stone respectively initial configuration bits cleared initially 
third bit signal move 
move ca timestep ca selects legal move 
ca rules represented list pairs style classifier system rules 
conditions consist don care bits cells neighborhood actions consist don modify bit go board ca neighborhood central cell see 
timestep cell action corresponding matching condition list taken 
genetic operators mutate condition action bits rule add new random rule list swap rules delete randomly chosen rule 
crossover points chosen rules list 
initial experiment board 
population size individuals population playing second playing second 
fitness sharing shared sample opponents 
evaluate success evolved strategies tested weak public domain go playing program authors test learned go strategies 
generations best strategies able consistently defeat 
strategies 
particular displayed lack ability look board globally making move locally relevant incorrect globally pressing distant play 
interestingly human beginners tend display weakness 
ca rules show encouraging degree competence fairly complex representation information playing built 
competitive evolution quite successful simple games 
fact solved games indicates able solve problem finding parasites test candidate strategies 
new techniques competitive fitness sharing shared sampling substantially improve performance test problems required completely solve nim 
consideration extinction events significant usage suggests techniques protect important innovations small niches allowing greater diversity parasites drive evolution point time 
preliminary results difficult game promising 
game go coevolution able progress difficult problem complex representation knowledge task built 
angeline pollack 
competitive environments evolve better solutions complex tasks 
proceedings fifth international conference genetic algorithms morgan kaufmann 
axelrod evolution strategies iterated prisoner dilemma 
genetic algorithms simulated annealing morgan kaufmann 
bedau packard 
measurement evolutionary activity life 
artificial life ii addison wesley 
berlekamp conway guy 
winning ways mathematical plays academic press 
dawkins blind watchmaker norton 
durham program touch zen 
computing horizons addisonwesley 
goldberg genetic algorithms search optimization machine learning addison wesley 
hillis evolving parasites improve simulated evolution optimization procedure 
artificial life ii addison wesley 
levy 
editor 
computer games springerverlag 
maynard smith evolution theory games cambridge university press 
schraudolph dayan sejnowski 
temporal difference learning position evaluation game go 
neural information processing systems morgan kaufmann 

