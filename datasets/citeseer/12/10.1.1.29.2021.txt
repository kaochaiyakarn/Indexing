ecient trace revoke schemes moni naor benny pinkas goal design encryption schemes mass distribution data possible deter users leaking personal keys trace users leaked keys construct illegal decryption device revoke keys render device 
start designing ecient revocation scheme secret sharing 
remove parties secure coalitions users 
performance scheme ecient previous schemes properties 
show enhance revocation scheme traitor tracing self enforcement properties 
precisely construct schemes user personal key contains sensitive information user user credit card number order users reluctant disclose keys 
illegal decryption device discloses identity users contributed keys construct device 
possible revoke keys corrupt users 
point important able publicly disclosing sensitive information 
keywords user revocation blacklisting broadcast encryption tracing traitors self enforcement copyright protection 
digital media easy copy manipulate 
brought useful applications pirate copying digital content music video software signi cant problem 
copying done users authorized content redistribute incurs great losses producers distributors digital content 
problem ects forms digital distribution various types media music cds dvds satellite cable television programs access premium database goal design system prevent abuse legitimate distribution channels 
design schemes support distribution encrypted versions content enabling features 
tracing users leak decryption keys pirates order construct illegal decryption box dept computer science applied math weizmann institute science rehovot israel 
mail naor wisdom weizmann ac il 
part done visiting stanford university 
partly supported darpa contract 
star lab technologies 
done dept computer science applied math weizmann institute science israel 
mail com 

revoking keys render pirate box useless 
schemes propose address issues simultaneously 
call schemes trace revoke schemes 
furthermore schemes self enforcement property users leaking keys embedding personal information 
ease presentation start describing revocation problem separately go deal traitor tracing self enforcement 
user revocation presents simple ecient methods user revocation process known user exclusion blacklisting 
methods operate scenario group users receives digital content group controller 
content example tv programs digital music transmitted internet satellite broadcasting cables stored dvds 
content encrypted decryption key known members group 
point group controller learns users violating terms usage license example users set top tv decoders known piracy case dvd systems players keys decrypting dvds players keys leaked 
group controller revoke decryption capabilities users 
broader scenario user revocation schemes multicast environment fast rekeying multicast group parties leave group 
revocation scheme important factors determine eciency communication overhead length messages sent center renew key 
represents wasted bandwidth case dvds wasted storage 
ii storage overhead users keys store 
iii computational overhead key update especially users 
schemes enable revocation keys users universe users parameter secure coalitions revoked users 
schemes ecient criteria key length communication overhead computation new group key 
particular parameters depends total number users personal key length constant communication computation overheads linear appealing mode operation revocation 
enables remove users worst case overhead speci ed performs better users removed 
particular users removed communication overhead just removing users scheme ready remove additional users 
group controller send additional maintenance messages users possibly periods bandwidth network fully utilized regain original worst case guarantee scheme prepare revocation new users maintenance mode appropriate connected devices pcs set top boxes line device dvds 
note similar revocation scheme section discovered independently anzai tracing self enforcement extensions tracing methods nding users responsible distributing illegal copies content 
see discussion :10.1.1.22.8278
tracing self enforcement revocation may applied scenarios enforce payments emphasize deployment conjunction methods combat leaking keys 
non exclusive approaches combating leakage tracing corrupt users leaked keys 
pirate box nding source keys known traitor tracing 
ii users revealing personal keys task denote self enforcement 
self enforcement property obtained giving user personal key contains sensitive information private example user credit card number 
personal key required decryption content 
reasonable assume users reluctant disclose personal sensitive keys pirates users willing give keys friends neighbors 
self enforcement schemes achieve goals prevent small scale piracy user giving key friend task managed copyright protection schemes 
harder pirates obtain users keys 
goal important complementing schemes ght piracy revocation schemes successful pirate obtains threshold keys parameter ects complexity scheme 
self enforcement scheme justi es smaller threshold improving eciency schemes 
describe section schemes enable self enforcement traitor tracing user revocation 
combination properties limited revoking users corrupt 
section describes perform periodic refresh group key users personal key contains sensitive information compute group key continue system 
strong security property important scenarios expected users revoked regular basis 
addition describe combine revocation combinatorial tracing schemes :10.1.1.22.8278
overview results scenario consider scenario 
group users share key key content encrypted 
group controller gc responsible controlling decryption capabilities users 
gc common secret key users enables communicate private channel channels directly schemes 
gc prepares keys trace revoke scheme initialization phase gives user personal key 
certain point subgroup users disallowed continuing decrypt content new key generated gc known users 
group communication encrypted new key 
revocation trivially achieved way 
gc generates new group key sends independently remaining members group private channel 
scheme inecient 
communication overhead large 
typical group include users users removed 
overhead schemes contrast depends basic idea basic idea revocation scheme secret sharing way group controller prepares advance key revocation 
initialization phase user receives share key 
revocation phase gc broadcasts shares revoked users 
user combine information share obtain new key coalition revoked users shares compute information new key 
schemes types revocation schemes revoke keys users parameter 
overhead schemes user key constant length essentially element eld eld size di erent revocation message length overhead computation new key user depends schemes single revocation 
schemes information theoretic secure revocation users 
schemes revocations 
schemes perform revocations users revocation 
number theoretic assumption decisional die hellman assumption 
schemes important keys changed periodically 
schemes tracing self enforcement 
schemes scheme revocations key changes relies decisional die hellman assumption scheme single revocation uses pseudo random functions 
addition preferred modes operation usage mode single revocation schemes enables better eciency common operation revocation single users 
self enforcement scheme periodic key refreshment group key changed period time self enforcement scheme 
ensures user capable decrypting content personal key contains sensitive information 
combining revocation combinatorial tracing schemes 
interesting aspect schemes combination features revocation traitor tracing self enforcement 
related revocation broadcast encryption schemes fiat naor enable gc encrypt messages arbitrary dynamically changing subset users :10.1.1.26.5965
address general problem revocation schemes di erent parameterization allows removal arbitrary number users group 
applied removal scenario broadcast encryption schemes remove number users assumption collude 
broadcast encryption schemes asymptotically ecient revocation schemes number users leave group large 
particular size personal key ecient broadcast scheme logarithmic communication overhead proportional log independent number removed elements users need know identity revoked users independent revocation message 
goals kumar similar basic revocation scheme section 
method enables time revocation users secure coalition revoked users 
constructions cover free sets revocation messages length log 
tree revocation scheme uses basic procedure revokes key single user updates keys users group 
procedure repeatedly remove number users group secure coalition corrupt users 
user store log keys revocation user requires broadcast message length log length message reduced log 
lower bound demonstrates schemes optimal sense 
major problem revocation schemes type require users receive process previous revocation messages order able update group key 
particular user rejoins group ine process revocation messages sent absence 
schemes adapted scenario considered get performance revocation users implies sending message log keys similar computational overhead 
key size users log encryption keys 
tracing self enforcement goal traitor tracing trace source keys illegal decryption devices 
traitor tracing schemes distribute decryption keys users way guarantees pirate decryption device constructed keys users traitors reveals identity 
schemes combinatorial probabilistic constructions ensure tracing high probability :10.1.1.22.8278:10.1.1.22.8278
enable black box tracing tracing way examine inner contents pirate decryption device possible examine reply device di erent ciphertexts 
public key tracing scheme boneh franklin number theoretic assumption decisional die hellman deterministic tracing guarantee extracted keys canonical form 
black box con rmation test see discussion section 
addition supports public key encryption sense party encrypt messages group 
ideas multi revocation tracing traitors scheme 
time multi time tracing schemes polynomials described 
multi time tracing scheme shown insecure 
aw design scheme enables trace source single key prevent traitors generating untraceable combination keys serve decryption key 
yung examined conditions enable tracing scheme support black box tracing tracing identities corrupt users treating pirate decoding device black box need opened compared tracing algorithm requires reverse engineer pirate decoder reveal keys uses 
results shows public key tracing schemes support black box tracing number traitors log schemes support black box tracing situations :10.1.1.22.8278
tracing schemes suggest fall category support black box tracing number traitors log 
notion self enforcement suggested dwork naor proposed scheme property 
scheme ecient computational overhead users changing group key involves constant number modular exponentiations depend group size size coalitions system secure 
schemes develop seen combination scheme public key tracing 
combinatorial tracing constructions discussed basic set independent keys assign user personal key subset set keys 
particular discusses combination scheme revocation schemes describes methods integrating tracing revocation schemes adding revocation capabilities tracing scheme cost implementing revocation protocol communication overhead high adding tracing capabilities revocation scheme cost increasing number keys factor 
revocation schemes secret sharing base threshold secret sharing 
threshold secret sharing scheme divides secret shares disclose information secret shares suce recover 
principal apply secret sharing scheme maintains sharp threshold choose shamir polynomial secret sharing scheme operates way 
eld secret shared 
order share secret random polynomial degree generated subject constraint ith share de ned 
shares easy interpolate polynomial reveal requires log multiplications fft multiplications lagrange interpolation formula 
straightforward verify shares disclose information secret 
scheme single revocation scheme single revocation users communication overhead security coalition revoked users 
terminology broadcast encryption refers schemes denoted revocation schemes 
describe section usage mode group controller sequence schemes remove number users successive revocations happen line communication overhead revocation computation overhead 
basic scheme scheme operates eld random element encryption key symmetric conventional scheme jf 
required key group key revocation 
user receives identi er initialization gc generates random polynomial degree polynomial secret sharing 
sets secret key revocation 
gc provides user private channel personal key hi revocation group controller learns identities users keys revoked 
gc broadcasts identities personal keys users hi hi user combine personal key keys shares interpolate compute key 
gc uses new group key encrypts messages non revoked users 
gc prepares scheme revoke users users removed perform revocation sending shares users additional values locations di erent identity user 
theorem scheme coalition revoked users information new key 
proof property follows immediately security shamir secret sharing scheme coalition shares 
note gc add new users group join group initialization stage 
simply assigns identity sends corresponding value storage communication overhead secret key user keep single element length keys encrypt communication identity need secret 
revocation message length reduce communication overhead identities users de ned small subset resulting revocation message length jf log 
reducing computation overhead computation new group key user involves interpolation free coecient requires log multiplications fft multiplications lagrange interpolation 
computation overhead reduced ways lagrange interpolation formula gc knows identities revoked users precompute broadcast lagrange coecients corresponding multiplications values 
reduces computation user perform order compute multiplications cost increasing communication overhead factor 
single polynomial say eld bits scheme independent polynomials eld size bits concatenation values new group key 
computation new group key involves multiplications smaller elds ecient 
preferred usage mode typical scenario gc ready simultaneously revoke users worst case times required revoke single user users 
cases copies basic revocation scheme enable revocation users worst case enables ecient revocation fewer users 
particular single user revoked communication computation time need revocation user arises actual revocation 
revocation gc sends short maintenance messages users return scheme original state capable removing users worst case 
initialization initialization phase gc prepares advance revocation schemes rs rs scheme rs remove users 
scheme rs uses polynomial degree user share schemes key length consisting hi schemes 
scheme rs remove user revoked prevent previous revoked users learning new key 
revocation suppose rst user revoked gc broadcasts hi users scheme rs compute new group key 
overhead revocation just communication computation 
maintenance removing user gc restore system original state ready revocation users 
broadcasts shares polynomials known 
broadcast urgent revoked done network idle bandwidth 
broadcast polynomial missing shares 
purpose secret sharing reduces degree polynomial denote polynomials degrees respectively 
time gc revoke additional users 
able revoke users prepares new polynomial degree new key users removed 
gc uses private channels users send shares users currently active non revoked 
note additional revocations performed maintenance phase shares sent long additional users removed 
maintenance phase system returns state rst revocation revoke users 
combination instant revocation system maintenance peak usage optimal systems need prepare worst case expect revocations normal operation 
additional revocations rst revocation uses linear polynomial computed constant time 
revocations single users employ polynomials higher degrees degree case revocations polynomial degree shares broadcast maintenance phases 
denote polynomial revocation users compute 
user obtained shares advance share plus broadcast 
user start computation share broadcast revocation online overhead computing lagrange interpolation communication overhead 
security easy verify scheme revoke keys unlimited number users long collude revocation 
overhead user keeps secret key length contains shares polynomials 
addition keep shares broadcast maintenance phases 
center keeps secret key length coecients secret polynomials degree 
online communication overhead revocation single share 
computation overhead revocation single user computation overhead revocation users tt 
maintenance stage involves gc sending single share users group 
overhead important messages sent network idle 
scheme revocations basic polynomial scheme single revocation requires group controller distribute additional keys shares support revocations 
fol lowing scheme user single key virtually unlimited number revocations long revoked users collude compute keys receive 
scheme decisional die hellman assumption 
decisional die hellman assumption decisional die hellman assumption ddh useful constructing ecient cryptographic primitives strong security guarantees 
include die hellman key agreement protocol el gamal encryption scheme pseudo random functions construction cryptosystem secure chosen ciphertext attacks 
ddh assumption involves cyclic group generator loosely speaking states ecient algorithm distinguish distributions hg ab hg randomly chosen jgj 
refer reader discussions assumption 
revocation scheme scheme operates group prime order 
speci cally subgroup order prime qjp 
generator decisional die hellman assumption holds scheme applies idea rst suggested feldman performing shamir secret sharing exponents 
initialization process performed revocations 
gc generates random polynomial degree publishes sends user private channel personal key hi non secret identi er associated 
revocation gc learns identities users revoked 
chooses random sets rp new key unknown removed users 
gc broadcasts message hi rp iu hi rp iu non revoked user compute iu combine broadcasted values interpolate key rp done follows recall lagrange interpolation formula polynomial degree values points lagrange coecients depend rp pairs hi rp iu formula shows compute rp theorem scheme repeated revocations users revocation secure coalitions revoked users 
proof proof decisional die hellman assumption 
sake clarity rst details case 
assume scheme parameter insecure broken user user runs algorithm receives inputs value linear polynomial polynomially tuples hg iv generated randomly chosen pair rp iv 
values known user revocation operations users revoked 
scheme insecure distinguish rp random value 
construct algorithm uses break ddh assumption 
input value ab random 
generates inputs planning set 
generates random key hi gives generates random gives tuples hg iv gives values ap iv outputs answer outputs decision equal ab 
success probability breaking ddh assumption probability breaking revocation scheme 
consider coalition corrupt users say users users run algorithm receives inputs values linear polynomial locations polynomially tuples hg generated randomly chosen tuple rp rp scheme insecure information distinguish rp random value 
construct algorithm breaks ddh assumption 
input value ab random 
generates inputs planning set 
generates random keys fhi ig gives generates random gives tuples hg gives values ap ap outputs answer outputs regarding equal ab 
success probability breaking ddh assumption probability breaking revocation scheme 
scheme enables gc remove users add users group identities known initialization stage 
overhead secret key user keeps just single element order compute new key user perform exponentiations note overhead considerably reduced simultaneous multiple exponentiations see chapter 
revocation message length 
speci cally contains elements elements 
jz considerably shorter jz example common set jz jz 
usage scheme virtually unlimited number revocations users revocation long revoked users combine keys order learn key know 
note revoking certain user gc decide restore access permissions user 
require gc give new key user importantly require sending new keys user 
users old keys processing revocation messages gc sends 
scheme appropriate scenarios fast revocation required possible easily retrieve capabilities users keys mistakenly revoked 
consider example gc learns certain group users leaked keys pirates 
gc quickly revoke permissions users group prevent leakage encrypted content 
possible verify users helping pirates restore permissions users group 
process require changing revocation keys users users revoked fact remain oblivious fact revoked users group 
case properties scheme useful group controller wishes degrade quality keys users say keys users late payments 
done revoking temporarily content censored information chosen random 
detail assume list users late payments 
encourage users pay debts group controller chooses short period time random subset users uses scheme distribute group key users decrypt 
key encrypt content time period 
time period users able decrypt correctly additional communication gc 
schemes combine revocation self enforcement tracing user revocation constructions self enforcement tracing capabilities 
rst construction revocations builds construction public key tracing construction 
second construction single revocation uses general pseudo random functions 
delicate issue self enforcement schemes preserve privacy revoked users 
revocation message reveal sensitive information users 
words users give keys pirates reveal sensitive information pirates want revocation mechanism reveal information users 
order obtain self enforcement property gc incorporate user personal key private information example user credit card number social security number case clear center allowed publicly reveal private information user abused system 
users willing hand information particular pirates doing illegal activities 
tracing property enables identify illegal decryption device users keys constructing device 
combination properties provides powerful tool piracy 
course trivial method incorporating user sensitive information personal key personal key simply sensitive information con random data keys di erent users essentially independent 
approach requires gc encrypt messages independently user results communication overhead key change group parties 
schemes describe perform better particular communication overhead key change depend number users group 
scenario user registers gc provides private information example credit card number known gc part payment process content purchasing 
gc gives personal key operates conjunction loosely speaking system designed secure coalitions users sense personal keys coalition members impossible construct key disclose identity functionality personal keys 
di erent kinds tracing properties supported scheme black box con rmation pirate box suspected subset users ective method testing box constructed help suspected users long keys corrupt users generate pirate decoding box 
called black box con rmation need open box nd explicit key uses 
sucient treat decoder black box examine reacts di erent messages receives 
tracing better tracing achieved tracing process manages examine contents decoding device extract keys uses 
case keys canonical form de ned users contributed keys pirate tracing algorithm nd contributors key 
note black box tracing black box tracing course preferable tracing algorithm requires open pirate decoding device identify key uses 
able design black box tracing algorithm algorithm uses black box con rmation starting group suspects contains set traitors narrowing traitor identi ed 
inability support black box tracing surprising result yung showed black box tracing impossible system number traitors log 
scheme revocations natural approach embedding user sensitive information scheme section user identity equal sensitive information 
problem revocation message includes clear revealing sensitive information revoked user 
de ne key user pair hx enables extraction sensitive information user 
allows sending revocation messages contain coordinate user share de ned disclose sensitive information revoked users 
describe scheme rst simpli cation key assignment 
simpli ed scheme simpli ed scheme operates group prime order example subgroup order prime qjp 
generator decisional die hellman assumption holds scheme operates follows secret key group controller polynomial key user user sensitive information receives key pair 
warning step re ned 
replacing group key gc wishes replace key user revocation chooses random value sets new key rp gc broadcasts key change message contains pairs rp values arbitrary long equal user 
user computes xu interpolates rp values rp 
knows 
revocation possible revoke users gc replaces group key broadcasting pairs rp broadcasts pairs rp xv generated personal keys revoked users 
generating users keys order generate personal key user gc solve equation done eciently algorithm berlekamp factoring polynomials nite elds 
problems approach require re ning chance equation solution 
happens probability random polynomial degree irreducible roughly random polynomials degree wise independent know show independence preserved query reverse result polynomial point computed case scheme 
broadcasting sensitive information allow information retrieve allow veri cation revocation user revoked 
possible remedy problems polynomials user keys su new group key rp rp solution provide tracing self enforcing user sell half key xu 
revised scheme order avoid problems listed scheme set personal keys users values randomly chosen locations 
words scheme identical description section exception user provided random 
addition public le published encrypted natural way doing encryption information public le gc chooses random publishes le user encrypts information key 
encryption method recommended security ddh assumption security revocation scheme 
naive solution uses key symmetric encryption scheme secure requires secret key di erent encryption schemes revocation scheme symmetric scheme 
securely key cryptosystem clear combined cryptosystems ects security 
public le include information allows searching value key pre string index 
user leaks immediately supplying pirate way obtain note privacy coalition obtains secret keys users compute value sp xu value coalition learn sensitive information revoked users values published revocation message personal information available encrypted public le 
analysis overhead revocation overhead revocation scheme section revocation properties essentially 
detail secret key user keeps single element user perform exponentiations order compute new key overhead reduced simultaneous multiple exponentiations chapter 
revocation message length containing elements elements properties scheme properties revocation possible revoke users revocation secure coalition revoked users 
property follows theorem 
self enforcement disclosing personal key user discloses sensitive information follows discussion 
tracing gc obtains illegal decryption device trace users keys construct device 
tracing properties methods method similar suggested 
show 
scheme black box con rmation test pirate decryption device suspected subset users test members subset keys generate device 

key pirate device canonical form constructed keys users possible extract subset users supplied values generate key 
black box con rmation consider scenario tracing system subset users suspected providers keys pirate device 
black box con rmation test pirate decryption device subset candidate ab users output suppose box really constructed pirate group traitors 
output test obey real group traitors contained subset suspects algorithm output high probability 
subset suspects contained real group traitors algorithm output high probability 
note group suspects contained set traitors test guarantee result 
claim black box con rmation black box access pirate decryption device generated keys users subset users possible perform black box con rmation test proof con rmation algorithm generates random polynomial degree subject constraint agrees keys holds user independent 
con rmation algorithm sends revocation message sets group key examines pirate device able decrypt 
pirate device distinguish case revocation message generated decrypts correctly probability normal operation 
observation tracing algorithm compare probabilities negligible di erence answer 
di erent larger di erence answer 
consider case jt new key independent keys pirate device generated 
high probability outputs output di erent output receives normal revocation message 
con rmation tracing con rmation algorithm trace identities speci traitors 
done tracing algorithm 
find group con rmation algorithm answers 

remove arbitrary member obtaining 
fug 

run con rmation algorithm subset suspects 
algorithm answers set goto step 
algorithm answers declare traitor 
lemma fug con rmation algorithm answers high probability traitor 
proof con rmation algorithm outputs hold done 
done 
remaining case case impossible means con rmation algorithm answer theorem group suspects con rmation algorithm answers tracing algorithm trace identity speci traitor 
proof theorem follows lemma fact empty set con rmation algorithm answers 
corollary black box tracing algorithm running time trace traitors priori information identities 
proof algorithm simply tests subset users black box con rmation algorithm algorithm answers runs tracing algorithm described order identify identities individual traitors 
tracing key suppose gc able open pirate device reveal key device contains 
show case device key canonical form de ned generated keys users possible identify users 
canonical form keys key user receives de ned vector value inner product coecients polynomial key allows reconstruction new group keys sent scheme 
keys exact type useful keys small coalition corrupt users generate 
consider coalition users fu um linear combination vectors possible coalition compute inner product vector allows reconstructing new key revocation message assuming coalition members revoked 
coalition generate vector linear combination vectors inner product result inner product equiprobable information known coalition 
proof keys form described viable option pirates take want generate keys allowing reconstruction 
call vector inner product key canonical form 
claim tracing access key pirate device linear combination keys possible identify keys non zero coecient combination 
proof tracing problem essentially vector linear combination vectors set vectors users nd linear combination 
precise assume users named consider matrix rows columns 
de ne parity check matrix linear code matrix size corresponding generating matrix code 

code dual generalized reed solomon code generalized code see chapter 
decoded polynomial time decoding algorithm welch berlekamp 
consider pirate decoding device contains key canonical form generated keys users 
key vector linear combination rows matrix vector length entries di erent wb tracing algorithm vector rst step nd arbitrary vector length vb holds span rows matrix means codeword code generated matrix di erent codeword locations 
tracing algorithm feeds decoding algorithm algorithm nds locations di erent codeword error locations 
locations correspond non zero entries vector identities traitors 
know get full strength black box tracing :10.1.1.22.8278
tracing algorithm gets examine input output behavior pirate box time smaller scheme periodic group key refresh appealing mode operation self enforcement revocation scheme group controller uses change group key short period time say hour 
period gc chooses random value sets group key rp uses scheme users learn new key necessary revoke corrupt users 
usage mode ensures party receives group key group members decrypt content group key update 
know personal key order compute new group key decrypt content broadcast 
legitimate user wants enable illegitimate parties receive content constantly send updated values group key send personal key contains sensitive information 
public key encryption variant scheme enable party encrypt messages group party group member preserving revocation self enforcement tracing properties 
similar idea public key tracing scheme 
enable public key encryption gc generates keys section 
publishes public key fg assuming range 
party encrypt message choosing random sending encryption hg rp 
rp rp decrypt user computes xu uses interpolate rp security encryption ddh assumption scheme 
see consider value rp key encrypts message adversary know value polynomial distinguish key random rp rp polynomially tuples fg revoke keys users gc chooses random publishes new public key fg xu xu proof security exactly proof scheme 
self enforcement scheme single revocation di erent trace revoke scheme single revocation 
advantage computational eciency number theoretic assumptions keys de ned relatively small eld say bits long 
uses pseudo random function order hide users personal information prevent users computing pseudo key contain sensitive information 
idea basic scheme section ectively release users shares revocation 
initialization initialization process composed steps gc generates random polynomial degree eld sets key revocation 
gc chooses random key de nes function pseudo random function keyed range generating personal keys user wants system provides gc sensitive information gc chooses random strings computes identity 
encryption 
gc sends values hr user note include 
values personal key 
revocation remove users gc broadcasts message receiving message user rst uses key compute decrypt compute 
user knows values locations interpolate 
claim revocation coalition revoked users information new key 
proof consider coalition revoked users keys hold 
keys depend values polynomial independent value 
revocation message function keys independent value new key 
claim privacy information revealed personal information revoked users 
proof personal information user encrypted di erent random key value revealed revocation message revokes key 
party learns information receives 
particular guess private information veri ed 
self enforcement method computing new key revocation message sent computing pair appear revocation message interpolate 
proof way compute storing computing sent user wants enable users pseudo random function distinguished truly random polynomialtime observer access permutation black box manner 
see precise de nition various constructions 
model block cipher message authentication code mac pseudo random permutation 
compute new key revocation message reveal 
tracing system enables black box con rmation technique section choosing polynomial agreeing don know pure black box tracing possible 
combining revocation combinatorial tracing schemes tracing schemes combinatorial constructions computational number theoretic assumptions current :10.1.1.22.8278
constructions large set independently chosen basic keys 
user personal key subset basic keys 
schemes encrypt messages way ensures personal key enables decryption 
hand union personal keys subsets basic keys coalition corrupt users traitors way pirate box reveal users coalition 
revocation schemes combined tracing schemes multiplicative way revocation scheme constructed basic key basic key corresponds group key revocation scheme group members users personal keys include basic key 
tracing done underlying combinatorial method 
user traced traitor basic keys included personal key replaced corresponding revocation schemes 
render pirate decryption device useless possible trace traitor contributed keys device revoke keys 
overhead bandwidth loss tracing method 
storage overhead combined scheme multiplication storage overhead tracing scheme storage overhead revocation scheme 
overhead removing traitor overhead revocation revocation scheme multiplied number basic keys personal key tracing method 
appealing revocation schemes scenario storage communication computation overheads low 
acknowledgments russell impagliazzo insisting maintaining privacy important ronny roth dan boneh helpful advice 
anzai matsumoto quick group key distribution scheme entity revocation 
adv 
cryptology asiacrypt lncs springer pp 

blakley safeguarding cryptographic keys afips conference proceedings 
boneh decision die hellman problem proceedings third algorithmic number theory symposium lncs vol 
springer pp 

boneh franklin ecient public key traitor tracing scheme adv 
cryptology crypto lncs full version available crypto stanford edu pubs html 
boneh shaw collusion secure fingerprinting digital date proc 
advances cryptology crypto 
canetti garay micciancio naor pinkas multicast security taxonomy ecient constructions proc 
infocom vol 
pp 
new york ny march 
canetti 
malkin nissim ecient communication storage tradeo multicast encryption proc 
advances cryptology eurocrypt verlag lncs 
chor fiat naor tracing traitors proc 
advances cryptology crypto verlag lncs 
chor fiat naor pinkas tracing traitors ieee transactions information theory vol 
pp 
may 
cramer shoup practical public key cryptosystem provably secure chosen ciphertext attacks proc 
advances cryptology crypto verlag lncs 
cohen course computational algebraic number theory springer verlag 
cox kilian leighton secure robust watermark multimedia information hiding workshop cambridge uk springer verlag lncs 
die hellman new directions cryptography ieee trans 
information theory nov 
dwork naor digital self enforcing protection digital information th symposium theory computation 
elgamal public key cryptosystem signature scheme discrete logarithms proc 
advances cryptology crypto verlag lncs 
feldman practical scheme non interactive veri able secret sharing proc 
th ieee symp 
foundations computer science pp 

fiat naor broadcast encryption advances cryptology crypto springer verlag lncs vol :10.1.1.26.5965
pp 

gafni staddon yin ecient methods integrating traceability broadcast encryption proc 
advances cryptology crypto lncs springer 
goldreich goldwasser micali construct random functions acm vol 
pp 

yung self protecting pirates black box traitor tracing crypto 
kumar rajagopalan sahai coding constructions blacklisting problems computational assumptions adv 
cryptology crypto verlag lncs pp 

desmedt optimum traitor tracing asymmetric schemes advances cryptology eurocrypt lncs springer 
luby pseudo randomness applications princeton university press 
sloane theory error codes north holland amsterdam 
alfred menezes paul van oorschot scott vanstone handbook applied cryptography crc press 
naor pinkas threshold traitor tracing proc 
advances cryptology crypto lncs springer 
naor reingold number theoretic constructions ecient pseudo random functions proc 
th ieee symp 
foundations computer science pp 

shamir share secret comm 
acm vol 

stinson wei combinatorial properties constructions traceability schemes codes siam discrete math vol 

wallner harder key management multicast issues architectures internet request comments june 
available ftp ietf org rfc rfc txt welch berlekamp error correction algebraic patent issued dec 
wong gouda lam secure group communications key graphs proc 
acm sigcomm sept vancouver canada pp 


