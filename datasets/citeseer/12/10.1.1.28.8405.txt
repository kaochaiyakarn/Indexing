efficient domain independent algorithm detecting approximately duplicate database records alvaro monge charles elkan department computer science engineering university california san diego la jolla california cs ucsd edu detecting database records approximate duplicates exact duplicates important task 
databases may contain duplicate records concerning realworld entity data entry errors abbreviations differences detailed schemas records multiple databases reasons 
efficient algorithm recognizing clusters approximately duplicate records 
key ideas distinguish algorithm 
version smith waterman algorithm computing minimum edit distance domainindependent method recognize pairs approximately duplicate records 
second union find algorithm keep track clusters duplicate records incrementally pairwise duplicate relationships discovered 
third algorithm uses priority queue cluster subsets respond adaptively size homogeneity clusters discovered database scanned 
typically reduces number times expensive pairwise record matching smith waterman applied impairing accuracy 
comprehensive experiments synthetic databases real database bibliographic records confirm effectiveness new algorithm 
study problem detecting records database duplicates necessarily textually identical 
common problem environments multiple databases combined records contain erroneous missing information 
general interested situations records may refer real world entity syntactically equivalent 
set records refer entity interpreted ways 
way view records correct records duplicates containing erroneous information 
task research supported doctoral fellowship laboratories 
research supported hellman faculty fellowship ucsd 
database duplicate records ssu hs 
interpretation consider matching record partial source information 
aim merge duplicate records yielding record complete information hyl 
previous duplicate detection algorithms standard method detecting exact duplicates table sort table check neighboring tuples identical bd 
approach extended detect approximate duplicates 
idea sorting achieve preliminary clustering pairwise comparisons nearby records 
sorting typically application specific key chosen duplicate records appear near 
hs compare nearby records sliding window fixed size sorted database 
window size record compared records gamma gamma records gamma 
number comparisons performed tw total number records database 
order improve accuracy results passes duplicate detection combined ka 
typically combining results passes database small window sizes yields better accuracy cost pass database large window size 
hs combine results multiple passes explicitly computing transitive closure discovered pairwise duplicate relationships 
record duplicate record record duplicate record transitivity duplicate record hyl uses different expensive method preliminary grouping records 
record considered separately source record query remaining records order create group potentially matching records 
record group compared source record pairwise matching procedure 
pairwise record matching algorithms duplicate detection method proposed date including requires algorithm detecting duplicate relationships pairs records 
typically algorithm relatively expensive computationally grouping methods described previous section reduce number times applied 
pairwise record matching algorithms previous application specific 
example hs production rules domainspecific knowledge written ops translated hand studied record matching algorithms evaluated performance real world datasets 
algorithms proposed edit distance algorithm variant known smith waterman algorithm originally developed finding evolutionary relationships biological protein dna sequences 
domainindependent algorithm detect duplicate records 
call record matching algorithm domain independent modifications range applications 
definition smith waterman algorithm domain independent certain assumptions records high level schema alphanumeric characters 
second assumption needed edit distance algorithm assumes records strings fixed alphabet symbols 
naturally assumption true wide range databases including numerical fields social security numbers represented decimal notation 
assumption needed smith waterman algorithm address problem duplicate records containing fields transposed 
illustrate domain independence smith waterman algorithm different applications 
application detect duplicate records randomly created mailing lists 
cluster database bibliographic records groups records refer publication 
briefly sequences algorithm sw uses dynamic programming find lowest cost series changes converts sequence 
costs individual changes mutations insertion deletions parameters algorithm 
intuitively algorithm allows gaps unmatched characters perform abbreviations records missing information minor syntactical differences including typographical mistakes 
computing transitive closure duplicate relationships assumption transitivity problem detecting duplicates database described terms determining connected components undirected graph 
vertices graph represent records database size initially contain unconnected vertices record database 
undirected edge vertices records corresponding pair vertices match 
considering apply expensive pairwise record matching algorithm records query graph records connected component determined previously approximate duplicates comparison needed 
belong different components known match 
comparing records results match respective components combined create single new component 
done inserting edge vertices correspond records compared 
time connected components graph correspond transitive closure duplicate relationships discovered far 
consider records rw corresponding nodes fact duplicate record detected edge inserted nodes putting nodes connected component 
similarly fact duplicate rw detected 
transitivity duplicate relation equivalent reachability graph 
reachable vice versa corresponding records ru rw duplicates 
known data structure efficiently solves problem determining maintaining connected components undirected graph called union find data structure tar clr 
data structure keeps collection disjoint updatable sets set identified representative member set 
data structure operations union combines sets contain node node say new set union representative union chosen new set replaces collection disjoint sets 
find returns representative unique set containing find invoked twice modifying set requests answer 
find connected components graph create jgj singleton sets containing single node edge find find perform union 
time nodes connected component sets representative find find 
priority queue algorithm section describes high level strategy algorithm 
done algorithms multiple passes sorting scanning 
previous algorithms propose sort records pass domain independent sorting criteria 
algorithm uses passes pass treats record long string sorts lexicographically reading left right 
second pass reading right left 
algorithm uses priority queue sets records belonging clusters detected 
algorithm scans database sequentially determines record scanned member cluster represented priority queue 
determine cluster membership algorithm uses find operation previous section 
record member cluster priority queue record scanned 
record member cluster kept priority queue record compared representative records priority queue smith waterman algorithm 
comparisons succeeds record belongs cluster union operation performed sets 
hand comparisons fail record member new cluster currently represented priority queue 
record saved priority queue singleton set 
algorithm explained detail remainder section 
priority queue contains fixed number sets records 
experiments number 
set contains records detected cluster 
practical reasons entire clusters saved may contain records 
hand single record may insufficient represent variability cluster 
set representing cluster detected cluster member highest priority queue 
intuitively sets priority queue represent clusters detected 
experiments algorithm keeps clusters detected translates individual records due couple reasons 
sorting pass brings similar records close members cluster sequentially database 
second reason fraction records kept set priority queue 
fraction kept representation cluster records belong 
algorithm scans database sequentially 
suppose record record currently considered 
algorithm tests known member clusters represented priority queue 
test done comparing cluster representative cluster representative set priority queue 
comparisons successful known member cluster represented set priority queue 
set highest priority continue record 
result comparisons computationally inexpensive done just find operations 
pass find comparisons guaranteed fail avoided scan records database sequentially time record encountered 
second case known member existing priority queue cluster algorithm compare records priority queue 
set priority queue algorithm scans records set 
compared algorithm 
operation detects match cluster combined cluster union operation 
union operation modifies union find data structure keeping track detected clusters change priority queue 
addition may included priority queue set represents cluster 
specifically included matching score certain threshold 
inclusion threshold higher threshold declaring match lower 
intuitively similar necessary include subset representing cluster somewhat similar degree match inclusion threshold including subset help detecting members cluster 
hand smith waterman comparison yields low score certain bad threshold algorithm continues directly highest priority set queue 
intuition similarity comparisons members cluster containing fail 
compared members set priority queue detecting duplicate member cluster currently represented priority queue 
saved singleton set priority queue highest priority 
action causes size priority queue exceed limit lowest priority set removed 
note clusters maintained memory record identifiers actual record 
union find data structure previous section manage clusters detected algorithm executes 
refer records priority queue full record stored addition record identifier 
small portion total number records database kept priority queue 
experimental results experiments reported databases mailing lists generated randomly software designed implemented 
record mailing list contains fields social security number name middle initial name address apartment city state zip code 
field values chosen randomly independently 
personal names chosen list real names 
address fields chosen lists state abbreviations city names zip codes 
database generator creates random record creates random number duplicate records fixed probability distribution 
creates duplicate record generator introduces errors noise record 
possible errors range small typographical slips complete name address changes 
generator introduces typographical errors frequencies known previous research spelling correction algorithms kuk 
edit distance algorithms designed detect errors introduced algorithm developed knowledge particular error probabilities database generator 
pairwise record matching algorithm hs special rules transpositions entire words complete changes names zip codes social security number omissions smith waterman algorithm variant 
table contains example pairs records chosen especially instructive pairwise scores assigned smith waterman algorithm 
pair correctly detected duplicates rules hs 
smith waterman algorithm classifies duplicate threshold 
equational theory detect second pair duplicates 
smith waterman algorithm performs correctly pair duplicate detection threshold set lower 
equational theory falsely finds third fourth pairs duplicates 
smith waterman algorithm performs correctly pairs threshold higher 
examples suggest choose threshold 
threshold somewhat aggressive 
small experiments show conservative threshold detects real duplications keeping number false positives negligible 
measure accuracy number clusters detected pure 
cluster pure contains records belong true cluster duplicates 
cluster detected duplicate detection algorithm 
cluster equal true cluster 
cluster subset true cluster 
cluster contains true clusters 
definition pure cluster falls cases 
case refer impure clusters 
detection algorithm detected clusters pure impure 
sections follow provide results experiments performed study 
figures show number pure impure clusters detected algorithm 
show number true clusters database number clusters detected method hs 
unfortunately merge purge engine software distinguish pure impure clusters results reported slightly accuracy 
varying number duplicates record duplicate detection algorithm unaffected changes number duplicates record 
study effect increasing number varied number duplicates record zipf distribution 
zipf distributions give high probability small numbers duplicates give non trivial probability large numbers duplicates 
zipf distribution parameters probability duplicates ci gamma normalization constant gamma having maximum number duplicates necessary gamma diverges 
databases created different value parameter set 
maximum number duplicates original record kept constant 
noise level maintained constant 
sizes databases ranged total records 
experiments merge purge engine run fixed window size experiments performed hs 
duplicate detection algorithm priority queue containing sets records 
number chosen accuracy equational smith waterman soc 
sec 
name address city state theory score number zip code true missing th st apt 
missing positive missing john th st ap 
missing false jubin toledo oh negative st toledo oh po box false po box walton positive brought corson ave blanco nm corson road raton nm table example pairs records status matching algorithms 
true clusters merge purge pqs pure clusters pqs impure clusters theta value accuracy results varying number duplicates original record zipf distribution 
algorithms approximately 
course easy run algorithm larger priority queue order obtain greater accuracy 
shows algorithm performs slightly better merge purge engine 
number pure clusters detected algorithms increases slowly value theta increased 
increase constitutes decrease accuracy want get close number true clusters possible 
desired number impure clusters remains small 
fact nearly detected clusters pure suggests relax various parameters algorithm order combine clusters erroneously creating impure clusters 
varying size database study size database affects accuracy duplicate detection 
consider databases respectively original records 
case duplicates generated zipf distribution high noise level zipf parameter maximum duplicates original record 
largest database true clusters merge purge pqs pure clusters pqs impure clusters total number records database accuracy varying db sizes log log plot 
considered contains records total 
figures clearly display benefits algorithm 
shows number clusters detected strategies similar strategy having slightly better accuracy 
algorithms detecting nearly number clusters algorithm doing fewer pairwise record comparisons 
shown 
largest database tested strategy performed comparisons merge purge engine performed comparison times comparisons strategy 
savings number comparisons performed crucial dealing large databases 
algorithm responds adaptively size homogeneity clusters discovered database scanned 
results depend record matching algorithm 
savings due maintenance clusters union find data structure priority queue determine records compare 
addition benefits experiments show loss accuracy smith waterman algorithm uses domain specific knowledge 
merge purge engine priority queue strategy total number records database number comparisons log log plot 
cluster number number size clusters records records total hyl table results database bibliographic records experiments real database study effectiveness algorithm real database bibliographic records describing documents various fields computer science published sources 
database slightly larger version hyl 
task create clusters contain records entity 
entity context document called may exist versions 
may technical report appears form conference journal 
bibliographic records contain fields algorithm hyl considers author title document 
bibliographic records gathered major collections available internet 
primary source collection computer science bibliographies assembled alf christian ach 
secondary source collection computer science technical reports produced major universities cs tr project kah 
records come collections bibliographies database contains multiple bibtex records document 
addition due different sources records subject typographical errors errors accuracy information provide variation abbreviate author names 
total database contains records 
apply duplicate detection algorithm database created simple representative records complete bibtex records 
derived record contained author names document title bibtex record 
experiments algorithm passes database domain independent sorting criteria 
small experiments allowed determine best smith waterman algorithm threshold match database 
threshold higher database noise synthetic databases experiments 
results algorithm priority queue size table 
algorithm detected total clusters average records cluster 
know true number duplicate records database 
visual inspection great majority detected clusters pure 
addition results comparable results hyl database 
algorithms detected number clusters different size 
algorithm detect larger clusters 
reports detecting clusters size larger accounting records database 
algorithm detects clusters records accounting records 
manual inspection clusters shows impure 
beneficial rerun algorithm records higher smith waterman algorithm threshold larger priority queue size order subdivide impure clusters 
reports making comparisons determine clusters 
algorithm performed just comparisons 
savings comparable results synthetic databases 
duplicate detection methods described improved previous related ways 
contribution approximate record matching algorithm relatively domain independent 
second contribution show compute transitive closure duplicate relationships incrementally union find data structure 
third contribution heuristic method minimizing number expensive pairwise record comparisons performed comparing individual records potential duplicates 
important note second third contributions combined pairwise record matching algorithm 
acknowledgments wish sal stolfo mauricio hern andez highly useful discussions 
mauricio hern andez generously available mailing list database generator implemented parameter settings experiments 
provided merge purge engine standard comparison experiments 
larry carter kang su kindly provided implementation smith waterman algorithm adapted run linear time 
ach alf christian achilles 
collection computer science bibliographies 
url 
ira uka de bibliography index html 
bd bitton dewitt 
duplicate record elimination large data files 
acm transactions database systems 
clr thomas cormen charles leiserson roland rivest 
algorithms 
mit press 
giles brooks hummel 
experiment duplicate checking 
proceedings asis annual meeting page 
mauricio hern andez 
generalization band joins merge purge problem 
ph thesis columbia university 
hs hern andez stolfo 
merge purge problem large databases 
proceedings acm sigmod international conference management data pages may 
hyl jeremy 
identifying merging related bibliographic records 
thesis mit 
published mit laboratory computer science technical report 
ka beth wendy alvey editors 
record linkage techniques proceedings workshop exact matching methodologies arlington virginia 
internal revenue service statistics income division 
kah robert kahn 
cs tr project www document 
url december 
www cnri reston va home cstr html 
kuk kukich 
techniques automatically correcting words text 
acm computing surveys december 
alvaro monge charles elkan 
field matching problem algorithms applications 
proceedings second international conference knowledge discovery data mining pages 
aaai press august 
howard newcombe kennedy james 
automatic linkage vital records 
science october 
reprinted ka 
ssu silberschatz stonebraker ullman 
database research achievements opportunities st century 
report nsf workshop database research may 
sw smith waterman 
identification common molecular subsequences 
journal molecular biology 
tar robert tarjan 
efficiency linear set union algorithm 
journal acm 
yan garcia molina 
information finding digital library stanford perspective 
sigmod record september 

