role default logic knowledge representation james delgrande jim cs sfu ca simon fraser university torsten schaub torsten cs uni potsdam de universitat potsdam 
various researchers artificial intelligence advocated formal logic analytical tool formalism representation knowledge 
thesis commonsense reasoning frequently nonmonotonic aspect explicit implicit default logic dl provides appropriate elaboration classical logic modelling phenomena 
dl general flexible powerful approach nonmonotonic reasoning generality power suitable tool modelling wide variety applications 
propose general methodology default logic involving naming default rules special purpose predicates detecting conditions default rule applicability controlling rule application 
allows encoding specific strategies policies governing set default rules 
show dl formalise preferences properties inheritance default properties essentially dl axiomatise phenomena 

order logic fol long advocated appropriate tool formalising knowledge particular domains analysis various systems approaches 
role logic artificial intelligence ai knowledge representation discussed example moore hayes addition introductory ai texts assume promote centrality formal logic knowledge representation reasoning 
domains logic formalise knowledge liquids hayes time allen hayes actions planning mccarthy hayes levesque concepts modal notions concerning possible worlds knowledge belief 
mccarthy moore 
analyse instance relational database systems reiter truth maintenance systems reiter de kleer 
default diagnostic reasoners built specifying logic poole 
fl kluwer academic publishers 
printed netherlands 
tex thesis commonsense reasoning frequently nonmonotonic aspect default logic appropriate elaboration classical logic modelling phenomena 
discuss section default logic wide application ai obviously direct encoding default information areas ranging database theory natural language understanding 
extent theme default logic general knowledge representation formalism implicit quantity breadth approaches 
argue point suggesting methodology default logic default logic appears broadly applicable various diverse phenomena suspected 
general framework quite straightforward 
language expressing phenomenon interested notion inferences obtain language 
translation original theory mapped standard reiter default theory desired inferences provably obtain 
translation serves purposes 
provides semantics original theory demonstrates original theory expressible default logic 
second provides direction implementation modular translation default logic presumed default logic theorem prover straightforward implement desired inferences original theory 
example developed show preference ordering properties mapped standard reiter default theory determine highest ranked consistently properties 
provide specific encoding translation outline methodology means may carry encoding translation 
illustrate consider general default rule ff fi fl informal meaning ff true fi consistent set beliefs fl believed 
assume constant associated rule name object theory 
rule fi bl applied just original rule applied due justification consistent set beliefs 
bl newly introduced predicate concluding bl signals object theory original rule applied 
similarly replace rule ff fi fl ok ff fi fl ok delta newly introduced predicate application rule controlled object theory rule applied ok asserted 
notion adding tags detect control rule application yields surprisingly powerful results 
technique shown delgrande schaub ordered default theory consisting tex theory partial order default rules translated standard default theory rule ordering adhered 
things show explicit ordering set default rules adds expressibility default logic 
organized follows 
brief default logic discussion approaches employed summarise basic components approach 
illustrate applicability approach modelling exercises 
review earlier basic approach dealing preferences rules 
second show default logic implement mechanism default property inheritance 
theme default logic axiomatise various diverse phenomena 
suggest addition directly representing nonmonotonic theories default logic appropriate general ai formalism specific phenomena may encoded 
various examples show default logic employed provide semantics phenomena hand provide encoding reasoning phenomena 

default logic default logic reiter augments classical logic default rules form ff fi fi fl ff fi fi fl sentences order propositional logic 
deal singular defaults 
singular rule normal fi equivalent fl semi normal fi implies fl 
shows default rule transformed set semi normal defaults 
denote prerequisite ff default ffi prereq ffi justification fi justif ffi consequent fl conseq ffi 
accordingly prereq set prerequisites default rules justif conseq defined analogously 
empty components prerequisite justifications assumed tautological 
open defaults unbound variables taken stand corresponding instances 
set default rules set formulas form default theory may induce single multiple zero extensions way 
definition 
default theory set formulas 
define ff fi fi fl fi fi fi ff fi fi th ffi ffi tex extension iff extension represents possible set beliefs world hand 
procedure constructive appears specification define gd set generating defaults extension enumeration hffi default rules grounded set formulas conseq fffi ffi gamma prereq ffi 

applications default logic obvious direct default logic brute force encoding default information 
penguins normally fly may represented rule birds normally fly may represented interactions defaults directly handled encoding explicitly happens various cases reiter 
replace second default know bird penguin default applied 
etherington reiter inheritance networks translated default theories 
strict links mapped universally quantified material implications default links mapped open normal defaults 
exception links effect providing exceptions default link 
default link ff fi exception link fl link maps rule ff fi fl fi asserting fl blocks default inference ff fi 
consequently approach provides semantics inheritance networks 
doing enables development provably correct inference procedures proofs existence extensions certain cases 
default logic application wide range diverse fields 
applied natural language understanding speech act theory perrault deriving natural language presuppositions mercer database systems cadoli 
extend expressive power terminological logics handle default information baader hollunder baader hollunder :10.1.1.32.2302
turner approach similar high level language describing effects actions defined provably correct translation default logic provided 
gelfond lifschitz extended logic programs answer set semantics defined shown extended logic programs correspond fragment default logic justifications consequents default rules literals tex prerequisites conjunctions literals 
don discuss logic programming see lifschitz survey correspondence number important results purposes 
mapping logic program default logic theory essentially provides alternative semantics approach logic programming 
secondly regard results involving extended logic programs applying default logic 
wang presents compilation defeasible inheritance networks subset extended logic programs fragment default logic 
hand gelfond son define language strict defeasible rules things encode inheritance networks show language implemented extended logic programs 
lastly correspondence suggests stronger thesis extended logic programs corresponding fragment default logic provides appropriate language encoding commonsense notions 
return point concluding section 
noted comprehensive implementations default logic available 
nski full implementation default logic 
xray schaub nicolas provides implementation platform query answering semi monotonic default logics 
smodels niemela simons implements stable model semantics founded semantics dlv eiter able handle disjunctive logic programming answer set semantics 

methodology default logic section outline general approach 
methodology involves appropriate deconstruction default rules detect application default rules control application 
fundamentally show detect default rule applicable control invocation default rule order default theory 
accomplished associating unique name default rule referred theory 
second special purpose predicates introduced detecting conditions default rule controlling rule invocation 
turn allows fine grained control default rules applied cases 
means named rules specialpurpose predicates formalise various phenomena interest 
done follows 
theory expressed tex language 
examples regular default theory external order default rules 
example static order represents notion preference defaults second represents simplified version default property inheritance 
provides translation theory standard theory default logic 
assuming things set correctly show translated standard default theory provably captures phenomenon interest expressed 
approach extending original language set constants done brewka example bijective mapping constants default rules 
assume default theory default rule ff fi fl associated name written ff fi fl section describes naming detail 
consider augment original language predicate symbols ap delta bl delta bl delta 
default rule ff fi fl replaced rules ff fi fl ap ff bl fi bl call resulting default theory 
extension corresponding extension informally consists ground instances introduced predicates 
ap just default named generating defaults extension 
bl default named failed applied virtue prerequisite unproven bl default named failed applied virtue justification inconsistent go see section prove name ap iff bl bl 
relatively straightforward limited 
seen introduced predicates detect rule applied 
case open defaults associate names individual rule instances 
tex consider introduced predicate ok delta 
replace rule ff fi fl ff ok fi fl clearly transformed rule potentially applied ok asserted 
generally combine preceding mapping ok appear prerequisite rule 
similar translation section preferences default rules employ ok force order default rules 
ensure respect set generating defaults preferred rules flagged ok preferred 
similarly imagine replacing default ff fi fl ff fi ko fl transformed rule behaves exactly original knock rule asserting ko 
means blocking rule application course appeared earlier literature ko commonly called ab abnormal 
obviously possibilities don mean suggest constitutes complete survey 
delgrande schaub example map rule ff fi fl rules fi ap notably consequent original rule fl gone replaced ap recording just fact rule applicable 
delgrande schaub axiomatise preferences sets default rules idea apply rules en masse 
set rules applicable consequents asserted 
introduced predicates central approach provides means modelling broad class domains applications 
sections provide examples modelling exercises illustrate approach 
case fix meaning phenomena question providing appropriate translations compilations performed automatically appeal tagging technique 
formalise preference inheritance essentially providing axiomatisation standard reiter default logic 
formalisation default logic prove things expected example preference default rules works correctly rules applied specified order 
tex 
preference notion preference pervasive ai 
reasoning default properties wants apply defaults pertaining specific class 
decision making may various desiderata simultaneously satisfied situation preferences desiderata may allow come appropriate compromise solution 
legal reasoning laws may conflict 
conflicts may resolved principles ruling newer laws priority ones laws higher authority priority laws lower authority 
conflict principles may decide authority preference takes priority recency preference 
boutilier brewka baader hollunder consider adding preferences default logic mccarthy lifschitz grosof brewka zhang foo brewka eiter circumscription logic programming respectively :10.1.1.32.2302
delgrande schaub address preference context default logic 
adding preferences default rules default theory usually extended ordering set default rules 
analogy baader hollunder brewka ordered default theory :10.1.1.32.2302
finite set default rules finite set formulas strict partial order theta default rules 
binary irreflexive transitive relation simplicity development assume existence default ffi rule ffi ffi ffi ffi ffi 
gives trivial maximally preferred default applicable 
consider example north qu ebec language french english 
useful preference ordering follows 
english english que french french case obtain correct result north qu ebec obtain correct result non north qu ebec language french followed english rest canada language english 
second example prefer say car red green expressed green green red red sure naive encoding see brewka gordon realistic formalisation 
tex delgrande schaub show ordered default theory 
translated regular default theory methodology outlined section explicit preferences compiled subsection briefly review approach 

static preferences defaults ordered default theory 
relation ffi ffi informal interpretation ffi ffi ffi considered application ffi theory translated regular default theory explicit preferences compiled manner 
unique name associated default rule 
done extending original language set constants bijective mapping write ffi ffi abbreviate ffi ease notation 
default rule ffi name write ffi render naming explicit 
encode fact deal finite set distinct default rules adopt unique names assumption domain closure assumption respect name set fn nm add axioms name delta delta delta nm convenience write name oe 
ffi ffi want ensure ffi applied ffi applied inapplicable 
formally wish exclude case ffi ffi dm definition 
purpose need able detect rule applied rule blocked second control application rule antecedent conditions 
default rule ff fi fl cases applied may antecedent known true negation consistent may justification consistent negation known true 
detecting case introduce new special purpose predicate bl delta 
similarly introduce predicate ap delta detect rule applied 
control application rule introduce mccarthy effectively suggested naming defaults set aspect functions 
theorist poole uses atomic propositions name defaults 
tex predicate ok delta 
default rule ffi ff fi fl mapped ff ok ffi fi fl ap ffi ok ffi ff bl ffi fi ok ffi bl ffi rules abbreviated ffi ffi ffi respectively 
ffi image original rule ffi rules ffi ffi capture non applicability rule 
rules translation applied ok ffi true 
ok delta new predicate symbol expressly true order potentially enable application rules image translation 
ok ffi true rule translation may potentially applied 
rule applied indicated assertion ap ffi 
rules give conditions original rule inapplicable negation original antecedent ff consistent extension justification fi known false case bl ffi concluded 
assert default ff fi fl preferred ff fi fl object language introducing new predicate oe asserting oe translation far control order rule application 
ffi ffi control order rule application assert ffi applied ap true known inapplicable bl true ok apply ffi idea delay consideration preferred rules applicability question settled higher ranked rules 
obtain translation mapping ordered default theories language standard default theories language obtained extending new predicates symbols delta oe delta ok delta bl delta ap delta set associated default names definition 
delgrande schaub ordered default theory 
set default names fn ffi ffi dg define fi flap ok ff bl bl fi fi fi ff fi fl oe oe tex oe oe fn ffi oe ffi ffi ffi fok theta oe oe bl ap oe ok contains prior world knowledge assertions managing priority order defaults 
part oe specifies oe predicate positive instances mirror strict partial order 
ok asserts ok apply maximally preferred trivial default 
third formula oe controls application defaults derive ok oe ap bl true 
axiom allows derive ok indicating ffi may potentially applied ffi ffi ffi ffi applied applied 
formula oe properly complete information oe 
addressed default rule oe rule generate complement oe single open default explicit encoding larger size 
ffi oe 
oe rule ffi ffi definition ordered default theories 
strict partial order oe includes transitive closure oe oe note translation results manageable increase size default theory 
ordered theory translation constant factor larger 
assuming count default oe single default 
example consider defaults 
obtain ok ap ok bl ok bl analogously ffi 
ffi ffi ffi obtain oe oe oe oe 
part oe oe get oe remaining combinations instructive verify ok ap bl oe ok ap bl ap bl oe ok tex obtained iterations definition see get taken account followed theorem summarises major technical properties approach demonstrates rules applied desired order theorem 
delgrande schaub consistent extension ordered default theory 
ffi ffi 
ffi oe ffi iff ffi oe ffi 
ok ffi 
ap ffi iff bl ffi 
ok ffi prereq ffi justif ffi implies ap ffi max 
ok ffi prereq ffi implies bl ffi 
ok ffi justif ffi implies bl ffi 
ok ffi gamma ok ffi implies ap ffi bl ffi turns translation amounts selecting extensions original default theory accord provided ordering 
expressed way 
definition 
delgrande schaub default theory theta strict partial order 
extension preserving exists grounded enumeration hffi gd ffi gd 
ffi ffi 
ffi ffi prereq ffi conseq fffi ffi gamma justif ffi 
condition applied rules applied order specified 
second rule ffi applied highly ranked rule case prerequisite ffi derivable justification refuted rules 
case applicability issue settled higher ranked default rules lower ranked rules 
tex theorem 
delgrande schaub default theory theta strict partial order 
set formulas 
extension iff preserving extension 
consequently notion preservation seen providing informal semantics approach 
expect ordered default theories enjoy properties standard default logic 
case important exception instance approach described normal ordered default theories guarantee existence extensions 
example image ordered default theory translation gamma fn fffi ffi delta extension 
informally problem preference ffi ffi conflicts normal order rule application 
ffi applicable applied ffi applicable 
ordering implicit form defaults world knowledge implicit ordering contradicted assertion ffi ffi surprisingly extension 

extensions delgrande schaub show standard default theories language including predicate expressing preference named default rules similarly translated default theory mention preferences 
example bf name default asserting birds fly default bnf name default loc nz assert location new zealand 
believed birds normally fly new zealand birds don encode object theory loc nz bf loc nz bnf extension allows expression preference particular context preferences applying default preferences preferences legal reasoning example mentioned start section 
second show default theory attendant ordering sets defaults similarly translated standard default theory mention preferences 
case tex express buying car may rank price car model safety features power safety features power ranked price follows phi psi phi psi phi psi phi psi desiderata satisfied contains intuitively want apply defaults set phi psi conclude met 
hand know mutually exclusive contains intuitively want apply defaults sets phi psi phi psi conclude met 
show expressed standard default theory 

application model diagnosis reiter default logic provide account theory diagnosis principles 
roughly framework axiomatisation domain system description distinguished set components set constants comps may normal abnormal 
components assumed normal default expressed rule ab ab example circuit domain system description include description circuit set comps represent specific gates 
express gate abnormal output inputs andg ab value value oe value set observations obs example expressing inputs gate output 
diagnosis expressed extension resulting theory 
extension complete information concerning instances ab extension ab minimal 
approach incorporate assumptions theory diagnosis 
original approach appeals principle parsimony diagnosis conjecture minimal set components faulty 
strengthened preferring diagnosis fault diagnosis fault diagnosis suppose components normal behaviour modelled rule ab ab extension preference allows note haven addressed problem preferences open defaults 
difficulties assuming complete knowledge circuit domain 
tex preferences sets defaults model strengthened principle parsimony ab ab ab ab ab ab ab ab ab ab ab ab comps 
suppose system description entails ab ab ab 
standard default logic obtain extensions violates strengthened principle parsimony 
preferences obtain single fault extension containing ab ab ab 
second extension model preferences faults types components 
extension approach preferences expressed language express fact gate expected fail gate follows 
comps name rule ab ab predicate 
assert org andg oe oe clearly elaborations addressed framework 
example elementary extension allow different types faults assert say gate stuck expected gate negates correct output 

inheritance properties 
preference inheritance properties common problem knowledge representation inheritance default properties 
informally individuals may expected inherit properties virtue instances particular classes 
default sue assumed employed sue adult adults normally employed 
principle specificity says purposes properties inherited specific classes preference specific classes 
sue student know students normally employed conclude sue employment status 
adult students normally employed applied preference students employed default 
approach previous section implement inheritance properties approaches implement inheritance preference ordering 
example shows lead unfortunate results 
consider defaults concerning primary means locomotion animals normally walk birds tex normally fly penguins normally swim 
expressed ordered default theory follows animal alk alk bird ly ly penguin swim swim learn thing penguin bird animal want apply highest ranked default things equal conclude swims 
penguin question hydrophobic doesn swim preference tells try apply default things equal conclude flies 
situation different example instance gives undesirable 
characterise difference follows 

normal defaults normal ordered default theory 
preference described previous section want apply defaults constrained 
inheritance want apply maximum defaults prerequisite true possible 
maximum default inapplicable specific default considered 
section intuitions precise provide axiomatisation default logic 

expressing inheritance default property inheritance ordering defaults reflects relation specificity prerequisites 
example preceding class penguins strictly narrower class birds 
illustrate isn case preference 
informally conflicting defaults determines specific respect rule prerequisite defaults candidates application 
approaches pearl geffner pearl specificity determined implicitly emerging property underlying formal system 
reiter etherington reiter delgrande schaub addressed encoding specificity information default logic 
briefly provide account mechanism inheritance may encoded 
simplicity account incomplete 
particular ignore fact formulating ordered default theory specification take account relevant properties consequents default rules 
example defaults concerning flight rule birds normally wings viz 
bird ly ly bird ing ing penguin ly ly assert bird ly ly penguin ly ly tex obviously want assert bird wing wing penguin ly ly bird subsumes penguin 
say information concerning obtained 
assume inheritance information appropriately captured task provide semantic account property inheritance appropriate translation default logic 
section approach preference special purpose predicates detect rule applied blocked 
fine grained approach distinguish source blockage replacing ffi ffi ok ffi ff bl ffi fi ok ffi bl ffi replace bl new predicate symbols bl bl accordingly definition final formula oe theta oe oe bl bl ap oe ok interestingly generalisation axiom theta oe 
oe bl oe ok allows specify inheritance 
chain defaults ffi ffi delta delta delta ffi apply ffi possible ffi maximum default default ffi prerequisite ffi known true 
default chain applicable 
technically formula allows lower ranked default rules applied case higher ranked rules blocked prerequisite derivable 
propagation ok delta predicates interrupted defaults ffi considered 
definition 
ordered default theory 
set default names fn ffi ffi dg define fi fl ok ff bl fi fi fi ff fi fl oe oe oe oe fn ffi oe ffi ffi ffi fok theta oe 
oe bl oe ok issue dealt delgrande schaub 
tex consider ordered defaults theory 
oe bird bird oe obtain oe oe oe oe 
part oe oe get oe remaining combinations theory useful verify extension obtained 
initially ok obtained definition bl 
deduce bl oe ok rule ly ly applied 
rule ok bird bl clearly applied obtain bl way ok obtained reduced formula bl bl oe ok oe obtain ok 
theory obtain extension containing animal bird penguin ok 
obtain ok ok bl bl 
theorem summarises major technical properties approach demonstrates rules applied desired order theorem 
consistent extension ordered default theory 
ffi ffi 
ffi oe ffi iff ffi oe ffi 
ok ffi prereq ffi justif ffi implies conseq ffi max 
ok ffi prereq ffi implies bl ffi 
prereq ffi ffi ffi implies ffi ffi ffi ok ffi 
ok ffi iff ffi ffi ffi ok ffi bl ffi follows immediately parts ffi ffi ffi ffi gd gamma ffi ffi ffi bl ffi gamma ffi ffi ffi ok ffi tex non trivial default applied greater default unprovable prerequisite lesser default considered 

discussion proposed illustrated general methodology default logic analytical tool underlying formalism representation knowledge 
role default logic extends advocated formal logic knowledge representation 
methodology involves naming default rules special purpose predicates detecting conditions default rule applicability controlling rule application 
allows encoding specific strategies policies governing set default rules 
examples default logic formalise preferences properties inheritance default properties 
earlier delgrande schaub shown notion similar individuals encoded default rules apply uniformly similar individuals 
examples show default logic employed provide semantics phenomena hand provide encoding reasoning phenomena 
comprehensive implementations default logic available straightforward matter implement example preference property inheritance needs just implement translation default logic feed result default logic theorem prover 
examples suggest general methodology proposed provides general useful approach analyse axiomatise various diverse phenomena 
example translations demonstrate distinct notions having preference priority hand property inheritance 
suggest addition directly representing nonmonotonic theories default logic appropriate general artificial intelligence formalism specific phenomena may encoded 
fact stronger pragmatic thesis advanced view implemented reasoning systems smodels niemela simons eiter dlv subset default logic corresponding extended logic programs answer set semantics provide just appropriate approach encoding addressing phenomena advocated 
reviewer suggesting 
tex allen hayes 
moments points interval temporal logic 
computational intelligence 
baader hollunder 
embedding defaults terminological knowledge representation formalisms 
nebel rich swartout editors proceedings third international conference principles knowledge representation reasoning pages cambridge ma october 
baader hollunder 
prefer specific defaults terminological default logic 
proceedings international joint conference artificial intelligence pages chamb ery france 
boutilier 
default priority 
glasgow hadley editors proceedings ninth canadian conference artificial intelligence pages vancouver 
brewka eiter 
preferred answer sets extended logic programs 
artificial intelligence 
brewka gordon 
buy porsche approach defeasible decision making 
aaai workshop computational dialectics pages seattle wa july 
aaai press 
brewka 
adding priorities specificity default logic 
pereira pearce editors european workshop logics artificial intelligence jelia lecture notes artificial intelligence pages 
springer verlag 
brewka 
reasoning priorities default logic 
proceedings aaai national conference artificial intelligence volume pages 
aaai press mit press 
brewka 
founded semantics extended logic programs dynamic preferences 
journal artificial intelligence research 
cadoli eiter gottlob 
default logic query language 
doyle torasso sandewall editors proceedings fourth international conference principles knowledge representation reasoning pages 
morgan kaufmann publishers 
nski marek truszczy nski 
computing default logic 
artificial intelligence 
delgrande schaub 
compiling reasoning preferences default logic 
dean editor proceedings international joint conference artificial intelligence pages nagoya japan august 
morgan kaufmann publishers 
delgrande schaub 
compiling specificity approaches nonmonotonic reasoning 
artificial intelligence 
delgrande schaub 
reasoning sets preferences default logic 
second ijcai workshop nonmonotonic reasoning action change nagoya japan august 
delgrande schaub 
role default logic knowledge representation 
workshop logic artificial intelligence washington june 
delgrande schaub 
expressing preferences default logic 
artificial intelligence 
eiter leone pfeifer scarcello 
deductive system nonmonotonic reasoning 
dix furbach nerode editors proceedings fourth international conference logic 
tex ming non monotonic reasoning volume lecture notes artificial intelligence pages 
springer verlag 
etherington reiter 
inheritance hierarchies exceptions 
proceedings aaai national conference artificial intelligence pages 
morgan kaufmann publishers 
geffner pearl 
conditional entailment bridging approaches default reasoning 
artificial intelligence 
gelfond lifschitz 
logic programs classical negation 
david warren peter szeredi editors proceedings international conference logic programming pages 
mit 
gelfond son 
reasoning prioritized defaults 
jurgen dix lu pereira przymusinski editors proceedings th international workshop logic programming knowledge representation volume lnai pages berlin 
springer 
grosof 
generalizing prioritization 
allen fikes sandewall editors proceedings second international conference principles knowledge representation reasoning pages san mateo ca april 
morgan kaufmann 
hayes 
naive physics ontology liquids 
hobbs moore editors formal theories commonsense world pages 
ablex 
hayes 
second naive physics manifesto 
hobbs moore editors formal theories commonsense world pages 
ablex 

classifying semi normal default logic basis expressive power 
gelfond leone pfeifer editors proceedings fifth international conference logic programming nonmonotonic reasoning lpnmr volume lecture notes artificial intelligence pages 
springer verlag 
levesque pirri reiter 
foundations situation calculus 
linkoping electronic articles computer information science 
lifschitz 
closed world databases circumscription 
artificial intelligence 
lifschitz 
foundations logic programming 
brewka editor principle knowledge representation pages 
csli 
mccarthy hayes 
philosophical problems standpoint artificial intelligence 
michie meltzer editors machine intelligence pages 
edinburgh university press 
mccarthy 
order theories individual concepts propositions 
michie editor machine intelligence pages 
edinburgh university press 
mccarthy 
applications circumscription formalizing common sense knowledge 
artificial intelligence 
mercer 
default logic derive natural language 
goebel editor proceedings seventh biennial canadian conference artificial intelligence pages 
moore 
reasoning knowledge action 
technical report sri international 
moore 
role logic knowledge representation commonsense reasoning 
proceedings aaai national conference artificial intelligence pages pittsburgh pa 
niemela simons 
smodels implementation stable model founded semantics normal logic programs 
dix furbach tex nerode editors proceedings fourth international conference logic programing nonmonotonic reasoning pages 
springer verlag 
pearl 
system natural ordering defaults tractable applications nonmonotonic reasoning 
parikh editor proc 
third conference theoretical aspects reasoning knowledge pages pacific grove ca 
morgan kaufmann publishers 
perrault 
application default logic speech act theory 
technical report csli stanford university 
poole 
logical framework default reasoning 
artificial intelligence 
reiter 
interacting defaults 
proceedings international joint conference artificial intelligence pages vancouver 
reiter de kleer 
foundations assumption truth maintenance systems preliminary report 
proceedings aaai national conference artificial intelligence pages 
morgan kaufmann publishers 
reiter 
logic default reasoning 
artificial intelligence 
reiter 
logical reconstruction relational database theory 
brodie mylopoulos schmidt editors conceptual modelling pages 
springer verlag 
reiter 
theory diagnosis principles 
artificial intelligence 
schaub nicolas 
implementation platform query answering default logics xray system implementation evaluation 
dix furbach nerode editors proceedings fourth international conference logic programming non monotonic reasoning volume lecture notes artificial intelligence pages 
springer verlag 
turner 
representing actions logic programs default theories situation calculus approach 
journal logic programming 
wang yuan 
compiling defeasible inheritance networks general logic programs 
artificial intelligence 
zhang foo 
answer sets prioritized logic programs 
editor proceedings international symposium logic programming ilps pages 
mit press 
tex 
