kumar plaisant shneiderman car tr march cs tr isr tr browsing hierarchical data multi level dynamic queries pruning kumar catherine plaisant ben shneiderman human computer interaction laboratory department computer science institute systems research university maryland college park md src umd edu plaisant cs umd edu ben cs umd edu users browse hierarchies thousands nodes search best match information needs 
pdq tree browser pruning dynamic queries visualization tool specified designed developed purpose 
tool presents trees views detailed view overview 
users dynamic queries method rapidly filtering data filter nodes level tree 
dynamic query panels user customizable 
subtrees unselected nodes pruned leading compact views relevant nodes 
usability testing pdq tree browser done subjects helped assess strengths identify possible improvements 
pdq tree browser network management nodes nodes applications 
controlled experiment subjects showed pruning significantly improved performance speed subjective user satisfaction 
research directions suggested 
please address correspondence ben shneiderman appear international journal human computer studies kumar plaisant shneiderman decisions integral part human life 
deciding movie see choosing universities apply people constantly faced decisions 
everyday decisions engineering applications require selection elements possibly thousands elements 
cases users try choice deciding want try reduce data set smaller manageable size 
iterations easier final selection reduced data set 
iterative refinement progressive querying data sets known hierarchical decision making 
hierarchical data set hds called tree organizes data points hierarchy 
common sales budget data catalogs products library indices computer file systems hds filtered queried reduced effectively hierarchical decision making process data inherently hierarchical 
original motivation research user interfaces network management kumar plaisant shneiderman 
working user interface satellite network configuration faced task choosing leaf node large tree thousands nodes 
task number interesting leaf nodes reduced drastically selection criteria various levels tree 
problem prompted design implement pdq pruning dynamic queries 
pdq tree browser requirements task analyses network management scenario tree browsing applications specified requirements pdq tree browser visualization tool browse entire tree view different levels 
query nodes levels basis attribute values 
querying mechanism easy rapid powerful 
hide uninteresting nodes branches rapidly reduce data set progressively 
iterate easily revealing hidden nodes branches 
previous information search vast topic marchionini previous hierarchical data limited 
early emphasized aesthetic easy read tree graph layouts battista eades tamassia tollis browsing exploring searching trees graphs provide solution attributes querying browsing problem 
kumar plaisant shneiderman visual browsers address browsing allow manual pruning uninteresting subtrees subgraphs 
commonly tree visualizations include node link diagrams spacefilling treemaps node link diagrams tables contents 
advantage node link visualizations trees familiar mapping structured relationships easy understand 
display attributes links color size required 
node link diagrams inefficient screen space trees medium size need multiple screens completely displayed 
necessitates scrolling diagram global context lost part diagram visible time 
beard walker map window miniature entire information space wire frame box aid users remembering location 
map window better known overview entire information space shown full size detailed view wire frame box field view plaisant carr shneiderman 
field view dragged overview pan detailed view 
similarly scrolling detailed view updates position field view overview 
overview detailed view said tightly coupled 
beard walker overview significantly improves user performance pan technique zoom pan technique significantly faster scroll technique 
plaisant provide taxonomy guidelines image browsers 
attempts standardize terms researchers today detail view field view different kinds browsers detail window zoom replace tiled multilevel browser shown 
authors identify classes tasks accomplished image browsers open ended exploration navigation monitoring treemap visualization tree structures uses dimensional space filling approach node rectangle area proportional attribute node size shneiderman 
hand treemap algorithm utilizes designated space 
sections hierarchy containing important information allocated display space portions hierarchy important specific task hand allocated space 
treemaps file management network management kumar budgets sports data robertson mackinlay card chignell diagrams order visualize tree structures 
robertson information visualizer project xerox parc developed tool called cone trees allows animation trees 
contend interactive animation effectively shift cognitive processing load perceptual system 
describe gardening operations robertson user manually prune grow view tree 
prune grow operations done kumar plaisant shneiderman menu gestures directed node 
gardening operations help managing understanding large complex hierarchies manual mechanism pruning growing subtree time clearly sufficient effective specifying complex searches spanning levels tree 
chignell 
built info tv tool allows styles pruning sub branch es chosen node root removed screen nodes labels removed links remain authors describe nodes sub trees pruned specified user 
assumed user specifications manually selecting nodes 
visualizations traditionally browse graph structures 
examples graph visualizations include hypertext graphs finite state diagrams flow charts parse trees dataflow diagrams wiring diagrams hierarchical decompositions 
henry henry hudson best layout depends user current region interest 
consequently single layout algorithm produce best results 
ability users customize layout meet current needs interests essential 
users provided interactive tools iteratively dissect large graphs manageable pieces 
henry hudson describe manual selection users select nodes edges simple direct manipulation techniques algorithmic selection users apply algorithm graph 
classifying manual selection individual selection selection authors greatly restricting range interesting selection subsets specified user 
conclude identifying primary directions domain specific graph semantics guide layout selection creating methodology build interactive system non programmers specify selection layout algorithms 
extends strategies 
built system presents users list objects 
choose object choosing particular relationship directed acyclic graph tree equivalence set created new window 
tangled web resulted showing relationships eliminated window relationship 
noting zooming panning inadequate arbitrary graph structures authors implemented pruning order assist browsing 
subgraph selected contains nodes comfortably fit window subgraph displayed entirety 
subgraph obtained pruning procedure called display graph 
schaffer dill greenberg roseman users performed better fisheye views hierarchically clustered graphs full zoom views 
carey matthews mccann users getting somewhat disoriented kumar plaisant shneiderman fisheye views complex tasks 
fisheye view implementations described allow attributes specification foci interest 
review literature pertaining tree graph browsers provide answer problem specifying selection subsets large connected data sets trees graphs 
allow uninteresting nodes subtrees subgraphs pruned require users subset specifications manually 
believe dynamic queries effectively purpose 
dynamic queries describes interactive user control visual query parameters generates rapid msec update animated visual display database search results 
dynamic queries application direct manipulation principles database environment 
depend presenting visual overview powerful filtering tools continuous visual display information pointing typing rapid incremental reversible control query shneiderman 
dynamic queries applied browser databases houses movies chemical tables elements concepts dynamic querying tight coupling similar focusing linking buja mcdonald stuetzle 
pdq tree browser design theory pdq tree browser design consists features tightly coupled node link views tree overview detailed view dynamic query environment users customize dynamic query panels dynamic queries different levels tree pruning subtrees uninteresting nodes get compact views dynamic queries hierarchical data sets dynamic queries applied data sets consisting independent data points ahlberg shneiderman 
cases data point satisfies query affect outcome data points 
interrelationships data points 
data set thought flat 
queries merely queries attributes individual data points 
example filmfinder movie independent data point 
similarly shneiderman house independent data point 
non flat data set hand predefined interrelationships data points 
example hds nodes related parent child relationship kumar 
node matches query affect nodes 
specifically searching hierarchical data set top manner parent sense prune descendant nodes nodes match kumar plaisant shneiderman query 
example users looking departments universities low tuition sense eliminate departments universities high tuition 
criteria low tuition high average sat scores high placement indices exist levels hierarchy stepwise refinement query done progressively reduce initial large data set smaller set choices may 
dynamic query environments filmfinder examples systems provide hard coded graphical widgets user manipulate order dynamically update visual display 
user wanted find homes miles hospital current interface reprogrammed 
dynamic query environment implemented browser national center health statistics shneiderman allow users customize dynamic query control panels current interests 
users able select combination attributes wish query appropriate widgets created run time 
method selecting attributes creating widgets easy allow modifications backtracking 
having interface application dependent added advantage reusability applications 
description interface pdq tree browser interface consists main parts data display tree structure visualized tightly coupled views detailed view right overview left 
pdq tree browser window resized user field view shape size updated automatically 
dynamic query panel panel data display consists parts attributes list left widgets panel right 
initially query widgets widgets panel 
users may select dragging dropping attributes attributes list level hierarchy root level 
causes appropriate widget range slider numerical attributes menu textual attributes created initialized 
queries attributes level ed 
users replace existing widget dropping new attribute name original widget attribute name 
existing widgets deleted dropping query corresponding attribute name 
kumar plaisant shneiderman range slider widgets university maryland widget library tm carr jog kumar ahlberg pdq tree browser implementation 
users manipulate widget current lowest level displayed nodes matching query level colored yellow gray 
updates data display realtime msec updates control widgets accordance principle dynamic queries 
buffering done order updates smooth flicker free possible 
users manipulate widget level current lowest level tree visualization jumps level level widget tree current lowest level 
done structure tree direct manipulation widgets remains constant colors nodes change 
nodes new lowest level updated coloring yellow gray real time show match query 
tree structure changes current lowest level tree changed accomplished users ways clicking corresponding level button buttons labeled network dpc lim port just data display 
manipulating widget level current lowest level explained 
clicking buttons increase decrease levels displayed 
current lowest level changed show levels pruning tree done eliminate subtrees nodes match query levels 
example user manipulates range slider network id nets match query increases lowest level displayed children nets shown children nets shown 
nets appear gray nets appear orange simply show nodes match query level 
feedback enables users go back change queries higher levels iteratively refine selection subset 
explained nodes current lowest level colored yellow gray nodes higher levels colored orange gray 
level button corresponding current lowest level colored yellow focus attention user level 
buttons levels colored gray 
current lowest level changed show fewer levels tree simply folded back new lowest level nodes level colored yellow gray query level 
users easily jump back forth levels order fine tune search 
kumar plaisant shneiderman attributes list left shows attributes corresponding current lowest level 
users access names attributes levels choosing appropriate level name network dpc attributes menu just attributes list 
feedback indicators corresponding level root level updated order show number proportion nodes currently match query number hits 
proportion feedback indicator colored yellow corresponds proportion hits 
proportion percentage total number nodes level number nodes level currently displayed 
actual number hits displayed top feedback indicator 
proportion indicators displayed level current lowest level deeper levels hidden grayed 
calculating number nodes match query deeper levels computationally intensive slow dynamic queries nodes current level 
time users select button hide grayed nodes 
summarize pdq tree browser visualization tool hierarchical data dynamic queries pruning 
pdq tree browser uses coordinated views tree detailed view overview 
user select attributes numerical textual dynamically querying nodes level hierarchy 
subtrees nodes match query level pruned visualization 
reduce large data set thousands nodes smaller set selections 
example application applied pdq tree browser applications network management 
described 
database organizes universities hierarchically regions world followed states universities departments 
demo available videotape kumar 
say am high school senior looking universities best match needs 
pdq tree browser initially shows regions world 
ask see entire tree get idea size database 
feedback indicators show departments universities states regions world 
realize panning entire tree easy task return region level 
am interested regions english primary language create textual menu primary languages dragging dropping attribute primary language empty slots region level button 
select english menu south america turns gray usa canada africa europe remain yellow 
kumar plaisant shneiderman proceed state level 
south america subtree expanded 
subtree pruned south america satisfy criterion primary language 
south america shown gray order provide context feedback 
really study state relatively safe choose query level violence 
manipulate range slider select states violence index leaving states 
reduce number interesting states choosing traffic conditions 
number states dropped 
look universities recapture space occupied uninteresting states clicking hide gray leaves button 
gives compact view visible single screen 
go university level remaining states expanded show universities 
reduce number universities eliminating high tuition setting average sat scores closely match mine 
hide gray leaves see am universities couple couple ontario satisfied set universities proceed department level closely look departments best match interests needs terms availability financial aid pdq tree browser limitations scenario demonstrates pdq tree browser applied everyday applications addition complex applications network management 
tool general hierarchical data set attributes nodes different levels hierarchy 
current implementation limitations pdq tree browser interface fine tuned tree depth 
underlying tree data structure node link widgets place constraints depth tree current interface customized look best tree depth levels tree detailed view align nicely corresponding buttons query widgets 
users select attributes query level queries anded 
ors supported currently 
focus layout algorithm produces aesthetic tidy layout compact 
implementation enforce overview show entire tree users scroll overview 
users open subtrees nodes manually selecting double clicking 
believe manual selection attributes selection necessary complete system 
kumar plaisant shneiderman possible design alternatives interesting design alternatives deserve special mention pruning vs pdq tree browser prunes subtrees nodes match query level 
approach show entire subtree nodes grayed 
possible advantage approach pruning approach increased constancy tree structure 
expert users experience improved productivity get familiar tree structure 
disadvantage approach tree displayed entirety level nodes take lot screen space uninteresting 
results increased overheads scrolling panning slower response times 
section describe controlled experiment compared behavior alternatives 
update data display query widget created replaced level different current lowest level pdq tree browser changes levels widgets levels current lowest level manipulated 
change levels new widget created existing widget replaced level different current lowest level 
design decision assumption users create number widgets different levels time want level change time 
disadvantage approach data display potentially inaccurate till time users visit level 
generalizing design section attempts generalize pdq tree browser design overcome limitations generally applicable trees varying structures sizes 
ideas extending query interface allow specification complex boolean queries discussed 
pdq tree browser illustrated advantages dynamic queries pruning visualizing trees node link diagrams 
advantages tree visualizations treemaps cone trees 
illustrate examples treemap case 
coping varying structure growing size section examine issues need addressed order design extensible trees varying structure size 
trees arbitrary depth shows extend current pdq interface handle trees arbitrarily deep 
due screen space constraints possible see query widgets levels hierarchy 
lower left kumar plaisant shneiderman corner list levels hierarchy users select current lowest level level case 
attributes list updates show list attributes level 
query widgets current lowest level previous level visited level case shown query panel 
trees arbitrary size size tree visualized larger performance tend deteriorate browsing mechanism inadequate 
approaches taken alleviate problem performance issues node link layout algorithm worst case nodes shown requires complete traversals tree increasing levels displayed requires traversals entire tree worst case 
dynamically querying nodes level efficient requires traversal node level entire tree 
system slow appreciably size tree increases especially operations require re computation structure layout 
sophisticated data structures algorithms necessary order minimize performance 
example traverse nodes visible detailed view evaluate dynamic queries 
mean overview tightly coupled detailed view 
algorithms pruning improved subtrees dynamically queried structure change need traversed 
interesting challenges remain solved respect performance issues 
interface issues ideally overview show entire data display miniature means details visible overview provides global context 
size tree gets huge say nodes way overview suffice 
plaisant carr hasegawa cases useful provide intermediate view addition overview detailed view detail overview zoom ratio 
feature useful allow users restrict nodes displayed displaying 
example user requests see new level nodes system user option restricting set feedback provided displaying number matching nodes displaying 
kumar plaisant shneiderman specification general boolean queries current pdq tree browser implementation allows users specify queries attributes level 
improved interface allow number ands ors 
specifying complex boolean queries graphically challenge may difficult interpret set graphical widgets boolean operators parentheses experienced users 
pdq tree browser accommodate complex boolean queries filter flow metaphor queries shown water streams flowing sequential filters ands parallel filters ors inverted filters young shneiderman 
decrease breadth water stream passing filter represents reduction data set due corresponding query 
pruning applied treemaps fact treemap network hub highlighted need mechanism hide subsets nodes prune subtrees interesting recapture screen space 
uninteresting leaf nodes taken total display space 
shows pruning help treemaps recapture screen space allocated uninteresting subtrees 
dynamic queries pruning applied cone trees robertson 
describe gardening operations user manually prune grow view tree 
prune grow operations done menu gestures directed node 
believe allowing users attributes subset specifications addition manual subset specifications help cone trees powerful useful 
usability testing order assess improve pdq tree browser usability evaluations performed subjects training asked perform specified tasks pdq 
data testing 
methods subject procedures followed experiment introduced subjects explaining scenario section 
description features pdq tree browser features demonstrated subjects opportunity try 
kumar plaisant shneiderman tasks subjects asked perform tasks 
initial tasks focused specific features tasks designed evaluate tool see section details 
subjects encouraged think aloud performing tasks 
comments suggestions recorded 
interesting actions sources confusion recorded 
subjective evaluation subjects asked rate specific features system scale identify liked disliked pdq tree browser suggestions improvement 
analysis comments suggestions subjects compiled list section 
mean standard deviation computed rating graphs plotted 
subjects pilot testing done graduate students try tasks get preliminary reactions 
tasks refined subjective evaluation questionnaire designed software tested subjects 
subjects familiar tree structures pruning database querying guis direct manipulation widgets 
subjects ranged graduate students undergraduate computer science electrical engineering faculty research assistant 
tasks range tasks included feature testing testing specific features pdq tree browser 
tight coupling overview detailed view browsing node link diagrams panning scrolling changing levels features 
dynamic query environments building modifying dynamic query panels drops 
directly manipulating widgets produce real time color updates nodes 
tree dynamics tree pruning associated structure layout changes 
issues relating getting familiar tree structure dis orientation due structural changes 
ability iteratively refine queries jumping back forth levels 
task testing testing queries varying complexity type 
classification queries general independent particular pdq tree browser design implementation 
simple attributes queries example states level violence index complex associative structure queries example states satisfy constraints regions standard living kumar plaisant shneiderman density department 
results subjective evaluations revealed features liked needed improvement liked features asked thing liked pdq tree browser subjects responses included dynamic querying pruning get multiple views current interests 
easy learn convenient straight forward 
ability locate interesting parts large trees 
easy create complex multi level queries 
liked seeing tree structure data usually tabular 
shows adequate information 
tightly coupled overview detailed view 
subjective ratings users rated aspects pdq tree browser scales worst rating best rating 
rated possible features 
example users gave mean rating standard deviation usefulness pruning mean rating standard deviation usefulness dynamic queries ease range slider manipulation got mean rating standard deviation 
suggestions improvement subjects asked suggestions improvement possible new features 
suggestions tabulated resulting possible enhancements system 
obvious ones inexpensive incorporate system require effort ability manually add remove nodes selection subset resulting dynamic queries clicking 
ideal subset specification mechanism allow query specification manual specification 
issues relating keeping track nodes avoiding complications query process need addressed 
pruning hide gray leaves feature clearly liked subjects 
frequently recapture screen space uninteresting gray nodes focus kumar plaisant shneiderman search 
removing nodes system faster 
subjects agreed hide gray nodes feature useful 
subjects felt default behavior hide gray nodes levels changed users ask see gray nodes context interested 
suggestion help views compact 
preferred default behavior depends structure tree fan level type tasks requires investigation 
fact subject liked seeing gray nodes higher levels hide gray leaves feature 
said presence gray nodes higher levels helped visually separating disjoint groups nodes 
subjects response time pdq tree browser features slow especially increasing levels number nodes high 
observed subjects get somewhat disoriented level tree changed 
layout algorithm generates fresh layout tree structure changes levels requested seen 
felt problem significantly alleviated retaining current focus 
example user asks see university level state florida near center new view initialized show universities florida 
panning detailed view dragging field view overview useful improvements design required 
subject emphasized need fit overview screen scrolling overview required 
mentioned designed wasn enforced implementation 
subject suggested users able click overview field jump position 
enable fast coarse navigation 
fine tuning accomplished dragging field view 
quote received subjects drag drop drag experienced users drop 
subjects echoed feeling easier faster just replace drop area menu attributes level 
subjects enjoyed drag drop mechanism create modify query panels 
ability specify complex boolean queries involving ors addition ands allowed currently 
kumar plaisant shneiderman task task required subjects look departments states wyoming wisconsin washington 
basically restricting states wyoming wisconsin washington 
menu allows users select textual values 
widget select textual values needs designed implemented 
subject wished way search upwards tree able query universities see states contained selected universities 
subject interesting suggestion pdq tree browser allow users hide certain levels demand 
example users interested looking universities usa care states possible remove state level totally get back desired 
controlled experiment guidance students robert ross zhang eun mi choi conducted controlled experiment compare behavior alternatives pdq tree browser ross zhang choi 
database experiment 
behavior alternatives related pruning subtrees nodes match query levels 
treatments follows discussed section full tree subtrees unselected nodes shown entirety colored gray 
partially pruned subtrees unselected nodes pruned nodes shown gray behavior option pdq tree browser currently uses 
fully pruned subtrees unselected nodes unselected nodes pruned 
hypothesized subjects full tree interface take longer partially fully pruned interfaces 
full tree allows static display tree inclusion irrelevant nodes probably slow response time add useless information user visual field create need excessive scrolling panning displays get relevant nodes 
due longer task completion times difficult complex searching required users lower subjective ratings full tree interface pruned interfaces 
completion times subjective ratings pruned interfaces approximately equal differences significant 
postulated fully pruned interface promised compact views partially kumar plaisant shneiderman pruned interface offered additional context feedback help tasks requiring iterations refine query 
subjects randomly assigned treatments groups experimental design 
performed set tasks 
filled electronic questionnaire quis subjectively evaluate treatment 
results tables showed times complete set tasks significantly different level interface slower slower 
terms subjective satisfaction rated higher preferred interface 
full tree partially pruned fully pruned table mean task completion times seconds standard deviations parentheses full tree partially pruned fully pruned table mean subjective satisfaction ratings normalized best standard deviations parentheses total task completion time anova gave significant level 
pairwise tests results significant level 
controlled experiment fully pruned interface fastest interface slowest 
differences full tree pruned interfaces significant level differences partially fully pruned interfaces 
subjective ratings anova produced significant level 
pairwise tests significant level 
users liked partially pruned interface best disliked full tree interface 
differences full tree pruned interfaces significant level differences partially fully pruned interfaces 
addition times interface times complete task compared 
poor performance times subjects full tree interface partly due poor system response times 
specifically interface consistently noticeably slower response times especially expanding lower levels university department levels 
kumar plaisant shneiderman differences pruned interfaces clear cut task performance faster fully pruned interface partially pruned interface got higher subjective ratings 
fan particular tree probably increased differences interfaces 
specifically tree large fan states usa region level state level help explain fully pruned interface faster performance times partially pruned interface significant proportion states gray took significant proportion screen space 
interesting repeat experiment trees varying fan 
controlled experiment clearly showed advantages pruning 
choice nodes matching query grayed removed best provided interface users 
pdq tree browser visualization tool presents trees tightly coupled views detailed view overview 
users dynamic queries filter nodes level tree 
dynamic query panels user customizable 
subtrees unselected nodes pruned feature usability testing controlled experiment showed useful 
possible enhancements pdq tree browser identified 
concepts dynamic querying pruning general applied effectively existing tree visualizations treemaps cone trees 
concepts extensible graph structures require careful thinking design 
directions pdq tree browser refinements implementing improvements identified usability testing section 
pdq tree browser interface fine tuned tree depth see section details 
interface extended cope varying structure growing size suggestions section 
study approach better terms hiding vs showing gray nodes higher levels default needed extend ross 
investigation take consideration different types tasks applications tree structures fan depth breadth size attempt identify approach yield superior performance 
kumar plaisant shneiderman general gui extensions newer widgets need developed enable users specify multiple selections textual attributes easily 
useful widget extension box slider box slider 
extension graph structures pdq tree browser extended dynamic queries class non flat data sets hierarchical data sets 
general form data set arbitrary graph 
graphs nodes connected arbitrary number links different types 
link represents relationship connected nodes 
believe pdq tree browser concepts dynamic querying pruning selective growing extended graph structures 
distinct levels hierarchy think distinct classes nodes links 
tree browsing research issues semantics browsing generic browsers plaisant treat information space browsed images 
believe browsing trees facilitated advantage underlying structure tree 
fast navigation siblings parents grand parents having manually scroll pan useful options 
traversal tree preorder postorder inorder tours nodes marked manually query interesting topics investigation 
layout issues clear need layout guidelines tightly coupled overviews detailed views size fan trees vary 
example tree wider deep case scenario sense tree drawn left right right left overview left right detailed view 
hand tree deeper wide better tree drawn top bottom overview detailed view 
tree structure changes frequently redrawn strategy utilize overview optimally making remaining tree occupy entire overview space 
lead disorientation zoom ratio keep varying 
acknowledgments thankful dr michael ball insightful suggestions robert ross zhang eun mi choi designing running controlled experiment described usability testing subjects provided invaluable feedback 
edward johnson suggesting name pdq trees system 
kumar plaisant shneiderman project supported part hughes network systems maryland industrial partnerships mips center satellite hybrid communication networks national science foundation cd nsf eec 
ahlberg shneiderman 

visual information seeking tight coupling dynamic queries starfield displays 
proceedings acm conference human factors computing systems pp 
acm new york 
battista eades tamassia tollis 

algorithms drawing graphs annotated bibliography 
unpublished technical report brown university computer science department october 
beard walker ii 
navigational techniques improve display large dimensional spaces 
behavior information technology 

buja mcdonald stuetzle 

interactive data visualization focusing linking 
proceedings ieee visualization conference pp 
san diego ca ieee computer society press october carr jog kumar ahlberg 

interaction object graphs specify develop graphical widgets 
technical report cstr university maryland department computer science september 
chignell 

exploration design space dimensional hierarchies 
proceedings human factors society santa monica ca 


browsing tangled web 
master thesis report university california berkeley division computer science may henry 

interactive graph layout exploration large graphs 
ph thesis university arizona tucson az may henry hudson 

interactive graph layout 
proceedings acm siggraph symposium user interface software technology pp 
acm new york november 
carey matthews mccann 

presenting graphical network comparison performance fisheye scrolling views 
salvendy smith eds designing humancomputer interfaces knowledge systems pp 
amsterdam elsevier science 
kumar plaisant shneiderman kumar 

visualizing hierarchical data dynamic queries pruning tree browser 
catherine plaisant ed hcil open house video humancomputer interaction laboratory university maryland june 
kumar plaisant shneiderman 
visual information management network configuration 
technical report cs tr university maryland department computer science june 
marchionini 

information seeking electronic environments cambridge university press uk 
plaisant carr hasegawa 

intermediate view matters browser experiment 
technical report cs tr university maryland department computer science october 
plaisant carr shneiderman 

image browser taxonomy guidelines designers ieee software march 
robertson mackinlay card 

cone trees animated visualizations hierarchical information 
proceedings acm conference human factors computing systems pp 
new york acm 
ross zhang choi 

tree browser visualize information database queries 
unpublished report university maryland department computer science december 
schaffer dill greenberg roseman 

comparing fisheye full zoom techniques navigation hierarchically clustered networks 
acm transactions information systems 
shneiderman 

tree visualization treemaps space filling approach acm transactions graphics pp 
january 
shneiderman 

dynamic queries visual information seeking 
ieee software 
young shneiderman 

graphical filter flow representation boolean queries prototype implementation evaluation 
journal american society information science pp 
february 
biographies prem kumar received tech 
textile engineering indian institute technology new delhi india systems engineering university kumar plaisant shneiderman maryland college park 
currently member usability engineering group bellcore piscataway new jersey 
research interests include information visualization user interfaces network management interactive information systems 
catherine plaisant assistant research scientist human computer interaction laboratory center automation research university maryland 
centers primarily graphical user interface design evaluation 
worked various research projects related hypertext touchscreens public access information systems information visualization domains 
plaisant received general engineering degree ecole nationale des arts paris france degree universit pierre marie curie paris 
ben shneiderman professor computer science head human computer interaction laboratory member institute systems research university maryland college park 
organizes annual satellite television presentation user interface strategies author software psychology human factors computer information systems little brown designing user interface strategies effective human computer interaction third edition addison wesley editor sparks innovation human computer interaction ablex 
shneiderman received ph computer science university new york stony brook 
kumar plaisant shneiderman kumar plaisant shneiderman nets match query subtrees nets pruned kumar plaisant shneiderman pdq tree browser applied university finder application querying desirable states kumar plaisant shneiderman kumar plaisant shneiderman overview detailed view list levels current level attributes list level level query widgets level query widgets level name level name level name level name level name level name level name level name 
extending pdq tree browser design trees arbitrary depth kumar plaisant shneiderman level level dynamically queried level pruning level pruning pruning applied treemaps 
