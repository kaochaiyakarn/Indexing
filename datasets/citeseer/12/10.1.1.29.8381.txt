application dimensionality reduction recommender system case study sarwar george karypis joseph konstan john riedl department computer science engineering army hpc research center university minnesota minneapolis mn sarwar karypis konstan riedl cs umn edu investigate dimensionality reduction improve performance new class data analysis software called recommender systems 
recommender systems apply knowledge discovery techniques problem making product recommendations live customer interaction 
systems achieving widespread success commerce nowadays especially advent internet 
tremendous growth customers products poses key challenges recommender systems commerce domain 
producing high quality recommendations performing recommendations second millions customers products achieving high coverage face data sparsity 
successful recommender system technology collaborative filtering works matching customer preferences customers making recommendations 
collaborative filtering shown produce high quality recommendations performance degrades number customers products 
new recommender system technologies needed quickly produce high quality recommendations largescale problems 
presents different experiments explored technology called singular value decomposition svd reduce dimensionality recommender system databases 
experiment compares quality recommender system svd quality recommender system collaborative filtering 
experiment compares effectiveness recommender systems predicting consumer preferences database explicit ratings products 
second experiment compares effectiveness recommender systems producing top lists real life customer purchase database commerce site 
experience suggests svd potential meet challenges recommender systems certain conditions 
recommender systems evolved extremely interactive environment web 
apply data analysis techniques problem helping customers find products purchase commerce sites 
instance recommender system amazon com www amazon com suggests books customers books customers told amazon 
recommender system cdnow www cdnow com helps customers choose cds purchase gifts cds recipient liked past 
sense recommender systems application particular type knowledge discovery databases kdd fayyad technique 
kdd systems subtle data analysis techniques achieve goals 
save money discovering potential efficiencies ii money discovering ways sell products customers 
instance companies kdd discover products sell times year manage retail store inventory efficiently potentially saving millions dollars year brachman 
companies kdd discover customers interested special offer reducing costs direct mail outbound telephone campaigns hundreds thousands dollars year bhattacharyya ling 
applications typically involve kdd discover new model having analyst apply model application 
direct benefit kdd businesses increasing sales existing products matching customers products purchase 
web presents new opportunities kdd challenges kdd systems perform interactively 
customer commerce site recommender system learn customer behavior develop model behavior apply model recommend products customer 
recommender systems directly realize benefit kdd systems commerce 
help consumers find products wish buy commerce site 
collaborative filtering successful recommender system technology date successful recommender systems web including amazon com cdnow com 
earliest implementations collaborative filtering systems tapestry goldberg relied opinions people close knit community office workgroup 
collaborative filtering large communities depend person knowing 
systems statistical techniques provide personal recommendations documents finding group users known neighbors history agreeing target user 
usually neighborhoods formed applying proximity measures pearson correlation opinions users 
called nearest neighbor techniques 
depicts neighborhood formation nearestneighbor technique simple dimensional space 
notice user neighborhood users similar identified proximity measure 
neighborhoods need symmetric 
user best neighborhood 
neighborhood users particular products evaluated forming weighted composite neighbors opinions document 
statistical approaches known automated collaborative filtering typically rely ratings numerical expressions user preference 
ratings automated collaborative filtering systems developed 
grouplens research system resnick provides pseudonymous collaborative filtering solution illustration neighborhood formation process 
distance target user user computed closest users chosen neighbors diagram 
customer www server ratings recommendations 
recommender system architecture usenet news movies 
ringo shardanand video recommender hill email web systems generate recommendations music movies respectively 
schematic diagram architecture grouplens research collaborative dynamic html generator ratings recommendations recommender system correlation database ratings database filtering engine 
user interacts web interface 
web server software communicates recommender system choose products suggest user 
recommender system case collaborative filtering system uses database ratings products form neighborhoods recommendations 
web server software displays recommended products user 
largest web sites operate scale stresses direct implementation collaborative filtering 
model techniques fayyad potential contribute recommender systems operate scale sites 
techniques adapted real time needs web tested realistic problems derived web access patterns 
describes experimental results applying model technique latent semantic indexing lsi uses dimensionality reduction technique singular value decomposition svd recommender system 
data sets experiments test performance modelbased technique movie dataset commerce dataset 
contributions 
details model technology lsi svd applied reduce dimensionality recommender systems generating predictions 

low dimensional representation compute neighborhood generating recommendations 

results experiments lsi svd test data sets movielens test bed purchase data large ecommerce 
rest organized follows 
section describes potential problems associated correlation collaborative filtering models 
section explores possibilities leveraging latent semantic relationship customer product matrix basis prediction generation 
time explains take advantage reduced dimensionality form better neighborhood customers 
section delineates experimental test bed experimental design results discussion improvement quality performance 
section concludes provides directions research 
existing recommender systems approaches limitations collaborative filtering recommender systems build neighborhood customers 
neighborhood formation scheme usually uses pearson correlation cosine similarity measure proximity shardanand resnick 
systems determine proximity neighborhood produce types recommendations 

prediction customer product case correlation algorithm prediction product customer computed computing weighted sum rated items neighbors adding average rating 
expressed formula resnick cp pred rates cj denotes correlation user neighbor jp ratings product average ratings 
prediction personalized customer naive prediction schemes prediction example computed simply average ratings items predicted users herlocker 

recommendation list products customer commonly known top recommendation 
neighborhood formed recommender system algorithm focuses products rated neighbors selects list products liked customer 
systems successful domains algorithm reported shown limitations sparsity nearest neighbor algorithms rely exact matches cause algorithms sacrifice recommender system coverage accuracy konstan 
sarwar 
particular correlation coefficient defined customers rated products common pairs customers correlation billsus 
practice commercial recommender systems cj evaluate large product sets amazon com recommends books cdnow recommends music albums 
systems active customers may rated products books books large set opinion 
accordingly pearson nearest neighbor algorithms may unable product recommendations particular user 
problem known reduced coverage due sparse ratings neighbors 
furthermore accuracy recommendations may poor fairly little ratings data included 
example missed opportunity quality loss neighbor transitivity 
customers paul sue correlate highly sue correlates highly mike necessarily true paul mike correlate 
may ratings common may show negative correlation due small number unusual ratings common 
scalability nearest neighbor algorithms require computation grows number customers number products 
millions customers products typical web recommender system running existing algorithms suffer serious scalability problems 
synonymy real life scenario different product names refer similar objects 
correlation recommender systems find latent association treat products differently 
example consider customers rates different recycled letter pad products high customer rates different recycled memo pad products high 
correlation recommender systems see match product sets compute correlation unable discover latent association recycled office products 
applying svd collaborative filtering weakness pearson nearest neighbor large sparse databases led explore alternative recommender system algorithms 
approach attempted bridge sparsity incorporating semi intelligent filtering agents system sarwar 
agents evaluated rated product syntactic features 
providing dense ratings set helped alleviate coverage improved quality 
filtering agent solution address fundamental problem poor relationships minded sparse rating customers 
recognized kdd research community extensive experience learning sparse databases 
reviewing kdd techniques decided try applying latent semantic indexing lsi reduce dimensionality customer product ratings matrix 
lsi dimensionality reduction technique widely information retrieval ir solve problems synonymy polysemy deerwester 
term matrix lsi construct matrices reduced dimensionality 
essence matrices represent latent attributes terms reflected occurrence documents documents reflected terms occur 
trying capture relationships pairs customers ratings products 
reducing dimensionality product space increase density find ratings 
discovery latent relationship database may potentially solve synonymy problem recommender systems 
lsi uses singular value decomposition underlying matrix factorization algorithm maps nicely collaborative filtering recommender algorithm challenge 
berry 
point reduced orthogonal dimensions resulting svd noisy original data capture latent associations terms documents 
earlier billsus took advantage semantic property reduce dimensionality feature space 
reduced feature space train neural network generate predictions 
rest section presents construction svd recommender algorithm purpose generating predictions top recommendations section describes experimental setup evaluation metrics results 
singular value decomposition svd svd known matrix factorization technique factors matrix matrices orthogonal matrices size respectively rank matrix diagonal matrix size having singular values matrix diagonal entries 
entries matrix positive stored decreasing order magnitude 
matrices obtained performing svd particularly useful application property svd provides best lower rank approximations original matrix terms frobenius norm 
possible reduce matrix largest diagonal values obtain matrix sk matrices reduced accordingly reconstructed matrix rk uk sk vk closest rank matrix words rk minimizes frobenius norm rk rank matrices 
svd recommender systems perform different tasks svd capture latent relationships customers products allow compute predicted certain product customer 
second svd produce low dimensional representation original customer product space compute neighborhood reduced space 
generate list top product recommendations customers 
description experiments 
prediction generation start customer product ratings matrix sparse call matrix capture meaningful latent relationship removed sparsity filling customer product ratings matrix 
tried different approaches average ratings customer average ratings product 
product average produce better result 
considered normalization techniques conversion ratings subtraction customer average rating 
approach provide better results 
normalization obtain filled normalized matrix 
essentially npr npr fill matrix provides naive non personalized recommendation 
factor matrix obtain low rank approximation applying steps described deerwester factor svd obtain reduce matrix dimension compute square root reduced matrix sk obtain sk compute resultant matrices sk vk resultant matrices compute recommendation score customer product recall dimension dimension sk vk compute prediction simply calculate dot product th row th column sk vk add customer average back sk pred note matrix dense special structure matrix npr allows sparse svd algorithms lanczos complexity linear number nonzeros original matrix recommendation generation second experiment look prospects low dimensional space basis neighborhood formation neighbors opinions products purchased recommend list products customer 
purpose consider customer preference data binary treating non zero entry customer product matrix 
means interested customer consumed particular product liked product 
neighborhood formation reduced space fact reduced dimensional representation original space sparse highdimensional counterpart led form neighborhood space 
started original customer product matrix svd produce decomposed matrices reduced retaining eigenvalues obtained sk 
accordingly performed dimensionality reduction obtain uk vk 
previous method computed matrix product matrix dimensional representation customers 
performed vector similarity cosine similarity form neighborhood reduced space 
top recommendation generation neighborhood formed concentrate neighbors customer analyze products purchased recommend products target customer purchase 
computing neighborhood customer scan purchase record neighbors perform frequency count products purchased 
product list sorted frequently purchased items returned recommendations target customer 
call scheme frequent item recommendation 
sensitivity number dimensions optimal choice value critical highquality prediction generation 
interested value large capture important structures matrix small avoid overfitting errors 
experimentally find value trying different values 
performance implications practice commerce sites amazon com experiences tremendous amount customer visits day 
recommending products large number customers real time requires underlying recommendation engine highly scalable 
recommendation algorithms usually divide prediction generation algorithm parts offline component online component 
offline component portion algorithm requires enormous amount computation computation customer customer correlation case correlation algorithm 
online component portion algorithm dynamically computed provide predictions customers data stored offline component 
case svd recommendation generation decomposition customer product matrix computing reduced user item matrices sk vk done offline 
offline computation critical performance recommender system 
issues memory secondary storage requirement need addressed 
case svd offline component requires time compared correlation algorithm 
matrix svd decomposition requires time order deerwester 
computation correlation takes 
terms storage svd efficient need store just reduced customer product matrices size respectively total constant 
case correlation algorithm correlation table stored requiring storage substantially large millions customers products 
observe result dimensionality reduction svd online performance better correlation algorithms 
reason neighborhood formation faster done low dimensional space 
experiments experimental platform data sets mentioned report different experiments 
experiment data movielens recommender system evaluate effectiveness lsi prediction algorithm 
movielens www movielens umn edu web research recommender system fall 
week hundreds users visit movielens rate receive recommendations movies 
site users expressed opinions different movies 
randomly selected users obtain rating records database considered users rated movies 
rating record context defined triplet customer product rating 
divided rating records training set test set different ratios 
call training ratio denote value indicates divide ratings data set train cases test cases 
training data converted user movie matrix rows users columns movies rated users 
entry ri represented rating th user th movie 
second experiment designed test effectiveness neighborhood formed low dimensional space 
addition movie data historical catalog purchase data large commerce 
data set contains purchase information users catalog items 
total data set contains purchase records 
case commerce data set record triplet customer product purchase amount 
purchase amount meaningfully converted user rating didn second data set prediction experiment 
converted purchase amounts data set binary recommendation experiment 
divided data set train set test set similar notion training ratio addition movielens users system includes ratings eachmovie users 
eachmovie data static collection available research digital equipment systems research center 
benchmark recommender systems compare performance svd prediction entered training ratings set collaborative filtering recommendation engine employs pearson nearest neighbor algorithm 
purpose implemented cf predict flexible recommendation engine implements collaborative filtering algorithms tuned cf predict best published pearson nearest neighbor algorithm configured deliver highest quality prediction concern performance considered possible neighbor form optimal neighborhoods 
compare quality svd neighborhood recommendations implemented recommender system uses cosine similarity high dimensional space form neighborhood returns top recommendations call cf recommend 
cosine measure building neighborhood cases low dimensional space proximity measured computing cosine 
ratings test data set requested recommendation score cf predict computed recommendation score matrices sk vk compared 
evaluation metrics recommender systems research types measures evaluating success recommender system 
consider quality prediction recommendation re interested output recommender system evaluation purpose 
possible evaluate intermediate steps quality neighborhood formation 
discuss types metrics evaluating predictions top recommendations respectively 
prediction evaluation metrics evaluate individual item prediction researchers metrics coverage metrics evaluate number products system provide recommendations 
coverage computed percentage customer product pairs recommendation 
statistical accuracy metrics evaluate accuracy system comparing numerical recommendation scores actual customer ratings customer product pairs test dataset 
mean absolute error mae root mean squared error rmse correlation ratings predictions widely metrics 
experience shown metrics typically track closely 
decision support accuracy metrics evaluate effective prediction engine helping user select high quality products set products 
metrics assume prediction process binary operation products predicted bad 
observation product prediction score point scale irrelevant customer chooses consider predictions higher 
commonly decision support accuracy metrics reversal rate weighted errors roc sensitivity le mae choice evaluation metric report prediction experiments commonly easiest interpret directly 
previous experiments sarwar seen mae roc provide ordering different experimental schemes terms prediction quality 
top recommendation evaluation metrics evaluate top recommendation metrics widely information retrieval ir community recall precision 
slightly modify definition recall precision experiment different standard ir 
divide products sets test set top set 
products appear sets members hit set 
define recall precision recall context recommender system defined size hit set recall size test set precision defined test test top size hit set test precision size set measures conflicting nature 
instance increasing number tends increase recall decreases precision 
fact critical quality judgement leads combination 
particular standard metric yang gives equal weight computed follows recall precision compute individual customer calculate average value metric 
experimental steps prediction experiment 
entry data matrix represents rating scale cases user didn rate movie entry ri null 
performed experimental steps 
computed average ratings user movie filled null entries matrix replacing null entry column average corresponding column 
normalized entries matrix replacing entry ri ri ri 
matlab compute svd filled normalized matrix producing svd component matrices 
matrix contains singular values matrix sorted decreasing order 
sk computed retaining largest singular values replacing rest singular 
computed square root reduced matrix computed matrices sk mentioned multiplied matrices sk producing matrix 
inner product row column sk vk gives recommendation score resultant matrix holds recommendation score mean absolute error recall svd prediction quality variation number dimension number dimension user movie pair pij 
matrix entries adding user average back recommendation scores loaded training set ratings cf predict request recommendation scores test set ratings 
computed mae svd cf predict recommendation scores compare sets results 
repeated entire process optimum value 
fixed varied train test ratio increment point run experiment times time choosing different training test sets take average generate plots 
note performance svd prediction algorithm significantly change wide range values top recommendation experiment started matrix previous experiment converted rating entries non zero entries 
produced top product recommendations customer schemes high dimensional neighborhood scheme built customer neighborhood original customer product space frequent item recommendation produce top product list 
metric evaluate quality 
low dimensional neighborhood reduce dimensionality original space applying svd representation customers dimensional space matrix build neighborhood 
mae svd prediction generator fixed svd train test ratio 
determination optimum value 
svd vs cf predict prediction quality pure cf svd frequent item recommendation produce top list evaluated metric 
experiment main focus ecommerce data 
report findings apply technique movie preference data 
results prediction experiment results charts results prediction experiment 
data sets obtained sample ratings varying sizes training test data sets recall metric determination optimum value movie data set ratio size training set size entire data set 
note different values determine sensitivity different schemes sparsity training set 
metric train ratio ml high dim ml low dim top recommendation movie data set top recommendation experiment results recommendation experiment determined optimum ratio data sets high dimensional low dimensional cases 
run high dimensional experiment different ratio perform low dimensional experiments different values fixed dimension compute metric 
shows results observe optimum values movie data ecommerce data respectively 
obtain best value run high dimensional experiment compute metric 
run low dimensional experiments ratio vary number dimension results figures 
represent corresponding high dimensional results chart drawing vertical high dimensional value ml low dim ml high dim dimension 
top recommendation results movielens data set 
metric determination optimum value commerce data set train ratio 
determination optimum value movie data commerce data ec high dim ec low dim lines corresponding values 
discussion case prediction experiment observe svd prediction better cf predict predictions 
cf predict predictions slightly better 
suggests nearest neighbor collaborative filtering algorithms susceptible data sparsity neighborhood formation process hindered lack training data 
hand svd prediction algorithms overcome sparsity problem utilizing latent relationships 
training data increased svd cf predict prediction quality improve improvement case cf predict surpasses svd improvement 
plots recommender results figures observe movie data best result happens vicinity case metric commerce data recommendation quality keeps growing increasing dimensions 
movie experiment reveals low dimensional results better high dimensional counterpart values case ecommerce experiment high dimensional result better dimensions added low dimensional values improve 
increased dimension values low dimensional values lower high dimensional value 
commerce data high dimensional probably small value sufficient provide useful top recommendation commerce data set high dimensional value dimension 
top recommendation results commerce data set 
approximation original space 
factor consider amount sparsity data sets movie data sparse nonzero entries matrix ecommerce data sparse nonzero entries matrix 
test hypothesis deliberately increased sparsity movie data remove nonzero entries repeated experiment observed dramatic reduction values 
results encouraging svd collaborative filtering recommender systems 
svd algorithms fit collaborative filtering data result quality predictions 
svd potential provide better online performance correlation systems 
case top recommendation experiment seen small fraction dimension movie data svd recommendation quality better corresponding high dimensional scheme 
indicates ec low dim ec high dim neighborhoods formed reduced dimensional space better high dimensional counterparts 
re working experiments reduced dimensional neighborhood prediction generation classical cf algorithm 
far results encouraging 
recommender systems powerful new technology extracting additional value business customer databases 
systems help customers find products want buy business 
recommender systems benefit customers enabling find products 
conversely help business generating sales 
recommender systems rapidly crucial tool commerce web 
recommender systems stressed huge volume customer data existing corporate databases stressed increasing volume customer data available web 
new technologies needed dramatically improve scalability recommender systems 
study shows singular value decomposition svd may technology cases 
tried different approaches svd generating recommendations predictions discovered dramatically reduce dimension ratings matrix collaborative filtering system 
svd approach consistently worse traditional collaborative filtering se extremely sparse commerce dataset 
svd approach produced results better traditional collaborative filtering algorithm time denser movielens data set 
technique leads fast online performance requiring just simple arithmetic operations recommendation 
computing svd expensive done offline 
research needed understand new svd computed quality achieved incremental svd algorithms berry 
required understand exactly svd works recommender applications 
ways svd applied recommender systems problems including svd neighborhood selection svd create low dimensional visualizations ratings space 
funding research provided part national science foundation iis iis iis additional funding net perceptions supported nsf ccr army research office contract da daag doe asci program army high performance computing research center contract number daah 
anonymous reviewers valuable comments 

berry dumais brian 
linear algebra intelligent information retrieval 
siam review pp 


billsus pazzani 
learning collaborative information filters 
proceedings recommender systems workshop 
tech 
report ws aaai press 

bhattacharyya 
direct marketing response models genetic algorithms proceedings fourth international conference knowledge discovery data mining pp 


brachman piatetsky shapiro simoudis 
mining business databases communications acm pp 
november 

deerwester dumais furnas landauer harshman 
indexing latent semantic analysis 
journal american society information science pp 


fayyad piatetsky shapiro smyth uthurusamy eds 

advances knowledge discovery data mining 
aaai press mit press 

goldberg nichols oki terry 
collaborative filtering weave information tapestry 
communications acm 
december 

schafer konstan borchers sarwar herlocker riedl 
combining collaborative filtering personal agents better recommendations 
proceedings aaai conference pp 

heckerman 
bayesian networks knowledge discovery advances knowledge discovery data mining 
fayyad piatetsky shapiro smyth uthurusamy eds 
aaai press mit press 

herlocker konstan borchers riedl 
algorithmic framework performing collaborative filtering 
proceedings acm sigir 
acm press 

hill stead rosenstein furnas 
recommending evaluating choices virtual community 
proceedings chi 

le lindgren 
construction comparison receiver operating characteristics curves derived samples 

pp 


ling li 
data mining direct marketing problems solutions proceedings th international conference knowledge discovery data mining pp 


resnick iacovou suchak bergstrom riedl 
grouplens open architecture collaborative filtering netnews 
proceedings cscw chapel hill nc 

sarwar konstan borchers herlocker miller riedl 
filtering agents improve prediction quality grouplens research collaborative filtering system proceedings cscw seattle wa 

sarwar konstan borchers riedl 
applying knowledge kdd recommender systems 
technical report tr dept computer science university minnesota 

schafer konstan riedl 
recommender systems commerce proceedings acm commerce conference 

shardanand maes 
social information filtering algorithms automating word mouth proceedings chi 
denver 
yang liu 
re examination text categorization methods 
proceedings acm sigir pp 

zytkow 
knowledge concepts harmful equation proceedings third international conference knowledge discovery data mining 
