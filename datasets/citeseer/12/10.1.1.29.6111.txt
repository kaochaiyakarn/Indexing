approximate dataguides roy goldman jennifer widom stanford university cs stanford edu www db stanford edu concise summaries enabling schema exploration 
unfortunately dataguides expensive compute especially large cyclic databases 
dataguide uses approximate summary database structure beneficial cheaper compute 
summarize uses dataguides define approximate dataguides relax certain aspects dataguide definition 
adg allows inaccuracy retains properties useful numerous situations 
core presents general approaches building describing algorithms experimental results 
dataguide concise accurate structural summary semistructured database 
originally proposed gw dataguides variety uses query formulation processing semistructured database management system mag ffl ui user interface help users explore database structure example ffl statistics store statistics shape database query optimizer mw ffl warnings tool provide warnings queries refer ffl path expressions enable compile time expansion regular path expressions mw ffl path index path index speed query processing gw semistructured databases usually modeled labeled directed graphs abi bun :10.1.1.41.3258
tree shaped database dataguide construction linear space time respect size database 
general graph algorithm exponential worst case 
graph structured databases experiments show dataguides computed quickly smaller original database gw :10.1.1.41.3258
seen examples particularly cyclic databases dataguide construction 
propose approximate dataguides 
relaxing definition dataguide provide benefits dataguide associated performance traps 
oem pgmw popular model semistructured data rooted directed graph textual labels edges atomic values leaves 
dataguide oem graph oem database path appears exactly path label path matching label path quite simply adg drops second requirement dataguide paths exist original database 
false positives false negatives concerning existence database paths 
reconsider dataguide uses ffl ui user exploring see paths exist database 
ffl statistics associate statistics store statistics rooted path database 
statistics may superset actual objects reachable 
ffl warnings system may fail warn user certain path expressions exist incorrectly warn valid path 
ffl path expressions expanding superset valid path expressions harmful degrade efficiency mw 
ffl path index index expected exact adg 
database strong dataguide sample oem database strong dataguide propose strategies building effective 
case identify similar portions dataguide merge 
itis merging process introduce superfluous paths 
see requirement merging occur construction post processing step constructing regular dataguide exactly performance bottleneck trying avoid 
discuss general approaches approximation ffl approach hypothesis label paths database similar sets objects reachable paths similar significant intersection 
ffl role matching class approximation decide label paths similar paths regard objects reach 
note related nam gives algorithms finding approximate typings semistructured databases patterns incoming outgoing edges 
comparison concerned extracting set object types goal provide structural summary allows semistructured database system user quickly extract information label paths database 
related choosing effective adg fitting graph schema existing database 
gw specify definition strong dataguide allows store annotations statistics sample values label path dataguide :10.1.1.41.3258
definition strong dataguide target sets 
target set path set objects reachable path 
strong dataguide dataguide label paths object 
label paths dataguide pointto dataguide object target sets label paths exactly original database 
exists exactly strong dataguide database 
shows small database strong dataguide 
notice dataguide pointto target sets database 
path gets dataguide target set different 
algorithm gw creates strong dataguide performing depth exploration database building target sets label paths visited :10.1.1.41.3258
target set stored hash table 
time graph exploration generates target set algorithm checks hash table see target set discovered 
dataguide object created specific target set target set added hash table corresponding dataguide object new object linked dataguide path reach target set 
hand seen target set find corresponding dataguide object add edge dataguide object 
suppose requiring target sets exactly equal equating corresponding dataguide objects allow dataguide paths point object target sets equal 
doing may introduce dataguide paths exist database false positives 
consider depicting actual database stanford database group dbgroup 
database information members projects publications group 
compare target sets dbgroup 
objects dbgroup project objects 
target sets dbgroup project name 
dbgroup name project dbgroup name project fax name fax fax 
database strong dataguide approximate dataguide correspond different strong dataguide object 
note name nota fax 
strong dataguide 
suppose comparing target sets merged corresponding dataguide objects significant intersection 
build sub dataguide union case shown 
performing merge dataguide objects introduce false paths case suggests fax 
object matching approach dataguide approximation introduces interesting issues ffl define sets similar simple criterion remainder consider sets jx yj max jxj jyj threshold ffl dataguide construction algorithm change 
need approximations construction reducing constructed full dataguide 
line approach unfortunately gives importance way traverse original database construct target sets 
example may decide sets similar merge point original sets disappear 
suppose encounter set similar newly created set traversed database differently wand merged 
intuition choosing different traversals severe effect size structure experiments needed verification 
addition may want number times original target participate merge operation effort bound difference target set final object set part 
plan consider possible approaches dealing anomaly 
suppose constructed sub dataguide target set encounter target sety decide similar possible scenarios algorithm simply merge adg objects halt processing know introduce new paths hand nota subset itis necessary continue examining union substructure objects reuse incremental maintenance algorithms gw minimize amount :10.1.1.41.3258
ffl efficiently decide sets similar 
shown efficiently determine sets high percentage elements common 
decision expensive threshold similarity percentage drops potential match quickly 
similarity threshold objects edges false paths strong table object matching dbgroup database experiments experiments focused size accuracy absolute speed construction initial simple untuned tree data structure computing set similarity 
testing approach dbgroup database contains objects edges 
database highly cyclic structure regular islands irregularity incompleteness 
row table shows size strong dataguide 
remaining rows show different adg sizes threshold percentages 
quantifying level approximation challenge 
simple metric counted false paths appear strong dataguide 
depth search determine path false continue count paths prefix course false 
attempted analyze mb subset internet movie database www imdb com highly cyclic semistructured database information movies actors directors producers writers database objects edges 
unfortunately strong dataguide algorithm terminate exhausting resources certain kinds database cycles algorithm generated long paths labels finding repeated target set 
hopeful adg perform better unfortunately problem 
small nearly sets merge 
object matching efficient effective number target sets manageable algorithm expensive certain larger cyclic databases 
role matching approximating dataguides target sets approach merge dataguide objects label paths roles 
formally consider building boolean path merging functions 
function returns true label paths paths point 
discuss possible merging functions 
suffix matching basic suffix matching merging function returns true labels 
approximation restricts adg object label 
shows sample database fragment suffix matching adg shown 
note suffix matching adg essentially representative original stanford dataguides 
suffix matching adg straightforward characterize 
create merging dataguide construction algorithm simpler method build hash table label store information labels follow database 
final step identifying walking whatis essentially representation inside hash table 
construction dbgroup author author favorite dbgroup favorite author author dbgroup favorite author author email email email sample oem database suffix matching adg path cycle matching adg time size database building hash table requires examination paths length 
suffix matching adg effective label consistently identifies type object 
example problematic consider dbgroup database author label identify authors group publications authors members favorite books 
suffix matching adg implies asimov may stanford email addresses 
help alleviate problems natural extension approach match suffixes length described generalize hash table approach length suffixes proposes algorithms building compact representations 
path cycle matching alternative matching suffixes particular length consider different path merging function specifically addresses dataguide performance problems caused cyclic databases 
note thata strong dataguide cycles repeated apath 
larger databases experience shows grow reaching identical target set 
mentioned section willing settle similar target sets 
encode path merging function heuristic see specific label path root assume hit semantic cycle merge paths 
example dbgroup database suppose create path dbgroup 
continue explore path create new adg object dbgroup author encounter dbgroup author assume seeing indicates schema cycle 
dbgroup 
path cycle matching adg shown note approach avoids suffix merging problem combining authors group members favorite authors 
merging function framework path cycle matching function returns true prefix prefix labels 
role matching experiments experiments modified depth object matching algorithm merge adg objects suffixes path cycles 
table shows experimental results types approximations dbgroup movies databases introduced section 
false paths column comparison strong dataguide unable generate movies database 
note suffix approximation produced numerous false paths dbgroup database due author label problem described section 
suffixes length fix problem database approximation objects edges false paths dbgroup suffix dbgroup path cycle movies suffix movies path cycle table role matching database 
interesting fact smallest dbgroup object matching approximation section smaller suffix matching adg due fact thatthe database objects serving multiple roles members authors project members advisors 
expected databases path cycle approximation significantly larger suffix match 
striking results tiny sizes role matching approximations movies database build strong dataguide object matching approximation database 
space possible semistructured databases enormous varied difficult choose best approximation situation 
summarize best worst features strong dataguides described 
ffl strong dataguides strong dataguides accurate path index whichwe 
tree structured acyclic smaller cyclic databases strong dataguides usually perform 
larger cyclic databases better adg path indexing plan explore milo suciu ms proposes graph path indexing structure relaxes dataguide adg label path existing index 
interesting explore approach general dataguide uses depend path existing user interface 
ffl object matching approach approximates dataguide objects having multiple incoming paths 
itis graph trees strong dataguide generated 
adjustable threshold lets administrators tune level approximation 
unfortunately algorithm prohibitively expensive large cyclic databases 
ffl suffix matching best feature suffix matching predictable construction performance 
algorithm biased rooted paths provides information path suffixes may appear database 
unfortunately approximation yield skewed summaries statistics labels different ways database 
increase suffix length match increase accuracy doing algorithm expensive 
ffl path cycle matching problems caused cyclic data paths specific length 
unfortunately itis difficult characterize computationally expensive approach plan investigate matter perform additional experiments 
ultimately best adg may depend database summarizing 
may possible combine techniques path cycle 
interesting avenue research devise strategies efficiently analyze database select approximation quick create reasonably accurate statistical guarantees quality approximation 
haven 
incremental dataguide maintenance algorithms proposed gw may opportunities better performance :10.1.1.41.3258
example adg remain adg database deletion definition 
possibility invalidation incremental maintenance 
adg may quite useful particular regions marked invalid due updates 
regions recomputed batch background entire regenerated percentage invalid regions crosses threshold 
abi abiteboul 
querying semistructured data 
inproceedings theory delphi greece january 
buneman davidson fernandez suciu 
adding structure unstructured data 
proceedings international conference database theory delphi greece january 
broder glassman manasse zweig 
syntactic clustering web 
proceedings sixth international world wide web conference pages april 
bun buneman 
semistructured data 
proceedings sixth acm sigact sigmod principles database systems tucson arizona may 
tutorial 
gw goldman widom :10.1.1.41.3258
dataguides enabling query formulation optimization semistructured databases 
inproceedings third data bases pages athens greece august 
mag mchugh abiteboul goldman quass widom 
lore database management system semistructured data 
september 
ms milo andd suciu index structures inproceedings database theory jerusalem israel january 
mw 
widom 
query semistructured data 
technical report stanford university database group november 
available url www db stanford edu pub papers qo ps 
mw mchugh widom 
compile time path expansion lore 
technical report stanford university database group november 
available url www db stanford edu pub papers re ps 
nam nestorov abiteboul motwani 
extracting schema semistructured data 
inproceedings seattle washington june 
nestorov ullman wiener chawathe 
representative objects concise representations semistructured hierarchical data 
proceedings thirteenth international conference data engineering birmingham england april 
pgmw papakonstantinou garcia molina widom 
object exchange heterogeneous information sources 
proceedings eleventh international conference data engineering pages taipei taiwan march 

