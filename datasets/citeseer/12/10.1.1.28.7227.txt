data warehouse process management panos vassiliadis christoph yannis vassiliou matthias jarke national technical university athens dept electrical computer eng computer science division athens greece yv ece ntua gr informatik information systems rwth aachen aachen germany jarke informatik rwth aachen de gmd fit sankt augustin germany previous research provided metadata models enable capturing static components data warehouse architecture information different quality factors components 
complements modeling dynamic parts data warehouse 
proposed metamodel data warehouse operational processes capable modeling complex activities interrelationships relationship activities data sources execution details 
metamodel complements existing architecture quality models coherent fashion resulting full framework quality oriented data warehouse management capable supporting design administration especially evolution data warehouse 
exploit framework revert widespread belief data warehouses treated collections materialized views 
implemented metamodel language telos metadata repository system conceptbase 
key words data warehousing process modeling evolution quality 
data warehouses dw integrate data multiple heterogeneous information sources transform multidimensional representation decision support applications 
apart complex architecture involving data sources data staging area operational data stores global data warehouse client data data warehouse characterized complex lifecycle 
permanent design phase designer produce maintain conceptual model usually voluminous logical schema accompanied detailed physical design efficiency reasons 
designer deal data warehouse administrative processes complex structure large number hard code deadlines met population data warehouse contingency actions taken case errors 
evolution phase involves combination design administration tasks time passes business rules organization change new data requested users new sources information available data warehouse architecture evolve efficiently support decision making process organization owns data warehouse 
data warehouse components processes data tracked administered metadata repository 
metadata modeling approach enables capturing static parts architecture data warehouse 
linkage architecture model quality parameters form quality model implementation metadata repository conceptbase formally described 
presents methodology exploitation information metadata repository quality oriented evolution data warehouse architecture quality model 
complement results metamodels support tools dynamic part data warehouse environment operational data warehouse processes 
combination data warehouse viewpoints depicted fig 

usage methodology quality architecture processes fig 

different viewpoints metadata repository data warehouse phases data warehouse lifecycle interested stakeholders need information various aspects examined processes supposed implemented necessary affect processes data warehouse 
data warehouse architecture quality metamodels process metamodel assumes clustering entities logical physical conceptual perspectives assigned task answering aforementioned stakeholder questions 
rest section briefly requirements faced phase solutions expected benefits 
design implementation operational data warehouse process labor intensive lengthy procedure covering percent effort expenses data warehouse construction 
metamodel able efficiently support design implementation tasks imperative capture essential aspects data warehouse processes complexity structure relationship involved data 
proposal logical perspective capable modeling structure complex activities capture entities widely accepted workflow management coalition standard 
relationship data warehouse activities underlying data stores taken care terms sql definitions 
simple idea reverts classical belief data warehouses simply collections materialized views 
previous data warehouse research directly assigning na view definition data warehouse table common practice 
abstraction elegant sufficient purpose examining alternative strategies view maintenance incapable capturing real world processes data warehouse environment 
approach deduce definition table data warehouse table outcome combination processes populate 
new kind definition complements existing approaches approach provides operational semantics content data warehouse table existing ones give abstraction intentional semantics 
conceptual process perspective traces reasons structure data warehouse 
extend demand oriented concept dependencies actor dependency model supply oriented notion suitability fits redundancy data warehouses 
extension actor dependency model generalized notion role order uniformly trace person program data store participating system 
implementing metamodel object logic exploit query facilities repository provide support consistency checking design 
deductive capabilities conceptbase provide facilities avoid assigning manually interdependencies activity roles conceptual perspective 
sufficient impose rules deduce interdependencies structure data stores activities 
design implementation warehouse performed controlled environment administration warehouse deal problems evolve ad hoc fashion 
example loading warehouse contingency treatment necessary efficient administration failures 
events knowledge structure process important specific traces executed processes required tracked erroneous situation causes failure progress loading process time failure detected order efficiently resume operation 
failures warehouse loading tip iceberg far problems data warehouse environment concerned 
brings discussion data warehouse quality ability metadata repository trace expressive usable fashion 
face problem proposed process metamodel explicitly linked earlier quality metamodel 
complement linkage mentioning specific quality factors quality dimensions iso standard software implementation evaluation 
identifying erroneous situations unsatisfactory quality data warehouse environment sufficient 
data warehouse stakeholders supported efforts react phenomena 
mentioned suitability notion conceptual perspective process metamodel allows definition recovery actions potential errors problems alternative paths population data warehouse straightforward way runtime 
data warehouse evolution unavoidable new sources clients integrated business rules change user requests multiply 
effect evolving structure warehouse predicted tracing various interdependencies components warehouse 
mentioned conceptual perspective metamodel traces interdependencies participants data warehouse environment persons programs data stores 
prediction potential impacts political structural operational nature supported feature ways 
mention simplest sheer existence dependency links forecasts potential impact architecture warehouse presence changes 
elaborate techniques provided account particular attributes participate interdependencies sql definitions involved processes data stores 
naturally existence suitability links suggests alternatives new structure warehouse 
claim approach suitable kind process focus attention internals data warehouse systems 
organized follows section background motivation 
section describe process metamodel section linkage quality model 
section metadata repository determination operational semantics data warehouse tables evolution purposes 
section related section presents issues research 

background motivation section detail background motivation proposed metamodel data warehouse operational processes 

background metamodel quest formal models quality decision support data warehouse provide high quality data service 
errors databases reported percent range higher variety applications 
report federal loan money lost poor data quality single agency manufacturing companies spend sales wasteful practices service companies 
certain vertical markets public sector data quality option constraint proper operation data warehouse 
data quality problems introduce complexity computational burden loading data warehouse 
dwq project foundations data warehouse quality attacked problem quality oriented design administration formal way sacrificing optimization practical exploitation research results 
subsection summarize results far needed 
basic metamodel data warehouse architecture quality fig 

framework describes data warehouse perspectives conceptual logical physical perspective 
perspective partitioned traditional data warehouse levels source data warehouse client level 
metamodel layer framework gives notation data warehouse architectures specifying meta classes usual data warehouse objects data store relation view metadata layer metamodel instantiated concrete architecture data warehouse involving schema definition indexes table spaces lowest layer fig 
represents actual processes data 
quality metamodel accompanying architecture metamodel involves extension goal question metric approach 
metamodel introduces basic entities quality including quality goals quality queries quality factors metadata layer customized warehouse quality scenarios instance layer captures concrete measurements quality data warehouse 
static description architecture left part fig 
complemented metamodel dynamic data warehouse operational processes 
notice middle fig 
follow level instantiation process metamodel deals generic entities involved data warehouse processes operating entities data warehouse metamodel level process model covers processes specific data warehouse employing instances metamodel entities process traces capture execution actual data warehouse processes happening real world 
goal question metric gqm methodology extended order capture interrelationships different quality factors respect specific quality goal define appropriate lifecycle deals quality goal evaluation improvement 
methodology comprises set steps involving design quality goal evaluation current status analysis improvement situation re evaluation achieved plan 
metadata repository quality goal definition methodology constitutes decision support system helps data warehouse designers administrators take relevant decisions order achieve reasonable quality level fits best user requirements 
client level meta model level dw level models meta data level source level real world conceptual perspective logical perspective physical perspective uses process process meta model process model processes fig 

framework data warehouse architecture quality metamodel quality model quality measurements models encourage templates process quality architecture objects 
especially apparent metadata layer specification architecture process quality objects originally coming designers data warehouse properly specialized data warehouse administrator runtime 
example high level specification chain activities involving extraction checking primary foreign keys final loading warehouse customized specific programs construction warehouse 
practical experience shown kind templates data warehouse architecture tables populated similar programs especially data coming source 
interested reader referred examples templates 

perspectives process model 
process model cf 
fig 
follows perspectives architecture model perspectives process model operate objects respective perspective architecture model 
mentioned different ways view process steps consists logical perspective performed physical perspective steps exist conceptual perspective 
view data warehouse process perspectives central logical part model captures basic structure data characteristics process physical counterpart provides specific details actual components execute process conceptual perspective abstractly represents basic interrelationships data warehouse stakeholders processes formal way 
typically information process executed concerns stakeholders involved everyday process 
information structure process concerns stakeholders manage information relevant reasons structure concerns process engineers involved monitoring evolution process environment 
roles covered data warehouse administration team encounter different schemes 
important issue shown fig 
observe data flow perspectives 
logical perspective modeling concerned functionality activity describing particular activity terms consumption production information 
physical perspective details execution process center modeling 
intriguing part conceptual perspective covering process exists 
answer due necessity reasons case receiver information depends process deliver data suitability reasons case information provider capable providing requested information 

complexity traces conceptual perspective output concept role input concept logical perspective output type activity agent input type physical perspective output datastore input datastore fig 

reasoning perspectives process metamodel data warehouse operational processes quite complex terms tasks executed single process execution coherence contingency treatment process metamodel able capture kind complexity 
fig 
data warehouse refreshment process depicted described 
refreshment process composed activities data extraction history management data cleaning data integration history management update propagation customization 
activities executed different site 
activities interlinked rules denoted arrows real world case study banking kinds knowledge sources determined process 
gray background fig 
implies composition hierarchy set data warehouse operational processes 
fact need isolate small subset processes warehouse common 
metamodel suitable support zooming process structure order achieve functionality 
common reason kind inspection avoid recover erroneous execution runtime 
structure process important specific traces executed processes tracked 
repository able capture kind information gains added value ex ante data warehouse stakeholders design purposes select data warehouse objects necessary performance task ex post people relate data warehouse objects decisions tools facts happened real world 
data dw data area sources abort send message abort send message abort send message abort send message customization update propagation history management data integration data cleaning history management data extraction commit start commit start commit start commit start commit start commit start fig 

data warehouse refreshment process 
data oriented nature operational data warehouse processes data warehouse activities data intensive nature attempt push data sources tables data warehouse client data 
justify claim listing common operational processes data extraction processes extraction information legacy systems data transfer loading processes instantiation higher levels aggregation data warehouse data coming sources lower levels aggregation data transformation processes transformation propagated data desired format data cleaning processes ensure consistency data warehouse data fact data respect database constraints business rules computation processes derivation new information stored data aggregation querying business logic 
deal complexity data warehouse loading process specialized extraction transformation loading etl tools available market 
prominent tasks include identification relevant information source side extraction information customization integration information coming multiple sources common format cleaning resulting data set basis database business rules propagation data data warehouse data 
study merrill lynch etl data cleaning tools cover labor intensive complex part data warehouse processes estimated cost third effort expenses budget data warehouse 
mentions number rise development time data warehouse project 
due complexity long learning curve tools organizations turn house development perform etl data cleaning tasks 

case study example motivate discussion part real world case studies 
organization collects various data annual activities hospitals particular region 
source data example cobol file dealing annual information class beds hospital classes 
yields specific attribute type class beds 
periodically cobol file transferred production system data warehouse stored buffer table data warehouse acting mirror file 
tuples buffer table computation procedures populate fact table inside data warehouse 
materialized views populated aggregate information client tools querying 
loading cleaning computation aggregation cbl id date class class class ins context del context ins ins buffer class info id date class class class populate fig 

motivating example context id edate class id beds id edate sum beds entity type denotes logical schema kinds data stores 
type characterized name set fields 
example assume types cbl buffer class info 
schemata types depicted fig 

atomic activities data warehouse loading cleaning computation aggregation 
loading activity simply copies data cbl cobol file buffer type 
id identifier hospital attributes hold number beds class 
cleaning activity deletes entries violating primary key constraint 
computation activity transforms imported data different schema date converted american european format rest attributes converted combination class id beds 
example tuple buffer table respective tuples class info table dec dec 
aggregation activity produces sum beds hospital year 
combination aforementioned activities captured composite activity populate 

metamodel data warehouse operational processes start presentation metamodel data warehouse operational processes logical perspective show metamodel deals requirements structure complexity capturing data semantics sections 
subsections physical conceptual perspectives 
requirement trace logging fulfilled 
full metamodel fig 

implementation meta database repository meta information data warehouse components 
architecture quality process models represented telos conceptual modeling language representing knowledge information systems 
prototype implemented object oriented deductive database system conceptbase provides query facilities language constraints deductive rules 
implementation process metamodel conceptbase straightforward 
choose follow informal bird eye view model reasons presentation 
relationship domain suitable dependent isa conceptual object role concept wrt conceptual perspective activity role stakeholder 
complexity process structure domain commit abort composite activity isa activity semantics context semantics semantics ins del 
field expression input output fields fields type logical perspective process element isa transition element condition fig 

metamodel data warehouse operational processes commit abort progress state exec parameters timepoint agent application input output data store init abort commit execution trace context physical perspective workflow coalition main entity logical perspective activity 
activity represents unit processed combination resource computer applications 
activities complex captured specialization activity 
gives possibility zooming repository 
components composite activities 
class generalization entities activity 
transition element employed interconnection activities participating complex activity 
attribute captures sequence events 
formally process element characterized attributes name uniquely identify process element extension class 
sequence composite activity characterized context activities interrelated complex dw process context interrelationship captured relevant instance 
semantics denotes activity schedule happens successful termination previous activity commit contingency action required abort 
specialization support scheduling control flow composite activity 
extra functionality supported mechanisms 
enrich link meaning adding condition attribute 
condition logical expression telos denoting firing activity performed condition met 
second specialize class subclasses shown fig 
capturing basic connectives activities split split xor join join xor 
semantics entities ones wfmc proposal 
example activity join xor instance fired join xor activities pointing attribute activity formedness constraint condition join xor met incoming activities commit semantics attribute 
behavior expressed telos appropriate rules 
similarly split denotes point process chain concurrent execution threads initiated split xor denotes point exactly execution thread initiated different alternatives join xor acts rendezvous point concurrent threads execution process flow paused incoming activities completed execution 
fig 

example composite activity commit condition start wfmc proposes ways transition activities 
dummy activities perform routing condition checking modeled simple transition elements 
loop activities captured instances extra attribute condition 
fig 
shows modeling composite activity composed sub activities second fired activity commits boolean condition fulfilled 

transition element 

relationship data type denotes schema kinds data stores 
formally type defined specialization attributes name single name denoting unique type instance 
fields multi value attribute 
words type name set fields exactly relation relational model 
stored datastore physical object representing software manipulate stored data dbms 
attribute detailed description physical perspective 
concept object conceptual perspective providing description type user friendly manner 
concept generalization entities relationships entity relationship model depicted fig 

kind physical data store multidimensional arrays cobol files reports represented type logical perspective 
example schema multidimensional cubes form dn mm di represent dimensions forming primary key cube mj measures 
cobol files example records fields having peculiarities nested records alternative representations 
easily unfold nested records choose alternative representations 
activity data warehouse environment linked set incoming outgoing types 
capture relationship activities data expressing outcome data warehouse process function input data stores 
function captured sql queries extended functions 
activity formally characterized attributes name inherited process element 
input multi valued type attribute modeling data stores activity acquire data 
output single valued type attribute 
attribute models data store report activity outputs data 
output attribute explained attributes semantics single value belonging set insert update delete select captured domain class 
process add delete update data data store 
output messages user captured message type select semantics 
expression single sql query instance class denote relationship output input types possibly functions 
physical agent application program executing activity 
information agents provided description physical perspective 
conceptual description activity 
attribute properly explained description conceptual perspective 
fig 
shows various types processes modeled approach 
activity semantics expression extract load ins upd select transformation ins upd select attri attr cleaning del upd primary key select group having count foreign key select select target kind query computation ins upd kind query messaging sel kind query fig 

examples output attribute particular kinds activities gain insight proposed modeling approach consider example fig 

expressions semantics activity listed fig 

activities append data involved types ins semantics cleaning process deletes data del semantics 
imply implemented employed queries relationship input output activity expressed function declarative language sql 
attribute expression semantics loading cleaning computation ou aggregation ou select id date class class class cbl select id date class class class buffer exists select id date buffer id id date date group id date having count select id european date edate class beds buffer class union select id european date edate class beds buffer class union select id european date edate class beds buffer class select id edate sum beds sum beds class info group id edate fig 

expressions semantics activities example ins del ins ins 
physical perspective logical perspective covers structure process physical perspective covers details execution 
process executed agent application program 
type assigned datastore providing information issues table spaces indexes 
agent formally described follows name uniquely identify agent extension class 
execution parameters multi value string attribute capturing extra information execution agent 
physical communicating agent 
types respective logical activity stored data stores 
multi value attribute capturing execution traces agent 
execution trace entity capturing details activity execution proper agent unique identification number uniquely identify execution trace 
state single value belonging domain class progress commit abort 
init time abort time commit time timestamps denoting timepoints respective events occurred 
context execution trace 
attribute case script agent simply coordinator script execution agents composite activities 
case execution trace agent composite activity defines context execution coordinated agents 
information physical perspective trace monitor execution data warehouse processes 
fig 
sketches trace information successful execution process described fig 

show relationship logical physical perspective linking logical activity physical application program 
agent set execution traces 
see trace composite activity populate init time time execution sub activity commit time completion time activity 
composite activity defines context execution sub activities captured properly populating attribute context 
activity name populate loading cleaning computation aggregation agent name schedule ex exe clean pql comp pql aggr pql execution parameters param par state commit commit commit commit commit init time abort time commit time context fig 

trace information successful execution process example 
conceptual perspective major purpose conceptual perspective help stakeholders understand reasoning decisions architecture physical characteristics data warehouse processes 
modeling approach captures dependency suitability relationships basic conceptual entities facilitate design administration evolution data warehouse 
type logical perspective counterpart concept conceptual perspective 
concept represents class real world objects terms conceptual metamodel entity relationship uml notation 
types concepts constructed fields representing attributes attribute fields 
consider field subtype 
central conceptual entity role generalizes conceptual counterparts activities stakeholders data stores 
class role express interdependencies entities attribute 
activity role stakeholder concept specializations roles processes persons concepts conceptual perspective 
formally role defined follows role 
single value belonging domain class suitable dependent 
wrt multi valued attribute including instances class 
text string attribute documenting extra information relationship roles 
role represents person program data store participating environment process charged specific task responsibility 
instance relationship statement interrelationship roles real world view relates table class info respect attributes id edate beds dependent due loading reasons 
note data processes characterized sql statements interrelationship traced terms attributes 
conceptual perspective influenced actor dependency model 
model actors depend accomplishment goals delivery products 
dependency notion powerful capture relationships context data flow data consumer person data store program depends proper function data providers achieve mission 
extension capture suitability case concepts apply population aggregation concept suitable replace 
understanding occurring errors design decisions architecture data warehouse conceptual perspective exploited various ways 

design data warehouse supported conceptual model serves documentation repository reasons structure data warehouse 
model allows tracing relationships pair persons programs data stores 
minimum query facilities metadata repository interdependencies directly stored cases computed incrementally due transitivity 

administration data warehouse facilitated ways 
conceptual model roadmap quality management warehouse act entry point logical perspective enable user pass relationships roles structure system 
runtime suitability notion obtain solutions potential errors problems alternative paths population data warehouse straightforward way 

data warehouse evolution supported levels 
entity level impact changes architecture warehouse detected sheer existence dependency links 
time existence suitability links suggests alternatives new structure warehouse 
attribute level hand internal changes schema data stores interface software agents detected details relationships data warehouse roles 
example previous statement relationship view table class info interpreted view affected changes table class info especially attributes id edate beds 
detail aforementioned features benefits example 
see fig 
conceptual model consists entities including aggregation process activity role corresponding logical activity aggregation information class date brevity info class fig 
concept corresponding type class info hospital information date brevity hospital info fig 
concept corresponding type administrator administrator brevity admin fig 
user involved stakeholders obvious roles system 
clearly hospital information date aggregation information class date conceptual schema tells aggregation process performs aggregation practice 
due data flow exists strong dependency aforementioned roles 
hospital information date depends aggregation acts data pump 
hospital information date transitively depends information class 
administrator depends information class 
depicted fig 
avoid overloading relationship relies idea political dependency administrator provided data kind information fact data warehouse environment 
id edate beds propagation suitability propagation suitability due id edate beds due id edate beds propagation suitability quality data wrt wrt wrt due info class admin depends aggregation depends depends hospital info user suitable suitable info dept admin fig 

conceptual perspective example depends interesting point shown fig 
idea suitability stated needs users concept hospital information date represents information suitable user 
worth stressing fact entities correspond processes stakeholders data stores affecting uniformity simplicity representation 
notice delve fields conceptual multidimensional aggregation example see requirements engineering specific approach adopt orthogonal modeling 
loading commit cleaning commit computation commit aggregation ins del ins ins cbl buffer class info cbl ins buffer dept info del loading cleaning computation commit commit ins commit ins aggregation fig 

data warehouse evolution 
upper part original problematic configuration 
lower part new configuration 
notion suitability helps support data warehouse evolution 
mentioned redundancy data warehouse suitability attractive 
consider real world case information final view consistent 
simple measurements quality cf 
section indicated cobol file cbl responsible quality problem upper part fig 

original data provider flawed 
different choices possibly resolve problem suitable proved exploitation redundancy 
alternative population scheme view source file cbl initial input 
cbl corresponding data store concept information department date info dept fig 
captures number beds department hospital class beds 
suitability conceptual model data warehouse automatically derived aggregate reasoners algorithms proposed previous research view containment 
stress suitability proposal restricted persons resources uniquely cover entities conceptual model data warehouse 
apart support evolution data warehouse entity level proposed model capable support evolution attribute level 
mentioned relationship roles normally expressed terms fields 
example aggregation depends subset attributes info class id date beds 
attribute class id changes due change type removal renaming final information concept hospital info affected 
hand changes attributes depicted fig 
clearly affect information delivered users 
interesting note political conflict takes place due proposed change 
see removing info class data flow automatically affects stakeholder administrator depends info class 
simple query metadata repository dependents entity info class give warning political vibrations coming decision mention hidden short story just summarized idea quality measurement detailed section 

facilitating data warehouse design consistency checking metadata repository ensure validity representation metadata repository consistency checks performed design data warehouse defining constraints rules views language telos 
view finds types inputs activity stored respective data stores inputs agent executed activity 
isa type constraint exists datastore ac activity ag agent ac input ac ag ag input simple constraints involve local structure process elements 
example split transition elements incoming edge outgoing edge 
timestamps agent consistent state 
repository external programs support execution consistency checking algorithms proposed 

repository support automatic derivation role interdependencies roles conceptual perspective directly assigned data warehouse administrator interested stakeholders 
argue administrative burden number relationships traced repository 
deductive reasoning metadata repository impose simple rules deduce interdependencies structure data stores activities 
example derive dependency relationships exploiting structure logical perspective metadata repository 
interdependencies directly stored cases computed incrementally due transitivity nature 
fig 
show simple rules derive production role interdependencies 
implemented metadata repository 
depender role dependee role wrt activity input types dependent schema input types type populating activity dependent schema type conceptual conceptual dependent set fields wrt 
object object dependee depends transitivity dependency 
process quality fig 

simple rules production role interdependencies section process metamodel linked metamodel data warehouse quality proposed 
complement quality metamodel specific dimensions data warehouse operational processes 
take opportunity stress huge importance politics development lifecycle data warehouse 
see details 

terminology quality management quality metamodel customizes goal question metric approach gqm data warehouse environments 
section adopt metamodel operational processes data warehouse 
object data warehouse linked set quality goals set quality factors fig 

quality goal requirement defined data warehouse objects documented purpose stakeholder interested improve availability source month viewpoint data warehouse administrator 
quality dimensions availability group quality goals factors different categories 
quality factor represents quantitative assessment particular aspect data warehouse object relates quality aspects actual measurements expected ranges quality values 
method measurement attached quality factor measuring agent 
bridge subjective quality goals specific objective quality factors determined set quality queries quality factor values provided possible answers 
queries outcome methodological approach described offers template quality factors dimensions defined metadata level instantiates specific data warehouse architecture examination 
result goal evaluation process set improvements design decisions proposed order achieve expected quality 

quality dimensions factors data warehouse operational processes iso standard iso software implementation evaluation provides general understanding measure quality software systems 
data warehouses stray general guidelines adopt standard starting point 
iso high level quality dimensions functionality reliability usability efficiency maintainability portability 
time budget constraints development data warehouse cause addition implementation effectiveness 
dimensions analyzed sub dimensions fig 

quality quality factors dimension functionality suitability benchmark scores number software requirements met 
accuracy completeness accuracy consistency data final product 
interoperability number modules unable interact specified systems 
compliance number modules compliant application related standards conventions regulations laws similar prescriptions 
security number modules unable prevent unauthorized access accidental deliberate programs data 
reliability maturity frequency failure faults software 
fault tolerance number occasions software unable maintain specified level performance cases software faults infringement specified interface 
recoverability number occasions software unable re establish level performance recover data affected case failure 
time effort needed 
usability understandability percentage acceptance users 
learnability percentage acceptance users 
operability existence time prediction operation number error alerts available built functions etl tasks software efficiency time behavior response times processing times throughput rates 
resource behavior volume extracted loaded data maximum data size software handle 
maintainability analyzability comment percentage readability index 
changeability number logical paths module control flow intersection goto statements size stability changeability testability changeability portability maintainability implementation man hours spent tasks completed 
effectiveness fig 

software quality dimensions proposed quality factors data warehouse environments iso provide specific quality factors 
deal shortcoming appendix gives set quality factors customized case data warehouse operational processes 
detail set possible factors operational data warehouse processes intend come minimal representative set 
set quality factors refined enriched data warehouse stakeholders customized factors 
encourage templates way fits naturally metadata framework propose 

relationships processes quality quality goals describe intentions data warehouse users respect status data warehouse 
contrast process model describes facts current previous status data warehouse activities performed data warehouse 
reason existence process quality goal 
example data cleaning process executed data staging area order improve accuracy data warehouse 
represented interdependency processes quality goals establishing relationship roles data warehouse objects conceptual perspective process model relationship imposed 
shown upper part fig 

role role activity executed agent imposed affects defined measures evidence evaluated fig 

relationships processes quality refers quality dimension refers model capable capturing dependency types mentioned 
task dependencies activity captured assigning appropriate role attribute wrt relationship 
resource dependencies availability resource modeled fields concepts populate attribute 
relationship relates role high level quality goal goal dependencies dealing possibility making condition true real world captured model 
soft goal dependencies specialization goal dependencies evaluation done terms concrete quality factors 
lower part fig 
represents relationship processes quality operational level 
actions agent data warehouse affect expected measured quality factors data warehouse objects 
example data cleaning process affects availability source decreases amount time regular operations 
consequently process affect quality factors average load cpu state available memory defined source 
quality factors concrete representations notion availability relevant quality dimension 
effect data warehouse process confirmed new measurements quality factors 
unexpected effects data warehouse processes detected comparing measurements expected behavior process 
measurement quality particular agents quality factors analyzed 
quality query provides methodological bridge link high level user oriented subjective quality goals low level objective component oriented quality factors 
vocabulary domain quality queries respect process model set data warehouse activities mapped reasons roles conditions agents specific situation 
return hospital example clarify process quality metamodels interplay different perspectives gracefully map 
experiences public sector indicated need total quality data errors allowed information missing 
quality goal quality data delivered users 
purpose example narrow high level goal subgoal consistency produced information 
objects involved quality goal quality dimension consistency role user 
entities quality goal belong conceptual perspective explain chain processes exist bring clean consistent information involved stakeholders 
gqm paradigm start examine situation find current status 
respect elements process model basic question process status naturally correctness dimension activities performing 
question belonging logical perspective involves object logical part process metamodel activities 
applies methodology question directly analyzed consequent questions involving activities loading cleaning computation aggregation populate 
actual quality evaluation produced software done terms concrete measurements 
physical perspective quality factors provide measurements belong measure specific software agents involved case quality factor correctness white box software testing sequel performs kind measurements 
discrimination logical conceptual physical perspectives proven useful quality management data warehouse quality goals express things happened happen data warehouse quality questions try discover happens quality factors express reality measured fig 

top organized seamless integration process quality models mapping objects perspectives 
fig 
see assignment quality factors various objects physical perspective 
assign quality factor software agents quality factors consistency completeness data stores 
simple formula derives quality data stores latest steps data flow quality previous data stores software agents 
take consistency example consistency ds correctness consistency ds ds data store consideration denotes agents having ds output commit semantics ds data store different ds serving input agents role quality goal conceptual achieve consistency information user 
activity quality question logical propagation activity performing properly 
agent quality factor physical correctness software processes performed white box testing fig 

perspectives interrelationships process quality metamodels clearly consistency final view depends consistency previous data stores correctness involved software agents 
arguably naive formula fitted perfectly real world scenario 

exploitation quality modeling repository data warehouse administration different instantiations quality model exploited assist design administration data warehouse 
shown classification quality dimensions factors goals combined existing algorithms address data warehouse design problem selection set materialized views minimum cost fulfill quality goals set involved stakeholders 
far administration warehouse concerned information stored repository may find deficiencies data warehouse 
exe commit clean pql commit comp pql commit aggr pql cbl asc completeness consistency ins del completeness consistency completeness ins ins buffer class info dw database consistency fig 

application quality factors entities example completeness consistency show quality model exploited take query 
returns data cleaning activities decreased availability data store stored measurements 
significance query show implementation data cleaning process inefficient 
isa parameter ds datastore constraint exists qf qf commit time integer qf ds qf ds affects qf affects qf qf qf qf achieved qf achieved query data store parameter return cleaning processes related specified data store 
query returns agents worked specified data store executed measurements quality factors qf qf measured value newer quality factor lower value older quality factor 
attribute agent represents time agent executed 

repository support data warehouse description evolution summarizing discussion far design phase user check consistency design determine violations business logic data warehouse respect simple rules structure data warehouse schema 
administration phase repository discover quality problems 
section continue show metadata repository exploited different ways 
complement perception data warehouses collections materialized views precise operational description content data warehouse tables 
second particular task data warehouse lifecycle data warehouse evolution examined separately order determine possible impacts schema particular table data warehouse changes 

data warehouses just collections materialized views database researchers considered data warehouses collections materialized views organized strata views particular stratum populated views lower stratum 
example papers major database conferences related data warehousing years classified different categories half papers deal view maintenance integration issues 
papers view maintenance focused algorithms updating contents view presence changes sources 
papers related integration targeted production single interface processing distributed heterogeneous data query processing techniques cause resolution conflicts schema level 
observe performed research dedicated extracted loaded process performed 
practical aspects extraction loading conversion processes scheduling declarative process definition data peculiarities source format errors conversions clearly neglected see broader discussion 
summary abstraction treating data warehouses strata materialized views efficiently served purpose investigating issues incremental view maintenance lacks ability accurately describe real content data warehouse tables due fact intermediate processing transformation reorganization information systematically absent research 
modeling approach follows different path treating data warehouse processes class citizens 
semantic definitions data warehouse views assigned directly designer result combining respective definitions data warehouse processes 
argue ways define semantics table data warehouse type defined materialized view previous types data flow 
definition type contain ideally situation physical transformations cleaning exists 
type defined view resulting adoption modeling approach 
case resulting definition explains contents type produced due schema heterogeneity bad quality data 
course kinds definition useful taken consideration previous research 
complement shortcoming rest subsection dedicated showing derive view definitions definitions populating processes 
give intuition difference approaches consider example fig 

ideally express view terms input file cbl relational counterpart table buffer 
simple formula suffices give intentional semantics select id european date edate class class class sum beds cbl hand reality clearly different 
involves identification multiple rows hospital time period restructuring information normalized format loading data view 
full expression capturing operational semantics definitely complex simple sql query denoting intentional semantics 
algorithm extract type definitions input list processes pn set types tm 
process type belonging expression expr 
type say sql expression expr comprised set inserted data expr deleted data expr 
subset source types 
output set sql definitions type initialize expressions 
fori ton case semantics ins expr expr union reduce expr semantics del expr expr union reduce expr case expr expr minus expr reduce expr 
technique represent sql queries self exist case del statements discriminate multiple occurrences table 

reduction techniques applicable reduce query definition compact form 
fig 

algorithm extracting definition type repository construct expressions data warehouse tables respect operational semantics constrain case able construct acyclic partially ordered graph activities produced proper queries conceptbase 
treat set data warehouse activities ordered list 
mutually exclusive concurrent paths partially ordered graph treated different lists execution trace determines list considered time 
furthermore set types belonging set denoting types data sources treated source nodes graph 
rest types derive sql expression existing view reduction algorithms corrected results 
algorithm applicable graphs activities involve updates 
cases update operation considered combination insertions deletions application appropriate function relevant attributes 
results application algorithm example shown fig 

convenience break composite definitions table expressions different lines fig 

example third iteration refers definition table buffer respect definition line 
expression single type computed locally 
expression buffer expr buffer expr select cbl buffer expr select cbl exists select id date cbl id id date date group id date having count buffer expr select cbl minus select cbl exists select id date cbl id id date date group id date having count class info expr class info expr select id european date edate class beds buffer class union select id european date edate class beds buffer class union select id european date edate class beds buffer class expr expr select id edate sum beds sum beds class info group id edate fig 

sql expressions types example 
repository support data warehouse evolution data warehouse constantly evolving 
new sources integrated architecture time time 
new enterprise client data stores built order cover novel user requests information 
time passes users demanding extra detailed information 
due reasons structure processes data warehouse evolve 
problem arises keep data warehouse objects processes consistent presence changes 
example changing definition materialized view data warehouse triggers chain reaction update process evolve refreshment cleaning steps old historical data migrated new schema possibly respect new selection conditions 
data stores data warehouse client level populated particular view examined respect schema content population processes 
approach distinguish kinds impact hypothetical change direct impact change data warehouse object imposes action taken affected object 
example attribute deleted materialized view activity populates changed accordingly 
implicit impact change data warehouse object change semantics object changing structure 
model enables construct partially ordered graph type instance say set types activities population denoted 
set objects population denoted 
recursively compute sets queries metadata repository process definitions 
queries successor relationships defined similar way 
suppose final sql expression type say changes 
spirit rules schema evolution data warehouse environment consider changes abide sql syntax new expression valid select clause extra attribute propagate extra attribute base relations path type belonging activity expression involves extra attribute 
delete attribute select clause type appear select clause processes directly populate respective type types processes type 
case attribute addition impact direct previous objects implicit successor objects 
deletion impact direct categories 
clause strict clause process belonging change identically 
possible new process added simply deleting respective tuples expression 
clause strict subsumption techniques determine types calculate new expression having clause treated fashion 
impact direct previous implicit successor objects 
attribute deleted group clause activity performing group query adjusted accordingly 
consequent activities population chain change attribute deleted 
feasible add aggregating process performing task exactly extra attribute added group clause activity performing group query adjusted accordingly 
check performed recursively types populating particular type 
fails subsumption techniques mentioned clause purpose 
impact direct previous successor objects 
case attribute addition implicit successor objects 
returning example suppose decide remove attribute class table buffer 
change impacts activities belonging previous buffer loading cleaning change accordingly remove class select clause 
activities belonging buffer cleaning computation change remove appearance class query expression 
previous loading select id date class class class cbl cleaning select id date class class class buffer exists select id date buffer id id date date group id date having count computation select id european date edate class beds buffer class union select id european date edate class beds buffer class union select id european date edate class beds buffer class cleaning existence class definition 
fig 

impact removal attribute class table buffer definitions affected activities note cleaning participates previous list 
cycles computations avoided due special care taken definition query class 
fig 
shows impact changes 
attribute class removed select list previous activities body queries list 
due existence implicit impacts provide fully automated algorithmic solution problem sketch methodological set steps form suggested actions perform kind evolution 
similar algorithms evolution views data warehouses 
tool easily visualize evolution plan allow user react 

related section discuss state art practice research efforts commercial tools standards fields process workflow modeling particular focus data warehousing 
standards standard proposed workflow management coalition wfmc includes metamodel description workflow process specification textual grammar interchange process definitions 
workflow process comprises network activities interrelationships criteria staring process information participants invoked applications relevant data 
entities external workflow system environmental data organizational model roughly described 
metadata coalition mdc industrial non profit consortium aims provide standard definition enterprise metadata shared databases case tools similar applications 
open information model proposal led microsoft core metadata types operational data warehousing environment enterprises 
uses uml modeling language basis core model 
divided packages extend uml order address different areas information management 
database warehousing model composed database schema elements package data transformations elements package olap schema elements package record oriented legacy databases package 
database schema elements package contains packages schema elements package covering classes modeling tables views queries indexes catalog connections package covering physical properties database administration database connections data types package standardizing core set database data types 
data transformations elements package covers basic transformations relational relational translations 
deal data warehouse process modeling cover data propagation cleaning rules querying covers detail sequence steps functions mappings employed execution traces data transformations data warehouse environment 
commercial tools basically commercial etl tools responsible implementation data flow data warehouse environment albeit important data warehouse processes 
etl tools flavors engine code generation 
assumes data go engine transformation processing 
code generating tools processing takes place target source systems 
variety tools market mention engine tools microsoft code generation eti 
research efforts workflow modeling 
growing research interest field workflow management 
simplified workflow model tasks control flows building elements 
authors algorithm identifying structural conflicts control flow specification 
algorithm uses set graph reduction rules test correctness criteria deadlock freedom lack synchronization freedom 
model enriched modeling constructs algorithms checking consistency workflow temporal constraints 
authors propose conceptual model language workflows 
model gives basic entities workflow engine semantics execution workflow 
proposed model captures mapping workflow specification workflow execution particular concerning exception handling 
importance paid task interaction relationship workflows external agents access databases 
aspects workflow management explored 
general model transactional workflows 
transactional workflow defined consist tasks composed constructs ordering contingency alternative conditional iteration 
nested workflows introduced 
furthermore correctness acceptable termination schedules defined proposed model 
interesting research results workflow management field electronic commerce distributed execution adaptive workflows 
widely web server workflow literature maintained 
process modeling 
process workflow modeling applied numerous disciplines 
authors propose software process data model support software information systems emphasis control documentation support decision making software design tool integration 
features model captures representation design objects design decisions design tools 
overview process modeling categorization different issues involved process engineering field provided 
proposed framework consists different complementary viewpoints expressed worlds subject world concerning definition process respect real world objects usage world concerning rationale process respect way system system world concerning representation processes capturing specifications system functionality development world capturing engineering meta process constructing process models 
world characterized set facets attributes describing properties process belonging 
data quality quality management 
lot research definition measurement data quality dimensions 
review research literature 
give extensive list quality dimensions data warehouses particular data warehouse relations data 
goal hierarchies quality factors proposed software quality 
example ge model suggests criteria software quality boehm suggests quality factors 
iso suggests basic factors refined quality factors 
comparative presentation models offered software quality model proposed metrics software quality dimensions 
set basic quality dimensions workflows suggested 
variants goal question metric gqm approach widely adopted software quality management 
structured overview issues strategies embedded repository framework 
provide extensive reviews methodologies employed quality management 
research focused specifically etl 
ajax data cleaning tool developed inria deals typical data quality problems object identity problem errors due data inconsistencies matching records 
ajax provides framework logic data cleaning program modeled directed graph data transformations mapping matching clustering merging transformations start input source data 
ajax provides declarative language specifying data cleaning programs consists sql statements enriched set specific primitives express mapping matching clustering merging transformations 
relationship proposal state art research practice 
approach influenced ideas dependency workflow modeling stemming 
far standards concerned workflow model open information model purpose repository serving focused processes ones data warehouse environment 
relationship activity data involves really covered provide extensive information data flow data warehouse 
second separation perspectives clear standards focus structure workflows 
compensate shortcoming employ basic idea actor dependency model add conceptual perspective definition process capturing reasons structure 
extend notion suitability 
far data quality quality engineering concerned taken account previous research proposed quality dimensions factors 

described metamodel data warehouse operational processes techniques design facilitate evolution data warehouse exploitation entities metamodel 
metamodel takes advantage clustering entities logical physical conceptual perspectives involving high level conceptual description linked actual structural physical aspects data warehouse architecture 
approach integrated results previous research data warehouse architecture quality metamodels proposed assuming categorization 
physical perspective proposed metamodel covers execution details data warehouse processes 
time logical perspective capable modeling structure complex activities capture entities workflow management coalition standard 
due data oriented nature data warehouse activities relationship data stores particularly taken care clear expressive semantics terms sql definitions 
simple idea reverts classical belief data warehouses simply collections materialized views 
directly assigning na view definition data warehouse table deduce definition outcome combination processes populate 
new kind definition necessarily refute existing approaches complements provides operational semantics content data warehouse table give abstraction intentional semantics 
conceptual perspective key part approach actor dependency model 
generalize notion role uniformly capture person program data store participating system 
furthermore process metamodel linked quality metamodel facilitating monitoring quality data warehouse processes quality oriented evolution data warehouse 
process design decisions understanding occurring errors architecture data warehouse proposed metamodel exploited various ways 
far design data warehouse concerned simple query facilities metadata repository sufficient provide support consistency checking design 
entities conceptual perspective serve documentation repository reasons structure data warehouse 
second administration data warehouse facilitated ways 
measurement data warehouse quality linkage quality model crucial terms enabling desired functionality everyday warehouse 
evolution supported role interdependencies ways 
entity level impact changes architecture warehouse detected existence dependency links 
time existence suitability links suggests alternatives new structure warehouse 
attribute level hand internal changes schema data stores interface software agents detected details relationships data warehouse roles 
experiences real world cases guide proposed metamodel 
far practical application ideas real world concerned find field etl data warehouse design tools relevant research 
partial evaluation ideas demonstrate efficiency approach developed prototype etl tool 
research follow results various ways 
interesting explore automated ways assist involved stakeholders data warehouse designers administrators populate metadata repository relevant information 
example achieved explained section suitability interrelationships 
specialized tools algorithms assist extending kind support aspects proposed metamodel 
dealt operational processes data warehouse environment 
design processes environment may fit model smoothly 
worth trying investigate modeling design processes capture trace evolution data warehouse 
global view approach definitions data warehouse processes reduce definitions terms sources warehouse architecture 
plan investigate possibility local view approach means reducing process definitions data sources global enterprise model 
local view approach appears suitable environments global corporate view data provides benefits global view approach lacks 
acknowledgments 
research sponsored part european esprit projects dwq foundations data warehouse quality memo mediating monitoring electronic commerce deutsche dfg collaborative research center improve sfb greek general secretariat research technology context project data quality decision support systems french greek cooperation programme plato 
dwq partners contributed progress especially bouzeghoub manfred jeusfeld maurizio lenzerini sellis 
due anonymous reviewers useful comments interesting issues raised 
software 
suite 
available www com baader sattler 
description logics concrete domains aggregation 
proc 
th european conf 
artificial intelligence ecai pp 
brighton uk 
bernstein 
meta data support data transformations microsoft repository 
bulletin technical committee data engineering 
ne 
structural view maintenance data warehousing systems 
journ es bases de donn es es 
boehm 
software risk management 
ieee computer society press ca 
bouzeghoub fabret 
modeling data warehouse refreshment process workflow application 
proc 
intl 
workshop design management data warehouses dmdw heidelberg germany 
fabio casati isabelle environment designing exceptions workflows 
information systems 
casati ceri pernici pozzi 
conceptual modeling workflows 
proc 
th intl 
conf 
object oriented entity relationship modelling er pp 
gold coast australia 
fabio casati stefano ceri barbara pernici giuseppe pozzi workflow evolution 
dke 
calvanese de giacomo lenzerini nardi rosati 
principled approach data integration reconciliation data warehousing 
proc 
intl 
workshop design management data warehouses dmdw heidelberg germany 
chaudhuri shim 
optimizing queries aggregate views 
proc 
th intl 
conf 
extending database technology edbt pp 
avignon france 
chaudhuri krishnamurthy potamianos shim 
optimizing queries materialized views 
proc 
th intl 
conf 
data engineering icde pp 
taipei 
dadam reichert eds 
enterprise wide cross enterprise workflow management concepts systems applications 
gi workshop informatik 
available www informatik de dbis workshop informatik proceedings pdf dayal 
nests trees unified approach processing queries contain nested subqueries aggregates quantifiers 
proc 
th intl 
conf 
large data bases vldb pp 
brighton uk 

politics data warehousing 
www com marc html 

transformation server 
available www com data warehouse information center 
informal taxonomy data warehouse data errors 
available www org errors html evolutionary technologies intl 
eti extract 
available www eti com richard harry wong optimization nested sql queries revisited 
proc 
acm sigmod intl 
conf 
management data pp 
san francisco california 
georgakopoulos hornick sheth 
overview workflow management process modeling workflow automation infrastructure 
distributed parallel databases 
georgakopoulos rusinkiewicz 
workflow management business process automation interorganizational collaboration 
tutorials rd intl 
conf 
large data bases vldb athens greece 
galhardas florescu shasha simon 
ajax extensible data cleaning tool 
proc 
acm sigmod intl 
conf 
management data pp 
dallas texas 
ashish gupta harinarayan quass aggregate query processing data warehousing environments 
proc 
st conf 
large data bases vldb pp 
zurich switzerland 
gupta mumick ross 
adapting materialized views redefinitions 
proc 
acm sigmod intl 
conf 
management data pp 
san jose ca 
rosenberg software quality model metrics identifying project risks assessing software quality proc 
th annual software technology conf utah 
iso intl 
organization standardization 
iso iec information technology software product evaluation quality characteristics guidelines 
jarke jeusfeld rose software process data model knowledge engineering information systems 
information systems 
jarke jeusfeld staudt conceptbase deductive objectbase meta data management 
journal intelligent information systems special issue advances deductive object oriented databases 
jarke jeusfeld vassiliadis architecture quality data warehouses extended repository approach 
information systems 
previous version appeared proc 
th conf 
advanced information systems engineering caise pisa italy 
jarke lenzerini vassiliou vassiliadis eds 
fundamentals data warehouses 
springer 
jarke pohl 
information systems quality quality information systems 
kendall lyytinen eds proc 
ifip working conf 
impact computer supported technologies information systems development pp 
minneapolis 
jeusfeld jarke design analysis quality information data warehouses 
proc 
th intl 
conf 
conceptual modeling er pp 
singapore 
won kim 
optimizing sql nested query 
acm trans 
database systems readings workflow management annotated linked internet bibliography rwth aachen sunsite informatik rwth aachen de kuo lawley liu orlowska 
general model nested transactional workflows 
proc 
intern 
workshop advanced transaction models architecture india 
levy mumick sagiv 
query optimization predicate move 
proc 
th intl 
conf 
large data bases vldb pp 
chile 
alon levy alberto mendelzon yehoshua sagiv divesh srivastava 
answering queries views 
proc 
th acm sigact sigmod sigart symposium principles database systems pods pp 
san jose california 
marjanovic orlowska 
modeling verification temporal constraints production workflows 
knowledge information systems 
mylopoulos borgida jarke koubarakis telos language representing knowledge information systems 
acm transactions information systems 
metadata coalition 
open information model version 
available www com mumick finkelstein pirahesh ramakrishnan 
magic relevant 
proc 
acm sigmod intl 
conf 
management data pp 
atlantic city nj 
microsoft ms data transformation services 
available ww microsoft com sq mccall richards walters 
factors software quality 
technical report rome air development center 
optimization dataflow algorithms nested tree queries 
proc 
th intl 
conf 
large data bases vldb pp 
amsterdam netherlands 

improved unnesting algorithms join aggregate sql queries 
proc 
th intl 
conf 
large data bases vldb pp 
vancouver canada 
nutt sagiv 
deciding equivalences aggregate queries 
proceedings th acm sigact sigmod sigart symp 
principles database systems pods pp 
seattle 
basili representing software engineering models tame goal oriented approach 
ieee transactions software engineering 
pirahesh hellerstein hasan 
extensible rule query rewrite optimization starburst 
proc 
acm sigmod intl 
conf 
management data pp 
san diego california 
jarke jeusfeld vassiliadis lenzerini calvanese bouzeghoub 
data warehouse architecture quality model 
dwq technical report dwq rwth 
available www ece ntua gr dwq ramesh dhar supporting systems development capturing deliberations requirements engineering 
ieee transactions software engineering 
rolland comprehensive view process engineering 
proc 
th intl 
conf 
advanced information systems engineering caise pp 
pisa italy 
orlowska 
applying graph reduction techniques identifying structural conflicts process models 
proc 
th conf 
advanced information systems engineering caise pp 
heidelberg germany 
sch fer 
becker jarke db prism integrated data warehouses knowledge networks bank controlling 
proc 
th intl 
conf 
large data bases vldb cairo egypt pp 

srivastava dar jagadish levy 
answering queries aggregation views 
proc 
nd intl 
conf 
large data bases vldb pp 
bombay india 

enterprise information portals 
enterprise software team 
available www com downloads indepth pdf 
examining data quality 
communications acm 
vassiliadis bouzeghoub 
quality oriented data warehouse usage evolution 
information systems 
previous version appeared proc 
th conf 
advanced information systems engineering caise pp 
heidelberg germany 
vassiliadis 
land data warehousing practical experiences observations researcher 
proc 
nd intl 
workshop design management data warehouses dmdw pp 
stockholm sweden 
vassiliadis 
data warehouse modeling quality issues 
ph thesis 
vassiliadis 
modeling multidimensional databases cubes cube operations 
proc 
th intl 
conf 
statistical scientific database management ssdbm pp 
capri italy 

visual recap quality measurements 
white papers 
available www com download white papers wang 
product perspective total data quality management 
comm 
acm 
wang kon madnick 
data quality requirements analysis modeling 
proc 
th intl 
conf 
data engineering pp 
ieee computer society vienna austria 
workflow management coalition 
interface process definition interchange process model 
document number wfmc tc 
available www wfmc org wang storey firth 
framework analysis data quality research 
ieee transactions knowledge data engineering 
wand wang 
anchoring data quality dimensions ontological foundations 
communications acm 
yu 
strategic modeling enterprise integration 
proc 
th world congress intl 
federation automatic control ifac pp 
beijing china 
yu mylopoulos 
understanding software process modelling analysis design 
proc 
th intl 
conf 
software engineering icse pp 
sorrento italy 
appendix appendix list quality factors software involved data warehouse environment 
organize presentation quality factors lifecycle stage introduced 
examined lifecycle stages requirements analysis system design implementation testing including quality software module management administration 
stages list involved stakeholder products depicted header table 
tables comprises columns leftmost describes high level quality dimension middle column shows related quality factors dimension rightmost column suggests measurement methods quality factor 
full presentation including generic quality factors applicable kind software module data warehouse specific quality factors 
gray background 
provide list quality factors relied existing research practitioner publications market tools personal experiences 
designer generic requirements quality dw process consistency requirements analysis output requirements document role conceptual model ambiguity number weak phrases number optional phrases completeness number announced added understandability document structure depth breadth readability index volatility count changes count requirements lifecycle stage change traceability number software requirements traced system requirements number software requirements traced code tests consistency number contradictions conceptual schema data stores number contradictions enterprise model concepts constraints output designer system design activity model dw design quality completeness number modules specified terms data number modules care trace management number modules care error reporting consistency number modules outside flow sequence number contradictions logical schema data stores number contradictions physical schema data stores output programmer testing software cases testing effectiveness correctness reason error time finding errors time error fixes cumulative error curve code location fault criticality error traceability traceability number empty cells traceability matrix programmer functionality implementation suitability reputation purchased sw output software module agent score benchmark market share stock price comments users traceability number empty cells traceability matrix requirements roles activities tests sw modules number enterprise rules constraints tracked cleaning software accuracy data quality see data completeness numbers loaded records number expected records number null values column number rows selectivity extracted rows data accuracy percentage involved columns performance statistic check number rows contradictory real world values data consistency number rows violations number rows number duplicate rows number rows number rows violating business rules number rows number groups tables inconsistent granularity information number rows different codes object number rows number rows codes different objects number rows number rows having unknown codes number rows interoperability number modules unable interact specified systems 
compliance number modules compliant application related standards conventions regulations laws similar prescriptions 
security number modules unable prevent unauthorized access accidental deliberate programs data 
reliability maturity number error alerts time period fault tolerance number occasions software unable maintain specified level performance cases software faults infringement specified interface 
recoverability number occasions software unable re establish level performance recover data affected case failure 
time effort needed 
usability understandability percentage acceptance users 
learnability percentage acceptance users 
operability existence time prediction operation number error alerts time period number built transformations extraction transformation sw number constructed transformations extraction transformation sw software efficiency time behavior throughput maximum average propagation time available time window availability window source estimated response time extraction source extraction frequency source resource behavior history duration dw store volume data extracted integrated max data size software handle required data size maintainability analyzability comment percentage readability index changeability stability testability number logical paths module number groups code having entry exit point number paths number control variables total number operators operands discrete number operators operands number control flow intersections number lines dead code number data items referenced number goto commands number entry points module having entry points number exit points module having exit points number recursions size correlation complexity size portability maintainability manager implementation effectiveness administrator administration operability output management observation process resource usage staff hours spent life cycle activities completion rates tasks completions planned task completions output dw source administration activities administration dw availability sw efficiency source availability sw efficiency error reporting sw reliability 
