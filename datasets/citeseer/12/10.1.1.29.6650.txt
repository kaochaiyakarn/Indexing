correct schema transformations qian computer science laboratory sri international qian csl sri com develop formal basis correct schema transformations 
schemas formalized data types correct schema transformations formalized information preserving signature interpretations 
formalism captures transformations schema components making possible transform uniformly constraints queries structures 
addition formalism captures schema transformations different data models easily data model 
compared hull notion relative information capacity notion information preservation captures schema transformations natural fewer schema transformations unnatural 
lays foundation transformational framework schema manipulations 
schema transformations removing anomalies redundancies schema restructuring translating schema possibly different data model constitute major activities schema integration 
central schema transformations need compare information content schemas transforming schema information content source schema preserved 
schema usually consists components set structures set constraints structures set operators structures 
constraints capture invariant properties common instances schema operators provide vocabulary formulating queries schema 
schema transformations focused structure component schema see chapter summary existing approaches 
classic example schema transformations decomposition relation lossless join preserves functional dependencies section 
constraints limited functional dependencies relational model schema transformations expressed conjunctive queries klug gave algorithm deriving constraints target schema source schema 
constraints supported part department defense advanced research projects agency air force rome laboratory contracts part national science foundation ecs 
limited functional inclusion dependencies relational model optimization rules remove redundant relations attributes constraints schema 
general problem constraint operator transformations remains open 
constraints capture important information schema schema transformations constraint component incomplete best 
operator component impossible transform queries source schema target schema structure component transformed correctly 
major problem existing schema transformations limited schemas data model cases relational model dialect entity relationship model 
example approaches schema integration assumption schemas integrated formulated canonical data model see survey 
pointed schema transformations schemas different data models usually specified ad hoc mapping rules formalisms guarantee correctness terms information preservation equivalence 
correct translation studied entity relationship schemas relational schemas notion schema equivalence 
primitive forms cardinality constraints translated query translation considered 
customary treat schema logical theory instances schema models theory 
constitutes information content schema 
bar hillel carnap semantic information carried logical theory schema characterized set sentences constraints logically implied axioms theory relative language system structures operators 
components schema contribute information content 
turn information content structure component schema characterized set instances schema 
words schema capable storing information instances structures constraints operators 
schema transformations uses ad hoc limited measures comparing information content schemas 
example schema contains information instance instance second 
systematic study done hull introduced notion relative information capacity comparing information content relational schemas 
formal basis schema containment schema equivalence object models entity relationship models 
hull notion extended take account update semantics 
constraint operator components schemas largely ignored studies hull observed structure component relational schema contain information 
fact difficult generalize notion relative information capacity deal constraints operators 
example shown information capacity schema increased reducing capacity storing constraints claimed information capacity schema remains add new operators surrogate key attributes 
traditionally schemas formalized structural approach describes structure component schema fixed set type constructors 
type constructors limited simple ones stored manipulated directly tuples sets 
beeri advocated behavioral approach theory data type adt algebraic specification see survey describes uniformly components schema set adt specifications 
behavioral approach additional advantage supporting complex extensible data models 
adopt behavioral approach schema specification develop formal basis correct schema transformations solves problems discussed 
particular schemas formalized adts section schema transformations formalized signature interpretations section correct schema transformations formalized information preserving signature interpretations section 
section correct schema transformations generalized support hidden symbols 
compare notion information preservation hull notion relative information capacity section solve open problem posted 
formalism section show correctness common schema transformations proposed literature lossless join decomposition redundancy removal schema integration schema translation 
special kind schema transformations schema refinements describe efficient schema implementations 
section provides concluding remarks 
schemas definitions borrow definitions order sorted signatures algebras standard data type literature 
partially ordered set poset pair hs set partial ordering set finite sequences members partial ordering extended hs hs iff order sorted signature sigma triple hs omega set sort symbols hs poset omega family finite sets omega function symbols satisfy monotonicity condition omega omega imply write denote omega omega hi set constant symbols ary function symbols sort example signature bool containing sort bool constant symbols true false 
logical connectives considered function symbols bool omega bool set predicate symbols sort assume infix predicate symbol omega hs si bool bool bool simply 
signatures sigma hs omega sigma hs omega say sigma sigma 

implies 
omega omega say sigma sigma union compatible 
identical 
omega omega implies signature sigma hs omega sigma terms defined inductively sorted composition sorted variables function symbols sorted quantifiers omega gamma sigma formula sigma term sort bool sigma sentence closed sigma formula 
sigma hs omega signature 
order sorted sigma algebra consists indexed family carrier sets fa function omega omega omega hv theta delta delta delta theta vn 
implies 
omega omega imply equals schema gamma pair sigma phii sigma hs omega signature phi set sigma sentences called axioms 
sort assume equality axioms reflexivity symmetry transitivity substitutivity phi 
gamma instance sigma algebra satisfies phi 
semantics gamma set gamma instances 
sigma sentence gamma constraint denoted gamma logical consequence gamma axioms 
set gamma constraints forms gamma theory gamma query sigma formula 
examples schema gamma sigma phii signature sigma specifies structure operator components gamma axioms phi specify constraint component gamma 
typical example specification schema set takes atom parameter schema sort atom set atom def sort set atom subsort atom set atom function fg set ffi atom set set axiom ffi fg ffi ffi ffi ffi ffi ffi ffi 
subsort declaration states atom set size 
constant fg denoting empty set insertion function ffi inserting atom set 
second example library schema specification object model 
book def extend string sort book function title book string isbn book string axiom isbn isbn author def extend string integer sort author function name author string year birth author integer library def extend book author 
keyword extend introduces list imported schemas 
classes objects books authors 
books attributes title isbn authors attributes name year birth 
addition books unique isbn values 
third example library elaborate schema specification complex object model 
library def extend library set book function author author set book axiom author fg author 
compared library authors library additional set valued attribute denoting set books author 
additional axioms state author book book author 
fourth example library alternative schema specification entity relationship model 
library def extend bool library function authorship book author bool axiom authorship authorship 
compared library library relationship relating books authors 
additional axioms state cardinality constraints relationship author book book author 
schema transformation sigma hs omega signature 
denote sigma set sigma terms sort list free variables sorts definition notion theory interpretation section 
sigma hs omega signature 
signature interpretation oe sigma sigma pair hffi 
ffi map implies ffi ffi 
family maps omega sigma ffi ffi ffi hv denotes hffi ffi write oe ffi oe ffi oe 
extend oe sigma formulas follows 
sigma formula oe denotes sigma formula resulted replacing term oe omega omega sigma ffi ffi 
noticed notion signature interpretation general notion signature morphism commonly seen algebraic specification literature function symbol source signature mapped arbitrary term just function symbol target signature 
sigma hs omega sigma hs omega signatures oe sigma sigma signature interpretation 
map oe sigma algebras sigma algebras induced oe follows 
sigma algebra construct sigma algebra assigning value oe sort symbol assigning value oe function symbol omega gamma gamma sigma phii gamma sigma phi schemas 
schema transformation oe gamma gamma signature interpretation oe sigma sigma gamma constraints gamma queries sigma formulas oe transforms structures operators gamma constraints queries gamma 
general notion signature interpretation constructs source schema transformed combinations constructs target schema 
example schema transformation book author 
author title 
name isbn 
int str year birth int str unary function symbol schema string converts integer string 
book axiom transformed author sentence int str year birth int str year birth argued section components instances schema contribute information content 
schema transformation preserves structures operators source schema 
sufficient preserve constraints instances source schema 
example schema transformation preserve constraints book book axiom mapped author constraint 
inverse schema transformation 
book name 
title year birth 
str int isbn str int unary function symbol schema string converts string integer preserve instances author author instance containing authors name different years birth correspond book instance 
ease presentation notion signature interpretation general notion theory interpretation sort symbol source signature mapped sort symbol target signature 
hard generalize notion signature interpretation allow sort symbol mapped arbitrary sort expression 
correct schema transformation constraint preserving transformation gamma sigma phii gamma sigma phi schemas oe gamma gamma schema transformation oe induced map sigma algebras sigma algebras 
say oe constraint preserving gamma axiom oe gamma constraint 
theorem schema transformation oe constraint preserving iff oe maps gamma instance gamma instance 
proof suppose oe maps gamma instance gamma instance oe constraint preserving 
gamma axiom phi gamma oe 
gamma instance oe satisfied equivalently oe satisfied 
oe satisfied oe gamma instance 
way constructed oe satisfied contradiction 
suppose oe constraint preserving gamma instance oe gamma instance 
gamma axiom satisfied apparently oe satisfied way constructed oe satisfied contradiction 
constraint preservation relatively straightforward prove need show schema transformation preserves axioms source schema 
constraint preservation sufficient preserve instances source schema gamma instance oe gamma instance example schema transformation section 
form constraint preserving schema transformation schema extension schema transformation consists identity maps gamma axiom gamma constraint 
corollary schema extension constraint preserving 
examples section library fact transformed library library schema extension 
complicated example constraint preserving schema transformation suppose extend library library library def extend library set book function author author set book axiom author 
schema transformation library library maps author author constraint preserving library axioms mapped library constraints author fg author follow axioms library library 
instance preserving transformation gamma sigma phii gamma sigma phi schemas oe gamma gamma schema transformation oe induced map sigma algebras sigma algebras 
say oe instance preserving gamma instance gamma instance oe theorem schema transformation oe instance preserving iff gamma constraint sigma sentence oe gamma constraint 
proof suppose gamma sigma sentence gamma oe oe 
set sigma algebras images gamma instances oe gamma instance 
suppose sigma sentence theory satisfied gamma theory satisfied sigma algebra oe satisfied gamma instance 
means gamma oe contradiction 
gamma instance meaning oe instance preserving contradiction 
suppose sigma sentence gamma oe gamma oe instance preserving 
gamma instance satisfied equivalently satisfied 
oe gamma instance oe way constructed oe oe satisfied equivalently oe satisfied oe satisfied contradiction 
theorem tells schema transformation instance preserving equivalent inverse preserves constraints target schema 
inverse schema transformation exist computable theorem provide straightforward way proving instance preservation 
theorem schema transformation oe instance preserving iff oe maps non gamma constraint non gamma constraint 
proof suppose oe maps non gamma constraint non gamma constraint 
sigma sentence gamma oe gamma constraint 
oe instance preserving theorem 
suppose oe instance preserving 
theorem gamma constraint sigma sentence gamma oe 
sigma sentence gamma oe gamma constraint 
theorem tells schema transformation instance preserving equivalent preserves non constraints source schema 
set non constraints schema infinite theorem provide way proving instance preservation 
fact known ways proving instance preservation 
instance preservation sufficient preserve constraints source schema gamma instance oe gamma instance meaning oe constraint preserving theorem 
example schema transformation section 
form instance preserving schema transformation schema reduction schema transformation consists identity maps gamma axiom gamma constraint 
corollary schema reduction instance preserving 
example suppose define library follows library def extend library set book function author author set book axiom authorship author 
schema transformation library section library consists identity maps instance preserving library theory weaker library theory 
information preserving transformation argued section correct schema transformation preserve components instances source schema 
schema transformations preserve structures operators constraint preserving schema transformations preserve constraints instance preserving schema transformations preserve instances definition correct schema transformations 
gamma sigma phii gamma sigma phi schemas oe gamma gamma schema transformation 
say oe information preserving constraint preserving instance preserving 
oe information preserving say gamma contained gamma denoted gamma gamma gamma gamma gamma gamma say gamma gamma equivalent denoted gamma gamma example suppose define library follows library def extend bool library set book function authorship book author bool author author set book axiom authorship author author fg author 
schema transformations library section library back consist identity maps information preserving library library 
forms information preserving schema transformation instance preserving schema extension constraint preserving schema reduction 
signature sigma hs omega function symbol omega definition sigma atomic formula sigma sigma term free variables sorts schema gamma sigma phii form schema gamma sigma phi sigma sigma ffg phi phi ff fg 
schema extension gamma gamma schema extension definition 
theorem schema extension definition produces equivalent schemas 
proof oe schema extension gamma gamma non gamma constraint non gamma constraint oe instance preserving theorem 
oe information preserving gamma gamma schema transformation gamma gamma maps symbols 
maps gamma axiom tautology gamma axioms constraint preserving theorem 
maps non gamma constraint non gamma constraint instance preserving theorem 
information preserving gamma gamma 
example extension library section library section definition 
library library 
schemas hidden symbols schema hidden symbols gamma triple sigma pi phii sigma phii schema pi sigma signature 
symbols pi hidden symbols sigma gamma pi visible 
semantics schema hidden symbols set restrictions sigma phii instances sigma gamma pi 
gamma query sigma gamma pi formula 
example recall author names unique specification library section 
create surrogate key author objects hidden symbols visible users querying 
author def extend symbol string integer sort author function id author symbol name author string year birth author integer hidden sort symbol hidden axiom id id 
gamma sigma pi phii gamma sigma pi phi schemas hidden symbols 
schema transformation oe gamma gamma signature interpretation oe sigma gamma pi 
sigma gamma pi 
induced map oe map sigma gamma pi algebras sigma gamma pi algebras 
example schema transformations author author back consist identity maps information preserving 
author author notice contrary claim schemas equivalent function symbol id visible author schema transformations author author map id way preserves axiom author theorem instance preserving schema extension hidden symbols produces equivalent schemas 
proof suppose gamma extended gamma hidden symbols instance preserving schema transformation 
obviously gamma gamma gamma instance restricted sigma gamma pi gamma instance gamma instance gamma instance restricted sigma gamma pi due instance preservation gamma gamma 
relationship hull notion hull introduced progressively restrictive measures information content schemas 
briefly define measures relative information capacity characterize relationships notion information preservation 
solve open problem posted 
schema gamma sigma phii relational function symbol sigma constant predicate 
notice assume schemas section relational 
relative information capacity gamma sigma phii gamma sigma phi schemas 
domain gamma instance denoted dom union carrier sets 
dom set values containing domains gamma instances gamma instances dom 

permutation dom bijective map dom identical 
map gamma instances gamma instances generic commutes permutation gamma instance 

map gamma instances gamma instances internal dom dom gamma instance gamma sigma phii gamma sigma phi schemas 
map gamma instances gamma instances map gamma instances gamma instances 
gamma dominates gamma ffi identity map gamma instances 

gamma dominates gamma absolutely denoted gamma gamma abs gamma dominates gamma 
gamma dominates gamma internally denoted gamma gamma int finite dom gamma dominates gamma internal 
gamma dominates gamma generically denoted gamma gamma gen finite dom gamma dominates gamma generic consistent hull definition calculus expressions contain constants constraints general key dependencies constants constrained unique name axioms 
definition simpler limited relational schemas 
definitions equivalent relational schemas 

gamma dominates gamma denoted gamma gamma calc schema transformations oe gamma gamma gamma gamma induced maps oe respectively gamma dominates gamma oe 
hull shown calculus dominance implies generic dominance turn implies internal dominance turn implies absolute dominance 
implication generic internal dominance strict schemas contain certain kinds constraints key dependencies 
remains open implications calculus generic dominance internal absolute dominance strict 
relationship relative information capacity gamma sigma phii gamma sigma phi schemas 
theorem gamma gamma calc gamma gamma proof oe gamma gamma gamma gamma schema transformations induced maps oe respectively gamma dominates gamma oe 
definition calculus dominance oe maps gamma instance gamma instance oe constraint preserving 
gamma instance gamma instance oe oe instance preserving 
oe information preserving 
theorem gamma gamma gamma gamma abs 
proof oe gamma gamma information preserving schema transformation induced map oe oe constraint preserving oe maps gamma instance gamma instance 
oe gamma instance gamma instance oe map gamma instances gamma instances oe ffi identity map gamma instances 
gamma dominates gamma oe 
exist schemas gamma gamma gamma gamma gen int abs gamma gamma gamma gamma calc 
example consider schemas 
schema def sort city axiom schema def sort town 
schema instance set containing cities schema instance singleton set 
schema logically stronger schema 
map schema instances schema instances map schema instance identical schema instance 
hand map schema instances schema instances definition equivalent hull definition relational calculus equivalent order predicate calculus language relational schemas 
map schema instance containing towns identical schema instance map singleton schema instance schema instance city assigned set fsf lag 
maps fsf lag generic ffi identity map schema instances conclude schema schema gen int abs 
schema transformation schema schema map city town 
function symbol schema city mapped town image schema axiom schema constraint 
mapped equivalence relation town image schema axiom true singleton schema instances 
case schema transformation constraint preserving schema schema 
example tells hull notion find dominance relationships schemas naturally related dominance relationships schema capable storing information reduce capability storing constraints 
notion rules unnatural dominance relationships 
exist schemas gamma gamma gamma gamma gamma gamma abs gamma gamma int gen calc 
example consider schema 
schema def extend symbol string bool function symbol string bool axiom schema def extend string bool function string bool schema transformation schema schema maps schema term 
words projection non key column 
easy show schema transformation information preserving schema schema 
map schema instance schema instance invent distinct values size key column arbitrarily large schema instances map internal fixed finite schema schema int gen calc 
example tells natural dominance relationships schemas captured hull notion capability storing information non keyed schema increased adding key column 
notion captures natural dominance relationships 
examples show calculus dominance strictly restrictive notion turn strictly restrictive absolute dominance 
notion comparable generic internal dominance 
consequence solved open problem posted hull corollary calculus dominance strictly restrictive generic dominance 
internal dominance strictly restrictive absolute dominance 
applications lossless join decomposition consider example page schemas schema def extend string bool function string string string string bool axiom schema def extend string bool function string string bool string string string bool axiom 
schema transformation schema schema map schema term 
schema transformation schema schema map schema term map schema term 
hard verify schema schema 
schema bcnf schema considered better schema design 
redundancy removal schemas gamma sigma phii gamma sigma phi gamma gamma say gamma redundant gamma sigma contains fewer simpler signature symbols sigma phi contains weaker axioms phi 
case replace gamma gamma achieve concise representation information 
consider schemas relational model schema def extend string bool function string string string bool axiom 
schema def extend string bool function string string bool string string string bool axiom 

schema transformation schema schema map schema term 
schema transformation schema schema map schema term 
hard verify schema schema 
compared schema schema redundancy third column redundantly stored third column replacing schema schema removes redundancy 
schema transformation proposed literature 
schema integration gamma sigma phi schemas sigma sigma union compatible integrate schemas step identify semantic relationships 
suppose semantic relationships expressed sigma possibly additional signature sigma consist set sigma sigma sentences phi integration gamma schema gamma sigma phii sigma sigma phi phi gamma schema integration viewed applying information preserving schema transformations union component schemas semantic relationships improve quality integrated schema remove redundancy 
consider schema specification similar library section library def extend library set author function authored book set author axiom authored fg authored 
suppose integrate library library semantic relationship expressed author authored intuitively schemas contain information represented differently 
union redundant relationship authors books represented multi valued maps inverses 
hard verify union library library semantic relationship equivalent library section 
library taken integration 
schema transformation proposed literature 
schema translation schemas gamma gamma schema transformation oe gamma gamma translation gamma gamma gamma gamma schema translation different data models difficult data model schema formalism really blurs difference data models data models differ data types support 
schema specified mixture data models library section combination complex object entity relationship models 
example schema translation suppose extend library section additional axiom name name translated schema relational model library def extend string integer bool sort function string bool integer bool bool axiom schema transformation book 
isbn 
title 
author 
name 
year birth 
authorship 
notice library axioms images title year birth total evaluate singleton sets 
notice inclusion dependencies columns columns respectively satisfied automatically sort constraints library axioms 
similar schema translations entity relationship model relational model proposed 
schema refinement schemas gamma gamma schema transformation oe gamma gamma refinement gamma gamma gamma gamma schema refinements increase information content schemas refined 
advanced data models provide powerful abstractions schema specifications concise semantically clear 
added expressive power comes price known method infer simple efficient storage implementations abstractions abstractions longer single implementation efficient entire query space 
example set valued attribute implemented relation list bit vector 
implementation decisions encoded schema refinements 
guided characteristics typical queries schema refinements applied derive efficient implementations schemas 
example consider specification schema seq seq atom def sort seq atom subsort atom seq atom function seq ffl atom seq seq axiom ffl ffl ffl 
imagine seq range equality predicate seq seq bool sequences range equal iff contain set elements 
hard show schema transformation set section seq 
seq fg 
ffi 
ffl 
yg information preserving 
consider library section 
set valued attribute authored accessed traversing value apply schema transformation refine sequence valued attribute 
implementation contains information query author book example 
developed formal basis correct schema transformations 
particular schemas formalized adts schema transformations formalized signature interpretations correct schema transformations formalized information preserving signature interpretations 
compared existing approaches formalism captures transformations schema components making possible transform uniformly constraints queries structures 
addition formalism captures schema transformations different data models easily data model 
compared detail notion information preservation widely correctness criteria hull notion relative information capacity 
notion strictly restrictive calculus dominance strictly restrictive absolute dominance incomparable generic internal dominance 
notion captures schema transformations natural fewer schema transformations unnatural hull notion 
solved open problem hull notion calculus internal dominance respectively strictly restrictive generic absolute dominance 
lays foundation transformational framework schema manipulations 
popular transformations common adts encoded transformation rules proven correct 
schemas specified common adts simplified restructured translated applying rules repeatedly 
apply rules refine schema specifications efficient storage representations 
examples shown correctness common schema transformations proposed literature 
acknowledgment author richard hull valuable discussions comments helped improve presentation 
abiteboul hull 
restructuring hierarchical database objects 
theoretical computer science 
bar hillel carnap 
outline theory semantic information 
bar hillel editor language information chapter pages 
addison wesley 
batini lenzerini navathe 
comparative analysis methodologies database schema integration 
acm computing surveys december 
beeri 
theoretical foundations oodb personal perspective 
ieee data engineering bulletin june 
beeri 
new data models languages challenge 
proceedings eleventh acm symposium principles database systems pages 
buneman davidson 
theoretical aspects schema merging 
proceedings third international conference extending database technology 
casanova braga 
optimization relational schemas containing inclusion dependencies 
proceedings fifteenth international conference large data bases pages 
casanova vidal 
sound view integration methodology 
proceedings second acm symposium principles database systems pages 
enderton 
mathematical logic 
academic press 
goguen meseguer 
order sorted algebra equational deduction multiple inheritance overloading exceptions partial operations 
theoretical computer science 
hull 
relative information capacity simple relational database schemata 
siam journal computing august 
hull yap 
format model theory database organization 
journal acm july 
klug 
calculating constraints relational expressions 
acm transactions database systems september 
markowitz shoshani 
representing extended entity relationship structures relational databases modular approach 
acm transactions database systems september 
miller ioannidis ramakrishnan 
schema equivalence heterogeneous systems bridging theory practice 
information systems january 

nicolas gallaire 
data base theory vs interpretation 
gallaire minker editors logic databases pages 
plenum press 
rosenthal reiner 
tools transformations rigorous practical database design 
acm transactions database systems june 
spaccapietra parent 
view integration step forward solving structural conflicts 
ieee transactions knowledge data engineering april 
tsichritzis lochovsky 
data models 
prentice hall 
ullman 
principles database knowledge base systems volume 
computer science press 
vidal winslett 
preserving update semantics schema integration 
proceedings third international conference information knowledge management pages 
wirsing 
algebraic specification 
van leeuwen editor handbook theoretical computer science 
vol 
formal models semantics chapter pages 
mit press elsevier 

