ieee computer volume number november pages cover article 
lattice access control models ravi sandhu center secure information systems department information software systems engineering george mason university fairfax virginia email sandhu gmu edu voice fax objective article give tutorial lattice access control models computer security 
begins review denning axioms information ow policies provide theoretical foundation models 
structure security labels military government sectors resulting lattice discussed 
followed review bell lapadula model enforces information ow policies means simple security properties 
noted information ow covert channels scope access controls 
variations bell lapadula model considered 
discusses biba integrity model examining relationship bell lapadula model 
reviews chinese wall policy arises segment commercial sector 
shown policy enforced lattice framework 
keywords security access control lattice model con dentiality integrity partially supported national science foundation ccr national security agency contract mda 
accepted publication ieee computer provided early dissemination contents 
need information security recognized advent rst multi user computer systems 
need signi cant computer systems evolved isolated mainframes guarded doors interconnected decentralized open systems 
objective information security divided separate interrelated areas follows con dentiality secrecy concerned disclosure information integrity concerned modi cation information availability concerned denial access information 
objectives arise practically information system 
example payroll system con dentiality concerned preventing employee nding boss salary integrity concerned preventing employee changing salary availability concerned ensuring printed time 
similarly military command control system con dentiality concerned preventing enemy determining target coordinates missile integrity concerned preventing enemy altering target coordinates availability concerned ensuring missile get launched order 
lattice access control models developed deal information ow computer systems 
information ow clearly central con dentiality 
see applies integrity extent 
relationship availability best 
models primarily concerned con dentiality deal aspects integrity 
basic area done 
models implemented number systems driven needs defense sector 
theory concepts applicable situation information ow concern 
see policies unique commercial sector concerns 
lattice access control essential ingredients computer security understand today 
discuss number models developed context examine underlying theoretical conceptual foundations 
information flow policies information ow policies concerned ow information security class 
system information ows object 
models discussing treat object unde ned primitive concept 
object informally de ned container information 
typical examples objects les directories operating system relations tuples database 
information ow typically controlled assigning object security class called object security label 
information ows object object information ow security class security class henceforth speak information ow security class security class reader visualize information ow object labeled object labeled concept information ow policy formally de ned denning follows 
de nition information flow policy information ow policy triple sc sc set security classes sc sc binary ow relation sc sc sc sc binary class combining join operator sc 
understood components information ow policy xed change time 
note de nition allows objects created destroyed dynamically expect useful systems 
security classes created destroyed dynamically 
convenient notation ow relation means information ow write 
mean information ow words information ow security class security class policy 
appropriate call relation may ow ow connotation indicated ow permitted policy 
chosen retain original terminology 
similarly notation join operator means join operator speci es label information obtained combining information security classes 
tells objects contain information security classes labeled security class trivial example information ow policy information ow allowed security class di erent security class 
note information ow security class prevented allowed 
information contained object ows object resulting information ow security class object 
trivial policy isolated security classes formally stated follows 
example isolated classes sc fa ang ai ai ai ai ai ai 
aj ai aj unde ned 
simplest example non trivial information ow policy occurs just security classes called high low ows allowed excepting high low 
words high information sensitive low information 
formal statement 
example high low policy sc fh lg equivalently notation 
join operator de ned follows policy represented hasse diagram gure 
ow relation understood directed upwards gure 
re exive ows implied explicitly shown 
hasse diagrams gure represent information ow policies discussed 
diagrams transitive edges gure implied explicitly shown 
denning showed certain assumptions information ow policy forms nite lattice 
de nition denning axioms 
set security classes sc nite 

ow relation partial order sc 

sc lower bound respect 

join operator totally de ned upper bound operator 
shown denning axioms imply existence greatest lower bound operator turn implies existence upper bound respect 
example satis es denning axioms example speci cally failing satisfy axioms 
see example extended form lattice 
note focus policies satisfy denning axioms see legitimate information ow policies satisfy axioms 
denning rst axiom requires set security classes nite needs little justi cation 
kept mind axiom applies security classes objects system 
denning axioms allow objects created destroyed dynamically bound number objects created 
denning second axiom states partial order sc 
partial order re exive transitive anti symmetric binary relation 
seen need re exivity context example sc 
transitivity requires indirect information ow possible allow direct information ow reasonable requirement situations 
anti symmetry requires re exive transitive requirements anti symmetry merely eliminates redundant security classes 
words point having di erent security labels objects labels restricted having exactly information ows 
denning third axiom requires sc lower bound system low sc 
axiom acknowledges existence public information system 
public information allows desirable features public bulletin boards databases users expect nd modern computer system 
theoretical perspective argue information constants allowed ow object constants labeled concrete example constant version information operating system 
version information necessary situations indirect ow imply direct ow 
example suppose wish allow transfer information high low mediated process security class san 
san san 
situations typically handled exceptions falling outside normal lattice framework information ow 
noted non transitive information ows enforced concepts type enforcement assured pipelines discussed 
non transitive information ow policies expressed type access control model 
correct operation certain programs publicly available 
note policy example bound 
denning fourth axiom subtle 
parts 
firstly join operator required totally de ned de ned pair security classes sc 
means possible combine information security classes give result label 
example saw situation property satis ed ai aj unde ned bring example line denning axioms introduce new security class system high de ne ai aj introducing example modi ed follows 
example bounded isolated classes sc fa hg ai ai ai ai ai ai ai ai ai ai ai aj policy depicted hasse diagram gure 
ow relation goes upwards gure edges shown 
recall re exive edges ai ai transitive edges implied explicitly shown 
practical role system high objects information global state system go objects labeled information crucial proper system administration audit 
hand example suggests situations may appropriate partially ordered labels striving complete lattice 
second part denning fourth axiom states join operator upper bound 
means sc ii property follows intuition underlying join operator label information collectively obtained information able ow property ii stipulates information ow individually information obtained combining information able ow toc 
reasonable requirement somewhat analogous transitivity property denning second axiom 
important consequence denning fourth axiom join operator applied security classes 
upper bound associative commutative operator 
compute upper bound fa ang 
manner label result combining information number security classes 
note security literature usually cast terms inverse ow relation de ned follows 
de nition dominance read dominates strictly dominates relation de ned bif say comparable incomparable 
strictly dominates relation signi cance 
words sensitive examples simplest examples non trivial information ow policies occur ow relation total linear ordering security classes 
common example totally ordered security classes ts top secret secret con unclassi ed sensitivity levels encountered military government sectors 
policy depicted gure 
general totally ordered security classes 
total linear ordering called hierarchical ordering security literature 
avoid term hierarchical ordering understood mean tree ordering 
note total ordering inverse total ordering 
total ordering incomparable security classes 
de nition simply maximum respect dominance relation 
words information security classes combined label result higher classes combined depicts partially ordered lattice 
security classes obtained power set set subsets fa bg 
concrete say denotes salary information denotes medical information personnel database 
system low class empty set public information salary medical information 
security labels fag fbg singleton sets respectively corresponding salary information medical information 
salary medical information combined result labeled fa bg 
note fag fbg incomparable fag fbg fa bg 
policy ow identical subset relation dominance identical superset join set union labels 
lattice called subset lattice 
military government sectors individual set elements known categories security classes sets categories known compartments 
shows subset lattice categories example denote salary medical educational information respectively 
case note security classes fag fbg upper bounds viz fa bg fa cg fa bg upper bound 
similarly de ne subset lattices size 
subsets set size exponential increase number security classes number categories increases 
practice vanishingly small fraction security classes employed large noted selecting arbitrary subset lattice necessarily yield lattice 
example partial order gure results selecting security classes subset lattice fa dg 
partial order gure fails lattice reasons 
firstly missing system low system high security classes 
secondly upper bounds fag fbg incomparable upper bound fag fbg 
lling missing security classes extend partial order gure obtain lattice gure 
possible construction partial order partial order embedded lattice including additional security classes desired 
lattices considered totally ordered lattice subset lattice combined 
particularly military government sectors structure laid law 
note system high security clearance individual systems handle sensitive information 
security class components totally ordered security lattice gure second subset lattice number categories 
label said dominate component rst label dominates corresponding component second 
example ts fag dominates fag incomparable fbg 
join labels similarly de ned pairwise join individual components ts fag fbg ts fa bg 
easy see result lattice 
fact known product lattice underlying lattices 
example illustrates general property product lattices lattice 
possible generate large lattices manner 
mentioned earlier cases realistically small subset entire lattice 
concrete illustration smith describes actual lattice common practice military 
security classes consist linearly ordered security levels ts categories fa zg corresponding say di erent projects system 
smith lattice shown gure 
labels possible space labels 
interesting labels constitute lattice 
note system high security class combinations categories occur 
categories occurs top secret ts occurs secret 
access control models far de ned information ow policy seen denning axioms imply lattice security labels 
consider enforce information ow policy system 
active entities system usually processes executing programs behalf users 
information ow objects security classes carried processes 
potential information ow object process reads object writes 
absence knowledge program assume worst case say potential information ow ow occurs 
words conservative ensure programs simply ability cause information ows contrary policy 
shortly see bell lapadula model addresses objective 
introduce basic abstractions access control models 
order understand access control computer security rst understand distinction users subjects 
distinction fundamental dealt imprecisely leading undue confusion objectives computer security 
understand user human 
assume human known system recognized unique user 
words unique human jane doe user identity system 
jane doe authorized user system user identity 
conversely authorized user known exactly user identity say 
clearly assumption enforced adequate administrative controls assume place 
assumption required policies consider 
time crucial policies integrity lattice chinese walls discussed 
violated current systems 
worth observing converse requirement user identi er system associated exactly human critical order maintain strict accountability 
shared user identi ers facilitate sharing usually resorted system lacks convenient facilities sharing 
properly designed system need arti ce 
understand subject process system subject program execution 
subject associated single user behalf subject executes 
general user may subjects concurrently running user behalf system 
time user logs system particular subject 
note access control models assume identi cation authentication users takes place secure correct manner concerned happens 
di erent subjects associated user may obtain di erent sets access rights 
consider statement top secret user john logs secret level 
user subject terminology interpret statement follows rstly unique user john cleared top secret secondly john subjects executing behalf level dominated top secret 
assume subject runs xed security level 
see security level subjects changed models 
summarize authorized human user known unique user system subjects executing user behalf subject associated user 
general subjects create subjects system 
subject unique user ancestor behalf subject executes operations 
access rights subjects objects system conceptually represented access matrix 
matrix row subject column object 
subject object system process may suspend resume operations executed process 
general subjects viewed subset objects 
cell row column denoted contains set access rights specifying authorization subject perform operations object example read authorizes read operations authorized access matrix executed 
purpose access matrix user regarded subject right 
subject retains access rights user user engaged activity system 
access matrix usually sparse stored system access control lists capabilities relations data structure suitable cient storage sparse matrix 
access matrix dynamic entity 
individual cells access matrix modi ed subjects 
example subject owner object typically modify contents cells column corresponding case owner object complete discretion regarding access subjects owned object 
access controls said discretionary 
access matrix changes due addition deletion subjects objects 
typical access control les directories provided popular multi user operating systems basis protection bits example discretionary access control 
similarly access control relations parts relations provided popular relational database management systems example discretionary access control 
discretionary access controls inadequate enforce information ow policies 
basic problem discretionary access controls constraint copying information object 
subtle problems discretionary access controls notably concerning called safety problem propagation access rights 
discussion safety problem see 
concrete say tom dick harry users 
suppose tom con le private read dick harry 
tom authorize dick read le entering read dick private 
assume dick authority read right private users harry 
tom intention easily subverted dick 
dick creates new le call copy private copies contents private 
creator copy private dick authority read access user including harry dick enter read harry copy private 
practical purposes harry read private long dick keeps copy private reasonably date respect private 
situation worse scenario indicates 
far portrayed dick cooperative participant process 
suppose dick trusted con deliberately subvert tom intentions regarding private le 
dick uses fancy text editor supplied harry 
editor provides editing services dick needs 
addition harry programmed create copy private le harry right read copy private 
software said trojan horse addition normal functions expected user engages surreptitious actions subvert security 
note similar trojan horse executed tom harry privilege directly read private 
summary users trusted deliberately breach security wehave contend trojan horses programmed deliberately 
require software run system free trojan horses 
hardly practical option particularly wish guarantee freedom high degree assurance 
solution impose mandatory controls bypassed trojan horses 
bell lapadula model concept mandatory access controls rst formalized bell lapadula 
de ned model commonly called bell lapadula model 
original publication numerous variations model published 
consequently somewhat unclear exactly means bell lapadula model 
take minimalist approach de ne model called blp roughly speaking smallest model captures essential access control properties wish illustrate 
reader note notation precise formulation rules blp substantially di erent original bell lapadula model 
blp line formulations authors literature 
key idea blp augment discretionary access controls mandatory access controls enforce information ow policies 
blp takes step approach access control 
discretionary access matrix contents modi ed subjects manner need specify 
authorization su cient operation carried 
addition operation authorized mandatory access control policy users control 
mandatory access control policy expressed terms security labels attached subjects objects 
label object called security classi cation label user called security clearance 
important understand secret user may run program text editor secret subject unclassi ed subject 
subjects run program behalf user obtain di erent privileges due security labels 
usually assumed security labels subjects objects assigned changed security cer 
assumption security labels change known 
see assumption relaxed secure manner 
speci mandatory access rules blp follows signi es security label indicated subject object 
simple security property subject read object 
property subject write object 
property pronounced star property 
read access implies ow object subject requirement equivalently 

write access conversely implies ow subject object requirement equivalently 

note write access interpreted write 
models write access interpreted mean read write append access provided write 
properties stated terms read write operations 
real system additional operations create destroy objects 
su ces consider read write illustrate main points 
example create destroy constrained property modify state object question 
note mandatory controls formulated conditions necessary su cient indicated access 
operational terms visualize mandatory controls kicking checks embodied discretionary access matrix satis ed vice versa 
authorize operation need check mandatory controls operation anyway rejected vice versa 
simple security requirement applies equally humans programs need self evident 
property hand applied human users programs 
human users trusted leak information 
secret user write unclassi ed document assumed put unclassi ed information 
programs hand trusted may trojan horses embedded 
program running secret level allowed write unclassi ed objects property permitted discretionary access controls 
secret user wishes write unclassi ed object log unclassi ed subject 
curious aspect property unclassi ed subject write secret le 
means secret data may destroyed damaged accidentally unclassi ed subjects 
avoid integrity problem modi ed property requires subjects write level write 
see properties impact tom dick harry trojan horse example discussed 
suppose tom dick secret users harry unclassi ed user 
tom dick secret unclassi ed subjects harry unclassi ed subjects 
tom create secret le private secret subject 
simple security property prevent harry subjects able directly read le private 
simple security properties ensure harry subjects read copy private copy private labeled secret contain information private 
speci cally dick trojan horse infected secret subject creates copy private secret le harry unclassi ed subjects able read 
hand dick unclassi ed subject running trojan horse read private copy copy private 
note blp mandatory access controls prevent information ow security classes 
harry secret user tom dick controls solve problem 
unfortunately mandatory controls solve trojan horse problem completely 
secret subject prevented writing directly unclassi ed objects 
ways communicating information unclassi ed subjects 
example secret subject acquire large amounts memory system 
fact detected unclassi ed subject able observe memory available 
unclassi ed subject prevented directly observing amount free memory indirectly making request large amount memory 
granting denial request convey information free memory unclassi ed subject 
load cpu similarly modulated communicate information 
indirect methods communication called covert channels 
covert channels formidable problem enforcement information ow policies 
di cult detect detected di cult close incurring signi cant performance penalties 
covert channels tend noisy due interference activity subjects system 
standard coding techniques communication noisy channels employed trojan horses achieve error free communication 
resulting data rates high bits second orts mitigate channels 
covert channel problem outside scope lattice access control models bell lapadula 
models seek prevent insecure information ows objects explicitly intended inter process data sharing communication 
problem avoiding mitigating tolerating covert channels considered implementation engineering issue requiring analysis system architecture design code see example 
mentioned class models called information ow models attempt deal information ows uniform manner 
discussion models scope 
revisit assumption requires security labels subjects objects change 
assumption relaxed di erent ways secure insecure introduce information ow contrary lattice 
suppose allow subject change security label object stipulation unclassi ed subject upgrades label le unclassi ed secret 
secure causes information ow secret unclassi ed 
suppose allow secret subject perform change replace stipulation 
case insecure upgrade unclassi ed le secret secret subject le disappear view unclassi ed subjects opening means communicating information secret unclassi ed exploited trojan horses 
note secret user securely upgrade unclassi ed le secret logging unclassi ed subject order change 
biba model duality mandatory controls bell lapadula model motivated con dentiality considerations 
biba proposed similar controls formulated purpose integrity basic concept biba model low integrity information allowed ow integrity objects opposite acceptable 
biba proposed di erent ways mandatory controls integrity objectives 
limit discussion best known called strict integrity 
usual formulation biba model high integrity placed top lattice security labels low integrity bottom 
formulation permitted ow information top bottom 
opposite direction permitted ow information bell lapadula model denning axioms stated earlier 
fact led biba propose mandatory controls analogy mandatory controls blp model 
denotes integrity label subject object 
simple integrity property subject read object 
integrity property subject write object 
properties said duals corresponding properties blp 
intrinsic placing high integrity top lattice matter placing high con dentiality top 
top bottom relative terms coined convenience absolute signi cance 
information ow biba model brought line blp model simple expedient saying low integrity top lattice high integrity bottom 
requires invert dominance relation biba model low integrity dominates high integrity 
viewpoint mandatory controls blp model enforce information ows required biba model 
note situation symmetrical 
equally invert blp denning lattices put low con dentiality top high con dentiality bottom employ mandatory controls biba enforce information ows 
point discussion fundamental di erence biba blp models 
models concerned information ow lattice security classes information ow allowed direction lattice 
blp model allows information ow upward lattice biba model allows downward 
direction relative system enforce models enforce straightforward remapping labels invert dominance relation needed 
suggested blp biba models combined situations con dentiality integrity concern 
single label con dentiality integrity models impose con icting constraints 
consequence combining subject read write objects exactly security label subject 
amounts trivial policy information ows security classes discussed example 
useful situation independent con dentiality integrity labels 
words security class consists labels con dentiality label integrity label blp mandatory controls applied biba controls 
precise pg lattice con dentiality labels 
qg lattice integrity labels 
assume lattices high con dentiality high integrity top proposed original models 
combined mandatory controls follows 
subject read object 
subject write object 
call composite model 
popular model implemented operating system database network products speci cally built meet requirements military sector 
composite model amounts simultaneous application lattices information ow occurs opposite directions going upwards con dentiality lattice downwards integrity lattice 
discussion invert integrity lattice view composite model simultaneous application lattices information ow going upwards 
product lattices mathematically lattice 
words composite model reduced single lattice 
illustrate general result gure 
shows lattices blp biba controls respectively applied 
resulting mandatory controls stated accompanying table 
entry speci es maximum access subject label row object label column 
exactly mandatory controls enforced blp lattice gure 
lattice subjects labeled 
read objects labeled 
component labels 
time write objects labeled 
component 
read objects labeled 
component write objects component 
relationships lattice similarly interpreted 
note top element high con dentiality low integrity bottom element low con dentiality high integrity 
exactly mandatory controls enforced biba lattice gure obtained inverting gure 
short mandatory controls expressed formulations gure precisely equivalent matter system enforces 
net ect identical 
example simultaneous con dentiality integrity labels constructed composite lattice possible application conventional data processing environment 
lattice consists integrity levels integrity categories con dentiality levels con dentiality categories 
results total distinct labels instantiated single blp lattice argued 
instantiates subjects objects distinct labels turn related blp lattice gure 
note lattice system programs highest integrity audit trail highest con dentiality 
audit trail read system managers 
written subjects append mode 
imposes additional constraint production users execute production code 
required individual application programmer production user 
easier enforce restriction human required unique user identity system suggested section 
system control subjects allowed write contradiction property 
additional constraints relaxations lattice model appear necessary application considered 
point discuss adequacy lattice model integrity applications emphasize lattice information ow policies combine lattices cast single lattice 
chinese wall lattice chinese wall policy identi ed brewer nash 
arises segment commercial sector provides consulting services companies 
access control model enforcing policy sandhu 
objective chinese wall policy prevent information ows cause con ict interest individual consultants 
consultants naturally deal con information clients 
individual consultant access information banks information oil companies information creates con ict interest consultant analysis clients 
insider information companies type presents potential consultants abuse knowledge personal pro chinese wall policy dynamic aspect 
new consultant starts mandatory restriction access rights 
say consultant accesses information bank consultant denied access information bank 
denial su cient length time avoid con ict interest 
simplify discussion assume denial forever 
mandatory restrictions regarding consultant access oil companies insurance companies useful distinguish public information information 
public information allows desirable features public bulletin boards electronic mail public databases 
mandatory controls reading public information 
may discretionary access controls restricting read di erent public items 
simplicity ignore discretionary controls additional mandatory controls coexist chinese wall policy 
additional controls apply information similarly ignored 
information categorized mutually disjoint con ict interest classes shown gure 
belongs exactly con ict interest coi class 
chinese wall policy requires consultant able read information coi class 
policy applies uniformly users subjects 
policy writing public information derived consequence providing possible indirect read access contrary mandatory read controls 
respect users subjects possibly infected trojan horses treated di erently 
policy writing essentially bell lapadula property 
statement meaningful need de ne lattice labels 
con ict interest classes coi coi coin mi companies mig propose label object system companies contains information 
object contains information bank oil oc labeled oil 
assume banks oil companies distinct con ict interest classes 
labels bank oil clearly contrary chinese wall policy 
prohibit labels model de ning security label element vector ik ik 
symbol read null 
object labeled possibly containing information coi coi 
element ofthe label integer means object information corresponding coi class 
example object contains information coi coi labeled 
de ne dominance relation labels follows provided agree 
example incomparable 
precise ik denote ik th element label ik ik ik label null elements naturally corresponds public information 
naturally occurring system high label 
fact label contrary chinese wall policy 
introduce special label sy purpose assign subject system 
de nition sy dominates labels 
alternately recognize chinese wall policy quite lattice requires sy class eliminated 
recall context example regarding need system high objects system administration audit purposes 
complete lattice structure remains de ne class combining join operator 
say labels compatible disagree ik ik ik ik note dominates compatible 
words comparable labels compatible 
incomparable labels hand may may compatible 
instance incompatible compatible 
incompatible labels legitimately combined chinese wall policy 
expressed requirement incompatible sy 
compatible labels ik th element join computed follows ik ik ik ik 
example label sy sy 

join lattice structure see enforce chinese wall policy 
concrete describe solution context speci lattice gure con ict interest classes companies 
solution completely general applies chinese wall lattice 
object system labeled labels gure 
interpretation labels discussed earlier 
objects labeled sy violate chinese wall policy combine information coi class 
objects inaccessible system user cleared sy 
consider labels users subjects 
treat clearance user high water mark oat lattice 
newly enrolled user system assigned clearance 
assumes user entering system clean slate 
user prior exposure information system enter appropriate clearance re ecting extent prior exposure 
user reads various information user clearance lattice 
example reading information con ict interest class user clearance modi ed 
reading information con ict interest class modi es user clearance 
oating user clearance allowed long clearance oat sy 
operations force user clearance sy prohibited 
ability oat user clearance upwards addresses dynamic requirement chinese wall policy 
oating clearance keeps track user read operations system 
note important ensure consultant known user identities system 
user identity obtain information di erent companies con ict interest class 
exact manner user clearance allowed oat speci ed model numerous alternatives 
users complete freedom respect proposed read access speci ed time login 
system create suitable subject user session 
hand constrain discretionary access controls 
instance user may allowed read information user boss assigns 
case oat user clearance ectively done user 
full consideration discretionary policies interplay mandatory policy scope 
complete treatment require models 
user associate set subjects labels dominated user clearance 
jane user clearance create subjects associated jane jane jane jane 
corresponds label wishes login session 
generally user allowed open windows single login session window associated subject 
subject xed label change 
oating user clearance corresponds ability subjects new labels user 
example jane clearance create subjects labels 
jane clearance acquires ability create subjects labels 
subject xed label 
subject created subject inherits label subject creation allowed label creating subject 
subject label remains xed life subject 
read write operations system carried subjects 
subjects constrained familiar simple security properties bell lapadula model 
suppose jane logs subject label 
subjects created session inherit label 
allow subjects read public objects labeled read write objects labeled write objects labels sy 
situations information ow policies lead lattice structure security classes due denning axioms 
enforcement policies computer system may trojan horse software achieved mandatory access controls bell lapadula modulo elimination mitigation tolerance covert channels 
lattice access controls initially developed defense sector ap plication situation information ow concern 
lattice access control certainly essential ingredient computer security understand today 
time appreciated lattice approach provide complete solution information ow policies security policies general 
words lattice approach ingredient computer security albeit avery important 
acknowledgment author anonymous referees comments greatly improved accuracy 
subtle mistakes omissions ambiguities identi ed referees 
identi cation correction resulted signi cantly better product 
partially supported national science foundation ccr national security agency contract mda 
author grateful dan atkinson nathaniel howard mike ware making possible 
bell lapadula secure computer systems mathematical foundations model 
mitre bedford massachusetts 
available national technical information service spring eld va ntis ad 
biba integrity considerations secure computer systems 
mitre tr mitre bedford massachusetts 
available national technical information service spring eld va ntis ad 
practical alternative hierarchical integrity policies 
proceedings th nbs nsa national computer security conference 
brewer nash chinese wall security policy 
proceedings ieee symposium security privacy 
denning lattice model secure information flow 
communications acm 
meseguer security policies security models 
ieee symposium security privacy 
lampson protection 
th princeton symposium information science systems 
reprinted acm operating systems review 
lampson note con nement problem 
communications acm 
non discretionary controls commercial applications 
proceedings ieee symposium security privacy 
proctor neumann architectural implications covert channels 
proceedings th nist ncsc national computer security conference baltimore md october pages 
sandhu typed access matrix model 
proc 
ieee symposium research security privacy oakland california may pages 
sandhu lattice interpretation chinese wall policy 
proceedings th nist ncsc national computer security conference baltimore md october pages 
smith modeling representation security semantics database applications 
ph thesis george mason university 
fa bg fag fbg 
ts fa cg fa bg fa cg fb cg fag fbg fcg hasse diagrams information flow policies fa cg fa dg fag fbg fa dg fa cg fa dg fa bg fag fbg embedding partial order lattice ts ts ts ky ts kqz ts kl ts ts ts ts ts ts ts ts lw ts smith lattice lg 
lg 




rw 
rw 
rw 
rw 



equivalent blp lattice allowed ows upward composite model 



equivalent biba lattice allowed ows downward example equivalence repair production users production data repair code system managers audit trail system control application programmers development code data production code system programs system programmers system code development tools box represents label 
entries box specify subjects pre xed objects pre xed assigned label 
allowed ows upward 
composite model blp lattice information con ict con ict interest 
interest class class 


information chinese wall policy sy example chinese wall lattice 
