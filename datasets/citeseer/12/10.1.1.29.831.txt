syntactic level ontology integration rules commerce electronic marketplaces commerce portals bring online suppliers buyers 
individual participant potentially format represent products product catalog mapping non trivial 
complicated products require knowledge intensive descriptions ontologies catalog integration shifts integration product ontologies 
industrial experience analyzed shows cases marketplaces require syntactic level integration product ontologies integration rules created updated semi automatically 
ontology integration tools satisfy requirements developed accordingly sketch framework automated ontology integration able fulfill requirements 

electronic marketplaces commerce portals bring online suppliers buyers 
individual participant potentially format represent products product catalog 
complicated products require knowledge intensive descriptions ontologies 
catalog integration requires integration product ontologies 
marketplace mediates suppliers buyers able map suppliers catalogs buyers formats performing mappings 
numbers problem creation maintenance catalog integration rules non trivial 
management product ontologies product catalogs occur subtask knowledge management done companies 
consequence important part ontology knowledge management tools development ontoknowledge project www ontoknowledge org 
types commerce mediation business business business customer customer customer differ terms number catalogs speed requirements integration quality 
copyright american association artificial intelligence www aaai org 
rights reserved 
vrije universiteit division mathematics computer science de boelelaan hv amsterdam netherlands www cs vu nl cs vu nl differences produce different requirements product integration 
inference mechanisms developed knowledge engineering community provide standard way integrate ontologies 
areas number catalogs order number customers 
inference relatively expensive longer efficient 
consider problem ontology integration applied task product integration 
section survey requirements ontology integration come industries section survey existing tools ontology integration 
continues sketch automated ontology integration tool section arriving final 

requirements ontology integration types electronic commerce extensively discussed fensel provide different requirements integration product ontologies surveyed 
area numbers formats relatively small correspond number companies 
created verified rule applied times large number product descriptions 
rules constructed manually carefully verified 
gives requirement rules understandable domain specialist may technical expert 
suppliers provide catalogs syntactically unified way xml de facto standard standards product descriptions proposed li 
brings requirement rules able translate xml representations product catalogs 
participants tend sell complicated products 
result corresponding product ontologies complicated 
integration required instance level schema level rules able deal ontology schemas classes attributes inheritance electronic product catalogs trade mediation improve supply chain 
baron shaw bailey discusses implementation catalogs support information flows supply chain suppliers customers procurement arrives requirements product ontology integration perform integration representations legacy systems usually flat structure database technology 
integration compatible security services 
area assumes participation large number individual customers easily reach order millions 
product catalogs customer oriented tend textual graphical representation products formalized xml descriptions 
accordingly catalog integration rules able interact wrappers translate ill formalized descriptions xml 
requirements necessitated presence individual customers similar areas 
mediation suppliers buyers represented individuals sell buy goods 
means number participants high reach millions participant format represent product 
tend xml graphical textual representations 
imposes special requirements catalog integration linked web site development customer assistance 
web site development business feels need customize product descriptions views customers requires integration process automatic customer requires special integration easily adaptable changes data formats 
rapidly growing number suppliers available web inspired development intelligent sales assistants web able consult customers guide maze product catalogs online shops 
service bring requirements product ontologies standardized syntactical level xml 
product ontologies derivable composed technical market descriptions 
specific product ontologies integrated general domain ontologies 
catalog administration tool 
works different types catalogs 
static catalogs contain slowly changing information uploaded updated periodically possibly vendors 
dynamic catalogs change fly typically reside seller catalog system 
requirement quite unusual manual semiautomatic knowledge management 
requirements integration system follows able integrate ontologies multiple remote sources meta models inference difficult 
static ontologies integrated dynamic ontologies 
able deal different expressiveness ontology representation languages 
integrated ontologies require creation new categories source ontologies lead generation descriptions virtual products 
requirement unusual knowledge management creation new super class correspond product virtual 
rules patterns integrate ontologies able evolve easily adapt changes usage patterns business relationships 
areas require simple highly automated techniques class attribute name level 
requirements differ slightly expressed ng yan lim argue development simple scalable fully automated schema integration technique commerce 

existent ontology integration tools section survey tools algorithms available industry field ontology integration 
principle perform types concept integration concept level integration syntactical level integration 
concept level integration requires inference domain ontology decision integration particular pair classes 
addition requires integration ontology captures knowledge methods able integrate classes 
ontologies available explicitly tools require human expert decisions 
syntactical integration defines rules terms class attribute names ontologies integrated 
integration rules conceptually blind easy develop implement 
level widely database community database schema integration proved sound batini lenzerini navathe 
model semantic integration bowers delcambre works level semantic models provides rationale flexibility rules 
areas customer oriented representations come underlying models 
furthermore algorithms presently concentrate manual ontology integration provide method capable integrating ontologies automatically 
ontology integration tools developed knowledge engineering community chimaera mcguinness prompt noy musen 
tools support merging ontological terms class attribute names varied sources 
class merging process user pairs classes names similar represent class different input ontologies require taxonomic edition subclass 
human expert decides integration operation apply pair classes system guides pair 
prompt provides automation ontology merging 
ontology merging operation prompt suggests user perform sequence actions copying classes attributes creating necessary subclasses putting right places hierarchy 
action sequences hard encoded system experiments showed perform 
approaches expert decide ontology integration operation perform pair classes 
correspond needs industries require automatic ontology integration 
database community provided algorithm semi automatic database schema integration 
presents techniques able integrate database schemes 
techniques assume existence collection relations schema attributes synonymy homonymy hyponymy dictionary type conflict dictionary 
normally set dictionaries exist construction requires large investment time human effort 
natural language ontologies wordnet fellbaum provide valuable information source creation dictionaries essential ontology integration algorithm 

automated ontology integration tool sketch product concepts represented classes correspond products classes products class attributes correspond product properties 
input algorithm sets classes corresponds ontology integrated set class names subclassof relation 
class set attributes associated class attribute represented name 
algorithm integrate ontologies ontology contains set classes second set classes 
class ci associated set attributes ami section ci denote name class attribute correspondingly ci denote class concept 
naturally humans perform incremental ontology integration comparing classes opposite batch model expert supposed analyze classes 
automatic integration choice perform incremental batch integration 
consider incremental integration batch integration model considered 
root algorithm runs exhaustive breadth depth search iteration compares current class classes ontology consequently pair classes algorithm performs comparison step described subsections compares class names compares sets attributes associated classes compares individual attributes classes 

integration operations integration rules lead integration operations performed 
unified set operations proposed 
operations available literature sofia pinto quite general automated integration 
closest approach prompt uses merging operations merge classes merge slots merge bindings slot class perform deep copy class subclasses referring classes perform shallow copy class class 
framework operations union attributes create superclass pair classes attributes classes common rename classes fix class name collision add subclass relation pair classes remove subclass relation pair classes 

framework automated ontology integration comparison step generate hypotheses integration operation required pair classes 
syntactical feature classes similarity names produce hypothesis operation apply 
quite possible features produce different hypotheses 
example suppose class printer attributes technology resolution interface compared class printer describes device attribute 
table 
hypotheses derived comparison class names condition description hypothesis names literally equal merge substring subclass domain ontology synonymous classes merge refers general concept subclass disjoint mark disjoint action table 
hypotheses derived comparison sets attributes condition description hypothesis detailed restriction subclass attributes included subclass table 
hypotheses derived comparison individual attributes condition description hypothesis names attributes literally equal duplicate hypothesis class comparison domain ontology names synonymous duplicate hypothesis class comparison substring name just different attributes action action comparison class names produce hypothesis classes merged names semantically equivalent comparison attributes indicate printer defined superclass printer 

algorithm algorithm assumes kind domain ontology terms exists 
represent dictionary domain recognize synonyms relation monitor display relation language concepts general printer specific laser printer 
name preprocessing 
comparing ontologies lexical naming confusions eliminated name preprocessing stage 
stage class name attribute name algorithm remove articles printer equal printer remove encoding prefixes included programmer indicates attribute string type 
separate words merged create identifier laser printer 
ad hoc solution exploits language ontologies wordnet fellbaum domain specific modifications easily developed stage perform effective 
comparing class names 
stage compare names listed table 
symbols class names literally compared operations substring inclusion shown lines 
class concepts ci compared lines operations refers general relation refers synonymous relation stands disjoint relation laser printer ink printer matrix printer 
expect case occur algorithm compares possible pair classes pair ontologies pairs require operations 
comparing attribute sets 
comparing class names compare attribute names 
generally attributes provide information class name 
algorithm takes look attribute sets continues comparing individual attributes 
possible situations attribute sets class class generated hypotheses listed table operator line returns number attributes class including attributes inherited superclasses 
comparing attributes 
comparing individual attributes gives additional hypotheses integration operation 
stage algorithm passes possible pair attributes belong classes correspondingly 
comparison gives additional hypotheses listed table 
developed ontology representation languages rdf lassila swick include relation attributes allow build hierarchies attributes similar class hierarchies 
full integration ontologies require integration attribute hierarchies extending table new cases 
making decision 
pair classes algorithm generate set possible integration operations performed pair classes hypotheses 
algorithm generates possible pairs classes comparison expect pairs require integration 
find class merged class algorithm pass classes attributes average number attributes class ontology perform merging operation 
realistic case give tests lead hypotheses 
decision making step select integration operation hypotheses lots noisy hypotheses ignored 
opinion aggregation algorithm threshold number generated hypotheses exceed predefined threshold algorithm perform integration operation 
hypotheses aggregated simple voting method long history approved robustness application areas 
comparison classes pair produces hypotheses merge hypotheses subclass algorithm perform second operation 

shows case ecommerce requires syntactic level integration product ontologies integration rules created updated semi automatically 
ontology integration tools satisfy requirements closest approaches force user decision integrate certain pair classes 
proposed integration algorithm attempts automate decisionmaking process 

author dieter fensel helpful discussions comments 
baron shaw bailey 
web systems procurement communications acm 
batini lenzerini navathe 
comparative analysis methodologies database schema integration acm computing surveys 
bowers delcambre 
representing transforming model information 
proceedings workshop semantic web ecdl lisbon portugal september 

catalog integration markets 
www com 
fellbaum 
wordnet electronic lexical database 
mit press 
fensel 
ontologies silver bullet knowledge management electronic commerce 
springer verlag berlin 
lassila swick 
resource description framework rdf model syntax specification recommendation feb available online www org tr rec rdf syntax 
li 
xml industrial standards electronic commerce knowledge information systems 
mcguinness fikes rice wilder 
environment merging testing large ontologies 
proceedings seventh international conference principles knowledge representation reasoning kr breckenridge colorado april 
ng yan lim heterogeneous product description electronic commerce exchanges newsletter acm special interest group commerce 
noy musen 
prompt algorithm tool automated ontology merging alignment 
proceedings aaai conference austin tx 

intensional extensional integration abstraction heterogeneous databases data knowledge engineering 
lopez fernandez 
personalized server content manager 
ebusiness issues applications developments 
proceedings ebusiness conference exhibition madrid spain october 
sofia pinto gomez perez martins 
issues ontology integration 
proceedings ijcai workshop ontologies problem solving methods krr stockholm august 

websell intelligent sales assistants world wide web 
business issues applications developments 
proceedings ebusiness conference exhibition madrid spain october 
