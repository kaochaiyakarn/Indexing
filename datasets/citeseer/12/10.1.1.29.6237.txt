degree freedom haptic display polygonal models arthur gregory stephen ming lin dinesh manocha department computer science university north carolina chapel hill geom cs unc edu www cs unc edu geom algorithm haptic display moderately complex polygonal models degree freedom dof force feedback device 
incremental algorithms contact determination convex primitives 
resulting contact information calculating restoring forces torques generate sense virtual touch 
speed computation approach exploits combination geometric locality temporal coherence predictive methods compute object object contacts khz rates 
algorithm implemented interfaced dof phantom premium 
demonstrate performance force display mechanical interaction moderately complex geometric structures decomposed convex primitives 
cr categories computer graphics methodology techniques interaction techniques additional keywords haptics virtual reality devices interactive computer graphics extending frontier visual computing haptic interfaces force feedback devices potential increase quality human computer interaction accommodating sense touch 
provide attractive augmentation visual display enhance level immersion virtual world 
effectively number applications including molecular docking manipulation nano materials surgical training virtual prototyping digital sculpting 
potential number research prototypes commercial devices accommodate degrees freedom dof bur designed 
compared visual haptic rendering extremely demanding computational requirements 
order maintain stable system displaying smooth realistic forces torques haptic update rates high hz 
involves accurately computing contacts object attached probe simulated environment restoring forces torques millisecond 
commonly haptic devices include dof arm ms dexterous arm compute point object contacts provide force feedback 
applications scientific exploration virtual prototyping assembly planning maintainability studies medical simulation tele operation need simulate arbitrary object object interactions 
dof haptic device provides torque feedback addition force display large translation rotational range motion useful applications 
gives user needed dexterity feel explore maneuver objects virtual environment 
number commercial research dof haptic devices available applications limited 
mainly due complexity accurate calculation contacts restoring forces computed millisecond outlined mpt 
existing fast haptic rendering algorithms developed dof haptic devices primarily deal single point contact virtual models st jc rkk directly applicable accurately compute object object contacts 
date approximate haptic rendering technique static environments point voxel sampling proposed haptic display dof haptic device mpt 
current algorithms exact contact determination response computation general polygonal models unable meet real time requirements dof haptic rendering 
main results novel algorithm haptic display moderately complex polygonal environments degree freedom force feedback device khz update rates 
assume object decomposed convex primitives 
probe position changes little successive frames algorithm keeps track pairs closest features convex primitives lc 
exploiting temporal coherence spatial locality closest features take advantage incremental computation caching closest feature pair performing greedy walk current pair closest features 
exploit motion coherence extremely high haptic update rates predict contact locations minimize penetration probe virtual environment 
restoring forces computed concept similar virtual proxy rkk extended dof force feedback devices 
algorithm applied haptic display mechanical interaction moderately complex structures composed tens convex primitives 
compared earlier approaches algorithm offers advantages applicability dynamic environments assume environment static 
objects scene free move simultaneously 
current implementation handle moving objects time 
accurate contact determination need trade accuracy performance maintaining required force update rates 
smooth collision response extension virtual proxy concept system generates natural haptic response result force discontinuities 
organization rest organized follows 
section briefly surveys related 
section presents overview approach 
section describes algorithm contact determination penetration depth estimation 
section describes contact force torque computation 
describe implementation section highlight performance different environments 
previous section survey previous related haptic rendering contact determination collision response 
haptic display techniques proposed integrating force feedback complete real time virtual environment enhance user ability perform interaction tasks cb ms sbm 
iwata describes dof haptic master concept time critical rendering lower update rate hundreds hz 
ruspini rkk haptic interface library hl uses virtual proxy multi level control system effectively display forces dof haptic devices 
thompson system direct haptic rendering models 
contact determination problem fast collision detection contact determination studied computational geometry robotics graphics literature 
convex polytopes number specialized algorithms developed contact determination distance computation convex polytopes gjk bar lc ghz el 
hierarchical approaches commonly algorithms general polygonal models hierarchical data structures 
include bounding volume hierarchies bounding volume may correspond sphere hub axis aligned oriented bounding box glm dop swept sphere volume 
algorithms compute pairs overlapping triangles intersection region 
algorithms separation distance computation hierarchies proposed qui jc 
intersection region penetration depth polyhedral models algorithms intersection computation boundary evaluation extensively studied solid modeling 
bouma bv spatial partitioning approaches compute contact region 
ponamgi pml combined hierarchical representations incremental computation detect contacts polygonal models 
snyder temporal coherence track penetration depth spline models 
algorithms rely surface representation model 
performance varies function size relative configuration models 
volumetric approaches gibson gib avila proposed algorithms object manipulation including haptic interaction volumetric objects physically object interactions 
mpt proposed voxel sampling technique dof haptic rendering point samples surface tested voxel representations static environment 
approximation approach achieves constant query time expense accuracy correctness haptic force display 
collision response considerable dynamic simulation response computation bar bar mc 
algorithms guarantee real time performance 
algorithms propose artificial coupling haptic display virtual environment cea notion god object zs rkk 
overview section give overview approach 
highlight rendering algorithm dof haptic devices 
methods applicable devices 
preliminaries general computation haptic rendering time frame involves steps 
collision detection algorithm detects intersection occurred object probe held user virtual environment 

computing contact manifold intersection occurred algorithm needs compute intersection points form intersection region contact normal direction 

estimating penetration depth measure estimation penetration depth contact normal direction computed intersection region 

computing restoring forces torques restoring contact force calculated penalty methods require penetration depth 
force contact manifold restoring torques easily computed 
contact manifold refers set points objects come contact may come contact predictive methods 
haptic simulation stability force computation extremely important 
accurate computation contact manifold frame helps smoothing transition force display frame 
crucial force feedback system witha human loop especially situation multiple contacts object attached probe simulated environment 
current algorithms systems perform force display interaction general polygonal models efficient accurate manner 
time constraint performing computations millisecond approach uses predictive techniques incremental computation spatial temporal coherence 
part pre computation initially decompose object convex primitives bd decomposition 
rest refer primitives 
exploiting convexity objects compute contacts pair convex primitives expected constant time simple preprocessing 
long number contacts bounded algorithm guarantee performance force update rates 
dof haptic rendering virtual proxy computation dof haptic rendering involves components virtual proxy rkk contact manifold computation penetration depth estimation haptic response computation 
extension virtual proxy virtual proxy representative object substitutes physical object probe attached virtual environment 
motion virtual proxy greedy nature 
move long obstructed 
runs surface object environment motion constrained surface location way actual object position locally minimize penetration depth 
accomplished predicting collision may occur objects proxy velocity actual probe position velocity previous frame simple linear travel path 
current frame object attached probe constrained travel safe threshold distance predicted scheme minimize amount penetration 
contact determination penetration depth estimation contact determination algorithm initially narrows pairs primitives different objects close proximity combination body sweep prune test real time scheduling 
checks pairs close proximity contacts 
pair convex primitives expected constant time algorithm track pair closest features computing contact manifold contact normal estimated penetration depth 
predictive approach minimize penetration computations probe virtual environment 
described section 
collision response algorithm uses penalty methods compute force proportional penetration depth 
applied contact manifold direction contact normal 
contact manifold depth estimation section algorithm computing contact manifold estimating penetration depth 
algorithm uses convex decomposition subdivide object convex primitives 
algorithm contact determination uses phase approach 
phase narrows pairs primitives close proximity 
algorithm computes tight fitting axis aligned bounding box primitive incremental methods 
checks bounding boxes overlap projecting coordinate axes sorting 
second phase algorithm performs exact contact determination tests pairs bounding boxes overlap 
contact determination convex parts closest feature tracking voronoi regions convex primitives proposed lin canny lc 
incremental algorithm keeps track closest features convex primitives previous frame 
feature corresponds vertex edge face primitive 
external voronoi regions convex primitives algorithm new set closest features greedy manner 
proof correctness analysis algorithm lin 
expected constant time performance running time algorithm number features traverses typically smaller total number features polytope 
number features traversed expected constant due coherence 
bounding boxes pair convex primitives overlap time coherence exist 
case directional lookup table el precomputed convex primitive 
consists nearest vertices certain samples bounding sphere 
directional lookup table provides means quickly find vertex primitive near direction simple lookup 
size table determined resolution directions unit sphere generally set constant 
constant size table table look time constant 
centers convex primitives vector connecting primitive table look vertex order initialize closest feature tracking algorithm 
method help restore coherence closest features determined expected constant time microseconds el 
directional lookup table takes kilobyte convex primitive 
contact manifold computation tracking algorithm returns pair closest features initializing contact manifold computation 
different feature combinations possible 
features vertex vertex closest point feature 
features edges closest points edges assuming parallel 
edges parallel algorithm computes projection edge 
edge face face face cases algorithm uses combination edge clipping routines 
estimating penetration depth penetration depth computed extending closest feature algorithm 
defined smallest distance primitives move primitives just touching penetrating contact normal direction 
computed pseudo internal voronoi region primitive pml 
convex polytope boundaries pseudo internal voronoi region correspond lines planes opposed quadric surfaces general polyhedra 
pseudo internal voronoi regions track find features form intersection volume 
intersection volume compute penetration depth direction motion 
real time scheduling frame algorithm initially uses sweep technique compute pairs primitives close proximity 
complexity sweep prune algorithm expected linear time small constant ts terms number primitives objects decomposed 
total number primitives total number potential contacts total computation time update th dof haptic rendering bounded th ts tc tf tf time required computing restoring force torque resulting contact pairs tc upper bound runtime performance closest features tracking convex primitives 
large environments possible algorithm check possible pairs exact contacts millisecond 
result scheduling scheme prioritize pairs checked contact importance 
pairs assigned priority pairs objects contact frame highest priority 
algorithm prioritizes remaining pairs amount time checked contact greater time higher priority 
criteria algorithm uses simple greedy strategy 
sorts pairs increasing priority values array fixed length 
length array constant derived maximum number contacts system handle maintain force update rate 
time pairs array updated current frame checked contacts 
contact forces torques contact manifold estimated penetration depth probe virtual environment com pute contact forces torques dof haptic rendering 
section describe basic formulation dof force display predictive techniques avoid penetration possible 
restoring forces torques compute restoring contact forces penalty methods 
hooke law generate spring force fr proportional penetration depth fr ks spring stiffness constant dp depth penetration 
mm value ks implementation 
computed restoring force vector fr applied contact manifolds contact normal direction resolve penetration generating sense touch 
restoring torques generated tr ri fri fri contact force vector applied point pi ri radius vector center mass pi 
predictive collision response computation penetration depth expensive general 
furthermore depth estimation algorithm computes local approximation penetration depth 
conjunction virtual proxy minimize frequency computing penetration depth conceptually growing actual surface surface normal direction small amount distance objects say declare collision 
apply restoring force fr ks actual penetration dp occurs modify contact force principle setting fr ks dp need computing penetration depth relatively expensive computing separation distance 
value function upper bound magnitude current velocity vc takes consideration linear angular velocity moving objects 
set vc ms typical haptic force update 
force torque interpolation displayed force computed function penetration depth contact manifold contact normal direction 
possible magnitude contact forces vary creating sudden jumps introduce sharp discontinuities successive frames 
notion force torque interpolation adopt interpolated normals force shading similar rkk 
interpolate different force normals achieve smooth force shading effects 
addition simple linear smoothing scheme minimize discontinuity force torque display successive frames 
force displayed previous frame force generated current frame 
loss generality assume 
fmax maximum amount force difference allowed successive updates 
display restoring force fmax fmax fmax display considered higher order smoothing functions 
formulation reasonably simple compute 
due fast force update rate complex smoothing function may take unnecessarily long compute result minute subtle differences force torque feedback user 
system implementation performance section describe system application force display mechanical interaction moderately complex structures 
dof phantom premium device che designed technologies 
provides intuitive force torque feedback 
implementation system consists routines hierarchical transformations predictive methods collision detection contact manifold computation computing contact force torque 
interfaced provided ghost tm library graphical display routines 
architecture system shown 
main loop system consists basic parts contact determination probe proxy typically attached object scene 
linear angular velocities object computed haptic application graphics scene transformations dof haptic display system haptic rendering recipe probe transformation velocities proxy collision tolerance collision detection body test convex pairs lin canny algorithm contact points compute response forces advance proxy compute spring forces ghost library dof device probe force torque 
architecture dof haptic display system difference transformation proxy probe 
time slice current frame velocities moving objects conservative estimate computed tolerance collisions 
contact determination initially consists applying body algorithm sweep prune 
environment potential pairs scheduling scheme prioritize pairs described section 
pair close proximity checks contact computes contact manifold pair 
convex objects contact manifold compute contact normal pair contact points apply response forces 
collision response pair contact algorithm uses relative velocity contact points contact normal distance estimate time impact 
multiple contacts time frame algorithm uses smallest time impact 
object advanced current velocities time impact contact forces applied 
advanced new velocities remainder time frame 
computing proxy forces actual force torque applied probe computed simple spring model transformation actual probe proxy frame 
simple smoothing applied force torque vectors sure derivatives magnitude direction vectors changed drastically frames 
real time constraints important component high rendering system com system component time ms number updates worst time average time total col det tests average col det time total body tests average body time total exact cd tests average exact cd time total number collisions average response time table 
timings different system components 
average timing broken various components 
collision detection calls normally include body test typically exact collision tests plus time determine closest features compute contact normal contact feature pair 
including contact determination response computation performed millisecond 
practice hard constraint portions system need optimized achieve performance 
currently system works geometric models decomposed convex primitives convex primitives 
algorithm collision detection pair convex primitives takes just microseconds 
average running times phase force torque display haptic session shown table 
system demonstration applied system force torque display applications gear turning inserting peg hole interaction multiple moving objects 
mechanical interaction gears gears modeled positioned manner user turn gear direction 
teeth tightly interlocking collision 
demonstration shown gears contain polygons convex primitives shown color plate left 
order aid user turning gear constraints applied gears position altered rotation constrained axis 
order generate correct response constraints applied velocities haptic frame new transformations computed objects 
result user feel gears rotating just real mechanical part shown color plate right 
user attach haptic probe gear different modes 
clicking button rim gear inserting rod bicycle wheel 
probe position remains fixed radius center gear orientation fixed rotate gear radius 
user clicks center gear probe effectively gear 
position fixed allowed rotate axis 
mode user turns gears feels interactions entirely torque probe handle 
encourage reader view system demonstration website www cs unc edu geom 
inserting peg hole scenario user attaches probe rectangular peg attempts insert rectangular hole 
pairs parallel faces pair closest features may contact 
type sampling technique number contact points high nearly faces peg close proximity walls hole 
collision detection contact determination seemingly simple scene difficult due contact configuration geometric robustness problem 
sequence snapshots color plate ii demonstrate successful attempt user inserting peg hole dof haptic display 
dynamic scene multiple moving objects scenario objects moving influence gravity impact due collision objects 
user pick objects probe move hit objects feel objects hitting 
sample snapshots shown color plate iii 
particular setup cubes spheres faces ellipsoids faces stick block 
types simulated force 
continuous force torque gravity 
impulsive force torque due impact user controlled object moving objects 
motion moving objects simulated impulse rigid body dynamics 
continuous force felt quite impulsive ones currently feel small 
exactly expect impulsive contact duration short 
considering possibility force expansion time force amplification exaggerate feel impulsive force torque 
discussion force display mechanical interaction useful virtual assembly maintenance studies electronic prototyping applications 
cases user interact virtual environment sense touch mechanic trying remove virtual part virtual en haptic display appears means humancomputer interaction 
cases molecular graphics force display provide additional means visualize complex systems environments 
scenes complex type contact scenarios necessarily complex contact configuration cases local region impact 
fact gear turning demonstration polygon count higher visually simple peg hole scenario 
collision detection contact determination problem substantially harder peg hole insertion nearly entire peg contact hole 
contact pairs interlocking gears significantly contacts theory infinitely point contacts peg hole case 
haptic display difficult control due multiple contact forces generated opposing directions 
extremely challenging scenario 
approach provide accurate smoother response approximate method 
user exerts force causes large amount penetration control loop unstable device shut due force limit exceeded 
furthermore incorporate complex accurate dynamics model simulating sliding rolling friction difficult maintain required force update rate hard surfaces 
research area deserving serious investigation 
haptic rendering algorithm dof force feedback devices 
combination incremental techniques spatial temporal coherence predictive methods compute contacts accurately force response millisecond 
force display mechanical interaction 
terms complexity current system works geometric models decomposed tens convex pieces 
directions 
plan dof haptic rendering display complex geometric models large vector field datasets 
terms haptic display complex polygonal models major issue accurately compute contacts penetration depth general polygonal models millisecond 
algorithms hierarchical approaches obbtree glm guarantee compute contacts millisecond complex models 
extensions approach hold promise 
addition interface system scientific visualization systems better understanding analysis complex datasets 
developed generic system framework haptic visualization force fields represented volumetric data dof force feedback device successfully applied complex volumetric datasets 
perform user studies benefits multi systems dof force display traditional visualization techniques 
acknowledgments anonymous reviewers helpful comments 
research supported part aro daag doe asci nsf nsf dmi nsf iis onr young investigator award intel 
avila 
haptic interaction method volume visualization 
proceedings visualization pages 
bar baraff 
curved surfaces coherence non penetrating rigid body simulation 
acm computer graphics 
bar david baraff 
fast contact force computation rigid bodies 
andrew glassner editor proceedings siggraph pages 
acm siggraph 
bd bajaj dey 
convex decomposition polyhedra robustness 
siam comput 
frederick brooks jr ming young james jerome 
project haptic displays scientific visualization 
forest baskett editor computer graphics sig graph proceedings volume pages august 
bv bouma 
modeling contacts physically simulation 
second symposium solid modeling applications pages 
bur 
force touch feedback virtual reality 
john wiley sons 
che chen 
degree system prototyping applications 
proceedings virtual reality prototyping pages 
cohen lin manocha ponamgi 
collide interactive exact collision detection system large scale environments 
proc 
acm interactive graphics conference pages 
cb brown 
factors affecting width haptic display 
ieee conference robotics automation pages 
cea issues haptic display tool 
proceedings asme haptic interfaces virtual environment teleoperator systems pages 
dobkin hershberger kirkpatrick suri 
computing intersection depth polyhedra 
algorithmica 
el lin 
accelerated proximity queries convex polyhedra multi level voronoi marching 
technical report department computer science university north carolina 
gib gibson 
visualization haptic exploration physical element objects 
proc 
eurographics workshop visualization scientific computing pages 
gjk gilbert johnson keerthi 
fast procedure computing distance objects dimensional space 
ieee robotics automation vol ra 
glm gottschalk lin manocha 
obb tree hierarchical structure rapid interference detection 
proc 
acm siggraph pages 
gregory lin gottschalk taylor 
collide framework fast accurate collision detection haptic interaction 
proceedings virtual reality conference 
ghz guibas hsu zhang 
walk hierarchical distance computation moving convex bodies 
proc 
acm symposium computational geometry 
hub hubbard 
collision detection interactive graphics applications 
ieee transactions visualization computer graphics september 
iwata 
artificial reality force feedback development jc desktop virtual space compact master manipulator 
proc 
sig graph pages august 
johnson cohen 
efficient minimum distance computation 
ieee conference robotics automation pages 
klosowski held mitchell 
efficient collision detection bounding volume hierarchies 
ieee trans 
visualization computer graphics 
lc ming lin john canny 
efficient algorithms incremental distance computation 
ieee conference robotics automation pages 
lin ming lin 
efficient collision detection animation robotics 
phd thesis department electrical engineering computer science university california berkeley december 
larsen gottschalk lin manocha 
fast proximity mc queries swept sphere volumes 
technical report tr department computer science university north carolina chapel hill 
mirtich canny 
impulse simulation rigid bodies 
proc 
acm interactive graphics monterey ca 
lin manocha 
degree freedom haptic visualization force fields technical report computer science department university north carolina chapel hill 
mpt troy 
degree voxel sampling 
proc 
acm siggraph pages 
ms salisbury 
phantom haptic interface device probing virtual objects 
proc 
asme haptic interfaces virtual environment teleoperator systems 
nelson hollerbach johnson 
haptic manipulation virtual mechanisms mechanical cad designs 
proc 
ieee conference robotics automation pages 
pml ponamgi manocha lin 
incremental algorithms collision detection polygonal models 
ieee transactions visualization computer graphics 
qui quinlan 
efficient distance computation non convex ob rkk jects 
proceedings international conference robotics automation pages 
ruspini khatib 
haptic display complex graphical environments 
proc 
acm siggraph pages 
sbm salisbury brock swarup zilles 
haptic rendering programming touch interaction virtual objects 
proc 
acm symposium interactive graphics pages 
snyder 
interactive tool placing curved surfaces interpenetration 
proceedings acm siggraph pages 
st technologies ghost tm sofware developer toolkit 
programmer guide 
thompson johnson cohen 
direct haptic rendering models 
proc 
acm interactive graphics pages 
zs zilles salisbury 
constraint god object method haptics display 
proc 
ieee rsj int 
conf 
intelligent robotics systems 
