evolution di erent neuronal control structures autonomous agents ralf salomon ai lab department computer science university zurich zurich switzerland fax email salomon unizh ch evolutionary methods generate controllers real world autonomous agents attracted attention 
pertinent research employed genetic algorithms variations thereof 
research indicated presence epistasis drastically slows genetic algorithms 
reason uses di erent evolutionary method evolution strategies evolution various complex neuronal control architectures mobile robots inspired braitenberg vehicles 
experiments evolution strategy accelerates development process order magnitude hours compared days 
furthermore evolution strategy yields cacy applied receptive eld controllers require parameters braitenberg controllers 
dramatic speedup important development process done real robots 
key words evolutionary algorithms evolving neural network controllers autonomous agents braitenberg vehicles receptive elds 
autonomous agents self sucient embodied systems robots useful 
autonomous means agent operates human control 
self sucient means agent maintain internal energy level long time 
typically agent receives reward doing useful 
autonomous agents equipped sensors ectors motors grippers 
agent perceives environment sensors infrared sensors manipulates environment actively ectors 
major goal research autonomous agents study intelligence result system environment interaction article published robotics systems understanding intelligence computational level 
autonomous agents important eld new ai 
overview special issues involved autonomous agent design see example 
control structures autonomous agents developed designer applying evolutionary algorithms 
argued automated evolution means evolutionary algorithms appropriate design hand evolutionary algorithms believed allow development complex control structures exhibit interactions sub systems :10.1.1.101.146
research projects genetic algorithms gas evolve neural control structures autonomous agents :10.1.1.133.9324
research projects focused gas option evolutionary algorithms 
evolutionary algorithms framework comprises di erent algorithms genetic algorithms genetic programming evolution strategies evolutionary programming variants 
gives overview genetic programming 
gas successfully applied small tasks increasing amount research gives strong evidence gas time consuming parameters exhibit epistasis 
epistasis describes nonlinear interaction parameters respect tness individual 
results research strongly indicate independence parameters essential prerequisite ga exhibit high performance presence epistasis drastically slows convergence 
problem context autonomous agents parameters control systems real world applications independent see sections 
consequently evolution simple controllers braitenberg vehicles time consuming 
alleviate problem suggested divide evolution complex systems di erent stages evolutionary algorithms appear better approaches :10.1.1.101.146
surprisingly little attention devoted evolution strategies ess developed rechenberg schwefel 
ess especially designed applications involve real valued parameters 
ess gas focus section gives brief comparison algorithms respect autonomous agents 
investigates ecacy ess applied evolution various controllers 
experiments done khepera tm robot behaves real physical environment 
khepera robot example small robot widely research autonomous agents 
section describes khepera environment detail 
order maintain example certain energy level agent perform di erent tasks exploring environment moving avoiding obstacles forth 
agent behavior controlled control system typically implemented neural network 
control system uses sensor readings internal state determine agent actions 
sections describe di erent controller types braitenberg controllers receptive elds 
section explains architecture presents representative results 
evidence suggest ess quite suited research 
sections show es example evolves reasonable braitenberg controllers generations takes approximately half hours 
compared research uses gas identical task ess accelerate developmental process order magnitude :10.1.1.133.9324
speed great practical relevance experiments done physical robots dynamically interact real world 
time reduction allows application complex control structures currently intractable 
section presents experiments receptive elds require times parameters simple braitenberg controllers 
astonishing experiments ess yield ecacy terms function evaluations search space times larger normally previous research tried nd search space small possible order obtain ga performance :10.1.1.133.9324
evolutionary algorithms evolutionary algorithms seen framework includes genetic algorithms evolutionary strategies evolutionary programming genetic programming 
algorithms designed di erent methodologies 
example gas consider recombination crossover important evolution strategies evolutionary programming consider mainly mutation 
algorithms similar adopting features variants 
despite di erences evolutionary algorithms heuristic population search procedures incorporate random variation selection 
typically search procedures generate spring generation 
tness value de ned tness function assigned spring 
depending tness population member speci probability survive 
evolutionary algorithms implement di erent operators algorithm best suited di erent applications 
subsections give brief description gas ess 
section compares schemes detail respect autonomous agents adaptivity performance issues epistasis 
signi cant amount research focuses advantages particular features particular evolutionary algorithms di erences main point 
intention provide alternative gas research autonomous agents 
genetic algorithm ga variants exist canonical ga described follows step initialize population individuals evaluate individuals tness step select parents chosen selection scheme roulette wheel linear ranking truncation selection step recombine selected parents exchanging parts genes step mutate genes prespeci ed probability step go step ga particular application domain designer concerned coding parameters implementation mutation recombination crossover operators choice selection scheme 
traditionally ga treats parameter bit string 
depending required precision coding scheme encode parameter certain number bits attached mapping function 
mapping function maps bit representation real valued parameters 
coding scheme directly bit representation programming language 
case additional mapping function needed mapping function implemented processor architecture 
algorithms bga treat parameter real valued data type implement mutation adding subtracting small random numbers :10.1.1.30.5983
generation ga typically draws pairs parents applies mutation recombination probabilities respectively 
generating speci ed number spring ga evaluates spring selects population members parents generation 
typical selection schemes roulette wheel selection linear ranking truncation selection 
gas elitist selection scheme preserves best individual order maintain gained success 
uence di erent selection schemes resulting convergence 
gas proven important nd appropriate parameter settings 
normally mutation probability set small value denotes number parameters number weights neural network controller :10.1.1.30.5983
generally gas prefer high recombination rates 
point point crossover recombination probability set values uniform recombination probability set :10.1.1.30.5983
ga framework successfully applied various domains function optimization vlsi design neural network learning autonomous agent development 
applications gas eld autonomous agents example :10.1.1.133.9324
evolution strategies ess introduced see 
es maintains population parents generates spring generation 
es parents selected best spring es parents selected union parents spring 
details see 
currently es recommended especially noisy environments 
evolutionary programming ep introduced fogel 
ep evolutionary algorithm similar ess 
applications general function optimization 
schemes similar expected ep yields similar results applied evolution braitenberg vehicles 
contrast gas ess ep encode real valued parameter oating point number applies mutation parameters simultaneously 
mutations typically implemented adding normal distributed random numbers 
key concept ess simplest form maintain global step size individual 
step size self adapted mechanism spring inherits step size parent 
step size normally modi ed multiplication lognormal random numbers prior mutation 
means step size self adapted nearly optimal values statistical sense spring survive best adapted step size 
details di erent adaptation schemes step size see 
elaborate forms ess maintain step size parameter maintains 
matrix generate correlated mutations 
overview elaborate methods 
experiments reported global step sizes es converged generations generations 
small number generations advanced step size schemes expected yield better performance 
addition ess recombination schemes gas 
self adaptation mechanism step size great advantage 
allows ess self adapt di erent tness landscapes 
population size ess parameters tuned designer 
es directly encode parameter oating point number es better suited problems neural networks speci ed set real valued parameters 
genetic algorithm versus evolution strategy di erences gas ess may small signi cantly uence performance algorithms consequently aim di erent problem domains 
remainder subsection discusses important aspects di erences 
main di erence algorithms gas apply mutations parameters spring ess apply mutation parameters 
furthermore ess encode parameters numbers gas general case worry coding scheme 
traditionally gas encode parameters bitstrings 
applications involve real valued parameters directly oating point numbers 
addition ess feature self adaptation mechanism self adapts step size parameter settings done user 
noted similar gas ess operate genomes variable length long recombination operator appropriately implemented 
papers report high performance gas applied optimization multimodal function contain millions local optima global optimum 
high performance achieved applications suggest gas easily escape local optima yield global convergence 
results show performance gas drastically degrades coordinate system rotated optimizing separable multimodal functions 
rotation induces epistasis describes nonlinear interaction parameters respect tness function 
problem epistasis real world applications 
furthermore theoretical analysis shows computational complexity gas increase applied multimodal functions parameters depend 
applied simple unimodal functions epistasis drastically degrades performance gas 
analysis suggests independence parameters essential prerequisite obtaining high performance gas 
presence epistasis situation occur 
tness function neighborhood parent resembles ridge diagonally oriented search space 
situation mutating parameters leads spring fall ridge worse tness parent 
words progress obtainable ridge general case direction parallel principle axes coordinate system 
general analysis suggests epistasis mutation applied parameters simultaneously 
technical applications important question parameters independent depend epistasis 
looking control structures autonomous agents controller parameters independent general case 
sections investigate evolution di erent controllers 
turns weights controllers independent 
experimental setup section describes experimental setup evolution optimization di erent control architectures 
subsection describes khepera robot widely research autonomous agents subsection describes arena robot operate 
khepera robot khepera robot see mm diameter mm high 
robot equipped infrared ambient light sensors motors controlled independently 
khepera sensors motors controlled motorola micro controller 
robot operate modes 
rst mode program downloaded board memory allows khepera operate connection computer 
second mode khepera connected workstation serial link 
experiments reported robot controlled workstation ambient light sensors 
detailed description robot electrical parts 
motors controlled independently sending com wheel left wheel right ir ir ir ir ir ir ir ir fig 

khepera robot 
right part shows approximate location infrared sensors ir ir mands function calls workstation robot 
valid speed values integers range inside program values normalized range 
avoid problems caused oating point integer conversion equal distributed random numbers added motor speeds time step 
setting motors speed di erent signs example robot spins spot 
robot interprets speed settings commands 
internal pid controllers take care robot dynamics 
rapidly changing motor commands induce additional dynamics cause problems tness evaluation 
means attached wheel encoders robot measures motor real speed di er command setting situations robot move 
real speeds obtained sending special commands robot 
khepera equipped infrared proximity sensors 
sensor readings type integer values range 
program sensor readings normalized values range 
sensors give reasonable input values object distances mm mm 
sensor value indicates robot close object sensor value indicates robot receive re ection infrared signal 
major problem khepera sensor readings noisy causes problems tness evaluation controller weights braitenberg network 
ect noisy sensors tness evaluation seen 
shows tness contributions see dynamically changing constant environmental conditions constant motor speeds constant ambient light constant position arena 
furthermore sensor readings subject environmental conditions material sensed object object surface ambient light 
long series experiments environment kept constant 
time steps fitness contribution noisy fitness time fitness contribution fig 

noisy sensor readings cause dynamical change individual tness contributions constant environmental conditions 
fig 

arena approximate size cm 
indicated position facing left starting point tness evaluation 
experimental setup experimental setup chosen close possible proposed research 
shows arena robot move 
arena size cm walls wood height cm 
width corridors chosen proximity sensor maximum value 
discussed robot arena move forward quickly avoid obstacles 
order evolve braitenberg vehicles tness function incorporate motor speeds distance obstacles 
speed distance sucient 
case robot spinning spot high speed far away obstacle high tness 
robot practical 
tness function enhanced third term favors straight movements penalizing turns see 
tness measured follows 
particular time step motor speeds proximity sensors ir measured 
speed robot center penalty term 
jv sensor highest activation ir max ir calculated 
tness contribution step 
ir total tness sum max time steps max max 
ir tness function adopted research de ned di erently 
evaluation di erent tness functions interesting far scope 
khepera board controller allows sending sensor values milliseconds 
means robot moves milliseconds constant motor speeds 
controller receives new values calculates new motor speeds time step 
individual tness component calculated added total tness 
braitenberg vehicles outlined autonomous agent sit doing consume energy eventually die 
agent operate environment 
moving avoiding obstacles key issue autonomous agent research 
braitenberg proposed simple architectures tasks 
section describes braitenberg type architecture detail presents representative results evolution strategy 
architecture shows control architecture inspired braitenberg type vehicle 
main idea sensor high proximity activation accelerates motor sensor side sensor slows motor opposite side 
principle presence obstacle leads di erent motor speeds resulting particular trajectory 
depending activation proximity sensors robot turns spins spot backs 
type architectures simple straightforward nding appropriate weights easy 
control architecture typically implemented neural network 
activation left motor calculated formula ir ir denotes activation proximity sensor denotes weight connects proximity sensor ir left motor 
weight right motor left motor obstacle moving path fig 

control architecture inspired braitenberg type vehicle 
sensory information controls motors inhibitory excitatory connections 
represents idle activation left motor 
bias weight responsible robot forward motion absence obstacle 
calculation right motor activation similarly ir main problem determine weights robot moving avoids obstacles 
done trial error 
standard neural network training procedures reasonable determine set training patterns prior training 
evolution strategies appropriate candidates optimization problem 
experiments subsection reports typical results evolving braitenberg vehicles means es self adaptation step size 
es generates new spring generation selects ttest individuals parents generation 
due extremely noisy tness evaluation see non elitist selection scheme chosen eliminate spurious candidates 
experiments es generates spring crossover uniform recombination intermediate recombination initial standard deviation set 
source additional noise individual starting conditions vary 
experiment runs performed 
figures typical runs resemble average performances 
gure shows fitness generation braitenberg fittest average fig 

typical run evolution constrained braitenberg vehicle 
upper graph represents best individual lower graph average population 
tness best individual average tness entire population 
averages runs shown averaging eliminates interesting details 
runs deviate percent 
fitness evaluation done max time steps takes seconds controller 
main problem nd rst braitenberg controller exhibits tiny reasonable behavior 
order start small speeds weights initialized small random numbers 
rst series experiments exploit morphology robots left right part controllers constrained equal mod constraint leads reduced search space parameters 
typical run evolution constrained braitenberg controller seen 
gure shows average tness population ttest agent 
rst generations controllers cause robot sitting initial position crashing backwards wall resulting negative tness 
generations agents moving forward steps got stuck wall 
short forward movement results small positive tness rst step useful agent 
generations ttest agents moving slowly inside corridor 
hitting walls 
hitting wall controllers set motor speeds negative values causes robots back wall turning continue moving inside corridor 
generations ttest agents perform complete laps arena 
controller sides constrained equal identical weights ensure total symmetric behavior 
tolerances electrical characteristics motors sensors impose asymmetric behavior 
consequently fitness generation unconstrained braitenberg fittest average fig 

typical run evolution unconstrained braitenberg vehicle 
upper graph represents best individual lower graph average population 
controllers nd compromise 
result braitenberg vehicles constrained controllers move forward straight line turn approach obstacle 
shows typical run evolution unconstrained braitenberg controller 
controller parameters es evolve sides controller connections left motor activation right motor activation seen figures evolution unconstrained braitenberg controller requires time nal performance lower performance constrained controller 
unconstrained controller develops di erent survival strategy 
rst controllers di erent bias weights cause robot turn small circles 
circling results small positive tness 
generations circling process preserved radius larger larger 
generations controller side improves behavior prevents robot crashing wall generations robots perform complete laps arena 
behavior evolved controllers interpreted wall 
wall behavior encoded tness function emerges evolution process 
discussion previous subsection investigated development di erent controller types constrained unconstrained controllers 
constrained control architecture inspired symmetry khepera robot 
symmetry observable biological animals 
constrained controller parameters accelerates evolution process time limits number potential solutions 
consequence controllers develop di erent survival strategies 
relationships controller types investigated series control experiments weights unconstrained controllers initialized weights taken evolved constrained controller 
rst generations controllers losing behavior tness dropped values 
unconstrained controllers started develop wall behavior discussed 
developed controller adapted environment control architecture 
investigations shown controller reacts sensitively parameter changes controller parameters exhibit high epistasis 
epistasis reasonable change example bias weight result high speed robot crash wall 
consequently parameters adapted simultaneously 
ess obey requirement applying mutation parameters time 
suspected epistasis main reason observable ineciency ga approaches 
research reports gas population individuals need generations requires approximately hours 
drastic slow gas uence epistasis observed optimizing widely test functions 
indicated independence parameters optimized essential prerequisite gas ga performance signi cantly degrades epistasis 
pointed ga research main focus application ess evolution braitenberg vehicles 
comparison remote research problematic parameters real world application replicated 
additional control experiments gas yielded roughly performance reported ga needs approximately times tness evaluations es 
receptive fields braitenberg architectures appealing simple de ned relatively small number parameters implies lowdimensional search space 
due simplicity pure braitenberg controller compensate potential non linearities sensors develop complicated behavioral patterns 
arti cial neural network model receptive elds er option going step limits 
section describes architectures receptive elds presents results applying es development controllers 
speci cation receptive elds requires parameters 
surprising es yields qualitatively similar controllers amount function evaluations 
experiments es scales nicely encourage research community apply es ep development complex systems 
architecture arti cial receptive elds inspired neurons exhibit specialized responses visual stimuli visual cortex 
neurons respond selectively respect spatial position respond selectively respect orientation straight line 
idea selective responses easily implemented radial basis functions rbfs 
general overview rbfs 
receptive elds widely eld autonomous agents section presents important encouraging results receptive eld control architecture explained greater detail 
example dimensional receptive eld 
hidden unit receptive eld maintains center width activation hidden unit determined follows denotes euclidian distance unit center input vector consisting infrared sensors receptive eld connected ir dimensional case distance simply ir ir denotes activation connected infrared sensor 
output unit receptive eld averages hidden units form ij ij denotes weight connects hidden unit output unit receptive eld architecture weights ij subject output ir fig 

dimensional receptive eld 
output ir ir fig 

dimensional receptive eld 
evolutionary process 
complete controller consists dimensional receptive elds motor side connected infrared sensor receptive eld 
frontal sensors controller khepera implement receptive elds il ir equation 
con guration hidden layers shared reduces hidden layer elds 
activation motor side calculated sum receptive elds il ir interesting note receptive eld controller explicit idle weights idle weights distributed receptive elds 
presents dimensional receptive eld consists hidden units dimension 
controller equation extended appropriately 
khepera controller considers frontal sensors consists dimensional receptive elds 
complete architecture dimensional receptive elds 
box represents receptive eld 
units axis box contains hidden units dimensional centers case constrained controller evolution process determine 
output connections ij comparison simple braitenberg architecture shows see figures essentially braitenberg fig 

complete architecture dimensional receptive elds 
connection substituted entire receptive eld 
experiments discussed section dimension receptive eld consists units widths units equally set centers receptive eld equally distributed respect input space denoting dimensions 
khepera controller units dimension consisted 
free weights parameters case dimensional receptive elds 
weights parameters case dimensional receptive elds respectively 
experiments subsection reports results applying es evolution dimensional receptive elds 
figures show representative runs evaluation twodimensional receptive elds respectively 
gures ttest controller population average 
seen tness values comparable simple braitenberg controllers see 
comparison figures shows es evolves receptive eld controllers tness greater considerably shorter time braitenberg controllers 
phenomenon quite interesting considering fact receptive elds require parameters braitenberg controllers 
reasons astonishing behavior unclear 
tness function associated receptive elds 
example particular behavior fitness generations dimensional receptive fields fittest average fig 

typical run evolution constrained receptive eld controller 
upper graph represents best individual lower graph average population 
fitness generations dimensional receptive fields fittest average fig 

typical run evolution constrained receptive eld controller 
upper graph represents best individual lower graph average population 
obtained adapting particular output connection dimensional receptive eld 
similar behavior obtained adapting neighborhood output weights 
standard neural network training resulting networks yield signi cantly di erent mapping 
considering agent environment interaction networks yield similar behavior 
es options choosing mutations allows faster progress 
generations test candidates perform complete laps arena 
statistical purposes presents average di erent runs evolving dimensional receptive eld controllers 
graphs represent ttest population member population average 
standard deviations included 
fitness generations dimensional receptive fields fittest average fig 

average runs evolution constrained receptive eld controller including standard deviation 
upper graph represents best individual lower graph average population 
compared braitenberg controllers receptive eld controllers exhibit smoother behavior 
smoother behavior seen performance gures impression observer looking interaction 
di erent series experiments focused sigmoidal activation functions output layer 
motor activation substituted max max denoting maximal motor speed max 
equation limits motor speed max typical run dimensional receptive elds sigmoidal output units 
performance similar receptive elds sigmoidal output units behavior seen gure smoother 
robot slows softly turns moving back forth 
receptive eld architecture allows development complex behavior 
depending object agent distance instance single receptive eld develop positive negative contribution motor activation behavior developed single braitenberg connection 
receptive eld easily compensate nonlinearity infrared sensors dimensional receptive eld develop wall behavior 
fitness generations receptive fields sigmoidal activation fittest average fig 

typical run evolution constrained receptive eld controller sigmoidal motor activation 
upper graph represents best individual lower graph average population 
emergent behavior autonomous agent research community emphasizes di erence preprogrammed emerged behavior 
section discusses evolved solutions exhibit emerged behavior behavior preprogrammed 
known instance braitenberg controller form value represents idle activation solution leads turns presence object radius depends distance object object position relative agent 
solution mind expected evolution process yields similar results 
interesting note experiments evolution process develops controllers di erent behavioral mechanisms 
solutions form connection lateral sensor ir left motor negative value connection sensor ir positive value 
particular weight vector implements wall behavior 
presence object left hand side slows left motor 
consequence robot turns object 
turning sensor ir develops positive uence left motor causes robot turn away object 
steps robot moves object wall certain distance ect sensors cancel ir ir wall behavior means imposed preprogrammed mech directly enforced tness function 
result evolutionary process agent environment interaction 
behavior particular solution evolution optimization process chance population converged particular solution basin attraction respectively 
runs population converges di erent solutions normal braitenberg controllers solutions 
argued particular solution certain advantages 
selection solely controller tness respect chosen tness function criteria involved 
evolved controllers results agent embodiment environment sensors tness function nal solution partly result random self organization process 
interesting investigate wall controllers emerge 
discussed practical application evolution strategy evolution optimization di erent controllers braitenberg vehicles 
braitenberg vehicles autonomous agents simple control architecture typically implemented neural network 
experiments simple braitenberg controllers receptive elds investigated 
braitenberg controllers classi ed constrained unconstrained controllers 
controllers typically develop di erent survival strategies discussed 
comparison research braitenberg controllers apply genetic algorithms similar tasks shows es approach faster ga approach 
suspected high epistasis controller parameters drastically slows ga approach 
es accelerates development braitenberg controllers order magnitude important experimentation done real systems 
es converges hours compared hours required ga approach 
addition existing research investigated receptive elds 
receptive elds inspired neurons example visual cortex 
braitenberg controllers appealing simple de ned small number parameters 
receptive elds contrary require parameters appealing receptive elds compensate electrical non linearities develop complicated behavior 
respect important applied es yields slightly better performance evolving receptive elds controllers 
controller type ga inecient ga require orders magnitude function evaluations need done real robots 
mentioned receptive elds responding selectively particular stimuli bene cial evolutionary optimization process 
results ess appear superior gas 
despite impression purpose simply favor evolution strategy 
main point advocate ess alternative gas 
theoretical reasons practical experiments indicate ga speeded decreasing recombination probability increasing mutation rate 
expected ess tuned particular experiments 
experiments done real robots time short extended statistics rst trial yield reasonable solutions moderate time 
purpose evolution strategies evolutionary programming candidates self adapt parameters step size mutation probability 
allows better embed approach complex tasks 
performance ess degrade applied receptive eld controllers experiments suggest research community spend attention alternative evolutionary algorithm 
mutations rarely occur living things argued small mutation rate usually gas biologically plausible mutation rate ess 
argue way 
looks living things individuals di er attributes 
example comparing arbitrary selected humans humans di er perspectives 
nature applies mutation genes 
genomes encode parameters resulting individual 
genome encodes developmental processes 
modifying gene results di erent developmental programs consequently resulting individual di ers perspectives 
evolutionary approaches involve real developmental processes growing argue ess better re ect nature principles 
furthermore experiments indicate evolution process highly bene exploiting physical symmetries 
remaining question practical evolutionary algorithms autonomous agents 
engineer ess appropriate gas personal communication dario floreano 
ess avoid parameter coding issues avoid choice mutation probability mutation strength self adapted es 
furthermore experiments done parameter settings population size parameter tuning performed 
evolutionary algorithms appealing tries copy principles nature 
evolutionary methods appropriate static slowly changing environments components adaptation takes place agent life time scale 
faster adaptation requires learning algorithms evolved control architecture 
hybrid scenario evolved control architecture allows agent behave environment time consuming learning stage evolved learning algorithms allows fast adaptation 
supported part human capital mobility fellowship european union number 
rolf pfeifer christopher helpful discussion 
ack optimal mutation rates genetic search forrest ed proceedings fifth international conference genetic algorithms morgan kaufmann san mateo ca 
ack 
schwefel overview evolutionary algorithms parameter optimization evolutionary computation mit press cambridge ma 

beyer theory evolution strategies bene ts sex theory 
evolutionary computation mit press cambridge ma 
braitenberg vehicles experiments synthetic psychology 
mit press cambridge ma 
brooks robust layered control system mobile robot 
ieee journal robotics automation elsevier amsterdam 
cli husbands harvey evolving visually guided robots meyer roitblat wilson eds animals animats mit press bradford books cambridge ma 
de jong analysis behavior class genetic adaptive systems 
ph thesis university michigan 
floreano mondada automatic creation autonomous agent genetic evolution neural network driven robot cli husbands meyer wilson eds animals animats iii proceedings third international conference simulation adaptive behavior mit press bradford books cambridge ma 
floreano mondada evolution homing navigation real mobile robot ieee transactions systems man cybernetics part 
fogel autonomous automata industrial research 
fogel evolutionary computation new philosophy machine learning intelligence ieee press piscataway nj 
goldberg genetic algorithms search optimization machine learning addison wesley publishing 
harvey husbands cli thompson jakobi evolutionary robotics sussex approach press pfeifer brooks eds robotics autonomous systems special issues practice autonomous agents elsevier :10.1.1.101.146
huber mallot evolution sensorimotor control autonomous agent maes mataric 
meyer pollack wilson eds animals animats proceedings fourth international conference simulation adaptive behavior mit press bradford books cambridge ma 
khepera users manual laboratoire de swiss federal institute technology epfl lausanne switzerland 
maes ed designing autonomous agents theory practice biology engineering back 
mit press cambridge ma 
moody darken learning localized receptive fields touretzky hinton sejnowski eds proceedings connectionist models summer school morgan kaufmann publishers san mateo ca 
uhlenbein schlierkamp voosen science breeding application breeder genetic algorithm :10.1.1.30.5983
evolutionary computation mit press cambridge ma 
nol parisi learning adapt changing environments evolving neural networks technical report institute psychology 
national research council rome italy 
techreport accessible www kant rm cnr public html 

pfeifer building design principles autonomous agents maes mataric 
meyer pollack wilson eds animals animats proceedings fourth international conference simulation adaptive behavior mit press bradford books cambridge ma 

potter de jong cooperative coevolutionary approach function optimization davidor schwefel eds proceedings parallel problem solving nature springer verlag 
rechenberg evolutionsstrategie 
frommann holzboog stuttgart 
salomon performance degradation genetic algorithms coordinate rotation fogel angeline ack eds proceedings fifth annual conference evolutionary programming mit press cambridge ma 
salomon reevaluating genetic algorithm performance coordinate rotation benchmark functions survey theoretical practical aspects genetic algorithms 
biosystems elsevier science 
schwefel evolution optimum seeking 
john wiley sons new york 
hertz exploiting neurons localized receptive fields learn chaos 
complex systems 
thierens goldberg convergence models genetic algorithm selection schemes davidor schwefel eds proceedings parallel problem solving nature springer verlag 

