issn de recherche institut national de recherche en informatique en automatique performance evaluation alternative mapping schemes storing xml data relational database daniela florescu donald kossmann mai th eme performance evaluation alternative mapping schemes storing xml data relational database daniela florescu donald kossmann interaction machine images donnes projet rodin rapport de recherche mai pages xml emerging dominant data formats data processing internet 
query xml data query languages xql lorel xml ql xml gl proposed 
study xml data stored queried standard relational database system 
purpose alternative mapping schemes store xml data relational database discuss xml ql queries translated sql queries mapping scheme 
results comprehensive performance experiments analyze tradeo alternative mapping schemes terms database size query performance update performance 
discussion focussed xml xml ql results relevant semi structured data models query languages semi structured data 
key words semistructured data xml relational database system performances 
unite de recherche inria rocquencourt domaine de voluceau rocquencourt bp le chesnay cedex france telephone international international analyse de performance pour le des xml dans un systeme de gestion base de le langage xml merge comme le langage standard change de sur le web il est fort de ces donnes en un langage 
plusieurs propositions de langage ont dans ce sens tant dans la recherche que dans xql lorel xml ql ou bien xml gl 
dans cet article nous le du des donnes xml dans un de gestion de bases de donnes de des en le de sql de ces 
nous plusieurs les donnes xml dans des tables nous la des xml ql dans des sql pour des organisations de donnes proposes 
nous une analyse comparative des performances 
cette analyse nous permet de en les les di organisations en terme de taille de la base de performances des de performances des mises jour 
le fait que cette tude soit sur le langage de nition de donnes xml langage de xml ql les dans cet article plus des de donnes semi structures une large de langages de pour des donnes semi structures 
mots cl donnes semi structures langage xml de gestion base de donnes performances 
performance evaluation alternative mapping schemes storing xml data relational database clear applications met relational object relational object oriented data models 
examples applications need integrate data data sources applications schema known time data generated 
support kinds applications semi structured data models proposed :10.1.1.45.8397:10.1.1.117.5869
common feature data models lack schema data self describing 
xml emerging standard de ne semi structured data 
retrieve data semi structured databases special semi structured query languages proposed examples xql lorel xml ql xml gl :10.1.1.45.8397
common features languages regular path expressions ability extract information schema data 
possible approaches store semi structured data xml documents execute queries data 
build special purpose database system 
example research prototypes lore strudel lotus notes example commercial product 
system particularly tailored store retrieve xml data specially designed structures indices particular query optimization techniques :10.1.1.45.8397
extent sgml databases systems designed store graphs software engineering environments fall category 
object oriented database system 
approach rich data modeling capabilities exploited 
approach example studied implemented commercial systems 
approach pursued part monet project 
standard relational database system 
approach xml data mapped tables relational schema queries posed semi structured query language translated sql queries 
apparently oracle microsoft currently building tools facilitate approach 
unclear approaches going nd wide spread acceptance 
theory special purpose systems best going take long time systems mature scale large amounts data 
likewise current generation object oriented database systems mature evaluate queries large databases 
relational database systems mature scale additional advantage relational database xml data traditional structured data exist making possible build applications involve kinds data little extra ort 
relational databases built support traditional structured data requirements processing xml data vastly di erent requirements process traditional data 
optimize relational database systems xml concentrated models rr daniela florescu donald kossmann algorithms extract schema xml documents semi structured data general :10.1.1.137.5340
goal analyze semi structured data possibly query workload target application order nd best approximated schema 
way semi structured data stored relational database little cuts schema extraction easier formulate queries :10.1.1.41.3258
purpose experience study performance relational databases process xml data 
extracting schema goal study general advantages pitfalls relational databases store manage xml data study tradeo fundamentally di erent schemes store xml documents relational databases 
describe alternative mapping schemes store xml documents show queries updates processed mapping schemes results comprehensive performance experiments analyze space requirements times running times reconstruct xml document running times series queries update functions mapping scheme 
mapping schemes study simple implemented ad hoc way improved models extract schema results performance experiments input models 
experiments synthetic experimental database synthetic benchmark queries update functions 
remainder organized follows section gives brief overview xml query languages xml 
section describes alternative mapping schemes store xml documents relational database 
section addresses query processing issues 
section presents results performance evaluation 
section contains suggestions 
data model query language xml extensible markup language xml created world wide web consortium simpli ed subset sgml specially designed web applications 
goal xml enable delivery self describing data structures arbitrary depth complexity applications require structures 
xml retains key sgml advantages extensibility structure validation language designed vastly easier learn implement full sgml 
xml di ers html major respects information providers de ne new tag attribute names inria performance evaluation alternative mapping schemes storing xml data relational database document structures nested level complexity xml document contain optional description grammar applications need perform structural validation 
structurally xml document consists set elements boundaries delimited start tags tags 
element type identi ed name called generic identi er may set attribute speci cations 
attribute speci cation name value 
addition element arbitrary list nested subelements 
example gives avor xml language 
example assume data source wants export information names addresses hobbies members family 
possible way structuring information representing xml follows 
person unique identi er id age attribute 
information hobbies person provided valued subelements 
child elements person contain children family subelements child element person contains pointer child 
id age namei ave id age namei columbia ave id age namei ave id age child namei ave rr daniela florescu donald kossmann data model semi structured data xml particular standard syntax semi structured data exchange :10.1.1.45.8397
need managing semi structured data independently web various aspects managing semi structured data extensively studied years :10.1.1.41.3258:10.1.1.117.5869:10.1.1.117.5869
broadly speaking semi structured data refers data characteristics schema advance may implicit data schema relatively large size data may changing frequently schema descriptive prescriptive describes current state data violations schema tolerated data strongly typed di erent objects values attribute may di ering types 
models proposed literature semi structured data big majority labeled directed graphs :10.1.1.41.3258:10.1.1.117.5869
simple graph data model similar oem model proposed :10.1.1.41.3258
model semi structured database modeled directed labeled graph nodes model objects outgoing edges object model attributes object 
edges labeled attribute names 
object unique identi er internal object set attributes 
addition leaves graph labeled data values integers strings dates 
edges target objects leaves called data attributes attributes called 
object oriented data model objects database constrained similar sets attributes values data attributes constrained type 
graph modeling fragment xml data example depicted 
mapping xml originally developed text documents theoretical data model raises problems 
order attributes subelements object relevant 
xml order arti cially introduced purpose serialization order semantically relevant 
order loose order cases order relevant consider ordered graph model total order set outgoing arcs node graph 
second question concerns distinction attributes subelements 
decided maintain distinction modeled arcs graph 
decision concerns modeling xml idrefs 
model implement regular arcs graph 
obviously decisions imply loss information translating xml data model 
distinction attributes elements particularities xml currently distinguish di erent data types proposals extend xml respect 
inria performance evaluation alternative mapping schemes storing xml data relational database age name address age hobby address name age child child person person age name address child name address person person peter john david mary hobby cycling swimming columbia ave ave ave ave hobby painting data graph corresponding xml fragment example 
consideration impact results involve extra bookkeeping 
query language state art contains abundant query languages semi structured data xml 
major common characteristic languages fact labeled graph model 
languages emphasize ability query schema data ability accommodate irregularities data missing repeated elds heterogeneous records regular path expressions 
take example xml ql query language :10.1.1.45.8397
xml ql enables data extraction xml documents allows express mappings di erent ontologies 
query unknown unpredictable data structures xml ql query languages semi structured data features common regular path expressions ability query schema attributes 
addition xml ql powerful restructuring mechanism result xml ql query complex xml document 
ignore restructuring part concentrate data extraction part language data extraction costly part query evaluation 
consider queries form select rr daniela florescu donald kossmann clause conjunction xml patterns 
xml pattern de ned tree leaves labeled constants variables unary predicates 
edges pattern labeled string constants variables unary predicates regular path expressions constructed alternation concatenation kleene star alphabet strings special symbol underscore denote called wild cards match attribute 
furthermore subpatterns marked optional 
query nd persons older live ave retrieve names possibly hobbies expressed xml ql follows select age namei ave evaluation query results table contains bindings variables query 
semantic language natural object database match pattern data tree rooted object matches required pattern pre predicates constant selections pattern satis ed 
optional edges enclosed brackets xml ql syntax objects qualify match edge match corresponding sub tree matches optional subpattern 
optional sub patterns contain optional edges 
example query returns tuples peter null mary painting 
storing xml documents relational database section describe alternative mapping schemes store xml document relational database 
starting point labeled graph represents xml document described section 
mapping scheme determines tables create relational database indices construct tables store objects internal nodes graph attributes edges values leaves 
course meaningful mapping schemes conceivable xml document fact inde nitely 
concentrate basic canonic mapping schemes section characterize mapping schemes dimensions represent attributes represent values 
rst dimension discuss inria performance evaluation alternative mapping schemes storing xml data relational database di erent variants second dimension discuss alternative schemes resulting mapping schemes 
assess mapping schemes part performance evaluation section 
mapping attributes edge approach simplest scheme store attributes single table call table edge table 
edge table records oids source target objects attribute name attribute ag indicates attribute inter object points value ordinal number recover attributes object right order carry updates objects attributes name 
edge table structure edge source ordinal name flag target key edge table 
shows edge table populated example xml document section 
bold faced numbers target column oids target objects 
italicized entries target column refer representations values 
values stored way put values table illustration purposes discuss alternative ways represent values edge approaches section 
section discuss role ag eld shown 
terms indices propose establish index source column combined index fname columns 
index source column useful forward traversals needed reconstruct speci object oid 
index fname useful backward traversals nd objects child named john experimented di erent sets indices part performance experiments reported indices useful ones 
simple variant edge approach store attribute names separate table 
experimented variant variant reduces size database signi cantly increases cost query processing fname index longer established slowing backward traversals dramatically cases 
consider variant remainder 
rr daniela florescu donald kossmann source ordinal name target age name peter address fruit 
child child age 
example edge table source ordinal target painting swimming cycling child source ordinal target example attribute tables attribute approach second mapping scheme propose group attributes name table 
approach resembles binary storage scheme proposed store semistructured 
conceptually approach corresponds horizontal partitioning edge table rst approach name partitioning attribute 
create attribute tables di erent attribute names xml document attribute table structure aname source ordinal flag target key attribute table elds meaning edge approach 
shows hobby child attribute tables example xml document section 
terms indices propose construct index source column attribute table separate index target column 
analogous indexing scheme propose edge approach 
source 
ord name targ name 
ord child targ child ord hobby targ hobby 
peter 
null null 
peter 
null null 
mary 
painting 
john 
null null swimming 
john 
null null cycling 
david 
null null null null example universal table inria performance evaluation alternative mapping schemes storing xml data relational database universal table third approach study generates single universal table store attributes xml document 
corresponds universal table separate columns attribute names occur xml document 
universal table corresponds result outer join attribute tables 
structure universal table follows attribute names xml document 
universal source shows instance universal table example xml document 
see universal table elds set null great deal redundancy value peter instance represented twice object multi valued attribute child 
putting di erently universal table denormalized known advantages disadvantages 
corresponding indexing scheme attribute approach propose establish separate indices source target columns universal table 
normalized universal approach fourth approach univnorm approach variant universal table approach 
di erence univnorm universal approach multi valued attributes stored separate ow tables univnorm approach 
corresponds way object relational databases oracle store multi valued attributes 
attribute name occurs xml document separate ow table established principle attribute approach 
way row xml object univnorm table table normalized 
structure univnorm table ow tables follows attribute names xml document univnorm source source ordinal flag target source ordinal flag target alternative establish single ow table multi valued attributes organize ow table way edge table 
experimented approach inferior 
rr daniela florescu donald kossmann source 
ord name ag name targ name 
ord hobby ag hobby targ hobby 
peter 
null null null 
mary 
painting 
john 
null 
david 
null null null ow hobby source ord target swimming cycling example univnorm ow table key univnorm table source 
key ow table 
attribute single valued ag eld indicates attribute refers object value approaches 
attribute multi valued ag eld set indicate fact 
object got attribute name ag eld naturally set null 
shows univnorm table hobby ow table example xml document 
propose establish separate indices source target columns univnorm table source target columns ow tables 
mapping values turn alternative ways map values xml document strings mary ave 
study variants storing values separate value tables storing values attributes 
variants edge attribute universal univnorm approaches resulting total possible mapping schemes 
section assess mapping schemes brevity 
separate value tables rst way store values establish separate value tables conceivable data type 
example separate value tables storing integers dates strings 
structure value table simply follows type value column depends type value table type vid value shows approach combined edge approach completing example 
value tables generated part implemen stated section xml currently di erentiate di erent data types standard proposals extend xml respect 
inria performance evaluation alternative mapping schemes storing xml data relational database edge source ordinal name ag target age int name string address string child ref child ref age int 
int vid value string vid value peter ave mary ave painting 
ave example edge table separate value tables tation mapping scheme 
ag column tables indicates value table value stored ag take values integer date string ref indicating inter object 
way separate value tables established attribute universal univnorm approaches 
terms indices propose index vid value columns value tables 
looking closer observe value ave stored times string value table 
reason value occurs times original xml document labeled graph represents document 
course possible nd compact mapping original xml document storing strings approach severely complicate implementation updates require counting garbage collection 
study compact representation 
author xml document established separate address object referenced peter mary david objects order get compact representation model peter mary david live place 
inlining obvious alternative store values attributes tables 
edge approach corresponds outer join edge table value tables 
analogously corresponds outer joins attribute universal univnorm ow tables approaches 
need column data type 
refer approach inlining 
shows inlining attribute approach 
obviously ag needed anymore large number null values occur 
terms indexing propose establish indices value column separately addition source target indices 
rr daniela florescu donald kossmann source ord val int val string target null painting null null swimming null null cycling null child source ord val int val string target null null null null null null example attribute tables inlining alternative representation value column data type establish single value column stores values strings general type 
scheme values converted strings represented 
approach impossible index order nd objects 
mapping schemes stated section course mapping schemes conceivable 
variants simple mapping schemes previous sections conceivable ow tables univnorm approach hybrid approaches establishing attribute tables frequent attributes storing attributes edge table inlining small values integers storing large values text separate value tables 
name just mapping schemes addressed literature heard discussions 
selective outer joins attribute tables compromise attribute universal approach possible say store child hobby attributes separate attribute tables store name age address single combined table name age address individual attribute tables 
approach course attractive objects name age address attributes occur object queries involve objects typically ask attributes 
stated models algorithms extract information proposed literature discuss tradeo approach section 
selective joins attribute tables storing name age address variant store name age address addition ow tables need inria performance evaluation alternative mapping schemes storing xml data relational database established order store information objects say name age address 
materializing joins attractive queries ask attributes outer joins attractive queries just ask subsets attributes 
related theory materializing joins outer joins developed context access support relations 
redundancy just database materialized views established order speed execution queries 
finding right views materialize active research area context data warehouses 
di cult context mapping xml documents 
query processing updates section discuss details implementing queries updates alternative mapping schemes 
going full details scope concentrate brief overview kinds operations involved order implement queries posed xml query language propagate updates carried original xml document 
queries approach translate xml query sql rdbms execute query postprocessing order get right query result generate xml requested query 
steps carried straightforward way course interesting step translation sql 
get avor generated sql looks kinds operations rdbms carry characterize generated sql di erent categories queries alternative mapping schemes 
give performance results section 
reconstructing objects xml document important type query reconstruct object xml document object oid get attributes object computing transitive closure 
simple query executed follows mapping scheme edge separate value tables simple indexed lookup source edge table followed indexed join value tables rr daniela florescu donald kossmann attribute separate value tables indexed lookup source attribute tables take union results produced lookups join value tables universal separate value tables indexed lookup source universal table take union target columns join value tables univnorm separate value tables combination done universal attribute approaches univnorm ow tables respectively inlining simple indexed lookups edge attribute universal univnorm ow tables joins value tables necessary 
mapping schemes sorting ordinal required required semantics query 
query involves reconstructing object addition sorting source required resulting objects easily re grouped 
selections values pattern matching queries involve selection value translated sql queries straightforward way example consider query asks oids objects swimming hobby 
inline variants query executed simple indexed lookup appropriate value column edge hobby universal univnorm ow hobby tables 
values stored separate tables query involves indexed lookup appropriate value table join edge table hobby table universal table univnorm ow hobby tables 
query involves predicates additional joins necessary edge attribute univnorm approaches 
instance user interested oids objects swimming hobby age executing query involve self join edge table edge approach hobby age join attribute approach union univnorm univnorm ow hobby univnorm ow age ow hobby ow age univnorm approach 
universal approach materializes results theses kinds joins joins necessary universal approach 
query languages xml ql possible pose queries ask speci pattern 
just xml document clause xml ql query interpreted graph see section 
general evaluating query edge attribute univnorm approaches involves execution way join addition possibly joins value tables number edges pattern 
evaluating query universal approach involves execution way join addition joins value tables number nodes pattern inria performance evaluation alternative mapping schemes storing xml data relational database optional predicates result irregularity data xml query languages allow pose queries optional predicates nd objects years old swimming hobby hobby 
query translated approaches sql union query asks objects years old swimming hobby objects years old hobby 
note duplicate elimination required part union 
predicates attribute names common feature xml query languages capability support queries predicates attribute names 
example query asks objects address street value ave edge approach queries easily translated sql adding predicate edge name column name address name street 
approaches translation query involves initial step schema relational database queried order nd relevant attribute ow tables relevant elds universal univnorm tables 
doing possible information table attribute names stored special user readable tables commercial database products 
regular path expressions xml query languages support regular path expressions possible navigate irregular unpredictable structures ask transitive closure objects nd ancestors john 
queries translated recursive sql queries straightforward way 
rdbms support recursive sql queries queries need unrolled step step 
updates updates xml document propagated relational database straightforward way 
typically series sql insert update delete statements required propagate update 
brie discuss insertions deletions objects attributes 
inserting new objects objects easily inserted mapping schemes 
edge attribute approaches row generated attribute new object 
universal approach number new rows depends presence multi valued attributes object multi valued attributes exactly row inserted new object universal table object say multi valued attributes rr daniela florescu donald kossmann cardinality fteen new rows generated 
univnorm approach exactly row inserted univnorm table rows inserted corresponding ow table multi valued attribute cardinality values stored separate value tables course row inserted value tables value new object 
new object contains new attribute names universal univnorm tables extended new attribute ow tables created 
inserting new attributes adding attribute existing object simple straightforward edge attribute approaches slightly complicated schemes map attributes 
universal univnorm approaches di erent cases di erentiated depending presence multi valued attributes object existence attribute name new attribute new rows generated tables updated 
cases insertion new attribute may involve updating ordinal attributes belong object located new attribute xml document 
procedure simpli ed certain cases consider ordered semantics see section values stored separate value tables new attribute contains value course corresponding value table updated 
name new attribute novel measurements new objects new attribute names attribute universal univnorm schemes 
deleting object approaches objects easily deleted deleting corresponding rows tables 
values stored separate value tables object read deleted order nd object values deleted value tables 
deleting attribute deleting attribute object simple implement edge attribute approaches involves looking di erent cases universal univnorm approaches analogous inserts 
approaches deleting attribute may involve reorganization ordinal values 
furthermore approaches separate value tables attribute read rst order nd attribute contains value deleted 
inria performance evaluation alternative mapping schemes storing xml data relational database evaluating mapping schemes plan attack order study tradeo alternative mapping schemes carried series performance experiments 
study particular size resulting relational database mapping scheme time relational database xml document time reconstruct xml document relational data time execute di erent classes xml queries time execute di erent kinds update functions 
experiments carried synthetic xml document starting point 
real xml data available extent unclear characteristics typical xml document 
real xml data generating xml document resemble real xml data xml document allows speci cally study tradeo mapping schemes model certain characteristics real xml data presence large text elds 
simplify discussion experimental results alternative mapping schemes described section 
study edge attribute universal univnorm approaches separate value tables order study tradeo di erent ways map attributes 
addition study attribute approach inlining order compare inlining separate value tables variants 
experimental platform commercial relational database system installed sun sparc station mhz processors mb main memory disk stores database intermediate results query processing 
machine runs solaris 
experiments limited size main memory bu er database mb tenth size xml document 
default con guration database system stated 
experiments non default options query optimization indicate experiments describe results 
software runs outside rdbms programs prepare xml document implementations update functions implemented java runs machine 
calls relational database java programs implemented jdbc 
see www oasis open org cover xml html 
licenses agreement allow publish name database vendor 
rr daniela florescu donald kossmann number objects fn maximum number attributes inter object object fv maximum number attributes values object size short string value bytes size long text value bytes ps percent values strings percent values text number di erent attribute names size attribute name bytes table characteristics xml document benchmark speci cation benchmark database characteristics synthetic xml document generate performance experiments described table 
xml document consists objects 
object attributes containing inter object attributes values 
document nesting objects 
xml data model described section documents semantics documents nested objects 
attributes labeled di erent attribute names refer names fact name bytes long 
types values short strings bytes long texts bytes 
values strings values text 
uniform distribution order select number attributes object individually determine objects referenced object name attribute 
graph represents xml document contains cycles fact relevant experiments 
xml document contains values di erent data types string text value tables generated relational database mapping schemes inlining value columns included attribute scheme inlining 
index strings completely proposed section index text obvious reasons deviating proposed indexing scheme section 
strings text attribute names edge table represented relational database 
ags represented chars information oids ordinals represented number 
parameter settings experiments shown table 
create database objects 
object average attributes performance evaluation alternative mapping schemes storing xml data relational database query description feature reconstruct xml object oid select oid nd objects attribute value certain range select value nd objects attributes certain values predicates nd objects certain value just certain value optional predicate nd objects certain value predicate attribute name nd object match complex pattern nodes pattern matching nd objects connected chain regular path expression object speci value nd objects connected chain regular path expression object speci value predicate attribute name table benchmark query templates object attributes values 
total approximately values texts bytes short strings bytes 
benchmark queries table describes xml ql query templates experiments 
xml ql formulation queries appendix 
query templates test variety features provided xml ql including simple selections oid value optional predicates predicates attribute names pattern matching regular path expressions 
test fteen queries part benchmark 
test templates variants light variant predicates selective index lookups ective intermediate results memory heavy variant indices typically attractive intermediate results database bu ers 
speci cally set predicates select values light query variants select values heavy variants 
predicates set select values 
predicates involve strings text 
benchmark database size result sets fteen benchmark queries listed table 
queries translated sql queries mapping scheme outlined section course xml ql sql translation depend selectivity predicates sure translation correct mapping scheme checking results produced query 
get reproducible experimental results carry benchmark queries way query carried warm database bu ers times depending query order get mean running time query 
rr daniela florescu donald kossmann table size result sets benchmark queries generate new objects commit new object insert new attributes randomly selected objects commit new attribute delete random attributes form random objects commit attribute delete random objects commit object table update functions warming bu ers impacts performance light queries operate data ts main memory warming bu ers impact results heavy queries 
update functions part benchmark carry update functions described table 
update functions test insertion deletion objects individual attributes 
new objects characteristics objects database new attributes contain byte strings probability byte text probability 
implementation update functions mapping scheme described section 
update functions insert xml attributes new attribute names new attribute ow tables need created universal univnorm tables need altered part executing update functions 
database product experiments carries kinds operations quickly general cost operations strongly depends implementation rdbms interested particularities rdbms 
carry update functions sequential order 
database size table shows size xml document resulting relational database mapping scheme 
size xml document mb see indices mapping scheme produces larger relational database 
attribute univnorm approaches result mb base data store attribute name part schema attribute inria performance evaluation alternative mapping schemes storing xml data relational database name bytes occurs approximately times attributes divided di erent names xml document 
edge approach xml document stores name multiple times produces base data attribute univnorm schemes 
recall section variant edge approach stores attribute names separate table result smaller relational database reduction mb benchmark result signi cantly increased query response times 
universal approach course produces base data universal table denormalized described section 
comparing attribute approach inlining see inlining results smaller relational database stored inline variant nulls produced inline variant stored compact way rdbms 
looking size indices see indices consume space 
xml attribute edge universal univnorm attr inline base data indices total table database sizes mb times table shows time takes prepare xml document actual analyze resulting tables create indices mapping scheme 
surprises 
obviously takes longest universal approach approach complicated data approach produces relational data 
attribute edge universal univnorm attr inline prepare analyze indices total table times rr daniela florescu donald kossmann reconstructing xml document table shows time reconstruct xml document write disk relational data mapping scheme 
cases takes minutes fact probably compelling argument store xml data 
stated section mapping schemes need sort oid order re group objects sort expensive environment mb sort mb memory 
disastrous running times universal univnorm approaches separate value tables explained 
universal univnorm tables scanned times attribute name order restructure data carry joins value tables 
attribute edge universal univnorm attr inline table reconstructing xml document running times queries table shows running times fteen benchmark queries mapping scheme 
cases optimizer rdbms plans default con guration 
cases able get signi cant improvements non default con guration cases table shows running times obtained untuned default optimizer con guration tuned optimizer con guration 
improvements achieved light queries forcing optimizer indices table scans index nested loop joins hash sort merge joins 
observations alternative ways map attributes attribute approach winner 
inlining clearly beats separate value tables 
results explained fairly easily 
edge approach performs poorly heavy queries joins large edge table expensive case ect data edge table irrelevant speci query 
reason universal approach large universal table performs poorly heavy queries 
attribute approach hand relevant data processed 
kind bene ts binary table approach observed monet project inria performance evaluation alternative mapping schemes storing xml data relational database attribute edge universal univnorm attr inline table running times queries secs tuned untuned structured tpc data xml data bene ts particularly high 
univnorm approach sensitive size intermediate query results univnorm approach twice univnorm table ow tables 
univnorm approach performs poorly cases 
explaining di erences inlining separate value tables easier inlining simply wins saves cost joins value tables 
results show inlining beats separate value tables large values text inlined 
extent exceptions rules 
queries involve predicate attribute names wild card edge approach attractive queries predicates directly applied edge table executing predicates involves separate querying schema step generation sql union query mapping schemes 
running times update functions table shows running times update functions benchmark mapping scheme 
surprises just point important ects rr daniela florescu donald kossmann attribute edge universal univnorm attr inline table running times update functions secs cost creating new objects fairly mapping schemes 
inserting new attributes signi cantly expensive universal univnorm approaches approaches update insert statements executed approaches section 
universal approach result data 
univnorm approach result complicated organization necessary move attributes univnorm ow table single valued attribute turned multi valued attribute mary gets second hobby 
reason deletion attributes expensive universal univnorm approaches 
deleting objects cheapest edge approach statements carried probe edge table detect values deleted value tables delete values value tables delete relevant rows edge table 
deleting objects attribute approach inlining expensive involves separate sql select delete statements attribute table plus value tables 
universal approach inlining kind overhead occurs target column probed separately order nd values deleted 
univnorm approach inlining kind overhead carried twice probe target columns univnorm table probe relevant ow tables 
experiments mapping schemes experimented di erent mapping schemes part decided relevant results 
promised section want show happens materialize outer join attribute inria performance evaluation alternative mapping schemes storing xml data relational database separate value tables inlining 



table materializing outer join attribute tables secs tables inlining particular benchmark highly irregular data 
mapping scheme instance recommended algorithm extracts schema 
experiments materialize separate attribute tables run 
queries operate attributes 
queries anticipated materializing help queries saves cost joining individual attribute tables 
run unanticipated variants 
variants operate attributes materializing help join needed 
table shows results running anticipated unanticipated variants table materializes inlining 
baseline table shows simple attribute schemes inlining perform queries denoted fa 
observations values stored separate tables fa show essentially performance cases 
cost query processing dominated joins value tables improvements storing result noticeable speed 
values inlined materializing helps anticipated case factor saving join dominate cost case looses signi cantly unanticipated case 
reason unanticipated case join expensive larger just studied performance standard relational databases purpose managing xml documents 
relational databases important advantages rdbms rr daniela florescu donald kossmann products mature scale 
traditional structured data semistructured data exist relational database making possible develop applications kinds data virtually extra ort 
experiments showed rdbmss able process complex xml queries large databases seconds query performance achieved today commercially available technology 
negative side experiments showed expensive reconstruct original xml data relational data updates complicated expensive implement certain cases 
extra ort translate xml queries updates sql relational database mapping schemes considered translation easy implement cheap execute translation complex sophisticated mapping schemes proposed :10.1.1.137.5340
potential disadvantage address components authorization concurrency control need implemented outside rdbms corresponding built components rdbms properly require fully structured data 
result kind functionality implemented possibly executed twice great deal functionality implemented rdbms 
studied alternative ways store xml data relational database 
experimental results clearly show approach separate attribute tables attribute name occurs xml document inlining values attribute tables best approach 
large values text inlined signi cantly hurting performance approach 
ideally course desirable exible decisions kind data inline keep information certain attributes single table statistics xml document knowledge anticipated query workload 
results encouraging show robust performance achieved simpler approach 
results show sophisticated approach hurt helps 
avenues 
results initial step order answer big question relational systems object oriented systems special purpose data stores manage xml documents 
plan run benchmark special purpose xml data repositories 
furthermore benchmark decide best relational database product speci purpose storing xml documents 
addition results encourage cient implementation binary data models 
inria performance evaluation alternative mapping schemes storing xml data relational database serge abiteboul 
querying semi structured data 
proc 
int 
conf 
database theory icdt delphi greece 
serge abiteboul quass jason mchugh jennifer widom janet wiener :10.1.1.45.8397
lorel query language semistructured data 
international journal digital libraries april 
wilschut kersten 
flattening object algebra provide performance 
proc 
int 
conf 
data engineering icde pages orlando fl 
adam bosworth 
xml semi structured data 
workshop query processing semistructured data non standard data formats 
buneman davidson hillebrand suciu 
query language optimization techniques unstructured data 
proc 
acm sigmod conf 
management data pages montreal canada 
peter buneman :10.1.1.41.3258:10.1.1.117.5869
semistructured data 
proc 
acm sigact sigmod sigart symposium principles database systems pods pages tucson arizona 
peter buneman susan davidson mary fernandez dan suciu 
adding structure unstructured data 
proc 
int 
conf 
database theory icdt delphi greece 
stefano ceri sara damiani fraternali stefano paraboschi letizia tanca 
xml gl graphical language querying restructuring xml documents 
proc 
int 
www conf 
vassilis christophides serge abiteboul sophie cluet michel scholl 
structured documents novel query facilities 
proc 
acm sigmod conf 
management data 
copeland 
decomposition storage model 
proc 
acm sigmod conf 
management data pages austin tx may 
deutsch fernandez suciu :10.1.1.137.5340
storing semistructured data stored 
deutsch mary fernandez daniela florescu alon levy dan suciu :10.1.1.45.8397
xml ql query language xml 
proc 
int 
www conf 
mary fernandez daniela florescu kang alon levy dan suciu 
catching boat strudel experiences web site management system 
proc 
acm sigmod conf 
management data seattle wa 
mary fernandez daniela florescu alon levy dan suciu 
query language web site management system 
sigmod record september 
daniela florescu alon levy dan suciu 
query optimization algorithm semistructured data 
technical report inria 
rr daniela florescu donald kossmann roy goldman jennifer widom :10.1.1.41.3258
dataguides enabling query formulation optimization semistructured databases 
proc 
int 
conf 
large data bases vldb athens greece 
harinarayan rajaraman ullman 
implementing data cubes ciently 
proc 
acm sigmod conf 
management data pages montreal canada june 
kemper moerkotte 
access support relations indexing method object bases 
information systems 
westfechtel 
graph oriented software engineering database system 
information systems 
www com 
mchugh abiteboul goldman quass widom 
lore database management system semistructured data 
sigmod record september 
mchugh widom :10.1.1.45.8397
query optimization semistructured data 
technical report stanford university november 
mchugh widom abiteboul luo rajaraman 
indexing semistructured data 
technical report stanford university january 
mohan 
lotus domino notes semi structured dbms world 
workshop query processing semistructured non standard data formats 
nestorov serge abiteboul rajeev motwani 
extracting schema semistructured data 
proc 
acm sigmod conf 
management data seattle wa 
yannis papakonstantinou hector garcia molina jennifer widom :10.1.1.41.3258
object exchange heterogeneous information sources 
proc 
int 
conf 
data engineering icde pages taipei taiwan 
proceedings www workshop query languages xml boston ma december 
www org ql ql cfp 
jonathan robie joe lapp david schach 
xml query language xql 
www org ql ql pp xql html 

materialization parallelism teh mapping object model relational multi processor system 
phd thesis eth zurich 
sacks davis 
structured information manager database system sgml document 
proc 
int 
conf 
large data bases vldb bombay india 
schwarz stamos thomas 
system information organization semi structured data 
proc 
int 
conf 
large data bases vldb pages dublin ireland 
dan suciu :10.1.1.45.8397
semistructured data xml 
fodo 
inria performance evaluation alternative mapping schemes storing xml data relational database sellis 
data con guration 
proc 
int 
conf 
large data bases vldb pages athens greece august 
je rey ullman 
principles database knowledge base systems volumes ii 
computer science press rockville md 
apers wilschut 
modelling querying semistructured data moa 
workshop query processing semistructured data non standard data formats 
yoshikawa ichikawa :10.1.1.41.3258
amalgamating sgml documents databases 
proc 
conf 
extending database technology edbt pages avignon france march 
rr unite de recherche inria lorraine de nancy campus scientifique rue du jardin bp es nancy unite de recherche inria rennes irisa campus universitaire de beaulieu rennes cedex unite de recherche inria alpes avenue de europe montbonnot st martin unite de recherche inria rocquencourt domaine de voluceau rocquencourt bp le chesnay cedex unite de recherche inria sophia antipolis route des lucioles bp sophia antipolis cedex inria domaine de voluceau rocquencourt bp le chesnay cedex france www inria fr issn 
