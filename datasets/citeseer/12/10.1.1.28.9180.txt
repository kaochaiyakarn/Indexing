appears logic programming selected papers th international workshop muggleton ed pp springer verlag berlin 
inductive logic programming natural language processing raymond mooney department computer sciences university texas austin tx usa 
reviews applying inductive logic programming construction natural language processing systems 
developed system chill learns parser training corpus parsed sentences inducing heuristics control initial overly general shift reduce parser 
chill learns syntactic parsers ones translate english database queries directly executable logical form 
atis corpus airline information queries test acquisition syntactic parsers chill performed competitively statistical methods 
english queries small database geography test acquisition complete natural language interface parser chill acquired accurate existing hand coded system 
includes discussion issues raised regarding capabilities testing ilp systems summary current research directions 
developing system capable communicating natural language long standing goals computing research 
significant progress years allen developing natural language processing nlp system particular application extremely difficult laborious task 
promising approach machine learning techniques help automate development nlp systems 
years increasing focus computational linguistics empirical corpus methods obtain knowledge training large corpora speech text church mercer charniak brill church 
employed statistical techniques gram models hidden markov models hmms probabilistic context free grammars pcfgs 
computational linguistics community focused techniques largely due successful application prior speech recognition waibel lee 
fair amount research applying neural network techniques simple recurrent networks natural language processing reilly sharkey miikkulainen 
relatively little symbolic machine learning techniques language applications systems employed decision trees magerman bennett transformation rules brill symbolic methods wermter riloff 
approaches limited examples represented feature vectors subject standard limitations propositional representations 
language processing hand require rich knowledge representation language includes relations recursion unbounded structural representations 
current empirical nlp systems employ carefully engineered processing architectures sets features laboriously constructed system developer order circumvent issues 
richness order logic employed inductive logic programming ilp hopefully provide advantages nlp applications increasing flexibility limiting amount feature engineering required 
despite fact apparently application ilp methods language processing early exception wirth 
years explored application ilp nlp 
particular developed extended chill system acquiring natural language parsers zelle mooney zelle 
system learned syntactic semantic parsers map natural language database query directly executable prolog query answer question 
specifically chill uses training corpus parsed sentences induce heuristics control specialize initial overly general shift reduce parser 
chill learned syntactic parsers atis corpus airline information queries results comparable current statistical methods 
acquired semantic parsers process answer english queries simple database geography 
learned system accurate hand built program application 
current reviews previous research attempts draw broader implications ilp discusses directions research 
ilp parser acquisition primary task natural language systems parsing 
term parser interpreted broadly system mapping natural language string internal representation useful ultimate task answering questions translating natural language summarizing 
parsing range producing syntactic parse tree mapping sentence unambiguous logical form 
shows examples types parses syntactic parse sentence atis corpus case role agent patient instrument analysis simple sentence executable logical form database query geography 
chill able learn parsers produce types analyses 
additional papers software data available web site www cs utexas edu users ml 
syntactic parse tree show flights served lunch departing san francisco april th 
np vp show np np np np flights sbar np vp served np lunch vp departing pp np san francisco pp np april th case role analysis man ate pasta fork 
ate agt man det pat pasta det inst fork det executable logical form capital state largest population 
answer capital largest state population 
fig 

examples types parses frequently language learning interpreted simply acquiring syntactic recognizer unary predicate simply returns question string syntactically formed sentence language 
syntactic recognizer limited nlp system limited grammar checker speech recognizer entertaining word sequences possible interpretations utterance 
language learning interpreted acquiring set production rules np vp define formal grammar recognizes positive strings 
useful black box recognizer allows standard syntactic parser produce parse trees useful processing 
natural language grammars assign multiple parses sentences correspond useful meaningful interpretations 
example syntactic grammar english produce analysis man ate pasta fork attaches prepositional phrase fork pasta ate despite fact people generally consume eating compare man ate pasta cheese 
fact standard syntactic english grammar produce parses sentences prepositional phrases usually spurious church patil 
truly useful parser produce unique limited number parses correspond meaningful interpretations sentence human consider 
result emerging standard judging syntactic parser computational linguistics measure ability produce unique parse tree sentence agrees parse tree assigned human judge brill magerman collins goodman 
approach facilitated construction large treebanks human produced syntactic parse trees thousands sentences penn treebank marcus santorini marcinkiewicz consists primarily analyses sentences wall street journal 
ilp taken serious approach constructing nlp systems tested problems compared existing statistical methods 
parser acquisition generic ilp straight forward application ilp parser acquisition give generic ilp system corpus sentences paired representations set positive examples predicate parse sentence representation takes sentence input produces syntactic semantic analysis output 
noticed negative examples sentence representation pairs generally available closed world assumption explicitly generate negative examples intractable large space possible sentences representations 
addition generally agreed children acquire language exposed little negative feedback bloom 
consequently method needed learning explicit negative tuples 
fortunately ilp methods proposed learning positive tuples target predicate represents function bergadano quinlan training data sense complete de raedt bruynooghe zelle thompson califf mooney 
goal construct parser produces unique analysis sentence parse predicate treated function outputs preferred analysis training sentence treated implicitly negative examples 
desired parser produce preferred outputs truly ambiguous sentences general assumption output completeness specify analyses provided training sentence correct ones potential outputs implicitly negative zelle mooney califf 
techniques generic ilp system construct parsers positive sentence representation pairs 
uninformed ilp system produce program generalizes novel sentences 
parsers complex programs space possible logic programs large providing appropriate set background predicates difficult 
generally agreed human explicit generation negative examples closed world assumption performed automatically systems foil quinlan 
language acquisition exploits fairly restrictive constraints biases order learn complex natural languages limited data pinker 
course evaluating success approach ultimately empirical question 
compare generic approach specific alternative chill acquires parsers specializing general parsing architecture learning control rules 
parser acquisition control rule learning ilp techniques directly learn complete parser chill begins defined parsing framework uses ilp learn control strategies framework 
treating language acquisition control learning problem new idea 
berwick approach learn control rules marcus style deterministic parser marcus 
system came parsing impasse new rule created inferring correct parsing action creating new rule certain properties current parser state trigger conditions application 
similar vein simmons yu controlled simple shift reduce parser storing example contexts consisting syntactic categories fixed number stack input buffer locations 
new sentences parsed matching current parse state stored examples performing action performed best matching training context 
miikkulainen presents connectionist approach language acquisition learns control neural network parsing architecture employs continuous stack 
statistical approaches mentioned control acquisition systems feature vector representations 
chill system ilp techniques flexible propositional approaches 
input chill set training instances consisting sentences paired desired parses 
output shift reduce parser prolog maps sentences parses 
shows basic components system 
chill employs simple deterministic shift reduce parser current parse state represented content stack remaining portion input buffer tomita 
consider producing case role analysis fillmore sentence man ate pasta 
parsing begins empty stack input buffer containing entire sentence 
step parse word shifted front input buffer stack top elements stack popped combined form new element pushed back stack 
sequence actions stack states simple example shown 
action notation label indicates stack items combined role label item stack position head 
prolog parsing shell parsing operators program clauses take current stack input buffer input arguments return modified stack buffer outputs 
parser operator generation training examples analyzed extract general operators required produce analyses 
example operator reduce final example analysis control rule induction program specialization training examples control examples control rules overly general parser parsing operator generator parser prolog prolog fig 

chill architecture action stack contents shift shift man det man det shift ate man det agt ate agt man det shift ate agt man det shift pasta ate agt man det det pasta det ate agt man det obj ate obj pasta det agt man det fig 

shift reduce case role parsing man ate pasta top items stack attaching second item agent top represented clause op top reduce top agt second newtop 
reduce predicate simply combines top second role agt produce new structure top stack 
general operator clause constructed case role slot training examples 
resulting parser severely general operators contain conditions specifying operator may applied virtually parse state resulting spurious parses 
example analysis overly general parser parse training examples extract contexts various parsing operators employed 
contexts form sets positive negative control examples appropriate control rules subsequently induced 
control example snapshot subgoal particular operator clause may applied course parsing example 
examples correct operator applications generated finding correct parsing training pair overly general parser subgoal operator applied successful parse positive control example operator 
agent operator shown sentence man ate pasta produce single positive control example op ate man det pasta 
subgoal operator applied correct parsing sentence 
uninstantiated variables outputs op clause bound time clause applied 
sentence generates negative control examples operator op man ate pasta op ate agt man det pasta op pasta ate agt man det op pasta det ate agt man det note additional parse states op man ate pasta appear list 
agent clause op requires argument list containing items 
clause match subgoals included negative examples 
control rule induction phase uses general ilp system learn control rule operator 
control rule comprises definite clause definition covers positive control examples operator negative 
chill ilp algorithm combines elements bottom techniques systems cigol muggleton buntine golem muggleton feng top methods systems foil quinlan able invent new predicates manner analogous 
details chill induction algorithm experimental comparisons golem foil zelle mooney zelle 
simple example control rule learned agent operator op det animate 
animate man 
animate boy 
animate girl 
system invented new predicate help explain parsing decisions 
course new predicate system generated name 
called animate clarity 
rule may roughly interpreted stating agent reduction applies stack contains items second completed noun phrase head animate 
output control rule induction phase suitable control rule clause op 
control rules passed program specialization phase 
final step program specialization folds control information back overly general parser 
control rule easily incorporated overly general program unifying head operator clause head control rule clause adding induced conditions clause body 
definitions invented predicates simply appended program 
program clause op top second rest newtop rest reduce top agt second newtop 
control rule op det animate 
animate man 
animate boy 
animate girl resulting clause op det animate reduce agt det 
animate boy 
animate girl 
animate man 
final parser just overly general parser operator clause suitably constrained 
specialized parser guaranteed produce preferred parses training examples 
learning syntactic parsers atis corpus section noted generic application ilp parser acquisition induce program directly examples parse relation 
advantage gained control rule framework assessed comparing chill performance achieved chill ilp component trying learn parse relation directly 
approaches compared choosing random set test examples learning evaluating parsers trained increasingly larger subsets remaining examples 
positive tuples parse available generic ilp approach employed version induction algorithm exploits output completeness assumption learn context implicit negative examples zelle outlined section 
experiment carried portion atis corpus preliminary version penn treebank 
example taken corpus 
chose particular data represents realistic input human computer interaction number studies automated parser acquisition brill serve basis comparison chill 
corpus contains sentences average length words 
experiments reported performed strings lexical categories words input 
tagging words appropriate part speech performed high accuracy various techniques church brill 
zelle mooney zelle results part speech information 
initial experiments straightforward set syntactic shift reduce parsing operators zelle mooney 
better results obtained making operators specific effectively increasing number operators reducing complexity control rule induction task operator 
basic idea index operators relevant portion parsing context 
experiments operators indexed syntactic category front input buffer 
example general shift operator op stack word words word stack words multiple operators slightly differing contexts op stack ws op stack ws op stack ws operators initial parser placed order increasing frequency indicated training set 
allows learning control rules take advantage default effects specific exceptions learned control falls generally applicable operators 
obviously stringent measure accuracy proportion test sentences produced parse tree exactly matches human parse sentence 
parse useful perfectly accurate treebank completely consistent handling various constructs 
better gauge partial accuracy parser adopted procedure returning scoring partial parses 
parser runs dead parsing novel test sentence contents stack time impasse returned single flat constituent labeled parsing operators ordered shift operator invariably frequently operator training set shift serves sort default reduction action applies 
time impasse words sentence stack partial constituents built 
contents stack reflect partial progress parser finding constituents 
partial scoring trees overlap computed parse correct parse recorded treebank 
constituents said match span exactly words sentence 
constituents match label identical 
overlap computed parse correct parse computed trying match constituent computed parse constituent correct parse 
identical constituent score matching constituent incorrect label scores 
sum scores constituents overlap score parse 
accuracy parse computed accuracy correct overlap score number constituents computed parse correct number constituents correct tree 
result average proportion computed parse correct proportion correct parse 
accuracy measure evaluating systems bracket input sentence unlabeled constituents proportion constituents parse cross constituent boundaries correct tree black goodman 
computed number sentences parses containing crossing constituents proportion constituents non crossing test sentences 
gives basis comparison previous bracketing results emphasized chill designed harder task producing labeled parses optimized bracketing 
learning curves averaged random trials independent testing sets sentences shown 
correct percentage test sentences parses matched parse exactly 
partial partial correct training examples correct partial cross consistent fig 

chill atis results ness overlap metric 
cross proportion test sentences having constituents cross constituent boundaries correct parsing 
consistent shows percentage constituents consistent treebank cross constituents correct parse 
results quite encouraging 
training sentences chill constructed completely correct parses novel testing sentences 
partial scoring metric chill parses garnered average accuracy 
figures cross consistent compare favorably reported previous studies automated bracketing atis corpus 
brill reports respectively 
chill scores higher percentage sentences crossing violations slightly lower total percentage non crossing constituents 
understandable brill transformation learner tries optimize value chill preference complete sentence accuracy tends improve 
shows results partial accuracy metric chill generic ilp 
chill overwhelming advantage achieving accuracy compared accuracy generic ilp 
clearly providing shift reduce parsing framework significantly eases task inductive component 
trying learn complete parser scratch obviously difficult 
training examples chill generic ilp fig 

chill vs generic ilp atis corpus learning complete natural language interface previous experiment demonstrates ilp techniques implemented chill produce results comparable empirical approaches constructing syntactic parsers standard treebank 
syntactic parsing small part larger problem natural language understanding 
consequently parsers usually compared artificial metrics 
unfortunately unclear metrics translate performance actual language processing tasks 
argued major attractions ilp approach flexibility 
type representation produced chill parsers controlled parsing operators employed 
effort assess utility chill constructing complete natural language application operator framework devised allows parsing natural language queries directly executable prolog queries 
input chill case task consists sentences paired executable database queries query language logical form similar meaning representation typically produced logic grammars warren pereira abramson dahl 
semantics representation grounded query interpreter executes queries retrieves relevant information database 
chosen database concerns united states geography handcoded natural language interface exists 
system called geobase supplied sample application commercial prolog specifically turbo prolog borland international 
system provides database coded prolog serves convenient benchmark chill performance compared 
database contains prolog facts asserting relational tables basic information states including population area capital city neighboring states major rivers major cities highest lowest points elevation 
shows sample questions associated query representations addition example 
highest point state largest area 
answer high point largest state area 
major cities kansas 
answer major city loc equal stateid kansas 
fig 

sample database queries language data experiment gathered asking uninformed subjects generate sample questions system 
analyst paired questions appropriate logical queries generate experimental corpus examples 
experiments performed training subsets corpus evaluating resulting parser unseen examples 
parser judged parsed new sentence correctly generated query produced exactly final answer database query provided analyst 
metric true measure performance complete database query application domain 
training examples chill geobase fig 

chill accuracy database query domain shows accuracy chill parsers trial average 
line labeled geobase shows average accuracy hand coded system 
curves show chill outperforms existing system trained examples 
best trial chill induced parser examples comprising lines prolog code approximately minutes sparcstation achieved accuracy answering novel queries 
errors chill novel questions due inability parse query generation incorrect answer 
training examples slightly novel questions average answered incorrectly 
zelle mooney zelle provide additional details geobase application results 
lessons challenges ilp applying ilp natural language processing highlighted broader issues developing evaluating ilp systems 
natural language problems number interesting challenges ilp systems may counterparts complex applications 
addition parser acquisition applied ilp natural language morphology specifically generating past tense english verbs 
english past tense generation benchmark problem computational modeling human language acquisition rumelhart mcclelland ling marinov 
mooney califf showed particular ilp system foidl learn transformation effectively previous neural network decision tree methods 
section discusses issues ilp chill foidl uncovered 
learning control existing programs inducing complex logic program completely examples difficult task 
standard way easing problem supply ilp system relevant background knowledge subroutines induce top level clauses lavrac dzeroski 
approach revise existing program partially correct de raedt richards mooney 
chill illustrates third approach specializing existing program learning control rules restrict application specific clauses 
induction control rules fairly long history learning problem solving mitchell langley applied ilp task cohen zuckerman zelle mooney estlin mooney 
systems focus learning control rules improve efficiency existing program transforming naive sorting program insertion sort zelle mooney 
chill illustrates approach improve accuracy initial extremely overly general program 
problems may lend providing constructing initial overly general program appropriately specialized inducing control rules 
improving generic ilp systems initial attempts apply existing ilp systems foil golem parser construction past tense generation met important difficulties 
limitations requiring extensional background negative examples lack predicate invention inability handle functions cuts search limitations local minima combinatorial explosions prevented existing systems performing applicable problems 
consequently develop new ilp systems zelle mooney foidl mooney califf overcome limitations techniques integrate bottom top search incorporate predicate invention eliminate need explicit negative examples allow restricted cuts 
existing techniques improved integrated order build ilp systems handle natural language problems 
consequently need flexible robust efficient ilp systems incorporate range abilities features 
generic ilp systems unable handle large complex problems arise nlp 
statistical language learning systems trained real corpora sentences magerman collins 
current ilp techniques incapable handling large problems 
training testing programs generate output ilp systems tested accuracy classifying ground tuples positive negative examples target predicate 
applications parsing morphological analysis require computing outputs testing ground tuples 
applications ilp systems need tested ability generate correct outputs novel inputs 
respect training ilp system needs guarantee generate program terminate generate ground outputs queried outputs uninstantiated 
ilp systems provide guarantees guarantee termination quinlan guarantee ground outputs 
output completeness assumption implicit negatives way guarantee ground outputs zelle 
respect testing experiments need specifically evaluate ability learned program generate correct outputs novel inputs 
evaluations ilp systems experiments chill foidl specifically tested ability 
applications exactly matching output specified test data may best measure performance 
induced programs may generate complex outputs similar correct output parse trees may multiple correct outputs semantically equivalent database queries 
may want measure various types partial correctness outputs number bracketing errors parse trees procedure judging correctness output produces answer database correct output 
general appropriate testing logic programs generated complex applications may require measuring accuracy classifying ground tuples 
ongoing research current research concerns learning techniques ilp develop larger natural language application 
hope field application worldwide web attract significant number users serve automatic source larger amounts language data 
specific application considering system process computer job announcements posted usenet newsgroup misc jobs offered extract database available jobs answer natural language queries jobs available california programmers paying year 
application involve learning techniques build major components 
information extraction system processes individual messages extracts specific pieces information database type job location salary starting date 
natural language information extraction systems hand built part arpa muc message understanding conference program lehnert sundheim arpa projects learning techniques automatically acquire rules task riloff soderland lehnert huffman 
plan develop system uses ideas ilp learn patterns extracting information newsgroup postings 
examples messages paired filled templates train system learned rules extract database information newsgroup postings 
second major component query system answering natural language questions database built information extraction module 
chill learn component training sample pairs english prolog job queries manner construct geography database interface discussed section 
building prototype system initial training set plan put line collect additional query examples 
questions system parse collected annotated retrain system improve coverage 
way learning techniques automatically improve extend system data collected actual 
constructing natural language systems complex task machine learning increasingly important tool aiding development 
summarized research employing inductive logic programming learn natural language parsers results illustrating methods successfully learn syntactic parsers complete natural language interfaces 
addition ilp constructed systems shown perform better existing hand built statistically trained systems 
unfortunately current learning research computational linguistics focused alternative statistical methods 
convincing computational linguists utility ilp constructing nlp systems easy task 
clearly demonstrating ability ilp systems easily flexibly build real systems large amounts real language data laborious feature engineering convincing case ilp 
research reviewed step direction hopefully encourage assist additional research area 
acknowledgments john zelle chill primary developer 
research supported national science foundation iri 
abramson dahl 

logic grammars 
springer verlag new york 
allen 

natural language understanding nd ed 
benjamin cummings menlo park ca 
bennett 

evaluating automated manual acquisition anaphora resolution strategies 
proceedings rd annual meeting association computational linguistics pp 
cambridge ma 
arpa ed 

proceedings fifth darpa message understanding evaluation conference san mateo ca 
morgan kaufman 
bergadano 

interactive system learn functional logic programs 
proceedings thirteenth international joint conference artificial intelligence pp 
chambery france 
berwick 

acquisition syntactic knowledge 
mit press cambridge ma 
black 

procedure quantitatively comparing syntactic coverage english grammars 
proceedings fourth darpa speech natural language workshop pp 

bloom 

overview controversies language acquisition 
bloom 
ed language acquisition core readings pp 

mit press cambridge ma 
borland international 
turbo prolog guide 
borland international valley ca 
brill 

automatic grammar induction parsing free text transformation approach 
proceedings st annual meeting association computational linguistics pp 
columbus ohio 
brill 

transformation error driven learning natural language processing case study part speech tagging 
computational linguistics 
brill church 
eds 

proceedings conference empirical methods natural language processing 
university pennsylvania philadelphia pa charniak 

statistical language learning 
mit press 
church 

stochastic parts program noun phrase parser unrestricted text 
proceedings second conference applied natural language processing 
association computational linguistics 
church mercer 

special issue computational linguistics large corpora 
computational linguistics 
church patil 

coping syntactic ambiguity put block box table 
american journal computational linguistics 
cohen 

learning approximate control rules high utility 
proceedings seventh international conference machine learning pp 
austin tx 
collins 

new statistical parser bigram lexical dependencies 
proceedings th annual meeting association computational linguistics pp 
santa cruz ca 
de raedt 

interactive theory revision inductive logic programming approach 
academic press new york ny 
de raedt bruynooghe 

theory clausal discovery 
proceedings thirteenth international joint conference artificial intelligence pp 
chambery france 
estlin mooney 

multi strategy learning search control partial order planning 
proceedings thirteenth national conference artificial intelligence portland 
fillmore 

case case 
bach harms 
eds universals linguistic theory 
holt reinhart winston new york 
goodman 

parsing algorithms metrics 
proceedings th annual meeting association computational linguistics pp 
santa cruz ca 
huffman 

learning information extraction patterns examples 
wermter riloff 
eds connectionist statistical symbolic approaches learning natural language processing pp 

springer berlin 


discrimination constructive induction logic programs 
proceedings tenth national conference artificial intelligence pp 
san jose ca 
langley 

learning search weak methods domain specific heuristics 
cognitive science 
lavrac dzeroski 
eds 

inductive logic programming techniques applications 
ellis horwood 
zuckerman 

inductive approach learning search control rules planning 
proceedings thirteenth international joint conference artificial intelligence pp 
france 
lehnert sundheim 

performance evaluation text analysis technologies 
ai magazine 
ling marinov 

answering connectionist challenge symbolic model learning past tense english verbs 
cognition 
magerman 

statistical decision tree models parsing 
proceedings rd annual meeting association computational linguistics pp 
cambridge ma 
marcus 

theory syntactic recognition natural language 
mit press cambridge ma 
marcus santorini marcinkiewicz 

building large annotated corpus english penn treebank 
computational linguistics 
miikkulainen 

subsymbolic case role analysis sentences embedded clauses 
cognitive science 
miikkulainen 

subsymbolic natural language processing integrated model scripts lexicon memory 
mit press cambridge ma 
mitchell 

learning problem solving 
proceedings eighth international joint conference artificial intelligence pp 
karlsruhe west germany 
mooney califf 

induction order decision lists results learning past tense english verbs 
journal artificial intelligence research 
muggleton buntine 

machine invention order predicates inverting resolution 
proceedings fifth international conference machine learning pp 
ann arbor mi 
muggleton feng 

efficient induction logic programs 
muggleton 
ed inductive logic programming pp 

academic press new york 


inside outside reestimation partially bracketed corpora 
proceedings th annual meeting association computational linguistics pp 
newark delaware 
pinker 
ed 

language instinct mind creates language 
william morrow quinlan 

learning order definitions functions 
journal artificial intelligence research appear 
quinlan 

learning logical definitions relations 
machine learning 
reilly sharkey 
eds 

connectionist approaches natural language processing 
lawrence erlbaum associates nj 
richards mooney 

automated refinement order domain theories 
machine learning 
riloff 

automatically constructing dictionary information extraction tasks 
proceedings eleventh national conference artificial intelligence pp 

rumelhart mcclelland 

learning past tense english verbs 
rumelhart mcclelland 
eds parallel distributed processing vol 
ii pp 

mit press cambridge ma 
simmons yu 

acquisition context dependent grammars english 
computational linguistics 
soderland lehnert 

wrap trainable discourse module information extraction 
journal artificial intelligence research 
tomita 

efficient parsing natural language 
kluwer academic publishers boston 
waibel lee 
eds 

readings speech recognition 
morgan kaufmann san mateo ca 
warren pereira 

efficient easily adaptable system interpreting natural language queries 
american journal computational linguistics 
wermter riloff 
eds 

connectionist statistical symbolic approaches learning natural language processing 
springer verlag berlin 
wirth 

learning failure prove 
proceedings third european working session learning pp 

pitman 
wirth 

completing logic programs inverse resolution 
proceedings fourth european working session learning pp 

pitman 
zelle 

inductive logic programming automate construction natural language parsers 
ph thesis university texas austin tx 
zelle mooney 

combining foil ebg speed logic programs 
proceedings thirteenth international joint conference artificial intelligence pp 
chambery france 
zelle mooney 

learning semantic grammars constructive inductive logic programming 
proceedings eleventh national conference artificial intelligence pp 
washington zelle mooney 

combining top bottom methods inductive logic programming 
proceedings eleventh international conference machine learning pp 
new brunswick nj 
zelle mooney 

inducing deterministic prolog parsers treebanks machine learning approach 
proceedings twelfth national conference artificial intelligence pp 
seattle wa 
zelle mooney 

comparative results inductive logic programming corpus parser construction 
wermter riloff 
eds connectionist statistical symbolic approaches learning natural language processing pp 

springer berlin 
zelle mooney 

learning parse database queries inductive logic programming 
proceedings thirteenth national conference artificial intelligence portland 
zelle thompson califf mooney 

inducing logic programs explicit negative examples 
proceedings fifth international workshop inductive logic programming pp 
leuven belgium 
article processed macro package llncs style 
