utility explicit rate flow control mobile ad hoc networks kai chen klara nahrstedt computer science department university illinois urbana champaign urbana il email klara cs uiuc edu flow control mobile ad hoc network manet face new challenges frequent re routing bandwidth variation wireless links 
tcp implicit aimd flow control performs poorly environment keep dynamics network 
explore potential utility explicit flow control manet domain 
propose endto rate flow control scheme called exact flow allowed rate explicitly conveyed intermediate routers hosts data packet special control header 
result exact reacts quickly precisely re routing bandwidth variation especially suitable dynamic manet network 
discuss supporting mechanisms required scheme mac transport layers 
ns simulations show exact outperforms tcp terms fairness efficiency especially highly dynamic manet environment 
mobile ad hoc network manet formed group mobile nodes connected wireless links 
nodes talk direct peer peer wireless communication close multi hop forwarding intermediate nodes far away 
wireline networks host manet face non trivial problem deciding fast send packets destination network 
flow control congestion control problem networking research 
generally flow control scheme goals efficiency fairness 
efficiency refers property aggregated traffic bottleneck router match available bandwidth outgoing links 
fairness refers property competing flow get fair share available bandwidth 
internet tcp aimd additive increase multiplicative decrease algorithm predominant flow control scheme 
belongs implicit flow control category measures network congestion state performance measurements hosts packet loss help network 
due tcp wide acceptance software availability internet remains current de facto flow control standard manet 
studies shown tcp suffers fairness efficiency problems environment 
summarize problems follows 
tcp detects nitin vaidya department electrical computer engineering university illinois urbana champaign urbana il email crhc uiuc edu congestion packet loss events reliable congestion signal packet loss wireless related random loss mobility related routing loss 
second tcp additive increase congestion window limits ability acquire spare bandwidth quickly important re routing event 
third tcp reacts packet loss tends keep bottleneck router queue full may put router risk dropping packets link bandwidth fluctuates 
fourth tcp window transmission lead burst packet transmissions acks arrive time 
efforts enhance tcp performance manet problems mentioned fundamental implicit approach taken tcp aimd flow control algorithm 
prompted deficiencies tcp attempt design effective flow control scheme manet 
adopt explicit flow control approach propose explicit rate flow control exact scheme solution flow control problem manet 
refer scheme routers provide explicit rate information flows 
explicit congestion information carried ip header data packet modified intermediate routers signal flow allowed data sending rate 
rate information returned receiver sender feedbacks 
scheme part inspired rate feedback framework atm abr available bit rate congestion control details section vi incorporated number mechanisms fit new manet environment 
focus fold 
propose design exact scheme effective flow control solution manet 
second perform extensive comparison exact tcp gauge performance improvements adopting explicit flow control approach 
best knowledge study explicit rate flow control manet 
rest organized follows 
outline design rationales exact section ii followed detailed description section iii 
supporting mechanisms discussed section iv simulation testbed results reported section section vi discusses related followed section vii 
ii 
design rationales exact fundamental departure traditional implicit flow control approach tcp describe design rationales scheme follows 
router assisted flow control exact router explicitly gives rate signals flows currently passing 
routers central places congestion happens better position detect react condition 
instance wireless link bandwidth varies exact able convey variation flows quickly requiring detect variation packet losses 
flow changes router result mobility exact able provide rate signal flow immediately new path requiring sender go additive probing phase tcp 
router assisted exact scheme precise responsive especially suitable dynamic manet environment 
rate transmission exact sender follows rate information feedback packets receiver packet transmission rate 
alleviates bursty transmission problem tcp 
rate transmission feedback packets sent frequently allocated rate significantly changed 
feasibility manet admittedly scheme incurs additional complexity overhead routers computing rate allocation competing flows 
scheme targeted large scale internet core routers process huge number concurrent flows solution special manet environment 
believe exact scheme fits precisely unique characteristics 
manet small scale network group mobile users emergency workers 
second internet core router manet 
flows evenly routed network going hierarchical aggregation points 
factor manet traffic displays locality mobile node talk node physically close 
result number concurrent flows going manet router relatively small 
additional processing overhead exact feasible practical solution manet 
overview iii 
exact framework overview exact framework shown sender sends continuous stream data packets receiver 
data packet carries special ip header called flow control header modified intermediate routers signal flow allowed sending rate 
packet reaches destination explicit rate sender data feedback receiver data packet explicitly carries allowed sending rate forward path 
rate information returned sender feedback packets 
data sender feedback receiver re routing allowed sending rate new path immediately learned data packets going new path 
fig 

overview exact flow control scheme 
information returned sender feedback packet 
result bandwidth variation path returned sender rtt 
note feedback packet may travel path data packets 
event re routing data packet traveling new path collects new allowed rate flow 
result sender learns exact sending rate rtt delay re routing having go additive probing phase tcp 
packet flow control header includes fields er explicit rate cr current rate 
er allowed sending rate flow 
initially set sender maximum requested rate subsequently reduced intermediate routers signal allowed data rate 
er typically set infinity flows requiring largest possible bandwidth ftp 
cr initially set sender current sending rate modified intermediate routers signal possible rate reduction path 
router remembers cr current flows flow table order compute flow fair share bandwidth 
note exact assume particular underlying routing protocol manet symmetric routes sender receiver 
separate flow control module attached routing agent manet 
host behavior assume systems cooperative 
sender behavior follows sender sets er field desired maximum rate cr field current sending rate data packet sends 
reception feedback packet sender adjusts sending rate rate included feedback 
receiver behavior follows reception data packet receiver copies er field data packet small feedback packet sends sender 
optional delay ack strategy allows receiver send feedback receiving number data packets er significantly changed 
feedback packet er cr fields set er incoming data packet adjusted feedback packet smaller size delay ack strategy indicate feedback packet flow rates 
start sender allowed send packets small initial sending rate 
data packet received acknowledged receiver sender uses explicit rate feedback packet sending rate 
router behavior router plays central role exact scheme 
router major tasks keep track current flows sending rates flow table measure current bandwidth outgoing wireless links compute rates current flows update header passing data packet 
discuss details tasks 
router maintains soft state flow table format src ip src port dest ip dest port hop refresh time current rate 
fields uniquely identify flow 
receiving data packet router updates flow hop refresh time current rate keep date view flow 
mentioned earlier cr field packet flow control header update flow current rate 
flow refresh certain period time purged table possibly result re routing termination 
core part router rate computation algorithm allocate sending rates competing flows 
rate computation performed locally current measured bandwidths outgoing links current rates flows going router 
efficiency achieved making sure flows fully occupy outgoing wireless links 
fairness achieved allocating bandwidth fairly flows 
adopt special max min fairness baseline fairness criterion 
max min fairness flows minimum requests granted requests remaining bandwidth resource evenly divided higher demanding flows 
propose maintain fairness competing flows channel time demands access wireless channel wireless channel bandwidth different neighboring nodes different due location dependent channel conditions 
example flow requesting mbps rate neighboring node mbps actual bandwidth requires router dedicate channel time flow flow request better node mbps bandwidth requires channel time 
note wireless links bandwidths dynamically measured mac layer details section iv 
represent flow resource request normalize flow requested rate hop link bandwidth flow data rate current rate flow table current bandwidth link 
max min allocation performed top requests flows flow obtains throughput proportional hop link bandwidth call bandwidth proportional max min fair 
local max min rate computation follows initially available channel time set flows demand satisfied empty compute level allocated resources total number flows include set compute flows flows include flows set re compute level algorithm terminates result resource allocation largest request fully satisfied 
request granted resources 
represents allocation channel time converted allocation real data rate link going link measured bandwidth link flows maximum data rate flow send 
scheme router immediately computes rates previous computation invalidated reasons arrival new flow purge existing flow change rate existing flow change link bandwidth 
allows router quickly react dynamics manet 
flow control header updates mentioned earlier routers modify flow control header data packet explicitly signal flow allowed sending rate 
receiving data packet router ob tains maximum allocated data rate packet hop neighbor updates packet flow control header follows result er carries minimum bottleneck allowed sending rate routers path 
current rate cr reduced path order deliver upstream bottleneck downstream routers soon possible 
updated cr field kept router flow table flow current rate 
iv 
supporting mechanisms exact mac layer dynamic bandwidth measurement order perform rate computation router knowledge current achievable bandwidth wireless links 
dynamic bandwidth measurement mechanism place mac layer 
example consider measurement method popular ieee dcf mac layer depends csma ca coordinate packet transmission rts cts data ack packet sequence 
similar ts packet ready channel busy contentions td rts cts data ack time tr packet received fig 

ieee unicast packet transmission sequence 
throughput transmitted packet computed size packet time stamp packet ready sent mac layer time stamp ack received 
note time interval includes channel busy contention time 
average throughput packets destined neighboring node estimate achievable bandwidth node 
keep separate bandwidth estimates different neighboring nodes channel conditions may different 
ns simulator verified light channel contention bandwidth estimates error heavy channel contention estimates error 
shows dynamic bandwidth measurement method feasible robust 
transport layer safety counter exact sender adjusts sending rate response feedbacks receiver 
prevent sender flooding network feedback packets suddenly lost example due wireless transmission outage route disruption safety mechanism place 
implement safety counter sender limit number outstanding packets acknowledged receiver 
note confused tcp transmission window 
safety counter imply kind reliability control retransmission lost packets 
limit amount damage sender cause network feedback packets lost 
clearly safety counter small limit flow sending rate permitted exact 
shown proved manet bandwidth delay product path measurement maximum packet carrying capacity path exceed round trip hop count path 
exact round trip hop count network path sender receiver size safety counter 
transport layer route probing route failure re routing common manet 
network path unavailable sender send safety counter number packets enter probing hop count path immediately available routing layer source routing dsr 
packet augmented simple ttl counter ip header accumulate hop count 
state periodically sends probing packets slow speed see new path available 
path available receiver receive probing packet send feedback sender 
receiving feedback sender exits probing state proceeds normal packet transmission explicit rate new path returned receiver 
transport layer reliability control exact rate flow control scheme 
implement reliable data transmission 
optional mechanism reliability added top exact scheme independent mechanism 
flow control reliability control de coupled 
choose sack selective acknowledgment reliability mechanism allows sender selectively retransmit missing packets reduce number unnecessary re transmissions due order packet delivery manet 
evaluation exact section compare exact tcp implicit aimd flow control ns simulator 
exact implemented underlying routing protocol choose dsr dynamic source routing due simplicity 
report experiments running exact manet testbed linux laptops 
simulation hop scenario set simulations mobile nodes transmission range inside space 
nodes random way point mobility model move maximum speed pause time 
total number nodes 
packet size bytes 
baseline behavior flows node node demonstrate basic behavior exact scheme reliability mechanism 
flows share bottleneck router node compete accessing channel bandwidth 
start sequence time flow starts demands large bandwidth er field time second flow starts large bandwidth demand time flow reduces demand small value bytes gives away rest bandwidth second flow time flow resumes large bandwidth demand get back share bandwidth time second flow stops leaving bandwidth flow 
observations 
maxmin fairness achieved flows rate computation algorithm 
time periods flows obtains nearly throughput note flow control reliability control independent mechanisms feedback information sent back sender feedback packet order save bandwidth 
bandwidths links close 
second mac layer link utilization bottleneck router kept close shows efficiency scheme 
time router queue length short stable shown packet queuing loss 
third flow quickly precisely obtain share bandwidth extra bandwidth available additive probing 
results show exact behaves designed 
comparison tcp compare exact enhanced sack reliability control tcp reno tcp sack reliable 
create exact flows node 
share bottleneck router node request large bandwidth 
maxmin fairness obtain nearly throughput bandwidths links close 
shows result sequence number plots flows overlap precisely 
comparison results tcp reno tcp sack flows setting show guarantee perfect fairness simple hop scenario 
shown queue length bottleneck router exact kept minimum stable times tcp reno tcp sack frequently exceeds queuing limit 
leads packet loss 
result total number reliably transmitted packets exact tcp reno tcp sack 
show multi hop scenario gap larger 
simulation multi hop scenario set simulation create manet nodes moving space random way point mobility model maximum speed pause time seconds 
creates moderately fast moving scenario forces nodes long routes rectangular area 
result re routing link bandwidth variation common 
comparison tcp experiment create exact flows enhanced sack node 
ensures flows travel path share exactly bottleneck router 
result expect sending rate times 
evident sequence number plots flows overlap precisely 
comparison tcp reno tcp sack flows setting achieve perfect fairness 
time total number reliably transmitted packets exact tcp reno tcp sack demonstrates efficiency scheme 
different degrees mobility evaluate efficiency explicit rate flow control compare exact tcp reno tcp sack different mobility patterns 
nodes move maximum speed different pause times create different levels network dynamics 
scenario average total number reliably average transmitted packets pkts exact sack tcp reno tcp sack pause time sec fig 

comparison exact tcp different mobility patterns 
transmitted packets runs flow control scheme 
results show mobility scenarios exact outperforms tcp reno tcp sack packets respectively 
demonstrates efficiency effectiveness exact scheme dynamic manet environment 
testbed computational overhead implemented exact manet testbed linux laptops arranged multi hop topology 
ex act module implemented user level java 
mac layer bandwidth measurement implemented modifying lucent ieee pcmcia card driver cs driver exports measured bandwidth exact module 
want comment overhead exact experiments 
running relatively slow pentium ii hz laptop kb memory concurrent flows aggregate traffic kbps exact occupies cpu average 
modified mac layer driver occupies cpu 
exact computing power today mobile devices 
vi 
related section discuss number related applying explicit flow control various network environments 
scheme internet explicit congestion notification ecn router marks bit passing packet ip header incipient congestion detected 
carries binary information indicating congestion congestion contrast exact provides precise rate signals hosts need aimd style algorithm hosts 
second scheme atm forum rate flow control abr available bit rate service 
goal abr flow control fully utilize bandwidth left higher priority traffic 
scheme explicit rate control information conveyed intermediate switches destination special cells called rm resource management cells rm cells returned sender path 
atm abr provides generic framework rate feedback flow control framework adopted exact scheme 
shown earlier order adopt framework number special mechanisms designed special manet environment 
considered flow rate bytes sec receiver sequence number receiver sequence number data rate flow node node time sec second flow rate bytes sec data rate second flow node node time sec mac layer link utilization link utilization time sec fig 

exact flows hop scenario 
data rate flow data rate second flow mac layer utilization node 
seq 
number flow node node seq 
number second flow node node time sec receiver sequence number seq 
number flow node node seq 
number second flow node node time sec receiver sequence number seq 
number flow node node seq 
number second flow node node time sec fig 

sequence number comparison tcp hop scenario 
exact sack tcp reno tcp sack seq 
number flow node seq 
number second flow node time sec receiver sequence number seq 
number flow node seq 
number second flow node time sec receiver sequence number seq 
number flow node seq 
number second flow node time sec fig 

sequence number comparison tcp multi hop scenario 
exact sack tcp reno tcp sack pilot study applying explicit rate flow control manet domain 
proposed atp protocol reliable transport protocol feedback maximum packet delay routers 
feedbacks host infer share bandwidth bottleneck router 
atp gives improved throughput tcp guarantee fairness competing flows 
contract exact achieves efficiency fairness explicitly allocating bandwidth competing flows 
clear advantage atp stateless implementation shown stateful implementation exact practical solution small scale manet 
vii 
propose explicit rate flow control scheme called exact manet network 
explicitly notifying flow allowed data rate exact able react quickly precisely bandwidth variation re routing events 
simulation result shows exact outperforms tcp aimd terms fairness efficiency especially highly dynamic manet environment 
testbed experiment confirms stateful implementation exact computing power today mobile devices 
exact effective practical flow control solution manet domain 
keshav engineering approach computer networking 
reading ma addison wesley 
holland vaidya analysis tcp performance mobile ad hoc networks proc 
mobicom seattle wa usa aug 
dyer boppana comparison tcp performance routing protocols mobile ad hoc networks proc 
acm symposium mobile ad hoc networking computing mobihoc long beach california usa oct 
fu luo lu zhang gerla impact multihop wireless channel tcp throughput loss proc 
ieee infocom san francisco california usa apr 
sundaresan 
hsieh sivakumar atp reliable transport protocol ad hoc networks proc 
th acm symp 
mobile ad hoc network computing mobihoc annapolis maryland june 
rate flow control framework available bit rate atm service ieee network march april 
bertsekas gallager data networks nd ed 
prentice hall 
shah chen nahrstedt dynamic bandwidth management single hop ad hoc wireless networks proc 
ieee international conference pervasive computing communications percom dallas fort worth texas usa mar 
chen nahrstedt exact explicit rate flow control framework manet university illinois urbana champaign tech report dec 
online 
available cairo cs uiuc edu adhoc tr exact pdf chen xue nahrstedt setting tcp congestion window limit mobile ad hoc networks proc 
ieee intl 
conf 
communications icc anchorage alaska usa may 
ramakrishnan floyd black addition explicit congestion notification ecn ip rfc sept 
