parallel differential evolution pavlidis department mathematics university patras gr patras greece department information communication systems engineering university gr greece university patras artificial intelligence research center mail vpp math gr parallel processing emerged key enabling technology modern computing 
software advances allowed collections heterogeneous computers concurrent computational resource 
explore differential evolution parallelized ring network topology improve speed performance method 
experimental results indicate extent information exchange subpopulations assigned different processor nodes bears significant impact performance algorithm 
furthermore mutation strategies differential evolution algorithm equally sensitive value parameter 
parallel processing method having small tasks solve large problem emerged key enabling technology modern computing 
result demand higher performance lower cost sustained productivity past years witnessed acceptance adoption parallel processing high performance scientific computing general purpose applications 
acceptance facilitated major developments massive parallel processors widespread distributed computing 
important factor parallel computing high cost hardware 
contrast users see little cost running problems local set existing computers 
exploiting software advances collections heterogeneous computers coherent flexible concurrent computational resource 
technologies allowed vast number individual personal computers available scientific laboratories parallel machines low cost 
network interfaces linking individual computers necessary produce pools computational power 
network infrastructure currently immature provide sufficiently high speed data transfer interfaces comprises bottleneck entire system 
applications exploit specific strengths individual machines network minimizing required data transfer rate best suited network environments 
differential evolution de novel minimization method capable handling nondifferentiable nonlinear multimodal objective functions :10.1.1.1.9696
de designed stochastic parallel direct search method utilizes concepts borrowed broad class evolutionary algorithms eas 
method typically requires easily chosen control parameters 
experimental results shown de convergence properties outperforms known evolutionary algorithms :10.1.1.17.4051
explore differential evolution parallelized kind virtual parallel environment obtain speed performance improvements 
organized follows 
section ii differential evolution algorithm parallelization model briefly described 
section iv reports test functions 
section iv devoted presentation discussion experimental results 
ends 
ii 
differential evolution previously mentioned de population stochastic algorithm exploits population potential solutions individuals probe search space 
new individuals generated combination randomly chosen individuals population 
operation context referred mutation 
specifically individual 
np denotes current generation new individual mutant individual generated equations best best best best best member previous generation real parameter called mutation constant controls amplification difference individuals avoid stagnation search process 

np random integers mutually different different running index mutation strategy eq 
known trigonometric mutation operator proposed 
mutation strategy performs mutation eq 
probability mutation eq 
probability 
values pi obtained equations 
wg wr wr mutation strategies just described bear close similarity process known crossover genetic algorithms evolution strategies 
experimental results reported section iv investigate performance differences caused various possible mutation strategies 
increase diversity mutant individuals resulting individuals combined predetermined individuals target individuals operation called recombination 
process originally referred crossover refrain terminology avoid confusion mutation process :10.1.1.1.9696
specifically component 
mutant individual randomly choose real number interval 
compare number recombination constant 
select th component trial individual th component mutant individual 
th component target vector th component trial vector 
operation yields trial individual 
trial individual accepted generation yields reduction value error function 
selection operation 
iii 
proposed algorithm parallel virtual machine pvm 
pvm de facto standard message passing interface 
integrated set software tools libraries emulates general purpose flexible heterogeneous concurrent computing framework interconnected computers varied architectures 
pvm designed link computing resources provide users parallel platform running computer applications irrespective number different computer architectures computers located 
capable harnessing combined resources typically heterogeneous networked computing platforms deliver high levels performance functionality 
key concept collection computers appear large virtual machine name 
de eas easily parallelized due fact member population evaluated individually :10.1.1.17.4051
phase algorithm requires communication individuals reproduction 
phase parallelized pairs individuals :10.1.1.17.4051
generally typical models ea parallelization 
employs fine grained parallelism case individual assigned different processor 
approach problematic number available processors limited computation fitness function requires information entire population 
second model maps entire subpopulation processor 
subpopulation evolves independently solution 
allows subpopulation develop solution independently 
promote information sharing best individual subpopulation moved subpopulations predefined topology 
operation called migration 
topology proposed scheme ring best individuals subpopulation allowed migrate subpopulation ring 
concept reduces migration subpopulations consequently messages exchanged processors 
migration best individuals controlled migration constant 
iteration uniformly distributed random number interval chosen compared migration constant 
migration constant larger best individuals subpopulation migrate take place randomly selected individual different best subpopulation migration permitted 
high level description parallel algorithmic scheme follows master node 
spawn subpopulations different processor 
generation 
receive individual subpopulation 
decide individual going migrate 
send individuals migrate subpopulation ring topology 
criterion objective function met send termination signal subpopulations subpopulation 
generation 
perform de step 
send best individual master node 
receive migrated individual exists assign random individual 
termination signal received terminate execution algorithm modified including concept aging individuals prevents individual surviving indefinitely :10.1.1.17.4051:10.1.1.17.4051
test functions iv 
experimental results test functions selected appear 
sphere xj 
sphere test function considered simple minimization problem 
minimum 

rosenbrock saddle xj 
dimensional test function known relatively difficult minimize 
minimum 
step function xj xj 
minimum function 

function exhibits flat regions cause search stagnation 
quartic function xj 
test function designed evaluate behavior minimization algorithms presence noise 
random variable uniform distribution range 
inclusion difficult optimize 
functional minimum function 
expectation 
xj parameters function xj aij ai ai ai mod ai ai ai 
global minimum 
parabola xj xj zj xj 
xj zj sign zj dj xj zj xj sign xj dj 
test function defines paraboloid axes parallel coordinate axes 
function characterized multitude local minima increasing depth moves closer origin 
global minimum function xj 
griewangk function xj 
xj cos test function local minima 
global minimum function 

presentation results numerical experiments performed pvm version parallel differential evolution interface developed linux operating system gnu compiler collection gcc version 
table parameter setup numerical experiments conducted summarized 
specifically denotes dimensionality problem np stands size subpopulation assigned processors employed maximum number generations allowed values mutation recombination constants respectively 
little effort devoted selection values np scope study extensively implications information sharing parallel environment controlled migration constant 
worth noting performance improvements achieved fine tuning np 
parameter trigonometric mutation strategy eq 
set 
test function np sphere function rosenbrock saddle step function quartic function parabola griewangk function table parameter values illustrates speedup achieved assigning subpopulation different processor relative assigning subpopulations single processor 
obtain plotted values algorithm performed generations migration constant equal 
setup obtain pentium iii celeron mhz connected mbit fast ethernet network interface 
table ii reports mean number generations required locate global minimum test function averaged considered mutation constants 
clear table ii best performing mutation strategy test speedup nodes fig 

speedup achieved nodes problems 
furthermore griewangk function test function appears hardest minimize 
test function mutation strategy sphere rosenbrock step quartic griewangk table ii mean number generations node model figures illustrate performance node model considered mutation strategies test functions particular migration constant 
plots mutation strategies axis test functions axis mean number generations reported axis 
concerning performance mutation strategies worst performance exhibited strategies 
strategies appear efficient robust 
figures exhibit mean number generations required migration constant stepsize mutation strategies test problems 
evident selecting appropriate migration constant significant impact performance algorithm 
appears setting close zero lead substantial increase number generations required 
superior performance typically obtained intermediate values 
noted results table ii figures mutation strategy eq 
efficient 
figures infer strategy exhibits robust generation generation generation test function migration constant mutation strategy fig 

performance results migration constant test function migration constant mutation strategy fig 

performance results migration constant test function migration constant mutation strategy fig 

performance results migration constant generation generation generation test function migration constant mutation strategy fig 

performance results migration constant test function migration constant mutation strategy fig 

performance results migration constant test function migration constant mutation strategy fig 

performance results migration constant generations sphere test function mutation strategy fig 

sphere function ranging step behavior respect migration constant 
third mutation strategy eq 
exhibits relatively robust behavior respect test functions 
worth noting considered mutation strategies achieve comparable better performance fine tuning value 
mutation strategies eq 
appear heavily influenced choice 
studied achieve optimal differential evolution performance reduced computational time function evaluations parallel implementation subpopulations exchange individuals ring network topology 
parallelization model employed assigns subpopulation different processor node 
topology proposed parallel model ring 
experimental results obtained suggest impact migration constant factor determines extent information exchange subpopulations significant performance algorithm 
selecting migration factor appears choice setting factor close advisable 
impact factor performance varies different mutation strategies employed algorithm 
third mutation strategies appear robust respect factor second fourth sixth mutation strategies highly sensitive 
fine tuning migration constant produce significant performance improvements 
correspondence intend investigate alternative topologies potential benefits employing evolutionary adapted migration scheme implementation aging concept individuals populations :10.1.1.17.4051:10.1.1.17.4051
generations generations generations rosenbrock saddle mutation strategy fig 

rosenbrock saddle ranging step step test function mutation strategy fig 

step function ranging step quartic test function mutation strategy fig 

quartic function ranging step generations generations generations mutation strategy fig 

ranging step parabola mutation strategy fig 

parabola ranging step griewangk test function mutation strategy fig 

griewangk function ranging step acknowledgment authors anonymous reviewers useful comments 
partially supported research awarded research committee university patras pythagoras research awarded greek ministry education religious affairs european union 
geist beguelin dongarra jiang manchek sunderam 
pvm parallel virtual machine 
user guide tutorial networked parallel computing 
mit press cambridge 
gropp lusk skjellum 
mpi 
scientific engineering computation 
mit press nd edition 
storn price 
differential evolution simple efficient adaptive scheme global optimization continuous spaces 
journal global optimization 
price 
differential evolution 
corne dorigo glover editors new ideas optimization pages 
mcgraw hill london uk 
storn :10.1.1.17.4051
system design constraint adaptation differential evolution 
ieee transactions evolutionary computation 
fan lampinen 
trigonometric mutation operation differential evolution 
journal global optimization 
:10.1.1.17.4051
schwefel 
evolution optimum seeking 
wiley new york 
michalewicz fogel 
solve modern heuristics 
springer 

parallel evolutionary training algorithms hardware friendly neural networks 
natural computing 
