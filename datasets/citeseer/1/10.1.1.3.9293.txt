case handling new paradigm business process support wil van der aalst mathias weske gr dept technology management eindhoven university technology box nl mb eindhoven netherlands mail aalst tm tue nl plattner institute software systems engineering prof dr potsdam germany mail weske hpi uni potsdam de pallas athena box nl netherlands mail pallas athena com case handling new paradigm supporting flexible knowledge intensive business processes 
strongly data typical product processes 
workflow management uses predefined process control structures determine done workflow process case handling focuses done achieve business goal 
case handling knowledge worker charge particular case actively decides goal case reached role case handling system assisting guiding doing 
case handling introduced new paradigm supporting flexible business processes 
motivated comparing workflow management traditional way support business processes 
main entities case handling systems identified classified meta model 
basic functionality usage case handling system illustrated example 
key words case handling workflow management systems adaptive workflow flexibility business process management context decade workflow management concepts technology applied enterprise information systems 
workflow management systems staffware ibm mqseries workflow cosa offer generic modeling enactment capabilities structured business processes 
making graphical process definitions models describing life cycle typical case workflow instance isolation configure systems support business processes 
pure workflow management systems software systems adopted workflow technology example erp enterprise resource planning systems sap baan oracle crm customer relationship management software 
appears severe gap promise workflow technology systems really offer 
indicated authors workflow management systems restrictive problems dealing change :10.1.1.45.6317
particular workshops special issues journals devoted techniques workflow management flexible 
authors stress fact models simple possible allow maximum flexibility 
authors propose advanced techniques support workflow evolution migration cases workflow model 
process model kept simple idealized version preferred process supported 
result real run time process variable process specified design time 
contemporary workflow technology way handle changes go system back 
users forced bypass workflow system quite frequently system liability asset 
process model attempts capture possible exceptions resulting model complex manage maintain 
problems show difficult offer flexibility losing control 
terminology illustrate deficiencies contemporary workflow management motivate case handling paradigm metaphor blind surgeon 
doing introduce standard workflow terminology 
workflow management systems case driven focus single process instance 
means business processes describing handling workflow instance isolation supported 
cases handled parallel 
viewpoint workflow management system cases logically independent 
handle case workflow management system uses corresponding workflow process definition 
process definition describes routing case specifying ordering activities 
activities logical units correspond atomic pieces activity executed worker type resource result commit abort roll back 
specify ordering activities typically graphical language petri nets workflow graphs :10.1.1.30.3125
languages allow sequential conditional parallel routing cases 
workflow management systems allow advanced constructs 
typically activity enabled case may executed workers workers may execute activity 
support distribution concept role 
worker multiple roles activity role 
activity role workers role allowed execute activities type information workflow management system works follows corresponding workflow process definition instantiated new case case request information insurance claim customs declaration new workflow instance created 
corresponding workflow process definition workflow engine calculates activities enabled case 
enabled activity item put tray worker having appropriate role 
workers pick items tray 
selecting item worker start executing corresponding activity note item appear tray workers worker execute corresponding activity 
item please confuse case driven processes case handling 
case handling paradigm support case driven processes 
conventional workflow technology case driven processes 
selected workflow management system launches corresponding application monitors result executing corresponding activity 
note worker sees items tray selecting item information relevant executing corresponding activity shown 
problems argue lack flexibility result lack usability contemporary workflow management systems large extent stems fact routing mechanism driving case moved tray pre specified causal relationships activities 
fundamental property workflow approach causes problems needs straight activities 
activities considered atomic workflow system atomic user 
clustering atomic activities workflow activities required distribute 
actual done fine grained level 
routing distribution authorization 
result workers see authorized 
worker authorized items tray 
clearly distribution authorization coincide 
example group leader may authorized offered group members imply put worklist 
distribution authorization typically coincide contemporary workflow management systems crude mechanisms align workflow organization 
focusing control flow context data related entire case just activity moved background 
typically context tunneling results errors inefficiencies 
routing focuses done done 
perspective results rigid inflexible workflows 
worth noting traditional workflow technology suffers problems 
approaches flexible workflow management routing mechanism process support suffer problems mentioned 
blind surgeon metaphor blind surgeon metaphor illustrate problems identified placing hospital environment 
hospital operational flexibility defined procedures needed 
workflow processes hospital serve benchmark examples flexible workflow management cf 

note blind surgeon metaphor restricted hospital environments similar issues observed wide range knowledge intensive application scenarios 
consider flow patients hospital workflow process 
consider admission patient hospital creation new case 
basic workflow process hospital handle cases 
activities workflow include kinds treatments operations diagnostic tests workers surgeons specialists physicians laboratory personnel nurses 
workers roles task requires worker having specific role 
example case activity remove appendix requires role surgeon 
clearly define hospital workflows terms process definitions activities roles workers 
setting hospital workflows consider problems identified 
suppose hospitals straight activities 
mean workers execute actions specified activity additional actions allowed possible skip actions 
rigorous execution specified lead life threatening situations 
hospital environments crucial knowledgeable persons decide activities perform current case personal experiences 
general workflow process models represent complete knowledge experts situations occur 
suppose routing hospital processes distribution authorization 
mean activities executed tray worker 
distribution authorization coincide possible allow initiatives workers physician request blood test medical protocol specify test 
context tunneling intolerable 
mean information surgeons specialists physicians laboratory personnel nurses restricted information needed executing specific task 
contrast specific medical situation doctors nurses may take advantage consulting complete medical record patient current state patient personal knowledge experiences 
clearly undesirable medical staff hospital limit activities done procedure done 
medical protocol typically specifies done done 
descriptions useful guide workers 
clear restricting workers workflow specified medical protocol lead absurd situations 
clear tunnel vision straight ahead vision attention contextual information acceptable hospital process 
consider example surgeon ignore information directly related surgical procedure 
straightforward implementation process contemporary workflow management systems result surgeons blind information just doing actions specified activities 
blind surgeon metaphor illustrates key problems day workflow management technology 
case handling propose case handling new paradigm supporting business processes 
avoiding blind surgeon metaphor wide range application scenarios contemporary workflow technology fails offer adequate solution benefit new paradigm 
core features case handling avoid context tunneling providing information available case showing just bits pieces decide activities enabled basis information available activities executed separate distribution authorization allow additional types roles just execute role allow workers view add modify data corresponding activities executed information registered moment available 
key properties believe case handling provides balance data centered approaches ties process centered approaches ties 
inspired business process re engineering bpr principles workflow engineers focused processes neglected products produced processes 
case handling treats data processes class citizens 
balance highly relevant knowledge intensive business processes 
builds results focused case handling context specific case handling tool named flower :10.1.1.21.6771
flower pallas athena case handling tools 
related products 
electronic case handling offices predecessor flower staffware case handler cosa activity manager generic solution bpi 
focusing specific product generalize ideas tools conceptual model clearly shows difference case handling traditional workflow management 
demonstrate applicability case handling concept flower 
outline remainder organized follows 
section introduces case handling focusing differences case handling traditional workflow management 
section presents conceptual model describes key features case handling 
case handling environments precisely characterized section mathematical formalization static dynamic aspects 
note sections tool independent 
section describes case handling system flower realistic example 
provide pointers current case handling applications flower 
discuss related conclude 
position case handling broader spectrum involving approaches traditional production workflow ad hoc workflow groupware 
case handling paradigm central concept case handling case activities routing 
case product manufactured time workers aware context 
examples cases evaluation job application verdict traffic violation outcome tax assessment ruling insurance claim 
handle case activities need executed 
activities logical units 
workflow management systems impose called acid properties activities 
means activity considered atomic carried completely 
case handling uses rigid notion 
activities simply chunks recognized workers filling electronic form 
rule thumb activities separated points transfer worker possible 
please note activities separated points transfer non atomic activity book business trip may include tasks book flight book hotel clearly activities related cases follow typical patterns 
process recipe handling cases type 
workflow management systems specification process fixes routing cases activities workers hardly insight 
result exceptions difficult handle require deviations standard recipe 
dynamic application environments exceptions rule precedence relations activities minimized 
workflow exclusively driven precedence relations activities activities considered atomic paradigm needed support handling cases 
workers freedom need aware case 
case considered product structure state 
knowledge intensive processes state structure case collection data objects 
data object piece information value 
contrast existing workflow management systems logistical state case determined control flow status presence data objects 
truly paradigm shift case handling driven data flow exclusively control flow 
important workers insight case executing activities 
relevant information worker 
workers able look data objects associated case working assuming proper authorization 
forms different views data objects associated case 
activities linked form relevant data objects 
forms way presenting data objects 
link data objects activities processes specified directly 
data object linked process 
called free data objects changed case handled 
data objects explicitly linked activities mandatory restricted data object 
data object mandatory activity required entered order complete corresponding activity 
data object restricted activity entered activity activity data object restricted 
data object mandatory activity completed entered 
restricted activities entered note may mandatory activity restricted mandatory restricted orthogonal notions 
forms independent notions 
example form attached activity may may show mandatory restricted data objects 
mandatory activity restricted form linked cause deadlock possible complete mandatory restricted data objects typically corresponding form 
cases form contain additional data elements free mandatory activities process 
note mandatory data objects considered kind postcondition 
observation raises question precondition data objects exist execution addition postcondition 
functionality obtained adding dummy activity just activity requires precondition dummy activity postcondition interpreted precondition subsequent activity 
words dummy acts guard 
actors workers executing activities grouped roles 
roles specific processes multiple roles named manager long linked different processes 
actor multiple roles roles may multiple actors 
roles linked role graphs 
role graph specifies relations roles 
way specify anybody role manager role employee 
process activity types roles need specified execute role redo role skip role 
execute role role necessary carry activity start process 
redo role necessary undo activities case returns state executing activity 
note possible undo activity activities undone 
skip role necessary pass activities 
order skip consecutive activities worker needs skip role activities 
types roles associated activities processes provide powerful mechanism modeling wide range exceptions 
redo ensures dynamic dependent role employee status case flexible form loop 
skip takes care range exceptions modeled order pass activities 
course ways avoiding undesirable effects define role higher roles user role corresponding action blocked 
define role lower 
activity redo role undone possible go back earlier activity 
effective way model points return 
execute role means activity carried role process person equal role 
note addition roles consider additional roles responsible role supervisor role 
case define case manager role variety roles associated case activity shows case handling possible separate authorization distribution 
classical tray see items need executed 
way get case items tray authorization distribution coincide 
case handling tray replaced flexible query mechanism 
mechanism allows worker navigate active completed cases 
query select cases activity enabled execute role emulate traditional tray 
fact query corresponds precisely queue concept tray workflow management system staffware 
extending query roles specific worker fulfill possible create list cases worker execute activities point time 
possible queries select cases worker worked months select cases amount exceeding euro activity enabled 
query mechanism workers get handle cases require attention 
note authorization separated distribution 
roles specify authorization 
standard queries distribute 
query mechanism formulate ad hoc queries transcend classical tray 
workflow management case handling focus item case primary driver control flow case data separation case data process control separation authorization distribution types roles associated tasks execute execute skip redo table differences workflow management case handling 
conclude section summarize main differences workflow management supported contemporary workflow technology case handling cf 
table 
focus case handling case context tunneling limiting view single items 
primary driver determine activities enabled state case case data control flow related information activities executed 
basic assumption driving workflow management systems strict separation data process 
control data managed 
strict separation case data process control simplifies things creates integration problems 
case handling logistical state case activities enabled derived data objects data process separated 
workflow management case handling allows separation authorization distribution 
possible distinguish various types roles mapping activities workers limited execute role 
case handling meta model motivating case handling introducing basic concepts new paradigm sections identify main entities case handling environments relationships 
doing move informal discussion precise modeling case handling environments 
object oriented approach endeavor provides powerful modeling constructs proved adequate dealing complexity case handling 
de facto standard object oriented analysis design unified modeling language uml mainly structural features 
case handling meta model represents artifacts required define cases environments cases executed shown 
case definition central class case handling meta model 
case definitions complex cases internal structure atomic cases internal structure referred complex case definitions activity definitions respectively 
complex case definitions consist number case definitions resulting hierarchical structuring cases sub cases activities 
case handling meta model property represented recursive association complex case definition case definition 
obviously complex case definition consists case definition case definition may occur complex case definition represented cardinalities association 
case role type super sub case definition complex case definition activity definition free role restricted mandatory data object definition forms definition case handling meta model schema level 
activity role type case handling data driven approach activity definitions associated data object definitions 
particular activity definition associated data object definition 
association partitioned main types mandatory restricted 
data object definition mandatory activity definition respective data value entered activity completed may entered earlier activity 
restricted association indicates data value entered particular activity 
restricted mandatory associations activities data important implementation vehicle business process support activity completed values mandatory data objects provided 
activity definitions associated forms definitions 
forms visualize data objects offered user 
forms closely associated activities important means business process support 
fields displayed form associated activity correspond mandatory restricted data objects activity 
addition definition forms may contain data objects mandatory subsequent activities 
feature allows flexible execution business processes data values entered early stage knowledge worker decides 
data object definitions may free free data objects associated particular activities defined context complex case definitions 
accessed time case execution 
free data objects represented association data object definition complex case definition 
context case form 
indicated providing knowledge information possible important aspect case handling systems 
roles thoroughly case handling workflow management 
particular multiple roles associated case definition roles different types 
typical roles types associated activity execute execute activity skip skip activity required particular case redo jump back previous activities case option re doing activities re confirming data object values entered 
role types associated complex case definitions example manager supervisor indicate persons may manage supervise complex cases typically roles mapped management personnel organization 
role types activities represented association class called activity role type linking role class activity definition class role types complex cases represented association class complex case definition role class 
example shown illustrates concepts introduced case handling meta model 
shows cases data objects forms associations organizational aspects represented 
start discussing structure case definition 
complex case definition consists activity definitions represented indirect recursion complex case definitions case definitions meta model shown dotted line connecting sub cases 
shown data object definition mandatory 
mandatory restricted 
mandatory form definition associated holds field 
field form 
knowledge worker charge case case definition may enter value ready execution 
addition may enter value instant implicitly performs 
indicated form may contain mandatory restricted data objects 
may cause deadlocks anomalies 
exec skip mandatory mandatory mandatory mandatory free free restricted example introducing schema level case handling meta model 
due fact mandatory data object 
notice entered restricted executed context form associated 
activities case ordered followed represented recursive association roles meta model 
data object definitions 
dotted lines marked association type names represent associations activity definitions data object definitions 
indicated mandatory mandatory restricted 
free data elements appear form definition associated case definition 
notice form definition contains field representing data object definition mandatory completion data object definition mandatory data object definition free 
discussed knowledge worker may enter data value required completion 
complete entered mandatory 
knowledge worker may information efficiently case 
overload roles specified completely 
fact roles specified associated association type execute persons role may execute activity association type skip persons role may skip activity 
means enactment cases case definition knowledge workers play role permitted perform activities persons role may skip activity 
shows entities schema level entities complex case definitions roles activity definitions data object definitions forms definitions 
entities specified design time 
run time entities come play concrete cases actors activities data objects forms 
example case definition insurance claim describes insurance claim type level instance case role sub super case actor complex case activity free data object form case handling meta model instance level 
activity role level 
case insurance claim filed jones august th instantiation case definition insurance claim example entity created handled run time 
entities instance level represented case handling model shown 
model concrete cases center attention 
structure object model shown similar structure meta model shown 
example case definitions generalizations complex case definitions activity definitions meta model cases generalizations complex cases activities case handling model 
furthermore precedence ordering cases represented recursive relationship roles levels abstraction 
main differences models organizational embedding forms 
particular role class meta model actor class case handling model 
cardinality forms form definitions different models 
meta model schema level forms definition associated arbitrary number activity definitions case handling model instance level form associated activity 
due fact forms instantiated activity associated 
activities forms cater automatic activities example automated queries external database systems 
assumes run time form instantiated multiple times activities share forms definition may copies form 
alternative interpretation flower see form simply view data allow multiple instances form case time 
interpretation cardinalities 
formal framework case handling section formalizes concepts introduced half 
main purpose endeavor precisely describe dynamics case handling environment execution model case handling 
note meta model introduced previous section considers static aspects 
meta model structures relevant entities schema level instance level 
specify dynamics 
section specify dynamics formal model 
introduce formal model describing case definition 
model certain entities forms focus activities data objects 
formal model describe execution model case handling terms state transition diagrams eca rules 
discuss relation formal model entities excluded formal model forms actors 
case definition case definition describes way case specific type handled 
clearly case definition starting point formalizing dynamics case handling 
presentation purposes limit formalization case handling activities data objects interrelationships 
core entities determine execution semantics case handling 
formalization exclude forms roles 
consider nested case definitions assume case definition contains activity definitions complex case definitions 
note real limitation hierarchical model flattened recursively replacing complex case definitions decompositions 
forms roles excluded indirectly affect execution semantics 
restrictions define case definition follows 
definition tuple cd dom mandatory restricted free condition called case definition holds set activities definitions precedence relation set data object definitions dom function mapping data object domain denotes power set domain data object definition set values universe mandatory relation specifies mandatory data object definitions restricted relation specifies restricted data object definitions free relation specifies free data object definitions condition specifies activity conditions set partial bindings dom dom acyclic free mandatory restricted free mandatory restricted 
easy relate definition meta model shown 
set definition corresponds class activity definition 
set corresponds class data object definition 
function dom considered attribute class data object definition 
relation corresponds association denoting precedence relation 
note require acyclic loops 
functions mandatory restricted correspond associations connecting activities data object definitions 
set free corresponds association connecting complex case definitions data object definitions 
note consider nested case definitions 
suffices consider case definition set model free data objects 
free data objects mandatory restricted 
note data object definition mandatory restricted time 
function condition seen attribute class activity definition 
activity definition condition defined set bindings 
binding set values specific data objects 
activity executed actual values data objects match bindings 
activity bypassed 
functions dom condition provide simplistic type system constraint language 
upgraded advanced languages 
choice activities bypassed activity condition evaluates false merely chosen reasons simplicity 
activity acts join split 
sequential parallel routing possible setting activity conditions true 
alternative routing normally specified xor splits xor joins obtained adding activity conditions activity branch evaluates true false 
style process modeling corresponds routing semantics inconcert 
important note activities condition evaluates false binding matching current values skipped blocked 
possible simplistic routing language 
definition illustrated sample case definition shown 
case definition formalized dom mandatory restricted free condition mandatory restricted free 
specify dom condition 
assume dom true false dom red green yellow dom dom string 
boolean color number free text 
condition indicates possible allow loops 
result partial order activities 
fundamental restriction 
possible block structured loops mqseries workflow 
easy extend pattern arbitrary cycles described 
structured loops extension straightforward 
fact case handling system flower supports 
binding activity binding empty binding 
empty binding function empty domain 
requirements respect values data objects 
sense activity executed 
condition true indicates executed value set true 
condition red green indicates executed value set red green 
suppose activity data object set false set red result activity bypassed condition contain binding set false 
skipping activity enabled 
skipped binding set red red 
alternative condition condition true red false green 
indicates executed true red false green 
bypassed 
note examples show conditions specified terms bindings 
dynamics basis specification dynamic behavior case handling systems behavior activities defined properly 
state transition diagrams purpose 
organization case definition assigned particular type business event triggers instantiation case case definition 
example receiving message informing insurance claim typical business event 
case definitions business events triggering 
case instantiated activities created 
creation activity initial state 
available execution enters ready state 
selected user starts running 
completed interrupted 
case data entered interrupted activity saved 
activity started data available time 
data objects activity entered instance previous activities performs auto complete state transition enter completed state 
activities may skipped bypassed 
user may skip activity decides required 
due evaluation conditions certain branches followed activities particular branch case definition bypassed 
important aspect case handling systems ability re execute previous activities 
feature represented specific redo transitions passed skipped completed states 
activities redone re executed 
behavior activities shown 
activities important artifact case handling case mainly controlled basis states data objects associated particular case 
important stress life cycle activities described states state transitions data objects 
see consider state transitions data objects may take shown 
creation data object adopts undefined state 
data objects defined users filling forms represent data defined automatically example running queries database transferring result values data objects 
activities data objects mandatory redone cf 
redo role results state transition data objects unconfirmed state 
confirming values data objects re enter defined state 
enable initial ready running disable select complete passed skipped completed redo bypass skip redo interrupt dynamic behavior activities 
define undefined defined redo confirm unconfirmed states data objects 
considerations state space case defined follows definition cd dom mandatory restricted free condition case definition 
case state space cd defined cartesian product ds activity state space data state space ds initial ready running completed passed skipped ds undefined defined unconfirmed definition simply states state case characterized states activities characterized states data objects characterized 
data object undefined defined redo operation unconfirmed 
case value stored data object 
useful define terms describing relative order activities context case definition 
case definition cd dom mandatory restricted free condition activity preceding subsequent 
non reflexive transitive closure case handling systems case definitions guide users handling cases 
order system sure activity flagged ready execution preconditions activity met 
able specify activity executed bypassed auxiliary function 
cd dom mandatory restricted free condition case definition redo ds state space 
function ds maps elements data state space sets defined data objects values filters data objects undefined unconfirmed 
specified follows ds ds ds ds defined 
function define activity executed considering data objects state state ds ds ds condition ds 
ds called precondition activity data state ds 
note ds note condition evaluates true user proper role select activity execution 
condition evaluates false activity bypassed 
stress activities may bypassed blocked languages 
addition precondition depends data state postcondition depending data state 
ds auxiliary function specifying postconditions 
ds ds ds mandatory dom ds postcondition activity data state ds 
functions focus data state ds ds 
clearly data state sufficient determine dynamics activity state causal relations specified state transition diagrams shown figures matter 
specify semantics case handling augment state transitions shown rules specified event condition action eca style formalization 
state transition shown described rule form event condition action 
event describes trigger evaluate rule typically corresponds user action 
external event needed trigger rule system trigger part rule omitted 
condition boolean expression terms state case activity state data state ds ds 
action state transition state transition diagram 
eca rules semantics defined follows 
definition cd dom mandatory restricted free condition case definition activity activity state ds ds data state 
state transitions shown defined eca rules 
preceding passed skipped completed enable ds preceding passed skipped completed disable ds user trigger actor proper execute role selects activity ds select ds user trigger activity interrupted actor working activity true interrupt ds user trigger activity completed actor working activity ds complete ds ds ds auto complete ds user trigger activity skipped actor proper skip role ds skip ds ds bypass ds user trigger activity redone actor proper redo role subsequent initial ready redo ds eca rules interpreted context state transition diagram shown 
rule applied corresponding activity proper state action bypass ds corresponds state transition state ready state passed executed activity state ready 
rules fairly straightforward 
rule deserves explanation redo ds 
redo activity subsequent activities state initial ready rolled back 
roll back activities subsequent activities ready initial recursively roll back activities 
note possible direct predecessor activity state ready rolled back 
case action disable ds automatically puts predecessor state initial 
definition relates state transition diagram shown 
definition give similar rules state transition diagram shown 
definition cd dom mandatory restricted free condition case definition data object activity state ds ds data state 
state transitions shown defined eca rules 
user trigger actor enters value data object form restricted restricted running define ds system trigger activity redone data elements associated activity triggered true redo ds user trigger value data object confirmed actor having access form restricted restricted running confirm ds interesting note state transitions relatively independent states activities 
essence case handling data objects leading data values may entered various places 
restricted data objects closely bound activities 
reflected conditions definition 
aspects formalization terms state transition diagrams eca rules partially incorporates aspects forms roles 
discuss relationships aspects definitions 
form definitions linked activity definitions complex case definitions 
typically mandatory data object appears form linked activity note form linked activity may contain entries data objects mandatory 
additional entries may enter data needed subsequent activities view modify data produced preceding activities 
additional entries increase flexibility decoupling data objects activities 
may forms linked activity 
forms determine data object mandatory restricted free 
matter activities data objects 
limited impact forms dynamics case handling abstracted aspect 
roles linked activities 
distinguish role types exec skip redo 
roles mentioned event part eca rules definition definition 
example possible skip activity event leads action skip ds generated actor skip role 
issue addressed separation distribution authorization 
traditional workflow management systems distribution authorization coincide 
case handling propose query mechanism mentioned 
users simply state ad hoc query predefined query 
query select cases activity state ready execute role emulate traditional tray 
query mechanism give actor handle case specific activity 
actor handle case select activities state ready 
note authorization governed exec skip redo roles 
distribution governed query mechanism 
flower section introduce concrete case handling product flower 
flower pallas athena case handling product :10.1.1.21.6771
flower consistent case handling meta model cf 
section formal framework cf 
section 
flower offers features discussed previous sections 
example section assumes basic control flow model eventually activities bypassed skipped completed 
basic model possible select alternative branch multiple instances deferred choice 
result section presents simplification actual functionality flower 
note goal show essence case handling concrete product 
think interesting see concrete application flower illustrate case handling paradigm 
complex case definition 
flower consists number components flower studio flower case guide flower configuration management cfm flower integration facility flower management information case history logging 
limit flower studio flower case guide 
flower studio graphical design environment 
build time define case definitions consisting activities precedences data objects roles forms 
flower case guide client application handle individual cases 
consider insurance process handling claims motor car damage 
shows top level view workflow process flower studio 
right hand side shows graphical representation process 
left hand side shows list data object definitions 
left hand side window list form definitions mappings connect external information sources complex case definitions subprocesses 
shows case handling process starts creation case activity case creation followed activity claim start 
activity claim start linked form enables user enter claim data scanned hand written form supplied claimant 
data objects restricted entered step process 
completing form associated activity claim start subprocess register claim started 
note corresponds complex case definition terms meta model cf 

complex case definitions named plans flower 
register claim called static plan means involve choices instantiated 
top level view register claim shown 
register claim consists number activities need executed activities corresponds obtaining certain data objects 
completing register claim complex case definitions handled parallel get medical report get police record assign loss witness statements 
get medical report get police record assign loss correspond subprocesses start system choice named system decision plans 
subprocesses contains activities 
detailed description subprocesses scope 
holds processing witness statements 
complex case definition witness statements called dy complex case definition register claim 
namic subplan 
means instantiated multiple times instances handled parallel 
dynamic subplan attributes expansion name minimum instances max expansions 
attribute expansion name identify instance 
subplan witness statements name witness 
attribute minimum instances specify instances created case number eye witnesses specified data object nr witnesses entered register claim attribute max expansions set upper limit number instances case note new instances created fly 
completing get medical report get police record assign loss witness statements complex case definition policy holder liable executed 
subprocess starts user decision named user decision plan 
policy holder liable contains activities 
details omitted 
case definition comprises data object definitions 
number shows relevance data 
data object name type linked plan complex case definition 
left hand side shows attributes data object definition claimant contacted 
boolean data object indicating policy holder contacted 
initially data object set false 
right hand side shows claimant contacted restricted activity contact policy holder 
activity part complex case definition register claim shown 
note data object definition restricted multiple activity definitions activity definition multiple restricted data object definitions 
consistent cardinalities association restricted shown 
mandatory data objects specified defining activity 
shows activities corresponding lists mandatory data objects 
example data object definition accident date mandatory activity definition collect case data 
data object definitions linked specific complex case definition including restricted mandatory data elements 
example left hand side shows attributes data object definition claimant contacted 
claimant contacted linked plan register claim 
consistent meta model identifies association free cf 
links complex case definitions data object definitions 
realization flower implies mandatory restricted data objects linked complex case definition plan 
case definition comprises form definitions 
form definition linked activity definitions 
example form definition collect case data linked activities register claim 
shows activity definitions sharing form 
focus steps register claim 
activity definition collect case data mandatory data object definitions accident date persons injured 
activity definition policy holder data mandatory data object definitions name policy holder policy number 
activity definition opposite party data mandatory data object definitions name opposite party address 
overlap mandatory data objects 
form definition collect case data includes data objects form shared activities 
means worker executing step process activity collect case data see information relevant subsequent steps process 
worker enter data way implicitly execute subsequent steps 
entering mandatory data objects mentioned steps executed filling single form 
example demonstrates essence case handling focus case single item data objects control flow constructs driving workflow 
shows roles relevant case definition manager supervisor claim doctor data collector 
arcs role graph correspond association shown 
note powerful role 
actors assigned role disable undesirable skip redo actions explained section 
role data collector weakest role role fulfilled anybody having roles shown 
activity definition types roles assigned 
properties activities including specification mandatory data objects 
role graph editor studio showing roles involved 
execute redo skip roles collect case data 
shows execute redo skip roles collect case data 
collect case data executed workers role data collector actors having roles redone workers role claim actors ones just having doctor data collector role skipped workers role manager actors role manager 
figures show windows design tool studio 
actors workers access cases called flower case guide 
access cases limited associated roles 
note flower supports separation authorization distribution 
role mechanism authorization 
distribution supported query mechanism explained section 
shows case guide showing state case type 
case guide shows case 
left hand side shows hierarchy case definition 
right hand side case guide shown divided parts 
top part navigation 
bottom part access forms independent activities form case overview opened time shows information letters sent letters received accident form middle part right hand side window called wavefront shown 
wavefront essential piece information provided case guide shows state case terms activities executed skipped activities enabled activities enabled 
wavefront provides time line 
activity claim start right time line indicating executed 
static plan subprocess complex case definition register claim time line indicating ready executed 
get medical report plans activities top level left time line indicating enabled 
double clicking icon register claim wavefront activities plans inside register claim shown 
double clicking activity execution corresponding activity starts 
activity register claim collect case data started form shown opened 
form named collect case data consists pages 
shows page 
data objects shown form correspond activity collect case data 
data objects client correspond activity policy holder data flower case guide 
form associated activities register claim 
data objects opposite party correspond activity opposite party data 
form collect case data linked activities single form shared multiple activities 
data objects mandatory restricted depends current activity 
note indicated activities performed single form need open close forms activities 
worker fill top part form collect case data executed step register claim 
section shown application case handling flower 
application fairly straightforward 
straightforward workflow processes may involve data objects activities 
applications consists complex case definitions activity definitions data object definitions forms roles 
typical workflow solutions data hidden inside applications 
fact considerable number data objects identified guiding workers case executions shows process primarily data driven nice illustration case handling paradigm 
applications case handling section briefly discuss practical implementations case handling systems flower 
point time dutch organizations switching traditional workflow management system flower 
cases switch triggered problems addressed 
example organization 
employee insurance implementing body responsible implementation employee insurance schemes sickness insurance scheme zw national health insurance scheme unemployment insurance scheme ww occupational disability insurance scheme 
contributions schemes assesses benefit applications sees payment benefits 
new organization joins organizations guo 
formally organization created 
goal joining organizations twofold improve quality reduce costs 
achieve goal merger triggered development common ict strategy standards 
workflow management case handling flower selected standard product 
applications flower complaints appeals department 
system flower runs branch offices users handles complaints appeals year 
processes supported system complex need deal exceptions involve documents 
flower new tool organizations applying flower eager provide detailed information processes reasons confidentiality provide details current implementations 
conclude list typical application domains tool flower payment institutions issuing payments handling complaints appeals banks insurance companies credit facilities claims processing government bodies processing vertical products telecommunications client contract administration housing corporations real estate administration educational institutions student course administration health care patient registration administrative processing police supporting police field courts law companies departments incidents requests changes 
important note flower applied application domains list possible applications lists areas case handling applied flower 
related mentioned researchers addressed issue workflow flexibility number workshop reports edited books special issues journals devoted topic 
agostini de michelis argue simple workflow models exceptions dealt hand called linear jumps 
authors give concrete adaptation rules 
authors state workflow change workflow 
authors propose declarative style specifying workflows example vortex paradigm 
approaches metaphor active document 
just pointers elaborate literature workflow flexibility 
problems respect designing process models real life processes recognized 
herrmann seeks solution semi structured workflow models 
propose product driven approach emphasize role data objects design workflows 
approach easily combined case handling paradigm 
builds introduced basic idea case handling providing meta model formalization realistic examples application case handling concrete project :10.1.1.21.6771
put context traditional workflow systems 
introduce integrated approach process planning coordination planning algorithms developed artificial intelligence community 
pre conditions post conditions derive goals current situation 
conceptual level implementation ideas introduces planning vehicle flexible process modeling strongly related case handling 
increasingly agent technology build workflow management systems 
agent architecture allows additional flexibility 
despite agent workflow prototypes authors unaware commercial applications agents workflow domain 
approach agents related complex workflows partitioned interacting simple workflows ideas 
vendors workflow management systems struggling flexibility issues 
systems inconcert tibco allow ad hoc routing workflow instances cases 
systems require fly modifications process models users 
know systems claim support case handling 
elaborated flower developed pallas athena 
functionality flower consistent meta model formalizations 
london bridge blue staffware case manager systems aiming case handling 
initially focus workflow support legal applications 
london bridge acquired blue focus shifted customer relationship management crm 
staffware case manager scm extends staffware workflow management system case handling functionality 
scm seen layer workflow management system applications 
scm allows easy access case related documents able refine staffware steps workflow activities fine grained tasks 
essence resulting approach process driven data driven 
way get scm standard queue mechanism staffware workflow management system 
meta model formal framework case handling systems apply scm 
similar scm cosa activity manager cam 
scm cam activity manager bpi 
contemplating concrete case handling systems interesting consider case handling context computer supported cooperative specifically groupware systems 
interesting classification collaborative technologies 
ellis presents taxonomy dividing collaborative technologies classes functionality support access change shared artifacts 
typical issues primary concern access control versioning backup recovery concurrency control 
examples include vault product data management pdm system repository drawings cad cam system multi media database system 
coordinators concerned ordering synchronization individual activities process 
typical issues addressed coordinators process design process enactment enabling activities progress monitoring 
key functionality workflow management system playing role coordinator 
communicators concerned explicit communication participants collaborative endeavors 
typical examples electronic mail systems video conferencing systems basic issues need addressed message passing broadcast multicast communication protocols conversation management 
team agents specialized domain specific pieces functionality 
team agent typically system acting behalf specific person group executing specific task 
examples include electronic agenda meeting scheduler 
functionality workflow management systems usually limited coordinator role 
clearly case handling system supports keeper coordinator communicator roles 
case handling system extends traditional workflow management system keeper role data objects control case handling system better support communicator role separation distribution authorization ability attach semi structured information cases 
groupware systems excluding workflow technology tend weak coordination dimension stronger keeper communicator team agent functions 
groupware systems provide various kinds support group decision making explicit notion workflow processes 
lotus notes combined domino workflow forms exception provide functions 
interesting compare lotus notes domino workflow case handling paradigm 
domino workflow supports called binder concept logical structure grouping documents related case 
keeper coordinator communicator roles truly integrated 
routing activities comparable traditional workflow management system approach process driven data driven 
lotus notes domino workflow considered case handling system 
lotus notes domino workflow targeting similar problems 
explicitly structured implicitly structured ad hoc structured unstructured case handling groupware production workflow ad hoc workflow data driven process driven positioning case handling 
introduced case handling new paradigm supporting flexible business processes 
blind surgeon metaphor introduced case handling highlighted problems respect contemporary workflow technology 
section compared case handling traditional workflow management 
striking differences difference focus case individual item difference driving force data driven process driven 
precisely define case handling metaphor provided meta model schema level instance level formal mathematical framework specifying dynamics case handling terms state transition diagrams eca rules 
example discussed related products 
identified problems 
problems addressed case handling way context tunneling avoided providing information available case showing just bits pieces activities enabled basis information available activities executed distribution separated authorization additional types roles just execute role added workers allowed view add modify data corresponding activities executed information entered moment available 
conclude position case handling context groupware production workflow ad hoc workflow 
traditional groupware products lotus notes ms exchange production workflow systems staffware mqseries workflow form ends spectrum 
shows traditional groupware products data driven focus sharing information process support unstructured processes 
note lotus notes exchange process aware components domino workflow added 
production workflow process aware aim structured processes 
order enact workflow production workflow system needs explicitly specify possible routes 
explicitly specified design time possible 
ad hoc workflow management systems inconcert tibco ensemble flow group allow creation modification workflow processes execution processes 
case private process model traditional problems encountered changing workflow specification avoided 
ad hoc workflow management systems allow lot flexibility 
workflow management system inconcert allows user initiate case having empty process model 
case handled workflow model extended reflect conducted 
possibility start template 
moment case initiated corresponding process model instantiated template 
instantiation case private copy template modified process running 
inconcert supports workflow design discovery routing completed workflow instance create new template 
way actual workflow executions create workflow process definitions 
shows ad hoc workflow management systems inconcert process driven ad hoc structured 
note case explicit process model 
interesting practical relevance ad hoc workflow limited assumes workers modify models run time 
flexible poses problems ranging unauthorized actions incomplete cases 
shows case handling positioned groupware production workflow ad hoc workflow 
note case handling process driven data driven 
hand possible create data driven workflows mandatory data objects 
hand possible define causal dependencies traditional workflow system 
data driven approach possible allow routes explicitly specifying 
additional roles skip redo enable implicit routes workflow 
task execute skip redo role hardly constraints 
data elements mandatory restricted task skip redo role obtains functionality comparable traditional workflow system 
case handling encompasses traditional workflow paradigm 
clearly trade support flexibility 
systems offer lot support tend inflexible production workflow 
systems offer lot flexibility tend offer support process groupware products 
glance support flexibility may contrasting 
demonstrated case handling paradigm offers interesting balance support flexibility 
research aiming developing case handling concepts empirical proof statements 
case handling paradigm solve problems related change 
note structural changes lead problems dynamic change bug 
people flower development team pallas athena insights case handling support respect flower 
specifically paul sharing knowledge case handling 
eric verbeek technical support flower applying case handling concept building processes 
reviewers useful comments 
van der aalst 
application petri nets workflow management 
journal circuits systems computers 
van der aalst 
automatic generation workflow processes product structures 
computers industry 
van der aalst 
dynamic change bug concrete approach support workflow change 
information systems frontiers 
van der aalst ellis wainer 
framework lightweight interacting workflow processes 
international journal cooperative information systems 
van der aalst :10.1.1.21.6771
workflow management product driven case handling 
ellis rodden editors international acm conference supporting group group pages 
acm press new york 
van der aalst desel oberweis editors 
business process management models techniques empirical studies volume lecture notes computer science 
springer verlag berlin 
van der aalst van hee 
workflow management models methods systems 
mit press cambridge ma 
van der aalst ter hofstede kiepuszewski barros 
workflow patterns 
distributed parallel databases 
van der aalst jablonski 
dealing workflow change identification issues solutions 
international journal computer systems science engineering 
van der aalst 
case handling construction 
automation construction 
agostini de michelis 
improving flexibility workflow management systems 
van der aalst desel oberweis editors business process management models techniques empirical studies volume lecture notes computer science pages 
springer verlag berlin 
pallas athena 
case handling flower workflow 
pallas athena bv netherlands 
pallas athena 
flower user manual 
pallas athena bv netherlands 
bpi 
activity manager standard program standard forms version 
workflow management solutions netherlands 
casati ceri pernici pozzi 
workflow evolution 
proceedings er pages germany oct 
dourish edwards howell lamarca lamping petersen salisbury terry thornton 
programming model active documents 
proceedings th annual acm symposium user interface software technology pages 
acm press 
ellis 
evaluation framework collaborative systems 
technical report cu cs university colorado department computer science boulder usa 
ellis gibbs rein 
groupware issues experiences 
communications acm 
ellis keddara 
workflow change workflow 
van der aalst desel oberweis editors business process management models techniques empirical studies volume lecture notes computer science pages 
springer verlag berlin 
ellis keddara rozenberg 
dynamic change workflow systems 
ellis kling mylopoulos kaplan editors proceedings conference organizational computing systems pages milpitas california august 
acm acm press new york 
fischer editor 
workflow handbook workflow management coalition 
strategies lighthouse point florida 
hammer 
reengineering 
nicolas publishing london 
heinrich maurer 
active documents concept implementation applications 
journal universal computer science 
herrmann hoffmann loser 
semistructured models surprisingly useful user centered design 
de michelis dieng editors designing cooperative systems coop pages 
ios press amsterdam 
hull llirbat simon su dong kumar zhou 
declarative workflows support easy modification dynamic browsing 
georgakopoulos prinz wolf editors activities coordination collaboration wacc pages san francisco february 
acm press 
jablonski bussler 
workflow management modeling concepts architecture implementation 
international thomson computer press london uk 

support cooperative electronic circulation folders 
conference office information systems acm special interest group office information systems pages 
acm acm press new york 

groupware workflow workgroup computing 
john wiley sons new york 
klein dellarocas bernstein editors 
proceedings cscw workshop adaptive workflow systems seattle washington november 
klein dellarocas bernstein editors 
adaptive workflow systems volume special issue journal computer supported cooperative 
lawrence editor 
workflow handbook workflow management coalition 
john wiley sons new york 
leymann roller 
production workflow concepts techniques 
prentice hall ptr upper saddle river new jersey usa 
london bridge group 
application developer guide 
london bridge group warwick uk 
london bridge group 
technical architecture 
london bridge group warwick uk 

internet workflow management semantic web volume wiley series parallel distributed computing 
wiley interscience new york 
merz liberman lamersdorf 
mobile agents support interorganizational workflow management 
international journal applied artificial intelligence 
merz liberman lamersdorf 
crossing organisational boundaries mobile agents electronic service markets 
integrated computer aided engineering 
nielsen 
lotus domino workflow sg 
ibm usa 
reichert dadam 
supporting dynamic changes workflow loosing control 
journal intelligent information systems 
van der aalst 
case handling case 
international journal cooperative information systems 

optimal design processes information systems dutch 
december 
weske 
integrated workflow planning coordination 
th international conference database expert systems applications volume lecture notes computer science pages prague czech republic 
springer verlag berlin 
software ley 
cosa activity manager 
software ley gmbh germany 
staffware 
staffware case handler white 
staffware plc uk 
stonebraker 
integration rule systems database systems 
tkde 
strong miller 
exceptions exception handling computerized information processes 
acm transactions information systems 
tibco 
tib inconcert process designer user guide 
tibco software palo alto ca usa 
dignum bos 
implementation cooperative agent architecture language action perspective 
singh 
rao wooldridge editors agent theories architectures languages volume lecture notes computer science pages 
springer verlag berlin 
dignum bos 
implementation cooperative agent architecture language action perspective 
intelligent agents volume lecture notes artificial intelligence pages 
springer verlag berlin 
peter wegner 
interaction powerful algorithms 
communications acm 
weske 
formal foundation conceptual design prototypical implementation workflow management systems 
habilitation thesis university germany 
weske 
formal foundation conceptual design dynamic adaptations workflow management system 
sprague editor proceedings fourth annual hawaii international conference system science hicss 
ieee computer society press los alamitos california 
authors wil van der aalst full professor information systems head information systems department faculty technology management eindhoven university technology 
currently adjunct professor queensland university technology qut working centre information technology innovation citi 
research interests include information systems simulation process mining petri nets process models workflow management systems verification techniques enterprise resource planning systems computer supported cooperative interorganizational business processes 
mathias weske professor computer science chair business process technology research group plattner institute software systems engineering university potsdam 
research interests include workflow management business process management software architectures process oriented information systems service oriented computing software product lines 
member vice chair executive committee gi sig german computer science society special interest group development methods information systems application member ieee acm 
gr senior software engineer flower product developed pallas athena 
master science degree applied mathematics univeristy twente 
working architecture design theoretical foundation implementation workflow case handling systems different companies software industry 

