implementing database replication group communication bettina kemme school computer science mcgill university montreal canada kemme cs mcgill ca proposals exploit rich semantics group communication systems support database replication 
far proposals simulation studies simple prototype implementations 
analyzes missing addressed theoretical practical perspective order build real systems 
years developers group communication systems claimed database replication interesting application multicast primitives 
years research groups closer look claim started analyze group communication primitives support replica control database systems instance :10.1.1.128.9931:10.1.1.56.3906
main ideas proposals ordering guarantees multicast primitives serialize con icting transactions simplify atomic commit protocols reliable uniform reliable multicast 
results published distributed systems conferences far received little attention database conferences 
focus quorum protocols fault tolerance adaptive lazy replication schemes performance scalability :10.1.1.116.1182
wide range research directions ideas way commercial database systems 
commercial solutions highly specialized backup systems choose performance consistency 
practitioners recommend replication strategies systems high update rates experience replication schemes trouble bene bring 
looking low transfer rate research results commercial systems believe group communication systems database replication reality theoretical results proposed far validated development evaluation prototypes small real systems form open source software modules 
simulation results proposed approaches promising prototypes able convince industry usefulness approach :10.1.1.56.3906
research especially challenging requires depth knowledge database systems distributed systems solid background theory systems 
di erent systems combined database group communication systems 
exist alternatives architecture showing di erent degrees interleaving interaction 
realistic solution consider issues related database replication concurrent execution transactions failure handling recovery full support sql standard user transparency 
issues challenging combining real implementation hard 
exist alternatives approaching problem independent middleware replication tool integration replication semantics database system 
rst case replication tool extension corba ee 
second case approach follow lines database internal replication schemes implemented oracle sybase am aware prototype implementations 
postgres integrates replication kernel database system postgresql ensemble spread group communication system 
amir describe middleware replication tool spread postgresql 
postgresql development team interested ideas prototypes distribution 
jim enez peris developed middleware system time ensemble postgresql 
prototypes handle considerable amount issues lack functionality crucial real life systems 
order add functionality theoretical smart strategies translating theoretical solutions practical implementations needed concurrency control total order case con icts possible execute transactions concurrently con ict 
replication implemented middleware middleware provide concurrency control mechanism 
receives sql high level statements client hard determine operations con ict 
consequence amir execute update transactions serially jim enez peris lock entire relations partitions allows restricted parallelism 
replication performed database system things easier 
theoretical research papers proposed various adjustments existing concurrency control protocols order handle replication :10.1.1.56.3906
goes far exploit weaker message ordering mechanisms fifo causal order provide concurrency 
hard transform proposals practical solutions concurrency control module usually heavily depends interacts components database system storage manager access paths bu er manager 
concurrency control simply added independent component database kernel probably specialized solution speci database system 
postgres provides restricted form ne granularity concurrency control discussions postgresql development team shown willingness include simple replication concurrency control postgresql engine long term goal 
transaction model transaction models proposed far restrictions 
amir assume transaction consists single sql statement single stored procedure executed database system 
transactions consist operation operations executed operations depend 
jim postgres overcome problem executing transaction rst locally multicasting changes single message transaction 
keeping track changes performed transaction lead considerable overhead database system er adequate support 
approaches delay write operations include read operations messages send messages operation mechanisms having advantages disadvantages 
opinion middleware solutions live compromises 
contrast implementations database system exibility solving issues 
failure recovery talking people industry clear failure recovery crucial issues 
importantly recon guration process automatic possible interrupt ongoing transaction processing signi cantly 
furthermore replica may transactions 
recovery process take place middleware support database interesting alternatives 
postgres currently copies entire database recovery suboptimal solution 
amir log messages middleware layer 
sites short restarting site receives missed messages state transfer take place 
suggested exible schemes providing optimized state transfer interrupt transaction processing system 
general recon guration issue need analysis 
database system group communication system provide plenty functionality failure handling recovery 
currently working clear interface systems functionality components exploited distributed duplicated 
instance database system performs extensive logging take advantage order avoid logging messages middleware layer 
transparency transparency crucial issue 
main question embed middleware replication tools 
part existing middleware infrastructure corba ee applications developed middleware 
alternatively replication tool put legacy application database system application aware 
issues want mention interesting developments looking wide area replication priorities shift hand weaker exible transaction models acceptable concurrency single site crucial 
hand adaptive failure handling recovery important 
message latency signi cant factor optimistic strategies considered 
looking completely heterogeneous environments systems access restricted access available web interfaces reasonable models developed able handle restrictions provide acceptable guarantees 
summary believe database systems take advantage group communication systems provide better replication mechanisms currently provided commercial systems 
believe research part completed 
main tasks right prove solutions transferred real systems 
furthermore theoretical framework extended adjusted order properly address requirements real environment 
agrawal alonso el abbadi 
exploiting atomic broadcast replicated databases 
euro par conf 
amir amir stanton 
practical wide area database replication 
technical report cnds johns hopkins university 
amir stanton 
spread wide area group communication system 
technical report department computer science john hopkins university cnds 
amir 
total order database replication 
proc 
int 
conf 
distr 
comp 
systems icdcs 
breitbart rastogi seshadri silberschatz 
update propagation protocols replicated databases 
proc 
acm sigmod int 
conf 
management data 
rosenkrantz ravi 
deferred updates data placement distributed databases 
proc 
int 
conf 
data engineering icde pages new orleans louisiana february 
professional java server programming ee edition 
press 

postgresql related projects 
postgresql org project php 
gray neil shasha 
dangers replication solution 
proc 
acm sigmod int 
conf 
management data 
guerraoui 
revisiting relationship non blocking atomic commitment consensus 
proc 
ieee int 
workshop workshop distributed algorithms 
hayden 
ensemble system 
technical report tr cs dept cornell univ jan 

replicated database recovery multicast communications 
proc 
ieee symposium network computing applications nca 
agrawal el abbadi 
performance database replication group communication 
proc 
int 
symp 
fault tolerant computing ftcs 
jim enez peris mart nez kemme alonso 
improving scalability fault tolerant database clusters 
proc 
int 
conf 
distr 
comp 
systems icdcs 
kemme alonso 
don lazy consistent postgres new way implement database replication 
proc 
int 
conf 
large databases vldb 
kemme alonso 
new approach developing implementing eager database replication protocols 
acm transactions database systems 
kemme bartoli babaoglu 
online recon guration replicated databases group communication 
proc 
int 
conf 
dependable systems networks dsn 
pedone 
fast failover protocol shelf commercial databases 
proc 
int 
symp 
reliable distributed systems srds 
pedone guerraoui schiper 
exploiting atomic broadcast replicated databases 
proc 
euro par 
postgresql 

www postgresql com january 
agrawal el abbadi 
broadcast primitives replicated databases 
proc 
int 
conf 
distributed computing systems icdcs 
wool 
quorum systems replicated databases science ction 
bulletin techn 
committee data engineering 

