friendships peer lifespan role protocols consider problem choosing collection known peers distributed systems 
particular explores number protocols considering peers lifespan distribution key attribute yield systems performance characteristics resilient natural instability environments 
article presents results initial efforts focusing currently deployed decentralized systems 
measure observed lifespan peers popular system week propose functional form fits distribution 
consider number protocols distribution trace driven simulator compare alternative protocols decentralized unstructured loosely structured systems 
find simple lifespan protocols reduce ratio connection breakdowns associated costs 
keywords peer peer lifespan pareto distribution protocols empirical study 
peer peer computing defined sharing computer resources services direct exchange participating nodes 
napster area received increasing attention research community general public model advantages recognized 
yi qiao department computer science northwestern university evanston il usa cs northwestern edu purest form model concept server considers participants equals regardless resource capacity connectivity commitment common 
assumption equality enables simple protocols translate loss model appealing attributes 
part problem stems clash equality assumption degree heterogeneity studies current systems 
far equal peers populations shown exhibit significant variations attributes storage bandwidth latency degree sharing 
peers commitment system particular differ orders magnitude 
peers systems typically define overlay network topology keeping number connections peers friends implementing maintenance protocol continuously repairs overlay new members join leave system 
implication degree peer system performance directly related degree peers investment friends 
amount maintenance related messages processed node directly related degree stability node neighboring set 
context content distribution systems degree replication effectiveness caches spread satisfaction level queries affected dynamic peers population ultimately consider problem selecting collection known peers distributed systems 
explores new proto cols considering peers lifespan distribution key attribute yield systems performance characteristics resilient natural instability environments 
article presents results initial efforts focusing currently deployed unstructured loosely structured systems 
measured observed lifespan peers widely deployed system identified functional form fits distribution 
designed number protocols distribution trace driven simulator compare alternative protocols decentralized unstructured loosely structured systems 
protocols simple heuristics prioritize long lived peers selecting peer new friends significantly reduce ratio connection breakdowns associated costs 
remainder article structured follows 
section background review related 
discuss results study peers lifespans section 
sections number examples lifespan taken consideration protocols illustrate benefits trace driven simulation decentralized unstructured loosely structured systems 
summarize results discuss section 
background computing experienced explosive growth years number research oriented protocols available 
goal systems provide general distributed resource sharing participating peers popular applications content distribution 
general set participant nodes system carries system traffic consisting functionality control related messages 
systems precisely protocols implement classified participating nodes reliance centralized servers set degree structure 
protocols adopting centralized architecture napster central server approached ob tain meta information identity peer information stored subsequent communication done directly peers 
order improve query performance reduce control traffic number protocols structured decentralized architectures proposed 
loosely structured protocols location objects controlled degree hierarchy may imposed peers 
highly structured protocols network topology placement resources precisely determined :10.1.1.111.1818:10.1.1.105.3673:10.1.1.28.5987
decentralized unstructured protocols early versions gnutella rely centralized directories enforce precise control network topology object placement resulting systems highly resilient transient nature populations 
unstructured loosely structured protocols nodes join network contacting set peers system contact information may obtained wellknown web site 
connected peers interact exchanging various types messages broadcasted back propagated 
broadcasted messages sent peers sender open connections 
back propagated messages forwarded specific connection reverse path taken associated broadcasted message 
user wishing find resource issues query peer 
queries forwarded peers long alive determined time live field associated query decremented forward 
queries replies types messages include object transfer group membership messages ping pong bye 
pings discover hosts network 
ping messages replied containing information responding peer peer knows 
information neighbor nodes provided creating behalf forwarding ping back propagating replies 
pong messages include contact point peer information resources available 
optional messages report closing connections 
related number studies reporting experimental data collected currently deployed systems :10.1.1.160.7346:10.1.1.13.1523:10.1.1.11.4677
identify mismatch topologies gnutella application level network underlying internet leads ineffective physical networking infrastructure 
relevant authors november total traffic bytes query remaining traffic maintain group membership 
numbers significantly improved modifications protocol indication potential effects instability 
studies looked peers participation systems 
saroiu examine node uptime range attributes reported bandwidth latency degree sharing large degrees heterogeneity peers systems variations orders magnitudes characteristics sampled :10.1.1.160.7346
lifetime study recorded uptime peers hours 
chu results considerably longer experiment weeks smaller number peers ip port pairs focusing node availability object transfer :10.1.1.11.4677
experiments results show serious fluctuations number available nodes highly transient population significant time day effects 
authors high level locality stored transferred objects suggesting caches may significantly reduce network traffic improve user experience 
sen wang analyze traffic collected passively multiple border routers large isp network report similar high level system dynamics 
node availability measurements saroiu chu gathered actively probing previously collected tcp ip addresses peers :10.1.1.160.7346:10.1.1.11.4677
due methodology probes determine node accepting tcp connections requested port distinguishing application connected 
experiments collected lifespan entries half peers avoid potential errors measurements tried set application level connections checking specific packet header gnutella messages 
study availability bhagwan discuss potential effects aliasing modeling host availability 
authors rightly point trying accurately capture availability characteristics hosts ip address aliasing result great overestimation number hosts systems underestimation availability 
comparison authors study aims characterizing lifespan distribution individual sessions peer ip port tuple change 
research partially motivated seminal harchol balter downey process lifetime distribution implications loadbalancing techniques 
authors measured distribution unix processes propose new expectation distribution fits 
finding harchol balter downey new policy preemptive process migration clusters workstations 
consider problem selecting yield systems performance characteristics resilient dynamic nature environment 
bernstein propose machine learning selection peers sources download 
banerjee introduce scalable unicast technique locate nearby peers 
efficiently choosing nearest peers important problem applications overlay multicast content distribution networks selecting similarly near peers proposed lifespan heuristics significantly improve system stability reducing network load 
peer lifespan distribution potential implications high degrees populations performed independent study peers lifespans current widely deployed network intention developing model accurately describes distribution 
remainder section describe methodology discuss findings 
aliasing effects due example dhcp nats sharing host multiple users 
collecting observed peers lifespans actively measure lifespan peers gnutella modified open source gnutella client keep track peer periodically check availability 
monitoring peer maintains hash table initially empty peers seen far 
entry hash table includes fields ip port peer node type leaf ultra peer time birth tob time twf time death tod 
iteration monitoring peer updates existing entries inserts new ones finds new peers 
knows certainty tob previously known peers time live peers included table twf field set current time 
peer considered dead connection attempt fails third try times unexpected response received 
table summarized strategy updating peer lifespan information 
scan current scan action unknown dead unknown alive twf dead dead dead alive tob alive dead tod alive alive table 
strategy updating peer table iteration current time 
described fourth case table italics peer dead previous scan alive current time birth tob set current time 
peer considered dead connection attempt fails unexpected response received 
single monitoring peer scanning table clearly slow resulting coarse granularity lifespan measurements 
avoid evenly distribute peer table hash values peers monitoring peers running hosts 
approach allows achieve sourceforge net default timeout value seconds 
larity seconds minutes scanning entries client 
peer lifespan distribution measured lifespans peers consecutive days march st th 
account fact sessions may active inactive times longer sampling duration resort create method divide captured trace halves report lifespans sessions started half 
session ended second half obtain lifespan subtracting starting time time session active trace get lower bound lifespan larger half trace length days 
method provides accurate information distribution lifespans sessions shorter half trace percentage sessions longer 
addition due granularity measurement give lifespan distribution sessions longer seconds 
presents reverse cumulative distribution function peers observed lifespans shorter days longer seconds 
lifespan distribution normal axes log log scale 
distribution loglog scale plot approximated straight line indicating peer lifespan distribution modeled pareto distribution form 
precisely probability session exceeding seconds value higher verifies high goodness fit model 
contrast exponential curve fails model observed data value 
pareto distribution belongs class distributions 
context means expected remaining lifetime peer directly proportional current age older peer longer expect remain system 
remainder article introduce number protocols take advantage observation 
set protocols meant exhaustive illustrate potential advantages proposed approach 
probability peer lifespans power fit 
fit duration secs 
normal plot 
probability peer lifespans log log scale duration secs 
log log plot 
power fit 
distribution lifetimes current system gnutella period days 
additional lines subfigure show attempts fit curve data pareto distribution exponential curve 
subfigure shows distribution log log scale straight line log log space indicates distribution modeled constant zero proportional slope line 
peer lifespan protocols protocols instances peers need choose acquaintances deciding needing respond third party request 
gnutella protocols group contacted connection requests second included pong replies ping messages 
peers normally keep number peers close friends accepting upper bounded number incoming connections trying maintain lower bounded number outgoing ones 
cope dynamic changes user population systems implement kind maintenance protocol continuously repairs overlay nodes join leave network 
nodes joining network number control messages know arrival 
departure node noticed neighbors periodic monitoring 
clear amount control messages processed node direct relation degree stability neighboring set 
implications peers system performance directly related degree investment peers place friends 
context content distribution networks degree replication effectiveness caches spread hit ratio queries affected dynamic peers population ends 
surprisingly find peers protocols hardly selective choosing friends consistent pure model assumption peers widely strategy select choose acquaintances recommend just random 
basic idea proposed protocols dynamically increase system degree dependency node node commitment community clear 
way achieving give preference peers longer expected lives 
nature peers observed lifespan distribution section fair estimate peer remaining lifetime derived current age 
rest section describes protocols 
table highlights main aspects 
approach seen incentive system long standing members peer population higher degree connectivity new 
lifespan friend selection simple protocol heuristic lspan takes peers observed lifespans consideration deciding open connection 
peers piggy back birth time ping messages propagate peers birth times replies 
peer needs open new connection departure friend example simply selects oldest known peer new partner 
notice selection process incorporates degree randomness 
peer chooses oldest peer knows group random set recommendations forwarded peers network 
lifespan friend selection recommendation selective scheme lspan uses lifespan opportunities selecting connect generating response third party request 
perspective peer trying open new connection insures set potential friends long lived peers 
protocols introduced far blindly favor older peers naturally result increase number connection attempts 
actual number incoming connections peer accept typically bounded maximum number incoming connections protocol considers estimated number available incoming connections peer selecting connect 
available connection consideration lspan uses weighted credit selection scheme incorporates criteria peer current age estimated number available incoming connections 
estimated number available incoming connections difference optimal current number 
optimal number incoming connections upper bounded value recommendations obtained ping pong mes sage exchange described 
point time lies half maximum number incoming connections depending peer age older larger optimal incoming connection number 
deployed systems expect find positive correlation lifespan peer maximum number connections peers modem support limited connections tend remain online short times peers connections larger maximum connections stay active days 
correspondingly number maximum connections allowed peer protocols related peer current lifespan 
experiments number ranged average value 
protocol connect 
recommend 
lspan oldest random lspan oldest oldest lspan oldest random avail 
table 
lifespan protocols different strategies select acquaintances peer ones recommend 
section presents evaluation results protocols compares alternative ones rely lifespan information 
evaluation explore role peers lifespan distribution protocols implemented trace driven simulator systems 
subset collected trace data evaluate proposed protocols compare completeness evaluated performance protocols node capacity distribution model suggested chawathe node belongs capacity levels maximum connection number directly proportional level 
nodes capacities assigned arbitrarily correlation nodes lifespans 
results available request comparable included article 
represent decentralized unstructured loosely structured systems 
remainder section describes experimental setup different strategies evaluated 
results showing systems resilient transient nature environments possible simple heuristics prioritize long lived peers selecting new friends experimental setup trace driven event simulator systems consists lines commented code implementing membership management related messages 
currently extending include different protocols object searching replication 
ran simulation cluster linux pcs traces collected total simulation period seconds days capturing lifespan peers 
simulation starts cold peer 
number peers system increases day stabilizes remaining time varying point 
results reported section exclude warm period sec 
strategies evaluate different protocols lifespan distribution compare decentralized protocols currently systems 
lifespan protocols introduced section remainder subsection describes alternative protocols 
alternative protocols comparison closely gnutella kazaa protocols unstructured decentralized protocol udp improved version gnutella hybrid decentralized protocol hdp modeled hybrid protocols rely ultra super peers kazaa gnutella 
heavily rely specifications available rfcs 
specifications vague unavailable resort understanding open source clients currently publically available documents 
simulations remainder traces yield similar results 
udp hdp utilize separate pools cached pool connection 
receiving ping message protocols randomly choose specified number pong entries caches currently respond request 
hdp distinguishes leaf peers ultrapeers ultra peers connect peer ultra leaf leaf peers connect ultrapeers 
scheme basically creates level hierarchy participating nodes powerful faster ultra peers take load slower ones 
experiments mark peer leaf ultra peer indicated trace information 
comparison indicator effect protocol system stability ratio connection breakdowns number effective connections 
figures shows ratio protocols discussed associated table presents basic statistics including average standard deviation 
observed lifespan protocols yield lower ratios connection breakdowns random protocols udp hdp natural result property peers lifespan distribution protocols preference older peers 
selective lifespan protocol lspan naturally gives lowest ratio connection breakdowns time reductions comparison udp hdp 
lspan lspan yield comparative savings contrast udp ratio connection breakdowns system associated costs 
show closely related connection breakdowns peer time 
graphs show clear sawtooth shape resulting time day patterns gnutella originated traces observed studies peer peer systems 
time day patterns especially interesting considers expected independence gnutella logical topology geographic location :10.1.1.11.4677
expected lifespan protocols preference long lived peers lead higher numbers connection requests nodes connection breakdown ratio udp hdp lspan lspan lspan simulation time second connection breakdown ratio main statistics protocol udp hdp lspan lspan lspan values min max 
ratio connection breakdowns number effective connections time aggregated sec 
associated table shows basic statistics including average standard deviation minimum maximum observed values 
connection breakdowns peer udp hdp lspan lspan lspan simulation time second protocol udp hdp lspan lspan lspan avg std avg std min max connection breakdowns peer main statistics 
connection breakdowns peer time aggregated sec 
associated table shows basic statistics including average standard deviation minimum maximum observed values 
consequently higher number connection rejections 
higher rejection number may seen reasonable price pay longer lasting friend ships cost comparatively important peers increase degree investment friends 
selective protocol connection rejections peer lspan udp hdp lspan lspan lspan simulation time second connection rejections peer main statistics protocol udp hdp lspan lspan lspan avg std min max 
connection rejections peer time aggregated sec 
associated table shows basic statistics including average standard deviation minimum maximum observed values 
connections peer lspan lspan udp udp hdp lspan lspan lspan simulation time second hdp connections peer main statistics protocol lspan lspan lspan avg std min max udp values 
connections peer time aggregated sec 
associated table shows basic statistics including average standard deviation minimum maximum observed values 
lspan high rejection number rejection number lspan lspan higher udp hdp low ignored 
associated table statistics example see average connection rejection number peer lspan seconds 
number drops lspan meaning average peer face connection rejection hours 
interesting note number actual connections peer directly follow number rejections experienced 
protocols result higher minor rejection numbers udp hdp lspan lspan higher ratios connections peer udp hdp 
recall lspan lspan select long lasting peers random set candidates case lspan knowledge candidate peers available incoming connections 
explain high connection numbers resulting long lasting connections compared udp hdp low rejection numbers contrast lspan 
trace driven simulation results illustrate potential advantages considering peers observed lifespan distributions key system attribute design protocols 
independent measurements peer lifespan current system developed functional form fits distribution 
distribution basis number illustrative protocols compare alternative ones decentralized unstructured loosely structured systems 
find simple lifespan protocols achieve reductions ratio connection breakdowns associated costs 
currently exploring effect protocols different query caching algorithms systems 
decentralized unstructured protocols yield resilient systems naive implementations query mechanisms systems shown scale poorly 
part investigating benefits higher resilience lifespan systems hit rates response times scalable search mechanisms 
similarly potentially highly beneficial effectiveness caching systems directly connected lifespan caching peer 
started experiment similar ideas context highly structured protocols 
acknowledgments northwestern university information technology group computing support group department computer science particular roger scott hoover geoffrey pagel aid understanding obtaining trace data experiments 
grateful peter dinda stimulating conversations stefan anonymous reviewers helpful comments early drafts article 
adar huberman 
free riding gnutella 
monday september 
banerjee bhattacharjee 
scalable peer finding internet 
proc 
globecom taipei taiwan november 
bernstein feng levine zilberstein 
adaptive peer selection 
proc 
nd iptps berkeley ca usa february 
bhagwan savage voelker 
understanding availability 
proc 
nd iptps berkeley ca usa february 
chawathe ratnasamy breslau shenker 
making gnutella systems scalable 
proc 
sigcomm karlsruhe germany august 
chu levine :10.1.1.11.4677
availability locality measurements peer peer file systems 
proc 
july 
clarke sandberg wiley hong 
freenet distributed anonymous information storage retrieval system 
proc 
icsi workshop design issues anonymity unobservability pages berkeley ca usa july 
clip 
gnutella protocol specification 
rfc gnutella rfc 
entropia www entropia com 

networks www groove net 

harchol balter downey 
process lifetime distribution dynamic load balancing 
acm transactions computer systems august 
iyer rowstron druschel 
squirrel decentralized peer peer web cache 
proc 
acm podc monterey ca usa july 
kazaa 
www kazaa com 


gnutella 
rfc gnutella rfc june 
lv cao cohen li shenker 
search replication unstructured peer peer networks 
proc 
ics new york ny june 
markatos 
tracing large scale peer peer system hour life gnutella 
proc 
cc grid berlin germany may 
napster 
www napster com 

overnet 
www overnet com 

ratnasamy francis handley karp shenker 
scalable content addressable network 
proc 
sigcomm pages san diego ca usa august 
ripeanu foster iamnitchi 
mapping gnutella network properties large scale peerto peer systems implications system design 
ieee internet computing journal january february 
roselli lorch anderson 
comparison file systems workloads 
proc 
usenix annual technical conference san diego ca june 
rowstron druschel 
pastry scalable distributed object location routing large scale peer peer systems 
proc 
ifip acm middleware heidelberg germany november 
saroiu gummadi dunn gribble levy 
analysis internet content delivery systems 
boston ma usa december 
saroiu gummadi gribble 
measurement study peer peer file sharing systems 
proc 
multimedia computing networking san jose ca usa january 
sen wang 
analyzing peer peer traffic large networks 
acm sigcomm internet measurement workshop marseille france november 
seti home 
ssl berkeley edu 


ultrapeers step gnutella scalability 
working draft lime wire llc december 
sripanidkulchai 
popularity gnutella queries implications scalability 
reilly www openp com february 
stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
proc 
sigcomm pages san diego ca usa august 
zhao kubiatowicz joseph 
tapestry infrastructure fault tolerant widearea location routing 
technical report ucv csd computer science division university california berkeley ca usa april 
