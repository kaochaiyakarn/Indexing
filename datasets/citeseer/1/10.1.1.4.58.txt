cooperative planning algorithm improve performance web domains david camacho ricardo jos molina daniel borrajo computer science department universidad carlos iii de madrid madrid spain fax mail molina ia uc es inf uc es mapweb multiagent framework integrates planning agents web information retrieval agents 
goal framework deal problems require planning information gathered web 
flexibility efficiency reasons mapweb decouples planning information gathering splitting planning problem parts solving problem validating completing solutions means information gathering 
focus planning process order improve efficiency 
ways improving efficiency mapweb planning algorithm accelerating planning process storing previously solved planning problems 
issue achieved designing cooperative planning algorithm allows set planning agents share plans cooperate planning gain efficiency 
second issue currently designed developed allow planning agents reuse acquired knowledge 
presents experimental evaluation cooperative planning process planning agents 
keywords multi agent systems intelligent software agents distributed planning cooperative planning 
years lot web information gathering artificial intelligence ai techniques 
ai information gathering intends integrate set different information sources aim querying single information source 
different kinds systems named mediators developed integrate information multiple distributed heterogeneous information sources database systems knowledge bases electronic repositories 
example sims architecture 
order systems practical able optimize query process selecting appropriate web sources ordering queries 
purpose different algorithms paradigms developed 
instance planning rewriting pbr builds queries planning techniques 
uses constrained network guide query process 
related examples information gathering systems ariadne 
previous approaches planning techniques select appropriate web sources order queries answer generic user queries 
planning tool selecting sequencing queries 
previous mapweb information gathering system uses planning different purpose preliminary 
mapweb uses planning deciding appropriate generic sources query solving planning problems 
instance travel planning assistant domain tourism user needs find plan travel places plan defines steps user perform information sources accessed 
step plan go plane system provides user information airplane companies consulted information 
domain similar travel planning assistant built framework 
constrained network kind plan schema needs reprogrammed planning domain changes 
mapweb flexible planning techniques automatically generate plans domain definition changes 
planning hard task mapweb decouples processes creating plans accessing web instantiating appropriate web sources 
time saved generating plans time consuming querying web guided domain dependent heuristics 
problem large problems complex 
ways improving mapweb efficiency planning process web access process 
focus describes cooperative planning algorithm reasoning agents mapweb solve user problems 
planning decompose problems domain dependent methods distributing different agents planning skills 
experiments carried measure increase performance analyze cases improvement obtained 
structured follows 
section ii describes architecture mapweb multi agent framework test proposed algorithm 
section iii describes cooperative planning algorithm planner agents mapweb 
section iv domain modified version logistics domain 
shows experimental evaluation multiagent configurations tested 
sections vi summarize lines 
ii 
mapweb architecture section describes kind agents involved mapweb 
main goal agent society solve problems ai classical techniques data retrieved web 
multi agent society described agents skills find different solutions problem 
second cooperative planning algorithm integrate classical planning web retrieved information described section iii 
mapweb structured layers purpose isolate user details problem solving web information retrieval 
specifically considered layers users web interface user agents pay attention users queries reasoning agents includes set planning agents web access information agents specialized retrieving information 
layer agent architecture seen 
user problem solutions problem solutions user user agent task request information integration information user agent task request information integration information planner agent planner agent problem user planner task solutions interface reasoning agents agents information request specific information webagent webagent webagent webagent webagent query processing query processing query processing information gathering agents fig 

mapweb layer architecture 
mapweb deploys architecture set heterogeneous agents 
types agents described pay attention user queries display solution system users 
useragent receives problem queries users sends answer back plans useragent provides solutions user 
agent allows user change behaviour multi agent system modifying parameters time response system number desired solutions 
receive user query build representation solve means planning 
fill information details querying webagents 
planner prodigy 
webagents main goal fill details plans obtained 
obtain information web wrapper approach 
agents cooperate follows section iii provide detailed description process 
user interacts useragent input query 
case tourism application query captures information departure return dates cities way return trip maximum number transfers preference criteria 
information sent planneragent transforms planning problem 
planning problem retains parts essential planning process named representation user query 
specific information provided user representation problem planneragent tries divide problem subproblems search solutions planning skills cooperation society 
planning skill includes modules non linear planner generates solutions user query 
planning operators solutions require completed validated actual information retrieved web 
planneragent sends information queries specialized webagents return records information query 
module allows cooperation agents society especially request solving subproblems planning skills webagents request specific information complete solutions 
solutions subproblems planneragent initially received problem integrates validates solutions returns useragent turn displays user 
mapweb agents subset kqml speech acts communication language coordinate cooperate agents 
implemented performatives standard built solve different problems detected multi agent architecture 
tables ii show subset kqml standard adapted performatives mapweb 
name meaning achieve wants achieve insert asks add contents tell sentence table subset standard kqml mapweb agents 
tables represent sender receiver agents involved communication process represent virtual knowledge base agent manages model environment 
performatives different agents implement processes name meaning request info asks information tell info answers information finish information table ii adapted mapweb agents 
achieve tell different agent require execution task answer obtained results 
request info tell info finish agents implement protocol allows send desired information steps 
iii 
cooperative planning algorithm possible mapweb agents configuration created cooperation process allows achieve goals minimize computational effort solving process task obtain better faster solutions acquired experience agents system 
section shows achieves goals planning algorithm case techniques 
algorithm divided main processes 
search retrieval adaptation old cases solutions stored 
solutions complete part solution 

solving process planning skills global problem subproblems solution case base 
process needs set subprocesses allow cooperation webagents search web necessary information complete solutions 

integration different partial solutions generate set solutions requested problem 
shows information flow planneragent tasks 
processes planneragent receives query agent system 
flow described 
planneragent receives problem agent system 

planneragent search appropriate plans plan base 
finds solution problem request send solutions answer 

planneragent find solution search solutions similar problems subsequently adapted tested validity 

agent solution ask help agents system 
agents system cooperate knowledge search solution sent planneragent required 

valid solution obtained agents agent problem solving skills 

solutions integrated sent agent requested 
algorithm uses acquired knowledge old successful plans improve solving process 
knowledge sources solving process plan base 
planneragent learn previous experience problem solving 
store complete plans plans details 

planneragent stored information plan base carry tasks ask help 
agents plan bases planning skills 
avoids planning workload carried single planneragent 
prodigy 
solution means agent planning skills 
webagents 
plans ready specific information complete validate appropriate webagents asked perform task 
solving process described describe plan bases planner agents 
plan base planneragent learning experience 
allows store complete plans plans 
planner agents search old plans solve new problems avoid spending time planning 
extreme planneragent retrieve complete plans cooperation agents webagents necessary 
planneragent stores successful plan creates indices represent 
called goal index represent specific information associated plan stored 
second called goal index allows represent plan includes previous information 
indices built follows 
problem solved goals problem associated key identifies introduced plan base 
shows successful plans stored plan base 
operators instantiated specific information records shared different plans 
plan stored characterised sequence operators associated records 
shown plan plan share specific information retrieved webagents 
representation allows store plans tables facilitate retrieval complete plans parts specific plan 
instance consider goal problem travel madrid barcelona plane book room nights 
indices built parameters airplane mad bcn hotel bcn contain specific information goals fulfill mad bcn represent madrid barcelona respectively 
table iii shows representation indices set plans stored planneragent 
set plans subplans solve subproblem records obtained planneragent useragent plans problem retrieve retain revise planner agent cbp case base adapt skill planning prodigy integration information cooperation agents answers fig 

information flow planneragent receives problem request agent system 
operator operator operator plan goal index plan goal index record record record record record record operator operator operator plan goal index plan goal index record record record record fig 

relationship specific information stored plans plan base 
goal index goal index travel city city book hotel room city airplane mad bcn hotel bcn travel city city travel city city book hotel room city airplane mad vlc airplane vlc bcn hotel bcn travel city city travel city city book hotel room city airplane mad alc airplane alc bcn hotel bcn 
travel city city book hotel room city travel city city airplane jfk mad hotel mad airplane mad bcn book hotel room city travel city city hotel bcn airplane bcn jfk travel city city book hotel room city travel city city airplane jfk mad hotel mad airplane mad vlc travel city city book hotel room city travel city city airplane vlc bcn hotel bcn airplane bcn jfk 
necessary generate set global solutions define answer returned agent 
problem stages specific solutions obtained 
stage solution labelled unsolved 
order generate global solutions algorithm 
queried agents answered operators plan sequence fully instantiated selected 
operator associated non repeated records 

instantiated operator associated related stage 
stages operators completely instantiated considered correct 

plans stages correct considered correct 
iv 
experimental evaluation section evaluates empirically previous cooperative planning algorithm 
experiments measure table iii keys indices store instantiated plans 
possible reduce planning complexity problem dividing distributing load agents 
different webagents retrieve heterogeneous information different configurations topologies mapweb tested 
topology planneragent planning problems achieved 
second topology cooperation possible 
table iv shows number specific webagents employed build different topologies 
set problems posed topology 
travel problems different legs travel need planning specific information execute completely trip 
table shows description test problems evaluate planneragent planning 
problems increasing complexity due number legs travel legs 
topology cooperation webagents airlines amadeus flights amadeus hotels amadeus airlines amadeus flights amadeus hotels amadeus table iv specialized agents mapweb experimental evaluation cooperative distributed planning algorithm 
leg leg leg leg leg op trip op book room madrid paris paris op trip op book room london paris paris op trip op book room op trip valencia new york op trip op rent car op trip new york york new york op trip op trip op trip madrid paulo paulo madrid op trip op rent car op book room op trip valencia boston boston boston boston lisboa op trip op book room op trip op rent car milan berlin berlin berlin op trip op book room op trip op trip madrid valencia valencia valencia barcelona barcelona madrid op trip op book room op trip op book room op trip madrid barcelona barcelona barcelona paris par paris madrid op trip op trip op book room op trip op trip madrid barcelona barcelona milan milan milan paris paris madrid table problems evaluate distributed planning algorithm mapweb 
different features measured obtain behaviour algorithm 
features summarized independent variables 
test problems legs involve travel cities 
leg performed number possible transfers intermediate cities travelling origin destination cities 
experiments number transfers considered transfers transfer 
dependent variables 
measured number solutions mapweb number final plans planneragent validates np dev percentage legs distributed different agents time spent solve problem multi agent topology tresp 
tables vi vii show experimental results requested problems 
tables display empirical evaluation topologies described table iv problems transfers transfer allowed 
columns tables show number experiment number legs travel 
columns show dependent variables number instantiated solutions number solved problems time answer topology topology topology 
column shows time saving topologies compared 
discussion tables vi vii analyzed concluded workload distributed problem solving time reduced 
factors influence workload planning process distributed reduces planning time 
query generation process distributed reduces web access time 
time reduction depends complexity problem number stages 
stages complexity stage small gain small 
fact cases overload due agent communication process larger gains due parallelization total gain negative 
instance gain transfers stages problems sent system negotiation required distribute workload takes longer actual savings obtained parallelization 
system solves harder problems distribution increases gain time answer 
vi 
summarize main lines follows 
far webagents airplane hotels rental car companies 
mapweb suited integrating information coming prob 
legs np dev legs shared tresp min 
time saving table vi number solutions number solved problems time response mapweb travel problems heterogeneous legs transfers travel legs 
prob 
legs np dev legs shared tresp min 
time saving table vii number solutions number solved problems time answer mapweb travel problems heterogeneous legs transfer travel legs 
heterogeneous web sites taxi bus trains 
plan integrate kind sources new solutions achieved usually obtained traditional travel web applications 

reuse information stored webagents agents learn experience reuse information retrieved previously reduce web access 
vii 
research reported carried part research project funded cicyt tap 
jos ambite craig knoblock planning rewriting efficiently generating high quality plans proceedings fourteenth national conference artificial intelligence 
ralph bergmann dynamic planning domain specific search internet workshop und 
craig knoblock steven minton ariadne approach web information integration ieee intelligent systems vol 
september october 
craig knoblock steve minton jos luis ambite maria muslea jean oh martin frank multi source information assistants tenth international world wide web conference www 
acm may 
eric lambrecht kambhampati planning information gathering tutorial survey tech 
rep arizona state university may asu cse report 
jose luis ambite craig knoblock flexible scalable query planning distributed heterogeneous environments proceedings fourth international conference artificial intelligence planning systems 
aaai pittsburgh pennsylvania 
david camacho daniel borrajo jos manuel molina ricardo flexible integration planning information gathering proceedings european conference planning ecp toledo spain september springer verlag 
series lnai 
david camacho daniel borrajo jose manuel molina intelligent travel planning multiagent planning system solve web problems tourism domain international journal autonomous agents multiagent systems vol 
pp 
december 
manuela veloso planning learning analogical reasoning springer verlag december 
veloso carbonell perez borrajo fink blythe integrating planning learning prodigy architecture journal experimental theoretical ai vol 
pp 

tim finin fritzson mackay kqml agent communication language proceedings third international conference information knowledge management cikm gaithersburg maryland new york association computing machinery pp 
acm press 

