slang language defining service level agreements davide james wolfgang emmerich department computer science university college london gower street london wc bt uk application web services increasingly organisational boundaries 
new services introduced network storage level 
languages specify interfaces services researched transferred industrial practice 
investigate quality service qos highlight qos provision multiple facets requires complex agreements network services storage services middleware services 
introduce slang language defining service level agreements slas accommodates needs 
illustrate slang specify qos case study uses web services specification support processing images multiple domains evaluate language 
term electronic business business refers execution transactions commercial significance distributed computing context involving organisation clients partners 
business impeded technical integration barriers 
standardisation processes begun catch commercial development functional integration enabled forces standardisation component middleware architectures standardisation communication protocols particularly internet communication protocols data formats 
technologies complementary employed client server situation termed application service provision asp web service partly funded eu ist project kodak 
emmerich cs ucl ac uk provision underlying transport protocol 
functional integration may include provisioning infrastructure organisation case internet service provisioning isp storage service provisioning ssp application hosting 
provisioning relies standardized established architectures technologies 
unfortunately combining functionality requirement business integration 
non functional quality requirements met 
businesses initially meet negotiate terms collaboration confidence services purchase meet requirements turn meet client expectations 
efforts establish business business marketplaces application services traded review section 
stands context efforts addresses need description negotiation qos properties 
novel contribution model inter organisational service provision storage network middleware application level section 
model provides basis definition slang language section 
slas capture mutual responsibilities provider service client respect non functional properties 
slang meets multiple objectives provides format negotiation qos properties means capture properties unambiguously inclusion contractual agreements language appropriate input automated reasoning systems qos aware adaptive middleware 
tried expressiveness slang case study supports implementation web services image processing section 
section critically evaluates slang section summarise contributions discuss directions research 
contracts agreements private process public collaborative process qos definition endpoint description service description security ebxml cpa ebxml ebxml cpp wscl wsdl slang bpel slang 
business automation standards related large number industry standards emerged support construction distributed systems web services distributed component technologies java enterprise edition corba component model 
include wsdl soap defining interfaces web services bpel define business processes ebxml define electronic business transactions 
shows overview standards language slang service level agreements complements 
slang goes provides descriptions quality application level contractual agreements necessary different iso osi layers deployment spread multiple organizations 
iso odp trading function various incarnations example corba trading service provide quality service definition 
traders define qos single level abstraction 
conversely allow appropriate qos definitions different levels abstraction including network level middleware level application level 
significant research qos management networks carried project 
specifies implements set service definition traffic engineering tools obtain quantitative qos guarantees network layer careful planning dimensioning dynamic control scalable simple qualitative traffic management techniques internet differentiated services 
service level specification proposal submitted internet engineering task force ietf starting points assume sls expressed parameters proposed slas regarding networking services 
ietf developing protocols mechanisms negotiating monitoring enforcing ensure network cope contracted 
efforts ietf socket level includes communication resources distributed object level includes communications processing storage resources 
address qos issues higher levels abstraction 
qos aware middleware related done quality objects quo group 
quo framework providing qos network centric distributed applications ranging embedded applications wide area network applications 
quo bridges gap socket level qos specified researched provided number organizations distributed object level commonly write distributed systems 
quo merit having raised level abstraction qos specification sufficient allow provision qos services diversity distributed heterogeneous environments 
hierarchical qos markup language xml specification language addresses issue 
enhances distributed applications world wide web qos capability 
allows specification kinds application specific qos policies requirements 
static mapping application resource level qos parameters performed qos compiler 
believe feasible define qos just considering technical domain networking middleware asp applications 
slas far largely ignored component execution middleware general 
model approach assume components assembly distributed applications web services assume component oriented middleware 
particular concentrate specific state art application server technologies ee corba component model 
course distributed system captured way 
example streaming systems vic video conferencing tool rat robust audio tool ex vic video conferencing application developed network research group lawrence berkeley national laboratory collaboration university california berkeley 
robust audio tool open source audio conferencing streaming application ucl network multimedia research group assumption 
class addressed component middleware extremely important application server technologies extensively employed business host components provide web services 
associate qos targets performance availability reliability identifiable application service provider asp architectural elements estimation qos parameters informed structure application deployment 
key point qos semantics language refer asp model 
defined diverse domains performance properties 
example throughput database server throughput component container server quite different concepts defined terms query response time varying number active connections terms roundtrip method invocations second 
contribute qos able control separately different way composing results 
similarly qos syntax different depending domain 
performance application web service mean completion time service sec mean peak period latency sec successfully completed transactions application hosting server network facilities important parameters include delay ms jitter ms packet loss bandwidth mbyte sec 
ultimately qos properties dependent level abstraction system described 
service provision model depicts model distributed component architecture 
nodes model architectural components 
edges depict opportunities service level agreements parties 
applications clients components web services deliver user services 
web services may implemented invoking components 
components provide abstraction underlying resources enriching functionalities middleware support 
containers host component instances responsible managing underlying resource services communication persistence transactions security forth providing components 
order services qos enabled containers need support qos negotiation establishment monitoring 
container entities depicted immediately component entities 
business scenario university college london 
application tier middle tier underlying resources appl 
appl 
ws ws web server components container network storage 
service provision model role containers provided called host parties application components 
underlying resource tier includes network storage service providers 
asp interact storage service providers ssp internet service providers isp contract specific agreements provision services related quality 
vertical horizontal slas architecture facilitates definition different levels abstraction compiling slas 
addition differentiation adopt important sla classification horizontal slas govern interaction coordinated peers vertical slas subordinated pairs service provision architecture stack 
intuitively represented horizontal vertical arcs 
horizontal slas contracted different parties providing kind service 
example container providers collaborate replicating components 
vertical slas regulate support parties get underlying infrastructure 
example container provider define agreement isp network services 
resulting types sla differ terms expressiveness slang defines separately 
crossing organisational boundaries slang model structured handle possible combination business interactions 
obviously organisational boundaries include box resulting diverse roles included single competence domain 
competence domain non empty set abstractions representing business party particular ebusiness collaborative process 
party sign sla contracts parties providing competence domains 
prevents business party represented competence domains different business agreements providing flexibility business business interaction 
sla definition language slang service level agreement arrangement customer provider describing technical characteristics service including qos requirements related set metrics provision requirements measured 
section analyse structure slang language 
main requirements mind developing parameterisation sla includes set parameters values quantitatively describe service 
tier actors specific set parameters particular kind sla provides qualitative description service 
compositionality service result cooperation different domain entities 
sla language enable composition 
validation initiating sla contractors able validate check syntax consistency verified result composition 
monitoring ideally parties able automatically monitor extent service levels set forth agreement provided providers 
enforcement service levels agreed network routers database management systems middleware web servers extended enforce service levels automated manner techniques caching replication clustering farming 
slang syntax defined xml schema 
schemas favours integration existing service description languages 
example slang combined wsdl bpel defined xml schemas obtain complete business automation solution see 
content sla varies depending service offered incorporates elements attributes required particular negotiation 
general includes point description contractors information customer provider location facilities contractual statements start date duration agreement charging clauses service level specification sls technical qos description associated metrics 
kinds sla slang defines different types sla 
regulate possible agreements different types parties identified model application web service component container storage network 
vertical horizontal slas contracted pairs 
vertical slas application applications web services components 
hosting container component providers 
persistence container provider ssp 
communication container network providers 
horizontal slas service component web service providers container container providers networking network providers responsibilities common characteristic sla definition relationship responsibility client server including technical annex 
business customer business interaction service provision involved consequently charges benefits parties clearly stated 
overlap slang termed mutual responsibilities 
kind sla general structure defined including responsibilities client service client responsibilities service provider server mutual responsibilities mutual complied 
represented just example hosting sla pattern shown subdivision anyway repeated kind sla 
set elements completed id define service sla identifications alphanumeric values purpose 

responsibilities server hosting sla sla specific parameters responsibilities expressed terms point contractual sls parameters specific type sla 
parameters leaves logical tree representation slang schema 
shows example responsibilities service provider server hosting sla 
analogous list sla parameters provided client mutual responsibilities included reasons space 
analogous pattern repeated kind sla 
give idea dimensions slang schema full detail reported 
set parameters depicted application layer device directory layer service layer kiosk app services directory find desktop app register publish web app fulfillment storage sharing access access access retail counter app bind soap fulfillment storage locator identification 
architecture app order management credit represented simple type elements boxes mark top left corner complex type elements 
specified terms element specific set attributes 
example performance attributes mean response time milliseconds mean processing speed megabytes second peak time latency milliseconds percentage transactions completed performance level 
section example sla written slang case study common picture exchange environment initiative develop internet digital photo services 
architecture links digital devices internet storage printing retail photo finishing 
takes advantage web services technologies soap wsdl uddi supports large number scenarios imaging applications distributed number parties 
shown architecture enables service providers define develop publish services application providers look services implement interactions 
typical uses enabling print services home uploading photos kiosk connecting digital camera ordering prints particular retailer 
scenarios put place collaborations need regulated slas organisational boundaries crossed 
international imaging industry association setting standards digital imaging markets 
app photo point web application directory online ws app storage access retail application ws ws storage storage fulfillment ws storage storage fridge com aol asp credit go com visa 
picture access printing possible scenario presents scenarios analysed detail 
model notation refer section 
slas represented arcs connecting entities bullet placed server entity side 
entities differentiated architectural role stated identifier mark box 
competence domains delimited dashed line polygons 
competence domain contains abstractions responsible sla 
relationships entities competence domain represented dotted line 
legal value help process internal modeling external sla offering 
case study scenario intends show choosing business partner choosing best service level offer 
online application suite intended print shops 
retailer connect customers connect storage service 
way customers store images eventually retrieve print shop 
photo point web application lets users discover services finds online dir 
online looks suitable storage service memories ensures availability rate incremental backup interval hours 
stated service sla 
memories relies fridge com ssp guaranteed mean query response time ms ttr time repair hour 
persistence sla stipulated 
payments web service provided visa authorizes credit card transactions 
visa guarantees transaction success rate offers monitoring report frequency hours 
directory replication asp go com represented 
hosting sla 
ejb round trip method invocation second ms availability rate isp xml version encoding utf slang xmlns xsi www org xmlschema instance xsi dave slang slang xsd vertical hosting id sls id service id replication client name dir name place los angeles place clients mean number maximum number arrival rate availability availability client server name go com name place london place provision disk space memory usage high availability high availability maintenance recovery time scheduled outages routine performance response time peak time latency successful transactions processing speed cluster throughput containers active clients method invocation security data protection true encryption method rsa certificate true user authentication true intrusion detection false eavesdrop prevention false backup solution complete backup interval incremental backup interval data types user configuration data archiving form rar client access true backup encryption false individual client backup true monitoring tracking system idx system report method xml report frequency reporting demand false server mutual service schedule start failure clauses compensation availability exclusion clauses client caused outages mutual hosting vertical slang 
hosting sla component provider asp determined sla 
business relationship isp aol shown 
aol offers mbps bandwidth packet loss 
sla aol fridge com communication sla 
sla scenario presenting case study scenario discussed performance parameters offered service providers 
cited sla ones considered decisive choosing certain provider 
section full sla sketched shown convey expressiveness slang 
evaluation industrial case study convinced slang expressive represent qos parameters required complete definition interfaces multi party deployments 
achieved exploiting different abstractions identified model parameters necessary interfaces 
note slas different tiers precise having conducted case study state slang meets requirements outlined earlier 
note slang allows fairly concise sla specifications 
service level agreement case study longer kbytes 
note fact slas determined xml language turned number advantages 
tools xml spy eclipse available edit validate slas language specification 
easily translate slas representations xslt style sheets 
able transform slas readable format suitable inclusion service contract 
likewise slas transformed xslt style sheets deployment descriptors web servers application servers 
conducting case study noted necessary definition semantics slang 
right semantics defined informally turned weakness 
necessary underpin definitions latency throughput sla parameters formal semantic model 
slang specify tier specific horizontal vertical slas service users providers 
easily extensible increase expressiveness combinable business automation technologies 
allows engineers integrate specification non functional features service levels contracts independent parties functional design distributed component system service provisioning 
continue slang model reason sla composition analysing implications 
xml representation slas provides possibility specialised uml tools software performance engineering design 
agenda study benefits inserting slang instances standard xml deployment descriptors components hosting qos aware 
intend test effectiveness slang monitoring compliance slas 
includes development toolkit service composition analysis assist determining slas undertake meet 
model checking techniques prove appropriate context 
srinivasan 
business process modeling big step 
computer may 
innovative technologies computer professionals 

odp trader 
proc 
ifip tc wg int 
conf 
open distributed processing berlin germany pages 
north holland 
clark 
xsl transformations xslt 
technical report www org tr xslt world wide web consortium november 
kelly 
approach service level agreements ip networks differentiated services 
technical report statistical laboratory university cambridge january 
gu nahrstedt yuan xu 
xml quality service enabling language web 
technical report university illinois april 
krishnamurthy karr rodrigues loyall schantz schmidt 
integration qos enabled distributed object computing middleware developing generation distributed applications 
proceedings acm sigplan workshop optimization middleware distributed systems utah 
om june 
loyall schantz zinky bakken 
specifying measuring quality service distributed object systems 
proceedings international symposium object oriented real time distributed computing 
april 
kyoto japan 
griffin georgiadis 
service level specification semantics parameters 
internet draft sls february 
object management group 
common object services specification revised edition 
old connecticut path framingham ma usa december 
seely 
soap cross platform web service development xml 
prentice hall ptr 
isbn 
emmerich 
model driven performance analysis enterprise computing systems 
research note ucl dept computer science december 
submitted publication 
