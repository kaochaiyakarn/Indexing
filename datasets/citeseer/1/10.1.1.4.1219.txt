mitsubishi electric research laboratory framework microworld style construction kits carol strohecker slaughter tr may describe genre game construction kits extensible java framework models method structures generating 
include descriptions kits conceptual bases design principles explain users kit kits framework informed modifications promoting people broad range expertise programming design multimedia production learning theory 
continued development framework informed museum contexts kit 
may copied reproduced part commercial purpose 
permission copy part payment fee granted nonprofit educational research purposes provided partial copies include notice copying permission merl mitsubishi electric research laboratory cambridge massachusetts acknowledgment authors individual contributions applicable portions copyright notice 
copying reproduction republishing purpose shall require license payment fee merl mitsubishi electric research laboratory 
rights reserved 
copyright mitsubishi electric research laboratory broadway cambridge massachusetts framework microworld style construction carol strohecker merl mitsubishi electric research lab broadway cambridge ma usa merl com describe genre game construction kits extensible java framework models method structures generating 
include descriptions kits conceptual bases design principles explain users kit kits framework informed modifications promoting people broad range expertise programming design multimedia production learning theory 
continued development framework informed contexts kit 
keywords java framework construction kit learning interaction design developing java framework facilitate implementation genre kits principles learning 
kits bear family resemblance tinker toys tm tm building toys dynamic especially visual 
currently kits prototyped highly interactive graphical software project iterative development including augmentation tangible input output devices concurrent development social contexts supporting playful building activity 
kits inspired notion best exemplified logo turtle geometry 
computational world elegantly models basics differential geometry graphical turtle characterized just properties position heading 
users typically children interact typing commands effect operations movement 
turtle responds forward turning leaving trace goes 
pictures result complex quickly 
children play ideas building block fashion properties vector ground development understandings angles geometries squares spirals slaughter stanford university michigan avenue clinton mi usa ahs mit edu kits intended children intended people ages involve similar modeling conceptual domain 
players build basic elements operations activate constructions 
dinosaur skeletons balance walk run maps reveal street level views geometric tiles form symmetric patterns creatures spawn maintain disrupt social distances breathing patterns determine cyclic timing shared dance 
various collaborators developed versions kits past years 
commonalities design implementation conceptual underpinnings led formulate kit kits extensions java windowing toolkit awt facilitate development growing genre 
kits strongly visual kit kits supports creation structure function appearances objects 
works java capturing dealing actions elaborates java facilities transforms shapes painting image handling provide highly customizable manipulable objects 
existing construction kits designs fifth informed development version 
available people developing kits 
experiences helped improve framework 
implementing refinements continued develop new kit 
steps include creating facilities sound play 
beginnings players build colorful tiles spread mosaic patterns left 
panels change size player moves build area activation area modeling turn dialog 
third microworld style kits implemented java version 
straightforward implementation involves rectangular building elements filters effecting geometric illustrations adapted 
transformations tiles 
added image buttons structures looping series image buttons animations 
players select adjust behavioral attributes simulate social behaviors creatures right 
varying degrees awareness attraction affect creatures movements interact 
interaction design idea conversation player system 
implementation java structures 
added filters achieve color blending creatures perceptual fields overlap structures enabling transparent backgrounds image files containing creatures 
players diagram city real imagined forming map geographic primitives districts paths landmarks 
software transforms scale view representation illustrate mapped environment 
dynamic illustration takes form frame frame animation preserves topological relationships primitive structures 
current version java second prototype 
building elements java polygons added facilities manipulations scaling stretching 
elaborated construction process enabling specification particular images towers mountains landmarks appear maps path views 
miniature echoes building map maintains screen position display changes reveal street level views 
variable transparency filters allow visibility views beneath miniature map effect edge blending image segments 
developed processes structures saving retrieving constructions extended re viewed 
bones players put dinosaur parts test skeletons see balance standing moving 
constructed creature number legs location mass center speed movement software analyzes structural integrity creature maintain balance moves 
animations including rich set gait patterns derive literature biomechanics animal locomotion 
current version java third bones prototype 
building elements image files added requirement arbitrarily shaped polygonal images rectangular ones 
change profound implications image production mouse event structures filters effect geometric transformations size color changes 
developed phase construction process players assemble creature indicate bones meant constitute legs 
process shifted burden software player complicates interaction design 
bones players save constructions images retrieve objects reactivated manipulated 
capability starting point web trading constructions 
microworld approach design kits relates microworld approach exemplified turtle geometry fundamental elements operations characterize conceptual domain 
program assigned mass value player determined position characterize elements bones 
combined locate center mass composited creature properties determine maintain structural integrity balance 
conceptual domain motion study particularly balance particularly role center mass balancing 
focusing salient features conceptual domain design challenges developing manipulable representations people build 
domain topology basic relations proximity 
building elements representations districts edges paths nodes landmarks operations consist positioning elements respect 
domain geometric symmetry 
building elements tiles operations rotation reflections 
domain social dynamics 
elements representations sensori motor attract functions operations consist adjustments degrees sociability 
design highlights consistent screen approach formulated design heuristics object permanence transparency multiple simultaneous views 
recommend designing miniature representations recall mechanisms screen areas buttons devices easily accessible 
visualizations algorithms calculations processes biggest design implementation challenges crucial highly visual genre 
represent constituent properties objects ways facilitate users modifications provide various forms visual aural feedback results actions apparent 
comparisons help people perceive shifts scale perspective time representation fundamental understanding dynamic phenomena 
graphic treatments side side views miniature displays address principle understand best understand way 
kits employing treatments may accessible range users diverse thinking styles 
adjustments panel sizes exemplify kind visualization 
changes provide concrete representation distributed control player system conversation proceeds 
side side comparisons miniature map path level views provide shifts scale perspective representation facilitate players notice relative placements elements 
bones includes diagrammatic visualization mass calculation projection center base formed creature points contact ground 
representation static balancing 
leg movements act visualizations gait patterns 
version hope improve visualizations dynamic balancing add footprints complementary visualizations gait patterns 
development kit kits framework includes elements operations conceptual basis java structures acknowledging importance visual presentation genre kits 
chose java object orientation implementing highly interactive systems anticipation cross platform web friendly requirements communities players evolve 
course key aspects requirements java changing 
java introduced new event model java came java provided complex screen areas new image objects transformations custom cursors helpful functionality 
java greatly slowed image painting introduced scores bugs 
considered swing newly incorporated java jdk nascent tastes extensive needs 
bugs resolved java beta currently implemented 
increasingly complicated wants java 
acceptable rectangle describe bounds particular object soon polygon 
originally wanted rotate square increments degrees soon wanted rotate complex polygons degrees corresponding images rotate fill polygons exactly 
originally transparent backgrounds image files sufficient soon needed transparency filters image blending range filters geometric transformations color changes gradients 
basic classes evolved 
version version includes kinds classes screen areas building elements widgets structures managing 
happens mainframe top level window 
mode layout manager determines objects need mainframe enables specification absolute positions screen 
elements components implement mouse events specific geometric forms transformations 
elements implement image loading painting 
players build elements form constructions similar complex structures useful activation processes 
java panels flexible notions building activation created zones containers take various shapes implement special painting code borders background images 
composer kit specific zone holds elements allows manipulated 
arena kit specific zone holds constructions performs necessary functionality interact activate 
bench third kit specific zone displays snapshots saved constructions allowing accessed individually file 
java standard button functionality rich state changes visual signalling needed developed particular kinds buttons 
uses image painting 
continues execute mouse pressed held longer hold faster button performs action 
performs animation sequence images mouse rolls button 
displays number modified action pressing arrow 
feedback mechanism typically appears bottom screen displays textual messages 
tooltip provides short descriptive string appear component interface 
commands objects encapsulate instructions responding particular events 
commands remember aspects primarily actions undone 
uses commands keep track events 
keeps track time notifies registered specified period time elapsed 
notified 
object implementing selectable interface respond mouse event selected 
implications associated action object painting differently 
selectable objects register 
interfaces enable special pictorial treatments 
specifies component leave kind depiction wake trail fading images 
traceable specifies component leave trace moves line describing path 
usage trials test usefulness robustness facilities invited people interested producing computer games meaningful shoot em ups try 
interesting mix people responded 
participant fluent java little visual interaction design experience lot non java programming experience extensive knowledge computer games interaction design participant experience java architect extensive visual design knowledge programming experience expert knowledge linguistics cognition 
diversity fortuitous application orientation focusing players kits users perspective users 
needed address ranges extents expertise people want framework 
organized workshop design studio 
course days hoped explain approach design principles participants develop cursory examples construction kits 
demos supporting documentation described existing kits conceptual grounding design relevant digital image production documentation coding examples showing applied create kits 
insufficient time thorough elements operations analysis kits participants proposed 
addressed concerns emphasized approach brought designers developers centering implementation devices onscreen 
approach helped clarify genre build activate save trade premises emphasizing focuses users constructions graphical objects potential behaviors software activation constructions ultimately social contexts saving trading constructions enhance learning 
participant wanted kit players explore timing relationships context 
ball falling sound specified particular tone 
building consists adding ball elements composer 
activation ball strikes arena displays strike patterns graph notation resembling musical score 
patterns saved replay 
design bones build activate processes share screen area constitute distinct activities 
composer arena constructs suitable 
participants pooled skills programming visual design linguistics 
began kit players build words 
design evolved arrangements screen areas corresponding flow eventually settled arrangement downward movement player progresses process word building letters combine form phonemes syllables form words 
letters match particular rules order form phoneme 
matches saved pockets ordered position phoneme word onset phoneme combines vowel word ends coda syllable 
saved words may may appear english dictionary follow onset vowel coda pattern 
collaborators carefully separated screen areas functions main areas support building kind activating takes form checking proper letter matches syllable patterns 
implemented areas extending composer structure composer arena 
composers typically handle operations elements case take form validity checking 
participant wanted simulation kit deal notions ecology 
wanted players able control aspects environment graphical 
resembles ant farm creatures inhabit called bugs 
separated functions screen displays differed maintained common features 
modes include build activate processes 
environment mode player add bugs food bugs simulation running 
bug mode player specify rules governing bugs properties behaviors hungry seeking avoiding food seeking avoiding bugs seeking food stores dying hungry finding food 
represented rule structure kind logical chart discussion moved graphical representations 
notion build mode specification phase building prototypes 
implemented specification functionality extending composer structure 
version addition general debugging structural modifications experiences 
concluded maintaining notions build activate worthwhile functions happen different ways 
separate composer arena constructs overspecified 
version collapsed single structure holder maintained flexibility inherent zone structure implications image treatments control mechanisms 
notion mode implicitly incorporated concerns player doing time happening screen time construction doing time 
concluded helpful separate concerns distribute relevant holder construction command structures 
added functionality new classes 
developed methods necessary potentially cumbersome considerations double buffering loading images sounds 
protected included variables ensured instances object created initializing relevant variables 
additionally reduced number classes improved code classes refined comments 
changed terminology pertain specifically effort mainframe command doer 
changed names methods compatible awt terminology 
generally aimed structures accessible malleable possible 
modifications geared enhancing ease people java programming experience originally envisioned 
attained low threshold high ceiling profile environment learn programming interesting direction 
addition java code documentation includes code examples specific kits documents addressing varying degrees expertise programming visual design interaction design multimedia production learning theory 
include code starter seeds creating screen areas elements constructions basic data control structures 
documents answer simple questions time users typically ask briefly describe java interface model 
experienced java users provides java api relevant documentation 
application fifth kit implemented java beta helped initially identifying functionality subsequently testing code bugs completeness extraneous constructs 
complex kits implemented mainly shape arrangement items screen 
bones building elements arbitrarily shaped polygonal image files represent dancer arms legs torso head 
players build composing dance figures setting properties affect movements cyclic timing shared dance 
added arbitrarily shaped image buttons tiered structure saving retrieving constructions greatly elaborated system event triggered visualizations 
world time space relationships movements visualize breathing cycles progress shared dance cycle characteristics affecting concerns leap moments heights 
related course compared concerns output software construction kits authoring tools simulations multimedia environments learning programming basics java frameworks 
large amount interesting related areas 
distinguishing characteristic effort remains basis microworld theory hope develop maintain features notable projects achieved pointed kits kit kits move prototype widely forms 
software construction kits incredible machine sequel incredible machine tom snyder productions resemble kits various ways 
described aspects build activate save trade mantra 
include range media ultimately kits 
tom snyder productions example distributes kits printed activities includes user designed printed output construction process 
interesting authoring tools simulations pro agentsheets visual agentalk cocoa tend common environments learning programming basics multimedia authoring tools macromedia director course tool pro 
clear extent hope environment learning programming basics learned environments pro cocoa agentsheets visual agentalk squeak smalltalk 
java frameworks beneficial consider interactive illustrations produced brown university growing movement developing hci patterns 
believe despite grounding interactive illustrations similarity genre kits kits maintain stronger focus users users deliberations constructions 
considered presenting kind pattern language microworld style construction kits feared cookie cutter approach flexibility 
feel including various forms support novice programmers prove fruitful direction 
futures immediate term aim develop better facilities handling sound facilitating kit players web trading constructions 
looking versions swing java beans see may robust compatible effort 
beans sufficiently addressed reliance imagery extent genre demands anticipate evolution beans potential compatibility notion seeds plan improvements existing kit prototypes contribute facilities 
begun collaboration exhibit program developers boston museum science 
kits currently installed test exhibits visitors try critique 
addition improving kits trials help developing museum social contexts long term kit 
anticipate developing separate versions kit support episodic exhibit areas extended studio environments museums homes situations ideally networked 
including tangible input output kits help effect craft activities learning communities 
acknowledgments bones developed carol strohecker william dan gilman john medical 
developed carol strohecker barbara barros slaughter dan gilman back 
developed ackermann carol strohecker 
developed ackermann carol strohecker slaughter dan gilman 
developed carol strohecker slaughter mike noah appleton nadir ait 
kit kits developed slaughter see www com www com www crim ca cocoa www agentsheets com www squeak org 
carol strohecker 
addition visitors boston museum science nadir ait brooks brooks larry burks gunter pau morales mark participated usage trials various kits 
john evans goel tim participated usage trials kit kits 
mike eisenberg doug smith tom glenn matthew brand participated development models museum learning environments 
david adele goldberg stephanie sarah kuhn fred martin seymour papert barry perlman porter ramalingam warren sack tim shea brian silverman doug smith helpful discussions course 
effort supported mitsubishi electric research laboratory 

abelson turtle geometry computer medium exploring mathematics 
mit press cambridge ma 

ackermann strohecker build launch sketches constructive play kits 
merl tr mitsubishi electric research laboratory cambridge ma 

alexander dynamics extinct 
columbia univ press new york 


ed 
martha graham early years 
da press 

imagination 
univ texas press 

berger moment look things ed 

viking press 

bruner actual minds possible worlds 
harvard univ press cambridge ma 

eisenberg creating polyhedral models computer 
journal computers mathematics science teaching 

thomas putting pattern languages interaction design 
proceedings chi 
see summary report workshop www org personal tom erickson patterns html 

freedman martha graham dancer life 
books 

gabriel failure pattern languages 
journal object oriented programming 

gamma helm johnson vlissides design patterns elements reusable object oriented software 
addison wesley reading ma 

goldberg learn 
teach 
proceedings th annual conference object oriented programming systems languages applications 

goldberg robson smalltalk language 
addison wesley reading ma 

graham notebooks martha graham 
harcourt brace jovanovich 

gruber von che 
eds 
essential piaget 
basic books new york 

harel papert 
eds 

ablex norwood nj 

resnick 
eds 
practice designing thinking learning digital world 
lawrence erlbaum mahwah nj 


animals run 
scientific american may 

phonology generative grammar 
blackwell cambridge ma 

lynch image city 
mit press cambridge ma 

lynch reconsidering image city cities mind images themes city social sciences ed 
plenum press new york 

minsky society mind 
simon schuster new york 

papert children computers powerful ideas basic books new york 

papert el www media mit edu 

poggi frames table tableau picasso constructions painting invention collage 
yale univ press new haven ct 

raibert legged robots balance 
mit press cambridge ma 

repenning agentsheets interactive simulation environment user programmable agents proceedings interaction tokyo japan 

resnick berg eisenberg black boxes bringing transparency aesthetics back scientific investigation 
journal learning sciences 

rey curious george learns alphabet 
houghton mifflin boston 

simpson van dam educational strategy st century 
brown university online id number 

stein picasso 
dover new york 

strohecker model museum outreach shared interactive spaces 
multimedia computing museums selected papers third international conference hypermedia interactivity museums archives museum informatics pittsburgh 

strohecker cognitive zoom object path back spatial cognition ii springer verlag 

strohecker construction kits learning environments 
proceedings ieee international conference multimedia computing systems florence 

strohecker developmental image city design visual spatial mathematical reasoning 
proceedings visual spatial reasoning design massachusetts institute technology university sydney 

strohecker think 
proceedings creativity cognition university 

strohecker barros 
extended abstracts chi atlanta ga acm press 

strohecker barros way 
presence teleoperators virtual environments 

strohecker slaughter kits learning kit 
extended abstracts chi hague netherlands acm press 

strohecker slaughter appleton 
mitsubishi electric research laboratory cambridge ma forthcoming 

common ground pattern language human computer interface design 
www mit edu ui patterns essay html 

tufte visual display quantitative information 
graphics press cheshire ct 

tufte envisioning information 
graphics press cheshire ct 

tufte visual explanations images quantities evidence narrative 
graphics press cheshire ct 

papert 
epistemological pluralism styles voices computer culture 
signs chicago university press 

vygotsky mind society 
harvard univ press cambridge ma 

voices mind 
harvard univ press cambridge ma 
