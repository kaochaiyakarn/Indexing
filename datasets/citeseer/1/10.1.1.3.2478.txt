delay analysis ieee single hop networks marcelo carvalho garcia luna aceves department computer engineering university california santa cruz santa cruz ca usa carvalho jj soe ucsc edu presents analytical model compute average service time jitter experienced packet transmitted saturated ieee ad hoc network 
contrast traditional literature distribution usually fitted assumed bottom approach build moments service time ieee binary exponential backoff algorithm events underneath operation 
model general applied type ieee wireless ad hoc network channel state probabilities driving node backoff operation known 
apply model saturated single hop ad hoc networks ideal channel conditions 
validate model extensive simulations conduct performance evaluation node average service time jitter direct sequence frequency hopping spread spectrum physical layers 

past years witnessed interest wireless technologies application portable devices 
number users technologies increased demand real time traffic delay sensitive applications critical 
efforts satisfy needs standards wireless local area networks wlans proposed ieee medium access control mac protocol de facto standard widely nowadays 
ieee main mechanism access medium distributed coordination function dcf random access scheme carrier sense multiple access collision avoidance csma ca 
supported part capes brazil air force 

dcf provides access schemes default called basic access mechanism optional way handshake scheme 
standard defines optional point coordination function pcf centralized mac protocol uses point coordinator determine node right transmit 
pcf collision free time bounded services 
pcf multihop single hop ad hoc networks dcf access network widely assumed implies varying delays traffic 
curiously majority analyzing performance ieee dcf concentrated throughput attention analyzing delay 
provide analytical model compute average service time jitter experienced packet transmitted saturated ieee ad hoc network 
contrast traditional literature distribution usually fitted assumed bottom approach build moments node service time ieee binary exponential backoff algorithm events underneath operation 
strength model relies fact applied network scenarios 
key successful application knowledge channel state probabilities driving node backoff operation 
apply model saturated single hop ad hoc networks ideal channel conditions operating way handshake mechanism dcf 
case channel state probabilities obtain bianchi provides set nonlinear equations relates packet collision probability transmission probability steady state 
linearize bianchi model find simple equations quantities 
reason approximation twofold ease computation need better understand impact system parameters channel system probabilities clear nonlinear system equations 
validate model linearized system extensive simulations conduct performance evaluation node average service time jitter direct sequence spread spectrum dsss frequency hopping spread spectrum fhss physical layers scenario 
investigate performance vary parameters initial contention window size slot time size packet size maximum backoff stage 
rest organized follows 
section briefly reviews dcf mechanism 
section presents analytical model 
section validate model simulations 
section presents performance evaluation dsss fhss physical layers 
section 

distributed coordination function dcf describes techniques packet transmission default way handshake scheme called basic access mechanism optional way handshake mechanism 
basic access mechanism node monitors channel determine node transmitting initiating transmission new packet 
channel idle interval time exceeds distributed interframe space difs packet transmitted 
node monitors channel sensed idle difs interval generates random backoff interval additional deferral time transmitting 
collision avoidance feature protocol intends minimize collisions contention multiple nodes 
addition avoid channel capture node wait random backoff time consecutive new packet transmissions medium sensed idle difs time 
dcf discrete time backoff timer 
backoff timer decremented medium idle frozen medium sensed busy 
busy period decrementing backoff timer resumes medium free longer difs period 
transmission takes place timer zeros 
slot size backoff timer denoted equals time needed node detect transmission packet node 
dependent physical layer accounts propagation delay transmit receive turn time time signal state channel mac layer 
packet transmission backoff time uniformly chosen range 
value called contention window depends number failed transmissions packet packet queued transmission contention window takes initial value min doubles unsuccessful packet transmission maximum max values min max physical layer specific 
contention window remains max remaining attempts 
socalled exponential backoff scheme 
sequel attempt transmit packet exponential backoff referred backoff stage 
ack transmitted destination node signal successful packet reception 
ack immediately transmitted packet period time called short interframe space sifs 
transmitting node receive ack specified timeout detects transmission different packet channel packet transmission backoff rules 
illustrates basic access mechanism 
way handshake mechanism involves transmission request send rts clear send cts control frames prior transmission actual data frame 
successful exchange rts cts frames attempts reserve channel time duration needed transfer data frame consideration 
rules transmission rts frame data frame basic access scheme 
receiving rts frame receiver responds cts frame sifs 
successful exchange rts cts frames data frame sent transmitter waiting sifs interval 
case cts frame received predetermined time interval rts retransmitted backoff rules specified basic access procedures described 
frames rts cts carry information length packet transmitted 
information read listening node able update network allocation vector nav containing information period time channel remain busy 
node hidden transmitting receiving node detecting just frame rts cts frames suitably delay transmissions try avoid collisions 
illustrates way handshake mechanism simply call rts cts mechanism 

analytical model 
service time characterization mentioned section node goes backoff backoff time counter decrements perceived state channel 
channel sensed idle backoff time counter decremented 
frozen staying state channel sensed idle difs time decrementing operation resumed 
backoff timer frozen mutually exclusive events happen channel successful transmission takes place packet collision occurs 
denote packet ack ack slot time frozen backoff time idle slot backoff time difs difs sifs difs difs station station resumes backoff timer slot time arrives packet busy medium sifs difs backoff channel access destination source sifs sifs delayed medium access nav cts data ack rts cts nav rts 
ieee access methods basic access 
rts cts 
possible events node sense backoff successful transmission idle channel collision time intervals consecutive backoff counter decrements call backoff steps contain mutually exclusive events 
words node backoff th backoff step result collision transmission channel sensed idle 
assume events successive backoff steps independent reasonable assumption wlan relatively large time node spends collision resolution time channel sensed bus due collisions nodes 
dcf node finds collision taken place receive acknowledgment transmission certain timeout ack timeout basic access mechanism cts timeout rts cts mechanism 
words collision happens backoff step colliding nodes assumed go collision resolution process backoff step ready transmission backoff step 
way avoid dependencies number colliding nodes previous backoff steps 
considerations denote backoff stage specific node certain instant time number backoff time slots randomly chosen th stage 
assuming events probabilities respectively events independent mutually exclusive backoff step probability slots idle slots collision slots successful slots multinomial probability distribution rs time channel sensed idle backoff slot average time channel sensed busy due successful transmission average time channel sensed busy due collision channel 
denote total backoff time spent th backoff stage slots idle slots collisions slots successful transmissions randomly chosen slots 
note event idle slots collision slots successful slots event backoff timer zeros time slots 

results average time node spends th backoff stage backoff steps chosen simply indicates function randomly chosen value th backoff stage 
compute average backoff time th stage averaging follows wk nk wk nk result quite intuitive simply states average time node spends th backoff stage product average number backoff steps times average backoff step size 
able consider general case binary exponential backoff algorithm 
matrix columns counting events 
backoff stage th stage 

interested computing 
column vector number time slots chosen stages 
independence assumption events happen node th backoff stage independent events happen node th stage 


equality expresses independence stages randomly chosen number backoff steps 
total backoff time computed follows tb accounts time node spends collision resolution previous 
compute average time takes successfully transmit packet backoff stages tb rk 
averaging observing selected number backoff steps specific backoff stage independent selected number backoff steps previous stages nk nk nk eq 
result simply tells backoff time non linear function discrete random variable number backoff stages node go transmitting packet successfully 
consequently backoff time probability distribution probability distribution number backoff stages turn directly related probability packet succesfully transmitted th stage 
probability success packet experiences transmitted th backoff stage reasonable assumption packet collides th stage packet collided st nd 
th stages packet collides th stage 
mappings discrete random variables 
note probabilities independent backoff stage constant simply geometric distribution 
simplicity assume fact accurate throughput results obtained bianchi assuming constant independent collision probability 
compute moments backoff time tb 
start average backoff time eq compute term eq observe min min maximum backoff stage value max min compute remaining summation eq splitting terms follows wmin find notice wmin wmin wmin wmin general wmin wmin making change variable wmin wmin adding obtain average backoff time equals min 
average time packet spends backoff simply average number backoff stages goes times average time spends backoff stage added respective average time spent collision resolution 
note term min works effective window size scaling initial contention window size maximum backoff stage success probability specific case contention window constant backoff stage simply kt case average backoff time reduces fix contention window size initial contention window size min 
way contention window size constant stage variance total backoff time var var var kt 
case binary exponential backoff algorithm need apply techniques applied squared cross product terms 
conciseness omit intermediate steps give final expression obtained algebra var min obtain eq 
backoff time characterization average service time equals time successfully transmit packet 
constant var var 
note service time distribution backoff time case non linear function geometric random variable parameter 
channel probabilities model just applicable channel state probabilities driving node backoff operation known 
section compute values saturated single hop ad hoc network ideal channel conditions 
purpose rely bianchi provides model evaluate saturation throughput ieee mac protocol hypothesis ideal channel conditions hidden terminals capture 
bianchi analysis assume fixed number nodes node having packet available transmission transmission queue node assumed nonempty 
key approximation model adopt packet transmission attempt collides constant independent probability regardless number retransmissions suffered probability called conditional collision probability meaning probability collision experienced packet transmitted channel 
bianchi modeled stochastic process representing backoff time counter node bidimensional discrete time markov process 
development probability node transmits randomly chosen slot time min pw min function conditional collision probability unknown 
find value sufficient note probability transmitted packet faces collision channel probability note probability section 
remaining nodes transmit time slot 
independence assumption transmission experiences system state steady state 
remaining node transmits packet probability steady state 

equations form nonlinear system unknowns solved numerical techniques 
fact bianchi showed system unique solution 
things simpler better understand effect different parameters probabilities find approximate solution nonlinear system linearizing equations 
purpose probability node transmit randomly chosen slot time min pw min min pw min 
continuity derivatives interval taylor series expansion min min min min accounts second high order terms taylor series expansion 
order approximation simply min min min min terms min min min min min min min 
min min min min 
shows comparison nonlinear relationship linear approximation dsss parameters min 
error approximation significant collision probability grows 
range varying error tends small 
section evaluate performance approximation 
continuity respect critical value shown simply rewriting way done 
collision probability 
transmission probability comparison nonlinear relationship versus linear approximation 
substitute approximation equation relates probability node transmitting randomly chosen slot time min min min min min min min min min leads approximation min min min 
equations clearly show decoupling achieved linearizing original system equations 
shows conditional collision probability function number nodes minimum congestion window min see current parameters ieee protocol min min dsss collision probability number nodes wireless lan exceeds nodes 
number stations wmin wmin wmin wmin number stations idle channel successful transmission collision 
collision probability function number nodes 
conditional channel probabilities 
turn problem finding conditional channel probabilities represented vector purpose tr probability transmission considered time slot 
considering events experienced node backoff period remaining nodes contending channel access 
remaining nodes transmits packet probability steady state tr 
probability suc transmission occurring channel successful probability exactly node transmits channel conditioned fact node transmits suc tr 
probability successful transmission occurs time slot tr suc accordingly tr tr suc 
shows probabilities function number nodes 
time intervals follow definition bianchi rts sifs cts sifs sifs ack difs fixed packet sizes rts difs 

model validation section evaluate accuracy model predicting moments node service time single hop ieee wlan 
purpose simulator ns run simulations network sizes varying nodes steps 
nodes transmit node network cbr source rate fixed packet sizes bytes ip packet 
pick source rate high saturate nodes network size 
nodes randomly placed area meters mobility 
run corresponds minutes data traffic 
trace node network compute mean variance service time 
repeat experiment different seeds 
just statistical reasons shown correct floor acquisition occur cts packets size rts packets plus turnaround time plus twice propagation delay happen ieee protocol 
ignore consider collisions involve rts packets 
fairness problem inherent ieee dcf 
reported literature available bandwidth equally shared competing nodes ieee protocol 
noticed behavior simulations topologies nodes successful acquiring channel 
regarding physical layer direct sequence spread spectrum dsss raw bit rate mbps 
table summarizes parameters simulations 
fhss standard specific listed completeness ack timeout cts timeout specified standard 
fhss wmin wmax mac header bytes bytes ack bytes bytes cts bytes bytes rts bytes bytes slot time sec sec sifs sec sec difs sec sec ack timeout sec cts timeout sec table 
physical layer parameters 
pute average service time jitter node run take average nodes network 
repeat computation seeds report results averaged seeds 
shows numerical results average service time simulations analytical models linear nonlinear 
see analytical model performs quite especially small medium size networks providing upper bound average service time 
regarding increasing discrepancy observed number nodes grows note main reasons 
analytical model packet backoff infinitely time simulations standard retry counters help mac determine longer worth continue attempting transmit packet 
packets discarded service time considered statistics 
second reason stems assumption periods collision experienced colliding nodes duration periods channel sensed busy nodes 
mentioned necessarily true cts timeout usually longer assumed lasts rts difs sec nodes 
fortunately discrepancy practically irrelevant note high variance jitter service time number nodes grows fact average service time predicted linear nonlinear models standard deviation simulation results shown 
im number stations simulation nonlinear model linear model number stations simulation nonlinear model linear model 
average service time error bars show standard deviation jitter simulations analytical model 
jitter magnitude 
portant result shown see accurate analytical model predicting magnitude jitter experienced node network 
similarity quite striking jitter predicted nonlinear model little bit simulations 
figures see linear model conservative model providing higher values delay jitter 
due fact values min probability having transmissions collisions channel node backoff time usually higher linear model nonlinear model 
consequently delay jitter higher 

performance evaluation section addresses impact ieee parameters average service time jitter dsss fhss physical layers model developed section saturated networks 
stated parameters ones table 
consider impact initial size average service time jitter 
figures show results dsss physical layer figures show results fhss physical layer 
results see dsss performs better fhss average service time jitter 
particular look performance real parameters min dsss min fhss see fhss average service time roughly speaking twice values dsss physical layer specially large networks 
dsss fhss exhibit behavior terms jitter 
important observation far delay jitter saturated networks concerned increasing initial contention window size improves performance system physical layers 
figures show clearly impact initial contention window size service time jitter 
results refer window sizes 
metrics drop dramatically increase initial contention window size values 
small medium size networks nodes jitter small average service time practically constant window sizes higher 
small values window sizes dsss performs better fhss 
performance similar window sizes bigger 
figures show performance dsss fhss physical layers packet sizes bytes ip packets 
see dsss outperforms fhss average service time jitter 
graphs see performance affected medium sized networks 
impact system performance critical large networks considerable increase mean service time jitter noticeable packet size increases 
result explained refer 
shown number nodes grows probability having successful transmission channel grows directly affects average slot size 
commonly stated rts cts mechanism throughput effective packet size increases facing clear trade delay throughput performance number nodes increases 
figures show average service time jitter vary slot time size case dsss physical layer 
figures show results fhss physical layer 
data packet size fixed bytes 
graphs see big packet size slot time size impact system performance dsss fhss physical layers 
result parallels reported bianchi throughput change vary slot time size 
fact amount idle channel time remains marginal respect time spent transmissions collisions regardless increase slot size 
figures show results quantifying impact maximum backoff stage parameter service time dsss fhss physical layers 
results show far service time jitter concerned binary exponential backoff algorithm harmful large saturated networks maximum backoff stage high 
dsss fhss see fewer backoff stages better performance specially large networks 
fact suggests saturated networks nodes packet ready sent head queues binary exponential backoff algorithm inappropriate 
fact nodes constantly backoff 
results effective keep constant large con number stations wmin wmin wmin wmin wmin number stations wmin wmin wmin wmin wmin number stations wmin wmin wmin wmin wmin number stations wmin wmin wmin wmin wmin initial contention window size average service time sec initial contention window size initial contention window size initial contention window size 
average service time versus number nodes different initial contention window sizes dsss fhss 
jitter versus number nodes different initial contention window sizes dsss fhss 
average service time versus initial contention window size different network sizes dsss fhss 
jitter versus initial contention window size different network sizes dsss fhss 
packet size bytes packet size bytes packet size bytes packet size bytes slot size sec slot size sec slot size sec slot size sec 
average service time versus packet size different network sizes dsss fhss 
jitter versus packet size different network sizes dsss fhss 
average service time versus slot size different network sizes dsss fhss 
jitter versus slot size different network sizes dsss fhss 
maximum backoff stage average service time sec maximum backoff stage maximum backoff stage jitter sec maximum backoff stage 
average service time versus maximum backoff stage dsss fhss 
jitter versus maximum backoff stage dsss fhss 
window size increase size contention window exponentially 
way nodes aggressive acquiring floor providing lower delays 

analytical model computation average service time jitter experienced packet transmitted saturated ad hoc network ieee dcf 
bottomup approach built moments service time ieee binary exponential backoff algorithm events underneath operation 
provided general model applied scenarios channel state probabilities drive node backoff operation known 
applied model saturated single hop networks ideal channel conditions carried performance evaluation node average service time jitter dsss fhss physical layers 
results far delay jitter concerned dsss performs better fhss 
addition contrast previous studies throughput rts cts mechanism practically independent initial contention window size network size parameters major impact system performance delay metric interested 
case higher initial size smaller average service time jitter especially large networks 
hand consider packet size opposite applies smaller packet smaller average service time jitter 
regarding slot time size impact delay performance dsss fhss 
maximum backoff stage binary exponential backoff algorithm harmful maximum backoff stage number nodes network large 
far delay saturated ieee networks concerned binary exponential backoff algorithm large constant contention window size showed efficient packet sizes selected network size 
wang ko 
fair medium access wireless ad hoc networks 
annual ieee acm international workshop mobile ad hoc networking computing aug 
bianchi 
performance analysis ieee distributed coordination function 
ieee journal selected areas communications march 
cali conti 
dynamic tuning ieee protocol achieve theoretical throughput limit 
ieee acm transactions networking dec 
gupta 
performance modeling asynchronous data transfer methods ieee mac protocol 
wireless networks 
zukerman 
performance analysis ieee mac protocol 
proc 
european wireless conference pages florence italy february 
fullmer garcia luna aceves 
solutions hidden terminal problems wireless networks 
proc 
acm sigcomm cannes france september 
ieee standard wireless lan medium access control mac physical layer phy specifications nov 

kleinrock tobagi 
packet switching radio channels part carrier sense multiple access modes throughput delay characteristics 
ieee transactions communications com 
network simulator ns 
www isi edu nsnam ns 
papoulis 
probability random variables stochastic processes 
mcgraw hill rd edition 
wang garcia luna aceves 
performance collision avoidance protocols single channel ad hoc networks 
proc 
th ieee international conference network protocols icnp paris france nov 
