chapter framework developing conversational user interfaces james glass eugene weinstein scott joseph polifroni mit computer science artificial intelligence laboratory cambridge ma usa glass joe csail mit edu grace chung national research initiatives reston va usa cnri reston va nakano ntt japan nakano atom ntt jp report efforts facilitate creation mixed initiative conversational interfaces novice experienced developers human language technology 
focus framework allows developers easily specify basic concepts applications rapidly prototype conversational interfaces variety configurations 
describe current knowledge representation compilation processes speech understanding generation dialogue turn management user interfaces created novice users experienced developers 
report experiences user groups developers framework prototype variety conversational interfaces 
keywords conversational interaction spoken dialogue systems 
years sophisticated conversational interfaces developed enable fluent spoken communication humans machines 
systems developed speech language experts require significant effort sustained period achieve performance 
reason non experts overcome significant hurdle human language technologies applications 
address issue developing utility called enables rapid prototyping spoken dialogue systems novice expert developers 
motivate need research describe approach progress describe experiments performed novice users creating speech interfaces 
section briefly provide additional background current state directed mixed initiative dialogue interaction motivate need mechanisms facilitate development mixed initiative conversational interface prototypes 
describe approach taken research area give overview user interface created 
describe speech understanding generation dialogue framework describe experiments conducted different groups users 
compare research related describe ongoing research area 
background spoken dialogue systems considered conversational degree may differentiated degree system maintains control conversation inherent amount flexibility provided user ask want way want ask want ask 
conservative approach computer takes complete control interaction 
directed dialogue applications typically require user answer set prescribed questions touch tone implementation interactive voice response systems 
user options restricted completion transactions easier attain surprising systems successfully deployed wide scale 
alternative approach human computer interaction idea mixed initiative dialogue user machine 
approach employs flexible dialogue strategy allows user machine participate actively solve problem interactively conversational paradigm 
systems built mixed initiative paradigm typically process complex queries directed dialogue counterparts inherently difficult design deploy 
framework developing conversational user interfaces reason majority kinds systems remain development research laboratories deployed publicly 
motivation mixed initiative conversational interfaces natural efficient means communication fundamental technical barriers limit widespread 
difficult configure hlt required create prototype system second performance optimization typically iterative process application specific fully automated 
creating robust mixed initiative conversational interface new application area currently requires tremendous amount effort speech language experts 
development speech recognition language understanding technologies domain language specific requiring large amount annotated training data 
dialogue management typically fine tuned application domain dependent functionality 
system development proceeds iteratively prototypes collect data system development training evaluation 
iterative process crucial achieve performance 
example initial prototype mixed initiative weather information system trained utterances collected simulated oz scenario saw error rates triple deployed telephone wide user population 
utterances continuously collected performance slowly improved point ultimately exceeded original laboratory performance 
level performance achieved continuous data collection system refinement period time 
conversational interfaces ubiquitous telephone researchers easier developers create systems learn improve performance automatically 
hurdles allowing developers create initial prototype 
example address problems producing conversational system new domain language small amount domain specific training data 
achieve goal strive cleanly separate algorithmic aspects system application specific aspects 
develop automatic semi automatic methods acquiring acoustic models language models grammars semantic structures language understanding dialogue models required new application 
issue portability spans different acoustic environments databases knowledge domains languages 
section describes approach taken address challenging issues 

approach approach adopted leverage basic technology successfully deployed sophisticated conversational systems 
reasons 
devoted considerable effort decade developing hlt support conversational interaction 
employing hlt components minimize duplication effort maximize ability adopt technical advances areas 
second advanced hlt components widen pool potential users include novice expert developers web interface rapidly prototype new domain subsequently modify manually 
third limiting hlt capabilities way allow potential prototype systems eventually scale level sophistication capable systems 
lastly focusing attention portability identify weaknesses existing hlt lead better solutions benefit conversational systems 
attempted simple user interface possible providing mechanisms incorporate needed complexities 
accomplish developed web interface illustrated developers specify information nature interactions take place human spoken dialogue system 
experienced developers wishing bypass web interface desiring leverage configure hlt components may voice 
user interface prototype conversational interfaces 
framework developing conversational user interfaces restaurant show give chinese restaurant arlington chinese washington boston arlington name masks city cuisine neighborhood city neighborhood prompt city 
partial file restaurant query domain 
configuration syntax illustrated 
configure understanding developer defines semantic concepts known attributes general functions known actions may invoked user domain 
developer configure system responses dialogue functionality application 
information automatically generated uploaded database tables third party programs entered manually developer 
information stored human readable description xml compiled configure appropriate hlt components 
developer configured application domain compile 
process uses specified information example sentences provided developer configure necessary hlt components 
process usually quite rapid minutes depends domain complexity 
domain compiled developer examine resulting grammar deploy system talk subsequently iteratively refine aspects understanding generation dialogue interface spoken language interface query database content created requiring programming part developer 
applications requiring connections external functionality controlling lights house require developer provide code invoke external functions 

human language technologies user speaks audio data sent speech recognizer natural language understanding component produces plausible semantic representation user spoke 
context resolution incorporate dialogue history context resolve unknown sentence 
example user asked cheaper hotels talked hotel replace semantic representation 
dialogue manager determines respond action asking additional information 
case generates semantic representation response natural language generator converts words response user 
hlt components open source galaxy architecture 
recognizer natural language context resolution dialogue management generation components configurable 
compiler generates appropriate configuration files components 
allows dialogue management component invoke arbitrary user code 
sections describe configuration components greater detail 
understanding speech recognizer uses generic telephone acoustic models phonetic descriptions words vocabulary gram grammar provides likelihoods sequences words describe ways words occur sentences 
recognizer finds sequences words maximize combined likelihood word sequence component grams likelihood individual word waveform 
gram grammar derived language understanding grammar rules example sentences provided developer likelihoods individual words pronunciations 
word pronunciations come large line dictionaries generated rule provided domain developer 
incorporated vocabulary model handle spoken words vocabulary 
recognizer produces ranked list called best list word sequences 
gram grammar word sequence locally grammatical sub sequence words entire sequence may 
natural language component tina uses probabilistic context free grammar combine word sequences best list semantic representation parse tree 
developers specify parsing grammar application 
grammar inferred example specification attributes semantic concepts specified phrases actions sentences attribute phrases 
phrase attribute appears action sentence generated grammar permit phrase attribute 
example cuisine attribute chinese 
request name action chinese listed user ask cuisine 
actual phrase spoken sentence associated cuisine framework developing conversational user interfaces semantic representation 
generated grammar provides complete parse possible backs concept spotting complete parse 
mechanism works fairly generated parsing grammar simple compared written experts allow domains reuse sub grammars concepts times dates prices 
begun address issue allowing developers incorporate sub grammars catering common semantic concepts dates times 
developed new process converts concepts standard semantic representation 
shows example configuring context resolution component 
discourse context resolution section states name specified city cuisine neighborhood inherited dialogue history context semantic representation sentence 
dialogue management developers able configure complete mixed initiative conversational interfaces 
initial interface constrained developers programming experience database query applications 
programming experience perform sophisticated dialogue functions remote cgi script 
alternatives clearly limited ability inexperienced developers create kinds conversational interfaces created experts 
provide flexible dialogues developing generic dialogue manager 
part begun suite easily configurable dialogue flow functions mixed initiative dialogue systems text domain specification format 
illustrated constraints section user invoking request name action city neighborhood specified dialogue manager invoke prompt city routine ask city 
generic dialogue manager functions supporting common semantic concepts applied new domains 
language generation natural language generation process converts semantic representations text 
obvious role generation produce response user speech synthesizer 
responses configured developer web interface modifying default generation templates generated initial compilation process 
language generation process generate internal representations 
cgi applications generated url encoded version semantic representation passed remote application get request 
database query applications generation process formulates sql query semantic representation request 
generic dialogue manager generator create internal form representation context resolution dialogue components 
forms simple semantic representation meaning query augmented discourse dialogue components query context 
hlt infrastructure years developed ways deploy domains fit particular needs 
originally users accessed domains shared telephone line dialogue processing running remote server 
offer support developers want run domains local hardware part research pervasive computing support handheld devices 
easier speech interfaces communicate external applications 
initially accomplished requests provided encoded version semantic frame application running web server 
eliminate need web server allow applications incorporate state information desired provide ways extend system perl python java 
systems generate log files showing details user interactions individual component input output 
provide tools allow domain developers view logs hypertext listen recordings dialogue 
ease discourse dialogue testing debugging system run 
mode previously recorded waveforms best lists text input sent system output examined 
capabilities helpful developers trying improve performance initial prototype 

deployment years numerous experiences developers utility create wide variety speech applications 
familiarize new developers system developed introductory laboratory exercise 
experiences users interacting database applications limited dialogue functionality controlling applications cgi interface 
dialogue management component available extended laboratory explore component depth context hotel information domain 
current laboratory students develop restaurant query system starting database table containing simple attribute value pairs framework developing conversational user interfaces names addresses plus associated values 
initial recognizer natural language component created automatically values table 
discourse dialogue components configured modified file system responses modified 
students telephone communicate systems 
laboratories developed locally remotely 
remote workshop pervasive computing class researchers created speech interface instant messenger client 
web utility laboratory computational linguistics students georgetown university part summer school classes johns hopkins university 
courses varied sessions students little prior background learned build simple restaurant hotel query applications web interface 
part collaboration speech researchers ntt developing japanese version technology 
part researchers built prototype applications including bus timetable information system weather information system 

related research groups attempting easier create new domains 
systems modularize dialogue manager try take advantage fact dialogue broken set smaller sub dialogues dates addresses order easier construct dialogue new domain 
example researchers ogi developed rapid development kit creating spoken dialogue systems freely available students create speech systems 
describe spoken dialogue system creation toolkit able infer complex natural language grammars examples specified developer 
commercial side significant effort develop voice extensible markup language standard enable internet content information access voice phone 
date approaches applied directed dialogue strategies 
addition example specification user interfaces addressed literature focused visual interfaces significantly explored area spoken dialogue 
additionally attempts simplifying process creating dialogue systems query databases 
toth created toolkit allow developer efficiently configure human language technology components relational database tables 
user learn keywords converse system 
microsoft english query commercial product allows developer configure typed natural language interface database content 
system provides great deal flexibility specifying mappings linguistic content database constructs speech interface provided support dialogue discourse 
describes tool similar english query purpose achieved better nl sql translation performance corpus queries popular domains 

summary ongoing activities summarized progress developing utility enable rapid prototyping spoken dialogue systems 
pointed initially experienced developer knows prototype initial step creation conversational interface 
creating high performance system requires sustained data collection continuous development evaluation refinement 
help developers achieve goal require additional unsupervised learning 
lab begun improve system performance processing utterances clearly research necessary 
current compilation process configures speech recognizer language understanding grammar parallel domain description 
added ability configure recognizer information natural language parsing grammar 
plan integrate new method compiler provide increased flexibility developers 
areas research developing dynamic vocabulary capability speech recognizer language understanding components 
give developer increased flexibility modify system capabilities run time 
allow take advantage flexible response planning techniques developing 
part efforts multimodal interfaces augmented attribute values timing information indicate concept spoken 
information modify created application incorporate pen input 
versions utility probably include connection new multimodal component enable flexible interactions 
research supported part darpa contract monitored naval command control ocean surveillance contract monitored systems center san diego industrial consortium supporting mit oxygen alliance ntt 
automation telecom italia directory assistance service field trial results proc 

nuance communications www nuance com barnard consistent approach designing spoken dialog systems proc 
workshop keystone 
zue glass conversational interfaces advances challenges proceedings ieee 
rudnicky creating natural dialogs carnegie mellon communicator system proc 
eurospeech 
thoughtful elephant strategies spoken dialogue systems ieee trans 
sap 
allen trains project case study defining conversational planning agent exper 
theoretical ai 
experimental dialogue system proc 
eurospeech 
rosset design strategies spoken language dialog systems proc 
eurospeech 
gorin riccardi wright may help speech communication 
zue jupiter telephone conversational interface weather information ieee trans 
sap 
seneff polifroni dialogue management mercury flight reservation system proc 
anlp naacl sat 
workshop seattle 
seneff galaxy ii architecture conversational system development proc 
icslp 
glass probabilistic framework segment speech recognition computer speech language 
black pagel issues building general letter sound rules proc 
esca speech synthesis workshop 
glass modeling vocabulary words robust speech recognition proc 
icslp beijing china 
seneff tina natural language system spoken language applications computational linguistics 
glass weinstein facilitating spoken dialogue systems development proc 
eurospeech aalborg 
seneff context resolution server galaxy conversational systems proc 
eurospeech geneva 
polifroni chung promoting portability dialogue management proc 
icslp denver 
seneff genesis ii versatile system language generation conversational system applications proc 
icslp beijing 
steele waterman weinstein oxygen handheld mit lab 
computer science research summary march 
mit project oxygen web site oxygen lcs mit edu sutton universal speech tools toolkit proc 
icslp sydney 
developing spoken dialog systems examples proc 

www org tr example generation custom data analysis applications proc 
iui santa fe 
toth citizen speech interface application generator speech interfaces databases proc 
icslp denver 
www microsoft com sql evaluation features english asp popescu etzioni kautz theory natural language interfaces databases proc 
iui miami 
nakano hazen user utterances improving language models confidence scoring proc 
eurospeech geneva 
seneff automatic induction gram language models natural language grammar proc 
eurospeech geneva 
speech recognition dynamic grammars finite state transducers proc 
eurospeech geneva 
polifroni automatic generation mixed initiative dialogue systems web content proc 
eurospeech geneva 
