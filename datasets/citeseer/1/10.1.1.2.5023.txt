evaluating knowledge representation reasoning capabilities ontology specification languages 
interchange ontologies world wide web www cooperation heterogeneous agents placed main reason development new set ontology specification languages new web standards xml rdf 
languages shoe xol rdf oil aim represent knowledge contained ontology simple human readable way allow interchange ontologies web 
establish common framework compare expressiveness traditional ontology languages ontolingua okbc ocml flogic loom web ontology languages 
result study conclude different needs kr reasoning may exist building ontology application needs evaluated order choose suitable ontology language 
past years set languages implementing ontologies 
ontolingua representative considered standard ontology community :10.1.1.37.7547
languages specifying ontologies loom cycl ocml flogic kr paradigms underlying languages diverse frame description logic second order predicate calculus object oriented years new web standard languages created xml rdf development phase 
consequence changing context new xml ontology specification languages emerged shoe xol oil rdf schema xml schema 
role new languages scenario twofold provide semantics information contained electronic documents exchange ontologies web 
study ontologies web languages representing analysis shown role html xml rdf providing semantics documents web 
purpose analyse tradeoff readability things said expressiveness said inference obtained information represented traditional web ontology languages 
facultad de inform tica 
universidad polit cnica de madrid 
campus de del monte 
madrid 
spain 
tel fax email dia fi upm es facultad de inform tica 
universidad polit cnica de madrid 
campus de del monte 
madrid 
spain 
tel fax email fi upm es oscar corcho mez rez ecai workshop applications ontologies problem solving methods section framework evaluating expressiveness inference mechanisms potential languages specify ontologies 
set criteria consider relevant knowledge representation kr inference mechanisms point view 
section describe called traditional ontology languages 
section focus web ontology languages 
section presents discussion results study 
evaluation framework goal section set framework comparing expressiveness inference mechanisms potential ontology languages 
analysis framework proposed commonkads distinguishes domain knowledge inference knowledge 
summarizes main dimensions framework relationship kr components reasoning mechanisms language 

domain knowledge domain knowledge describes main static information knowledge objects application domain 
identify main kind components describe domain knowledge ontologies 
gruber stated knowledge ontologies formalized kind components concepts relations functions axioms instances 
concepts ontology usually organized taxonomies 
notion ontology somewhat diluted sense taxonomies considered full ontologies 
components procedures rules identified ontology languages ocml 
components outlined procedures difficult find common characteristics languages select set features consider relevant 

concepts concepts broad sense 
concrete elementary electron composite atom real 
short concept said description task function action strategy reasoning process questions try identify expressiveness language define concepts possible define metaclasses classes instances ones 
knowledge representation classes metaclasses slots attributes facets taxonomies procedures relations functions instances individuals facts axioms production rules language provide mechanisms define slots attributes 
example local attributes 
attributes belong specific concept 
instance attribute age belongs concept person 
instance attributes template slots 
attributes value may different instance concept 
class attributes slots 
attributes value instances concept 
attributes 
attributes slots name different behaviour different concepts 
instance attribute author concept thesis different attribute author concept book 
type thesis student type book person 
language provide predefined facets attributes 
default slot value assign value attribute case explicit value defined 
type constrain type attribute 
cardinality constraints constrain minimum maximum number values attribute 
documentation allow include natural language definition attribute 
operational definition include definition selection formula rule instance obtaining value attribute 
may new facets created attributes 
evaluation framework 
evaluation framework 

taxonomies ecai workshop applications ontologies problem solving methods widely organize ontological knowledge domain generalization specialization relationship simple multiple inheritance applied 
exist confusion regarding primitives build taxonomies propose analyse primitives predefined languages 
semantic definitions provided frame ontology ontolingua :10.1.1.37.7547
subclass specializes general concepts specific concepts 
partitions define set disjoint classes 
disjoint decompositions define set disjoint subclasses subclasses parent class 
classification necessarily complete may instances parent class included subclasses partition 
exhaustive subclass decompositions define set disjoint subclasses partition subclasses parent class parent class defined union classes partition 
subclass may wish state class specialization class 
usually kind knowledge represented denial subclass primitive 
languages primitives allow define relations semantic defined axioms rules 

relations inference mechanisms exceptions automatic classifications inheritance monotonic non monotonic simple multiple execution procedures constraint checking reasoning rules backward chaining forward chaining relations represent type interaction concepts domain 
formally defined subset product sets cn 
examples binary relations part connected 
consider relationship relations components ontology 
ask concepts considered unary relations attributes considered binary relations 
special attention deserve functions defined mappings list input arguments output argument 
formally functions defined cn cn 
case ask considered special kind relations 
second related arguments relations functions possible define arbitrary ary relations functions 
possible maximum number arguments 
may type arguments constrained 
possible define integrity constraints order check correctness arguments value 
operational definitions infer values arguments means procedures formulas rules define semantic axioms rules 

axioms axioms model sentences true :10.1.1.37.7547
included ontology purposes constraining information contained ontology verifying correctness new information 
focus characteristics language support building axioms order logic 
second order logic axioms 
axioms defined independent elements ontology named axioms included inside definition elements relations concepts 
instances individuals facts claims terms represent elements domain 
instances usually represent elements concept 
facts term commonly represent relation holds elements 
individuals ontolingua okbc refer element domain class instances facts :10.1.1.37.7547
term claims refers assertion fact instance 
special attention deserves inclusion claims people internet claims want 
agents shouldn interpret claims facts knowledge claims particular instance instances data may prove inconsistent 
questions asked section ones possible define instances concepts 
possible define instances relations facts 
language provide special mechanisms define claims 

production rules production rules follow structure 
express sets actions heuristics represented independently way 
set questions asked ecai workshop applications ontologies problem solving methods possible define disjunctive conjunctive premises 
may chaining mechanism defined declaratively 
possible define truth values certainty values attached rule 
may procedures included consequent 
commonly change values attributes concept add information kb language support updates kb performed adding removing facts claims 

inference mechanisms dimension describes static structures represented called domain knowledge carry reasoning process 
strong relationship inference mechanisms domain knowledge components structures representing knowledge basis reasoning process seen 
analyse features asking supported language language provide inference engine reasons knowledge represented language 
sound 
complete 
inference engine perform automatic classifications 
inference engine deal exceptions 
exceptions considered sense attribute attribute defined concept concept subclass analyse definition attribute concept overrides definition attribute concept 
possible inheritance 
kind inheritance allowed monotonic non monotonic simple multiple 
procedures executable 
performed kind constraint checking axioms defined language 
reasoning rules language allow perform forward backward chaining 
traditional ontology specification languages section analysis languages considered standards ontology community ontolingua okbc ocml flogic loom 
serve comparative study section 

ontolingua ontolingua language kif frame ontology ontology building language ontolingua server :10.1.1.37.7547
kif knowledge interchange format developed solve problem heterogeneity languages knowledge representation 
provides definition objects functions relations 
kif declarative semantics order predicate calculus prefix notation 
provides representation meta knowledge allows representation non monotonic reasoning rules 
kif interchange format tedious specification ontologies se 
frame ontology built top kif allows ontology specified paradigm frames knowledge representation ontology modeling ontologies frame approach 
terms class instance subclass instance included ontology 
frame ontology expressive kif knowledge expressed kif expressed frame ontology ontolingua allows include kif expressions inside definitions frame ontology 
ontolingua language allows build ontologies manners exclusively frame ontology vocabulary possible represent axioms kif expressions languages simultaneously depending ontology developer preferences 
currently inference engine developed ontolingua 
case want develop customized build okbc api defined section 

okbc okbc acronym open knowledge base connectivity previously known generic frame protocol 
specifies protocol accessing knowledge bases stored frame knowledge representation systems considered complementary language specifications developed support knowledge sharing 
gfp knowledge model implicit representation formalism underlying okbc supports representation knowledge provides set representational constructs commonly frame representation systems constants frames slots facets classes individuals knowledge bases 
defines complete tell ask interface knowledge bases accessed okbc protocol procedures syntax order describe complex operations perform knowledge base accessing network 
eventually developed okbc ontology ontolingua fully compatible okbc protocol 
study referring okbc mean api maximum expressiveness permitted 

ocml ocml stands operational conceptual modeling language 
originally developed knowledge media institute uk context vital project provide operational modeling capabilities vital workbench 
current version language 
provides mechanism expressing items relations functions rules backward forward chaining classes instances 
order execution language efficient adds extra logical mechanisms efficient reasoning procedural attachments 
general tell ask interface implemented mechanism assert facts examine contents ocml model 
pragmatic considerations taken account development ocml 
compatibility standards ontolingua ocml considered kind operational ontolingua providing theorem proving function evaluation facilities constructs 

flogic ecai workshop applications ontologies problem solving methods flogic acronym frame logic 
flogic language integrates frame languages order predicate calculus 
accounts clean declarative fashion structural aspects object oriented frame languages 
features include object identity complex objects inheritance polymorphic types query methods encapsulation 
sense flogic stands relationship object oriented paradigm classical predicate calculus stands relational programming 
flogic model theoretic semantics sound complete resolution proof theory 
small number fundamental concepts come object oriented programming direct representation flogic secondary aspects paradigm easily modeled 

loom loom high level programming language environment intended constructing expert systems intelligent application programs 
descendent kl family languages characterized efficient automatic classifiers 
loom achieves tight integration rule frame paradigms 
supports description language modeling objects relationships assertion language specifying constraints concepts relations assert facts individuals 
procedural programming supported methods production classification inference capabilities support powerful deductive reasoning form inference engine classifier 
capabilities reside framework query assertion retrieval 
web languages building ontologies section provides analysis new languages created context internet xml rdf xol shoe oil motivation study 
state art web standards 
second describe web languages building ontologies 

web standards 
xml xml metalanguage derives sgml standard general markup language 
developed xml working group world wide web consortium ease implementation interoperability sgml html 
language world wide web main advantages easy parse syntax defined human readable 
software tools parsing manipulating xml xml widely 
xml allows users define tags attributes define data structures nesting extract data documents develop applications test structural validity xml document 
xml basis ontology specification language xml ontology languages main advantages definition common syntactic specification means dtd document type definition 
information coded xml easily readable humans intended direct coding ontologies information ontology coded ontology language easily read understood 
represent distributed knowledge web pages embedded 
xml presents disadvantages may influence ontologies specified standard defined order allow lack structure information inside xml tags difficult find components ontology inside document standard tools available parsing manipulating xml documents making inferences 
tools created order allow inferences languages xml 
xml special features specification ontologies just offers simple powerful way specify syntax ontology specification language 
xml purposes providing syntax set languages xol oil definition languages just consists describing semantics new tags created covering ontology exchange needs exploiting communication facilities world wide web 
reasons xml included comparison performed section 

rdf rdf stands resource description framework 
developed creation metadata describing web resources 
examples rdf rdf schemas ontological engineering may analyzed 
strong relationship stands rdf xml 
fact defined complementary goals rdf possible specify semantics data xml standardized interoperable manner 
broad goal rdf define mechanism describing resources assumptions particular application domain structure document containing information 
data model rdf consists object types resources subjects entities referred address www properties predicates define specific aspects characteristics attributes relations describe resource statements objects assign value property specific resource 
rdf data model provide mechanisms defining relationships properties attributes resources 
role rdfs acronym rdf schema specification language declarative language definition rdf schemas ideas knowledge representation semantic nets frames predicate logic simpler implement expressive full predicate calculus languages cycl kif 
core classes class resource property hierarchies type constraints defined core properties type subclassof subpropertyof seealso 
core constraints defined 
rdf acronym commonly refer combination rdf rdfs 
rdf schema consists declaration attributes corresponding semantics context rdf ecai workshop applications ontologies problem solving methods ontology defined rdf lack functions axioms concepts relations instances claims easily defined 

web standards ontologies 
xol xol stands xml ontology exchange language 
xol designed provide format exchanging ontology definitions set interested parties 
intended development ontologies intermediate language transferring ontologies different database systems ontology development tools application programs 
xol allows define xml syntax subset okbc called okbc lite 
okbc defines protocol accessing frame representation systems xol may suitable exchanging information different systems www 
main handicap frames defined okbc excluded language classes hierarchies slots facets defined 
xol files textual text editor xml editor may author xol files 
expected xml tools soon available xol documents easily generated 

shoe shoe stands simple html ontology extension 
developed university maryland 
shoe extension html aim incorporating machine readable semantic knowledge html world wide web documents 
adapted order xml compliant 
intent language possible agents gather meaningful information web pages documents improving search mechanisms knowledge gathering 
phase process achieve consists defining ontology describing valid classifications valid relationship annotating html pages describe pages shoe ontology isa hierarchy classes called categories plus set atomic relations set inferential rules form simplified horn clauses 
classes relations inferential rules defined 
important feature included shoe ability claims information discussed section 

oil oil ontology interchange language proposal joint standard describing exchanging ontologies 
early development phase designed provide modelling primitives commonly frame description logic ontologies existing proposals okbc xol rdf simple clean defined semantics automated reasoning support 
oil ontology structure components organized layers object level deals instances meta level ontology definition contains ontology definitions second meta okbc ocml loom flogic xol shoe rdf oil concepts relations functions procedures instances axioms production rules table 
definition main elements domain knowledge 
concepts okbc ocml loom flogic xol shoe rdf oil metaclasses attributes template instance attrs class attrs 
polymorphic local scope facets default slot value type constraint cardinality constraints documentation procedural knowledge adding new facets table 
definition concepts 
level ontology container contains information features ontology author 
concepts relations functions axioms defined oil ontology definitions 
results comparison languages results applying evaluation framework described section described section 
worth mentioning common evaluation framework different knowledge representation languages different knowledge representation paradigms frame description logics object centered 
information tables sections filled indicate supported feature language non supported features non supported features manage support doing information available features restricted implemented order support 
contents tables represent situation languages may change evolution 

domain knowledge information contained table shows glance main characteristics ontology specification languages selected study 
compare types information represented 
concepts relations instances defined easily languages 
okbc flogic frame languages relations represented frames special elements provided language 
okbc axioms refer ontolingua 
ecai workshop applications ontologies problem solving methods supported tell ask part api deductive storage guarantees okbc implementations 
functions procedures axioms defined webbased languages restricted forms axioms deductive rules definable shoe 
worth mentioning procedures definable lisp languages production rules just definable ocml loom 

concepts table summarizes important features language provide describing concepts ontology 
divided sections metaclasses definition attributes definitions properties attributes facets 
note languages allow definition meta classes restricts expressiveness achieved language support 
instance attributes type constraints attributes defined chosen languages 
results rest values depend languages glance table shows traditional ontology languages allow define features web languages 
procedural knowledge inside definition attributes supported ocml loom due operational behavior 
included definition ocml attributes means special keywords prove lisp fun simple facets definition loom attributes means keywords sufficient primitive implies 
flogic just allows define maximum cardinality slots minimum cardinality set 
taxonomies okbc ocml loom flogic xol shoe rdf oil subclass exhaustive subclass partitions disjoint decompositions partitions subclass table 
definition taxonomies concepts 
relations functions okbc ocml loom flogic xol shoe rdf oil functions relations concepts unary relations slots binary relations ary relations functions type constraints integrity constraints operational definitions table 
definition relations functions 

taxonomies instances okbc ocml loom flogic xol shoe rdf oil instances concepts facts claims table 
definition instances 
axioms okbc ocml loom flogic xol shoe rdf oil order logic second order logic named axioms table 
definition axioms 
defining taxonomies just primitive predefined languages correctly handled subclass 
ontolingua loom languages rest primitives subclass declared denial subclass 
primitives defined relations rest languages consequence special treatment 
flogic axioms defined order provide semantics 
oil allows define primitive subclass possible define disjoint decompositions 
traditional ontology languages expressive 

relations functions see ontology languages allow define relations functions ontologies 
relations important elements ontology supported ontology languages desirable characteristic relations implemented languages 
functions included languages 
languages represent concepts unary relations ontology relations rest languages clearly distinguish concepts relations different components 
attributes usually considered binary relations flogic considered ternary ones 
great semantic differences analysing role functions play different languages 
languages ecai workshop applications ontologies problem solving methods kif consequently ontolingua consider functions special case relations th element relation unique preceding elements 
loom consider functions relations result calculated domain arguments 
ocml functions considered modelling elements play role completely different relations 
flogic functions considered methods defined inside concept 
value calculated deductive rule associated method previously declared 
flogic okbc rdf oil define ary relations directly 
define associative classes means binary relations 
languages allow definition type constraints arguments main differences traditional web ontology languages lays definition integrity constraints ones don allow define kinds constraints relations 
comments operational definitions relations just ocml loom flogic allow define operations inside relations difference loom provides operational definitions just inferential purpose ocml provides non operational definitions representational purposes 
flogic kind operations defined axioms defined apart 
ontolingua support user defined lisp lambda bodies relations certain relations procedural attachments activated tell ask interface instance asking reply single binding 

instances instances concepts relations facts supported languages 
claims just allowed web ontology languages 
due fact management information comes different sources intrinsic characteristic web environment languages specialized ways treat information 

axioms production rules okbc ocml loom flogic xol shoe rdf oil premises conjunctive disjunctive consequent truth values execution procedures updating kb table 
definition rules 
reasoning okbc ocml loom flogic xol shoe rdf oil inference engine sound complete classification automatic classif 
exceptions exception handling inheritance monotonic non monotonic single inheritance multiple inheritance procedures execution procedures constraints constraint checking chaining forward backward table 
reasoning mechanisms language 
measure expressiveness 
richest axioms defined expressive language case ontolingua allows definition order second order logic axioms 
ocml flogic allow define order logic axioms independently rest components ontology 
loom just allows define order logic axioms inside definitions relations concepts functions 
rest languages xol allow restricted types axioms 
okbc just supports subset axioms represented kif included frame tell ask interface shoe just allows define deductive rules 
oil syntax axioms defined rdf studies currently trying specify syntax semantics commonly axioms 
ecai workshop applications ontologies problem solving methods 
production rules production rules components ontology ocml loom oil 
loom distinction purely deductive rules side effecting procedural rules production rules 
ocml distinction defining backward forward ones 
ocml loom allow define chaining performing reasoning knowledge defined ontology 
far oil concerned rules just weak form general inclusion axioms 
shoe allow define production rules inference rules stated previous section 

reasoning clear distinction kr reasoning exists languages ocml 
instance ontolingua expressive languages chosen study inference engine implemented 
ocml allows define features concerning reasoning inside representational elements instance rules defined backward rules forward ones chaining explicitly defined 
just flogic oil inference engines sound complete desirable feature representation language difficult 
automatic classifications performed description logicbased languages loom oil 
exception handling mechanism addressed general language developers flogic handling exceptions 
works carried languages loom support 
single multiple inheritance supported languages xol conflicts multiple inheritance resolved 
languages basically monotonic usually include non monotonic capabilities 
instance non monotonic capabilities ontolingua ocml related default values slots facets 
xol rdf specifications explicit definition behaviour inherited values 
languages allow define procedures allow execute 
constraint checking performed traditional ontology languages 
information constraint checking xol available 
okbc constraint checking guaranteed included implementations 
parametrized switched 
constraint checking shoe performed conflicts thought frequent web resolving problematic 
type constraint checking performed necessary 
chaining shoe defined language freedom exists implementation may choose 
ocml allows define chaining rules defining default chaining backward 
loom performs kinds chaining flogic 

studied main components ontology language knowing kr reasoning mechanisms needed application framework avoid blind decisions selection ontology languages 
claim different needs kr exist nowadays applications languages suitable 
interchanging ontologies web strongly recommend web languages 
representing modeling ontologies high expressiveness needs recommend traditional ontology languages 
ontologies considered just taxonomies xml languages problem 
performing reasoning inside agents xml languages provide inference engines 
traditional ontology languages provide translators computable languages 
additional analysis existing tools build ontologies useful task determining suitable needs 
analysis 
evaluation framework context project ist project number aims create multilingual electronic marketplace companies europe 
user ontologies developed project filled information tables section 
union characteristics expressed determine ideal kr reasoning needs languages multilingual knowledge european electronic marketplace full ist consortium comprises france telecom sema group sae upm national technical univ athens univ montpellier international vtt france 
started st february august 
see www lu hlt projects ecai workshop applications ontologies problem solving methods specify ontologies 
possible comments feedback developers users mentioned languages verified tables chaudhri xol stefan decker flogic bel az loom yolanda gil loom jeff heflin shoe ian horrocks oil enrico motta ocml james rice ontolingua okbc tom russ loom 
farquhar fikes rice ontolingua server tool collaborative ontology construction :10.1.1.37.7547
proceedings kaw 
banff canada 
macgregor inside loom 
sigart bulletin 

june 
lenat guha building large knowledge systems 
representation inference cyc project 
addison wesley 
reading 
massachusetts 

motta reusable components knowledge modelling 
ios press 
amsterdam 

kifer lausen wu logical foundations object oriented frame languages 
journal acm 

bray paoli sperberg extensible markup language xml 
recommendation 
feb 
www org tr 
lassila swick resource description framework rdf model syntax specification 
proposed recommendation 
january 
www org tr pr rdf syntax 
luke heflin shoe 
proposed specification 
shoe project 
february 
www cs umd edu projects plus shoe spec htm karp chaudhri xol xml ontology exchange language 
july 
horrocks fensel harmelen decker erdmann klein oil nutshell 

brickley guha resource description framework rdf schema specification 
proposed recommendation 
march 
www org tr pr rdf schema 
thompson beech maloney mendelsohn xml schema part structures 

www org tr xmlschema 
van harmelen fensel surveying notations semantics web sources 
proceedings ijcai workshop ontologies psms 

schreiber akkermans shadbolt van de velde wielinga knowledge engineering management 
commonkads methodology 
mit press massachussets 

gruber translation approach portable ontology specification 
knowledge acquisition 


studer benjamins fensel knowledge engineering principles methods 
dke pp 
genesereth fikes knowledge interchange format 
technical report 
computer science department 
stanford university 
logic 

chaudhri farquhar fikes karp rice generic frame protocol 
july 
amann integrating ontologies thesauri build rdf schemas 

prot edit rdf 
technical report 
knowledge modelling group 
stanford university 
february 
www smi stanford edu projects protege protege rdf html studer 
comparative study ontological engineering tools 
proceedings kaw 
banff canada 

