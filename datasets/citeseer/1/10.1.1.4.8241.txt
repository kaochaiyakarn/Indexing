propose approach modeling surface details scales feathers thorns 
types cellular textures require representation detail texture mapping inconvenient model hand crafted geometry 
generate patterns geometric elements biologically motivated cellular development simulation constraint keep cells surface 
surface may defined implicit function volume dataset polygonal mesh 
simulation combines extends previous developmental models constrained particle systems 
key words particle systems developmental models data amplification constraints texture mapping bump mapping displacement mapping years computer graphics researchers practitioners problem creating displaying surfaces having organic appearance 
texture maps bump maps related methods attain appearance detailed geometry creating 
techniques suffice viewpoint close dimensional geometric structure surface texture apparent 
interested making images surfaces covered interacting geometric elements scales feathers thorns fur 
model elements small cells constrained lie surface 
cells interact form cellular textures surface textures geometry orientation color 
approach combines properties particle systems developmental models reaction diffusion methods system 
shows example combining approaches 
challenges making images types materials geometry pronounced texture bump maps 
permission digital hard copy part personal classroom granted fee provided copies distributed profit commercial advantage copyright notice title publication date appear notice copying permission acm copy republish post servers redistribute lists requires prior specific permission fee 
acm cellular texture generation kurt fleischer david alan barr california institute technology pasadena ca email dhl gg caltech edu thorny head flat thorn shaped cells constrained lie surface defined polygonal dataset human head 
flat cells neck chest regions thorn shaped cells head 
orientation thorn approaches neighbors leading continuous field thorns sweeps head 
size thorns related level detail model smaller thorns placed smaller features 
difficult map appropriate texture coordinates global geometry topology 
placement orientation coloration shape individual elements may depend neighboring elements surface characteristics local curvature global phenomena sunlight 
sco simulate convert render sco cells sco geometry image cellular particle simulator computes locations orientations values associated cells 
information converted geometry appearance parameters passed renderer create image 
note cell orientations red arrows orientations thorns 
geometric modeler created geometric object changes shape bump thorn single parameter 
cell state variable control parameter section 
potentially complicated elements difficult create geometric textural models objects hand 
turn automatic data amplification techniques similar structured particle systems generate models plants 
developmental approach generating organic patterns natural consider biologically simulation 
previous developed biological developmental model simulate study patterns generated motions interactions discrete cells 
artificial cells move grow divide simulated petri dish extracellular environment 
extracellular environment contain physical barriers diffusing chemicals gravity ability form variety interesting patterns system prompted explore application geometric texture generation 
textures model formed interacting geometric elements 
actual fur scales thorns may formed single cells multiple cells 
case assume texture patterns arise interactions discrete elements capable movement orientation change model elements cell 
patterns formed cells experience physical processes collision adhesion local interactions 
software structure approach advocated automatically grow cellular textures simulating discrete cells surfaces 
convert resulting cellular information model geometry coloration rendered 
images generated oriented spherical cells converted thorns scales shapes rendering 
overview remainder structured follows 
section describes related 
followed overview system architecture section 
section describes cellular particle system includes examples cell programs implement various behaviors 
section discuss particle converter cell positions orientations parameters 
results section describes examples shown figures 
final section presents discussion approach directions 
related approach synthesis extension ranging morphological models general texture mapping 
section discuss approach context related areas levels detail biologically motivated morphogenesis reaction diffusion methods particle systems levels detail choosing appropriate level detail image synthesis viewing distance long recognized important topic computer graphics 
large scales geometric models necessary intermediate scales texture mapping similar techniques may sufficient smallest scales illumination models suffice describe object 
level detail models addressed falls hand crafted geometric models bump texture mapping 
range geometric levels available modular nature technique 
complex oriented textures created rendered ways notably texels 
texel approach intermediate geometry mapping techniques leaves open question arrange texel elements appropriately 
approach addresses problem produce models rendered texels 
displacement mapping technique adding geometric detail surfaces 
texels displacement mapping technique address problem determining displacements create specific effect field similarly oriented thorns 
possible application technique images demonstrate pattern formation capabilities cell simulator 
create displacement maps example creating flow fields 
biologically motivated morphogenesis cellular development system forms basis incorporates elements established biological models morphogenesis turing morphogens odell mechanical models lindenmayer system cell lineage determinants model cell contact adhesion 
known computer graphics biologically 
combination developmental models geometric constraints enables creation organic patterns 
explored plant growth plant organ placement patterning 
interacting geometric elements model placement plant organs 
cells generalization elements additional capabilities including independent movement adhesion changes size orientation due cell cell interaction 
patterns modeled reaction diffusion equations surfaces defined sweeping generating curve logarithmic spiral 
shares concept applying pattern formation models surfaces 
continuous reaction diffusion equations generate patterns differs discrete cells 
types cellular texture investigating choice discrete model appropriate 
spatially oriented models plant growth capable generating attractive plant images 
placement geometric objects environment plants affects growth 
importance combining environmental endogenous mechanisms forming organic shapes computer graphics demonstrated environmentally sensitive systems allow interaction environment development structure defined system 
application synthetic elements sense global position orientation pruned bounding surface 
combines geometric environmental factors endogenous developmental model describe cell behavior 
differ plant models discrete cells able move rotate independently 
reaction diffusion methods reaction diffusion equations proposed model morphogenesis turing 
continuous approximation sheet discrete cells interacting time 
system models discrete cells explicitly generate patterns similar continuous reaction diffusion equations detailed model biological system 
reaction diffusion equations successfully applied generation texture maps 
natural phenomena appealing organic quality 
addition avoid problems parameterization topology creating pattern directly surface 
approach shares benefits 
implementation include discrete cells continuous reaction diffusion computation 
models able interact discrete cells emit continuously diffusing chemicals 
implementation support continuously diffusing reacting chemicals 
able reproduce forms reaction diffusion behavior cell cell interaction discrete model 
particle systems early particle systems little interaction molecular models criteria 
includes elements witkin heckbert surface constrained particles orientation constraints szeliski :10.1.1.27.2510
boids introduced somewhat sophisticated interacting particles programmable behaviors 
addition boids interacting cells sense react environment 
software architecture arrange process software modules 
cellular particle simulator surface constraints computes locations orientations sizes parameters cells behavioral specification 
allows particles constrained surface implicit polygon mesh volume dataset isosurface 
parameterized particle geometry converter converts cell positions orientations parameters shape appearance parameters 
renderer takes shape appearance parameters plus scene description renders scene 
images generated john snyder ray tracer chosen primarily speed large datasets 
implementation framework involves addition cell cell interactions orientation constraints surface constraints traditional particle simulator 
simple version particle converter implemented geometric modeler place geometric object particle location appropriate size orientation 
cellular particle simulator particle converter described detail sections 
cellular particle simulator cellular particle system combines cell cell interactions adhesion oriented particles surface constraints unified framework 
additional discussion cell simulator implementation 
system allows user specify cell behaviors go surface align neighbors combining modular cell programs 
cell programs order differential equation terms modify cell state see table 
section discuss simulator delve detailed mathematical description cell programs section 
section describes cell programs create simulations shown figures 
section presents methods incorporating various types surfaces surface constraint method 
simulator particular simulation run user defines cell state variables extracellular environment cell programs 
initial conditions cells 
users control simulation writing cell programs describe behaviors cells putting surfaces environment 
direct interaction possible simulation process 
halt simulation cell programs choose individual cells groups cells modify remove 
simulation restarted modifications 
convenient freeze certain cell values reached desirable state 
frozen values remain fixed continue vary simulation restarted 
particular seed cells placed frozen situations user wishes achieve certain effect 
instance frozen cells particular orientation encourage fur run particular direction surface 
definitions cell entity position orientation shape arbitrary length state vector parameters chemical concentrations reaction diffusion simulation 
generalization particle particle system 
cell state variables state cell die split vector containing values representing position orientation size concentrations chemicals cell sci cell membrane sai 
variable trigger event cell splitting 
occurs value state variable exceeds threshold split 
defined similarly associated threshold die 
real cells chemicals cell membranes adjacent cells bind enable cells sense contact 
chemicals 
binding membrane chemicals specific chemicals bind complementary pairs bind 
model allows user specify properties membrane chemicals provides amount bound membrane chemical environmental parameter described 
define cell motion specify cell programs contribute viscous force cell 
attempted motion cell modified influence collisions adhesion viscous drag 
currently compute inertial dynamics viscous dynamics mv cells easier control predict 
collision forces computed polynomial penalty function kx xo overlap cells 
represent cell orientation quaternion 
exposition follows refer cell local coordinate frame basis vectors ex ey ez 
coordinate frame obtained rotating lab frame quaternion extracellular environment cell external environment vector parameters provided input cell programs 
parameters describe cell sense current position ai values represent amounts membrane chemicals bound membrane chemicals neighboring cells 
value gradient potential field implicit function concentration diffusing chemical provided pi pi 
fields evaluated current location cell generally different values different locations 
scalar vector fields provided ui vi functions position 
orientation cell relative neighbors available cell programs vectors vector describes rotation align cell ei axis average orientation adjacent cells 
parameter align orientations cells shown 
direction specifies axis rotation magnitude specifies rotation angle similar angular velocity 
example consider computation average relative axis cell computed sum neighboring cells neighbors ke xk cos axis cell cell neighbors 
cell programs cell cell programs order differential equations describing state changes time 
examples table section 
cell program function cell current state environment expressed 
different types cells different cell programs different combinations cell programs define behaviors 
cells share set cell programs generally behave differently experience different local conditions depending position 
entire system differential equations solved obtained superposing ordinary differential equations cell programs cell 
additional equations arise computation environment diffusion chemicals current implementation 
order handle discontinuous changes cells created die piecewise ordinary differential equation solver app 

mathematical basis cell programs differential equations general tool creating dynamic behavior 
cell programs employ equations arising physical models arising constraint solution techniques 
higher order linear differential equations mechanical chemical systems rewritten multiple order differential equations cell programs addition state variables 
case simulation dynamics reflect dynamics equations 
order write constraints cell programs formulate energy functions minimized 
constraint expressed energy function ei parameters describing environment 
hard constraints fit framework lagrange multipliers 
relative constants ki weight soft constraints express energy minimize minimize energy gradient descent modifying state ds dt nx ei ki superposition cell programs energy expressed sum cell programs ds dt sums terms constraint 
find convenient write cell programs incremental collections constraints 
write ds dt example programs table 
multiple cell programs added conveniently 
note constraint cell programs dynamics simulation depends gradient descent algorithm necessarily physically meaningful 
behavior environment requirements cell program go surface 
implicit surface 
kf rf die far surface 
implicit surface 
die die align axis vector field 
vector field 
ey key cos ey kv ey cell axis 
align axis neighbors 
axis orientation relative neighbors 
align axis neighbors 
axis orientation relative neighbors 
maintain unit quaternion 
adhere cells membrane chemical binds 
divide surface covered 
amount bound 
split split split set size relative surface feature size value reflects size nearest feature surface 
example reaction diffusion amounts bound membrane discrete cells 
chemicals 
user specified membrane chemical binds binds 
table example cell programs 
scalar vector fields function spatial location evaluated current location cell see cell program descriptions section 
example cell programs cell programs listed table exemplify types cell programs figures 
describe briefly 
remember contributions multiple terms added single differential equation state variable notation 
cell programs shown form dsi dt si constant causes si quickly approach value 
go surface 
cell program implements constraint keep cell implicit surface 
approximation gradient rf available environment 
simulation runs cell program descend gradient come rest surface 
parameter determines speed particle approaches surface 
die far surface 
recall variable die crosses threshold die triggers cell death section 
cell program cause die rise threshold quickly cell greater certain distance surface 
computing requires measure distance surface 
implicit surfaces figures approximation distance surface 
equation table causes cells distance greater die 
similar cell programs cause cell die large orientation far neighboring cells due condition function cell environment internal state 
align vector field 
example align cell ey vector field 
vector field evaluated cell current location compute vector represents transformation required rotate ey axis rotation length specifies angle rotate 
formulation works cell axes 
form cell program comes equation defines rate change quaternion angular velocity 
multiple cell programs form terms add allows constrain axes cells 
orientation constraints conflict cell orientation approach average orientation 
don conflict constraints satisfied 
align neighbors 
orientation constraints cell andz axes fully constrain orientation 
constraining axes sufficient cases vector field collinear axis 
having extra constraint keeps running problems case aids convergence cell alignment process 
maintain unit quaternion 
wise add constraint ensure quaternion stray far unit quaternion integration differential equations 
simple constraint 
table shows term constraint comes minimizing energy expression describes deviation unit quaternion 
adhere cells 
equation causes variable representing surface chemical approach stay value 
pair cells expressing stick come contact force required pull apart 
environment vector cell report amount chemical bound cell may cell programs determine cell contacted cell 
amount bound computed contact area cells concentrations cell 
divide surface covered 
divide amount bound surface chemical reaches level 
reports total amount bound cells contact gives cell means determining neighbors 
note mechanism general utility just counting neighbors 
instance cell twice concentration ofa contribute 
auxiliary function cell program compute continuous version condition 
function computes continuous version boolean condition tanh value function near near zero 
set size relative surface feature size 
cell sizes related sizes features polygonal database 
achieved providing cells value represents area nearest triangle 
value pass information local curvature parameter wish change cell behavior 
example reaction diffusion discrete cells 
full derivation set equations scope describe equations briefly 
equation set defines genetic switch tends drive values depending influence term terms activator inhibitor models activator inhibitor propagated activity membrane chemicals 
equations determine interactions membrane chemicals lead effective diffusion value cells 
value determine final rendered shape cell illustrated figures 
surface constraints applied surface constraints variety surface classes polygonal mesh implicit function isosurfaces volume data 
surface constraint cell program evaluates implicit function enable cell find stay surface table 
surfaces create figures defined triangular meshes 
create rough approximation implicit function meshes 
method fact doesn exact 
implement function constructing approximate kd tree triangular mesh 
constructing true kd tree additional vertex may add new partitions 
approximation adds necessary partition added vertex 
tree smaller faster precompute longer gives closest point 
evaluate function look triangle center kd tree supposedly nearest point 
check adjacent triangles see closer improve characteristics approximation 
compute direction distance triangle gradient implicit function 
find approximation conjunction local search satisfactory application 
particle converter particle converter converts information particles environment geometry appearance parameters rendering 
receives results simulation including position orientation size cell concentration reaction diffusion chemicals arbitrary user defined parameters type color 
may access information far cell surface properties surface near cell curvature converter knows cells contact 
particle converter concept proven extremely convenient 
enables variety useful operations including choosing appropriate representation cell screen size smoothly changing appearance cell continuously varying parameter cell positions generate spatial subdivision similar cell orientations compute flow field surface useful displacement maps experimenting various geometries simulation dataset 
output particle converter collection geometry appearance information suitable particular renderer 
collection generally include geometric primitives cell local texture transparency bump information 
geometry simple cell rendered polygons green texture map 
complicated parameterized thorn shape cell state information 
particle converter contact information calculate size shape geometric primitives neighboring cell proximity interpolate parameters orientation cell centers 
implemented particle converters 
provides options choosing particular geometry texture cell 
addition considers information associated underlying polygons body part represents anatomical model lips eyes change rendering cells certain areas seen lips man 
second particle converter implemented general purpose modeler 
advantage flexibility modeler create parameterized objects bump shape shown 
modeler create top image thorny spheres distances rendered fewer polygons 
bottom image shows closeup nearest furthest objects see reduced number polygons 
thorny spheres 
rendering appropriately scaled representation drawbacks data amplification techniques ability generate amount geometry render 
ameliorate particle primitives appropriate size object final image 
approach carried instance creating texture maps cell positions 
results section list series examples highlight features system 
scales shows views spherical object uniform covering similarly oriented cells 
cell programs incorporate terms divide surface covered stay surface die pushed far surface 
initially cells placed near surface allowed divide wander 
cells soft constraint align axes gradient surface implicit function align axes neighbors 
note singularities orientations cells arise naturally sphere due topology 
visible near scales views spherical object uniformly covered similarly oriented cells 
cell rendered group polygons texture transparency map 
polygons tilted slightly give layered appearance 
cellular textures handle unusual topologies 
side sphere 
standard texture mapping method introduces particular parameterization problems stretching shrinking texture 
problem shows cellular texture approach capable creating textures surfaces unusual topologies 
necessary parameterization surface 
surface designed john hughes john snyder 
thorny head changing cell size match surface features examples described far cells relatively uniform size 
shows example cell size related detail level underlying polygonal model 
achieve providing cells environmental variable area nearest triangle underlying polygon mesh 
note finer texture geometry eyes mouth 
different rendering parameters chosen properties underlying polygonal model 
polygon underlying database associated region body 
particle converter assigned different shading properties cells head neck regions 
eyes underlying polygonal representation shows cell texture 
thorny spheres differentiated cellular textures example shows important capabilities system 
shows creation simple reaction diffusion patterns surface concentrations cell chemicals change parameters rendered geometry ability restart simulations previous state new cell programs causing new behaviors occur 
cells reaction diffusion equations similar table create patterns chemicals cells 
diffusion chemicals occurs contact cell membranes occur adjacent cells 
geometric modeler created parameterized geometric object changes bump thorn single parameter 
particle converter sets parameter value state variable representing concentration reaction diffusion chemicals 
see patch cells front sphere little chemical rendered bumps larger patch back chemical rendered thorns 
addition sharp boundary patches note height thorns back patch varies continuously sweep sphere 
simulations began earlier sphere simulation left new rules cause cells differentiate 
common motif user interaction system halt simulation modify cell programs parameters continue simulating 
bear surface show fur covered model bear defined isosurface sampled volume data 
bear fur natural looking orientation 
bear left fully fur started single cell set rules similar distribute orient cells 
cell bear rendered group geometric objects meant roughly represent thick hair 
bear right fur result serendipitous combination unintentional cell programs 
having cell align neighbors cell chooses neighbor align 
cells attempt align neighbors oriented directly opposing direction 
bear started arbitrarily chosen cells surface 
additional specific orientation constraints cause fur run naturally limbs 
cell programs added cause fur shorter region face longer change coloration orientation curvature bear features 
discussion combination particle constraint techniques developmental models enables generation variety cellular textures shown figures 
approach powerful method creating attractive computer graphics models organic objects 
experience making cellular textures encountered difficulties describe 
limitations associated current implementation remedied changing basic framework 
problems simulation speed data explosion easily require research address fully 
commercially produced computer graphics films videos contain models textures appear similar 
techniques generate generally proprietary unpublished definitively compare 
software orienting fur cg character developed industrial light magic 
interesting note discussion difficulties encountered closely parallels experience 
shapes spherical shapes cells simulation generally shapes want render particle converter objects undesirable intersections 
minimized careful choice cell geometry robust solution desired geometric shape directly cellular particle simulation 
allow cell programs calculate collisions accurate geometry 
experience writing cell programs writing cell programs difficult 
programming independently moving cells specifying differential equations desirable properties requires different intuition types programming takes get right 
tasks gets easier practice 
suggestions programming paradigm copy combine known cell programs researchers surface orientation constraints 
think constraints energy formulation section 
satisfy constraint time get cell positions right modify attributes 
force certain problem cells certain way direct interaction section 
kill problem cells section 
apply artificial evolution patient 
simulation speed simulations slow kinds cell programs 
run seconds large datasets take hours bear head 
generally performance degrades differential equations get stiff 
behaviors clever cell programs described avoid creating stiff differential equations run faster 
data explosion data produced simulation particle converter get large 
partially addressed parameterizing particle converter output viewing distance 
simulation compute cells cover surfaces viewing distance 
varying thorns 
reaction diffusion equations determine pattern bumps thorns spheres 
note continuously varying thorn height thorn curvature center rightmost spheres 
bear left fully cells oriented neighbors 
bear right patches cells 
directions extend 
plan continue extending refining cell programs generate complex cellular textures 
interested running simulations objects move change shape 
modeling motion feathers wings flying bird hair running animal exciting 
initial experiments discussed indicate feasible 
implementing sophisticated cell geometries particle simulator give realistic placement detail avoid self intersections rendering 
explore possibilities creating shapes directly fundamental interactions cells surface constraint 
acknowledgments erik designing implementing kd tree approximation providing helpful suggestions 
grateful allen matt cindy ball dan louise marcel barbara meier mark montague alf preston ravi de sha denis zorin valuable discussions support code proofreading 
mri data taken huntington mri center pasadena ca 
supported part apple dec hewlett packard ibm 
additional support provided nsf asc part nsf arpa stc computer graphics scientific visualization doe de fg er part center research computational biology beckman foundation national institute drug abuse national institute mental health part human brain project 
opinions findings recommendations expressed document authors necessarily reflect views sponsoring agencies 
james arvo david kirk 
modeling plants automata 
proceedings pages 
ronen barzel 
physically modeling structured approach 
academic press cambridge ma 
robert cook 
shade trees 
computer graphics siggraph proceedings volume pages july 
crow 
flexible image generation environment 
computer graphics siggraph proceedings volume pages july 
duncan 
making 
journal cinematic illusions june 
kurt fleischer 
cells simulations multicellular development 
siggraph video review 
video siggraph 
kurt fleischer 
multiple mechanism developmental model defining self organizing structures 
phd dissertation caltech department computation neural systems june 
kurt fleischer alan barr 
simulation testbed study multicellular development multiple mechanisms morphogenesis 
artificial life iii 
addison wesley 
deborah fowler hans prusinkiewicz 
modeling 
computer graphics siggraph proceedings volume pages july 
deborah fowler prusinkiewicz johannes 
collision model spiral 
computer graphics siggraph proceedings volume pages july 
gear 
numerical initial value problems ordinary differential equations 
prentice hall englewood cliffs nj 
goldstein 
classical mechanics 
addison wesley 
ned greene 
voxel space automata modeling stochastic growth processes voxel space 
computer graphics siggraph proceedings volume pages july 
james kajiya 
models 
siggraph proceedings volume pages july 
james kajiya timothy kay 
rendering fur dimensional textures 
computer graphics siggraph proceedings volume pages july 
hans 
models biological pattern formation 
academic press london 
gavin miller andrew pearce 
globular dynamics connected particle system animating 
graphics 
murray 
mathematical biology 
springer verlag new york nd edition 
murray 
complex spatial patterns tissue interactions illustrative model 
journal theoretical biology 
garrett odell george 
mechanical basis morphogenesis developmental biology 
hans pedersen 
displacement mapping flow fields 
proceedingsof siggraph orlando florida july pages 
acm press july 
john platt 
constraint methods neural networks computer graphics 
phd dissertation caltech department computer science pasadena ca 
prusinkiewicz mark james ch 
synthetic 
proceedings siggraph orlando florida july pages 
acm press july 
prusinkiewicz lindenmayer 
algorithmic beauty plants 
springer verlag new york 
reeves 
particle systems technique modeling class fuzzy objects 
acm trans 
graphics april 
william reeves blau 
approximate probabilistic algorithms shading rendering structured particle systems 
computer graphics siggraph proceedings volume pages july 
craig reynolds 
flocks herds schools distributed behavioral model 
computer graphics siggraph proceedings volume pages july 
karl sims 
particle animation rendering data parallel computation 
computer graphics siggraph proceedings volume pages august 
karl sims 
artificial evolution computer graphics 
computer graphics siggraph proceedings volume pages july 
ray smith 
plants fractals formal languages 
computer graphics siggraph proceedings volume pages july 
john snyder 
generative modeling computer graphics cad symbolic shape design interval analysis 
academic press 
john snyder alan barr 
ray tracing complex models containing surface tessellations 
computer graphics siggraph proceedings volume pages july 
richard szeliski david 
surface modeling oriented particle systems 
computer graphics siggraph proceedings volume pages july 
demetri terzopoulos john platt kurt fleischer 
heating melting deformable models 
graphics interface 
alan turing 
chemical basis morphogenesis 
phil 
trans 

greg turk 
generating textures arbitrary surfaces 
computer graphics siggraph proceedings volume pages july 
greg turk 
re tiling polygonal surfaces 
computer graphics siggraph proceedings volume pages july 
stephen westin james arvo kenneth torrance 
predicting reflectance functions complex surfaces 
computer graphics siggraph proceedings volume pages july 
andrew witkin kurt fleischer alan barr 
energy constraints parameterized models 
computer graphics siggraph proceedings volume pages july 
andrew witkin michael kass 
reaction diffusion textures 
computer graphics siggraph proceedings volume pages july 
andrew witkin paul heckbert 
particles sample control implicit surfaces 
proceedingsof siggraph orlando florida july pages 
acm press july 
