implementing software resource constrained mobile sensors experiences impala zebranet ting liu christopher sadler pei zhang margaret martonosi departments electrical engineering computer science princeton university mrm princeton edu zebranet mobile wireless sensor network nodes move environment working gather process information surroundings :10.1.1.14.6467
sensor wireless systems nodes critical resource constraints processing speed memory size energy supply face special hardware issues sensing device sample time data storage access restrictions wireless transceiver capabilities 
discusses evaluates zebranet system design decisions face range real world constraints 
impala zebranet middleware layer serves lightweight operating system designed encourage application modularity simplicity adaptivity 
impala implemented zebranet hardware nodes include bit microcontroller lowpower gps unit mhz radio mbits non volatile flash memory 
discusses impala operation scheduling event handling model explains system constraints goals led interface designs chose application middleware firmware layers 
describe impala network interface unifies media access control transport control efficient network protocol 
minimum overhead communication buffering processing supports range message models inspired tailored zebranet application needs 
discussing design tradeoffs context real hardware system real sensor network application design choices performance measurements offer concrete experiences software systems issues mobile sensor design space 
generally feel experiences guide design choices range related systems 
categories subject descriptors computer systems organization general hardware software interfaces system architectures com permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
mobisys june boston massachusetts usa 
copyright acm 
puter systems organization special purpose application systems microprocessor microcomputer applications real time embedded systems operating systems communications management buffering message sending network communication operating systems organization design distributed systems real time systems embedded systems general terms design measurement performance keywords sensor networks middleware system operation scheduling event handling network communications 
energy aware mobile sensor networks significant impact society decade 
technology numerous military civilian applications save lives improve quality life 
networks typically comprised low power microcontroller capable limited information processing sensors capture specific data environment memory store collected data radio transmit data nodes 
sensor networks comprised thousands nodes communicating relay data perform complex distributed calculations 
individual nodes extremely energy efficient deployed environment difficult impossible reacquire 
additionally depending size environment deployed power consumption node extremely unreliable 
programmers systems concerted effort establish efficient dependable communications nodes 
radio transmissions minimized byte transmitted consumes orders magnitude energy computation low power microcontroller 
additionally protocols account unreliable nature network nodes fail simply move range transmission 
steps taken ensure network rapidly adapt changes structure 
princeton zebranet project explores issues develop energy efficient mobile sensor network help track zebra migrations africa :10.1.1.14.6467
individual nodes built deployed zebras near research centre 
node equipped gps unit order log position information 
information passed zebra zebra peer peer protocols reaches base station processed analyzed 
impala zebranet middleware layer serves lightweight operating system designed encourage application modularity simplicity adaptivity 
previous study impala prototyped hp compaq ipaq pocket pc handhelds focused middleware support inherent software modularization dynamic software adaptation remote software update :10.1.1.14.5544
impala implemented zebranet hardware featuring energy efficient components 
critical issues arise concerning implementing software real hardware system 
issues include hardware software interfaces system operation scheduling event handling network communication support 
discusses issues context implementation experiences describes underlying hardware realities impact design choices 
test deployment zebranet occurred january system evolved point hardware software layers clearly defined 
contributions follows built system architecture minimal layering clean interfaces resource constrained mobile sensor systems 
impala middleware layer transforms rough hardware realities easy application perspectives 
allows complex hardware controls accesses safely exported convenient services applications 
allows miscellaneous hardware interrupts efficiently handled delivered types events 
established system activity model handles mix regular operations irregular events long running mobile sensor systems 
having best knowledge system activities impala uses operation scheduling achieve maximum energy conservation yielding system control untrusted applications 
processing simple hardware interrupts short atomic routines handling complex software events long preemptable routines impala achieves concurrency prioritization system activities 
developed efficient network interface captures supports distinctive network communication characteristics mobile sensor systems 
allows large messages transmitted small radio packets supports range message models reliable unreliable unicast multicast minimum communication buffering processing overhead 
judiciously collapsing traditional network layers unifies media access control transport control reduce system overhead achieve performance optimizations 
provide solutions handling typical resource constraints hardware realities faced mobile sensor systems software design implementation 
building real working hardware software enriched design decisions gives insights feel value mobile research community 
remainder structured follows 
section gives context impala system presenting zebranet system system constraints 
section describes layers interfaces impala 
section discusses way impala schedules regular operations handles irregular events 
section impala network interface 
section presents performance evaluations 
section presents related section presents 

zebranet system zebranet mobile wireless sensor network system aimed improving tracking technology energy efficient tracking nodes store forward communication techniques :10.1.1.14.6467
zebranet immediate focus wildlife tracking large regions little communications infrastructure broader goals concern deployment management communications issues large numbers static mobile sensors 
zebranet hardware node includes global positioning system gps simple microcontroller cpu wireless transceiver non volatile storage hold logged data 
zebranet rely constant communication access base station nodes 
uses periodic node discovery node node communication propagate data base station store forward manner 
hardware overview zebranet hardware depicted conceptually pictured composed components ideal mobile sensor networks 
major functional components board microcontroller gps external flash radio battery solar 
control hardware selected texas instruments ultra low power msp bit microcontroller 
chip kb ram kb internal flash memory serial interfaces 
runs power supply expect run continuously 
microcontroller operates dual clock configuration 
uses mhz clock accessing sensing storage communication peripherals khz clock times 
khz clock consumes half power mhz clock putting processor sleep 
log node position selected blox gps ms chip small size ability quickly acquire locks 
typical hot start acquisition time seconds experience gps fixes take seconds acquire 
gps communicates microcontroller asynchronous serial connection rate baud maximum rate chip port shares external flash 
runs power supply turned software conserve power 
store data selected atmel mbit db chip 
system node conceptual diagram zebranet node 
memory capacity store days positional data collar days positional data received nodes 
chip communicates microcontroller synchronously baud rate 
sharing serial port gps allows flash radio operate simultaneously 
flash powered source microcontroller 
transmit data nodes selected max stream radio 
operates mhz specified broadcast data miles 
configuration reliable ranges mile 
transmit radio requires power 
possible receiver sensitivity dbm 
radio communicates microcontroller second asynchronous serial connection rate baud chosen match gps nodes air rate bps 
runs power supply supply gps turned software conserve power 
power node panasonic cgr hour lithium ion battery 
specifications battery consider fully charged dead 
chose lower bound functional range voltage radio gps units rapidly drain battery function properly 
battery solar cells strategically placed collar 
energy efficiency critical mobile sensor networks zebranet hardware features low power components efficient power supplies 
measured power consumption system cycle performed possible operations 
applied board measurements results table 
additionally shows radio transmissions consume battery power time 
photo zebranet node 
mode current ma power mw cpu khz cpu mhz gps radio transmit radio receive table power consumption hardware components measured 
hardware imposed constraints system software programming limitations hardware system posed significant constraints system software programming 
representative challenges sensor systems 
data program memory constraint data memory microcontroller kb 
affects program behavior aspects especially data buffering 
keep system states handle large flows network data data buffers consume large amount memory carefully allocated 
additionally program memory kb 
requires software programs concise 
energy constraint energy budget tight solar array recharge battery provide energy essential achieve sensing communication tasks 
estimated able fully charge battery hours daylight 
number vary direction depending orientation solar cells relation sun 
efforts maximally save energy resorts provided preserve system energy level severely low 
device access constraint device accesses carefully scheduled avoid conflicts happen due hardware limitations 
example due voltage regulation challenges gps radio turned time interference avoidance purposes 
additionally power consumption radio transmitting constantly hours 
gps flash share serial connection microcontroller accessed simultaneously 
radio packet size constraint physical packet size radio hardware bytes order magnitude smaller ethernet packet size example 
means multi level packet header traditional tcp ip model cost significant communication overhead 
need special network protocol requires low overhead accomplish essential network communication services 
flash data storage constraint flash memory new data written address data currently address erased smallest unit byte page 
means writing data location affect data locations 
global flash organization required achieve efficient data storage 
gps sensing time constraint time gps unit acquire accurate position lock typically seconds 
considerable delay data acquisition implies asynchronous access control model preferred synchronous model operating sensing device 

static view impala layers interfaces impala operating system middleware service model driven issues applicable zebranet general sensor network applications 
issue long term sensing communication tasks sensor network applications require dependable scheduling regular operations 
sensor networks designed run indefinite periods time human intervention 
sensing communication operations occur predictable timetable 
zebranet example executes gps position sensing wireless radio communication periodically 
addition operations system perform routine system computations maintenance 
impala provide clean mechanisms schedule recurring operations 
second issue sensor network applications require efficient handling irregular events 
fundamentally sensor nodes event driven systems 
events sensor data capture network data reception occur frequently primary triggers system computations 
event may result single sequence hardware interrupts 
depending application programming interface promiscuous hardware interrupts transparent applications delivered types events 
appropriate event abstraction balance simplifying application programming maintaining granularity application level processing 
additionally events may handled different components system require efficient event filtering dispatching 
thirdly sensor network applications require specialized network support 
data gathering primary goal sensor networks sensor nodes aggressive flooding strategies maximize chance finding path desired destination 
resultant multicasts broadcasts common communication patterns 
transmissions required reliable scenarios data integrity critical 
hand data unreliable cases packets lost compromising goals 
example peer discovery messages considered unreliable nodes mobile may range nodes 
additionally due severe resource constraints limited hardware capabilities sensor nodes efforts minimize overhead communication buffering processing 
fourth issue complexity sensor network systems requires dynamic software adaptation 
scale sensor network systems order thousands nodes coordinating communication computation system complex 
depending node topology network connectivity node mobility lifetime system may encounter number different scenarios different communication protocol may appropriate 
nearly impossible single protocol appropriate time 
amount adaptivity crucial applications properly handle interesting range possible parameter values 
long term deployment sensor network systems require automatic remote software update 
inevitable software updates required lifetime sensor network 
sensors typically deployed large numbers inaccessible places updates deployed wirelessly 
impala needs support automatic remote software updates new software plugged time 
zebranet offers clear motivation remote software updates clearly want re capture collection animals time need update software 
previously impala focusing middleware support inherent software modularization dynamic software adaptation remote software update prototyped hp compaq ipaq pocket pc handhelds :10.1.1.14.5544
describe impala implemented real zebranet hardware nodes focusing operating system functionalities hardware software interfacing system operation scheduling event handling network communication support 
far impala dynamic software adaptation update implemented ipaqs 
plan port zebranet nodes near 
impala system architecture layers interfaces 
impala system layers shows static view impala system layers uppermost application layer impala layer firmware layer 
services events major interfaces layers 
service interface firmware layer exports numerous hardware access control functions impala layer 
impala layer protects firmware functions direct application layer exports ones needed applications reduced protected form 
exports network interface application layer 
subsections discuss detail services exported firmware impala impala applications 
services exported firmware impala firmware layer contains programs accessing controlling individual hardware components 
major firmware modules 
cpu firmware provides impala cpu mode control choices system performance requirements 
microcontroller cpu system run mhz clock source khz clock source consumes half power 
impala activates high speed clock system performing data sensing network communication 
switches low speed clock save power possible 
radio firmware provides impala capability send receive packets 
data radio byte stream 
radio firmware ensures byte stream input radio encapsulated correctly physical packets packets possibly received different sources restored correctly byte stream output radio 
signals packet event impala packet completely received 
gps firmware provides impala asynchronous interface obtaining time position data 
configures gps unit start sensing operation 
operation may take seconds depending time required get accurate position fix 
analyzes information output gps unit identify position fix 
position fix obtained terminates sensing operation saves data signals gps data event impala 
flash firmware provides impala flash access control functions 
partitions flash sections different storage purposes local data global data diagnostic information data sequentially written read section amount erased byte pages page blocks 
timer firmware provides impala software timers 
timer claimed released program 
owner timer set arbitrary amount time cancel reset 
timer allocated application expires timer firmware signals application timer event impala 
timers primary mechanism impala regular operation scheduling 
timer firmware maintains system clock accurate millisecond cpu operating mhz clock periodically corrected global gps time 
ability maintain globally synchronized system clock zebranet sensor nodes allows impala network interface simple timeslot mechanism media access 
watchdog firmware provides impala system monitoring recovery capabilities 
reboots system stuck illegal operations unexpected fault 
services exported impala applications application layer contains applications programs zebranet 
version zebranet primary application software running node communication protocols log sensor position data propagate data back base station 
sensor systems application software complex include precomputation data filtering fusing database queries addition data communication 
currently implemented baseline flooding application 
data sensing stores gps position samples flash available 
data propagation performs periodic synchronized communication nodes 
communication stages 
stage node sends peer discovery message unreliable broadcast 
node hears message means neighbor range forward data 
stage node floods position data discovered single hop neighbors reliable multicast 
manage data storage node uses local flash section local gps data global flash section gps data nodes 
global flash section medium store forward routing scheme 
new data written flash region old data totally erased smallest unit byte page section maintained cyclic buffer data stored sequentially 
support application activities impala exports primary services 
exports system clock pre allocated timer application perform various time operations periodic synchronized data communication 
application restricted modifying system clock accessing timeline schedule impala regular operations 
system timers may interfere pre scheduled system operations 
second exports protected flash read write accesses application data storage retrieval 
application attempts access unauthorized flash section access flash available access request rejected 
exports asynchronous network transmission interface allows application pass number outgoing messages impala layer notified transmissions complete 

dynamic view impala operations events dynamic view impala comprised regular computing maintenance operations required longterm sensing communication tasks irregular events incurred inherent event driven attribute sensor network applications 
impala system activity model aspects personality 
regular operations impala acts operation scheduler schedules coordinates system operations application goals hardware constraints energy budget 
irregular events acts event filter captures dispatches events different system components initiates chains processing 
regular operation scheduling impala uses timers trigger various operations 
ground discussion concrete example shows timeline schedule repeating zebranet operations node iterates cycle sending receiving data obtaining gps position sleeping 
scheduling coordinating system operations impala faces number hardware attributes constraints 
gps aided time calibration allows network wide operation synchronization 
zebranet sensor nodes ongoing access global gps time sensor nodes easily synchronized 
especially important network communication nodes need turn radio simultaneously transmit assigned timeslots avoid collisions 
second voltage regulation challenges discourage simultaneous radio gps operations 
zebranet radio gps high components 
designing voltage regulator allowing simultaneous operation challenging leads extra power loss regulator 
define networking phase radio communications gps sensing phase gps sensing alter nate devices 
choose execute radio communications gps sensing needs synchronized may take various length periods 
third non trivial radio wake time affects network communication schedule 
networking phase sensor nodes wake radio low power mode simultaneously 
takes milliseconds time vary different radios 
reserve fixed period radio wake accommodate extra overhead align radio transmission reception nodes prevent possible data loss due incoherent radio states 
fourth potentially long gps sensing time mandates asynchronous gps sensing operation 
cases takes gps little seconds get position fix typically accurate fix takes seconds 
large variation gps sensing task split transaction 
perform asynchronous sensing operation followed time data delivery event 
fifth port sharing gps flash prohibits simultaneous gps flash access 
microcontrollers commonly pin constrained exception 
design gps flash share serial hardware microcontroller access mode switch required port 
reason coordinate operations devices guard applications attempting simultaneous accesses 
stringent energy budget requires energy conservation possible 
energy critical issue mobile wireless sensor networks 
battery capacity zebranet nodes support full level system activities days 
solar array extend time indefinitely solar cell area limited need conserve energy possible 
impala achieves approaches 
zebranet minute gps data sampling interval ensure capture significant movements zebras minimizing redundant data records 
determines desirable frequency volume system activities unreasonable terms energy consumption entire system fully active time 
impala sleep phase system put low power mode minimum resources available system maintenance 
impala turns individual peripherals enter long idle mode 
second energy supply system designed fulfill energy consumption typical conditions need preserve system case energy deprivation 
impala adapts operation scheduling energy availability 
skips energy intensive phases networking gps sensing energy level inadequate subsequent operations 
event handling model impala event handling model designed attack fundamental issues 
sensor network systems require efficient event application programming interface 
events originated hardware interrupts 
dealing interrupts involves considerable programming efforts requires detailed hardware knowledge 
impala event abstraction encapsulates miscellaneous hardware interrupts impala event handling model 
events simplify application programming maintaining granularity application level processing 
impala implements types events essential zebranet applications 
event generated enqueued event signaler dequeued dispatched impala event filter processed application event handler 
shows events impala event handling components 
network packet event represents arrival network packet 
impala network interface generates type events receives packet radio firmware examines validity data 
network send done event represents completion failure network message transmission 
network interface generates type events completed transmission failure occurred 
application timer event represents time execute pre scheduled application operation 
timer firmware generates type events application timer expires 
gps data event represents capture gps position fix 
gps firmware generates type events analyzes information output gps unit identifies position fix 
second concurrency inherent attribute sensor network systems 
information may simultaneously captured sensors manipulated streamed network 
addition low level processing real time requirements 
zebranet example bytes output radio lost processed time 
impala hierarchical event handling model processes simple hardware interrupts short atomic routines handles complex software events long preemptable routines 
achieves concurrency multiple flows processing allows low level processing interleave needed override high level processing 
simplicity reasons implementation uses approach 
hardware interrupt handlers routines respond hardware interrupts generate software events 
impala event filter interruptible program runs single thread 
constantly checks incoming events invokes application event handlers process 
event prioritization desirable sensor network systems 
events urgent require immediate pro cessing network packet events 
events time constrained sensitive small delays application timer events 
events highly latency tolerant gps data events 
event prioritization allows events different time constraints processed desired order 
shown impala event filter maintains event queue type events associates queue priority event processing 

impala network interface network interface middleware service crucial mobile wireless sensor systems 
mobile wireless sensor networks zebranet uses peer peer communication 
sparse connectivity caused choose pairwise store forward routing common path approaches 
support application layer studies various store forward routing strategies impala network interface focuses networking model hop 
networking models fully explored traditional wireless mobile tcp ip networks distinctive characteristics sensor network greatly change design space 
impact communication characteristics network sessions special communication pattern sensor network applications zebranet changes message model 
data gathering major goal sensor networks 
zebranet particular data frequently collected sensing devices eventually transmitted base station 
sensor nodes aggressive flooding strategy maximize chance finding path base station 
leads common multicast broadcast protocols 
furthermore transmissions reliable cases energy reasons preferred unreliable critical uses 
impala network services support different uses 
impala uses session transport control 
session message designated application network transaction semantics 
sessions vary bytes unicast multicast broadcast transmit data flash application ram buffer reliable unreliable transmission 
varying size styles leverage mac layer techniques described subsection 
chose session transmission connectionless connection oriented approaches poor match unpredictable motion sensor nodes system 
connectionless sessions reduces compute communication overhead obviously desirable sensor systems 
implement sessions impala maintains send session queue contains session descriptors sessions applications impala 
shows information contained session descriptor sending node 
session assigned bit session id session descriptor contains attributes session reliable sessions keeps track networking states destinations 
linked list destination states set linked records holding destination packet ack information 
receiver side impala maintains receive ses session descriptor sending node 
receiver side session record packet reception 
sion list contains session holders sessions received network 
shows session information stored destination node 
session uniquely identified source node id session id avoid sensor node outstanding send sessions 
session holder contains attributes session buffers session packets received delivered application 
timeslot media access control zebranet sensor nodes ongoing access globally synchronized gps time sensor node activities easily synchronized 
impala takes advantage time synchronization uses simple round robin timeslot media access control 
chose partly simplicity code size energy round robin nature approach means mac layer knows nodes acknowledging reception timeslot 
allows simple efficient timeout retransmission mechanisms described subsection 
timeslot media access control node statically assigned unique timeslot transmission data sends related acknowledgments timeslot model 
iteration 
sensor node uses timeslot transmit data packets acknowledge previously received packets 
shows example time slotted transmissions multiple sensor nodes 
zebranet expects tens nodes non scalable solution acceptable efficient 
larger network choose hybrid time contention algorithm small number nodes share timeslot 
optimizing acknowledgments mac characteristics due processing constraints sensor systems inefficiency copies flash memory choose compress traditional layered protocol architecture reduce data copies management overhead 
particular impala unifies session transport control timeslot media access control 
acknowledgment timeout retransmission mechanisms involved reliable session transmissions 
timeslot receiver side impala scans sessions bundles pending acknowledgments packets 
receiving acknowledgment packet impala extracts acknowledgments updates session ack records accordingly 
session transport control aware round robin timeslot mac adopts simple efficient timeout retransmission mechanism 
sensor node assigned transmit slot time gets transmit knows previously transmitted packets previous rounds received acknowledged destinations 
packets acknowledged node knows session acknowledgment packets lost retransmits unacknowledged packets 
timeout retransmission mechanism allows retransmission occur earliest possible time improves communication performance 
shows transmission procedure spanning timeslots sender receivers 
timeout mechanisms important mobile wireless sensor networks nodes may walk away middle conversation 
impala times destination retransmissions set packets destination silent retransmissions 
destinations timed sender side impala terminates session reports failure 
likewise receiver side impala times session source silent timeslot iterations 
data buffering constraints traditional networking models require substantial mem data send acknowledgment retransmission sequence zebranet 
ory data buffering 
limited memory sensor systems necessitates rethinking data buffering model 
example zebranet sensor nodes ample flash memory kb ram 
flash delayed restrictions rewriting adopted mechanisms reduce memory data buffering 
mechanism replace data buffering data indexing 
application data sent fairly large flash memory ram application buffer impala pins data records memory location transmits directly copying large network buffer 
data indexing minimizes amount ram required network transmission allows transmission volume network throughput throttled limited memory 
second optimization mechanism replace session buffering packet buffering network reception 
buffering potentially huge session delivering application impala buffers individual order packets 
delivers packets application immediately subsequent packets session transmission 
incremental delivery nice match stream oriented nature sensing applications 
packets packet event delivery packet delivery opposed session delivery affect application programming style feel match incremental stream processing anticipate 
traditional tcp oriented application programming application plenty tcp buffers finish processing session sender switching session sender 
programming style applicable zebranet 
handling session data semantically complete stored flash memory right away applications handle packet data incomplete interleaved different senders 
zebranet small physical packet size radio hardware impacts design packet format 
natural packets small traditional multi level network protocol headers constitute considerable communication overhead 
adopt packet format contains minimal packet header minimal header essentially shorthand previously sent packet header sent session applicable packets session 
receiving session packet receiver side impala checks packet header tries associate existing session holder 
match impala checks packet sequence number buffer order packet drop order duplicate packet 
packet doesn match existing session holder impala check packet contains session header 
creates new session holder buffers packet 
drops packet 
asynchronous network transmission mentioned impala event application programming model application programmed essentially creating comprehensive set event handlers 
application level event handlers required complete limited amount time reasons 
allows quality service guarantees impala maximum response time external events 
second helps prevent poorly behaved applications node 
application wait arbitrary periods lengthy events network transmissions hand impala perform asynchronously 
impala provides applications asynchronous transmission model consisting network hooks sending data learning send completed 

impala evaluations impala middleware system including firmware layer impala layer baseline application implemented zebranet hardware nodes 
evaluate impala overhead performance conducted preliminary measurements analysis focusing system aspects static dynamic memory requirements operation scheduling event handling overheads network interface performance 
static memory footprint system faces severe memory constraints important minimize code size ram usage 
shows program memory data memory footprints different system layers 
program memory network interface requires instruction bytes largest component impala layer 
flash gps timer modules major components firmware layer 
application layer lean implemented basic application 
data memory network interface impala layer claims bytes data memory 
firmware layer gps module requires byte buffer receive information gps unit radio module requires byte buffer receive packets radio 
depicted code currently consumes third total program memory statically allocate sixth ram leaves ample memory dynamic allocation expansions system 
program memory footprint data memory footprint 
dynamic memory requirement 
dynamic memory requirement dynamic memory allocation required impala network interface claims releases memory buffers fly network transmission reception 
sender side impala allocates memory buffers application sessions passed asynchronous transmission 
memory size linearly related total number destinations reliable multicast session constant unreliable broadcast session 
shows dynamic memory requirements buffering sessions destinations 
data flash indexed buffered network interface sender side memory requirements drastically reduced 
receiver side impala allocates memory buffers packets delivered application 
memory size linearly related total number buffered packets 
shows dynamic memory requirements buffering packets 
conducted experiment examine queuing status received packets worst case estimate receiver side dynamic memory requirement 
experiment generated continuous flow network packets highest rate monitored maximum number buffered packets time 
turned packet queue contains packet time 
application level packet processing including table event handling overhead 
flash write computations significantly faster air radio rate packet delivery delayed 
extra packet buffering occasional basis needed system expanded perform multiple flash cpu intensive tasks 
operation scheduling event handling overhead operation scheduling overhead comes manipulating hardware devices device operation setting timers operation 
minimizing operation scheduling overhead essential proper implementation system 
scheduling operation takes excessive amount time operation may delayed 
may unintended consequences causing individual nodes lose time synchronization 
table shows cpu times scheduling various impala operations 
time turn radio ms impala wait radio wake low power mode 
compensate delay reserving radio wake period radio communications 
time power radio ms impala wait pin signal indicates radio send buffer empty 
scheduling overheads ms 
evaluate event handling overhead measuring latency delivering application events impala event filter 
overhead determines fast respond signaled event 
times generate process events subsection 
table lists event handling overhead application events 
take network packet event example handling overhead involves traversal event queue invoking upper level event handler releasing dynamically allocated memory buffers 
network interface performance evaluate impala network interface processing overhead packet reception transmission communication overhead caused packet headers communication latency reliable multicast 
packet reception processing overhead packet reception impala propagates incoming network packet radio hardware radio firmware network interface interrupts 
packet enqueued network interface event filter dequeues delivers application 
table shows processing time receive network packet system layer 
understanding major overhead layer requires detailed analysis 
radio hardware layer processing table operation scheduling overhead 
table packet reception processing time system layers 
table memory flash related operation cost 
table packet reception processing time network interface different packet types 
basically air baud rate 
radio transmits receives kbps implies throughput ms packet 
measured packet reception rate ms packet 
means hardware layer adds extra cost bit synchronization checksum computation firmware layer receives packet byte byte overhead mainly comes processing byte needs hand entire buffered packet upper layer wipe old content buffer packet 
table shows costs common memory flash related operations 
middleware layer mainly responsible examining buffering packet network interface retrieving delivering event filter 
table shows cost examining buffering different types packets 
dynamic memory allocation frequently network interface buffer new packets costs come memory related operations 
application layer major overhead comes flash access packets eventually stored 
packet transmission processing overhead transmission side network interface provides applications asynchronous operation network transmission 
described sessions dropped network interface application time 
time drop unreliable broadcast session peer discovery message cycles 
time drop reliable multicast session gps data session cycles 
networking time comes network interface update session states compute information send copy data flash ram invoke radio firmware transfer data radio send buffer 
operations parallel actual data transmission radio hardware 
shows time spent system component transmitting packet 
packet transmission processing time system components 
table header size payload size different packet types 
communication overhead packet header due small physical packet size radio hardware packet headers significant communication overhead 
impala network interface uses special protocol reduce header size improve data throughput 
table shows header size payload size different packet types 
payload size vary depending data carries session packet acknowledgments contains ack packet 
addition packet header packet unreliable broadcast session contains byte session header packet reliable multicast session contains bytes session header depending number destinations 
communication latency reliable multicast network interface designed support connectionless reliable multicast common communication pattern zebranet 
conducted simulation evaluate efficiency multicast scheme 
simulation node performs reliable multicast number destinations 
compare communication latency multicast approaches 
approach uses number reliable node node transmissions uses impala reliable multicast mechanism 
approaches timeslot media access control zebranet latency measurements 
shows observed data delivery latencies different number destinations different packet loss rates 
set timeslot capacity packets total transmission volume packets 
packet loss rate probability dropping packet 
simulated account packet loss occasions network bad signal reception bit error baseline scenario packet loss rate zero communication latency impala multicast scheme node node transmission scheme 
destination multicast schemes finish transmission timeslot iterations 
cases impala multicast scheme achieves constant data delivery latency regard number destinations node node transmission scheme explodes growing number destinations 
node node transmission split network bandwidth different transmission pairs 
impact network bandwidth split evident packet loss rate increases 
impala multicast scheme sensitive packet loss retransmit destinations packet lost single destination 

related developed system combines aspects sensor networking community mobile adhoc networking community 
section look system compares new technologies distinct fields 
sensing hardware number energy efficient sensor nodes developed past years 
devices closely parallel nodes berkeley mica mote ucla medusa wk 
mica mote mhz bit processor uses chip flash memory chip serial interfaces nodes 
medusa mk features dual microcontroller scheme uses processor mica situations require minimal computational power mhz arm processor operate board gps unit high energy consuming sensors 
deployed aforementioned nodes intended remain close form densely populated network 
allows extremely lowpower radios limited range 
zebranet nodes hand intended extremely mobile distributed large area 
having sparsely populated mobile network demands powerful radio larger range 
addition due high power consumption radio gps hope run system continuously months time set batteries 
reduce duty cycle data collection achieve objectives 
compensate battery solar cells distributed collar 
sensing operating systems middleware various operating systems middleware layers emerged control sensor nodes 
systems closely relate impala tinyos mat 
tinyos popular operating system designed run motes low level characteristics common impala 
example impala tinyos place emphasis event handling hardware interrupts utilization fly processing conserve memory 
big difference system tinyos result differences nodes 
mote designed accommodate variety interchangeable sensors 
reflected tinyos emphasis concurrency intensive operations allow system handle multiple flows data independent sensors simultaneously 
impala uses combination polling interrupt handling allow similar interleaving scheduled unscheduled events 
zebranet system impala takes advantage fact fixed number sensors predetermined fashion hardware timers schedule major events 
allows save great deal power dual clock scheme timely energy hungry components 
mat virtual machine lies top operating system designed provide layer security basis automatically updating nodes propagated programs 
zebranet need added security mat provides ability perform viral software updates implemented original version impala designed palmtop computers implemented zebranet nodes near :10.1.1.14.5544
protocols routing schemes peer peer routing scheme roots number proposed routing methods designed communication mobile ad hoc networks efficient 
dsr aodv send route discovery messages perform similar roles peer discovery messages 
difference dsr aodv attempt discover complete route destination algorithm attempts discover node immediate neighbors 
modification essential system normal circumstances complete route base station data expected propagate slowly node node base station comes range 
directed diffusion uses data centric scheme messages passed network series independent neighbor neighbor communications similar peer peer transmissions 
scheme system network low connectivity topology changing fast important messages arrive timely fashion 
sensing application studies addition zebranet concurrently running efforts sensors monitor wildlife mobile applications 
project places solar powered satellite transmitters uses satellite telemetry determine animal position 
similarly pacific ocean salmon tracking project places acoustic tags juvenile salmon 
sound emitted tags recorded receivers strategically placed known migration routes closely reconstruct exact movements fish 
projects rely expensive high tech fixed infrastructure gather data nodes need interact 
stationary sensor network composed motes running tinyos deployed island coast maine monitor nesting habitats certain birds environmental conditions temperature humidity 
group conducted successful multiple month experiment data collected transmitted network csma mac layer protect collisions 
deployment similar deployment james reserve ca providing sensor network community great deal insight numerous issues relevant real world deployment 

presents implementation zebranet system utilizes mobile sensor networking technologies monitor zebra migrations energy constrained hardware 
zebranet nodes controlled impala middleware system efficiently handles scheduled operations event driven operations characteristic sensor networks 
implementation show architecture low overhead offer effective improvements performance energy efficiency robustness system 
accomplishing goal show traditional networking layers strategically optimized help meet stringent resource constraints 
lessons learned implementation experiences 
algorithms emphasize memory efficiency zebranet nodes potential exhaust available memory 
mbits supply flash storage 
technology exists add orders magnitude consuming power area 
added flash light weight virtual memory scheme 
smart algorithm minimize number writes flash perform load leveling extend life flash module 
second impala dominates control device scheduling power management 
hand protects system abused untrusted applications yields maximum gain energy efficiency impala best overview system activities 
hand may choices ways awkward particular applications 
plan design mechanisms impala input applications execution operations 
thirdly system flash access cpu radio transfer synchronous time consuming operations 
hardware interrupts signal completion operations better option terms saving cpu time having cpu busy waiting 
second requires simpler implementation sacrifice system concurrency significantly degrade system performance 
long operations interruptible computations break exploit cpu cycles flash access cpu radio transfer progress 
reliable multicast mechanism crucial mobile sensor system 
sparsely connected mobile sensor networks packet loss retransmissions frequent network bandwidth precious reli able multicast service discretion application programmers 
depending data integrity requirements choose unreliable broadcast improve data throughput 
process developing real working hardware software highly mobile sparsely populated network unique perspective issues relating mobile sensor networking technologies 
design choices performance measurements offer concrete experience contribute existing wealth knowledge sensor networks research community 
acknowledgments supported part nsf information technology research itr 
addition gratefully acknowledge research foundation support research centre enabled deployment system 

atmel 
db bit volt serial interface flash byte sram buffers data sheet 
www atmel com june 
census marine life 
post pacific ocean salmon tracking project 
www org 
center embedded networked sensing 
research infrastructure james reserve local area power system network enhancements 
www ucla edu project descriptions research infrastructure index html 

gps ms miniature gps receiver module data sheet 
www blox ch oct 
gay levis von behren welsh brewer culler 
nesc language holistic approach networked embedded systems 
proceedings programming language design implementation pldi 
hill culler 
mica wireless platform deeply embedded networks 
micro ieee volume pages 
hill szewczyk system architecture directions networked sensors 
proceedings th international conference architectural support programming languages operating systems apr 
intanagonwiwat govindan estrin 
directed diffusion scalable robust communication paradigm sensor networks 
proceedings sixth annual international conference mobile computing networking mobicom aug 
johnson maltz 
dynamic source routing ad hoc wireless networks 
mobile computing pages 
kluwer academic publishers 
juang oki wang energy efficient computing wildlife tracking design tradeoffs early experiences zebranet :10.1.1.14.6467
proceedings th international conference architectural support programming languages operating systems asplos oct 
levis culler 
mat tiny virtual machine sensor networks 
proceedings th international conference architectural support programming languages operating systems asplos oct 
liu martonosi :10.1.1.14.5544
impala middleware system managing autonomic parallel sensor systems 
acm sigplan symposium principles practice parallel programming ppopp june 
madden franklin hellerstein hong 
design query processor sensor networks 
sigmod 
mainwaring polastre szewczyk culler anderson 
wireless sensor networks habitat monitoring 
acm international workshop wireless sensor networks applications wsna atlanta ga sept 

wireless modem data sheet oem manual 
www net june 
min cho shih sinha wang chandrakasan 
energy centric enabling technologies wireless sensor networks 
ieee wireless communications volume pages aug 
wildlife foundation 
research centre 
www org 
panasonic 
cgr hour lithium ion battery cylindrical model 
www panasonic com aug 
perkins royer 
ad hoc demand distance vector routing 
proceedings nd ieee workshop mobile computing systems applications feb 
rockwell science center 
wireless integrated network sensors wins 
wins rsc rockwell com 
srivastava 
distributed computation platform wireless embedded sensing 
proceedings international conference computer design iccd 
sun microsystems 
java platform micro edition 
java sun com nov 
szewczyk polastre mainwaring culler 
lessons sensor network expedition 
european workshop wireless sensor networks jan 
texas instruments 
msp xx family ultra low power micro controller user guide 
www ti com 
center conservation biology 

wm edu ccb cfm 
