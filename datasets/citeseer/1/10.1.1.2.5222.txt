high throughput path metric multi hop wireless routing douglas de couto daniel john robert morris computer science artificial intelligence laboratory rtm csail mit edu www pdos lcs mit edu grid presents expected transmission count metric etx finds high throughput paths multi hop wireless networks 
etx minimizes expected total number packet transmissions including retransmissions required successfully deliver packet ultimate destination 
etx metric incorporates effects link loss ratios asymmetry loss ratios directions link interference successive links path 
contrast minimum hop count metric chooses arbitrarily different paths minimum length regardless large differences throughput paths ignoring possibility longer path offer higher throughput 
describes design implementation etx metric dsdv dsr routing protocols modifications dsdv dsr allow etx 
measurements taken node test bed demonstrate poor performance minimum hopcount illustrate causes poor performance confirm etx improves performance 
long paths throughput improvement factor suggesting etx useful networks grow larger paths longer 
categories subject descriptors computer communication networks network architecture design wireless communication computer communication networks network protocols routing protocols general terms design experimentation measurement performance keywords multi hop wireless networks ad hoc networks rooftop networks wireless routing route metrics dsr dsdv etx research supported ntt ntt mit collaboration mit project oxygen 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
mobicom september san diego california usa 
copyright acm 

ad hoc routing protocols wireless networks focused coping mobile nodes rapidly changing topologies scalability 
attention paid finding high quality paths face lossy wireless links 
presents measurements link loss characteristics node test bed uses measurements motivate design new metric accounts lossy links expected transmission count etx 
metric commonly existing ad hoc routing protocols minimum hop count 
protocols typically links deliver routing probe packets query packets dsr aodv routing updates dsdv 
approach implicitly assumes links don 
true wired networks reasonable approximation wireless case wireless links intermediate loss ratios 
link delivers packets may useful data deliver routing update query packets routing protocol uses anyway 
minimizing hop count maximizes distance traveled hop minimize signal strength maximize loss ratio 
best route minimum hop count route dense network may routes minimum length widely varying qualities arbitrary choice minimum hop count metrics select best 
contribution quantify effects section 
approach fixing problem mask transmission errors 
example ack mechanism resends lost packets making worst links appear loss free 
retransmission lossy links desirable paths retransmissions reduce path throughput interfere traffic 
approach augment minimum hop count routing threshold ignores lossy links lossy link may way reach certain node significant loss ratio differences links 
solution proposed evaluated etx metric 
etx finds paths fewest expected number transmissions including retransmissions required deliver packet way destination 
metric predicts number retransmissions required link measurements packet loss ratios directions wireless link 
primary goal etx design find paths high throughput despite losses 
order demonstrate etx effective presents measurements taken test bed network 
measure approx 
map test bed 
circle node large number node id superscript indicates floor building node 
ments show etx improves throughput multi hop routes factor minimum hop count metric 
etx provides improvement paths hops suggesting transmission count offers increased benefit networks grow larger paths longer 
main contributions 
explores details performance minimum hop count routing wireless test bed explains minimum hop count finds routes significantly throughput best available 
second presents design implementation evaluation etx metric 
third describes set detailed design changes dsdv dsr protocols etx extension enable accurately choose routes best metric 
part effort deploy production quality multi hop rooftop network 
initial version network unusable due effects detailed section 
larger goal help networks practical reality 
proceeds section analysis problems minimum hop count routing 
section describes design new etx metric section describes etx implemented including changes dsdv dsr 
section evaluates etx experiments test bed 
section describes related section concludes 

performance minimum hop count routing section shows minimum hop count routing typically finds routes significantly lower throughput best available 
evidence comes measurements dsdv testbed network 
explain minimum hop count poorly looking distribution route throughputs link loss ratios 
experimental test bed data result measurements taken node wireless test bed 
node consists stationary linux pc cisco aironet pci card omnidirectional dbi dipole antenna rubber duck 
nodes placed offices consecutive floors office building 
positions shown 
cards configured send megabit second mbps mw transmit power 
rts cts turned cards set ad hoc dcf mode 
data packet measurements consists bytes preamble bytes ethernet encapsulation header bytes data payload bytes frame check sequence bytes total 
ack packet takes microseconds transmit inter frame gap microseconds minimum expected mandatory back time microseconds resulting total time microseconds data packet 
gives maximum throughput unicast packets second loss free link 
test bed carried data control traffic involved experiment interference various kinds inevitably 
particular floor building access points various different channels 
dsdv implementation new modifications described section 
path throughputs compares throughput routes minimum hop count metric throughput best routes 
curve shows throughput cdf packets second node pairs pairs randomly selected total ordered pairs test bed 
point value indicates throughput packets second value indicates fraction pairs throughput 
left curve throughput cdf achieved routing data dsdv minimum hop count metric 
right curve throughput cdf best known route pair nodes 
packets sent pair time 
pair dsdv best path tests run immediately limit variation link conditions time 
best path pair nodes sending data potential best paths time selecting path highest throughput 
potential best paths identified running line routing algorithm input measurements link loss ratios similar section approx 
cumulative fraction node pairs max hop throughput run mw byte packets hop hop best static route dsdv hopcount packets second delivered minimum hop count metric dsdv chooses paths far throughput best available routes 
line throughput cdf randomly selected node pairs 
left curve throughput cdf dsdv minimum hop count 
right curve cdf best throughput pair trying number promising paths 
dotted vertical lines mark theoretical maximum throughput routes hop count 
penalty reflect reduction throughput caused interference successive hops multi hop paths 
new link measurements collected roughly hour experiment best paths pair generated available loss data 
values split main ranges packets second 
values correspond pairs communicated single hop paths correspond multi hop paths 
single hop direct route deliver packets second fastest hop route half capacity 
halving due transmissions successive hops interfering middle node receive packet node time sending packet final node 
similar effects cause fastest hop route capacity packets second 
minimum hop count performs shortest route fastest route especially hop link low loss ratio 
hop link loss ratio outperform route 
case points right half 
note overhead dsdv route advertisements reduces maximum link capacity packets second clearly visible part graph 
left half graph shows happens minimum hop count choice number multi hop routes 
cases hop count metric usually picks route significantly slower best known 
extreme cases points far left minimum hop count getting throughput close zero best known route throughput packets second delivered run mw byte packets max hop throughput max hop throughput available pair nodes best routes tested 
shortest routes perform best number routes number hops provide different throughput 
packets second 
minimum hop count routes slow include links high loss ratios cause bandwidth consumed retransmissions 
distribution path throughputs illustrates typical case minimum hop count routing favor highest throughput route 
throughput routes node node shown 
routes best tested experiments described 
graph shows shortest path hop route node yield highest throughput 
best route hops long number available hop routes provide widely varying performance 
routing protocol selects randomly shortest hopcount routes best choice particularly network grows number possible paths pair increases 
distribution link loss ratios helps explain high throughput paths difficult find 
vertical bar corresponds direct radio link pair nodes ends bar mark broadcast packet delivery ratio directions nodes 
measure delivery ratios node took turn sending series broadcast packets seconds counted number packets hardware reported transmitted 
packets contained bytes data payload 
node recorded number packets received 
delivery ratio node node calculated dividing number packets received number sent loss ratio link minus delivery ratio 
term ratio rate avoid confusion throughput delivery rates expressed packets second 
note broadcasts don involve retransmissions 
retransmits lost unicast packets unicast packet loss ratio seen higher layers far lower underlying loss ratio depending maximum number retransmissions allowed 
features important 
large fraction links intermediate delivery ratio direction 
deliver routing protocol delivery ratio delivery ratio pairwise delivery ratios mw link number pairwise delivery ratios mw link number hop packet delivery ratios pair hosts mw mw 
top bottom ends vertical line indicate delivery ratios directions bars graph sorted minimum directions link numbers necessarily correspond 
packet size bytes data payload 
data pairs hosts shown 
links asymmetric wide range loss ratios 
packets lose packets data 
second full spectrum link delivery ratios advantage expected making fine grained choices links choosing paths 
third links asymmetric delivery ratios 
node pairs mw links delivered packets direction 
links asymmetric forward reverse delivery ratios differ 
asymmetric links involve different nodes 
uses link level acks confirm delivery directions link order avoid retransmissions 
nodes network involved asymmetric link routing protocols cope asymmetry effective 

etx metric design section describes design etx metric 
metric goal choose routes high throughput 
section suggests metric account issues wide range link loss ratios 
existence links asymmetric loss ratios 
interference successive hops multi hop paths 
number superficially attractive metrics suitable 
hop count metric ignoring links loss ratios certain threshold may cause destinations unreachable 
product link delivery ratios path metric attempt maximize delivery probability fails account inter hop interference metric view perfect hop route better hop route loss ratio fact twice throughput 
objection applies useful throughput path bottleneck highest loss ratio link path metric 
etx addresses concerns 
delay potential metric changes network load interface queue lengths vary cause routes oscillate away path path 
goal design metric independent network load load balancing performed separate algorithms information provided etx 
implemented etx metric dsdv dsr routing protocols 
metric etx link predicted number data transmissions required send packet link including retransmissions 
etx route sum etx link route 
example etx hop route perfect links etx hop route delivery ratio 
etx link calculated forward reverse delivery ratios link 
forward delivery ratio df measured probability data packet successfully arrives recipient reverse delivery ratio dr probability ack packet successfully received 
delivery ratios measured described 
expected probability transmission successfully received acknowledged df dr sender retransmit packet successfully acknowledged 
attempt transmit packet considered bernoulli trial expected number transmissions etx df dr etx important characteristics etx delivery ratios directly affect throughput 
etx detects appropriately handles asymmetry incorporating loss ratios direction 
etx precise link loss ratio measurements fine grained decisions routes 
etx penalizes routes hops lower throughput due interference different hops path 
etx tends minimize spectrum maximize system capacity 
addition etx may decrease energy consumed packet transmission retransmission may increase node energy consumption 
delivery ratios df dr measured dedicated link probe packets 
node broadcasts link probes fixed size average period second implementation 
avoid accidental synchronization jittered probe 
probes broadcast acknowledge retransmit 
node remembers probes receives seconds seconds implementation allowing calculate delivery ratio sender time count count number probes received window number probes received 
case link technique allows measure dr measure df knows receive probe seconds correctly calculate current loss ratio probes arrive calculation link etx requires df dr probe sent node contains number probe packets received neighbors seconds 
allows neighbor calculate df receives probe etx route sum link metrics 
dsr dsdv accumulate route metric forward updates queries respectively 
discussion etx assumptions link layer 
etx sense networks link layer retransmission 
second etx assumes radios fixed transmit power level 
variable power radios preferable maximize hop count decreasing interference minimizing energy packet 
etx attempt route congested links suffer oscillations plague routing metrics delay 
approximation loss measurements etx reflect busy link busy link may cause probe broadcast deferred won ordinarily cause lost 
won true broadcasts vulnerable collisions hidden terminals mac unfair high load 
result node able send probes causing neighbors believe reverse delivery ratio zero 
highest throughput path fewer hops etx choose throughput paths determined total number transmissions hops interfere 
best path hops etx may choose slower path fewer hops increased number transmissions required extra hops slow throughput hops 
etx specifically account mobility 
etx may choose paths despite mobility underlying routing protocol propagate route metrics quickly accurate link measurements available 
tradeoff accuracy link measurements protocol responsiveness mobility 

implementation routing system etx implemented main parts click toolkit click implementations dsdv dsr etx link measurement algorithms 
implementations run user space running kernel allows priority queuing described easy access transmission failure notification mac layer 
dsdv protocol implemented description perkins bhagwat ambiguities resolved consulting broch rice cmu implementation ns simulator 
dsr implementation follows ietf internet draft version 
operation dsdv dsdv distance vector protocol uses sequence numbers ensure freshness settling time mechanism avoid unnecessarily propagating routes inferior metrics 
changes original dsdv design order ensure uses path best known metric 
describing changes overview published version protocol selects routes 
node routing table entry destination knows 
entry contains fields destination identifier ip address hop route destination latest sequence number heard destination metric 
node forwards packets hop specified current contents routing table 
node periodically broadcasts route advertisement packet containing complete routing table 
advertisement known full dump occurs full dump period 
node maintains sequence number increments includes entry full dump originates 
node copies sequence numbers entries full dump routing table 
effect sequence number field routing table entry advertisement entry reflects age entry routing information 
node receives node route advertisement broadcast updates route entries follows 
suppose node receives advertisement destination metric sequence number newer sequence number current entry replaces current entry new route accepts new route sequence number better metric current route 
route accepts new route 
ignores advertised route 
route entry associated weighted settling time wst 
settling time route entry sequence number amount time route sequence number received time best route sequence number received 
wst weighted average settling times sequence numbers updated route new sequence number received 
wst triggered updates quickly propagate routes network avoiding explosion broadcasts 
node replaces route entry newly received entry propagates new route neighbors sending triggered update contains changed information 
triggered updates sent wst passed hearing current sequence number 
prevents nodes advertising new route replaced better route 
addition regardless route entry wst triggered updates sent maximum specified rate 
triggered updates delayed batched sent available time 
dsdv specifies triggered updates full dumps large fraction routes need triggered update 
case routes elapsed wst included full dump node sequence number incremented 
changes dsdv change affects wst 
cmu ns dsdv implementation advertise route wst passed particular route heard 
interpretation original dsdv description waiting time advertising route start route sequence number heard 
second change implementation feedback transmission failures detect broken links produce broken route messages 
broch report broken route messages typically cause routes particular destination broken network just broken link 
implementation generates broken route messages routing table entries time rarely occurs experiments 
third change called dump full dumps sent triggered update routes changed 
triggered updates contain changed routes full dumps sent full dump period 
final change called delay route allowed advertised 
new route wst expired sequence number heard 
change best route heard previous sequence number current sequence number wst expired 
unmodified dsdv uses latest route accepted destination advertise route 
purpose change prevent dsdv routes bad metrics 
example asymmetric hop route node hear new sequence numbers hop link 
change dsdv forced new hop route routing etx metric poor 
general shorter routes deliver new sequence numbers causing original dsdv shortest paths fraction time successive sequence numbers regardless metric 
change dsdv best route previous sequence number wst expired best route new sequence number heard 
shows pseudo code dsdv routing table update packet forwarding algorithms including changes 
experiments full dump period seconds routing table entries timed seconds 
handle route ad packet foreach route handle update handle update route curr best route current seq old best route previous seq add link metric metric update metric seq curr dest seq metric curr dest metric curr dest curr dest best time schedule triggered update seq curr dest seq save best route seq old dest curr dest curr dest curr dest time curr dest best time update settling time old wst old dest wst best old dest best time old dest time curr dest wst old wst best schedule triggered update ignore old bad metrics returns hop ip address dst lookup route dst old route haven advertised current route curr dst time curr dst wst return old dst hop return curr dst hop dsdv pseudo code including modifications described section 
wst parameters chosen produce reasonable average 
triggered updates issued maximum rate second 
dsdv experiments protocol changes described section evaluates modification 
etx implementation measures link loss ratios small probe packets described section 
probes contain bytes payload 
etx node broadcasts probe second remembers probes received neighbors seconds 
relatively small probes saves bandwidth section shows predictions small packets useful data traffic consists large packets 
dsr implementation dsr implementation follows revision ietf internet draft specification requirements networks require bidirectional links send unicast data 
im plementation developed university colorado boulder 
section reviews dsr basic operation described draft describes modifications support etx 
dsr reactive routing protocol node issues route request data send 
route requests flooded network node appending address request receives re broadcasting 
new request includes unique id forwarders ensure forward request 
request originator issues new requests destination exponentially increasing back time 
route requests issued increasing time live ttl values minimize range cost flooding 
destination issues route reply response forwarded request receives 
reply includes route accumulated request forwarded network source routed back originator reverse route 
source node chooses route information route replies receives source routes data route 
implementation stores results route replies link cache stores information link separately 
node runs dijkstra shortest path algorithm link cache find best route destination 
dsr uses feedback link layer react link failures 
card signals acknowledgment received maximum number retries forwarding node issues route error back source removes link link cache computes new route 
source find route link cache issues new route request 
deal asymmetric links node maintains blacklist lists immediate neighbors unidirectional links node 
links node receive broadcast requests unsuitable unicast traffic 
transmission failure occurs forwarding route reply neighbor node trying forward reply added blacklist entry probable 
point node forward route requests received link 
asymmetry link positively determined time entry downgraded questionable 
route request received link node delays forwarding issues direct hop unicast route request back questionable neighbor 
reply received node forwards original route request removes blacklist entry 
node drops request 
entries removed blacklist link determined bidirectional successful unicast transmission 
dsr specification describes optimizations nodes update link caches data packets forward overhear 
implement optimizations require wireless interface operate promiscuous receive mode 
implement reply cache forwarding nodes respond route requests information link caches 
link caches flushed experiments decisions affect results 
nodes perform packet salvage forwarding nodes event transmission failure received route error attempt find alternate routes queued packets 
forwarding node queues packets small number packets dropped cases 
etx metric implementation modified simple ways 
link probes measure delivery ratios dsdv implementation 
node forwards request appends address metric link received request 
metrics included route replies sent back sender 
node receives request forwarded forwards accumulated route metric better best forwarded request id increases chances originator hear route best metric 
entries link cache weighted metrics included route replies 
dijkstra algorithm finds route destination minimum metric 
router configuration details node sending large volumes data danger probe packets routing protocol packets may dropped delayed due full queue 
mitigate problem implementation maintains separate click queues data packets protocol packets link probes 
queues hold packets 
queues drain single queue wireless adapter memory managed driver capacity packets 
loss ratio probes enter adapter queue followed protocol packets data packets 
dsdv implementation looks packet destination routing table dequeuing packet data queue just handing packet card 
avoids committing hop queuing forwarding responsive changes routing table 
technique depends fact nodes wireless interface 
dsr implementation hand adds header data packets inserting queue 
transmission failure received route error node removes drops enqueued packets include broken link source route 
ensures node experiencing transmission failure spend additional time spectrum retransmitting packets broken hop 

evaluation section presents experimental results show etx finds higher throughput paths minimum hop count particularly distant nodes 
explores effects number individual design decisions etx algorithm 
stated experimental setup follows 
test bed configuration packet size described section 
dsdv implementation includes improvements described section etx hopcount metric 
dsr implementation described section 
data collected separate runs 
entire run takes hours 
run considers pair nodes turn 
pair experiment run routing protocol variant 
start experiment routing software reset tables cleared routing protocol etx probe algorithm allowed run long stabilize typically seconds 
sending node pair sends data packets fast allows routing system destination 
destination measures rate packets arrive 
arrangement ensures results different protocols pair nodes comparable relevant experiments run minutes 
cumulative fraction node pairs max hop throughput run mw byte packets hop hop best static route dsdv etx dsdv hop count packets second delivered etx finds higher throughput routes minimum hop count 
data taken experimental run 
point represents node pairs 
graph labeled run came 
graphs run number comparable 
graphs different run numbers compared network behavior changes substantially time 
graphs include error bars representative runs performed 
dsdv experiments etx minimum hop count routing protocol runs seconds immediately source sends data packets fast possible seconds 
described section heavy load causes mac protocol extremely unfair distorting etx measurements 
minimize effects mac unfairness node routes packets snapshot route table taken second warm period data sent 
dsr experiments etx minimum hop count source starts sending data packet second seconds 
ensure dsr finds route throughput measurements taken 
seconds passes source sends packets fast possible seconds 
dsr experiments etx source waits additional seconds initiating route request give nodes time accumulate link measurements 
experiments run appropriate routing overhead 
measuring throughput routing etx metric nodes send periodic etx broadcast probes 
measuring throughput dsdv metric nodes sends dsdv routing advertisements just production routing system 
metric performance dsdv compares throughput cdfs paths dsdv etx minimum hop count randomly chosen node pairs 
data taken run shows dsdv etx metric finds faster routes minimum hop count metric 
main regions 
right half shows node pairs communicate directly loss ratios throughput greater maximum possible hop throughput packets second 
dsdv etx packets second run mw byte packets dsdv hop count packets second etx hop count data plotted pair basis 
value point shows pair throughput dsdv minimum hop count value shows throughput dsdv etx 
points line pairs etx outperformed hop count 
cases minimum hop count metric finds hop route best route opportunity etx perform better 
left half corresponds node pairs high direct loss ratio best route hop 
region sensitivity etx differences different paths length allows find better paths hop count 
shows data organized scatter plot allow direct comparison performance metric individual pairs 
pair represented point point value throughput obtained dsdv etx value throughput obtained dsdv minimum hop count 
upper right quadrant shows pairs etx minimum hop count hop path 
etx outperforms minimum hop count greatest margin hop count metric uses links asymmetric loss ratios 
illustrated points near zero relatively large 
minimum hop count links deliver routing updates direction deliver data packets etx correctly avoids links 
points pairs lie line variations link quality etx minimum hop count tests pairs 
pair etx hop count route difference due underlying change route throughput 
second pair etx slower hop path hop count path etx avoided links hop path measured delivery ratios poor 
link quality different etx hop count tests 
etx incurs overhead minimum hop count due loss ratio probes overhead small compared gains throughput etx provides 
etx usable routes pairs minimum hop count delivering essentially zero packets second 
cumulative fraction node pairs run mw byte packets max hop throughput hop hop dsdv etx dsdv hop count packets second delivered etx provides throughput advantage minimum hop count large byte packets 
small packets measure link loss ratios incorrectly predict actual transmission counts large packets 
graph shows pairs randomly chosen pairs previous figures 
maximum hop throughput byte data packets mbps packets second 
shows throughput packets byte payload 
etx offers improvement minimum hop count gain large small packets 
etx small probes estimate link metrics 
small packets delivered etx incorrectly estimating quality link causing dsdv pick sub optimal routes 
example single hop direct route nodes etx probe delivery rate etx delivery rate byte packets link closer route higher quality links preferable 
small packets useful detecting asymmetric links etx gain minimum pronounced left graph hop count asymmetric links 
shows results etx versus minimum hop count third run radios transmitting mw mw 
packet size bytes 
nodes send higher transmit power links shown 
network connected decreasing average hop count required nodes communicate 
result etx fewer routes choose minimum hop count lower chance choosing bad route 
shows etx provides advantage highly connected network 
impact asymmetry fraction etx gains comes avoiding extremely asymmetric links 
problem routing asymmetric links addressed previous lundgren chin :10.1.1.125.5750:10.1.1.125.5750
authors propose link handshaking scheme detect avoid asymmetric links 
scheme node accepts route updates neighboring node advertising direct route node bootstraps handshake advertising provisional route entries cumulative fraction node pairs run mw byte packets max hop throughput hop hop dsdv etx dsdv hop count packets second delivered etx versus minimum hop count transmitting mw pairs 
higher transmit power produces highly connected network links lower average hop count etx provides advantage 
cumulative fraction node pairs max hop throughput run mw byte packets hop hop dsdv etx dsdv link handshaking dsdv hop count packets second delivered etx provides significant throughput simple handshaking scheme avoids asymmetric routes 
etx fine grained decisions links varying degrees asymmetry 
node seen node accepted routes 
implemented handshaking scheme dsdv minimum hop count metric 
compares link handshaking etx minimum hop count metrics 
link handshaking improves minimum hop count etx finds faster routes 
etx link measurements allow etx discriminate links varying degrees asymmetry 
cumulative fraction node pairs max hop throughput run mw byte packets hop hop dsdv etx delay dsdv etx delay packets second delivered dsdv etx delay modification dsdv 
modification helps dsdv obey link metric 
effects dsdv modifications section described modifications dsdv designed increase responsiveness metrics 
delay modification causes dsdv delay newly received route permitted advertise route wst passed 
shows delay modification improves performance dsdv etx 
metric performance dsr section evaluates performance dsr routing protocol etx metric 
described section dsr uses link layer transmission failure feedback help avoid bad routes 
isolate effects etx dsr evaluated dsr performance link layer feedback enabled 
shows effect etx metric dsr link layer feedback pairs 
dsr learns transmission failures forwarding node issues route errors 
dsr uses best route initial route request determined metric 
shows etx greatly improves initial route selection dsr compared minimum hop count 
consistent dsdv results section 
minimum hop count essentially chooses randomly shortest routes source obtains initial route request illustrated best route 
etx helps source picks initial route high throughput 
illustrates performance etx dsr feedback enabled 
etx provides small benefit pairs intermediate low throughput ranges middle bottom cdf 
failure feedback allows dsr perform dsr etx 
accuracy link measurements experiments etx byte packets estimate link loss ratios 
loss ratios experienced data packets sizes differ etx estimate 
shows loss ratios vary packet size cumulative fraction node pairs max hop throughput run mw byte packets hop hop best static route dsr etx feedback dsr hop count feedback packets second delivered throughput cdfs dsr etx compared dsr hop count link layer transmission feedback disabled 
etx significantly improves initial route selection 
number different links 
experiments data virtually identical broadcast delivery tests described section broadcasting nodes sent packets eighteen different sizes bytes 
sets experiments conducted course days results averaged minimize short term variation 
values represent packet size values show delivery ratio broadcast packets size 
lines connect data points host pairs 
shows packet size significant effect delivery ratios 
etx uses single packet size estimate link metrics 
lead inaccurate metrics packet sizes size measurement probes 
furthermore etx uses single packet size measurements estimate delivery ratio link layer ack packets 
ack packets smaller data packet etx underestimates delivery ratio ack packets 
ack packets bytes total including overhead byte data packets experiments bytes overhead 
shows accuracy etx transmission count predictions 
point graph represents experiment link randomly selected nodes 
experiment nodes take turns sending broadcast probes byte data payload 
turn consists probe broadcasts course second 
seconds turns node nodes sends unicast traffic seconds fast allows 
node logs packets sent received 
sent packet packets wireless interface attempted transmit node asks hardware transmission succeeded times hardware re transmitted packet 
values graph represent average actual transmission counts 
values expected transmission count broadcast delivery ratios preceding minute calculated equation 
shows etx tends overestimate number required cumulative fraction node pairs max hop throughput run mw byte packets hop hop best static route dsr etx dsr hop count packets second delivered dsr etx compared dsr hop count transmission feedback enabled 
etx slightly improves dsr performance link layer transmission failure feedback helps dsr avoid links high loss ratios 
delivery ratio run mw various packet sizes packet size delivery ratio decreases larger packets 
graph shows broadcast delivery ratio versus packet size links test bed 
links shown top bottom 
transmissions probably underestimates ack delivery ratio link 

related behavior routing protocols lossy links addressed evaluated real implementations papers 
lundgren coin term gray zones refer links deliver routing protocol data data traffic 
propose link handshaking counting route broadcasts filter gray zone links 
chin propose link handshaking filter asymmetric links :10.1.1.125.5750:10.1.1.125.5750
hu johnson describe preemptively issue dsr route requests link snr values 
observe hop count performs poorly routing metric sensor network results actual count run mw byte packets predicted count etx measures byte probes underestimates ack delivery ratios overestimates total number transmissions packet 
graph shows average actual transmission count delivered unicast packets versus prediction bidirectional delivery ratios broadcast probes preceding minute 
ing loss aware metric 
path metric approximates product link delivery ratios 
argued section metric low loss paths hops situations path smaller number higher loss links perform better 
awerbuch metric help find high throughput paths different links run different bit rates 
metric account losses complementary etx 
solution high link loss ratios improve apparent loss ratio form redundancy 
forward error correction mac level acknowledgment retransmission solutions snoop tcp tulip take approach 
techniques preferable low loss ratio high loss ratio links retransmissions redundancy reduce useful link capacity generate interference 
number existing ad hoc wireless routing algorithms collect link signal strength information apply threshold avoid links high loss ratios 
approach may eliminate links necessary connectivity fail distinguish accurately links issues links intermediate loss ratios 
wireless quality service qos algorithms approach route selection top 
techniques explicitly schedule transmission slots time frequency division mac layers provide bandwidth guarantees treat mac opaque rely bandwidth delay information constraints 
approaches successful lower layers provide accurate information actual links average number usable transmission slots achievable throughput 
approaches consider case lossy links 
assumes loss ratio link controlled system 
sophisticated hardware allow transmit power levels changed links better behaved 
existing systems exploit idea focus minimizing energy consumption required successfully deliver data 

introduces new metric multi hop wireless networks called etx 
route selection etx accounts link loss ratios asymmetry loss ratios directions link reduction throughput due interference successive hops route 
measurements wireless test bed show etx finds routes significantly higher throughputs minimum hop count metric particularly paths hops 
aspects etx improved predictions loss ratios different packet sizes particularly acks handling networks links run variety bit rates robustness etx probes competing high levels data traffic 
protocol implementations described available www pdos lcs mit edu grid 

acknowledgments grateful people laboratory willing host wireless nodes 
eddie kohler help improvements click providing initial dsr implementation ben chambers help earlier version 

network simulator ns 
www isi edu nsnam ns 
awerbuch david holmer herbert 
high throughput route selection multi rate ad hoc wireless networks 
technical report johns hopkins university computer science department march 
version 
hari balakrishnan venkata padmanabhan srinivasan seshan randy katz 
comparison mechanisms improving tcp performance wireless links 
ieee acm transactions networking december 
yu wang chi chung ko 
fair medium access wireless ad hoc networks 
annual ieee acm international workshop mobile ad hoc networking computing mobihoc august 
josh broch david maltz david johnson yih chun hu jetcheva 
performance comparison multi hop wireless ad hoc network routing protocols 
proc 
acm ieee mobicom pages october 
chen klara nahrstedt 
distributed quality service routing ad hoc networks 
ieee journal selected areas august 

chen tsai gerla 
qos routing performance multihop multimedia wireless networks 
proceedings ieee 
kwan wu chin john judge williams roger 
implementation experience manet routing protocols 
acm sigcomm computer communications review november 
brian davies davies 
application packet switching techniques combat net radio 
proceedings ieee january 
rohit dube cynthia yeh wang satish tripathi 
signal stability adaptive routing ssa ad hoc mobile networks 
ieee personal communications february 
tom abu 
preemptive routing ad hoc networks 
proc 
acm ieee mobicom july 
rabiner heinzelman chandrakasan hari balakrishnan 
energy efficient communication protocols wireless microsensor networks 
proceedings hawaiian international conference systems science january 
yu ching hsu tsai ying dar lin mario gerla 
bandwidth routing multi hop packet radio environment 
proceedings rd international mobile computing workshop 
yih chun hu david johnson 
design demonstration live audio video multihop wireless ad hoc networks 
proceedings milcom 
david johnson 
routing ad hoc networks mobile hosts 
proc 
ieee workshop mobile computing systems applications pages december 
david johnson david maltz yih chun hu 
dynamic source routing protocol mobile ad hoc networks dsr 
internet draft progress ietf april 
www ietf org internet drafts draft ietf manet dsr txt 
john jubin janet 
darpa packet radio network protocols 
proceedings ieee january 
eun sun jung nitin vaidya 
power control mac protocol ad hoc networks 
proc 
acm ieee mobicom september 
eddie kohler robert morris chen john jannotti frans kaashoek 
click modular router 
acm transactions computer systems november 
li charles blake douglas de couto hu imm lee robert morris 
capacity ad hoc wireless networks 
proceedings th acm international conference mobile computing networking pages rome italy july 
richard lin 
demand qos routing multihop mobile networks 
proc 
ieee infocom april 
henrik lundgren erik nordstr christian tschudin 
coping gray zones ieee ad hoc networks 
th acm international workshop wireless mobile multimedia september 
anthony ephremides 
algorithms routing session traffic wireless ad hoc networks energy bandwidth limitations 
proceedings th ieee international symposium personal indoor mobile radio communications 
christina garcia luna aceves 
tulip link level protocol improving tcp wireless links 
proc 
ieee wireless communications networking conference wcnc september 
charles perkins pravin bhagwat 
highly dynamic destination sequenced distance vector routing dsdv mobile computers 
proc 
acm sigcomm conference sigcomm pages august 
charles perkins elizabeth royer 
ad hoc demand distance vector routing 
proceedings nd ieee workshop mobile computing systems applications 
rice monarch project 
wireless mobility extensions ns www monarch cs rice edu cmu ns html 
pavel josh broch daniel 
optimizing wireless network protocols real time predictive propagation modeling 
radio wireless conference august 
ram ramanathan regina rosales hain 
topology control multihop wireless networks transmit power adjustment 
proc 
ieee infocom march 
shah klara nahrstedt 
predictive location qos routing mobile ad hoc networks 
proceedings ieee international conference communications 
sinha sivakumar bharghavan 
cedar core extraction distributed ad hoc routing algorithm 
proc 
ieee infocom march 

modular adaptive ad hoc routing click 
master thesis university colorado 
mark steven conner lakshman krishnamurthy brent elliott alan mainwaring 
real world experiences interactive ad hoc sensor network 
proceedings international workshop ad hoc networking august 
zhu scott corson 
qos routing mobile ad hoc networks 
proc 
ieee infocom june 
