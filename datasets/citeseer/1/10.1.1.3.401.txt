bidding customer orders tac scm learning approach supply chains current challenging problem agentbased electronic commerce 
motivated trading agent competition supply chain management tac scm scenario consider individual supply chain agent having major subtasks acquiring supplies selling products managing local manufacturing process 
focus sales subtask 
particular consider problem finding set bids customers simultaneous reverse auctions maximizes agent expected profit 
key technical challenge address determining probability customer accept particular bid price 
compare machine learning approaches estimating probability bid acceptance 
perform experiments apply learning method actual gameplay measure impact agent performance 

supply chains current challenging problem agent electronic commerce 
problem commonly faced agents acting supply chains negotiating customers order sell goods 
negotiations handled reverse auctions sellers submit sealed bids response requests quotes customers 
situation particularly difficult sellers bid multiple auctions simultaneously agent await outcome auction bidding 
deciding auctions bid bids place agent limited resources able judge balance competing risks winning auctions winning 
case unable fully utilize resources profitability unable meet obligations customers 
trading agent competition supply chain management tac scm scenario provides perfect testbed study problem 
tac scm agents competing computer manufacturers handle basic subtasks acquiring components managing local manufacturing process selling assembled computers customers 
agents receive incomplete information state game limited amount time decisions resulting challenging competition 
prob david peter stone university texas austin department computer sciences austin tx usa cs utexas edu lem studied motivated tac tex successful agent entered tac scm competition 
experience identified sales subtask crucial aspect tac scm scenario 
focus problem determining optimal set bids agent response computers received customers 
key technical challenge address determining probability customer accept particular bid price 
ability predictions agent apply search method find profitable set bids 
remainder organized follows 
section give brief summary tac scm scenario provide information related 
give complete description problem solving section 
section comparison machine learning approaches estimating probability bid acceptance 
section measure impact learning agent performance performing controlled experiments involving actual tac scm games 
section proposes directions concludes 

background section give brief summary tac scm scenario emphasizing parts relevant sales subtask provide information related 

tac scm game tac scm game agents act computer manufacturers simulated economy managed game server 
length game simulated days day lasting seconds real time 
day agents receive messages game server information concerning state game customer day 
agents day send messages server indicating actions day bids 
game divided parts production delivery component supply computer demand 
focus computer demand sales aspect tac scenario 
customers wishing buy computers send agents identical consisting type computer desired quantity computer desired due date days reserve price indicating maximum amount customer willing pay penalty paid day delivery late 
orders canceled fifth late day 
reserve prices range base price requested computer type multiplied quantity penalties range reserve price 
base price computer equal sum base prices parts 
agents respond making offers sell certain price agent offering lowest bid winning order 
agents unable see prices offered agents winning prices receive report day indicating highest lowest price type computer sold previous day 
number come customers depends level customer demand represented parame ter actual number day drawn poisson distribution mean 
fluctuation demand modeled multiplying amount representing current trend day 
trend follows random walk bounded initial value chosen uniformly randomly range 

related problem predicting probability winning auction particular sealed bid commonly approached statistical methods surveyed 
methods require extensive historical information competitors past bids assume static environment 
tac scm probabilities vary considerably game information available competitors bids game running 
machine learning approach similar developed uses naive bayes classifier predict probability bid winning bid price features bid available information bidders 
previous agents trading multiple goods simultaneous auctions auctions considered english similar auctions 
instance consider separate tac scenario agents acting travel agents satisfy customer preferences bidding hotel rooms items presents agent purchases cargo space flights forward auctions provides shipping services customers reverse auctions 
agents participating simultaneous english auctions advantages agents participating simultaneous sealed bid auctions bids agents viewed bids revised auctions may different closing times providing agents knowledge auction outcomes time decisions auctions 
solution tac scm bidding problem similar uses linear regression bidding results form predictions bid acceptance uses stochastic programming determine optimal bids 
additional approaches described 

problem specification specify problem addressing 
consider problem agent participating tac scm game decide bids place received customers day 
inputs agent decision process set customer agent available resources components assembled computers inventory production cycles information past auctions agent knowledge bids reported highest lowest prices type computer sold computers requested day agent produce goal agent win auction find set bids maximizes agent expected profit committing agent produce computers possibly 
viewing tac game agent goal maximize profit relative profits competing agents due difficulty determining effect agent bids agents assume agent concerned profit 
real supply chain profit maximization true goal 
simple approach problem predict highest price auction won bid price profitable auctions expecting win 
sophisticated approach involves considering possibility placing high bids auctions hopes winning fraction 
second approach agent tac scm competition approach considered 
agent implementing approach requirements 
ability form estimates probability winning auction function bid price 
means estimates find set bids maximizes agent expected profit consider primarily component leave comparison implementations second component 
section experiment different machine learning approaches predicting probability bid acceptance 
section experiment actual tac scm games compare performance agent learning agents fixed heuristic predictors 

learning auction winning probabilities predicting probability winning auction tac scm challenging problem main reasons agents receive limited information auction results ii auctions due differing attributes iii winning prices fluctuate rapidly due changing game conditions 
result approach analyzing past auction results current game yield accurate predictions 
turn machine learning methods training data past games 
problem trying solve viewed multiple regression problem 
solved regression learning algorithm learn probability winning auction function factors including bid price 
follow modified approach solve similar conditional density estimation problem different tac scenario 
approach involves dividing price range bins estimating probability winning auction bin endpoint 
post processing step converts learned set probabilities probability density function interpolating bin endpoints enforcing monotonicity constraint ensures probabilities decrease prices increase 
method separate predictor trained endpoint predict probability winning point 
concept learned predictor simpler concept learned single predictor prices 
leave empirical comparison approach 
section focus task training individual predictors 
describe format training data compare effectiveness learning algorithms look impact choice training data predictions 
important note training done line game time constraints factor 

training data format data experiments taken results final rounds tac scm competition held august 
winning bids customer obtained game logs available immediately game terminates 
issued course games providing ample data training testing 
order eliminate start game game effects sent day day day game considered simplifying concept learned 
training instance created 
attributes included instance reflect details represents information available agents time level demand game prices requested type computer sold 
instance contains current date quantity penalty due date reserve price highest lowest prices requested computer type sold past days 
additional attributes provided customer demand give picture daily number varied course game 
monetary values expressed fraction computer base price 
separate predictor trained price point want predict probability winning auction expressed fraction computer base price 
value auction labeled winning bid greater 
instances representing receiving bids labeled equal reserve price 

algorithm comparison performed experiment comparing effectiveness different regression learning algorithms train predictors neural networks single hidden layer backpropagation regression trees regression trees boosted additive regression successively fits new base learner residuals left previous step decision stumps decision trees boosted additive regression decision trees decision trees boosted adaboost boostexter 
boostexter boosting method originally designed text classification algorithm 
uses decision stumps base learner form adaboost weight training instance rounds training outputting weighted sum learned decision stumps 
algorithms considered support vector machines naive bayes nearest neighbors poorly initial testing 
algorithms boostexter implementations provided weka machine learning package default parameters 
informal attempts tuning parameters appear significantly affect performance 
comparison include results obtained simple heuristic predictor gives reasonably results 
past days predictor forms uniform density function interval highest lowest prices reported requested computer type 
weighted sum density functions days receiving weight probability density function estimates bid acceptance taken 
note formulation represents standpoint seventh agent wanting know probability agents place bid experiment evaluated learning algorithms data set taken final round competition 
cross validation meaning training test data came games 
true value probability prediction utility gained determining context tac scm agent feasible root mean squared error predicted probabilities actual outcomes measure comparison 
ran separate tests predicting probability winning auction different values results fold cross validations sults values large number training instances tree methods clearly best performance followed boostexter 
errors methods level limited number training instances errors tree methods continue decrease point available training data 
training sets size difference observed pair algorithms statistically significant confidence level 
root mean squared error similar re heuristic neural network boosted stumps boostexter number training examples 
results boosted boosted 
choice training data previous experiment training data test data taken set games agents participating game 
raises possibility algorithms learned concepts specific games set agents applicable general 
unrealistic tac setting agent predictors trained data game currently participating 
practice important know predictor trained set agents reliable games different set agents 
experiment addresses issues 
consider case agent participating final round competition 
agent want train predictors data relevant situation 
final round relevant data come results round contained brackets agents 
result data reflect agents final round agents defeated round 
finals agent able analyze results completed games finals option retraining predictors new data combination data 
performed experiment comparing results training choices training data 
divided games final round halves labeled finals finals 
finals test data predictors trained data different sources finals combined finals finals cross validation 
results trees boostexter top performing algorithms shown figures 
curves labeled source data training 
predictors trained data finals performance gap trees boostexter disappeared performance tree methods boosted trees fell 
errors tree methods longer continued decrease training instances error increased observed data training 
suggests strong performance tree methods experiment largely due ability learn game specific factors generalize 
boostexter appears achieve somewhat lower errors trees experiment testing different game scenarios need done determine case general 
expected predictors trained data finals outperformed predictors trained data different games 
performances better heuristic 
predictors trained finals performed better trained confirming relevant training data produces better results 
somewhat surprisingly predictors trained combination finals performed better predictors trained finals 
may predictor trained data variety sources generalize best new situation training data relevant new situation 
results experiments suggest right choice learning algorithm training data learn probability winning auction reasonably 
learning root mean squared error heuristic finals finals finals number training examples 
trees truly test value predictions need input method selecting bids actual tac games 
focus section 

agent performance section evaluate effectiveness learning approach part complete agent tac scm gameplay 
controlled experiments agents differing predictions bid acceptance play repeatedly 

agent design basic design agent essentially entry tac scm competition minor modifications 
production delivery handled greedy production scheduler gives nearoptimal performance practice 
module responsible bidding customer determines resources available filling current orders creates function maps bid prices probability bid acceptance performs heuristic search functions try find set bids maximizes agent expected profit 
order isolate effects bidding modified game settings allow agent receive effectively unlimited quantity component th game day cost eliminating need strategy purchasing components suppliers 
entirely unrealistic agents competition ordered majority components game day 
agents allowed carry type computer inventory prevent limitless components build large computer inventories periods low customer demand 
effect limitation increase responsiveness computer prices changes demand creating dynamic interesting game scenario 

predictions bid acceptance probabilities sole experimental variable consider method predict probability bid acceptance 
names competing agents root mean squared error heuristic finals finals finals number training examples 
boostexter prediction methods follows uses learning described section 
agents heuristic described section 
agents simpler predic tion heuristic originally 
testing game data shown heuristic accurate provide variety bidding behavior agent simply bids fraction base price 
fraction lower bound increases proportionally number orders agent currently 

experimental setup rounds games played agents 
round heuristic game logs round train set predictors second round 
trained separate predictor price points times base price spaced interval boostexter learning algorithm available data instances 
learning agent trying agents bids ignored determining winning bid training instance 
functions mapping bids probabilities acceptance created predictions enforcing monotonicity constraint interpolating described added step setting probabilities bids reserve price 
second round games played 
third round set predictors trained logs final rounds tac scm competition 
purpose determine predictors generalize different set agents 
agent relative score round round round table 
average relative score millions dollars 
results results table 
results agents nearly identical average 
true agents 
average relative score agent standard deviation 
agent relative score game score minus average score agents game 
average score agents games round 
agents initially sufficient components game component costs included scores 
results round see accurate predictions leads clear improvement performance 
fact higher scores games 
results second round show exactly hoped see learning significantly improved agent performance 
scored higher large margin games average margin nearly 
third round managed outperform agents smaller margin single game 
considering predictors trained games involving completely dif ferent set agents somewhat different game scenario limited component supply result promising 
actual competition access large number games involving agents competing experiment suggests learning successfully applied case 

considered problem faced agent acting supply chain bid simultaneous reverse auctions win orders customers 
tac scm test domain learning approach task predicting probability bid accepted customer 
comparison learning algorithms showed regression trees boostexter result similar prediction accuracy testing training data come separate games 
part complete agent learned predictors shown provide significant improvement performance heuristic predictors 
important result demonstrated learned predictors generalize new situations terms prediction accuracy agent performance 
gives hope learning approach successfully competition facing different sets agents agents change behavior time 
possible ways predictions improved 
results section suggest acquiring data variety situations aid training robust predictor 
experiments determine best combinations data agent 
additional information available agent included features knowledge availability prices components 
agent knowledge auction results game line improvements predictors 
boosting predictors lend approach making incremental modifications existing predictors straightforward 
agent bidding performance depends accuracy predictions method uses select set bids predictions 
considered issue plan address problem searching optimal sets bids 
acknowledgments research supported part nsf career award iis 
raghu eriksson finne janson norman sadeh 
tac supply chain management game 
technical report swedish institute computer science 
draft version 
michael amy greenwald roger victor michael 
supply chain management agent designed optimize uncertainty 
exchanges february 
erik dahlgren peter wurman 
conservative trading agent 
exchanges february 
estelle wellman singh 
strategic interactions supply chain game 
technical report university michigan 
amy greenwald justin boyan 
bid determination simultaneous auctions case study 
proceedings third acm conference electronic commerce pages tampa fl 
wellman singh estelle 
distributed feedback control decision making supply chains 
international conference automated planning scheduling 
lawrence 
machine learning approach optimal bid pricing 
proceedings eighth informs computing society conference optimization computation network era arizona 

critical analysis bid pricing models support tool 
ieee international conference systems man cybernetics piscataway nj 
david peter stone 
supply chain management agent 
exchanges february 
chris preist claudio bartolini andrew 
agentbased service composition simultaneous negotiation forward reverse auctions 
proceedings th acm conference electronic commerce pages 
acm press 
norman sadeh raghu eriksson finne janson 
tac supply chain trading competition 
ai magazine spring 
robert schapire yoram singer 
boostexter boosting system text categorization 
machine learning 
robert schapire peter stone david mcallester michael littman nos 
modeling auction price uncertainty boosting conditional density estimation 
proceedings nineteenth international conference machine learning 
peter stone robert schapire nos michael littman david mcallester 
learning autonomous bidding agent 
agent mediated electronic commerce iv designing mechanisms systems volume lecture notes artificial intelligence pages 
springer verlag 
ian witten eibe frank 
data mining practical machine learning tools techniques java implementations 
morgan kaufmann 

