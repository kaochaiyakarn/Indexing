distributed parallel databases kluwer academic publishers 
manufactured netherlands 
query processing optimization web mourad ouzzani mourad vt edu bouguettaya vt edu department computer science virginia tech recommended ahmed elmagarmid 
advent internet web subsequent ubiquity brought forth opportunities connect information sources types boundaries local regional organizational 
examples information sources include databases xml documents unstructured sources 
uniformly querying information sources extensively investigated 
major challenge relates query optimization 
querying multiple information sources scattered web raises barriers achieving efficiency 
due characteristics web information sources include volatility heterogeneity autonomy 
characteristics impede straightforward application classical query optimization techniques 
add new dimensions optimization problem choice objective function selection relevant information sources limited query capabilities unpredictable events 
survey current research fundamental problems efficiently process queries web data integration systems 
outline classification optimization techniques framework evaluating 
keywords query optimization web data integration mediators databases 
turn century witnessed largest expansion internet 
widespread deployment web key factor exponential growth 
primary medium shaping human activities 
particularly enabled technical advances achieved different areas including high speed networking communication protocols mark languages graphical interfaces java technologies communication middleware 
web continuously attracting waves users service providers 
de facto medium exchanging information services 
globalization spurred development tools aids navigate share information corporate intranets previously accessible online restrictive way prohibitive costs 
information age revolution highlighted role database management system dbms enabling technology 
dbmss currently technology choice modeling storing managing efficiently querying large amounts information 
provide functions protecting data integrity facilitating reliable flexible data access manipulation synchronizing concurrent accesses applications securing data 
early web period provided users access text pages hypertext links 
nowadays web provides access variety data ouzzani bouguettaya multimedia rich 
readily available information retrieval techniques inverted indices allow efficient keyword access text largely enabled access exponentially growing web 
pressure users mounted allow access richer types information provide services simple keyword search database research community responded pronged solution 
databases model web pages information extracted dynamically build schema users submit sql queries 
adopting xml data representation second proposed solution centered adding database constructs html provide richer data types 
today dbms technology faces challenge researchers attempt sense immense amount heterogeneous fast evolving data available web 
large number cooperating databases greatly complicates autonomy heterogeneity issues 
requires better models tools describing data semantics specifying metadata 
techniques automatic data metadata extraction classification ontologies example crucial building tomorrow semantic web 
query languages query processing optimization techniques need extended exploit semantic information 
users need adaptive systems help explore web discover interesting data sources interfaces support different query search paradigms 
data dissemination techniques notification services developed enable effective data delivery services 
web centric applications commerce digital government applications pose stringent organizational security performance requirements far exceed possible traditional database techniques 
part wide successful deployment emerging web applications electronic commerce digital government need provide support access information web uniformly efficiently 
decade large body database research devoted issues related building data integration infrastructures 
includes research distributed database systems multidatabase systems 
cases traditional focus enabling data sharing small number databases 
seminal papers large scale networks databases provided early framework 
deployment web database technology adapted provided early solution glut information suddenly accessible 
databases applications evolving environment characterized larger number resources stricter autonomy wider spectrum heterogeneity high dynamics easier interconnection higher distribution quasi lack organizational control structures larger number clients light characteristics goals means achieve coordinated access databases web need reevaluated 
query optimization takes central stage data integration systems web 
web characteristics task enabling efficient querying difficult 
major difficulty optimizing queries web query submitted specific information source control execution longer possible 
compounding problem information source may exhibit different behavior initially assumed impairing predictions 
result traditional optimization techniques rely heavily statistical information may hardly applicable 
query optimization web may span larger spectrum criteria query processing optimization web classical cost model 
example information quality criterion reliability availability sources fees furthermore web volatility highly dynamic nature challenge expectation queries return results 
information sources expected provide query capabilities 
query processor needs sure generated query execution plan feasible respect limitations 
survey queries processing optimization web data integration systems 
classification different techniques comprehensive framework evaluate 
described systems adopt mediator approach data integration 
systems match information requests consumers individual users applications information providers 
survey classifies different systems focus query optimization approaches 
overview cost optimization techniques adaptive query optimization quality optimization query optimization presence sources limited capabilities 
general cost optimization techniques extend classical cost model various means estimation caching adaptive schemes addresses efficiency presence unpredictable events 
quality optimization takes different direction regarding matters terms optimization web 
group techniques focuses optimizing queries making sure execution possible 
remainder organized follows 
section summarizes early query optimization pre web era 
briefly outlines basic query optimization principles 
section introduces data integration web thorough presentation research issues query optimization context 
section represents core survey 
describes different systems techniques query optimization web data integration systems 
covered parts focus 
section provides summary discussion different approaches 
section discusses trends open issues data application integration web major paradigm shifts semantic web web services 

pre web data integration briefly outline section major conducted database integration query optimization pre web era 
summarize basic concepts query optimization 
overview main data integration approaches query optimization addressed 
declarative query sql execution plans produce results 
different plans answer query equivalent terms final output 
may differ different performance parameters response time resource 
researchers recognized importance designing module select best query execution plan 
optimization received particular attention database arena techniques proposed 
role optimizer determine query execution plan minimizes objective cost function 
optimization problem described abstractly follows ouzzani bouguettaya cost find subset cost mine 
optimizer characterized dimensions execution space captures underlying execution model defines alternative executions 
ii cost model predict cost execution iii search strategy enumerates execution plans select best 
traditional query optimization strategies classified main categories heuristic 
heuristic rules re arrange different operations query execution plan 
example minimize size intermediate results 
cost 
costs different strategies estimated best selected order minimize objective cost function 
example number os 
hybrid 
heuristic rules cost estimates combined 
cases focus join operation costly operation 

data integration approaches information systems provide interoperation varying degrees integration multiple databases termed multidatabase systems federated databases generally heterogeneous distributed database systems 
data integration generally implies uniform transparent access data managed multiple databases 
mechanism achieve goal integrated schema involves parts component schemas 
taxonomy sheth larson classifies existing solutions categories global schema integration federated databases multidatabase language approach 
categories tightly integrated component systems 
global schema integration attempts data sharing 
complete integration multiple databases provide single view global schema 
exhaustive survey schema integration provided comparison methodologies 
federated databases certain amount autonomy individual database systems maintained 
information sharing occurs import export schemas 
particular database exports part schema depending database exporting 
importing database perform needed integration locally 
databases registered federal dictionary 
multidatabase language approach intended users predefined global partial schema 
preexisting heterogeneous local databases usually integrated modifications 
information stored different databases may redundant heterogeneous inconsistent 
aim multidatabase language provide constructs perform queries involving databases time 
major criticism approach lack distribution location transparency users priori find right information potentially large network databases 
users responsible understanding schemas detecting resolving semantic conflicts 
approach users faced issues consist finding relevant information query processing optimization web multiple databases understanding individual database schema detecting resolving semantic conflicts performing view integration 

query optimization query optimization received particular attention heterogeneous distributed databases systems 
noted early lack statistical information participating databases prevented direct application techniques developed homogeneous systems 
different techniques proposed overcome lack statistical information 
example pegasus uses cost model logical parameters include database cardinality selectivity 
parameters obtained calibrating queries 
calculated number heuristics optimize queries 
cords sampling probing applied local databases estimate costs gathering statistical information 
special queries executed top participating databases behavior results recorded 
process repeated frequently needed 
query processing global level conducted gathered information classical cost model 
example mind 
uses dynamic optimization strategy 
statistical scheme runtime determine select costly selective inter site operation currently available partial results 
inter site operation assigned weight includes cost selectivity transfer cost 
operations scheduled weights exceed threshold value computed time partial result available 

web data integration advent web brought fore seamless interconnection diverse large numbers information sources 
allowing uniform querying sources major goal research efforts 
proposed systems techniques focused making uniform querying feasible despite types hurdles heterogeneity autonomy unpredictability web achieving full potential uniformly querying disparate web information sources fundamentally dependent devising adequate query optimization techniques 
different approaches web data integration 
widely approach concept mediator initially introduced seminal gio wiederhold 
systems techniques survey fall category 
approaches agents ontology information retrieval techniques 
section gives details mediator approach 
highlights major research issues related query optimization data integration web 

mediator approaches simplified architecture mediator systems shown 
mediators provide integrated view mediated schema multiple heterogeneous autonomous information ouzzani bouguettaya 
mediator 
mediator mediator wrapper wrapper wrapper information sources sources 
schema represents generally synthesized view application domain 
users access integrated view uniform interface offers location model interface transparency 
source connected wrapper enables participation system 
translates source local language model concepts mediator level 
resolve query mediator typically performs main tasks database selection 
locate select databases relevant query 
query translation 
decompose query sub queries respect previously selected databases 
sub query transformed form executable corresponding database 
sub query sent database wrapper results retrieved 
result merging 
combine different results global answer user 
important characterization mediator systems relates nature relationship mediated schema schemas participating databases 
main approaches adopted source centric aka local view approach relations stored information sources described terms global schema 
query centric aka global view approach global schema defined terms relations stored local information sources 
source centric approach scales better query centric modifications information sources affect query processing optimization web rest system 
hand translating global queries local ones easier query centric approach 

research issues query optimization received particular attention different types database systems central distributed multidatabase 
ultimate goal database system allow efficient querying 
unsurprisingly data integration systems web escape objective 
query optimization central deployment data integration systems overs web 
deemed challenging due nature web large heterogeneity spectrum strict autonomy large user base dynamic behavior queries web information sources may answered various ways 
alternative outputs usually results 
alternatives may differ widely terms efficiency 
may relate response time network resources number information sources involved quality information accessed quality returned results users satisfaction 
consequently query optimization techniques web need carefully crafted 
devising right techniques necessitate address large spectrum issues 
outline issues directly related query optimization data integration systems web 
optimization paradigm 
optimizing queries amounts usually minimizing response time 
objective function driving optimizers 
desirable web applications may require different parameters objective function 
include fees access informations sources quality data freshness number sources access devising optimizer requires set adequate objective function relevant web applications 
optimizing large number heterogeneous autonomous information sources 
data integration faces far incongruent environment pre web era 
heterogeneity happen different levels data integration system 
time resources required bridge heterogeneity may important impact optimization process 
autonomy serious impact optimization techniques require specific information information sources 
information easily available 
furthermore sub query submitted specific information source optimizer data integration system control 
exponential growth terms information sources potential users 
query optimization take account scalability issues avoid performance degradation 
degradation lead inefficient query execution plans 
evolving dynamic environment 
major characteristic web lies high dynamism volatility 
information sources availability behavior change warning 
addition unpredictable events happen anytime query processing execution 
query optimizer need adaptive mechanisms avoid missing optimal query execution occurrence event 
adaptive techniques gather optimization information fly modify execution plan 
ouzzani bouguettaya dealing limited query capabilities 
web information sources generally exhibit capabilities terms queries handle 
limitations due reasons including performance security 
may range fully featured database systems allowing full access content information sources restricted access forms 
query optimizer generate efficient query execution plans effectively executable respect constraint imposed accessed sources 
may especially mean optimal plans skipped feasible 
locating sources interest 
queries generally specify specific information sources need accessed 
cases finding sources straightforward process query unfolding global view mediators 
challenging 
precisely query optimizer able limit access relevant sources avoid wasting resources sources superior qualities alternative sources compete offering information 
addressing issue dependent meta information available information sources 
relates issue source description advertisement 

dimensions query optimization web surveying research conducted query optimization web data integration systems noticed lack comparison different approaches 
situation due lack analytical model compare techniques 
classical systems established models benchmark tools developed purpose 
propose dimensions query optimization web data integration systems compared 
dimensions subjective may precisely quantified 
scalability 
dimension measures degradation ofthe query optimization technique number information sources grows 
growth terms information sources users 
dimension may difficult measure real setting 
fine tuning may necessary 
autonomy preservation 
relates information required information source deploying optimization technique 
optimization performance 
dimension provide performance evaluation objective function different scenarios 
scenarios may varied types queries submitted number types sources accessed parameters 
analytical experimental studies need conducted 
note approaches done studies 
adaptiveness 
reflects ability optimization technique take account unexpected changes 
capabilities 
dimension checking optimization technique takes account sources different limited query capabilities 
need check technique optimal plans 
query processing optimization web 
research prototypes techniques divide section parts 
part focus systems propose query optimization techniques cost model 
second part describes techniques quality information accessed sources data optimize queries 
third part adaptive techniques mediator systems 
describe techniques focus finding feasible optimal query execution plans sources limited capabilities 
selected part representative prototypes techniques query optimization 
prototypes provide access structured semistructured information sources 
selected fact addressed attempted address issues related query optimization 

cost optimization web data integration systems query optimization extending classical cost model 
major challenge approach relates optimization information autonomous information sources 
approaches assume availability statistics estimated provided wrappers 

disco 
disco mediator system global view approach 
mediator generates multiple access plans involving local operations information sources global operations mediator level 
data model odmg standard 
object definition language extended allow multiple extents application interface protocol relational calculus query optimization metadata catalog tuples updates registration administration interface 
disco architecture 
run time system disco mediator wrapper interface protocol relational algebra tuples costs capabilities schema run time system registration time system disco wrapper wrapper wrapper data source ouzzani bouguettaya associated interface type mediator 
provides type mapping information mediator data source 
disco uses cost optimization approach 
combines generic cost model specific cost information exported wrappers 
generic cost model uses cost formulas established calibrating approach developed iro db federated system 
data source interface specified subset corba idl extended cardinality section data source statistics cost formula section specific formulas 
wrapper writer exports statistics cardinality collection size rules reflect change result sizes due operation cost computation rules compute cost estimates 
query optimized estimating cost single operations entire plans 
mediator selects specific information available wrappers generic cost model 
cost execution query plan determined step bottom algorithm cost formula integration cost estimation 
inthe step wrapper rules integrated mediator cost model 
second step cost estimates plan generated 
plan represented tree operator nodes 
traversed root leaves leaves root 
traversal cost formulas associated nodes 
second traversal cost operator computed 

garlic 
garlic provides integrated view heterogeneous information sources global view approach 
query processing dynamically determining middleware wrapper roles answering query 
wrapper provides tasks including modeling information sources garlic objects allowing garlic retrieve object allowing garlic invoke methods objects retrieve attributes participating query processing execution 
garlic objects interface abstractly describes object behavior corresponding implementation provides concrete realization 
query translated tree metadata 
garlic architecture 
client wrapper wrapper relational db object db client client garlic query processor wrapper image archive query processing optimization web operators plan operators 
operator corresponds runtime operator join sort fetch scan 
garlic provides pop encapsulates conducted information source 
plan characterized properties tables plan output columns estimated cost 
garlic extends traditional cost optimization approach involving wrappers important components optimization process 
wrappers cooperate estimation total cost query plan 
proposed framework aims provide necessary means extend traditional cost optimization heterogeneous environment 
framework includes cost model cost formulas statistics 
wrappers may default cost model specific model execution strategies 
default cost model considers total cost apop operator combination cost basic tasks reset initializing operator advance retrieving result 
default cost formulas compute costs statistics 
cost reset advance tasks wrapper able provide cost estimates plans included global query plan 
total cost re execution cost result cardinality considered cost pop 
required estimate cost global query plan 
optimizer selects winning plan plan translated executable form 
translated operators directly executed garlic execution engine 

ariadne 
ariadne integration system uses local view mediation approach 
loom knowledge representation system construct domain model represents integrated view sources 
user queries formulated model 
query processing phases preprocessing phase query planning phase selection algorithm pre processes domain model allowing selection sources classes attributes 
query planning combination source selection strategy traditional distributed query optimization 
generates initial plan eventually suboptimal applies rewriting rules order improve quality plan 
rewriting rules iteratively applied acceptable solution resource limit reached 
quality query plan classical cost model depending size intermediate results cost relational operations communication costs 
authors assume availability statistics underlying sources compute costs 
classes rewriting rules considered 
class rules derived properties distributed environment contains rules 
rule alternative information sources answer query different costs 
rules allow execution group operations remote sources transferring data executing operations local source 
second class rules derived properties relational algebra commutativity associativity class rewriting rules relates heterogeneity environment 
needed reconcile semantic differences sources 
idea axioms describe attributes classes obtained combining information set sources 

hermes 
hermes considers construction mediators major distinct tasks domain integration physical linking information sources ouzzani bouguettaya semantic integration coherent extraction combination information provided sources 
query optimization hermes cost model caching 
statistics calls sources locally cached order estimate cost possible execution plans 
addition invariants derive equivalent execution query plans 
invariants represent expressions show possible substitutions external domain calls 
specify call substituted 
query processor checks cache see answer domain call stored cache 
uses invariants substitute domain calls check cache 
invariants indicate domain call cache provides partial list answers actual domain call may need performed 
hermes optimizer components 
rule rewriter finds different possible rewritings original query expressed terms external calls 
cache invariant manager maintains caches avoids actual calls external domain answer call physically cache 
manager uses invariants find acceptable entries cache 
domain cost statistics module provides estimates calls external information sources 
module keeps execution time cardinality statistics database provides cost estimates rule cost estimator 
rule cost estimator takes rewritten query rule rewriter computes cost plan obtaining cost estimates individual calls sources 
rule rewriter derives plan query 
estimate costs plan select best plan 
cost estimation relies cost vector database maintained 
database records cost information domain calls executed mediator 

quality optimization techniques systems considered different parameters included cost query 
parameters relate information quality sources data 
argument quality parameters important context web classical parameters response time 


data integration centered types suppliers data suppliers function providers query processing operators cycle providers operators execution 
execution query may involve query operators supplied different function providers executed different cycle providers retrieve data different data providers 
query processing follows multi step strategy 
lookup service locates instances types suppliers relevant resolution query 
cost information gathered step 
second step optimal plan built cost model previously gathered information 
step query execution plan distributed relevant cycle providers executed iterator model 
queries lookup service extracted parser themes attributes specified different clauses query 
lookup service uses generated queries locate relevant resources consulting meta data repository 
lookup service responsible gather statistical information optimizer authorization information query processing optimization web different providers 
authorization information recorded compatibility matrix annotate query execution plan 
optimizer enumerates alternative query execution plans system dynamic algorithm 
costs plans estimated information lookup service 
information missing set default value 
optimal plan executed distributing different cycle providers specified host annotations plan 
addition users specify quality constraints execution query 
constraints defined results size result cost user ready pay time time results 
qos management introduced part query processor 
fact quality constraints treated phases querying processing 
fulfilled query plan dynamically adapted query aborted 
qos concept optimizer goal maximize percentage successful queries abort query fulfill qos constraints soon possible 


high quality information querying uses information quality criteria support query optimization mediator systems 
focus incorporating information quality query planning 
useful environments biological information systems users sensitive quality criteria classical database criterion response time 
approach uses mediator architecture mediator uses query correspondence assertions queries 
set oriented equations involving queries mediator wrapper schemas 
sort combination source centric query centric approaches mediators 
query resolution process tries find correct plans combinations union results obtain complete answer 
include quality information iq inthe query planning classes quality criteria 
source specific criteria determine quality source 
include ease understanding reputation reliability timeliness 
specific criteria determine quality aspects specific queries computable source 
include availability price response time accuracy relevancy representational consistency 
attribute specific criteria relate ability source provide attributes specific query 
query processing conducted phase strategy 
iq criteria phase prunes low quality sources 
second phase finds plans combinations produce semantically correct answers 
query planning strategy information manifold see section 
phase quality related information 
plans obtained previous phase qualitatively ranked 
phase starts determining iq scores different different plans 
score vector dimensions dimension corresponding non source specific criteria specific attribute specific 
attribute specific criteria recalculated new query stable 
second step iq vector computed plan merging iq vectors join nodes appearing plan 
third step iq scores different plans scaled weighted compared simple decision making method simple additive weighting 
method scales scores comparable apply user weighting sum scores plan 
ouzzani bouguettaya 
adaptive query optimization important issue web data integration adaptive dynamic query optimization techniques face high volatility web 
techniques address mainly lack statistical information occurrence unpredictable events query execution 
generally try change execution plan run time re optimize query specific operators deal flexibly unpredictable events data delivery rates 
interesting characterization adaptive query processors 
states query processing adaptive receives information environment uses information determine behavior process iterates time generating feedback loop environment behavior 
section major projects dynamic query optimization 

telegraph 
telegraph project aims build query engine web information sources adaptive data flow paradigm 
objective adaptively route unpredictable bursty data flows computing resources 
query processor continuously reorders applications pipelined operators query plan run time tuple tuple basis 
uses concept eddy defined ary tuple router interposed data sources set query processing operators 
eddy encapsulates ordering operators dynamically routing tuples 
idea times processing binary operator join union possible modify order inputs modifying state operator 
times called moments symmetry 
occur called synchronization barriers 
case merge join corresponds table scan waiting table scan produces values larger seen 
reported eddies join operator due impact query performance 
focus telegraph join algorithms frequent times symmetry adaptive non existent barriers minimal ordering constraints 
efficiency system depends tightly routing policy eddies 
different routing policies need different circumstances 
depends operator selectivity operator consumption production rate join implementation initial delays input relations 
eddies implemented context shared parallel query processing framework called river 

tukwila 
tukwila system addressing adaptiveness data integration environment 
adaptiveness introduced levels optimizer execution engine execution engine 
level adaptiveness deployed annotating initial query plans event condition action eca rules 
rules check conditions certain events occur subsequently trigger execution actions 
examples events include operator failure time memory exceptions 
conditions include comparison actual cardinalities known query processing optimization web run time estimated 
actions include rescheduling query operator tree re optimization plan alteration memory allocation 
plan organized partially ordered set fragments set corresponding rules 
fragments pipelined units operators 
fragment terminates results materialized rest plan re optimized rescheduled 
addition data manipulation operators perform actions statistics gathering optimizer event handler invocation case significant event occurs 
operator tree execution follows top iterator model described 
second level adaptiveness operators dynamic collectors double pipelined hash join operator 
collector operator dynamically chooses relevant sources union involves data possibly overlapping redundant sources 
optimizer specifies order access sources alternative sources case unavailability slow delivery 
collector include set children wrapper calls table scans policy contacting 
policy expressed set event condition action eca rules 
double pipelined hash join symmetric incremental join 
aims producing tuples quickly masking slow data sources transfer rates 
requires maintaining hash tables memory relations 
original double pipelined join implemented adaptations 
adaption retrofit data driven bottom execution model operator tukwila query processing top iterator scheme 
second relates problem memory overflow 
strategies swapping 

interleaving scheduling optimization 
dynamic scheduling strategy deals memory limitation proposed 
monitoring arrival rates information sources memory availability 
case significant changes execution plan revised 
means planning execution phases interleaved 
query execution plan represented operator tree particular edges blocking 
edge consumption data start entirely produced 
edge data consumed tuple time meaning consumption start soon tuple available 
possible characterize query execution plan chains represent maximal set physical operators linked edges 
query engine concurrently select schedule execute query fragments chains partial materializations minimizing response time 
query engine main components dynamic query optimizer dynamic query scheduler dynamic query processor communication manager 
dynamic query optimizer uses dynamic re optimization techniques generate annotated query execution plan 
annotations relate blocking edges memory requirements estimates results sizes 
dynamic query scheduler builds scheduling plan scheduling phase triggered events query processor 
scheduling heuristics current execution status information benefits materialization chains 
dynamic query processor concurrently processes query fragments maximizing processor priorities defined scheduled plan 
execution may interrupted case data arriving ouzzani bouguettaya sources query fragment ended delivery rates significantly changed 
reported query scheduler eventually query optimizer scheduling optimization changes 
communication manager receives data different wrappers rest system 
estimates delivery rates sources reports significant changes query processor 

query scrambling 
query scrambling approach proposed 
goal react delays modifying query execution plan fly 
unexpected delays hidden performing useful works 
scrambling pronged action rescheduling scheduling operators execution operator synthesis new operators created operator execute 
techniques repeated necessary modify query execution plan 
scrambling policies differ degree parallelism introduce aggressiveness scrambling changes existing query plan 
important trade offs considered rescheduling number operators reschedule concurrently 
concerns benefits overlapping multiple delays cost materializations achieve overlapping 
second rescheduling individual operators entire subtrees 
choice specific operator reschedule 
operator synthesis amount additional may added operations originally chosen optimizer 
avoid problem simple heuristic avoiding cartesian products prevent creation overly expensive joins 
performance heuristic highly sensitive cardinality new operators created 

optimizing queries sources limited capabilities building mediators involves dealing sources presenting different capabilities terms queries handle 
scenario occur web sources adhering specific requirements constraints limit access patterns 
example users online bookstore get information books forms 
forms allow types keyword queries including search title subject author keyword isbn user submit database queries complex conditions prices requesting available books 
reasons limiting query capabilities information source 
include performance 
types queries allowed maintain performance system 
example allowing conditions attributes indexes 
security 
supported queries access privileged information 
legacy 
underlying data may stored systems limited query capabilities 
business 
queries retrieve useful business information aggregate queries allowed 
section techniques developed deal problem efficiently answer queries sources limited capabilities 
query processing optimization web msl lorel mediator msl wrapper information source 
tsimmis architecture query processor 
view expander logical plan matcher sequencer optimizer physical plan execution engine sources queries view definitions source descriptions 
tsimmis 
tsimmis prototype integrates heterogeneous information sources global view approach mediation 
proposed mediation supported number concepts 
object model called oem object exchange model exchange information components system 
mediator specification language msl oem serves query language specification language mediators query language wrappers 
capabilities sources described templates 
oem self describing object data model data parsed external schema 
templates represent set queries answerable source 
generally speaking query answerable provides inputs required source 
capability descriptions sources decide feasibility physical query plans 
query resolution tsimmis focuses mainly finding feasible query plans respect limited capabilities available sources 
user query initially expressed integrated view 
view expander module mediator translates query logical plan view definitions 
logical plan specify order source queries processed 
processing order specified physical plan turn may alternatives 
plan generator processes logical plan generates optimized feasible physical plan step process 
matcher finds source queries process parts logical plan source descriptions 
second sequencer pieces source queries processing conditions logical plan build feasible plans 
find feasible sequence source queries 
example query feasible sequence property binding requirements exported source queries appear earlier sequence 
ouzzani bouguettaya world view source descriptions contents plan generator user interface www execution engine relevance reasoning logical planner execution planner 
select project join union 
interface program interface program interface program interface program structured files www form interface 
information manifold architecture 
internet query execution plan relational database answers object oriented database optimizer chooses efficient feasible plan cost optimization algorithm 

information manifold 
information manifold provides uniform interface structured information sources 
proposes mechanism describe declaratively content query capabilities information sources 
system uses source descriptions prune sources query generate executable query plans 
sources content described queries set relations classes 
users express queries mediated view consisting collection virtual relations classes 
relations described sources queries world view relations 
information manifold follows local view approach mediation 
execution plan query generated phase algorithm 
phase correct plan generated 
conjunctive query uses source relations contained user query subgoal query algorithm computes bucket containing information sources tuples subgoal obtained 
possible combinations information sources bucket considered 
obtained plan checked semantic correctness 
subgoal query relevant information sources computed separately 
conjunctive plans built selecting relevant source subgoal query 
plan checked relevance soundness 
query processing optimization web plan sound answers produces guaranteed answers query 
conjunctive plan relevant produce answers query descriptions sources constraints query 
step phase plan checked minimality 
ensures subgoal removed plan plan sound anymore 
second phase orders subgoals plan executable respect capabilities sources 
algorithm generates ordering possible bindings list available parameters initialized set bound variables query 
subgoal added ordering input requirements satisfied respect list available parameters source requirements considered 

infomaster 
infomaster provides integrated access distributed heterogeneous information sources including databases semistructured data 
infomaster uses knowledge interchange format kif internal content language 
kif represent order logic expressions 
infomaster system follows source centric approach mediation 
infomaster considers types relations 
interface relations users formulate queries 
second source relations describe data stored information sources 
relations described third type world relations represents schema system 
www www interface odbc wrapper sql database 
infomaster architecture 
acl client infomaster facilitator wrapper edi system edi interface knowledge base custom wrapper www pages ouzzani bouguettaya query optimization notion local completeness limits number sources queried 
infomaster uses weak form completeness assumes subset data stored information source complete 
assumed entire data stored information source complete 
claim assumption reasonable specific application domain 
approach source relation represented views global relations 
liberal view conservative view 
views schema corresponding source relation 
conservative view lower bound source relation describes subset data known complete 
liberal view upper bound source relation 
conservative liberal views different information sources query processor generates query plan retrievable semantically correct source complete view minimal 
query processor generates plans step algorithm 
reduction query transformed terms base relations rewriting atom definition associated predicates 
abduction expression qb terms base relations set definitions set consistent minimal conjunctions retrievable atoms produced 
set contained qb respect definition 
conjunctive minimization redundant conjunct eliminated 
disjunctive minimization disjunct shown contained union remaining disjuncts discarded 
grouping conjuncts conjunction grouped atoms group share common provider 

annotated query plans 
approach proposed extends system optimizer deal sources having limited query capabilities 
uses annotated query plans search space 
annotations describe input sub plan query plan answerable 
proposed algorithm aims prune invalid plans early possible uses best search strategy produce complete plan early search 
limitations sources modeled binding patterns 
binding pattern specifies attributes bound input value order retrieve tuples relation 
binding pattern labeled cost accessing cardinality expected output input 
cost sub plan computed costs cost associated operator 
approach assumes select project join queries conjunctive queries 
goal find cheapest complete query execution plan conjunctive query set binding patterns 
complete query execution plan plan covers conjuncts query adornment maps precisely bound variables query bound 
atomic plan costs deduced data access descriptions 
non atomic plan costs estimated costs operators costs sub plans 
query optimization algorithm starts initial set plans containing atomic plans single relations 
iteratively updated adding new plans obtained combining plans selection join operations 
choice partial plans combined utility measure 
utility measure number conjuncts covered plan cost plans number free variables combination thereof 
combination partial plans pruning occurs comparing costs equivalent plans costs covering plans 
covers plan query processing optimization web labeled set conjuncts query may need variables bound equivalent selection applied 
iteration cases occur 
case contains equivalence class query optimal plan 
second case processing needed get optimal plan 
algorithm applies exhaustive enumeration possible placements selections obtained plans 
process leads optimal plan 

source sequencing algorithms 
simple greedy strategy partitioning scheme proposed deal limited capabilities sources 
algorithms cost model number source queries execution plan 
users submit conjunctive queries integrated views provided mediator 
integrated view defined set conjunctive queries source relations 
source relation defines set access templates specify binding requirements 
algorithm starts finding answerable subgoals initial bindings logical plan picks cost 
selected subgoal provide additional bound variables 
process repeated selecting cheapest subgoals updating set bound variables 
process stops subgoals left subgoals answerable 
clear greedy approach may optimal plan 
second algorithm generates optimal plans frequently worse running time 
phases phase subgoals organized list clusters source capabilities 
subgoals cluster answerable block queries queries initially bound variables answerable parameterized queries queries variable bindings subgoals earlier clusters 
second phase algorithm finds best sub plans cluster combines obtain best feasible plan query 

capability sensitive plans selection queries 
algorithms generating plans selection queries web data sources 
sources exhibit restrictions size structure condition expressions limitations set returned attributes 
sources described context free language 
queries form noted sp 
selection condition represented condition tree 
leaf nodes represent atomic conditions disjunctive conjunctive conditions 
non leaf nodes represent boolean connectors 
mediator query plans represented query trees 
leaf nodes represent sp source queries non leaf nodes represent selection projection union intersection operations 
operations performed mediator level combine results source queries 
algorithm simple exhaustive modular scheme modules rewrite mark generate cost 
rewrite module produces set equivalent rewritings target query condition 
employs number rules including commutative associative distributive transformations condition expressions 
rewrite module outputs set condition trees cts represent condition expressions query 
condition tree produced rewrite module mark module determines parts evaluated source 
condition supported source generate module produces set feasible plans repeatedly invoking exhaustive ouzzani bouguettaya plan generator epg algorithm cts passed mark module 
epg recursive algorithm generates feasible plan query sp 
epg finds feasible plans represents special operator indicate alternative query plans sp 
cost module selects best plan cost model 
second scheme improves reducing number cts need processed search space knowledge cost model 
result rewrite module triggers fewer number rules 
commutativity rule included source description triggered 
requires rewriting source descriptions parsing larger set rules 
overhead occurs impact performance 
cost querying source consists overhead sending messages starting query cost computing answer source cost transferring results network 
cost model pruning rules reduce search space prune impure plans pure plan exist pure plan process entire query source prune locally sub optimal plans decomposing impure plan sub queries choose sub queries cost prune dominated plans plans expensive cost plans relation attributes condition includes condition expensive plan applied conjunctive conditions 

commercial data integration systems section overview major database products provide support data integration 
major database vendors oracle ibm sybase microsoft claim different levels support data integration web 
purpose section compare commercial products overview main features 
large number products section attempt cover 
focus major players arena 
coverage available information user manuals white papers published technical papers detailing commercial products 
additionally existing products various development stages operate different levels disclosure 
major concern shared products allow access external databases data sources xml multimedia sources 
details query optimization achieved dbmss web databases missing cases 
ibm db 
data integration ibm db started allows submit sql queries external non db databases 
db relational connect brought concept data integration allowing federation db non db databases accessed uniformly 
db federated system consists db instance data sources 
federated database contains catalog entries identifying data sources characteristics 
note garlic research project described survey important asset enabling data integration db 
oracle 
oracle data access gateways enable access manage data heterogeneous data sources 
types access possible transparent gateways query processing optimization web non oracle databases ii procedural gateways provide procedural access non oracle transactional systems 
data integration achieved data warehousing external non oracle databases oracle warehouse builder 
sybase 
enterprise connect data access sybase tool access non sybase databases including db oracle ms sql server 
sybase adaptive server build federation heterogeneous databases 
users transparent access heterogeneous databases 
achieved component integration services cis enable definition proxy tables mapped actual tables distributed heterogeneous databases 
query optimization cost model assumes availability access costs remote tables 
ciss focus aspects distributed query optimization query optimization determines optimal join strategy order ii query decomposition determines load pushed remote databases processing 
ms sql server 
ms sql server supports data integration distributed query facilities 
allow sql server users access data stored instances sql server heterogeneous data stored various relational non relational data sources 
access enabled ole db providers 
ole db providers expose data tabular objects called row sets 
sql server allows row sets ole db providers referenced sql statements sql server table 

discussion enabling data integration web subsequent need efficient querying targeted large research effort 
survey representative segment research 
discussion outlines various query optimization issues addressed 
depicts classification different approaches optimizing queries web data integration systems 
highlights categories query optimization techniques context web data integration 
cost quality capability adaptive 
category lists main features different techniques implement query optimizers category 
proposed approaches extend classical cost model 
major difficulty relates gathering optimization information cardinality selectivity autonomous information sources 
approaches disco simply assumption information easily available sources exported wrappers 
garlic provide wrapper builders tools gather information query sampling requiring involvement database 
approaches cost information obtained generic model generally 
generic model may applicable web context large spectrum autonomous heterogeneous information sources 
addition making assumption statistics available easily obtained may reasonable 
suggests techniques may appropriate intranet applications 
systems main objective terms optimization reduce number sources accessed 
sources reduction occurs query planning time infomaster ouzzani bouguettaya query optimization cost model adaptiveness capability 
classification query optimization techniques 
assume existence necessary statistics wrappers export statistics query processor wrappers cooperate estimate costs query processor gathers statistics sources cache statistics quality information user quality constraints data flow reordering re scheduling re optimization special operators local completeness extension system optimizer rule optimization sub goals partitioning available source descriptions user query run time special types queries ariadne 
reducing number sources important context web number potential sources query large 
may optimization necessary 
technique hermes bases optimization caching statistics sources calls estimate cost possible execution plans 
uses notion expression invariants derive equivalent execution query plans 
cache may sufficient optimization purpose 
addition optimization techniques 
query processing optimization web trend adaptive dynamic approaches dealing query optimization 
motivated intrinsic dynamics web unpredictable events may occur execution query 
types actions considered approaches fall cases change query execution plan change scheduling operations query execution plan different concurrent query plans introduce new operators cater unpredictable events modify order inputs binary operators 
adaptive techniques demonstrate applicability real web applications large numbers information sources 
need show react heavy fluctuations 
interesting direction optimizing queries web data integration systems information quality 
main motivation quality parameters reflect user needs better environments 
approaches uses different classes quality criteria select relevant sources rank alternative query plans 
approach allows users specify quality constraints execution queries 
constraints may relate expected results cost query time results complete execution 
quality service qos constraints enforced execution query 
quality constraints crucial importance applications 
major issue get related information sources scattered web 
furthermore due subjective nature constraints query optimizer may succeed finding best plans 
important issue processing queries web data integration systems deal limited query capabilities sources 
limitations direct impact optimization process 
query execution plans may optimal feasible 
different query planning strategies focus generally finding feasible optimal subgoal orderings available bindings supported conditions information sources 
proposed techniques assume full knowledge query capabilities participating source 
rely heavily way information sources described binding patterns free grammars objective function optimizer number sources response time 
source description model may possible large spectrum information sources 
table summarizes main features different prototypes techniques covered survey 
commercial products included table due lack details 
features covered table underlying information sources 
types sources supported 
majority web data integration systems attempt include large spectrum information sources databases html files text files knowledge bases general mediator systems assign wrapper interface hides underlying heterogeneity source 
wrapper takes care interaction source rest system 
sources description 
sources description advertisement direct impact source location process consequently query optimization 
data model 
data model usually serves basis data exchange different components data integration systems 
query language 
specifies language formulate queries 
query optimization 
main concept underlying query optimization summarized 
ouzzani bouguettaya table 
summary systems features 
underlying information system sources sources description data model query language query optimization odmg data model object relational cost optimization sql wrappers exporting statistics object oriented extension sql strategy alternative rules star build query trees 
cost optimization achieved means wrapper cooperation disco structured data relations represented information types garlic objects specified gdl variant odmg object description language garlic databases image archives planning rewriting cost optimization 
rewriting rules derived properties distributed heterogeneous environments sql loom query language ariadne semistructured data embedded catalogs loom knowledge representation system relational algebra domains relational domain calls cost optimization caching invariants hermes structured semistructured data xml model extension sql distribution query processing capabilities qos sources described rdf semistructured semistructured data optimization relational extension sql query planning quality criteria structured data query correspondence assertions set selecting sources oriented equations relations relational sql concept eddy router interposed data sources query processing operators 
adaptiveness implemented level tuples telegraph mainly relational streaming data sources query processing optimization web relations relational sql operator reordering eca rules 
optimized operators dynamic collectors double pipelined tukwila relational databases xml sources hash join relational databases relations relational sql adapt scheduling arrival rate changes interleaving scheduling optimization msl lorel capability processing standard optimization templates object exchange model oem tsimmis structured semistructured data oem data model conjunctive queries conjunctive plans generation subgoals ordering declarative description source structured data capability records relational data model features information manifold content capabilities conjunctive queries query optimization local completeness source relations represented views liberal view conservative view represent upper lower bounds knowledge interchange format kif relations built predicates infomaster structured semistructured data source relations respectively structured data binding patterns relational datalog extension system optimizer annotating query plans take annotated query plans account capabilities sources structured data access templates relational datalog greedy optimization sub goals partitioning source source sequencing capabilities structured data context free grammar relational datalog exhaustive modular optimization algorithm rule optimization knowledge cost model selection queries ouzzani bouguettaya 
trends highlighted survey providing efficient access interconnected databases information sources received sustained interest 
approaches techniques proposed deal various issues 
issues particularly challenging due characteristics web including amounts web data large heterogeneity spectrum strict autonomy volatility section shed light major paradigm shift place web concepts semantic web web services 
paradigm shift important impact issue data integration subsequently query processing optimization web 
classical data integration relevant specific domains providing query facilities web services covers broader scope 
web geared important paradigm shift concept semantic web 
basically means transition documents human consumption documents machine processable semantics 
allowing machine processable content mainly new paradigm shift web services 
web service piece software defined described discovered xml artifacts www org ws 
enabling efficient access plethora services emerging research challenge tomorrow semantic web 
interacting web resources databases xml data stores new direction emergence web services 
web services gaining momentum starting widely diverse activities web 
web services offer new perspectives addressing issues related querying web 
opens door broader view information integration web 
important direction build query infrastructure web services treated class objects 
users applications submit queries resolved combining invocations web service operations 
surge research web services due reasons attractive alternative data centric approaches 
ongoing standardization efforts describe publish search invoke web services instrumental emergence 
second web services ubiquitous access web resources including web databases mainly achieved web services 
web services ideal candidate enabling querying web 
web evolving passive medium publishing data active platform conducting business 
result need build infrastructure organize efficiently query web services treated class objects 
building service query infrastructure requires addressing research issues outlined web service query language 
devise declarative web service query language 
language targets web services class objects 
declarative nature allow expression complex queries precise simple way 
advantage query specification holds underlying information available 
query processing optimization web computation model 
resolution query may involve iterative process different players infrastructure 
need devise computation model interaction different players 
include web services web service providers web service registries web service portals 
web service registries repositories offer advertising discovery facilities web service providers web services consumers 
web service portals applications capitalize web services offering shops querying 
optimization model 
performance prime importance successfully deploying query infrastructure web services 
mainly relates query optimization 
literature shows quality service qos individual web services crucial competitiveness 
addition increasing need provide acceptable quality service qos web applications 
concept qos capture accurately users applications requirements efficiency query optimization 
challenge define appropriate metrics characterize qos devise techniques measure qos 
step web service query infrastructure investigate issues addressed existing techniques web data integration systems 
priori possible 
fundamental difference existing techniques web service approach lies manipulated objects 
class objects web service query infrastructure web services data traditional web data integration systems 
adaptive techniques relevant web services highly dynamic 
negative side techniques data centric 
focus modifying data operators join regulating data fragments transfer 
types techniques hardly applicable web services different manipulation operations composition objects services 
techniques processing queries sources limited capabilities may relevant 
access web services limited specific set operations defined web service 
proposed techniques developed data centric environments 
main focus ordering accesses data sources relational operations 
acknowledgment research supported national science foundation eia 
authors anonymous reviewers medjahed valuable comments earlier drafts 

candan papakonstantinou subrahmanian query caching optimization distributed mediator systems proceeedings acm sigmod international conference management data montreal canada june 
ouzzani bouguettaya 
amann beeri scholl querying xml sources ontology mediator proceedings tenth international conference cooperative information systems irvine ca usa oct 

ambite knoblock flexible scalable query planning distributed heterogeneous environments proceedings fourth international conference artificial intelligence planning systems usa june 

bonnet franklin tomasic urhan improving wide area data access ieee data engineering bulletin vol 
pp 


arocena mendelzon weboql restructuring documents databases webs proceedings th international conference data engineering orlando florida feb 

arpaci dusseau anderson culler hellerstein patterson yelick cluster river making fast case common proceedings sixth workshop parallel distributed systems 
acm press may 

avnur hellerstein eddies continuously adaptive query processing proceedings acm sigmod international conference management data dallas texas usa may 

batini lenzerini navathe comparative analysis methodologies database schema integration acm computing surveys vol 


berners lee services semantics web architecture 
www org tbl 

berners lee luotonen nielsen secret world wide web cacm vol 


berners lee hendler lassila semantic web scientific american vol 


bertino bouguettaya special issue database technology web ieee internet computing vol 


fabret mohan valduriez dynamic query scheduling data integration systems proceedings th international conference data engineering san diego ca usa feb march 

bouguettaya benatallah elmagarmid interconnecting heterogeneous information systems kluwer academic publishers isbn 

bouguettaya king large multidatabases issues directions ifip ds semantics interoperable database systems hsiao neuhold sacks davis eds elsevier publishers 

bouguettaya king zhao server approach finding information large scale heterogeneous databases international workshop interoperability multidatabase systems kyoto japan april 

kemper kossmann kreutz ubiquitous query processing internet vldb journal vol 


conti kumar das shirazi quality service issues internet web services ieee transactions computers vol 


du krishnamurthy 
shan query optimization heterogeneous dbms proceeedings th international conference large data bases vldb vancouver canada 

duschka query planning optimization information integration phd thesis computer science department stanford university 

duschka genesereth query planning infomaster proceedings twelfth annual acm symposium applied computing sac san jose ca usa feb 

florescu levy manolescu suciu query optimization presence limited access patterns proceedings acm sigmod international conference management data philadephia pennsylvania usa june 

garcia molina capability sensitive query processing internet sources proceedings th international conference data engineering sydney australia march 

garcia molina papakonstantinou quass rajaraman sagiv ullman vassalos widom tsimmis approach mediation data models languages journal intelligent information systems vol 

query processing optimization web 
sha tang calibrating query optimizer cost model iro db proceeedings nd international conference large data bases vldb bombay india sept 

graefe query evaluation techniques large databases acm computing survey vol 


gravano papakonstantinou mediating internet ieee data engineering bulletin vol 


haas kossmann wimmers yang optimizing queries diverse data sources proceeedings rd international conference large data bases vldb athens greece aug 

heimbigner mcleod federated architecture information systems acm transactions office information systems vol 


hellerstein franklin deshpande hildrum madden ramana shah adaptive query processing technology evolution ieee data engineering bulletin vol 


hurson bright multidatabase systems advanced solution global information sharing ieee computer society press los alamitos ca 

ives florescu friedman levy weld adaptive query execution system data integration proceedings acm sigmod international conference man agement data philadelphia pa usa june 

konopnicki shmueli www information gathering ql query language qs system acm transaction database systems vol 


levy rajaraman ordille querying heterogeneous information sources source descriptions proceeedings nd international conference large data bases vldb bombay india 

lohman grammer functional rules representing query optimization alternatives proceedings acm sigmod international conference management data chicago 

macgregor deductive pattern matcher proceedings aaai national conference artificial intelligence st paul mn usa 

mena illarramendi kashyap sheth observer approach query processing global information systems interoperation pre existing ontologies international journal distributed parallel databases vol 


mendelzon mihaila milo world wide web international journal digital libraries vol 


tomasic leveraging mediator cost models heterogeneous data sources proceedings th international conference data engineering orlando florida feb 

naumann lesser quality driven integration heterogeneous information systems proceeedings th international conference large data bases vldb edinburgh uk sept 

nodine ngu semantic brokering dynamic heterogeneous data sources infosleuth proceedings th international conference data engineering sydney australia march 

dogac dynamic query optimization multidatabases ieee data engineering bulletin vol 


ouzzani benatallah bouguettaya ontological approach information discovery internet databases distributed parallel databases international journal vol 


ozsu valduriez principles distributed database systems prentice hall 

quarterman notable computer networks communications acm vol 


roth haas cost models matter providing cost information diverse data sources federated system proceedings th international conference large data bases edinburgh scotland uk sept 

roth schwarz don scrap wrap 
wrapper architecture legacy data sources proceeedings rd international conference large data bases vldb athens greece aug 
ouzzani bouguettaya 
ruiz duran automated support quality requirements web systems proceedings th ieee workshop trends distributed computing systems bologna italy ieee oct nov 

selinger astrahan chamberlin lorie price access path selection relational database management system proceedings acm sigmod international conference management data bernstein ed boston massachusetts acm may june 


shan pegasus architecture design principles proceeedings acm sigmod international conference management data washington dc usa june 

sheth larson federated database systems managing distributed heterogeneous autonomous databases acm computing surveys vol 
pp 


spaccapietra parent step forward solving structural conflicts ieee transactions knowledge data engineering vol 


tomasic rashid valduriez scaling heterogeneous database design disco proceedings th international conference distributing computing systems icdcs hong kong may 

wiederhold mediators architecture information systems ieee computer vol 


li ullman garcia molina optimizing large join queries mediation systems proceedings international conference database theory jan 

zhao king bouguettaya incremental specification views databases international workshop interoperability multidatabase systems kyoto japan april 

zhu larson global query processing optimization cords multidatabase system proceedings acm sigmod international conference management data san jose ca usa 
