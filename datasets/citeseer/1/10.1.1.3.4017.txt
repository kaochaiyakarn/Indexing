map ontology mapping method information flow theory yannis kalfoglou marco schorlemmer advanced knowledge technologies department electronics computer science university southampton centre intelligent systems applications school informatics university edinburgh universit ria de universitat de catalunya 
order tackle need sharing knowledge organisational boundaries decade seen researchers academia industry advocating ontologies means providing shared understanding common domains 
generalised large distributed environments world wide web came proliferation different ontologies similar domain setting forth new need sharing sharing ontologies 
addition visions semantic web going reality necessary provide automated support possible task mapping different ontologies 
efforts ontology mapping carried noticed strong theoretical grounds principled methodologies 
furthermore syntactical criteria 
theory method automated ontology mapping channel theory mathematical theory semantic information flow 
successfully applied method large scale scenario involving mapping different ontologies computer science departments various uk universities 
wide spread ontologies diverse communities variety applications commonality today knowledge sharing efforts 
backbone semantically rich information sharing prerequisite knowledge sharing 
systems distributed disparate organisational boundaries need preserve meaning concepts names authors alphabetical order 
everyday transactions information sharing 
emergence semantic web transactions arguably easier implement deploy large scale distributed environment internet 
time poses interesting challenges 
instance observe demand knowledge sharing current supply 
knowledge sharing feasible boundaries specific system certain assumptions hold specific domain 
reason shortcoming probably environment technologies generated high demand sharing ontologies deployed semantic web demand share benefits knowledge sharing semantic interoperability 
sharing ontology solved problem 
acknowledged researched knowledge engineering community years 
fact problem related integration heterogeneous databases conducted early far database schemas considered particular kind lightweight ontologies 
early efforts information sharing run problem semantic heterogeneity required identification representation semantics useful performing schema translation schema integration 
current efforts ontology sharing build previous experience light broader concept ontology expressive logical formalisms theories better capture semantics information flow 
aspects ontology sharing perform sort mapping ontology constructs 
ontologies able map concepts ontology ones 
research suggest able combine ontologies product combination intersection ontologies 
dominant approaches studied applied variety systems see example :10.1.1.46.6489
drawbacks prevent engineers systems 
firstly assumptions devising ontology mappings combining ontologies exposed community technical details disclosed 
secondly systems perform ontology mapping embedded integrated environment ontology editing attached specific formalism 
thirdly cases mapping merging heuristics syntactic clues determine correspondence equivalence ontology concepts rarely meaning concepts semantics 
fourthly approaches treat ontological axioms rules formal ontologies 
ontology mapping term different meaning different works merely due lack formal account ontology mapping observed lack theory works area 
motivated drawbacks started method theory ontology mapping merging 
determined tackle drawbacks approach observation reported essential duality knowledge sharing sharing occurs token type level 
draw sound theoretical ground time providing systematic approach ontology mapping mechanised methodological steps 
particular propose information flow method ontology mapping map 
interested mapping ontologies extend approach merge 
map draws works schorlemmer aligning ontologies heuristics defined kalfoglou pp analyse prospective mappings ontologies 
theoretical side method mathematical theory information flow proposed barwise seligman kent information flow framework ieee standardisation activity upper level ontology proposed methodology merging ontologies 
methodological part map influenced stumme maedche fca merge method :10.1.1.14.3832
outline scenario describe architecture built perform ontology mapping section 
briefly provide mathematical preliminaries information flow channel theory section proceed describe ontology mapping method section example case 
section report application method elaborate scalability issues 
discuss related section summarise section 
scenario architecture ontology mapping clarify terminological issues continue architecture ontology mapping 
researchers view mapping process integral part alignment merging 
example noy musen view merging creation single coherent ontology includes information sources alignment process sources consistent coherent kept separately 
clearly mapping essential aspect alignment initiate merging 
adopt working view ontology mapping 
intend alter original ontologies look possible mappings 
extent compatible noy musen definition alignment view alignment process involves merging altering original ontologies 
done constructing virtual ontology consisting mapped constructs input ontologies 
view akin researchers working ieee suo initiative standardisation upper level ontology meta level framework relating ontologies barwise seligman theory information flow currently developed 
scenario implemented aspect extend existing map point interested reader suo ieee org information initiative 
method perform merging 
remaining focus ontology mapping 
ontology mapping scenario ontology local ontology local ontology global ontology fig 

scenario ontology mapping 
illustrate approach ontology mapping 
particular focus information flow theory underpinning mathematical foundation establishing mappings ontologies 
shall formalise mappings terms local logics logic infomorphisms introduce section 
assume communities desire share knowledge encoded knowledge local ontology respectively previously agreed common understanding ontology order favour sharing knowledge 
typically community local ontology populated instances ontology instances 
having agreed ontology community prefer communicate local ontology provided ontologies significant fragment conform ontology 
provide methodology establish conformance looking generating ontology mappings ontology local ontologies denoted solid arrows 
methodology formalising ontologies local logics ontology mappings logic infomorphisms shall see section 
link local ontologies ontology generated ontology mappings provides alignment structure ontologies determine uniquely global ontology ontology constructed alignment structure generated fly purpose knowledge sharing 
dashed arrows denote inclusion local ontologies global ontology inclusions ontology mappings formalised logic infomorphisms methodology map extended include merging ontologies alignment structure 
clearly resembles kent proposed step process conceptual knowledge organisation 
fact existence unique global ontology alignment consisting local ontologies ontology consequence formalising ontologies ontology mappings local logics logic infomorphisms 
ontology mapping architecture ontologies ontology libraries data base knowledge base ontology harvester programs modellers editors translation horn logic map map concept level map instance level map prolog engine java front web accessible api provided acquisition translation infomorphisms generation project mappings fig 

map architecture 
display results illustrate process map 
built step wise process consists major steps ontology harvesting translation infomorphism generation display results 
ontology harvesting step perform acquisition 
acquire ontologies applying variety methods downloading existing ontologies ontology libraries example ontolingua webonto servers editing ontology editors example prot extracting web 
ongoing research akt project www org writing scripting programs crawl web harvest resources semi automatically construct populate ontologies 
expand topic peripheral theme ontology mapping 
result versatile ontology acquisition step knowledge base rdf deal variety ontology representation languages ranging kif ontolingua ocml rdf prolog native prot knowledge bases 
introduces second step process translation 
declaratively specified map method horn logic execute prolog interpreter partially translate formats prolog clauses 
translator programs written house available public translators 
example public rdf prolog translators ontolingua prolog translators 
cases practical write ones 
partial translation customised purposes ontology mapping 
furthermore reported large scale experiment publicly available translators prolog code produced elegant executable 
translators customised translate kif ontolingua prot knowledge bases prolog clauses constructs needed map class taxonomy relations representative instances classes 
deliberately neglect constructs documentation slots separation slots template slots object oriented modelling primitives ontology languages kif ontolingua useful map absence translated prolog code invalidate meaning 
prot knowledge bases built java api obtain constructs wanted rdf publicly available rdf prolog translators 
issue full blown translation formalism difficult problem corr da silva offer account effort involved 
step process main mapping mechanism map method describe section 
written java front prolog written map program access web currently process writing java api enable external calls systems 
step find logic infomorphisms ontologies examination step process display rdf format 
step involves translating back prolog clauses rdf triples means intermediary java layer rdf produced jena rdf api 
store results knowledge base maintenance 
proceeding example case deployment architecture shall introduce theoretical background map 
section expand logic infomorphisms channel theoretic notions give formal account ontology mapping 
wielemaker downloadable www swi prolog org packages rdf pl html briefly describe principles partially translate ontolingua prolog pp 
preliminaries order give formal characterisation ontology mapping start basic assumption communities desire share information ontologies differ need align map ontologies information flow 
consequently desirable base theory ontology mapping mathematical theory capable describing circumstances information flow occurs 
theory promising effort theory initiated barwise perry situation semantics developed devlin theory information 
barwise seligman channel theory currently latest stage endeavour probably best place start establishing foundation theory ontology mapping 
information flow barwise seligman propose mathematical model aims establishing laws govern flow information 
general model attempts describe information flow kind distributed system ranging form actual physical systems flashlight connecting bulb switch battery systems mathematical proof connecting premises hypothesis inference steps 
understanding information flow results regularities distributed system virtue regularities connections information components system carries information components 
regularities system information flows random system constituted information able flow components 
notion component carrying information component barwise seligman follow dretske characterisation assertions sort rifle shot carried information king dead city 
sky carries information storm approaching 
abstractly characterised common pattern carries bears conveys information fact particular rifle shot inform king death particular event token type rifle shot carry information 
rifle shot years definitely carry information king dead rifle shot indicate king neighbouring city dead 
fact event token rifle shot connected spatio temporarily event king death know information flows 
channel theory formalises crucial aspect information flow tokens connections carry information information flow involves types tokens 
aligning merging ontologies respect problem concerns mapping ontologies pattern arises 
communities different ontologies able share information capable establishing connections tokens order infer relationship types 
develop example taken shows issues take account attempting align english concepts river stream french concepts rivi re 
sowa english size feature distinguishes river stream french river flows sea rivi re river stream runs river 
explains concepts need merged 
notice quote requires agreed understanding distinguish big small psfrag replacements rivers rivers run sea rivers yielding types instances water flowing entities big sea big river sea small river 
river stream rivi re big sea big river small sea small river mississippi ohio rh ne sa ne mississippi ohio rh ne sa ne fig 

alignment means pair maps shows english french speakers base concepts agreed understanding english french speakers don distinguish types instances 
example english speakers call big sea big river river french speakers don distinguish big river small river call types rivi re 
agreed understanding maps form alignment 
requires classification particular instances river stream rivi re agreed understanding agreed way classification determine concepts river stream rivi re going related 
ultimate goal determine connections link particular instances type river stream particular instances type rivi re way respect agreed understanding 
done connecting instances conform type agreed understanding illustrated 
psfrag replacements river river stream rivi re stream mississippi rh ne ohio sa ne rivi re mississippi ohio rh ne sa ne fig 

aligning ontologies pair maps resulting classification connections mississippi rh ne ohio sa ne concepts river stream rivi re determines theory concepts related river stream rivi re vice versa 
shows channel theory known information channel 
captures means pairs contra variant functions existing duality concepts instances pair consists map concepts called type level map instances called token level pointing opposite direction 
channel theoretic perspective illustrates sharing knowledge involves flow information crucially depends instances different agents connected 
table shows classification relation connections classified concept types involved example river stream rivi re mississippi rh ne ohio sa ne merged set concepts river stream rivi re additional structure deduce way connections instances classified respect concepts 
techniques formal concepts analysis instance structure explicit form concept lattice shown 
concept hierarchy represented lattice depends choice instances classification respect agreed understanding 
fact instances classified type small sea crucial example 
notice resulting lattice node labelled concept river rivi re formal concept exist original vocabularies 
corresponds instances water flowing entities big flow rivers ohio sa ne 
river rivi re river rivi re stream channel theory fig 

concept lattice channel theory provides required mathematical machinery describe information flow communities terms connection means tokens types 
order specify regularities component distributed systems channel theory uses notion local logic 
separate interacting components typically different vocabularies different systems types tokens classified types 
addition community particular constraints describe local behaviour instances respect system types 
local logic brings ideas definition 
local logic quadruple 
set instances called tokens 
set types 
classification relation binary relation elements 
consequence relation binary relation subsets parts local logic particular importance channel theory framework 
triple called classification local logic binary relation determines classification instances respect types means instance classified type second important part pair called theory local logic 
theory specified set sequents pairs set types interpreted conjunctively set disjunctively instance satisfies sequent provided type type 
sequents belong theory logic called constraints denoted 
theories local logics satisfy conditions regularity 
identity 
weakening 
global cut partition additional element local logics deliberately left definition 
ideally instances local logic adhere constraints presuppose general exceptions may occur 
local logics distinguish subset normal instances satisfy constraints local logic 
idea normal instance needed want model reasonable unsound flow information 
purposes map shall assume instances normal 
logics said sound 
information flow separate components distributed system need link local logics characterise components sensible way 
essentially affect system classifications associated theory way allows information flow 
captured idea logic infomorphism definition 
logic infomorphism local logic local logic contra variant pair functions regularity arises observation classification instances types set sequents satisfied instances fulfil properties 
partition pair subsets may empty form quasi partition 



restriction logic infomorphism classification part local logics called infomorphism 
ontologies ontology morphisms purposes map described adopt definition ontology includes core components usually part ontology concepts organised hierarchy capture partial order relation relations defined concepts notions disjointness concepts instance considered concepts coverage concept instances covered concepts 
disjointness coverage typically specified means ontological axioms 
map takes kind axioms account including disjointness coverage hierarchy concepts means binary relations respectively 
definition 
ontology tuple 
finite set concept symbols 
finite set relation symbols 
reflexive transitive anti symmetric relation partial order 
symmetric irreflexive relation disjointness 
symmetric relation coverage 
function assigning relation symbol arity functor sends set set finite tuples elements discarding binary relations definition equivalent core ontology :10.1.1.14.3832
ontology particular application domain need populate instances 
classify objects set concept symbols defining binary classification relation determine classification 
specify instances relations represented symbols hold classifying finite tuples objects relation symbols defining binary classification relation determine classification 
classifications defined way partial order disjointness coverage arity function respected denote set images sets function respectively 
disjointness coverage easily extended concepts stay binary relations ease presentation 
definition 
populated ontology tuple classifications ontology say ontology correct 
xn 
cn 




xn xi ci 
notice write populated ontology respective 
transformations mathematical structures preserve structure characterises usually described homomorphism morphisms short 
study mapping ontologies morphisms mathematical structures defined ontologies definition 
concept populated ontology central approach ontology mapping shall proposition order justify definition ontology morphism definition 
ontologies ontology morphism pair functions 
cn 




ci 
information flow ontologies approach ontology mapping built assumption context channel theory local logics characterise ontologies 
populated ontology determines local logic theory smallest regular consequence relation smallest relation closed identity weakening global cut iff iff iff characterisation ontology local logic justifies map method section stems intention explained section map ontology populated looking information flow 
reason artificially populate concept types relation types obtain classifications populated ontology instances need finite tuples instances establish infomorphisms type level components constitute ontology morphism case know populated ontology correct extension sense images instances conform stated proposition proposition 
ontology populated ontology classifications 
classifications types concept relation types correct infomorphisms ontology morphism 
xn 
cn 
imply 
imply 
implies 

xn implies xi ci 
proof 

suppose infomorphism 
furthermore implies ontology morphism consequently 
infomorphism 
analogous 
analogous 
suppose 
xn infomorphism 
xn 

correctness xi 
ontology morphism xi ci 
consequently infomorphism xi ci 
section describe ontology mapping method characterisation ontologies local logics ontology morphisms logic infomorphisms 
map method propose method mapping ontologies draws mathematical foundations information flow shall small easy follow example illustrate core parts map 
local ontology assume want map ontologies ontology local ontology 
follow scenario section assume ontology instances defined just concept types constraints types 
local ontology instances classified concept types classification relation 
ontology concepts building vehicle car relations arities building vehicle partial order disjointness coverage defined lattice building vehicle car top bottom lattice building vehicle building vehicle 
local ontology concepts house cottage automobile relations arities house automobile cottage automobile partial order disjointness coverage defined lattice house automobile cottage top bottom lattice house automobile house automobile 
local ontology ontology populated instances home wd new inn old inn coupe classified follows house cottage automobile home wd new inn old inn coupe table contains information wd coupe automobiles home house new inn old inn specific kinds houses 
specifies classification 
characterisation local logics order automatically find mappings local ontologies conform definition ontology morphism definition need look logic infomorphisms local logics characterise ontologies 
shall concentrate concepts symbols leave relation symbols section 
ontology populated characterised local logic 
regular theory concept symbols types smallest consequence relation closed identity weakening global cut includes constraints building vehicle car vehicle building vehicle recall comma left hand side constraints conjunctive force right hand side disjunctive force 
give declarative reading constraints building vehicle cars vehicles building vehicle 
ontology instances need provide theory set instances classification instances respect types 
achieved due fundamental representation theorem see states local logic generated structure classification equivalent local logic constructed theory generating formally created instances follows 
take instances sequents form partition set concepts constraints theory theory sequents vehicle car building building vehicle car vehicle building car 
classify instances concepts occur left hand side component sequent building vehicle car vehicle car building building vehicle car vehicle building car generation instances means sequents classification types may obvious fact sequents code content classification table left hand sides sequents indicate columns table bear right hand sides indicate columns bear 
local logic characterises ontology ontology 
local ontology populated instances classification relation 
need derive theory local logic characterises concept hierarchy specified lattice 
regular theory concept symbols types smallest consequence relation closed identity weakening global cut includes constraints house automobile cottage house house automobile local logic characterises local ontology 
generation ontology morphisms infomorphisms map ontologies find ontology morphism means exist logic infomorphism local logic local logic amounts look infomorphism respective classifications map concepts concept level map instances 
coupe formally created instances ontology instance level note ontology morphism defined definition captures concept level infomorphism map concepts way respects hierarchy 
possible way building house vehicle automobile car automobile point automatic generation maps growing exponentially 
constraint map respect concept hierarchy limit number possible maps 
map fixed acceptable way map instances order infomorphism 
building table represents infomorphism label rows instances 
coupe local ontology columns ontology concepts building vehicle car 
put concepts values column local ontology classification table corresponds image map ontologies building put column house building vehicle car home wd new inn old inn coupe row identify account classification table ontology formal instances local instance mapped 
instance component infomorphism vehicle car building home building vehicle car wd vehicle car building new inn building vehicle car old inn building vehicle car coupe vehicle car building interpret table resulting mapping instances follows classified vehicle car ontology 
classification possible violating definition infomorphism 
vehicle car local ontology classifying instances way conform ontology fixed map concepts 
infomorphisms represented means classification tables draws theoretical chu spaces 
relations arities order constrain search space infomorphisms generated automated way ontological relations guide classification process result ontology mapping looking infomorphisms similar fashion 
example case relation defined ontology building vehicle binary relation holds building vehicle 
similarly local ontology binary relations house automobile cottage automobile local relations classify pairs local instances home home wd home coupe new inn new inn wd new inn coupe old inn old inn wd old inn coupe home garage considered shelter coupe new inn shelter coupe old inn shelter wd 
take pairs classify concepts ontology determine mapping ontologies 
generate classification pairs respect ontology relation columns table gives possibilities explore suppose choose home home wd home coupe new inn new inn wd new inn coupe old inn old inn wd old inn coupe column corresponding consequently 

arity relation forces classify instances follows building vehicle car home wd new inn old inn coupe 
need complete table definition infomorphism 
done follows columns correspond columns local ontology classification table 
possible completion building vehicle car home wd new inn old inn coupe building house vehicle automobile rows correspond rows ontology classification table 
possible completion building vehicle car home wd new inn old inn coupe car automobile completes possible valid ontology mapping 
steps described constitute core part map method 
complement heuristic techniques help initiate infomorphism generation 
initiating map method definition ontology morphism definition enforces arity compatibility check ensure local instances mapped appropriate types 
automating step careful undesired assignments 
arise prospective relations mapped share types semantics 
instance assume ontology relation defined concepts employee string local ontology relation defined string employee 
infomorphism generation map concept employee local concept string concept string local concept employee inevitably map relation virtue sharing types 
tackle problem thinking possible ways provide partial map concepts ontology concepts classify instances local ontology counterparts ontology 
way say concept employee maps local concept employee concept string maps local concept string mapping types possible 
constrain infomorphism generation undesired infomorphisms appear 
partial mapping automatically employ set heuristics originally described pp enhanced map 
particular heuristics working purely syntactic match fashion hierarchy type checking find types shared relations ontologies 
algorithm goes 
find relation names ontologies syntactically equivalent ontology matches local ontology 
check argument types match dealing binary relations argument types match instance employee ontologies local ontologies 
types fix partial map start infomorphism generation 
step fails traverse hierarchy types find syntactically common types subsume subsumed common relations argument types traverse hierarchy directions check parent child nodes starting node 
syntactically equivalent step partially fixing initial map ontologies 
step yields argument type match step argument type 
note algorithm relies existence common relation names ontologies 
syntactically invariant type names 
assume note local ontologies ontologies mapping example 
role ontologies community favour sharing knowledge expressed means different local ontologies names concepts relations express ontology syntactically equivalent ones local ontologies express similar concepts relations 
case syntactically variant type names algorithm similar heuristics main difference step step don employ step 
allow find syntactically variant type names hold argument types taxonomy types traversed 
algorithm yield irrelevant results types semantically different simple syntactic variation concept 
case algorithms described initiate map turn second solution proposed knowledge engineer classify instances manually 
solution requires engineer local ontologies 
application map applied algorithmic steps described illustrative example section large scale experiment conducted context akt project www org 
finished experiments done assess map 
setting experiment follows akt project participating universities contributing ontologies representing important concepts domain computer science departments uk 
ontology akt built collaboratively interested participants sites 
deal local ontologies ontology 
local ontologies populated ontology 
line map scenario described section 
furthermore local ontologies maintained locally participating site anticipated face variety formalisms different tools ontology design development deployment 
map architecture see section allows different formalisms input 
case studies apply map map akt southampton edinburgh local ontologies soton 
local ontologies populated instances ranging hundreds concepts 
axioms defined relations 
akt compact instances approximately concepts relations 
axioms defined 
include screenshots ontolingua encoded akt particular organisations sub ontology translated version fragment prolog clauses 
mentioned earlier section reader bear mind clauses prolog version denote typing relations logical implications 
fig 

window ontolingua fragment akt overlapped smaller window showing partial translation prolog clauses 
translation partial customised map application 
ontolingua fragment shown extract transform prolog clauses class hierarchy regarding frames classes relations arities type checking bind appropriate tokens types prolog backward chaining inference engine 
include screenshots prot edited soton particular highlighting class person template slots translated version fragment prolog clauses 
ontology translation partially translate predefined fragments local ontology class hierarchy relations arities 
include screenshot web accessible rdf results page relations concepts 
page show small fraction results mapping concepts relations akt counterparts soton 
concepts shown traced back previous figures original format shown 
see apart mapping concepts akt document soton publication map relations akt soton title 
arities relations allow sort mapping ontologies fig 

window prot fragment soton overlapped smaller window showing partial translation prolog clauses 
inappropriate example title refers title 
mappings generated automatically map initiated semantically rich heuristics described 
algorithms implemented far exponential complexity number concepts declarative prolog specification mapping principle explained section 
consequently currently base map method incremental construction ontology morphisms order tackle large scale ontologies certain manageable fragments ontologies mapped fixed maps guide generation larger fragments manner explained section 
currently investigating heuristics automatic identification fragments 
fig 

results ontology mapping web accessible rdf format 
related map defined purpose ontology mapping extensionally merging taps number areas uses techniques discussed diverse communities 
impossible compile exhaustive list related deliberately expanded scope cover representative works possible depth survey ontology mapping see 
time careful identify works related map core characteristics formal definitions ontology mapping information flow theory expressed declarative executable language domain tool independent manner applied method theory ontology mapping circumstances fully automatic 
cite meet criteria provide features map support focus single criterion list 
diversity works reported section demonstrates importance topic number communities 
scope prevents getting great detail describing related give flavour current landscape ontology mapping research different communities 
formal approaches ontology mapping merging fca merge :10.1.1.14.3832
formal concept analysis aimed mainly merging ontologies 
developers stumme maedche incorporate natural language techniques fca method derive lattice concepts 
lattice explored manually knowledge engineer build merged ontology semi automatic guidance fca merge 
particular fca merge works follows input method set documents concepts extracted ontologies merged 
documents representative domain question related ontologies 
cover concepts ontologies separating 
strong assumptions met order obtain results fca merge 
method relies heavily availability classified instances ontologies merged authors argue case ontologies opt extract instances documents 
respect step fca merge viewed ontology population mechanism 
initial step fca merge skipped shared set instances classified concepts ontologies 
instances extracted stumme maedche construct concept lattice provide semi automatic support knowledge engineer derive final merged ontology 
formal concept analysis database community federated databases domain 
particular schmitt saake employ formal concept analysis techniques assist database schema integration 
focus merge different inheritance hierarchies decomposing overlapping class extensions base extensions formal concept analysis techniques inform algorithms integrating databases schemata 
scalable knowledge composition skc project jannink rule algebra encapsulating composing ontologies 
ontologies clustered contexts authors rule algebra define interfaces link extracted contexts original ontologies 
noy musen developed systems performing ontology merging alignment prot ontology development environment smart successor prompt 
tools linguistic similar refer natural language techniques methods process fca merge developers peripheral interests ontology mapping 
ity matches concepts initiating merging alignment process underlying ontological structures provided prot environment classes slots facets inform set heuristics identifying matches ontologies 
similar tool developed mcguinness ontolingua ontology editor chimaera 
prompt tool interactive engineer charge making decisions affect merging 
machine learning perspective report works doan systems employ machine learning algorithms conjunction similarity measures yield prospective mappings ontology concepts 
works worth citing chalupsky ontomorph translation system symbolic knowledge kiryakov portal mapping linguistic ontologies observer system mena information integration gangemi onions methodology medical ontologies visser heterogeneity categorisation reports pinto noy hafner :10.1.1.46.6489
novel method theory ontology mapping 
formalised notion ontology ontology morphism ontology mapping linked formal notions local logic logic infomorphism stemming theory 
applied mechanised manner map map diverse ontologies 
results promising application map large scale ontology mapping efforts continue researching fruitful extensions ontology merging reasoning ontology evolution inclusion ontological axioms 
automation ontology mapping provided map provides automated support alignment ontologies automatically generating mappings various local ontologies 
instance special case data integration correspond automatic generation source descriptions formalised views mediated schema 
correspondence exact views mediated schema expressive maps current concept concept relation mapping 
sense interesting integration previous approaches semantic integration database community efforts carried ontology community see context approach ontology mapping barwise seligman theory information flow illuminate long road lying ahead 
earlier version title information flow ontology mapping international conference ontologies databases applications semantics odbase irvine ca usa october 
grateful karl aberer selecting extended version special volume audience odbase reviewers valuable comments 
supported advanced knowledge technologies akt interdisciplinary research collaboration irc sponsored uk engineering physical sciences research council number gr 
akt irc comprises universities aberdeen edinburgh sheffield southampton open university 
marco schorlemmer supported ram fellowship spanish ministry science technology 

barr 
chu construction 
theory applications categories 

barwise perry 
situations attitudes 
mit press 

barwise seligman 
information flow logic distributed systems 
cambridge university press 

batini navathe 
comparative analysis methodologies database schema integration 
acm computing surveys 

berners lee hendler lassila 
semantic web 
scientific american may 

chalupsky 
ontomorph translation system symbolic knowledge 
th international conference principles knowledge representation reasoning breckenridge colorado usa apr 

corr da silva vasconcelos robertson de melo finger 
insufficiency ontologies problems knowledge sharing alternative solutions 
knowledge systems 

devlin 
logic information 
cambridge university press 

doan madhavan domingos halevy 
learning map ontologies semantic web 
th international world wide web conference honolulu hawaii usa may 

domingue 
tadzebao webonto discussing browsing editing ontologies web 
th workshop knowledge acquisition modeling management banff alberta canada apr 

dretske 
knowledge flow information 
mit press 

farquhar fikes rice 
ontolingua server tool collaborative ontology construction 
international journal human computer studies 

gangemi 
ontology integration experiences medical terminologies 
guarino editor formal ontology information systems volume frontiers artificial intelligence applications 
ios press 

ganter wille 
formal concept analysis 
springer 

genesereth fikes 
knowledge interchange format kif 
draft proposed american national standard 

grosso eriksson fergerson gennari tu musen 
knowledge modeling millennium design evolution prot 
th workshop knowledge acquisition modeling management banff alberta canada oct 

gupta 
chu spaces model concurrency 
phd thesis stanford university 

halevy 
answering queries views 
vldb journal 

jannink wiederhold 
encapsulation composition ontologies 
aaai workshop information integration madison wisconsin usa july 

kalfoglou 
deploying ontologies software design 
phd thesis division informatics university edinburgh june 

kalfoglou schorlemmer 
ontology mapping art 
knowledge engineering review 

kent 
information flow foundation conceptual knowledge organization 
th international conference international society knowledge organization toronto canada july 

kent 
kif formalization iff category theory ontology 
ijcai workshop ieee standard upper ontology seattle washington usa 

kent 
iff foundation ontological knowledge organization 
knowledge organization classification international information retrieval cataloging classification quarterly 
press 

kiryakov dimitrov 
portal upper level ontologies 
second international conference formal ontology information systems maine usa oct 


facilitating exchange explicit knowledge ontology mappings 
th international flairs conference key west florida usa may 

lassila swick 
resource description framework rdf model syntax specification 
www org tr rec rdf syntax feb 
recommendation 

mcbride 
jena implementing rdf model syntax specification 
nd international workshop semantic web semweb volume ceur workshop proceedings hong kong china may 

mcguinness fikes rice wilder 
environment merging testing large ontologies 
th international conference principles knowledge representation reasoning breckenridge colorado usa apr 

mena kashyap illarramendi sheth 
domain specific ontologies semantic information brokering global information infrastructure 
guarino editor formal ontology information systems volume frontiers artificial intelligence applications pages 
ios press 

motta 
reusable components knowledge modelling case studies parametric design problem solving volume frontiers artificial intelligence applications 
ios press 

noy hafner 
state art ontology design survey comparative review 
ai magazine 

noy musen 
smart automated support ontology merging alignment 
th workshop knowledge acquisition modeling management banff alberta canada oct 

noy musen 
prompt algorithm tool automated ontology merging alignment 
th national conference artificial intelligence aaai austin texas usa july 

pinto mez rez martins 
issues ontology integration 
ijcai workshop ontologies problem solving methods volume ceur workshop proceedings stockholm sweden aug 

pratt 
stone gamut coordination mathematics 
th annual symposium logic computer science pages 
ieee computer society press 

schmitt saake 
merging inheritance hierarchies database integration 
rd ifcis international conference cooperative information systems coopis 
ieee computer society press 

schorlemmer 
duality knowledge sharing 
th international symposium artificial intelligence mathematics ft lauderdale florida usa 

sheth larson 
federated database systems managing distributed heterogeneous autonomous databases 
acm computing surveys 

sowa 
knowledge representation reasoning logical philosophical computational foundations 
brooks cole 

stumme maedche 
fca merge bottom merging ontologies 
th international joint conference artificial intelligence ijcai seattle washington usa aug 

visser 
ontology agent clustering 
ijcai workshop ontologies problem solving methods volume ceur workshop proceedings stockholm sweden aug 
