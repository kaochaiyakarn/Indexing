encompassing framework paraconsistent logic programs jo ao alc carlos viegas dam asio lu pereira centro de arti cial departamento de inform atica universidade nova de lisboa portugal 
mail cd lmp di fct unl pt 
propose framework extends antitonic logic programs arbitrary complete bilattice truth values belief doubt explicitly represented 
inspired ginsberg fitting bilattice approaches framework allows precise de nition important operators logic programming explicit default negation 
particular leads natural semantical integration explicit default negation coherence principle explicit negation entails default negation 
de ne coherent answer sets paraconsistent founded model semantics generalising paraconsistent semantics logic programs 
particular paraconsistent founded semantics explicit negation 
framework extension antitonic logic programs cases general capture probabilistic deductive databases possibilistic logic programming hybrid probabilistic logic programs fuzzy logic programming 
powerful mathematical formalism dealing simultaneously default paraconsistency uncertainty reasoning 
results provided semantical framework deals inconsistent information propagation rules program 
development ecient tools solve problems knowledge representation urges careful balance computational performance carrying speci inference task attempt nd precise formalization problem 
virtue mathematical power bilattices strong provide uniform treatment existing procedural systems whilst keeping attractive computational properties 
introduced ginsberg ort implement knowledge representation tools 
furthermore bilattices logic programming formalisms fitting attested see particularly adequate represent knowledge situations nd uncertainty incompleteness inconsistency 
bilattices supporting paraconsistent reasoning logic programming supported 
fitting results appeared time diversity frameworks manipulating data knowledge proposed form extensions logic programming deductive databases :10.1.1.24.3985
usually authors characterise programs model theoretical semantics minimum model guaranteed exist corresponding monotonic xed point operator continuous 
underlying uncertainty formalism proposed logic programming frameworks includes probability theory fuzzy set theory logic possibilistic logic 
di erent ways dealing uncertainty may required application 
logic programming frameworks monotonic allows default negation 
algebraic approach language semantics logic programs dam asio pereira de ne general framework monotonic logic programs rules constituted arbitrary isotonic body functions propositional symbols head 
programs extend de nite logic programming non monotonic default negation arbitrary complete lattices truth values appropriate notion implication 
shown monotonic logic programs general capture distinct logic programming semantics uncertainty formalisms 
authors generalize framework cater rules arbitrary antitonic bodies general complete lattices show standard logic programming theoretical results carry antitonic logic programs de ning stable founded model semantics alike :10.1.1.24.6050:10.1.1.24.6050:10.1.1.121.6788:10.1.1.121.6788
notwithstanding speci treatment explicit negation antitonic logic programs provided 
extend previous framework arbitrary complete bilattice truth values appropriate negation con ation operators 
resultant framework dubbed paraconsistent logic programs 
presentation motivated ginsberg bilattices lakshmanan sadri probabilistic deductive databases 
ginsberg bilattices support elegant framework logic programming involving belief doubt 
particular lead precise de nition explicit negation operators 
employ results properly characterise default negation ensure coherence principle ect explicit negation entails default negation explicitly false necessarily false default 
authors argue convenience explicitly representing belief doubt dealing incomplete knowledge diverse evidence may contradict 
considering various degrees contradictory information paraconsistent logic programs satisfying coherence principle semantics programs able deal contradiction uncertain information 
important just reason facing inconsistency keep track part knowledge base inconsistent part merely depends inconsistent part course detect part inconsistency free 
order de ne semantics requirements generalise paraconsistent founded semantics extended logic programs wfsx 
impose speci characterisation explicit negation introduce framework negation operator supported ginsberg bilattice 
sequel semantics coherent answer sets 
structured follows section bilattices empower framework characterise default negation operator 
section section core introduce respectively syntax semantics paraconsistent logic programs 
section produce illustrative example framework utilised encode complex decision table 
subsequent section demonstrate results concerning identify inconsistent propositional symbols depend inconsistency propositional symbols 
draw refer related mention developments 
extended version full proofs results available :10.1.1.4.2451
bilattices aim characterising uncertainty varieties xed point semantics logic programming proposed 
common require suitable machinery ensuring existence xed points particular operator associated program 
machinery smoothly appropriate interaction logical operations allowed programming language underlying partial order truth values 
claimed fitting notion bilattice ginsberg applied kinds xed point semantics providing account intended partial order truth functional connectives interactions 
employing bilattices avail powerful tool uniformly describe truth values depict classical systems basically multivalued approach underlying truth values intuitive character 
matter fact general presentation bilattices furthermore describe non intuitive truth values 
de nition bilattice 
bilattice structure hb nonempty set hb hb bounded lattices bottom top element 
shall respectively denote meet join operations correspond correspond partial order intended represent knowledge information order truth order 
words say knowledge order reports information particular statement truth order reports con dent true false 
interpreting simply mean turn interpret meaning evidence underlying subsumed evidence underlying bilattice nitary distributive lattice hb nitary distributive nitary distributive hb nitary distributive say cross distributive distributes respect distributive distributive cross distributive simply say distributive 
hb hb complete lattices respective upper bound greatest lower bound exist arbitrary subsets lattice nite subsets say bilattice complete 
may refer bilattice wish emphasize domain cartesian product hc hd give structure complete lattices elements shall order denote respectively bottom top elements hc similarly denote respectively bottom top elements hd simply designate elements 
bilattice respectively bottom top elements bilattice respect likewise respectively bottom top elements bilattice respect imagine pair represents independent judgements concerning truth statement represents degree evidence statement represents degree evidence 
domain di erent lattices expressions belief need measured way 
sense mean embodies knowledge re ected increased degree belief 
hand mean embodies truth re ected increased degree evidence decreased degree evidence 
simplest example non trivial bilattice obtained resorting lattice constituted set representing respectively classical truth values true false 
bilattice depicted gives isomorphic copy known logic due belnap indicates evidence indicates inconsistent situation having full evidence 
likewise stands false true 
analysing bilattice terms conclude respectively greatest element incomparable 
considering relation respectively greatest element incomparable 
fig 

smallest nontrivial bilattice known example real unit interval :10.1.1.4.2451
think member resulting bilattice expressing degree evidence :10.1.1.4.2451
expressive useful bilattices reader invited take look 
observe di erence bilattice de nition ginsberg fitting consider negation granted 
may bilattices negation operator 
order introduce ginsberg requires negation mesh partial orders satisfy double negation property de nition negation 
bilattice hb negation operation mapping 


due way negation contemplated bilattice argue operator establishes connection knowledge truth orders reasonable way expects negation invert notion truth whilst negation preserve knowledge order know know suppose combined identical lattices hc order create bilattice 
reasonable candidate negation operator 
intuitively bilattice assuming evidence measured way 
passing just counting counted conversely 
bilattice de ne negation operator reversing evidence 
equivalent ipping diagram left right interchanging keeping xed 
fitting introduced basic operator bilattices con ation see details 
operator de ned manner negation roles interchanged de nition con ation 
bilattice hb enjoys con ation operation mapping 


resp 
veri ed negation resp 
con ation operator said weak 
fitting states con ation operator results moving default evidence 
signi es hb bilattice con ation operator count count count 
suppose combine identical lattices hc order create bilattice order reversing involution denote reasonable candidate con ation operator 
operator called de morgan complement 
recalling bilattice introduce con ation de ning operation ips bilattice top bottom interchanging keeping xed 
circumstances notion con ation fitting de ne important relations bilattice de nition 
bilattice hb con ation 
exact 
consistent additionally say inconsistent regarding bilattices kind think evidence complement evidence say exact evidence complement reasonable sense 
exact evidence resp 
evidence knowledge complement evidence resp 
evidence consistent 
con ict knowledge evidence evidence evidence resp 
evidence knowledge complement evidence resp 
evidence inconsistent 
bilattice instance de ne con ation follows :10.1.1.4.2451
considering case element belongs exact consistent inconsistent :10.1.1.4.2451
assuming existence con ation associated negation operator de ne default operator 
way con ation represents movement default evidence default operator denoted represent move default negation evidence 
means hb bilattice con ation negation operators count count count 
assuming bilattice say commute considerations account may generalise notion default negation follows de nition default negation 
hb bilattice 
consider respectively negation con ation operator commute de ne default negation operator def bilattice crisp case introduce default negation de ning operation ips bilattice top bottom left right 
equivalent interchanging 
bilattice de ne default negation operator easily :10.1.1.4.2451
di erent de nition 
default negation antitonic respect orders preserves knowledge order truth order 
addition de nition related epistemic logic equated belief classical negation 
semantics true minimal models 
see relationship represented bilattice exact exact complements consequently interpreted follows case con ation operator coincides belief operator may conclude con ation introduced conjunction generalises notion belief 
default negation operator plays central role framework 
section ideas expressed relate explicit negation operator coherence principle 
original concept coherence principle introduced extended logic programs interpreted wfsx rationale wfsx non trivially extract maximum number contradictory information 
provides user function isotonic antitonic value function increases decreases increase argument remaining arguments kept xed 
information necessary decide possible scenarios taken account 
user warned potential problems take right decision 
generalise extent property involving detection information support inconsistency order applicable complete bilattices truth values 
characterisation wfsx terms argumentation semantics reader referred 
seen bilattices provide truth value mechanism suitable uncertain inconsistent information 
fitting words logic programming xed point semantics developed relative bilattice 
means bilattice umbrella develop framework general capture huge number extant formalisms involving uncertain inconsistent reasoning 
sections presentation motivation framework central topic concern 
paraconsistent logic programs framework monotonic logic programs rules constituted arbitrary isotonic body functions propositional symbols head 
dam asio pereira extend syntax monotonic logic programs allowing rules antitonic bodies antitonic logic programs normal logic programs special case 
authors show standard logic programming theoretical results carry antitonic logic programs stable founded semantics alike :10.1.1.24.6050:10.1.1.24.6050:10.1.1.121.6788:10.1.1.121.6788
arbitrary monotonic antitonic operators complete lattice programs pave way combine integrate single framework forms reasoning fuzzy probabilistic uncertain paraconsistent ones 
works argued convenience introducing logic programming way distinguish shown false false default proven true 
called extended logic programs add explicit negation normal programs 
claimed explicit negation entail default negation coherence principle mentioned 
unfortunately antitonic logic programs stand suited characterise principle discussed 
path lakshmanan sadri proposed framework modeling uncertainty belief doubt explicitly incorporated 
motivated formalisms extended logic programs lakshmanan sadri framework shall extend syntax antitonic logic programs bodies constructed combinations functions isotonic antitonic argument complete bilattice general head formulas 
employ characterisation default negation operator section impose coherence 
remainder assume bilattice complete admits con ation negation operators commute 
sake completeness start de ning algebraic characterisation syntax paraconsistent logic programs 
presentation standard detailed accounts instance 
language programs single sorted resort simpli ed version signature speci ng paraconsistent logic programs 
de nition plp signature 
signature set pairs hf ni function symbol occurs distinct pairs arity rank natural number 
set denotes set function symbols arity paraconsistent logic program signature plp signature short signature containing pairs andh 
paraconsistent logic programs built function symbols represent negation con ation operators meet knowledge ordering 
user free add function symbols constants language de ning speci plp signature 
association meaning symbols plp signature captured de nition plp algebra de nition plp algebra 
plp signature bilattice hb plp algebra pair hb ii interpretation function assigning functions functions symbols follows 
symbol constant symbol interpreted element denoted 
function symbol interpreted function denoted additionally isotonic antitonic argument respect respectively mapped negation con ation operators meet operator knowledge ordering note plp algebras related semantical aspects operators 
step consists de ning alphabet symbols language plp signature 
de nition plp alphabet 
plp signature set function symbols 
set propositional symbols fg plp alphabet disjoint union 
formulae appear body heads rules paraconsistent logic programs de ned inductively follows de nition plp formulae 
signature set propositional symbols 
set plp formulae form set strings corresponding plp alphabet propositional symbol formula form constant symbol formula form fn formulae form ary function symbol fn formula form order avoid unnecessary notational overhead de nition specify formulae pre notation 
shown set formulae form freely generated propositional constant symbols operations corresponding function symbols described 
notion plp formulae mimics de nition rst order logic terms pre notation prede ned unary functions symbols meet operator symbol complete formal analysis justi cation de nitions instance 
introducing syntax paraconsistent logic programs require notion reverse functions 
major motivation de nition negation operators head rules 
shall see bodies rules arbitrary formulae limit allowed functions heads order guarantee existence single model program paraconsistent founded semantics 
shall see notion reverse function allows moving functions head body 
de nition reverse functions 
isotonic unary function partial order say reverse function respect isotonic function respect de ned follows minimum element formally min fa obvious exists unique 
pair galois connection sense follows 
proposition 
negation operator bilattice 
reverse function respect knowledge ordering 
examples operators reverse functions consider negation bilattice 
view generality foresee start possibility introducing operators property instance special instances weak negations 
full syntax paraconsistent logic programs pro ered de nition paraconsistent logic programs 
plp signature hb bilattice plp algebra 
paraconsistent logic program set propositional symbols set rules form formulas form 
head form possible empty sequence unary function symbols applied propositional symbol 
occurring isotonic unary operator symbol reverse function respect 
body arbitrary formula form occurs head rule arbitrary formula form denote formula obtained concatenating mark reserve symbol denote plp algebra example 
plp signature ig fh required function symbols plp signature extended constants representing elements set notice expression interpreted single constant symbol internal structure :10.1.1.4.2451
compromise readability examples 
consider bilattice constructed cartesian product unit interval usual total ordering real numbers :10.1.1.4.2451
plp algebra pair constructed :10.1.1.4.2451
constant symbols mapped corresponding elements :10.1.1.4.2451
:10.1.1.4.2451

:10.1.1.4.2451

min min function min returns minimum arguments :10.1.1.4.2451
considering knowledge ordering function isotonic isotonic arguments whilst antitonic :10.1.1.4.2451
recall alternative notations denoting respectively 
assuming set propositional symbols contains fa syntactically correct paraconsistent logic program order improve readability shall serve programs rule bodies represented notation operator associates left negation con ation operators higher priority usual conventions examples unambiguously translated pre notation required formal de nitions 
program may exhibited follows de nition tailored aim ascertaining occurrence propositional symbol isotonic antitonic de nition isotonic antitonic occurrences 
consider set propositional symbols set annotated propositional symbols fa fa functions form form form form de ned inductively propositional symbol constant symbol function symbol arity formulae fn form fn gn fn hn formula isotonic th argument antitonic th argument 
propositional symbol annotated said isotonic occurrence similarly annotated occurrence antitonic clear occurrence propositional symbol appears translated formula annotated isotonic antitonic 
designations isotonic antitonic occurrence fully understood de ning formula evaluated respect partial interpretation 
instance formula expected 
expression am bn denotes formula 
am bn respectively isotonic antitonic occurrences propositional symbols order appear left right 
usually denote rule am bn order clear isotonic antitonic occurrences propositional symbols body rule 
paraconsistent logic program monotonic logic program rules form am 
refer antitonic logic program rule kind am bn 
semantics paraconsistent logic programs regarding semantics follow paraconsistent approach inspired wfsx founded semantics proposed extended logic programs 
furthermore introduce stable model semantics coherent answer sets 
founded semantics de ned alternating xed point de nition style relates works 
order simplify presentation assume rest section existence plp signature plp algebra complete bilattice hb con ation negation commuting set propositional symbols rst diculty de ning semantics paraconsistent logic programs concerns evaluation body formulae antitonic occurrences propositional symbols particular de ning default negation 
simple xed point de nition semantics hampered bodies rules isotonic monotonic behaviour respect uniform assignment elements bilattice propositional symbols interpretation 
technique logic programming literature resorts notion partial interpretation requiring rst usual notion interpretation 
de nition interpretation 
hb complete bilattice set propositional symbols 
interpretation mapping set interpretations propositional symbols respect denoted ib pointwise ordering extends knowledge ordering set interpretations follows 
de nition lattice interpretations 
consider ib set interpretations set propositional symbols respect complete bilattice interpretations ib hi vi complete lattice 
interpretation maps propositional symbol element greatest interpretation maps propositional symbol top element complete bilattice truth values partial interpretation pair interpretations mapping propositional symbols elements underlying bilattice 
de nition partial interpretations 
partial interpretation set propositional symbols pair hi tu interpretations respect complete bilattice set partial interpretations speaking partial interpretations usually omit set propositional symbols implicitly provided 
refer component tu tu component partial interpretation 
component represents certainly holds partial interpretation tu component contains may hold complement certainly hold 
annotations tu wfsx semantics basis valued setting component tu component capture respectively true true unde ned non false 
important mark tu imposed consequently paraconsistency allowed may certainly hold hold simultaneously true non false 
orders partial interpretations useful de nition standard fitting orderings 
partial interpretations 
standard fitting orderings partial interpretations de ned standard ordering tu tu fitting ordering tu tu set partial interpretations ordered complete lattice 
clearly bottom top elements lattice viz 
false viz 
true viz 
unde ned viz 
true false 
standard ordering prefers partial interpretations maximizing certainly holds minimizing certainly hold 
fitting ordering prefers interpretations information 
insight isotonic occurrences propositional symbols annotated evaluated component partial interpretation antitonic occurrences annotated evaluated tu component resulting element bilattice separation isotonic antitonic occurrences propositional symbols fundamental allow speci cation converging operators order obtain xed point semantics paraconsistent logic program :10.1.1.24.6050
precise inductive de nition evaluation formula partial interpretation provided de nition valuation 
partial interpretation tu de ne inductively function val form follows propositional symbol val propositional symbol val tu constant symbol val function symbol arity formulae fn form val fn val val valuation function form de ned val 
formula form am bn expression am bn mean hi ji hi ji partial interpretation constructed interpretations main property valuation function captured proposition explaining designated isotonic antitonic occurrences propositional symbols annotated respectively proposition 
consider partial interpretations formula form val val val val 
increase values assigned propositional symbols component decrease values tu component partial interpretation maintains increases value formula respect partial interpretation 
notion model program straightforward de nition model 
partial interpretation satis es rule paraconsistent logic program 
partial interpretation model satis es rules notice resort knowledge ordering specify notion model 
intent paraconsistent logic programs specify hold hold program rules information extracted program rules 
desired behaviour logic programming bilattices argued evidence 
upper bound knowledge ordering interpreted accept operator combines knowledge order record cases evidence time proposition pinpoint contradictory knowledge 
particular assume state proposition say true false rules constant mapped greatest element truth ordering 
knowledge ordering mapped greatest element knowledge ordering meaning sort inconsistency program 
truth ordering rule trivially satis ed mapped greatest element truth ordering losing information sort inconsistency program 
proposition 
partial interpretation satis es rule satis es rule 
previous proposition conclude function symbols appearing head moved body rule 
function symbols rule heads simply syntactic sugar allowing user naturally express knowledge paraconsistent logic program 
major de nition generalises gelfond lifschitz transformation operator 
rationale extract program consequences assuming interpretation evaluate antitonic occurrences propositional symbols 
technically achieved coupling ideas gelfond lifschitz division operators immediate consequences operator van emden kowalski lines 
de nition gamma operator 
paraconsistent logic program interpretation 
generalised immediate consequences operator ib ib maps interpretations interpretations lub am bn am bn operator de ned xed point respect ordering interpretations formally lfp ordinal de nition generalised immediate consequences operator proposition guaranteeing semantic equivalence rules 
operator determines value assigned propositional symbol order satisfy rules upper bound knowledge ordering lub interpretation isotonic occurences propositional symbols xed interpretations antitonic ones 
operator iterated order guarantee rules propositional symbols satis ed xed interpretation antitonic occurrences propositional symbols 
attained operator 
notwithstanding conformity negation default negation unrelated coherence principle adopted ensures entails 
epistemic viewpoint coherence seen instance necessitation principle states known believed negation false minimal models 
coherence principle 
def de nition suces guarantee 
technically de ne coherence principle manner de nition coherence principle 
paraconsistent logic program 
model hm tu complies coherence principle propositional symbol appearing language tu 
arguments order enforce coherence resort semi normal gamma operator inspired approach taken de nition paraconsistent founded semantics explicit negation wfsx inspired semi normal gamma operator wfsx generalises paraconsistent case 
semi normality designation borrowed semi normal defaults reason logic program rules add rule body default literal propositional symbol explicit negation head 
context de nition de nition semi normal gamma operator 
paraconsistent logic program interpretation 
semi normal immediate consequences operator ps ib ib maps interpretations interpretations ps lub am bn am bn de ne ps lfp ps ps ordinal mark coherence enforced propositional symbol letting value bodies surpass 
proceeding necessary ensure ps de ned 
immediate knaster tarski theorem versions immediate consequence operators monotonic theorem monotonicity ps 
paraconsistent logic program interpretation 
operators ps monotonic respect pointwise extension knowledge ordering interpretations 
dual alternating operator suces de ne extension wellfounded semantics bilattice logic programs done :10.1.1.121.6788
particular technique followed de ne semantics antitonic logic programs 
take account semi normality capture coherence principle 
solution described alternating xed point de nition wfsx provided relying application anti monotonic operators ps generalising result framework need ensure theorem theorem anti monotonicity 
consider paraconsistent logic program interpretations ps ps 
corollary 
consider paraconsistent logic program interpretations ps ps 
monotonicity ps operators know knaster tarski theorem paraconsistent logic program ps xed point 
xed point armed de ne paraconsistent founded semantics de nition paraconsistent founded semantics 
consider paraconsistent logic program partial interpretation hm tu say partial paraconsistent stable model ps tu ps 
partial paraconsistent stable model fitting ordering paraconsistent founded model wfm obtained iterating ps interpretation xed point ps ordering shall wfm ps hm tu partial paraconsistent stable model say propositional symbol fully de ned tu 
unde ned tu 
ned tu 
say propositional symbol strictly ned tu 
alternatively letting tu ps operator mapping partial interpretations partial interpretations partial paraconsistent stable models program seen xed points monotonic respect xed point fitting ordering paraconsistent founded model guaranteed exist obtained iterating 
operator counterpart przymusinski operator characterise founded semantics 
important result partial paraconsistent stable model model program theorem 
paraconsistent logic program 
partial paraconsistent stable model model components partial interpretation coincide extension answer set semantics obtained de nition coherent answer sets 
paraconsistent logic program 
coherent answer set fully de ned partial paraconsistent stable model form hm mi interpretation 
usual coherent answer sets guaranteed exist 
paraconsistent founded models coherent answer sets comply coherence principle proposition 
paraconsistent logic program 
partial paraconsistent stable models hm tu obey coherence principle propositional symbol appearing language coherence principle valid general classes formulae described corollary corollary 
paraconsistent logic program hm tu partial paraconsistent stable model 
formula constructed propositional symbols constant symbols representing consistent values underlying bilattice combinations 
corollary immediate providing con rmation semantics obeys coherence corollary 
coherent answer sets paraconsistent founded model paraconsistent logic program observe coherence principle 
naturally paraconsistent founded semantics extends founded semantics generalisations wfsx wfsx :10.1.1.121.6788:10.1.1.121.6788
similarly coherent answer sets extend answer sets semantics gelfond lifschitz 
additional details reader referred :10.1.1.4.2451
section show example motivating applicability framework proposed semantics 
example paraconsistent logic programs large range applications 
address example adapted encoding decision table rough relations 
determined rough sets cf 
introduced deal imprecise information 
logic programming languages de ned making possible describe systems rough relations reason 
points languages resemble framework di er essentially enforcing coherence limiting belnap valued logic 
symptoms fever cough headache muscle pain decide patient diagnosis performed decision table table mark rd th lines table evidence set symptoms cases physician remains undecided 
resort plp algebra exhibited example encode decision table :10.1.1.4.2451
rst case directly representable paraconsistent logic programming rule lu fever cough headache muscle pain similarly second diagnosis case implemented rule lu fever cough headache muscle pain gures ctitious 
table 
decision table fever cough headache muscle pain cases cases cases cases cases translation nal case immediate lu fever cough headache muscle pain returning rule way negation de ned de nition truth value head greater equal body model may alternatively construe lu fever cough headache muscle pain reduces lu fever cough headache muscle pain continue reader surely notice body rule identical rule exception con dence degrees rules 
wfm truth value lu determined upper bound truth values assigned bodies rules lu 
consequently rules form combined single lu fever cough headache muscle pain rule expresses positive negative evidence diagnosing patient fever cough headache muscle pain correct diagnosis cases 
patient doesn fever doesn cough doesn headache muscle pain doesn situations 
positive evidence consequent concluded propositions body rule positive evidence 
symmetrically negative evidence gotten propositions body supply negative evidence 

remaining situation fever cough headache muscle pain distinct rules required concluding patient cases lu fever cough headache muscle pain lu fever cough headache muscle pain paraconsistent logic program rules diagnosing lu fever cough headache muscle pain lu fever cough headache muscle pain lu fever cough headache muscle pain lu fever cough headache muscle pain assume antibiotics prescribed concluded 
compare possible alternative translations statement represented rules antibiotics lu antibiotics lu concludes antibiotics prescribed explicit negative evidence rule antibiotics recommended evidence illustrate behaviour paraconsistent founded semantics situations 
table contains di erent models program 
rst row model corresponds component model second row represents tu component 
leftmost columns represent interpretation rightmost columns con dence degrees explicit default negations 
rst model table obtained adding set facts previous rules con dence degrees extracted component wfm model program fever cough headache muscle pain rst models correspond previously identi ed cases diagnosing reader easily check column lu accordance evidence expressed table 
distinctive ect rules antibiotics lu antibiotics lu observed columns lu lu 
coherence principle case model lu lu reader check rows model 
instance second having negative evidence 
table 
models program fever cough headache muscle pain tu tu tu tu tu tu model lu degree evidence lu evidence expected 
lu value lu value antibiotics de nitely prescribed rule con rming positive evidence having situation diagnosed appears fourth model antibiotics prescribed 
fth model physician uncertain regarding symptom 
interesting aspect case degree evidence obtained combining degrees evidence rules 
model illustrates paraconsistency handled semantics 
fact headache inconsistent fitting sense wfm 
founded model program lu degree tu component sense degree truth 
shall observe section indicative lu dependent inconsistent value example value assigned headache 
previous models consistent fully de ned coherent answer sets 
capturing inconsistency dependencies section devoted presentation material theorems related inconsistencies propagation rules paraconsistent logic program 
speci cally provide necessary sucient condition inconsistency paraconsistent logic program necessary condition dependence inconsistency particular propositional symbol counterexample condition sucient 
order motivate results note model table propositional symbols values tu component component headache tu mentioned component headache inconsistent fitting sense de nition 
inconsistency propositional symbol re ected paraconsistent founded model forcing semi normality tu component component knowledge order 
value assigned lu inconsistent lu tu value preserves apparently bizarre behaviour 
sequel show situations happen just propositional symbol depends inconsistency 
showing results adopt conventions motivated example example 
plp algebra consider programs respective paraconsistent founded models indicate tu tu explain disagree regarding noting inconsistent constant assigned rule whilst inconsistent value assigned rule head :10.1.1.4.2451
consequence di ers tu resulting di ers tu 
contrast tu 
proving results bilattice truth values supposed nitary distributive 
assume constant allowed appear rules form just semantical restriction syntactical point view loss generality rule replace constant appearing new propositional symbol say add rule purpose keep tighter control propagation program rules inconsistency generated constants 
acting way force inconsistent constants behave ordinary inconsistent propositional symbols 
remaining part section treat constants propositional symbols 
theorem ensure paraconsistent wellfounded model hm tu program tu equivalent saying propositional symbol language consistent 
theorem 
hm tu xed point ps paraconsistent logic program propositional symbol language 
obviously checked example tu propositional symbol inconsistent example 
consider paraconsistent logic program showed example lu fever cough headache muscle pain lu fever cough headache muscle pain lu fever cough headache muscle pain lu fever cough headache muscle pain rules contains set facts fever cough headache muscle pain wfm hm tu corresponds fth model table conclude tu 
accordingly ensured theorem propositional symbol case headache inconsistent language 
underpinned theorem corollary immediate corollary 
coherent answer sets paraconsistent logic program consistent 
proposition nd bit tu inconsistent depends inconsistency 
introducing motivate notion dependence example 
program obtained replacing set facts example set fever cough headache muscle pain resultant wfm hm tu corresponds third model table conclude tu 
program rules ectively contribute nal value assigned wfm clearly tu obtained combining values assigned bodies rules lu fever cough headache muscle pain lu fever cough headache muscle pain program example 
calculating paraconsistent wellfounded model values assigned rst rules completely absorbed values assigned rules mentioned example 
consequently ecting nal result eliminate rst rules proposition just de ne set ua order gather rules contribute value established wfm objective guarantee consistent rules ectively contribute ua propositional symbols body tu tu proposition 
paraconsistent logic program propositional symbol language 
hm tu paraconsistent founded model de ne pg ua upper bound conditions hold rule form ua constant symbol rule bm jc cn ua tu tu tu 
words tu inconsistent rule propositional symbol constant body tu 
recalling example tu headache headache tu just look wfm program conclude proposition headache inconsistent depends inconsistency case headache 
generality bilattice structure converse result proposition example 
plp algebra paraconsistent logic program evaluating paraconsistent founded model hm tu obtain tu tu tu proposition propositional symbols inconsistency :10.1.1.4.2451
addition rule undoubtedly say dependent syntactically inconsistency 
tu tu tu clue depending inconsistency lost 
note case depend inconsistent values point matter value exactly non inconsistent values 
open question characterise identify declarative simple way circumstances 
desired result speci situations instance assume propositional symbol program language tu strictly ned 
see apply converse result extended logic programs 
related open issues ne tuned issues explored new ones arising introduced paraconsistent logic programs 
generalise antitonic logic programs encompassing framework appropriate kind concepts cope explicit default negation certifying complies coherence principle 
program rules complex heads constituted applications unary functions propositional symbol admitting reverse function respect whilst bodies correspond compositions arbitrary monotonic antitonic operators argument complete bilattice sense ginsberg 
order de ne semantics resort program division spirit transforms paraconsistent logic programs monotonic ones 
similarly apply immediate consequences operator guaranteeing existence minimum paraconsistent founded model wfm motivate paraconsistent logic programs order map decision tables rough relations examine semantics manipulates inconsistency 
establishing new results show semantics allows paraconsistency time keeps extent monitoring eye inconsistent information propagation program rules 
regards complexity analysis wfm rst glance sounds expensive terms computational time notwithstanding speci instances inference methods polynomial algorithms implementation wfsx 
provided simple translation extended logic programs wfsx paraconsistent logic programs 
furthermore frameworks easily embeddable probabilistic logic programs possibilistic logic programming hybrid probabilistic logic programs generalized annotated logic programs fuzzy logic programs 
hand translations permit simultaneously deal negation paraconsistency non monotonic reasoning uncertain formalisms 
may study behaviour wfsx important paraconsistent semantics extended logic programs uncertain reasoning absent introduced 
antitonic logic programs may envisage paraconsistent logic programs natural extension fitting works 
particularly framework enables distinction explicit negation default negation explore coherence principle 
fitting restrain framework interlaced bilattices 
mention central point works logic programming syntax considering arbitrary isotonic antitonic functions bodies 
absolutely fair publication introduces notions attenuation operators viewed arbitrary monotonic operators bilattices 
related de nes semantics extended logic programs bilattices restricted syntax 
author advocates coherence principle speci situations clear general property semantics 
intend explore connections 
similar direction denecker focus properties operators guarantee existence founded stable model semantics de nition language construction operators 
rely combination related distinct anti monotonic operators 
generality framework possible avenues research may generalise structure consider rules complex heads instance disjunctions 
opposite direction may explore particular instances framework improve understanding properties concrete instances compare existing 
focusing theoretical results detected promising links semantics substructural logics exposed subsequent 
results shall de ne model theory semantics style similar pearce 
close relationship semantics wfsx possible introducing suitable operator capture consistency obtain model theory satisfying gentle principle explosion 
consequently resulting logic classi ed logic formal inconsistency lfi 
interesting line research study various types negation specially allow weak negation operators 
ers opportunity examining coherence principle functions cases 
de nition tabled derivation procedures envisaged speci instances framework 
acknowledgments 
jo ao alc phd student unl supported capes lia brazil 
authors flux projects sponsored fct portugal 
grateful reinhard kahle jos alferes helpful discussions 
speci word appreciation go anonymous referees detailed comments 

alc dam asio pereira 
encompassing framework paraconsistent logic programs extended version 
available di fct unl pt cd ps gz 

alc dam asio pereira 
paraconsistent logic programs 
flesca greco leone editors th european conf 
logics arti cial intelligence pages 
springer verlag lnai 

alferes dam asio pereira 
logic programming system non monotonic reasoning 
special issue journal automated reasoning :10.1.1.121.6788

alferes pereira 
reasoning logic programming 
lnai 
springer verlag 

alferes pereira przymusinski 
classical negation nonmonotonic reasoning logic programming 
journal automated reasoning 

ofer 
paraconsistent declarative semantics extended logic programs 
annals mathematics arti cial intelligence 

baral subrahmanian 
duality alternative semantics logic programs nonmonotonic formalisms 
automated reasoning 

belnap 
useful valued logic 
michael dunn epstein editors modern uses multiple valued logic pages 
reidel 


founded semantics dimensional 
answer set programming pages 
aaai press 
aaai press technical report ss inside aaai spring symposium series 

carnielli marcos 
taxonomy systems 
carnielli coniglio editors paraconsistency logical way inconsistent 
proceedings ii world congress paraconsistency 
marcel dekker 
www cle unicamp br prints htm 

dam asio 
paraconsistent extended logic programming constraints 
phd thesis universidade nova de lisboa 

dam asio pereira 
survey paraconsistent semantics logic programs 
gabbay smets editors hand 
defeasible reasoning uncertainty management systems volume pages 
kluwer academic publishers 

dam asio pereira 
antitonic logic programs 
eiter truszczynski editors procs 
th int 
conf 
logic programming nonmonotonic reasoning pages 
springer lncs lnai 

dam asio pereira 
monotonic residuated logic programs 
benferhat besnard editors th european conf 
symbolic quantitative approaches reasoning uncertainty 
springer lnai 

subrahmanian 
hybrid probabilistic programs 
journal logic programming 

denecker marek truszczy nski 
approximations stable operators founded xpoints applications nonmonotonic reasoning 
minker editor logic arti cal intelligence pages 
kluwer academic publishers 

dubois lang prade 
possibilistic logic programming 
proc 
iclp pages 
mit press 

fitting 
logic programming topological bilattice 
mathematicae xi 

fitting 
bilattices logic programming 
epstein editor twentieth international symposium multiple valued logic pages 
ieee 

fitting 
bilattices semantics logic programming 
logic programming 

fitting 
family stable models 
logic programming 

fitting 
fixpoint semantics logic programming survey 
theoretical computer science 

gallier 
logic computer science 
john wiley sons 

gelfond lifschitz 
stable model semantics logic programming 
kowalski bowen editors th international conference logic programming pages 
mit press 

gelfond lifschitz 
logic programs classical negation 
warren szeredi editors th int 
conf 
logic programming pages 
mit press 

gierz hofmann keimel lawson mislove scott 
compendium continuous lattices 
springer verlag 

ginsberg 
multivalued logics uniform approach reasoning arti cial intelligence 
computational intelligence 

kifer subrahmanian 
theory generalized annotated logic programming applications 
journal logic programming 

kowalski sadri 
logic programs exceptions 
warren szeredi editors th international conference logic programming 
mit press 

apar cio pereira alferes 
default theory founded semantics explicit negation 
wagner pearce editor procs 
european workshop jelia lnai pages 
springer verlag 

lakshmanan sadri 
theory probabilistic deductive databases 
theory practice logic programming 

lakshmanan 
parametric approach deductive databases uncertainty 
knowledge data engineering 

john mitchell 
foundations programing languages 
foundations computing 
mit press 

ng subrahmanian 
probabilistic logic programming 
information computation information control 


rough sets 
theoretical aspects reasoning data 
kluwer academic publishers dordrecht 

pearce 
stable negation logic programming 
gabbay wansing editors negation pages 
kluwer academic publishers 

pearce wagner 
reasoning negative information strong negation logic programs 
editors language knowledge intentionality pages 
acta philosophica 

pereira alferes 
founded semantics logic programs explicit negation 
neumann editor european conference arti cial intelligence pages wien austria 
john wiley sons 

przymusinska przymusinski 
semantic issues deductive databases logic programs 
banerji editor formal techniques arti cial intelligence pages 
north holland 

greg 
substructural logics 
routledge 

meyer brady 
relevant logics rivals 


ralf michael schroeder 
parametrised hierarchy argumentation semantics extended logic programming application wellfounded semantics 
theory practice logic programming 
appear 

shapiro 
logic programs uncertainties tool implementing expert systems 
proc 
ijcai pages 
william kau mann 

tarski 
lattice theoretic xpoint theorem applications 
paci journal mathematics 

van emden 
quantitative deduction xpoint theory 
journal logic programming 

van emden kowalski 
semantics predicate logic programming language 
journal acm 
:10.1.1.121.6788
van gelder ross schlipf 
founded semantics general logic programs 
journal acm 

aida vit dam asio jan ma nski 
query answering rough knowledge bases 
th international conference rough sets fuzzy sets data mining granular computing 
appear 

aida vit jan ma nski 
logic programming framework rough sets 
peters zhong editors proc 
rd international conference rough sets current trends computing number lncs lnai pages :10.1.1.121.6788
springer verlag 

paul soundness completeness non classical extended sld resolution 
proc 
ws 
extensions logic programming elp lncs pages 
springer verlag 

wagner 
database needs kinds negation 
thalheim 
editors mathematical foundations database systems pages 
lncs springer verlag 

wagner 
negation fuzzy possibilistic logic programs 
logic programming soft computing 
research studies press 
