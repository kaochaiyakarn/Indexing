galicia open platform lattices valtchev david cyril mohamed universit de montr succ 
centre ville montr qu bec canada lirmm cnrs universit montpellier rue ada montpellier cedex france 
formal concept analysis fca proved helpful resolution practical problems fields software engineering knowledge engineering data mining 
substantial push done design efficient procedures lattice construction variety novel algorithms proposed literature 
fca community created effective tools manipulating lattices far missing integrated environment constructing visualizing exploring maintaining lattices 
galicia project aimed construction open platform lattice manipulation follows complete life cycle lattice 
just lattice tool platform provides necessary services quick development test new lattice algorithms 
formal concept analysis fca initially intended alternative classical lattice theory discipline largely narrow frame 
particular practitioners various fields social sciences data analysis software engineering adopted theoretical framework fca corresponding algorithmic methods effective tool extraction conceptual structure raw data 
nowadays fca community practical applications data mining re engineering software knowledge acquisition 
number practitioners adhere concept lattice paradigm steadily growing 
explosion volume information needs analyzed attention increasingly drawn algorithmic aspects discipline software realization requirements scalability flexibility 
best knowledge software tool supports formal analysis process entire span 
despite large amount source code produced filed members fca community reliable free software probably come available commercial tools cover separate tasks visualization toscana 
see project www org 
reasons claim needed integrated environment manipulation lattices 
addition environment remain open source possible extensions easily designed 
problem lack software support development new lattice tools 
experience taught system providing basic services lattice visualization navigation greatly speed process 
motivated observations initiated galicia project main goal bridge gap theoretical advances fca level tool availability 
approach took shape open platform integrating collection tools support entire life cycle concept lattice data preprocessing construction visualization navigation maintenance 
platform intended practitioners provides basic services necessary practical applications fca 
addition galicia offers fca researchers advanced tools performance studies open environment quick design new lattice related techniques 
starts recall classical fca notions newer results relevant project section critical view current availability software tools domain 
goals project followed description data processing analysis services provided platform section 
particular emphasis put facets platform thoroughly realized till visualization component section open architecture section 
background paragraphs recall key notions fca summarize algorithmic developments date 
previous put context 
formal concept analysis basics formal concept analysis fca studies partially ordered structure known names galois lattice concept lattice induced binary relation pair sets objects attributes 
definition formal context triple sets binary incidence relation context see left objects denoted numbers attributes small letters 
way lattice arises top context may summarized follows see details 
closure operators associated context denoted dimension table leading families closed sets 
family closed sets organized complete lattice set theoretic inclusion lattices anti isomorphic underlying isomorphism antitonic mapping 
pairs closed sets isomorphism called formal concepts object set referred extent attribute set intent 
concepts correspond maximal rectangles table strictly positive entries bcd concept dh 
concept galois lattice overlapping structure lattices inclusion extents prevails concept greater super concept iff extent larger 
ac cd fh bcd efh abcd abcdefgh fig 

left binary table 
right hasse diagram lattice hasse diagram lattice drawn shown right hand side intents extents drawn sides node representing concept 
noteworthy contexts lattices constitute alternative representations reality relevant fca constructs include composition decomposition operations contexts corresponding operations lattices 
splits context object attribute set reverse join operations called subposition apposition respectively worth mentioning 
equivalent lattice operations semi products underly important visualization technique lattices see may significant computational benefits 
complete lattice structures derived lattice acquired large popularity fca practitioners iceberg lattices galois sub hierarchy gsh 
iceberg lattices maximal upper sets order filters lattice means generated maximal antichains lattice 
intuitively iceberg arises complete horizontal separator free form sets stands third representation mode attribute implications discussed 
cut lattice parts lower upper 
upper called iceberg lattice includes general concepts excluding overtly specific ones 
extent cardinality restrictions account popular cut criteria factors match 
example iceberg lattice obtained cut factor extent shown left 
bcd cd fh ac bcd fh abcd efh fig 

left iceberg lattice obtained cut factor extent 
right gsh context 
works fca applications software engineering se problems hierarchy optimization object oriented systems underlined importance sub structure complete lattice gsh 
represents restriction lattice order set object concepts attribute concepts concepts minimal maximal extent intent includes object attribute 
illustration right shows gsh context 
se domain re engineering models software described uml class diagrams brought forth need richer description formalism accommodate links may exist objects context associations classes uml 
straightforward approach problem notion relational context family rcf proposed see formal definitions results 
rcf family contexts set higher order binary relations added 
binary relations describe links objects possibly identical contexts family 
example relation binding context 
links relations invariably realistic domain model spatial relations part relations convey valuable information may determine way objects grouped domain concepts 
construction lattices substructures lattice construction contexts challenge early days fca 
problem hard worst case exponentially concepts 
practical cases small number concepts occur sense look methods discover necessary hierarchically organize efficient manner 
nowadays large variety algorithms dedicated computation set concepts entire lattice concepts plus order major distinction algorithms lays way acquire input data 
classical dichotomy batch algorithms consider data completely known 
contrast line algorithms allow small changes data propagated final result concept lattice starting scratch 
simulate batch lattice construction sequence object attribute additions initially void context called incremental construction 
suggested novel paradigm lattice construction generalizes increments sets attributes objects 
apposition subposition semi products defined binary operation complete lattices called assembly extended class lattice construction procedure implements divide conquer strategy 
complete lattices lattice substructures mentioned previous paragraph target algorithmic 
specific techniques designed cope structures directly lower cost 
concerning gsh set efficient algorithm proposed literature batch incremental starting godin 
remain closer lattices algorithms explicitly designed construct 
dedicated methods include titanic method 
lattice visualization assistance examination complex lattices may arise small size context traditionally provided visualization 
lattices usually represented hasse diagrams basically directed acyclic graphs drawing meets difficulties suffers limitations general graph drawing 
quite challenge represent lattice say concepts readable way normally sized computer screen 
deal curse lattice size research fca yielded original method visualizing complex concept lattices see 
lattice corresponding context drawn embedded nested structure smaller lattices 
method relies dual operators assembling contexts called subposition apposition respectively 
operations may thought reverse horizontal respectively vertical split context fragment contexts 
just initial context retrieved joining fragments lattice global context obtained assembling lattices fragments 
prior lattice algorithmic scope reader referred 
assembly context fragmentation supported lattice visualization direct product fragment lattices multi level framework nodes belonging global lattice highlighted 
resulting method called nested line diagrams level may drawn embedded upper levels enables visualization interactive exploration complex lattices provides multi viewpoint presentation analysis results 
toscana system designed support exploration complex lattice navigation 
system offers valuable services single multi scale diagram drawing navigation actual needs domain decade seen significant increase number fca community members hits query fca lattice google 
hand practitioners get interested applying fca theoretical achievements supposes appropriate software tools available 
hand researchers get involved studies theoretical algorithmic aspects fca tool development required 
result large quantity source code dedicated particular fca related task currently developed maintained 
due specific features discipline mainly young age time produced code reused reusable 
leads situation newcomers community look available source code help build specific tools 
circumstances see urgent need generic software solution frequently problems lattice construction visualization maintenance navigation 
solution save effort large part community hand enforce certain degree cohesion researchers facilitating data results exchange hand 
addition development new applications largely benefit availability adaptable code turn increase external visibility entire fca paradigm 
fulfill general requirements system exhibit specific software qualities particular high adaptability extensibility 
adaptability necessary order system fit various situations problem settings 
extensibility follows adaptability takes effort appropriate design implementation system easily integrate new features 
extensibility highly desirable tool intended support research young dynamically developing discipline fca 
noteworthy answers questions getting track 
hand project concentrates largescale software framework fca related tasks 
hand multifunctional tools basic fca getting available see example tool www sf net projects 
approaches fits goals schedule launched software project called galicia 
project aimed development fully integrated platform complete set tools manipulating contexts lattices built top common kernel providing basic services low level data processing sharing user friendly graphic interface 
addition key feature target platform open architecture supports adaptive maintenance extensions 
galicia galicia intended integrated software platform including components key operations lattices required practical applications theoretically oriented studies 
basic configuration platform performs major functions context input lattice construction visualization 
goals scope galicia project platform started ordinary lattice tool support research applications fca data mining software engineering 
initially volume data complex structure major stakes put emphasis expressive power efficiency tool configuration limited lattice computation exploration 
addition support exploratory analysis mode specifications extended cover major aspects lattice maintenance data evolution add remove elements context 
computational efficiency intelligibility brought coarse grain lattice operations forth algorithms carry operations added 
quick evolution tool requirements persuaded move open architecture emphasis extensibility data representation lattice manipulation levels 
absence equivalent tools fca community major motivation platform available entire community fact emphasized need generic implementations adapt easily various circumstances analysis goals 
sum galicia designed cover range basic tasks complete life cycle lattice understand see 
intended impact platform fold support applications fca development new lattice techniques 
galicia offers open architecture generic implementations ease adaptation particular application domain problem settings 
example wide range data formats context types allowed platform 
classical binary contexts multi valued contexts admitted design complex data descriptions previously mentioned relational context families 
addition rich set algorithmic fig 

life cycle lattice contexts loaded created means context editor lattices constructed visualized rearrangements context performed clarify lattice structure resulting lattice reduced decomposed smaller lattices 
methods lattice construction maintenance included system architecture 
platform offers visualization mechanisms including graph drawing modes soon provide nested line diagram mode 
context manipulation galicia admits classical binary multi valued contexts processed 
addition relational context families rcf manipulated platform 
basic context manipulations include input output disk file interactive editing split fragments subcontexts context modified changing composition object attribute sets set pairs incidence relation binary table 
edition rcf admits modifications relation ri see 
data formats available galicia ibm formats transaction databases proprietary human readable formats contexts lattices formats currently examined order insure inter operability existing tools application domains 
lattice construction maintenance lattice manipulation functions galicia cover classical algorithms lattice construction large set lattice related techniques designed members team 
fig 

loading data dialog box context family editor 
platform features set lattice construction algorithms 
fact different algorithm performances may vary depending type context consider crucial applications efficiency critical offer tool user choice powerful techniques 
addition availability competing algorithms eases development test new ones particular comparison practical performances 
special emphasis put incremental construction galicia featuring initial algorithm godin generalization 
lattice construction divide conquer approach lattice assembly included platform design 
platform offers set iceberg construction techniques including implementation titanic 
incremental construction performed algorithm 
similarly modes techniques gsh construction included platform design 
batch mode available construction services rely implementation algorithm ceres incremental mode features ares method godin mili 
able provide efficient support data evolutions high importance fca tools intended exploratory tasks 
approach problem specified complete set context modifications add remove lines columns table corresponding operations propagate efficiently modifications lattice 
implementations operations support interactive lattice construction mode galicia user gradually refines view parts data worth analyzing 
operations applies iceberg lattices gsh 
platform design provides support higher level operations lattices assembly split lattices 
seen add remove lines columns time generalize classical online algorithms 
element time strategy assembly split consider initial modified contexts context elements difference corresponding lattices 
case assembly final lattice directly obtained semi product initial lattice lattice drawn difference 
original features galicia support multiple lattice construction top rcf 
designed multi fca procedure 
variants multi fca devised complete lattices gsh 
intended tool theoretical investigations supports concrete application software re engineering area 
visualization drawings concept lattices provide common mechanism communication fca results 
layered diagrams constitute common graph drawing approach layout partially ordered sets 
diagram vertex assigned horizontal layer vertices layer ordered reduce edge crossings 
ordering relies various heuristics general crossing minimization problem known np complete 
fig 

layered diagram concept lattice layout parameters 
galicia provides layout methods automated interactive 
method relies local optimization heuristics edge crossings minimized layer wise top traversal layer set 
second follows strong analogy phenomena vertices edges assigned attraction repulsion forces layout elements sustain impact tends push specific part drawing 
key idea reach global layout convergence point minimal energy entire set elements 
platform provides user friendly interface concept lattice layout 
layout console shown contains main graph drawing tools 
zooming reduced view entire diagram enable navigation complex lattices 
parameters tune layout methods included switches second order heuristics various force degrees rotation speed direction mode diagrams displayed modes see regardless layout method 
mode lattice model mapping vertex sphere 
fig 

force layered 
spherical layout 
force layout 
spherical layout top view 
design implementation platform galicia designed open platform independent components 
architecture system architecture reflects push adaptability extensibility reusability 
fact traditional layered architecture lower upper level composed java environment user interaction services respectively see 
remaining layers represent platform kernel tool set 
kernel charge low level services related representation manipulation contexts ordered structures 
services exported tool layer implementations high level fca methods lay 
see freeze www math hawaii edu ralph 
fig 

architectural layers galicia platform dependencies components 
architecture second highest layer galicia see follows partition platform functions life cycle phases 
import export engine insures input output flow data results context editor offers necessary environment interactive creation modification contexts rcf 
structure extractor component responsible construction maintenance lattices posets 
contains set concrete methods organized subcomponents see respect kind structure manipulation perform 
example constructor subcomponent provides services pure construction data batch incremental 
methods assembly fig 

architecture structure extracting component galicia 
decomposition lattices located assembler slicer updater responsible maintaining incrementally posets attributes objects object attribute pairs added removed 
lattice viewer features poset visualization browsing 
modes lattice representation available complex lattices nested line diagram engine progress enables gradual exploration navigation 
sum architecture galicia favors integration tools tools kernel services interacting user uniform interface 
detailed design implementation modular architecture galicia facilitates modifications set available algorithmic methods tool layer specific data structures kernel 
extensive data types posets contexts context elements results generic services implementation easily modified 
consequently dependency client tools implementation decisions reduced easing integration alternative tools task favoring different aspects efficiency versus low memory consumption 
current version platform provides full support minimal set fca tasks input data processing import export editing lattice construction incremental algorithms visualization modes 
multi fca method available gsh variant 
implementation construction algorithms batch incremental complex manipulations visualization assembly split lattices design 
research oriented features test generator comparative performance studies examined 
discussion galicia open platform provides support entire life cycle lattice 
offers basic services various data types representation manipulation contexts structures collection various algorithms construction lattices related order structures powerful diagram visualization tool works modes 
tool fca practitioners galicia fits perfectly scientific studies theoretical algorithmic aspects investigated 
minimal framework necessary routine performance studies competing techniques available platform 
framework easily extended suit sophisticated problem settings 
galicia modular architecture generic code allows new complex data types integrated platform reasonable effort reusing low level services 
illustration feature integrated galicia processing relational context families represent relations data way inspired uml 
latest public releases galicia available www iro umontreal ca valtchev galicia 
authors want anonymous referees helped improve senior members galicia team especially robert godin missaoui 

ordre classification alg bre 

battista eades tamassia tollis 
graph algorithms visualisation graphs 
prentice hall 
cole 
automated layout concept lattices layered diagrams additive diagrams 
australasian computer science conference asc pages queensland australia 
dony 
automatic class insertion overloading 
proceedings oopsla san jose ca usa special issue acm sigplan notices pages 
ganter wille 
formal concept analysis mathematical foundations 
springer verlag 
godin mili 
building maintaining analysis level class hierarchies galois lattices 
proceedings oopsla washington dc usa special issue acm sigplan notices pages 
valtchev 
concepts point concepts case uml diagram reconstruction 
proceedings nd workshop advances formal concept analysis knowledge discovery databases pages 
ob 
algorithms construction set concept line diagram 
preprint math technische universit dresden june 
stumme taouil bastide pasquier lakhal 
computing iceberg concept lattices titanic 
data knowledge engineering 
valtchev missaoui 
building concept galois lattices parts generalizing incremental methods 
stumme editors proceedings iccs volume lecture notes computer science pages stanford ca usa 
springer verlag 
valtchev missaoui 
partition approach building galois concept lattices 
discrete mathematics 
vogt wille 
toscana graphical tool analyzing exploring data 
tamassia tollis editors graph drawing volume lecture notes computer science pages 
springer verlag 
