building data integration systems mass collaboration robert mccann anhai doan varadarajan alexander department computer science university illinois urbana champaign il usa anhai cs uiuc edu building data integration systems today largely done hand labor intensive error prone process 
describe conceptually new solution problem mass collaboration 
basic idea think data integration system having finite set parameters values set 
build system system administrators construct deploy system shell ask users help system automatically converge correct parameter values 
way enormous burden system development lifted administrators spread multitude users 
describe current effort applying approach problem schema matching context data integration 
experiments real synthetic users show promise approach 
discuss challenges potential applications approach data integration context 

rapid growth distributed data web enterprises generated interest building data integration systems 
shows data integration system sources list books sale 
user query formulated query interface mediated schema system uses set semantic mappings translate query queries source schemas 
queries executed combined results returned user 
numerous works conducted data integration database ai communities 
substantial progress developing conceptual algorithmic frameworks query optimization schema matching wrapper construction object matching fielding data integration systems web 
despite progress today building data integration systems largely done hand extremely labor intensive error prone process 
advent languages creating exchanging semi structured data xml owl semantic web accelerate needs data integration systems exacerbate problem 
critical develop techniques enable copyright held author owner 
international workshop web databases webdb 
june san diego california source schema wrapper amazon com find books authored isaac asimov mediated schema source schema bn com source schema wrapper wrapper powell com data integration system book domain 
efficient construction maintenance data integration systems 
describe mass collaboration build systems approach efficiently building data integration systems 
basic idea underlying approach ask users system pay answering relatively simple questions 
answers build system expand capabilities 
example illustrates approach example consider data integration system 
today build system create source schemas mediated schema specify semantic mappings schemas 
bare minimum necessary build functioning system help query processing engine described 
notice tasks known difficult time consuming 
example help schema matching tools labor intensive manually verify correct semantic mappings tools suggest 
approach start building source schemas mediated schema 
treat semantic mappings mediated schema attributes system parameters 
assign initial values parameters random assignment schema matching tool 
deploy system shell web ask users provide feedback 
user feedback system parameter values values converge example focused treating semantic mappings system parameters 
believe approach extended learn system features wrappers source schemas 
note example mass collaboration approach replace complement existing techniques automate specific tasks building data integration systems schema matching wrapper construction 
fact believe amplify effects current techniques 
approach applicable building systems broad variety settings including enterprise intranets scientific domains bioinformatics web 
example organization employees collaboratively build expand variety systems integrate organizational data 
collaboratively build data integration system hundreds online bioinformatics sources 
volunteers particular web domain forest preservation deploy system integrate wed sources domain constructing initial system shell putting web asking community collectively maintain 
way system constructed maintained expanded virtually cost particular entity great benefits entire community 
described mass collaboration approach potential dramatically reduce cost building data integration systems spread deployment domains 
approach raises numerous challenges 
rest address challenges 
specifically contributions propose mass collaboration conceptually novel approach problem efficiently building data integration systems 
describe solution applies approach schema matching critical task arises constructing data integration system 
synthetic real world experiments show promise approach 
discuss challenges potential applications approach context data integration 

approach long term goal mass collaboration automate possible process building data integration system 
step direction study automate major component process finding semantic mappings source schemas mediated schema 
section describe solution schema matching problem 
running example simplified data integration system 
system mediated schema attributes title author price category year sources schemas 
task find semantic mappings mediated schema source schemas 
solution problem consists major activities initialization soliciting user feedback computing user weights combining user feedback 
describe activities detail 
initialization building correct partial data integration system 
manually specify correct mappings title source schemas 
suppose mappings title title title 
mappings allow build system query interface consists single attribute title 
users immediately query system find books titles 
note building initial correct partial system crucial functioning system 
system limited capabilities answer user queries correctly 
simply initialize mappings randomly probably create initial system produces incorrect query results 
users start system 
correct partial system want leverage user feedback build rest system find correct mappings remaining attributes 
create system parameters maps remaining mediated schema attribute source schema attribute 
consider pairing mediated schema attributes source schema ones parameters author author author author year 
correct value parameter author author semantically equivalent writer 
randomly set initial values parameters 
section discusses initialization methods 
soliciting user feedback deploy correct partial system web ask users providing feedback 
goal feedback parameters converge correct values 
happens correct semantic mappings rest system 
currently solicit user feedback follows 
user submits query system find books titles contain data integration user jump hoop 
user answer question correct value parameter 
user answered question display results query 
shows sample question asks user attribute named price source say attribute source matches attribute year mediated schema 
question amounts soliciting correct value parameter year 
user answer currently adding third option sure examining name attribute data instances information surrounding attributes case 
frequency hoop jumping adjusted hoop query hoop queries 
related topic discuss types questions ask user ways users answer questions 
computing user weights order detect malicious ignorant users compute weight user measures quality feedback 
weight range higher weight indicating higher quality feedback 
compute weights set aside sources user evaluation 
example suppose set aside source 
create parameters related source title title title author year 
manually assign correct values parameters 
solicit user answers correct values parameters discussed previous subsection 
know correct values parameters evaluate user answers compute user weight 
consider user 
number answers provided parameters coming evaluation sources threshold say user provided sufficient answers order evaluated set weight 
faction answers correct 
track users require login system 
note user needs login subsequent sessions handled automatically cookies 
single user randomly mix evaluation questions teaching questions questions get feedback unlabeled sources ensure user know ones evaluation questions 
user weight computed evaluating user exploring option continual evaluation see discussion section 
call user trustworthy weight threshold currently set untrustworthy 
user untrustworthy solicit additional feedback 
discuss methods discourage users intentionally providing incorrect feedback effort deemed untrustworthy avoid answering questions 

empirical evaluation describe preliminary experiments synthetic real user populations evaluate approach 
synthetic experiments experimental setting generated variety synthetic user populations 
users taken uniformly means generated users randomly assigned reliability value user 
value means average user answers questions correctly 
shows results populations see legend 
populations belong classes 
uniform described 
uniform means half users reliability value sample question system asks user answer 
mass collaboration find semantic mappings attributes ofthe mediated schema source schemas 
combining user feedback describing combine user feedback discuss distribute user feedback 
recall set aside source evaluation manually identified semantic mappings source 
identified semantic mappings mediated schema attribute title sources 
job solicit user feedback find semantic mappings remaining mediated schema attributes author price category year sources 
sequentially finding semantic mappings author 
semantic mappings attribute say author immediately add author query interface allow user formulate queries 
way user feedback shown effect soon possible query interface users provide feedback making system useful early possible 
find mappings mediated schema attribute say author proceed sequentially finding mappings author source 
consider source attributes 
finding mappings author reduces obtaining correct values parameters author author 
solicit user answers round robin fashion hoop jumping described section 
answer goes author second goes author 
parameter author receive steady stream user answers 
note answers trustworthy users 
monitor stream answers soon convergence criterion satisfied assign parameter author value answers received far soliciting answers parameter 
suppose parameter author received total predictions 
current convergence criterion number majority answers reaches exceeds exceeds 
case return majority answer value author 
say parameter author converged value 
proceed similarly parameter author 
parameters converged say system converged soliciting user feedback 
schema schema schema schema title author price category year mediated schema matching accuracy want know matching accuracy changes time high reach 
plots matching accuracy average number user answers increases populations 
population represented single line line ends system converges 
term evaluation answers refer answers evaluate reliability user teaching answers refer set values system parameters 
considers teaching answers number evaluation answers user case 
effects size experimented population size varying users numerous population topologies 
observed matching accuracy remains stable varying sizes 
cases time took manage mass collaboration mecha half 
bell means reliability values generated bell distribution 
uniform means users reliability value rest assigned values uniformly 
populations represent broad range user populations expect commonly occur practice 
population simulated interaction data integration system mediated schema attributes sources attributes source 
simulation carried mechanism described section 
set aside sources evaluation 
system evaluated user evaluation questions deemed user trustworthy answered questions correctly 
solicited user feedback match schemas remaining sources 
total parameters values set users 
parameter stopping criterion described section 
timepoint parameter assigned value initial random assignment value obtained convergence time 
matching accuracy timepoint computed number parameters correct value divided total number parameters 
number trusted user shows teaching answers user required system converges high matching accuracy 
system decided user trustworthy solicit answers user 
burden providing answers fall trustworthy users 
want know answers average user shoulder 
shows number answers remains quite low populations populations outlier populations 
populations unreliable populations discussed 
result suggests burden feedback trustworthy untrustworthy users remains relatively low 
reaching matching accuracy result suggests increase number evaluation answers tighten convergence criterion say consider cutoff threshold answers able increase matching accuracy 
case experimented populations 
able prove confirm experimentally continuously solicit evaluation teaching answers update user weights parameter values accordingly matching accuracy converge provided trustworthy users population 
convergence speed obviously depends population characteristics 
demonstrates speed quite fast teaching answers user large variety populations 
matching accuracy function average number answers broad range populations 
average number matching feedbacks trusted user users statements correct uniform uniform uniform uniform uniform bell bell bell bell uniform uniform uniform uniform uniform uniform average number matching feedbacks user users uniform uniform statements correct uniform uniform uniform bell bell bell uniform uniform uniform uniform bell parameters initialized randomly matching accuracy 
users provide answers accuracy increases linearly quickly reaches populations teaching answers user 
populations user provide answers average teaching evaluation order correctly match schemas entire system 
note system administrator schema matching examine parameters 
result supports argument shift significant labor answers administrator mass users user average small amount answers case 
remaining populations shows matching accuracy range parameters converged 
note populations quite unreliable sense contain users highest reliability values users range 
answers evaluation threshold filter bad users admitted users admitted bad users 
parameter cut feedback answers took majority vote significant probability ended answers bad users wrong parameter value 
explains accuracy convergence 
uniform uniform nism negligible 
observed expected number feedback required user reach convergence decreases linearly population size increases 
suggests approach scale large populations important performance aspects 
experiments real users conducted preliminary experiments real users real world data evaluate approach 
built small data integration system real world book sources 
system similar shown mediated schema attributes sources attributes source schema 
conducted experiments 
set aside sources testing built initial partial system query interface attributes title author 
asked set volunteers system provide feedback 
people volunteered half previously heard system 
simply asked volunteers system answer questions best knowledge 
system deemed users trustworthy 
finish evaluation provided noisy answers 
system trustworthy users feedback find semantic mappings mediated schema attributes price category year 
quickly converged reached matching accuracy 
system able expand query interface include attributes mediated schema showing leverage user feedback expand capabilities 
average numbers answers user trustworthy user respectively 
second experiment set aside source evaluation asked user feedback match remaining sources 
changed evaluation convergence criteria 
asked evaluation questions admitted users answered correctly 
parameter asked teaching answers took majority vote 
users volunteered system trusted 
system quickly converged correct values parameters reaching accuracy 
average numbers answers user trustworthy user respectively 
real user experiments provide preliminary evidence real users handle cognitive load questions quickly answer correctly 
currently designing experiments larger data integration settings users 
looking experimental domains known order thoroughly evaluate ability real users handle relevant questions 

discussion described basic mass collaboration framework building data integration systems 
discuss possible extensions framework additional issues arise employing mass collaboration 
schema matching consider extending current schema matching ways 
clear system parameters initialized semi automatic schema matching tools initial values combined user feedback achieve faster convergence 
focused finding mappings location maps address 
currently extending framework handle complex mappings location maps concatenation city state 
current framework values parameters author author obtained independently user answers 
settings may know attribute author maps source attribute 
establish value author immediately conclude author obtaining additional user answers 
extending framework exploit parameter correlations order minimize amount user feedback 
labor intensive tasks believe current approach extended handle data integration issues schema matching 
problem recast sequence questions potentially benefit approach 
key break problem way users handle cognitive load answering individual question 
currently exploring applying approach wrapper construction problem 
mass collaboration methodologies mass collaboration techniques applied variety problems constructing knowledge bases tech support websites word sense disambiguation see related section 
systematic study mass collaboration issues conducted 
currently conducting study examines key challenges mass collaboration context data integration proposes solutions 
examples key challenges include attract users give feedback types feedback solicit combine feedback 
provide preliminary discussion issues 
data integration mass collaboration techniques developing potential applications just data integration context 
sense techniques provide hammer handle variety 
nail pursuing marking data semantic web 
semantic web advocated generation world wide web data marked software programs exploit marked data better satisfy information needs users 
virtually works marking data semantic web asked owner web page mark page data 
approach leads catch situation owners willing spend significant amount efforts mark pages see applications show benefits marking hand applications developed marked data 
break catch exploring conceptually opposite solution marking data asking page owner producer ask people visit page consumers help mark data 
solution problem builds mass collaboration techniques currently developing data integration context 

related draws related areas discuss 
inspired works attempt leverage large volume web users build knowledge bases tech support websites word sense disambiguation com org 
basic idea works users contribute facts rules specified language 
differs important aspects 
building knowledge base potentially fact rule contributed constitutes parameter validity checked 
number parameters high potentially millions checking poses serious problem 
contrast number system parameters case comparatively smaller potentially manageable 
second knowledge bases provide mechanisms allow users immediately leverage contributed information gain instant gratification effect 
providing mechanisms context knowledge bases quite difficult requires performing inference large number possibly inconsistent varying quality facts 
mechanisms considerably simpler case feedback system parameters immediately affect query results 
building data integration systems manual construction maintenance data integration systems labor intensive error prone 
works reducing labor costs specific tasks construction process schema matching wrapper construction works systematic effort address cost reduction process exception 
mass collaboration seen providing systematic solution problem 
schema matching numerous works conducted schema matching fundamental problem integrating data heterogeneous sources see survey works 
works employ manually crafted rules machine learning techniques limited human interaction discover semantic mappings 
contrast current leverages feedback multitude users find mappings 
knowledge schema matching direction 
autonomic systems related autonomic systems data integration systems mass collaboration scheme exhibit autonomic properties self healing self improving 
key difference autonomic systems traditionally thought achieving properties observing external environment adjusting appropriately 
contrast systems observed external environments multitude users adjusted accordingly 

current cost ownership data integration systems extremely high due need manually build maintain systems 
proposed mass collaboration approach efficiently build data integration systems 
basic idea shift enormous cost producers system consumers spreading large number consumers 
discussed challenges approach outlined preliminary solutions 
described current status research direction discussed relationship areas 
research conducted context aida automatically integrating data project university illinois goal build autonomic data integration systems 

ashish knoblock 
wrapper generation semi structured internet sources 
sigmod record 
avnur hellerstein 
continuous query optimization 
proc 
sigmod 
chen dewitt tian wang 
niagaracq continuous query system internet databases 
proc 
sigmod 
doan domingos halevy 
reconciling schemas disparate data sources learning approach 
proc 
doan mccann building data integration system collaboration approach 
proc 
ijcai workshop information integration web 
garcia molina papakonstantinou quass rajaraman sagiv ullman widom 
tsimmis project integration heterogeneous information sources 
journal intelligent inf 
systems 
haas kossmann wimmers yang 
optimizing queries diverse data sources 
proc 
vldb 
ives florescu friedman levy weld 
adaptive query execution system data integration 
proc 
sigmod 
knoblock minton ambite ashish modi muslea tejada 
modeling web sources information integration 
proc 
nat 
conf 
ai aaai 
kushmerick weld doorenbos 
wrapper induction information extraction 
proc 
int 
joint conf 
ai ijcai 
levy rajaraman ordille 
querying heterogeneous information sources source descriptions 
proc 
vldb 
rahm bernstein 
matching schemas automatically 
vldb journal 
richardson domingos 
building semantic web mass collaboration 
technical report uw tr dept cse univ washington 
richardson domingos 
building large knowledge bases mass collaboration 
technical report uw tr dept cse univ washington 
rosenthal seligman manola 
data integration needs industrial revolution 
proc 
workshop foundations data integration 
