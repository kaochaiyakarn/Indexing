programming karo agents john jules meyer frank de boer van eijk koen wiebe van der hoek utrecht university institute information computing sciences intelligent systems group box tb utrecht netherlands 
mail jj wiebe cs uu nl having defined karo logic specifying intelligent agents amalgam various modal logics reason informational motivational attitudes agents earlier turn question realise agents specified karo framework 
look agent programming languages defined investigate programs languages linked karo logic 
keywords intelligent agents modal logics bdi logic agent oriented programming multi agent systems agent communication 
intelligent agents intelligent agents subject research lately 
field agent technology foundations lies disciplines artificial intelligence mainstream computer science particular software engineering 
agents pieces software hardware display certain degree autonomy 
completely reliant user commands able react environment autonomous manner remarkable take initiative perform actions influence environment certain desirable way goal directed proactive behaviour 
agents situated environment able sense perceive affect environment inhabit 
agents viewed successors traditional knowledge expert systems reason symbolic representations universe discourse knowledge domain render expert level advise problems related domain 
expert systems acted kind artificial consultants take actions affect inhabited environment 
hand programming terms agents called agent oriented programming may viewed successor popular object oriented oo programming paradigm software engineering 
objects oo setting possess kind autonomy data types methods called objects mention autonomy sense displaying initiative proactive 
agent oriented programming notions central communication agents matter just invoking method agent asking questions agents agents may may handle way 
agent notions autonomy reactiveness coined igpl vol 
pp 
oxford university press programming karo agents means notion mental state 
mental state comprises attitudes agent informational ones dealing knowledge belief updating revising new information comes available including reasoning learning capabilities motivational ones dealing wishes desires goals intentions commitments 
order describe attitudes agents may resort logics tailored express notions knowledge belief desires goals modal logic comes traditional tool philosophy analyse notions systematic formal rigorous manner 
modal logic knowledge belief 
epistemic logic epistemic logic logic knowledge belief 
modal logic modal operator indicating formula argument known believed 
stemming philosophy epistemic logic adopted computer scientists ai researchers order describe aspects knowledge appearing distributed knowledge computer systems 
typical axioms kk expresses knowledge true 
honestly truthfully justifiably state know false 
second third axioms express form introspection agent knows knows sense knows knows second axiom knows know third axiom 
course may unrealistic assume intelligent agents humans sense assume case artificial agents virtue finitary nature way 
case life easier resulting logic called isvery elegant relatively simple models enjoys pleasant properties 
weaker form epistemic operator introduced called belief 
sense realistic notion belief true real world 
fact knowledge bases computer science usually belief bases information stored may false due fact world changed simply fact data put erroneously 
belief denoted operator generally assumed satisfy properties bff bb observe introspection properties axiom states agent belief inconsistent 
may wonder knowledge belief modalities interrelated meaningful way 
literature example 
modalities versions karo framework chapter interesting possibilities interaction investigated assume natural see property knowledge implies belief 
course multiple agents things complicated interesting 
start introduce epistemic operators agent resulting multi modal logic called 
models logic inherently simple elegant single agent case cf 

go define knowledge operators involve group agents way 
gives rise notions common distributed group knowledge 
go see agent programming language able cope notions 
modalities knowledge belief modalities may interest context multi agent systems 
comes mind agents may endowed desires motivate perform actions 
philosopher bratman argued capture essence intelligent agents go step intentions included description mental state agent 
intentions viewed wishes committed agent 
important bratman argues coherent behaviour 
example consider agent wishes prepare eggs meal 
suppose desires hard egg scrambled fried disposal egg 
choice boil scramble fry choice determines plans realise wishes important stay committed choice earlier 
example little sense boil egg try scramble scramble boil 
wishes selected committed agent stick realisation switching wish moment realised 
intentions provide bratman calls screen admissibility adopting intentions 
cohen levesque influential subject give formal analysis notion intention 
setting modal logic operators belief goals possibility express performance actions gives logic flavour linear time temporal logic extra modalities 
framework define intentions certain persistent goals 
formalisation related ideas provided bdi model proposed rao georgeff influential agent community 
model branching time temporal logic ctl 
agent behaviour modelled tree structures path tree represents possible life agent 
basic logic containing temporal modalities path point augmented means bdi modalities viz 
belief operator bel desire operator goal intention operator intend 
model able express beliefs desires intentions agent evolve time possible time lines 
formally rao georgeff bdi model formal modal logic kripke style programming karo agents semantics logical calculus 
rao georgeff especially interested relationship bdi modalities 
discuss possible relations belief goal compatibility goal intention compatibility 
expresses agents believe goals obtainable states agents intentions goals 
rao georgeff researchers model inspiration realisation agents 
bdi model rise bdi architectures elements belief bases goals bases plan libraries central cf 

section turn formalisation bdi notions viz 
karo formalism action time knowledge belief primary concept agent notions built 
karo logic karo formalism amalgam dynamic logic epistemic logic augmented additional modal operators order deal motivational aspects agents 
operators knowledge belief action performance holds additional operators ability desires wishes 
assume set atomic actions set atomic propositions 
language bnf grammar 

fi od range 

deal knowledge belief desires kripke structures type rk rb rd non empty set states worlds truth assignment function state rk rb rd accessibility relations interpreting modal operators relation rk assumed equivalence relation relation rb assumed euclidean transitive serial 
assume rb rk 
special constraints assumed relations rd deal actions consider structures type ra ag set possible model state pairs models form state appearing model ra relations encoding behaviour atomic actions function gives set actions agent able model state pair ag function yields set actions agent committed agent agenda model state pair 
actions modelled model state pair transformers emphasize influence mental state complex knowledge belief desires agent just state world 

karo logic order determine formula lis true model state pair write stipulate iff true forp logical connectives interpreted usual 
iff rk iff rb iff rd iff iff com iff ag defined usual dynamic logic induction basic case ra cf 
model state pairs just states 
likewise function lifted sets complex actions 
furthermore syntactic abbreviations serving auxiliary operators dual expressing agent opportunity perform resulting state holds 
opportunity tt agent opportunity action iff successor state relation practical possibility agent practical possibility action result iff able opportunity action result doing action leads state holds kp agent action certain result iff knows practical possibility realisability anp state property realisable iff finite sequence atomic actions agent practical possibility perform result goal goal formula satisfied desired realisable 
possible intend kg agent possibly intends action certain result iff agent action result knows result goals 
order manipulate knowledge belief motivational matters special actions revise commit added language 
assume shown ability operator alternatively defined means second accessibility relation actions way analogous opportunity operator 
agenda assumed closed certain conditions prefixes actions representing initial computations 
details omitted 
abuse language slightly strictly speaking quantification object language 
see proper definition 
fact simplify matters slightly 
stipulate goal explicitly selected desires modelled means additional modal operator 
leave simplicity sake 
programming karo agents nest operators 
commit formed action expression 
proper definition language reader referred 
semantics model state transformers manner viewing accessibility relations associated actions functions 
details refer 
update belief 

update agenda forsome indicating failure commit action 

update agenda com indicating failure action 
formulas agent able action intended longer purpose 
update belief update agenda update agenda functions update agent belief agenda adding removing action respectively 
formal definitions 
revise operator cater revisions due observations communication agents go see 
note revise un commit actions model transforming actions state transforming ones usual interpretation actions dynamic logic 
reason semantics actions defined accessibility relation associated actions model state pairs states 
surprise actions change mental state agent kripke style representation involves just actual state number worlds accessible respect modality modalities concern 
familiar properties epistemic logic see typical properties framework called karo logic include cf 



revise 
revise bff 
revise revise 
commit com 

com com 
com com 
com 
com com com 
com fi com 
com fi com 
com od com od 
specifying agent programs properties says having opportunity sequential composition actions amounts having opportunity doing action having opportunity second 
second states agent sequential composition actions result iff agent actions resulting state practical possibility second result 
third expresses revision results belief 
fourth states revision results inconsistent belief iff agent knows certain 
fifth expresses revisions formulas known equivalent identical results 
sixth asserts agent possibly intends result opportunity commit result committed put agenda 
seventh says agent intends certain purpose unable 
eighth property says agent committed action opportunity result commitment removed 
ninth says agent committed action longer known practically possible knows undo impossible commitment 
tenth property states commitments known agent 
properties commitments complex actions 
instance eleventh says agent committed sequential composition actions committed knows doing action committed second action 
specifying agent programs order program agents may resort special agent oriented programming language 
proposed literature 
concept agent oriented programming introduced shoham agent oriented language agent 
essence agent programming language enables programmer program dynamics mental states 
programs written language mental state transformers 
crux importance language computing power worth programming language turing complete enabling programming partial function 
abstraction level language enables programmer think terms agent concepts mental states informational motivational attitudes knowledge belief desires goals commitments 
agent language apl proposed language called apl possible program mental states intuitive manner 
language combines features imperative logic programming 
commitments changed means called practical reasoning rules 
shown language universal sense existing agent programming languages agent agentspeak congolog embedded natural way preserving certain agent oriented observational behaviour programs 
simplified propositional version language consists core language programming karo agents actions considered earlier karo framework application rules form actions core language non modal formula 
refer guard rule 
interpretation operational meaning application currently believed agent commitment replaced application rule transforms agent agenda modifies commitments goals 
express application practical reasoning rule action apply define terms karo action language apply commit karo logic reason application practical reasoning rule 
instance get immediately validity com apply com expresses guard rule holds agent committed action opportunity apply result agent committed action 
execution phase goals commitments realise karo enforce specify execution actions commitment 
apl interpreter alternates rule application execution goals commitments 
karo course specify commitment executed holds result execution commitments goals just actions core language deal directly karo 
main thing keep mind happens commitments 
involves frame problem issues persistence 
matter importance apl tests occurring programs refer agent beliefs state world atomic actions assumed change belief sets 
general atomic actions model state transformers 
apl special case considered atomic actions change epistemic part model 
sequel write associated accessibility relation ra atomic action relation beliefs model state pairs 
results slightly different semantics standard karo action language shall see 
karo semantics requires order un commit definition succeed terms opportunity ability precondition 
put rule adding condition guard 
require extension apl guards allowed refer beliefs agent 
allowing modal karo formulas form refer beliefs declarative goals agent 
implemented having wish base definition goals deduced 
logic possible express rule applied 
just standard dynamic logic reasoning pertains possible execution actions means modality executed 
operator expression standard dynamic logic asserts action executed 

specifying agent programs precise need definitions 
mental state pair consisting action formula representing agent goal belief bases respectively 
define transition system indicates mental states manipulated transformed means execution actions follows denote goal base empty transition system axioms ra 
fi 
fi 
od 
od od 
rule means transition system define notion computation sequence 
intuitively computation sequence starting mental state collects atomic actions tests agent performs computing action belief 
formally cs iff 
computation sequence may finite infinite 
computation sequence may contain tests define set proper computation sequence cs set computation sequences tests omitted 
define actions independent belief denoted non empty prefixes proper computation sequences starting configuration belief disjoint pref cs pref cs holds com com formula states agent performs action action committed agent remains committed commitments persistent respect independent actions 
example obviously atomic actions arbitrary wehavethat com com 
hand fi com fi com reason consider proper computation sequences case non proper computation sequences pref cs pref cs fi pref cs pref cs fi 
hand basic action performed helps fulfil certain commitment lead reduction commitment note syntactic notion action independence 
prefer notion semantical 
uses notion possible commitment means syntactically different action meaning 
programming karo agents sense remainder having done remains commitment com true com com programming logic proposed subset language apl practical reasoning rules fact dealing execution goals rule application 
logic dynamic logic 
main result correlates logical expression beliefs held agent terminating execution apl program goal operational semantics program similar way assertion 
treats execution step complete terminating execution 
fact coincide final steps 
case commitment part assertion trivial com true 
subsection note language apl agent programming languages way expressing declarative goals goals tobe 
tried remedy language called goal goal oriented agent language 
fact language logic provided temporal unity logic reason programs language inspired ideas expounded section 
multi agent systems agent communication languages order describe realise multi agent systems issues come communication agents system 
program multi agent systems van eijk proposed language dub agent communication programming language program communications agents means communicative actions kqml fipa acl manner 
framework covers informational motivational communication sense possible request tell factual information request response perform actions may considered procedural goals receiving agent 
looks multi agent version single agent programming means apl seen 
considering observations adjusting agent beliefs communications requesting perform procedural goals actions obviously related apl practical reasoning rules modifying agent agenda intentions 
setting firstly actions ask communication primitives request tell information 
semantics case match ask tell agents information prepared tell prepared receive lead transfer information 
rigorous treatment formal operational semantics refer 
informational communication primitives consider actions type request requesting agent perform action 
viewed motivational communication primitives involve requests agents realistically context autonomous agents ask kind commitment action put actions agenda 
course receiving agent accept request expressed 
accept 
requester receiving agent agree result handshake expressed admittedly loosely karo framework request doi accept doi commit consequence holds request doi accept expressing case request accepted holds agent committed doing sense written agenda 
remarked agent may choose select perform handle request may depends agent program beliefs goals cf 

indicated agents specified karo logic realised means agent programming languages particular languages apl 
appears constructs languages closely related various operators karo framework describe agent mentally attitudes 
road advocated agent programming languages distinct karo specification language 
go road try execute logical specifications agents directly 
approach explored fisher 
seen initial steps direct execution specifications part full karo language shown amenable techniques applied 
setting able consider substantially larger part karo language 
bratman intentions plans practical reason harvard university press massachusetts 
cohen levesque intention choice commitment artificial intelligence pp 

dixon fisher hustadt 
ch 
meyer schmidt van der hoek verification karo agent theory appear 
van eijk agent communication programming languages phd 
thesis utrecht university appear 
van eijk de boer van der hoek 
ch 
meyer information passing belief revision multi agent systems intelligent agents agent theories architectures languages mller singh rao eds lnai springer berlin pp 

obviously calls multi agent version karo agent indexed modal operators possibility express actor action means doi construct agent language cf 

precise needs parallel operator action language formal treatment synchronisation 
done means formal transition system 
possible objection representation request stored directly real agenda committed fully instance kind weak agenda list requested actions agent decide put real agenda just dropped 
interesting issue handled adaption karo framework pursue subtlety 
programming karo agents van eijk de boer van der hoek 
ch 
meyer operational semantics agent communication languages issues agent communication proc 
workshop agent communication languages dignum chaib draa eds springer heidelberg appear 
fagin halpern moses vardi reasoning knowledge cambridge massachusetts 
finin mckay overview kqml knowledge query manipulation language techn 
report maryland cs dept 
foundation intelligent physical agents fipa specification part agent communication language 
harel dynamic logic gabbay guenthner eds handbook philosophical logic vol 
ii reidel dordrecht boston pp 

agent programming languages phd 
thesis utrecht university appear 
de boer van der hoek 
ch 
meyer agent programming apl int 
autonomous agents multi agent systems pp 
de boer van der hoek 
ch 
meyer agent programming declarative goals proc 
atal appear 
de boer van der hoek 
ch 
meyer programming logic agent programming language apl proc 
st goddard workshop formal approaches agent systems appear 
van der hoek systems knowledge belief journal logic computation pp 

van der hoek van linder 
ch 
meyer integrated modal approach rational agents wooldridge rao eds foundations rational agency applied logic series kluwer dordrecht pp 

van der hoek 
ch 
meyer van formalizing potential agents karo framework revisited formalizing dynamics information kaufmann pauly eds csli publications csli lect 
notes stanford pp 

jennings wooldridge agent technology foundations applications markets springer berlin 
kraus lehmann knowledge belief time ed proceedings th int 
colloquium automata languages programming rennes lncs springer berlin 
van linder modal logics rational agents phd 
thesis utrecht university 
van linder van der hoek 
ch 
meyer actions change mind belief revision agent oriented setting knowledge belief philosophy artificial intelligence wansing eds akademie verlag berlin pp 

van linder van der hoek 
ch 
meyer seeing believing hearing jumping journal logic language information pp 


ch 
meyer van der hoek epistemic logic ai computer science cambridge tracts theoretical computer science cambridge university press 

ch 
meyer van der hoek van linder logical approach dynamics commitments artificial intelligence 
rao georgeff modeling rational agents bdi architecture proceedings second international conference principles knowledge representation reasoning kr allen fikes sandewall eds morgan kaufmann pp 

shoham agent oriented programming artificial intelligence pp 

logic objective knowledge rational belief van eijck ed logics ai proceedings jelia lncs springer pp 

far know epistemic logic uncertainty phd thesis utrecht university utrecht 
wooldridge jennings eds intelligent agents springer berlin 
received september 
