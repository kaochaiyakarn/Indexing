
practical impact group communication theory andr schiper ecole polytechnique rale de lausanne epfl lausanne switzerland andre schiper epfl ch group communication nowadays established topic distributed computing 
emerged years topic strong synergy theory practice group communication highly relevant building distributed systems theoretical importance difficult problems addresses 
presents inevitably subjective retrospective main milestones led current understanding group communication focus theoretical contributions practical relevance 
open issues discussed 
theory 
context group communication theoretical contributions defined contributions abstractions paradigms contributions system models problem specifications course contributions algorithms 
practical importance context group communication 
mention efficiency clean structure architecture system flexibility system correctness clear understanding properties system 
efficiency clearly important inefficient group communication system 
algorithms paradigms may contribute efficiency new algorithm application new paradigm may increase efficiency 
abstractions algorithms contribute clean flexible architecture system 
consider example atomic broadcast 
algorithm solves atomic broadcast reduction consensus 
identifies consensus key abstraction directly influences architecture group communication system introducing consensus component 
system architecture reflects key algorithmic abstractions chance flexible adaptable changing environment 
correctness obviously practical importance related specifications system supposed system models assumptions system algorithms proven meet specification system model 
clear understanding properties system seen subset correctness 
system deployed important know conditions system deliver services supposed provide 
requires understanding specifications system system models algorithms theoretical results flp impossibility result result weakest failure detector solving consensus 
summarize retrospective addresses practical impact group communication theory focusing key contributions abstractions algorithms paradigms schiper 
eds directions dc lncs pp 

springer verlag berlin heidelberg andr schiper specifications system models theoretical results 
contributions grouped periods early years maturity confusion start retrospective year publication attempts propose completely software approach fault tolerance 
period publication flp impossibility result journal acm 
year marks early years period publication isis 
period publication failure detectors important step history group communication 
maturity confusion period starts publication partitionable group membership 
give brief overview main contributions period 
context abstractions specifications interesting note fundamental abstractions identified interactive consistency consensus atomic broadcast 
focus time byzantine failures shows complexity solving problems crash failures underestimated 
early focus byzantine failures major impact problem specification led consider non uniform specifications interactive consistency problem 
state machine paradigm identified period implementation discussed various system models crashes context crash failures context byzantine failures 
rotating coordinator paradigm mentioned known see section 
strong system models considered period synchronous round model fail model corresponds asynchronous model perfect failure detection 
models randomization solving consensus proposed 
flp impossibility result stating deterministic algorithm solving consensus asynchronous system single process may crash ends initial period 
result move focus byzantine failures crash failures 
early years abstractions specifications process groups virtual synchrony group membership appear period 
notion process group proposed initially operation systems chronology published papers conference journal version differs chronology corresponding technical reports 
interested authors send historical tr add extended version 

practical impact group communication theory context system 
cheriton zwaenepoel mention operations join group leave group send message group interesting notice mentions publish subscribe paradigm 
concept virtual synchrony introduced birman joseph specification encompasses atomic broadcast causal broadcast group broadcast 
give precise specification group communication primitives stresses benefit abstractions develop fault tolerant software argue approach building distributed fault tolerant software straightforward flexible yield correct solutions alternative approaches 
group membership abstraction specification appears papers 
papers give specifications called today primary partition group membership 
focusses processor membership members group processors asynchronous system model advocates group membership mean provide consistent failure notification 
specification shown flawed see section 
discusses processor process membership synchronous system model 
process membership information obtained processor membership 
goal group membership solve continuous leader election problem 
paradigms mentioned rotating coordinator paradigm period 
paradigm really known early years period papers paradigm solve consensus 
rotating coordinator paradigm coordinator role moves process process predetermined order suspected 
processes suspected coordinator role returns coordinator process coordinator 
chang uses rotating token implement atomic broadcast mentioned context rotating coordinator paradigm 
token passing related failure suspicions correspond definition 
system models synchronous round model fail model mentioned section constraining practical point view allow wrong failure suspicions 
practical point view model allows system mistakenly suspect correct processes 
system models proposed period partially synchronous model failure detector model 
partially synchronous model considers bounds message transmission delay relative speed processes 
variants model bounds exist known bounds known hold unknown point 
second variant usually considered variant appealing practical point view 
andr schiper failure detector model seen refinement partially synchronous model 
failure detector defined completeness property accuracy property 
completeness property defines behaviour failure detectors respect faulty processes processes crash 
accuracy property defines behavior failure detectors respect correct processes 
algorithms group communication algorithms published period impossible mention 
chronological order papers mention related group membership abstraction 
defines dynamic voting dynamic quorums second view quorums 
papers introduce flavor primary partition group membership 
site maintains information allows site determine partition 
authors write site maintains set called view set sites assumes communicate 
associated view view id sites said view views identical views ids 
read write quorums views 
papers show algorithmic benefit dynamic membership information 
clear see section 
benefit group communication abstractions discussed birman joseph authors algorithms implement abstractions 
presents algorithms causal broadcast piggybacking message messages causal past atomic broadcast idea skeen message sequence number sn computed messages delivered order sequence number 
discusses global broadcast complicated algorithm 
lacks rigorous specifications group communication primitives address liveness constitutes major milestone history group communication 
consensus algorithms key algorithmic contributions period consensus algorithm partially synchronous model rotating coordinator paradigm paxos algorithm leader election consensus algorithms asynchronous system augmented failure detectors specifically consensus algorithm failure detector rotating coordinator paradigm 
algorithms common separation correctness safety liveness properties safety properties hold matter asynchronously system behaves 
termination liveness requires additional condition 
interesting read lamport comments paxos algorithm submitted publication published 
initially understood reviewers mildly interesting important currently open question efficient solve consensus rotating coordinator leader election 
key contribution atomic broadcast algorithm chandra toueg reduction consensus atomic broadcast algorithm inherits properties consensus algorithm safety holds matter asynchronous 
practical impact group communication theory system algorithm shows practical importance consensus 
atomic broadcast algorithms 
summary summarize period notion group membership appears implicitly explicitly partially synchronous failure detector system models defined rotating coordinator paradigm popular 
terms algorithms main contributions consensus algorithms safety properties hold system behaves completely asynchronously atomic broadcast algorithm solved reduction consensus 
maturity confusion contributions establish theoretical basis group communication lead substantial progress field years 
new topics continue emerge period topics serve catalyst research theoretical foundations 
maturity elegance power failure detector model influenced large number researchers generated important literature 
important results established 
abstractions specifications system models 
context abstractions specifications hadzilacos toueg played important role contributed part motivating subsequent authors pay attention careful specification group communication 
new group communication primitive called generic broadcast takes message semantics account proposed 
primitive parametrized conflict relation ensures conflicting messages delivered order processes nonconflicting messages need ordered 
context system models failure detector model initially defined model processes recover crash extended model process recovery 
introduces notion process process eventually permanently bad process process eventually permanently unstable permanently crashing recovering 
introduces failure detector su epoch numbers solving consensus crash recovery model 
increasing maturity field witnessed comprehensive survey group communication specifications chockler keidar 
consensus survey malek may mentioned written system diagnosis perspective distributed computing point view 
theoretical results 
important theoretical results established period 
chandra hadzilacos toueg shows equivalently isthe weakest failure detector allows solve consensus asynchronous system 
andr schiper practical importance system uses consensus algorithm solves consensus maximum possible runs 
result impossibility solving group membership problem asynchronous system 
claimed group membership problem subject flp impossibility result model allowed processes crash kill processes 
works worth mentioning 
malkhi reiter byzantine quorums significantly extended previous results renewed research quorum systems 
fekete lynch shvartsman authors formally specify prove view oriented group communication service proofs subsequently checked theorem prover 
algorithms 
algorithms published period consensus algorithms failure detectors algorithms solving agreement problems reduction consensus atomic commitment atomic multicast group membership 
important algorithm mention probably algorithm solving consensus static system model process recovery failure detector su 
confusion despite maturity domain group communication far solved problem 
contributions including theoretical contributions needed order clarify controversial issues context group membership problem 
mention catocs controversy causally totally ordered communication support generated lots discussions years ago 
catocs controversy 
cheriton skeen expressed criticisms group communication build distributed applications 
criticisms led called catocs controversy summarized follows group communication guarantee total ordering operations correspond groups messages transactions efficiency gain state level techniques semantic ordering expressed group communication ensure guarantees 
criticisms group communication brought useful distributed computing 
incorrect 
group communication define new abstractions atomic broadcast 
abstractions important development computer science consists identifying new abstractions contribute understanding field 
abstractions allow development complex applications decrease risk errors 
abstractions lead inefficient solutions 
old story early implementation group communication known slow longer interesting note fischer writes survey considerable literature consensus problem developed past years give informal overview major theoretical results area 
don know said today 
early seventies people claiming possible write programs efficiently assembly languages 
don know people eager program modern risc processor assembler language level 

practical impact group communication theory case current lan technology 
example mbits ethernet atomic broadcast extremely fast atomic broadcasts second 
true group communication guarantee total ordering operations correspond groups messages 
prevent providing higher level ordering guarantees group communication example results showing benefit atomic broadcast implement transactions replicated database atomic broadcast greatly simplifies solution leading better performances standard database replication techniques 
false claim semantic ordering constraints expressed group communications 
generic broadcast example message ordering communication primitive uses message semantics 
comment absence guarantees available group communication interesting 
true absence toend guarantees lead problems 
example shown absence guarantees allow implement safe transactions replicated database atomic broadcast 
guarantees added group communication primitives absence guarantees advantage 
example exploited define new safety property transactions called group safety weaker safety efficient lazy replication providing stronger guarantees 
group membership issue 
group membership issue different nature catocs controversy 
contributions definitely needed clarify important issues 
year corresponds publication partitionable membership 
group membership defined maintaining current configuration set consensus set machines connected activation membership protocol 
definition leaves questions open years fundamental questions related partitionable membership adequately addressed 
example chockler give specification context partitionable membership problem failure detector behaves stable component exists view process installs view 
looks detection global stable property 
partitionable group membership problem agreement problem correspond detection stable property 
specification partitionable membership problem issue role abstraction unclear 
convincing examples needed 
isis processor membership abstraction clear limitations single group processors member group progress majority partition network limitation left relying multiple process groups group set replicated servers 
partitionable membership needed solving agreement problems network partition 
comments may suggest simpler primary partition membership problem fully understood 
unfortunately case 
specifications published satisfactory shown current specifications andr schiper partitionable primary partition admit trivial solutions allow undesirable behavior 
question algorithmic role primary partition membership problem requires clarification 
role clearly identified years ago see section 
role mentioned nowadays failure detection notification crash process 
failure notification need consistent able solve agreement problems consensus atomic broadcast known failure detector approach 
group membership solving atomic broadcast overkill 
atomic broadcast require consistent failure notification provided group membership wonder group membership solved top atomic broadcast opposite done currently implementations 
group membership allows system discard messages output buffers 
having mechanism solving problems failure notification discarding messages output buffers solution 
issue needs better addressed specification dynamic group communication group communication environment processes added removed computation typical example view synchronous multicast primitive context primary partition membership 
primitive appears close reliable broadcast 
specifications far away 
holds static vs 
dynamic atomic broadcast 
satisfactory 
results years research contributed understanding issues related group communication 
need ensure safety liveness context agreement problems consensus atomic broadcast practical importance consensus recognized 
group communication solved problem 
needed issues come convincing specifications membership problem primary partition partitionable better specifications dynamic group communication 
algorithmic benefit membership abstraction needs better understood 
strong contributions needed build solid grounds 
group communication better accepted outside community 
el abbadi toueg 
availability partitioned replicated databases 
acm sigact sigmod symp 
prin 
database systems pages march 
see acm trans 
database systems june 
aguilera chen toueg 
failure detection consensus crash recovery model 
proceedings th international symposium distributed computing lncs pages 
springer september 
addresses specification static group communication primitives 

practical impact group communication theory amir dolev kramer malki 
membership algorithms multicast communication groups 
th intl 
workshop distributed algorithms proceedings pages november 
charron bost toueg 
formal specification group membership services 
technical report department computer science cornell university august 
malek 
consensus problem fault tolerant computing 
acm computing surveys june 
ben 
advantage free choice completely asynchronous agreement protocols 
proc 
nd annual acm symposium principles distributed computing pages 
birman joseph 
reliable communication presence failures 
acm trans 
computer systems february 
birman joseph 
exploiting virtual synchrony distributed systems 
th ann 
symp 
operating systems principles pages 
acm nov 
birman joseph anda 

implementing fault tolerant distributed objects 
ieee trans 
software engineering june 
chandra hadzilacos toueg 
weakest failure detector solving consensus 
journal acm 
chandra toueg 
unreliable failure detectors asynchronous systems 
proc 
th annual acm symposium principles distributed computing pages 
see journal acm 
tushar deepak chandra hadzilacos sam toueg charron bost 
impossibility group membership 
proc 
th acm symposium principles distributed computing pages philadelphia pennsylvania usa may 

chang 
simplifying distributed database systems design broadcast network 
proc 
acm sigmod int 
conference management data pages june 
chang 
reliable broadcast protocols 
acm trans 
computer systems august 
charron bost schiper 
broadcasting messages fault tolerant distributed systems benefit handling input triggered output triggered suspicions differently 
st ieee symp 
reliable distributed systems srds pages osaka japan october 
cheriton skeen 
understanding limitations causally totally ordered communications 
th acm symp 
operating systems principles pages dec 
cheriton zwaenepoel 
distributed process groups kernel 
acm trans 
computer systems may 
chockler keidar 
group communication specifications comprehensive study 
acm computing surveys december 
cristian strong dolev 
atomic broadcast simple message diffusion byzantine agreement 
ieee th int symp fault tolerant computing ftcs pages june 
cristian 
reaching agreement processor group membership synchronous distributed systems 
distributed computing april 
burkhard 
consistency recovery control replicated files 
proceedings th symposium operating systems principles pages 
schiper urban 
totally ordered broadcast comprehensive survey 
tr dsc epfl communication systems departement october 
dwork lynch stockmeyer 
consensus presence partial synchrony 
journal acm april 
andr schiper fekete lynch shvartsman 
specifying group communication service 
acm trans 
computer systems may 
fischer 
consensus problem unreliable distributed systems brief survey 
int 
conf 
foundations computation theory fct pages 
fischer lynch paterson 
impossibility distributed consensus faulty process 
journal acm april 
hadzilacos toueg 
fault tolerant broadcasts related problems 
technical report department computer science cornell university may 
kemme 
database replication clusters workstations 
phd thesis eth zurich switzerland 
number 
lamport 
web home page 
lamport org 
lamport 
time clocks ordering events distributed system 
comm 
acm july 
lamport 
time timeout fault tolerant distributed systems 
acm trans 
progr 
languages syst april 
lamport 
part time parliament 
technical report digital src september 
see acm trans 
computer systems may 
lamport shostak pease 
byzantine generals problem 
acm trans 
progr 
languages syst july 
malkhi reiter 
byzantine quorum systems 
distributed computing 
melliar smith moser agrawala 
membership algorithms asynchronous distributed systems 
ieee th intl 
conf 
distributed computing systems pages may 
pease shostak lamport 
reaching agreement presence faults 
journal acm 
pedone 
database state machine group communication issues 
phd thesis cole polytechnique rale de lausanne switzerland december 
number 
pedone schiper 
generic broadcast 
th 
intl 
symposium distributed computing disc pages 
springer verlag lncs september 
rabin 
randomized byzantine generals 
proc 
th annual acm symposium foundations computer science pages 
reischuk 
new solution byzantine general problem 
technical report rj ibm research laboratory november 
ricciardi birman 
process groups implement failure detection asynchronous environments 
proc 
th acm symposium principles distributed computing pages august 
schneider 
synchronization distributed programs 
acm trans 
progr 
languages syst april 
schlichting schneider 
fail processors approach designing faulttolerant computing systems 
acm trans 
computer systems august 

sift software fault tolerance 
pages 
lamport goldberg green levitt melliar smith weinstock 
sift design analysis fault tolerant computer aircraft control 
proc 
ieee 

group communications database replication techniques issues performance 
phd thesis cole polytechnique rale de lausanne switzerland 
number 
