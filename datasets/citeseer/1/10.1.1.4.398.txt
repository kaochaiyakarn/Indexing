discouraging free riding peer peer cpu sharing grid andrade francisco departamento de sistemas computa universidade federal de grande grande brazil dsc edu br grid computing excited promise access huge amounts resources distributed globe 
largely adopted solutions automatically assembling grids limits scale today grids 
argue due overwhelming complexity proposed economy solutions 
peer peer grids emerged complex alternative 
currently deploying ourgrid peerto peer grid 
ourgrid cpu sharing grid targets bag tasks applications parallel applications tasks independent 
order ease system deployment ourgrid lightweight autonomous reputation scheme 
free riding important issue peer peer system 
aim show ourgrid reputation system successfully discourages free riding making peer interest collaborate peerto peer community 
show steps 
analyze conditions reputation scheme discourage free riding cpu sharing grid 
second show ourgrid reputation scheme satisfies conditions presence malicious peers 
distributed mechanisms discouraging free riding ourgrid reputation scheme achieves requiring shared cryptographic infrastructure specialized storage 
grid computing emerged possibility large federation resources execution platform parallel applications 
building federation miranda hp labs bristol hpl hp com cirne assembling grid simple task 
widely adopted solutions negotiation resource consumers providers automatic 
current lack widely adopted solutions probably due complexity implementing proposed solutions rely currency economies solving general grid assembly problem 
scenario consumer negotiate arbitrarily complex provision resources pay currency 
deploy solution scenario necessary deploy infrastructure secure cash banking service auditing 
argue need currently greatest obstacle building grid economy 
peer peer grids proposed alternatives currency solutions :10.1.1.12.5484:10.1.1.1.5700
solve general grid assembly problem 
take advantage ease implementation peer topeer systems get resource sharing networks production today 
currently deploying peer peer grid called ourgrid :10.1.1.12.5484
ourgrid solves grid assembly problem users bag tasks applications 
parallel applications tasks independent parameter sweep massive search monte carlo simulation 
peer peer resource sharing systems may possible users free ride consuming resources donated donating 
experience peer peer systems shows absence incentives donation large proportion peers consume resources system 
free riding concern decreases utility system potentially point system collapse 
order avoid ourgrid designed explicitly provide incentive peers collaborate system 
provide incentive ourgrid uses peer peer autonomous reputation scheme called network favors 
network favors donating resource favor peer autonomously prioritizes peers reciprocated favors past 
community rely common knowledge effective 
necessary store global reputations 
show ourgrid local reputations interactions directly involving peer stores sufficient effective incentive scheme 
autonomous behavior components system prioritizes peers higher reputations motivating sharing 
introducing reputation scheme reduce system utilization governs peer receives contested resource resource donated 
peers decide share resources result incentive creates increase system utilization 
analysis relies fact ourgrid peers expected eager consumers 
consumer eager gains positive benefit resources obtains 
believe reasonable assume bag tasks application users eager consumers number reasons 
desire cpu sharing grid suggests large need computational resources 
bag tasks applications usually involve significant number tasks extra resources increase makespan task replication 
cpu critical resource bag tasks applications 
users recompile applications architectures usually available necessary 
section analyze conditions reputation scheme discourages free riding eager consumers 
section show ourgrid reputation scheme satisfies conditions presence malicious peers 
section compares approach related section gives directions 
resource sharing eager consumers section prove general analytical result resource sharing eager consumers community mechanism necessarily mechanism ourgrid identify collaborators sufficient accuracy known collaborators get priority access resources pays collaborator 
consequence peers change strategy collaborating interest community evolves state free riders 
number peers community necessarily assume large 
allow peers change strategy number free riders vary time 
number peers free riders time peers collaborators time donating spare resources community 
peers eager consumers peer donated resource gains positive utility result matter large quantity resources simultaneously consuming sources 
reasonable assume utility lost donor result donating resource fixed multiple utility gained recipient 
peers collaborators 
community contains free riders resources donated incentive peer remain community 
suppose time error probability time collaborator spare resource donate resource free rider 
may happen collaborator distinguish collaborator donate resources free riders requesting resources time collaborators time define 
utility gained recipient particular resource donation total expected utility gain set collaborators result donation time donation takes place donor collaborator free riders donate resources total expected utility gain set free riders arising donation col expected utility gain average collaborator similarly free riders expected utility gain average free rider better collaborator provided happens 
hand better free rider 
case collaborators free riders expected utility 
assume peers gradually change strategies free riding interest expected utility new strategy greater expected utility old strategy 
time interest free riding peers collaborators free riding eventually die 
ourgrid network favors ourgrid system currently deploying solution problem automatic grid assembly users bag tasks applications :10.1.1.12.5484
ourgrid users get access idle processors community peerto peer fashion 
assembled processing power community forms grid 
ourgrid idle processors explicitly advertised requests propagated system peers possible 
messages typically alternative routes reach peers difficult malicious peer block requests 
peers idle processors allocate processors requesting peer sending result processing directly requesting peer 
ourgrid uses autonomous reputation scheme called network favors help peers idle processors determine requesting peer donate 
key motivation design scheme particularly lightweight easy implement real systems 
central idea network favors users greater net contributors processing power get higher priority access spare processing power community 
principle acts guide available resources users currently requesting incentive collaboration 
network favors allocating processor peer requests favor value favor value done requesting peer 
peer keeps local record total value favors received known peer past 
time favor receives updates appropriate number 
peer calculates local reputation peer numbers peer favors received high reputation 
peer uses current reputations decide offer favor arbitrate requester 
resource contention requesters higher reputation get priority 
expect scheme scale gracefully peer needs keep track peers currently nonzero local reputation needs store small amount information 
autonomous reputation scheme uses information interactions directly involve peer assessing reputation reduces options malicious peers distort reputations 
malicious strategies lying behaviour third parties applied 
remaining possibilities malicious peer attack reputation system change identity 
peer peer networks usually easy peer change identity leaving community coming back supposed newcomer 
method peer bad reputation easily start afresh newcomer reputation 
cryptographic guarantees peer identity generally little 
want address imposing stringent admission controls barriers growth ourgrid possible 
calculating local reputation peer network favors peer calculates ra local reputation peer just pieces information value favors received value favors received total value processing power donated peer peer past history system 
want ra function want value function increase favor decrease favor zero interacted simplest function satisfies conditions ra previous shown simulations simple autonomous reputation mechanism emergent behaviour community peers contribute consume prioritized :10.1.1.12.5484
consider problem malicious identity changing 
see equation reputation function system vulnerable identity changing attacks 
simple effective solution problem inspired masuda experiments online auction markets require value ra greater equal zero zero newcomers 
gives slightly sophisticated function ra max shall see function grid community robust id changing 
non negative reputation function possible avoid prioritizing malicious id changing peers collaborating peers consumed resources contributed 
new reputation function collaborator distinguish malicious id changing peer resources collaborating peer donated resources past consumed amount resources distinguish types peers introduce term reputation function ra call history term reflects peer history donations peer avoid creating difference reputations peers newcomers high costly newcomer overcome sublinear function history term ra example ra max log ra max functions relatively large difference history term peers donated peers donated little difference peers long histories donations corresponds intuition relative values people attach favors varies amount past interaction person granting favors 
history terms take large positive values large values possible identify collaborator collaborator consumed resources donated provided donated past 
order calculate ra assume reliable information value favors received provided specifically assume measure value favor done ii verify done valid data returned bogus 
assumptions stronger assumptions decentralized reputation schemes 
ensure integrity information replication verify valid value reported detailed study approach applied voluntary computing called credibility fault tolerance 
scheme peer replicates task different service providers predetermined number returned results equal 
small probe tasks periodically verify resource correctness 
acting correctly gains credibility consumer view consumer gains confidence results 
ourgrid intend implement credibility mechanism check sabotage verify peers informed accounting 
note implementing sabotage tolerance returned results necessary resource sharing system 
possible attack impersonation peers high reputation 
addressed pairwise public key cryptography requiring shared cryptographic infrastructure certification hierarchy systemwide revocation processes 
peer interact peer interacted picks new public key private key pair large key space sends public key new peer 
peers check identity requester sending challenge encoded appropriate key 
important security issue involve distortion reputation system potential grid launch denial service attacks donating peers service 
ourgrid addressed ensuring done behalf requesting peer carried sandbox restricted access underlying machine network access 
evaluating network favors section describes results simulations show autonomous reputation scheme ourgrid effective distinguishing collaborators free riders promotes equitable resource sharing 
simulated effects reputation functions subsection 
results reputation functions history terms equations similar report function equation 
start showing simplest reputation function equation amount resources donated fixed identity free riders small 
introduce case free rider changes identity leaving community returning newcomer 
scenario simplest reputation function differentiate collaborators free riders 
show non negative reputation schemes successfully deal problem 
show reputation schemes history terms enhanced performance 
simulation scenario community peers time line divided turns share resources 
turn peers may consumer state probability 
peers collaborators free riders 
consumer state collaborator resources peer chosen consumers current turn local reputation 
free riders hand donate 
consuming go idle 
recall peer resources time donate free rider probability 
probability estimated measuring proportion available resources consumed free riders simulation 
shows measurement simulation peer community 
wide variation measured values turn turn value averaged mean epsilon turns mean epsilon turns rho rho rho turns different values turns different values 
measurement different values peers ra reputation function turns graph 
peers simple balance favors exchanged peers equation reputation functions 
time advances community identifies free riders probability free riders getting resources small 
note network favors require time identify free riders dynamic resource sharing network newcomers file distribution system bittorrent 
incentives cooperation bit torrent expect cpu sharing grids volatile 
figures show behaviour reputation system varying values parameters affect time system takes reach steady state free riders identified small early values state reached re mean epsilon turns turns 
measurement peer community different values free riders id peers ra reputation function spectively 
time needed reach steady state proportional 
happens community distinguishes collaborator high values indicate collaborators donate frequently 
words closer similar behaviour collaborators free riders longer takes community determine peer collaborator 
hand larger values early values larger collaborator resource peer collaborator previously interactions probability peer free rider large large value appear significantly affect time system takes identify free riders 
second step introduce type peer system id 
type peer free rider assumes new identity turn making impossible community keep track consumption 
show changing free riders stable id community varying id alters emergent behaviour system 
seen capacity distinguish free riders community greatly decreases close means probability donating peer selects free rider recipient close probability peer selected random free rider reputation information gives significant help donating peer distinguishing id collaborators 
shows scenario figures community collaborators non negative reputation function history term precise reputation functions equations 
illustrates non negative reputation function improves robustness community behaviour 
adding history term log improves ability collaborators identify seen 
interesting effect non negative reputations significantly affect behaviour communities kind reputation 
believe happens contrast systems positive negative reputations free riders reputation higher collaborator collaborators easily differentiated 
takes provider donate free riders turn provider identifies collaborator consumers 
condition easily satisfied value 
simulations assumed peers change strategies collaborator free rider free rider collaborator 
change strategies value fixed vary number free riders 
scenarios simulated non negative reputation functions measured value remained turn fixed 
analysis section implies case free riders lower expected utility collaborators turn 
grid lightweight peer preempt guest task moment expect close zero certainly smaller 
higher numbers turns advantage collaborators values greater 
consider happens reputation functions peers change strategies maximize expected utility 
take slightly longer system identify peer collaborator peer originally free rider 
allowing time turns system expect remain subsequent turns holds turns values simulations fixed follows section free riding dies 
verified simulations amount resources collaborator receives divided amount denoted approximately 
figures illustrate communities amount peer uniform distribution 
cost donating resource smaller utility gained receiving 
interest peers donate largest amount resources 
mean epsilon turns mean epsilon turns turns ra max turns ra max log 
measurement peer communities different values 
community peers simple non negative reputation function 
second non negative reputation function history term log achieving better performance 
related peer peer grids mentioned efforts development peer peer grids alternative complexity currency grids 
condor projects proposed peer peer grids considered problem providing incentives resource donation relying solely altruism system participants 
chun propose architecture secure resource peering ticket exchange 
architecture assumes shared cryptographic number collaborators number collaborators line fr consumed donated ra line fr consumed donated ra max 
measured collaborators peer communities turns 
peers positive negative reputation function 
simple non negative reputation function 
approaches 
infrastructure establishment relations trust peers allow resource access 
intend ourgrid provide solution lighter simpler deploy context bag tasks applications :10.1.1.12.5484
believe simplicity key property enabling wide adoption 
peer peer reputation schemes reputation scheme peer peer system way recording information past behaviour peers guide peers 
information may derived objective facts subjective impressions recorded peers combination 
number collaborators line fr consumed donated 
measured collaborators peer community turns 
peers nonnegative reputation function log history term 
decentralized peer peer systems sense distributed reputation schemes reputation information distributed different parts system 
example prep peer stores information interactions peers peer stores local reputation values addition random peers store global values derived multiple local values 
distributed reputation scheme peer retrieve reputation information system concerning peer retrieval protocol 
challenging issue retrieval protocol deal guaranteeing information gathered peers reliable malicious peers may tamper information store 
assure reliability information prep relies voting gathering opinions peer heuristics find clusters potential malicious voters shared cryptographic infrastructure verify identities peers involved transaction 
alternatively replicated mother peers compute store global reputation value peer 
mother peers find peers keep track peers need information distributed hash table 
contrast ourgrid circumvent need provide guarantees aggregating global reputation value peer 
peers reputation information involving peer peer interactions participated 
information stored locally peer quick retrieve 
reputation peer general different eyes different peers past interactions peer attempt create global assessment 
need mechanisms ensure integrity information received peers interactions third parties shared cryptographic infrastructure specialized storage infrastructure 
allows reputation scheme lightweight 
authors free haven peer peer publishing system considered idea aggregating global reputations rejected leaving opportunity malicious newcomers 
seen ourgrid context local reputations give sufficient protection 
shown autonomous reputation scheme sufficient promote equitable sharing resources ourgrid peer peer community eager consumers 
particular discourage free riding successfully deal free riders change identity try fool system 
scheme lightweight require centralized storage shared cryptographic infrastructure 
implementation issue identified potentially imposing difficulties autonomous reputation schemes sabotage tolerance fact issue resource sharing system 
analysis assumed system exhibited eager consumption 
suspect autonomous reputation schemes may resource contention strictly weaker condition eager consumption 
contention levels peers offering popular services high may incentive peers build reputation limit amount resources profitably consume 
intend investigate circumstances scheme remains effective 
investigated calculate local reputation autonomous reputation scheme 
shown non negative reputation functions system robust malicious identity changing adding sublinear history term improve system ability marginalize free riders 
research needed role reputation function formation long term trust relationships peers 
issue investigation local subgroups peers peers priority access resources owned subgroup 
subgroups may pool reputation information 
includes finishing deployment ourgrid grid called pau comprising machines brazilian cities expected complete april 
partially funded cnpq brazil 
abramson buyya giddy 
computational economy grid computing implementation nimrod resource broker 
generation computer systems fgcs journal 
adar huberman 
free riding gnutella 
monday 
www firstmonday dk 
andrade cirne :10.1.1.12.5484
grid approach easily assemble grids equitable resource sharing 
proceedings th workshop job scheduling strategies parallel processing june 
butt zhang hu 
self organizing flock 
proceedings supercomputing november 
buyya abramson giddy 
economy driven resource management architecture computational power grids 
international conference parallel distributed processing techniques applications 
citeseer nj nec com html 
buyya 
compute power market market oriented grid 
ieee acm international symposium cluster computing grid ccgrid beijing china 
ieee computer society press 
chun fu vahdat 
bootstrapping distributed computational economy peer peer bartering 
proceedings st workshop economics peerto peer systems june 
cirne andrade santos neto medeiros silva 
grid computing bag tasks applications 
proceedings september 
cohen 
incentives build robustness bittorrent 
proceedings workshop economics peer peer systems june 
damiani di vimercati paraboschi samarati 
managing sharing reputations systems 
ieee transactions data knowledge engineering july august 
dingledine mathewson syverson 
reputation anonymity systems 
proceedings workshop economics peer peer systems june 
kamvar schlosser garcia molina 
reputation management networks 
twelth international world wide web conference budapest hungary may 
preprint stanford edu pub 
keahey 
grid economic services architecture working group 
www doc ic ac uk ggf wg html 
cirne 
trading cycles information replication schedule bag tasks applications computational grids 
proceedings euro par international conference parallel distributed computing 
ripeanu foster 
mapping gnutella network macroscopic properties large scale peer peer systems 
international workshop peer peer systems iptps 

sabotage tolerance mechanisms volunteer computing systems 
generation computer systems 
saroiu gummadi gribble 
measurement study peer peer file sharing systems 
proceedings multimedia computing networking mmcn san jose ca usa january 
citeseer nj nec com saroiu measurement html 
taylor shields wang 
distributed computing galaxy visualization test case 
proceedings ipdps 

improving market reputation system experimental study internet auctioning may 
ito com archives papers pdf 
