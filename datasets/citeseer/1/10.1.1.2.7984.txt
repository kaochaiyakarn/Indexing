experience evolving overlay network testbed david andersen hari balakrishnan frans kaashoek robert morris mit laboratory computer science hari kaashoek lcs mit edu nms lcs mit edu ron mit ron testbed consists internet connected nodes different sites 
operation years 
presents overview testbed summarizes research proved useful presents lessons learned development 
testbed useful research external researchers heterogeneous diverse network connections homogenous hardware software platform incremental bottom development easy configuration management tools 

fall embarked project improve resilience distributed internet services faults problems underlying ip routing substrate 
approach idea resilient overlay network ron :10.1.1.161.2760
group collaborating nodes interested communicating form ron routing packets application layer overlay network direct internet path nodes experiences outage severe congestion poor performance reasons 
nodes ron combination active probing passive observations going traffic obtain information alternate paths overlay disseminate path information link state routing protocol 
second idea integrate overlay routing tightly distributed application give applications better choice path selection 
attractiveness ron approach conceptual simplicity 
numerous hypotheses real world behavior instance despite failure internet path nodes ron find set intermediate nodes overlay connected research sponsored defense advanced research projects agency darpa space naval warfare systems center san diego contract 
sufficient consider exactly intermediate node path outages detected bypassed timely manner practice latency loss throughput optimized paths nodes overlay 
test hypotheses imperative deploy overlay network experiments 
deploying evolving ron testbed answer questions posed initial hypotheses arisen course research conducted testbed 
ron testbed consists operational machines different sites countries nodes obtaining internet service different providers isps see table 
experience time machines alive 
addition confirming hypothesis overlay yield dramatic improvements communication availability leads better performance ron testbed unexpectedly useful researchers past years 
numerous projects benefited testbed including overlay routing distributed hash tables dhts dht peer peer file systems network analysis experiments experiments correlate path failures bgp routing messages 
gives overview ron testbed summarizes diverse set research projects conducted describes key positive features problematic limitations 
experience discussions testbed users concluded important strength testbed heterogeneous network connectivity 
important factor choice sites original ron research group nodes hosted university sites internet lacks performance diversity commercial internet 
deploy nodes companies homes isp location facilities international sites moderately successful fronts 
currently sites universities 
second reason success testbed facilitating interesting research homogeneity hardware software platforms 
sites run identical versions freebsd homogeneity reduces deploying software testbed 
original motivation ron research testbed development ron testbed grew incrementally bottom fashion 
turned strong advantage allowed debug deployment problems easily required deal large number problematic machines 
major operational win testbed arises ease testbed configuration management 
learned importance painful experience 
collaboration netbed researchers set simple tools possible single person manage entire testbed currently managed graduate student side activity actual phd research 

ron testbed years researchers deployed testbeds network research 
testbeds ranged complete parallel networks internet software distributions nimi run shared machines 
separate network testbeds useful low level network protocol research provide environment hardware mutable 
flexibility comes significant cost 
dedicated network connections expensive commodity internet connections maintaining networks requires large investment time expertise 
spectrum projects nimi dedicated hardware relying shared unix accounts donated host sites 
cost monetary savings projects run heterogenous environment strictly isolate hosted experiments host machine 
heterogeneity creates larger burden software developers stringent security concerns restrict types experiments testbeds host 
ron testbed takes middle approach testbed development running relatively homogenous centrally managed hardware resides heterogenous donated internet environment 
approach predictable relatively low front costs node low going costs 
easier develop software homogenous environment having testbed run machines manage subject old date ill managed machines people donate testbed 
hardware software apparently early deployment testbed hardware platform homogeneity extent achieved enhance ability maintain system 
testbed node hosts may choose rack mount machines mini tower boxes 
rack mounted units vastly popular accounting deployed nodes 
deployed machines years processor disk memory capacity increased time 
type hardware identical pentium iii chips series seagate scsi drives intel network interfaces driver configuration machines remained 
half testbed nodes equipped cdma cellular time receivers 
timers provide approximately time resolution similar gps operate inside machine rooms external antenna 
provide time synchronization facilitate way path delay estimates 
machines run version freebsd upgrade months 
testbed interface non root account unix machines 
select trusted users root access nodes install setuid binaries users necessary 
standard accounts testbed virtualized users see base os real network 
users granted access nodes testbed manually coordinate experiments cooperatively share resources 
date resource abuses encountered accidental short lived result having small behaved user community 
low overhead experiments execute concurrently continuously ask users higher bandwidth requirements check running large experiments providing resource allocation 
software homogeneity precludes kinds research experimenting different tcp implementations significant benefits 
note paxson moved early measurement infrastructure multi platform effort freebsd netbsd noting colleagues experienced problems site configuration differences small number distinct platforms 
testbed sites donated machines os installed despite upgrading machines standard software encountered problems root partition sizes old configuration files 
adoption netbed boot cd section address problems aggressively 
deployment deployed testbed nodes february continue ship new node month 
currently active nodes sites listed table 
nodes reside variety locations private dsl connections large connected companies schools 
table shows breakdown sites type institution hosting node table shows types network connections 
testbed sites provide ron nodes full bgp feeds border routers 
additional site provides customer routes global crossing sites bringing feeds online soon 
management ct technologies 
psg sg firewall issues partly available researchers 
name location salt lake city ut uunet eli florham park nj ca dsl foster city ca pacific bell cci salt lake city ut cmu pittsburgh pa psc laurel md cornell ithaca ny applied theory santa fe nm ams amsterdam nl global crossing chi chicago il global crossing jfk new york ny global crossing lon london uk global crossing greece athens greece intel palo alto ca 
korea kaist korea sweden ma cable cambridge ma mazu boston ma mit cambridge ma nc cable durham nc nortel toronto canada canada nyu new york ny applied theory pdi palo alto ca psg bainbridge island wa sunnyvale ca near boston ma uunet sg singapore ucsd san diego ca utah salt lake city ut vineyard cambridge ma vu nl amsterdam netherlands table testbed sites 
asterisks indicate universities internet backbone 
bold indicates bgp feed 
known list site upstream isps 
site type number private residence university international international school table ron testbed site breakdown 
connection type number dsl cable modem mbps oc international table connectivity breakdown 
sites listed mbps may fractional 
international links high speed local backbone connection speeds rest world vary 
nodes managed netbed testbed :10.1.1.11.3768
users apply accounts netbed request access mit ron testbed nodes 
granted users get accounts testbed nodes 
software updates node installation handled netbed software update cd rom boot system 
access testbed granted trusted researchers 
testbed research tool invested time sophisticated isolation techniques untrusted users 
aim keep population testbed users large ensure useful small welldefined acceptable policy social pressure ensure behavior 
data collection basic service ron nodes collect periodic latency loss samples topological information traceroute sites bgp routing data 
ron system general measurement service testbed passive data collection permit users insert measurements 
roughly second exact period randomized node sends small udp packet randomly selected node packet back 
samples provide latency loss information 
probing daemon observes multiple losses particular host initiates traceroute record path failure occurred 
day traceroute node node provide topology snapshot 
established bgp peering session hosts border routers record archive bgp routing updates received hosts analysis 
data freely available request 

projects testbed overlay networks dhts initially deployed testbed determine effectively overlay networks route network problems 
followed research study examining effectiveness packet duplication avoid losses 
researchers depaul hp testbed collect relative way delay measurements packets streamed various constant bit rates 
hp researchers examined delay loss correlation parallel flows located sources examine possible benefits path diversity video streaming systems 
krishnamurthy testbed perform experiments overlay multicast freedman testbed measure latency hundreds gnutella hosts variety locations internet 
dabek ron testbed evaluate chord distributed hash table dht real world conditions develop novel congestion control protocol file transfers 
ron nodes clients bgp website bgp lcs mit edu provides interface obtain snapshots data 
servers validated cfs wide area cooperative filesystem 
ivy project ran storage servers ron nodes 
real internet testbed pointed impact slow hosts filesystem need new congestion control mechanisms 
researchers rice testbed conduct similar follow measurements dht pastry 
ron research showed internet failures quite complex internet certainly provide fail semantics 
complex failures played part testing chord keidar development group membership protocols 
ron testbed extensively validate develop wide area membership protocols 
similar vein jacobsen stored latency loss traces testbed evaluate group membership protocol 
network analysis blake packet dumps tcp transfers testbed nodes evaluate passive methods inferring shared congestion 
experiments benefited ability take raw packet traces diversity network connections testbed 
similar link analysis strauss dovrolis evaluated methods bandwidth estimation tcp transfers packet pair techniques 
tang crovella datasets collected ron testbed part evaluation new internet coordinate scheme 
bgp routing ongoing ron project combines probing data machines bgp feeds established host sites explore interaction reachability bgp routing 
mao bgp feeds testbed observe analyze bgp beacons unused prefixes defined schedules announcement withdrawal 
bgp data ron testbed provides topologically geographically distributed observation points beacons allowing researchers monitor propagation bgp updates 
feedback users diverse network connectivity 
wide margin popular feature testbed ability run real code real network diverse set network paths properties 
despite heterogeneity researcher commented loss rate nodes low 
loss rate appears low observe numerous failures ron measurement hosts 
shows number failures host involved february october 
researchers indicated testbed small perform studies wanted 
time synchronization 
researchers time synchronization obtain way delays 
hoped facility useful popular discovered requires considerable care obtain valid oneway delay measurements 
unexpected benefit having ca dsl greece cornell utah cci nc cable mazu pdi cmu ma cable nyu mit nortel intel psg vineyard failure occurrences failure distribution measurement host 
rightmost hosts online time 
stratum time servers provided incentive sites host sites responded offer managed stratum time source 
root features 
users root access nodes commented great feature reducing amount get code 
users extensive sfs remote filesystem finding convenient distributing software nodes 
node problems 
user experienced persistent authentication problems transition netbed account management 
believe due failure clearly document login procedure problem observed users commented 
users noted problems hosts behaved strange ways users experienced recurring problems non standard node 
user noted problems dns hostname values matching 
information dissemination 
users liked status pages available point nearly requested information geographic location network connectivity site hosts 
clear enhance existing user interfaces 

lessons learned security testbed major internal security incident handful external incidents 
testbed node running donated shared machine compromised host os exploit 
corrected exploit pool mit managed machines missed external node 
incident increased determination keep testbed homogenous subsequently took management machine 
external security problems unauthorized probes testbed machines 
researchers attempted map internet far pings traceroutes 
research legitimate generates complaints firewalls intrusion detection systems 
targets probing complain host sites giving chance intervene 
clarified prohibit general network probing 
invite researchers machine mit mit network monitor lcs mit edu set wide area probing 
testbed traffic caused false alerts host sites intrusion detection systems 
case sites rules erroneous submitted corrections maintainers snort ids system identifying errors extremely time consuming 
recommend hosts place ron testbed machines outside firewalls intrusion detection systems option 
resource control encountered resource related incidents highlight importance having small degree resource control 
incidents required machine reboots generated complaints excessive bandwidth consumption 
cases accidental file descriptor leaks users programs rendered machines useless 
existing processes run login machines kill offending processes 
partially solved problem contributing patch freebsd reserve file descriptors root user searching better solution 
memory leak sufficiently severe require machine reboot 
simple unfortunate oversight part left process memory limits high 
user program spin waited running maximally elevated priority 
accidental problems addressed policy requiring users spin wait milliseconds requiring programs run elevated priority prior permission 
bandwidth consumption problems cable modem sites 
incident accidental probes left running killed 
remainder legitimate tcp transfers bandwidth site hosts complained response time 
solved bandwidth consumption problems policy 
believe right solution investigated planetlab team providing site hosts maximum bandwidth control node 
experiments show easily implemented dummynet bandwidth caps far avoid possible interference fine grained measurements 
solutions rely insufficient deal malicious simply greedy users 
testbed available relatively small trusted group users social pressure effective preventing resource contention public testbed 
reliability major reliability problems encountered far hardware misconfigurations errors dependencies external services 
surprisingly failures due software upgrades linux kernel provides reservation solution 
machines donated existing operating system 
hardware failures 
understand actual machine required contacting site hosts tracked months machine failures may december 
time failures various durations 
cases nodes failed reboot power failure due incorrectly configured bios 
failures arose host site ip address changes 
failures came software configuration errors upgraded machines 
configuration errors occurred korea nodes root access existing machine failed update date ssh configuration file 
dns configuration point external dns dependencies invalidated months measurements causing false probe failures 
analogous paxson problems centralized probe triggering 
run local caching nameserver ron nodes reduce effects probe system eliminate dns dependencies 
bind nameserver historically common source security holes configured listen loopback interface 
reduces security risk permits researchers bind external nameserver port research projects 
ntp configuration half testbed nodes equipped hardware time receivers properly configured backup time servers case cdma receiver fails 
achieve best time synchronization possible hardware node configured 
cdma hardware attached 
mit utah ron nodes 
nearby ron nodes 
nearby external stratum time servers default east coast roughly west coast stratum ensures nodes ms extra configuration 
manually configure nodes peer ron nodes attempt locate nearby stratum 
mean delay server nodes receiver ms 
manually configuring known nameserver provided resilience case hosts filter ntp packets 
nodes ntp configurations fetched netbed central database 
account management account 
initial nodes single shared account add ssh public keys valid users 
redistributing new authorized keys file easier dynamically creating accounts machines mechanism sufficed testbed trusted researchers 
avoided common shared login systems nis radius introduced dependency network obviously unsuited testbed initially intended measure network failures 
netbed account creation 
opened testbed select external researchers netbed developers helped transition account management software 
machine periodically checks netbed checks list users support 
users added removed local password file effect network failures postpone account creation deletion 
shift single time saving change initial system 
maintenance deployment initial attempt 
nodes deployed freebsd installed single hard drive cd rom drive 
installed initial system image dd copy hard disk image rebooted performed machine configuration 
process moderately time intensive minutes active user time completely install node 
performed system upgrades manually source tree world upgraded components freebsd package system 
effective lost node upgrade parallelizable nodes homogenous method impractical 
number nodes grew nodes offline time single upgrade couldn parallelized nodes concurrently 
sup solution 
part automating upgrades machines run netbed wrappers sup software update protocol nodes automatically pull upgrades server 
pull sup upgrade triggered ssh avoid pull delay 
nodes sup netbed control machine 
node performs sup attempts global tree ron testbed nodes second node tree 
allows customize individual nodes necessary sacrificing automation 
cd rom boot system 
sup solve problems upgrade process 
kernel upgrades major system upgrades risky major error shut machine considerable assistance host 
combat speed initial installation process moved cd boot system designed netbed 
burn customized cd rom node perform brief initial burn 
node configuration takes minutes active user time 
cd testbed nodes survive loss entire contents hard drive 
cd boots validates initial hard disk contents checks netbed see reload drive scratch 
long reboot corrupted node install fresh image 
considered placing nodes site allow control believe cd solution nearly easier cheaper manage 
reduce administrative involvement cd rom prompts users see wish change ip address information node start site hosts reconfigure machine administrative privilege 
rebooting reduce cost complexity ship power controllers ron testbed nodes 
critical failures experienced required machine power cycled 
due aforementioned bios problems power control ineffective 
remaining cases kernel functional 
decided interrupt level kernel reboot mechanism suffice internet ping death 
machine functional securely establishes secret key trigger reboot 
machine receives icmp message proper secret key reboot 
applicable crashes mechanism capable resetting machine resource exhaustion scenarios past machines 
network connectivity machine differences common problem encountered presence network firewalls 
sites filtering policies interfered experiments ron nodes 
utah filtered nfs traffic cs department prevented ivy experiments working 
sites filter ntp traffic degree prevented ntp measurement experiments time synchronization 
site unknown reasons blocks port netbed control daemon uses 
sites filter low ports sfs filesystem 
result numerous headaches policy ron testbed nodes deployed far outside firewall possible 
avoid innumerable problems place ron nodes nat boxes 
user file distribution area provided better support users tools distributing files nodes 
users independently created scripts rsync scp data testbed nodes execute commands remote nodes 
providing sfs remote filesystem nodes provided interface interactive testbed users executing quick tests software directly remote filesystem 
long running experiments need reliable distribution mechanism 
systemwide sup capability install specific globally useful binaries nodes users requested leaves large middle ground uncovered 

closely related testbeds emulab netbed local cluster provides network bottle centralized reconfigurable cluster nodes :10.1.1.11.3768
researchers create networks nodes arbitrary bandwidth delays nodes 
tcl configuration popular network simulator ns simplifies transition simulated experiments running real code emulated environment 
emulab users wipe disks install operating systems test non ip protocols 
price power researchers test protocols real wide area environment 
netbed facilities manage ron testbed providing complete path simulation emulation widearea testing 
planetlab global overlay network developing accessing new network services 
planetlab aims grow thousands distributed nodes research long term service deployment 
ron testbed nodes planetlab nodes autonomous emulab nodes running single base operating system image 
planetlab nodes deployed local clusters 
planetlab diverges ron testbed goal open service development deployment eventually 
ron testbed primarily experimentation platform researchers wish provide services internet encouraged migrate services 
contrast planetlab embraces idea substrate internet services 
cost openness loss control researchers give privileged access nodes security 
hope eventually host planetlab services ron nodes making nodes available lower level experiments 

testbeds far complete 
hand working planetlab effort hope experiences prove useful new effort 
hand projects retain different focus capabilities working improve ron testbed 
planetlab shown user community beneficial development testbed provided sufficient infrastructure connect users help share tools ideas 
continue netbed planetlab researchers reduce administrative burden users 
users root access testbed find extremely convenient particularly non root mechanisms exist provide capabilities require 
access scale larger numbers users believe development additional safe root interfaces benefit just testbed operating systems 
investigating freebsd jail mechanism planetlab effort exploring interfaces linux vservers capability 
increase size ron testbed deployment additional nodes alliances testbeds 
scaling requires development scalable probing measurement facilities place new stresses management tools proving ground new techniques 

mit ron testbed ongoing research artifact useful projects 
believe success large part due diverse network connectivity reasonable size easy homogenous interface 
development ongoing maintenance testbed number challenges hope design principles lessons learned benefit designers testbeds 
extend deepest leigh stoller mike hibler university utah implementations netbed account management node updating jay lepreau providing netbed resources manage testbed 
nick feamster provided incentive ability collect bgp feeds ron nodes 
darpa provided financial resources pursue project support happened 
grateful users testbed useful provided feedback helped improve list includes limited alex snoeren alex yip allen miu amin vahdat muthitacharoen chen chuck blake constantine dovrolis david mazieres emil sit frank dabek keidar michael freedman michael nick feamster hu omar peter druschel melamed gil timo burkard morley mao 

time space bandwidth donated site hosts experiments gotten ground 
andre ant rowstron bjorn chris north chris eric bates james edwards jeffrey jennifer rexford john jannotti john todd lee kees bot kent lewin kevin fall lars ake leigh stoller mike mike cutler mike hibler mike sanders nancy miller randy bush robbert van renesse shawn venkatesh hosting ron nodes 

resilient overlay networks webpage 
nms lcs mit edu ron 

www isi edu 
andersen balakrishnan kaashoek morris resilient overlay networks 
proc 
th acm sosp banff canada oct pp 

andersen snoeren balakrishnan best path vs multi path overlay routing 
proc 
internet measurement conference miami fl oct 
home page 
www isi edu div 
cheswick burch mapping visualizing internet 
proc 
usenix technical conference 
dabek kaashoek karger morris stoica wide area cooperative storage cfs 
proceedings th acm symposium operating systems principles sosp banff canada oct 
dummynet 
www iet unipi luigi ip dummynet september 
feamster andersen balakrishnan kaashoek measuring effects internet path faults reactive ro 
proc 
sigmetrics san diego ca june 
freedman mazi eres sloppy hashing self organizing clusters 
nd international workshop peer peer systems iptps berkeley ca feb 
internet 
www internet edu 
jacobsen zhang marzullo group membership wide area master worker computations 
proc 
rd icdcs providence ri 
jain dovrolis available bandwidth measurement methodology dynamics relation tcp throughput 
proc 
acm sigcomm aug 
blake inferring congestion sharing path characteristics packet interarrival times 
tech 
rep mit lcs tr mit 
mao bgp beacons 
www psg com html 
mazi eres kaminsky kaashoek witchel separating key management file system security 
proc 
sosp dec pp 

muthitacharoen morris gil chen ivy read write peer peer file system 
proceedings th usenix symposium operating systems design implementation osdi boston ma dec 
paxson internet packet dynamics 
proc 
acm sigcomm cannes france sept pp 

paxson adams mathis experiences nimi 
proceedings passive active measurement workshop apr 
peterson anderson culler roscoe blueprint introducing disruptive technology internet 
proc 
hotnets princeton nj oct 
rowstron druschel pastry scalable decentralized object location routing large scale peer peer systems 
proc 
th ifip acm international conference distributed systems platforms nov 
stoica morris karger kaashoek balakrishnan chord scalable peer peer lookup service internet applications 
proc 
acm sigcomm san diego california aug 
strauss kaashoek measurement study available bandwidth estimation tools 
proc 
internet measurement conference imc oct 
tang crovella virtual landmarks internet 
proc 
internet measurement conference imc oct 
vint project 
ns manual apr 
www isi edu nsnam ns ns documentation html 
touch dli overview 
www isi 
edu touch dli dli html 
white lepreau stoller ricci hibler barb integrated experimental environment distributed systems networks :10.1.1.11.3768
proc 
osdi boston ma dec pp 

