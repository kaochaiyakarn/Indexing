geometric range searching ji matou sek department applied mathematics charles university am 
czech republic geometric range searching algorithmic problems type considered point set plane build data structure query triangle number points lying determined quickly 
problems type crucial importance computational geometry subroutines seemingly unrelated algorithms 
survey results main techniques area 
contents geometric range searching intuition lower bounds algorithms approximately linear space algorithms logarithmic query time extensions examples applications halfspace range reporting special situations 

multilevel data structures 
searching general ranges 
ray shooting linear optimization 
applications 
paragraph part done author visiting computer science institute free university berlin 
supported german israeli foundation scientific research development 
considers algorithmic problem called range searching 
describe problem outline current theoretical knowledge including main ideas proofs constructions 
main material include various extensions historical notes somewhat subjective 
notions results computational geometry appearing discussion directly related range searching explained separate boxes 
table page summarizes current best known complexity bounds simplex halfspace range searching 
computational geometry general remarks 
considered problems belong area computational geometry 
rest section briefly introduce field mention features conventions particular reader somewhat familiar computational geometry may probably skip rest section safely 
older computational geometry monographs wide scope ps ede mul 
useful survey papers pac gps 
subject computational geometry design analysis efficient algorithms computing various properties parameters finite configurations geometric objects 
sentence may sound incomprehensible reader get better picture examples simple problems studied computational geometry 
point set plane euclidean space dimension find pair points smallest distance 

segments plane compute number intersections 

convex polytope dimensional space specified intersection halfspaces determine point minimizing linear function 

polygon plane necessarily convex points interior find shortest path inside version path consisting minimum possible number segments 

computational geometry deceptively easy formulate problems 
problems practical theoretical motivations problem acceptable looking application ex post 
pioneer era field say year years difficult find unsolved elementary interesting problem 
today complicated powerful methods known finding really remarkable new problem quite hard 
probably frequent preamble problem computational geometry 
subject computational geometry similar areas interest fields geometric aspects combinatorial optimization instance careful reader recognized problem linear programming problem 
approach computational geometry usually distinguished typical features problems considered fixed dimension infinite precision model computation 
dimension hidden constants 
original computational geometry problems formulated plane dimensional space 
generalizations arbitrary dimension studied imagine dimension quite small say number objects points segments appearing problem large 
formally dimension usually considered constant 
efficiency typical computational geometry algorithms decreases dimension quite rapidly example multiplicative constants asymptotic bounds complexity algorithms usually exponential dimension case range searching 
fixed dimension assumption contrasts theory linear programming algorithms dimension comparable number constraints 
theoretical research efficiency algorithms compared exclusively asymptotic order growth complexity function input size 
raise various objections criterion mainly practical point view better theoretical criterion available 
simpler algorithms mainly older ones effectivity expressed way agrees intuitive notion fast algorithm computes speed actual implementations real life problems 
complicated algorithms touch reality lost 
apparent asymptotic improvement speed computation physically feasible inputs 
attempts improve algorithm log log complexity log algorithm look peculiar kind sport 
defense activities say actual goal better understanding studied problem 
discovery complicated quite impractical algorithm asymptotic complexity indicates possibility improvement simpler easily implementable algorithm similar complexity soon 
model computation rounding problems 
algorithms computational geometry designed ideal computer model computation called real ram 
analog usual ram abstraction actual computer programmed machine code 
real ram store arbitrary real number register perform arithmetic operations real numbers unit time usual ram works integers size bounded polynomial input size 
sequel real ram model computation 
infinite precision computation real ram model convenient theoretically behaves quite differently actual computation limited precision 
result calculation imprecise programmed algorithm may give completely wrong results limited precision combinatorial information derived comparisons imprecise numbers may erroneous inconsistent 
difficulties rounding errors serious potential obstacle serious successful implementation geometric algorithms 
promising attempts appeared developing program packages sufficiently precise relatively quick arithmetic 
probably expect complicated geometric algorithm implemented reliably way give erroneous result rounding errors causes significant slowdown compared straightforward implementation ignoring aspects 
general position assumption 
computational geometry algorithms deal separately configurations input objects degenerate sense instance input points lie common line 
exceptions complicate description implementation algorithms 
luckily theoreticians known avoid degenerate cases systematically cost slowdown constant factor versions published 
conceptually perturbs input objects infinitesimal amounts brings general positions 
methods called simulation simplicity 
idea infinitesimal perturbations realized various ways see em ec ec best method sought 
simulation simplicity theoretical drawbacks effect replacing input problem different problem infinitesimally close algorithm run different problem may yield different answer correct original problem may quite complicated recover correct answer original problem 
course may say input numbers real world problem inaccurate anyway answer perturbed problem equally appropriate original problem 
suitable applications degeneracies input mere coincidences important problem structure 
deterministic randomized algorithms 
complexity computational geometry algorithms estimated worst case means estimate hold admissible input size may imagine input adversary knows algorithm tries slow possible 
fewer results concern average case input considered random variable expected complexity algorithm input estimated input points selected independently uniform distribution unit square 
problematic point average case analysis choice probability distribution inputs 
various natural possibilities exist give significantly different expected behavior algorithm 
geometric problems usually easier give algorithm average case complexity algorithm comparable worst case complexity 
case geometric range searching trivial points uniformly distributed unit square 
older algorithms exceptions deterministic means computation uniquely determined input 
called randomized algorithms appeared computational geometry 
algorithms randomly choose possible continuations stages computation fixed input complexity algorithm random variable 
estimates expectation parameters probability large deviations expectation tail estimates considers worst case inputs input chosen adversary influence random decisions algorithm 
called monte carlo algorithms studied 
may give wrong result small probability bound holds input 
seminal rab randomized algorithms rabin gives typical computational geometry problem examples time computational geometry field exist 
chew che elegant application randomness earlier works clarkson went unnoticed 
years randomized algorithms dominating computational geometry promoted works clarkson cla cla cla haussler welzl hw sharir chazelle edelsbrunner guibas mulmuley mul mul mul seidel sei sei :10.1.1.125.6778:10.1.1.125.6778
cases randomized algorithms simpler effective easier implement deterministic ones 
problem deterministic algorithms similar slightly worse asymptotic complexity see cf mat mat cha cha cm practical purposes randomized algorithms winning simplicity smaller hidden constants 
geometric range searching system subsets dimensional euclidean space ir sets called ranges 
typically considered cases axis parallel boxes sets form ir set closed halfspaces ir simplex set closed simplices ir actual implementations don true randomness disposal random decisions simulated pseudorandom numbers 
randomness algorithm restricted initial setting random number generator represents random bits 
empirical evidence indicates weak randomness sufficient algorithms works confirmed classes algorithms see mul 
ball set closed balls ir point set ir geometric range searching problems design efficient algorithm range finds number points lying set range problem ended determining number jp rj simplest go points count lying fact situation hardly better 
problem point set advance prepare auxiliary information store suitable data structure 
repeatedly various ranges queries 
query answered soon appears line efficiently possible 
assuming number queries large advantageous invest computing time building data structure phase called preprocessing query answering faster 
example look situation dimension intervals ranges 
preprocessing query answering counting number points interval requires time proportional having stored points linear increasingly sorted array answer queries log time locate position endpoints query interval points binary search find required number subtraction indices 
preprocessing case sorting points performed log time memory sufficient storing data structure 
counting points range range counting query possible range searching problems 
natural problem compute list points lying query range speak range reporting query ask query range contains point range emptiness query 
points assigned weight real number interested sum weights points range maximum weight 
problems quite convincingly motivated direct practical applications various database systems 
example points correspond employees coordinates representing age salary time employment order find employee age years experience salary month apply query axis parallel box circular range query serve locating airports defective airplane succeeds land important direct applications applications geometric range searching subroutines design algorithms complicated geometric problems 
papers usually investigates unifying generalization various range searching problems 
assume point assigned weight semigroup common reader may supply currency unit preference 
points 
objective query find sum weights points lying range 
example range counting queries natural numbers addition weights equal 
queries maximum weight appropriate semigroup real numbers operation maximum numbers 
emptiness queries may choose boolean values trueg operation logical disjunction point weights true 
concerning computational aspects usually assume weights stored single computer word semigroup operation executed constant time 
range reporting queries somewhat special position 
include discussed semigroup model semigroup set subsets operation union weight point point set fpg 
reasonable models computation subset represented constant amount memory union operation requires nonconstant time 
algorithmic point view specialty range reporting answer consists points need time order output answer 
may spend time auxiliary computations decreasing asymptotic complexity 
know answer going large afford compute slowly 
observed cleverly applied chazelle cha calls filtering search 
query complexity range reporting algorithms usually expressed form number points answer function total number points called overhead 
return data structure example simple sorted array 
answer interval reporting queries log time easy generalize queries seeking sum real weights interval 
case interval counting queries possibility subtract weights semigroup embedded group 
possible cases finding maximum weight need different complicated data structure 
simple known example data structure example consider points ae ir sorted order build balanced binary tree points leaves 
node store total weight points leaves subtree rooted note points form interval intervals called canonical intervals 
query interval search position leaves search paths give decomposition set points lying disjoint union log canonical intervals 
denote search paths respectively node branch 
node lying node left son take right subtree define canonical intervals 
proceed symmetrically portion obtaining desired decomposition 
answer query remains sum precomputed weights canonical intervals decomposition 
note weight subtraction find point maximum weight interval 
analogous situation appears complicated geometric range searching problems reporting queries queries weights subtracted allow simpler efficient solution general case prototype queries asking maximum weight 
case subtraction usually express answers complicated ranges answers simpler ranges 
instance dimensional example implicitly expressed query interval difference intervals 
full specification range searching problem need addition mentioned objects set semigroup weights points set admissible ranges limits maximal permissible storage preprocessing time data structure 
limitation show example query time log optimal time able answer queries need linear storage 
halfspace simplex range searching achieve linear storage logarithmic query time choose efficient query answering algorithm depending amount memory preprocessing time disposal 
memory requirements usually considered important roots database applications preprocessing needs done spend relatively long time memory disk space allocated permanently copy database 
hand applications preprocessing time critical storage 
mainly consider simplex halfspace range searching problems 
problems turned crucial computational geometry universal sense problems general ranges reduced see yy am section 
algorithms simplex halfspace range searching problems applied problems look complicated 
nice example de berg motivated computer graphics problem 
range searching problem authors need solve part hidden surface removal algorithm follows 
problem set segments ir imagine curtain hanging segment downwards ir zg may intersect 
want design data structure answering queries type point direction find curtain hit ray sent direction 
original solution problem efficient method described am reduce problem combination simplex range searching halfspace range searching 
orthogonal range searching problems ones axis parallel boxes ranges important simplex range searching important direct applications 
consider detail reader convenience briefly summarize main results concerning orthogonal range searching 
basic idea data structures problem called range tree described bentley ben 
straightforward gives query time log log gamma storage preprocessing time dimension various improvements parameters logarithmic factors achieved works willard wil willard lueker wl gabow bentley tarjan chazelle cha cha 
exact complexities differ depending type problem range counting queries range reporting queries general semigroup queries model computation pointer machine ram 
lower bounds computational complexity orthogonal range searching chazelle cha cha match known upper bound exactly 
variant points lie grid bounded size studied overmars ove case somewhat better results obtained 
intuition lower bounds section start considering simplex halfspace range searching problems detail 
results computational complexity summarized follows consider simplex range searching problem point set ae ir weights semigroup storage preprocessing time lies range approximately query time approximately word approximately previous sentence means multiplicative factor bounded log constant 
particular approximately linear storage query time approximately gamma order achieve polylogarithmic query time needs space preprocessing approximately complexity halfspace range queries believed similar special cases halfspace emptiness queries handled efficiently 
section formulate known lower bounds show certain restrictions algorithm model computation query time approximately optimal 
possible currently circumvent lower bounds somewhat algorithms satisfy corresponding assumptions 
case theoretical computer science 
try give reader intuitive explanation formula comes 
explanation quite far proof reality lower upper bounds complicated manner meant just basic orientation 
consider extreme cases polylogarithmic query time roughly linear space 
logarithmic query time 
consider halfspace queries 
difficult see point set general position theta different subsets form halfspace best seen dual setting distinct subsets correspond distinct cells arrangement hyperplanes see boxes pages 
storage order means store answers essentially different halfspaces appear 
actual algorithms principle 
naive attempt extending idea simplex range searching results larger space suitable method preserving storage close complicated discovered csw 
simple halfspace range searching method uniformly distributed point sets approximately linear storage 
assume set chosen randomly independent random draws uniform distribution unit square consider planar case 
put nc cover unit square theta square grid grid square having side see fig 

high probability grid square contains small number points bounded constant 
halfplane 
note boundary line intersects squares grid slope intersects squares column slope apply similar argument rows 
squares intersected go points lying point test membership uniform distribution implies number points processed phase points marked full circles fig 
remains account weight points grid squares completely contained done row row fact squares form contiguous interval row 
total weights points segment row computed advance need constant time row query answering 
total memory requirement 
higher dimension proceed quite similarly dividing unit cube grid cubes sides gamma bounding hyperplane halfspace intersects gamma grid cubes 
cubes completely contained query halfspace processed columns parallel arbitrarily chosen coordinate axis 
way get data structure storage gamma query time uniformly distributed point sets unit cube required formula 
time generalization simplex range searching straightforward 
associate suitable dimensional data structure range searching intervals column grid leave details reader 
quite conceivable simple data structure practical option simplex range searching linear space roughly uniformly distributed sets method somewhat resembles quadtrees see ps 
point sets uniformly distributed simple approach fails known methods query time close gamma considerably complicated 
lower bounds 
lower bounds due chazelle students previous weaker results obtained fredman fre 
basic cha bounds computational complexity simplex range searching weights suitable semigroup 
order formulate result define appropriate model computation called arithmetic model originally introduced yao fredman means lower bound proofs 
roughly speaking arithmetic model considers number semigroup operations needed compute answer query 
certain partial sums point weights precomputed stored memory partial sums called generators 
number exceed prescribed storage arithmetic model consider various auxiliary operations algorithm needed query answering finding generators added yield result 
strength lower bounds arithmetic model 
hand model puts various restrictions query answering algorithm 
significant restrictions impossibility subtractions weight weights happen belong group 
pass exact definitions 
semigroup called faithful holds distinct subsets ng natural numbers ff fi exist elements ff fi words linear forms variables ranging identically equal set variables 
faithfulness quite weak condition 
example semigroup faithful zz zz addition modulo identity holds 
hand real numbers operation addition operation pairwise maximum form faithful semigroups 
sequel fixed faithful semigroup 
linear form ff variables ranging ff nonnegative integers called generator 
turns advantageous consider geometric range searching problems form 
range searching problem point set fp ae ir set admissible ranges assign set system system subsets definable ranges fp rg set system restricting geometric contents problem minimum 
approach turned fruitful geometric range searching see hw mat 
set gamma fg generators called scheme set system set exist nonnegative integer coefficients fi fi choice weights fi required generators scheme express weight set expression form choice weights points scheme gamma called scheme gammaj coefficients chosen way numbers fi fi nonzero 
natural define geometric range searching problem point set set ranges weights query complexity arithmetic model storage gamma scheme 
pause moment give simple example generators look actual algorithm 
considering example generator canonical interval sum point weights interval 
generator just sum weights subset answer query computed expressing point set query range disjoint union canonical subsets coefficients 
range searching algorithms semigroup weights special form generators answer computation fact aware single instance general form allowed arithmetic model 
lower bounds arithmetic model hold algorithms computing answer total weight points query range scheme just defined sense 
exist principle better algorithm specific weights range searching problem algorithm covered arithmetic model uniformly choice weights 
lower bounds apply algorithms weight subtraction group 
proving lower bounds valid group case main challenges area proof lower bounds emptiness queries halfspaces simplices 
orthogonal range searching type problem known complexity group model provably better semigroup model see cr 
overcome definitions quote main result cha 
theorem chazelle faithful semigroup 
fixed dimension parameters exists point set ae ir simplex range searching problem point set weights storage query complexity omega log resp 
omega arithmetic model 
proof theorem fact gives somewhat stronger results 
artificially constructed pathological set suffices choose randomly uniform distribution unit cube obtain hard set high probability 
hard query simplex need chosen special way 
proof uses simplices called slabs parts space bounded parallel hyperplanes 
proof shows randomly chosen slab suitable width slabs intersecting unit cube query complexity shown lower bound formulas 
sense bound worst case average case 
quite bound holds logarithmic factor denominator case dimension 
improvement interesting relation generalization famous problem combinatorial geometry called heilbronn problem 
heilbronn problem formulated follows problem set ae ir denote area smallest triangle vertices asymptotic behavior function ae jp ng nice problem worked excellent mathematicians complete solution quite far see ksp rot survey results 
generalization related chazelle lower bound proof method problem set ae ir denote smallest volume convex hull tuple points asymptotic behavior function ae jp ng chazelle shown suitably chosen set unit cube volume convex hull tuple proportional log sufficiently large constant words omega gamma log essentially result uniform distribution set saying tuple clustered sense volume 
proved smaller improvement follow immediately 
improvement may easy 
known results heilbronn problem imply false may contradict intuition somewhat 
known hold larger constant hand connection shows finding algorithm simplex range searching query complexity arithmetic model get nontrivial result mentioned difficult combinatorial problem 
point reader ask better bound plane comes generalized heilbronn problem open dimension higher dimensions 
main reason dimension easy construct point set satisfying 
particular construction straightforward take random uniformly distributed set throw suitably selected half points 
chazelle proof subsets defined slabs considered matters dimensional distribution orthogonal projection subset axis corresponding slab 
obtain suffices show slabs select half points projection dimensional distribution sense 
spite theorem hope better algorithms particular cases halfspace range searching simplex emptiness queries better algorithm known essentially special case halfspace emptiness queries halfspace range reporting queries see section 
hand simplex emptiness queries halfspace range counting approximately equally difficult general simplex range searching problem 
partially substantiated bcp cr 
bcp showed similar assumptions theorem halfspace range searching problem point set storage query complexity omega log gamma gamma arithmetic model 
bound lower actual complexity shows halfspace range searching problem arbitrary weights difficult halfspace emptiness problem query time approximately bd achieved 
chazelle rosenberg cr consider simplex range reporting problem 
model computation different previous results called pointer machine 
prove data structure occupying space exists halfspace reporting query requires time omega gamma gamma denotes number points halfspace 
papers chazelle lower bounds may please reader nice piece mathematics simplex range searching problem quite pessimistic 
instance want improve query complexity times compared trivial algorithm consisting inspection point dimension costs storage order pass trivial algorithm complicated may expect hidden constants proportionality 
nontrivial algorithms practically useful really small dimension 
quite frequent feature computational geometry algorithms mentioned 
algorithms approximately linear space divide discussion simplex range searching algorithms parts 
consider algorithms linear nearly linear storage algorithms attaining short polylogarithmic query time 
explained algorithms require quite large space order groups algorithms investigated separately literature attention paid linear space algorithms usually complicated interesting 
algorithms memory requirements extremes obtained straightforward combination algorithms mentioned types 
nontrivial algorithms linear space nontrivial meaning substantially sublinear query time idea partition trees due willard wil 
explain simple form halfplane range searching 
point set plane 
simplicity assume form general position 
arbitrarily chosen line halving points lie points 
classical ham sandwich cut theorem see ede guarantees existence line regions partition plane contains exactly points see fig 

consider arbitrary halfplane bounding line easy see intersect regions lies completely outside completely inside precompute total weight points process points region missed single step saving query answering compared trivial method 
significant asymptotic complexity similar saving repeated recursively remaining regions 
continuing similar manner larger depth complexity decreased significantly 
data structure idea partition tree root containing coordinates partitioning lines total weights points regions 
root sons corresponding regions theta theta theta theta theta theta theta theta ham sandwich cut theorem 
levels recursive construction 
halfplane regions bounded thick lines processed wholes 
ith son root partition tree constructed similarly set recursive construction terminates reaching small sets say point ones 
answer query halfplane start root partition tree 
find region missed boundary process immediately ignoring lies outside storing weight global variable accumulating total weight 
remaining regions proceed similarly corresponding sons root 
reach leaf partition tree trivially small set process point stored directly 
denotes query time point set get recurrence gamma initial condition denotes suitable constant 
gives bound 
construction analysis extended arbitrary value obtain log significantly sublinear function 
easy verify described data structure occupies space 
defined partition tree answering triangular range queries 
query answering algorithm similar current node partition tree process regions missed boundary query triangle oe directly lie completely inside oe completely outside oe regions intersected boundary oe proceed recursively appropriate sons current node 
argue node recursion visits sons 
note oe intersection difficult check node partition tree visited query answering algorithm triangle oe visited answering query 
query time triangles order query time 
early improvements generalizations partition trees 
idea partition tree simple means obvious 
improving described construction generalizing higher dimensions easy history resembles athletic records somewhat 
willard somewhat better construction described query time form ff ff 
edelsbrunner welzl ew improved method better application ham sandwich cut theorem dividing regions independently bisect simultaneously single line similarly proceeding recursively way obtain recurrence leading bound ff 
preprocessing time partition tree construction log relies sophisticated linear time algorithm ham sandwich cut theorem linearly separated point sets due megiddo 
generalization dimension ff obtained yao yao showed possibility partitioning point set ir parts relative size planes 
improved dobkin edelsbrunner de ff edelsbrunner huber eh ff yao ff 
authors re discovered result point set ir partitioned equal parts planes 
organize recursive construction similar way ew 
avis avi noted partitioning point set ir equal parts hyperplanes possible general 
existence partition established ramos private communication edelsbrunner 
cole col construction dimension giving ff shortly yao yao yy showed existence nontrivial simplex range searching algorithm linear space fixed dimension exponent ff log gamma differs small amount 
describe beautiful construction yao yao partition scheme 
discrete point set replaced continuous positive mass distribution point replaced small dense ball radius weight gamma plus light nebula total weight spreading infinity 
easy show small partition scheme original point set passage continuous setting enables apply topological arguments proofs ham sandwich cut theorem 
construction partition scheme proceeds induction space dimension constructs point mass center set pi consists finite number pieces hyperplanes removal partitions ir desired regions 
unique point bisecting pi fc hyperplane perpendicular axis bisecting vector positive coordinate define gamma dimensional mass distributions denoted gamma mass distribution arises projecting mass halfspace direction gammav similarly gamma arises projecting mass lower halfspace hyperplane identified ir gamma points gamma defined 
key claim yao yao prove topological means exists gamma coincide 
set pi fx tv pi fx gamma tv pi gamma finishes definition partition turns pi unique 
partition defines regions containing gammad fraction total mass hyperplane avoids regions 
mentioned algorithms theorems topological flavor ham sandwich cut theorem borsuk ulam theorem 
partition scheme way partitioning space regions usually bounded hyperplanes depending point set 
crucial property partition hyperplane regions intersected contain significantly fewer points set 
quality partition scheme determined maximum number regions intersected hyperplane maximum number points contained regions 
partition scheme builds partition tree standard way 
algorithms usually polynomial slow preprocessing especially higher dimensions 
researchers tried find efficient partition schemes simple constructions improved analysis complicated constructions involved 
randomized partition scheme 
significant breakthrough haussler welzl hw 
clarkson bring probabilistic methods computational geometry larger extent 
introduced abstractly formulated range searching problem specified set system started building theory problems 
partition scheme algorithm new type large adjustable number regions asymptotic query complexity improves increasing number regions 
partitioning scheme described quite simply plane suitable large constant pick random tuple points draw gamma delta lines determined points 
lines partition plane desired regions 
haussler welzl proved high probability partition tree arising way guarantees query time ff ff ffi ffi positive constant tending 
dimension gets ff gamma gamma ffi 
partition tree constructed log expected time randomized algorithm deterministic construction asymptotic complexity mat 
spanning trees low crossing numbers 
query time close plane achieved welzl wel 
abandoned principle partition tree constructed recursively partition scheme constant bounded number regions replaced idea spanning tree low crossing number 
notion worth explaining 
consider point set plane spanning tree graph theoretic tree having vertex set 
say halfplane crosses edge fu vg jr fu 
crossing number respect halfplane number edges crossed crossing number maximum crossing numbers respect 
spanning tree possibly small crossing number simplicity assume path known algorithms constructing spanning tree low crossing number obtain path want 
halfplane components induced subgraph set component interval path having suitable dimensional interval range searching data structure intervals answer halfplane query performing interval queries course provided know edges crossed halfplane explains significance spanning trees low crossing number halfplane range searching 
notion crossing number spanning tree immediately generalized arbitrary dimension halfspaces place sense arbitrary set system set crosses edge fu vg vg qj continues previous definition 
welzl proves general existence result spanning trees low crossing number formulation 
resulting crossing number function certain parameter considered set system called dual shatter function resist giving definition important notion 
subsystem sets call points equivalent integer define value dual shatter function maximum number equivalence classes element example set system defined triangles point set plane dual shatter function satisfies 
drawing contours triangles plane partitioned regions 
general cm constants welzl theorem guarantees existence spanning tree crossing number gamma log 
returning case halfspaces ir get welzl theorem implies existence spanning tree crossing number gamma log point set ir chazelle welzl cw improved bound crossing number geometric setting gamma asymptotically optimal way proved optimal upper bound query complexity simplex range searching primal shatter function exists significant spanning trees low crossing number 
result haussler hau implies bound log holds welzl theorem 
problem spanning tree low crossing number plane belongs relatively computational geometry worked exact determining constant proportionality 
welzl wel showed optimal crossing number lies worst case 
problem arithmetic model discussed connection lower bounds 
get certain characterization set systems admitting sublinear query complexity arithmetic model 
method automatically give efficient algorithm usual sense 
mentioned difficulty lies know boundary query simplex halfspace crosses edges spanning tree clear find edges efficiently 
general problem difficult original simplex range searching problem 
chazelle welzl managed solve additional complication dimensions obtaining optimal algorithms 
leaving spanning trees low crossing number mention algorithmic applications aga egh purely combinatorial applications see contribution pach gps 
developments 
mw stands somewhat aside mainstream 
describes essentially different method answering halfplane range queries combinatorial lemma erdos yields log query time log space 
method triangles point weights subtracted 
hope generalizing method higher dimensions 
hand easily implementable algorithm small constants proportionality said algorithms 
chazelle csw discovered simplex range searching algorithm arbitrary dimension space gamma query time arbitrarily small positive constant 
approached lower bound factor reason call algorithm quasi optimal 
method returns recursively constructed partition trees 
single point set construct partition schemes time way halfspace schemes sufficiently efficient 
construction recurses point set regions partition scheme leads larger memory requirement indicated partition scheme halfspaces simplices schemes may happen simplices 
reason chazelle apply called multilevel data structures handle simplex queries see section 
simplicial partitions 
mat returns single partition scheme parameters asymptotically optimal halfspaces simplices 
partition constructed suitable generalization welzl construction spanning trees low crossing number wel 
describe partition schemes 
simplicity formulate definition point set general position 
point set ir general position 
simplicial partition collection pi delta delta disjoint subsets called classes forming partition delta dimensional simplex containing set simplices need disjoint simplex delta may contain points see fig 

clear construction partition scheme easier partition schemes comparable efficiency theorem disjoint regions known 
gamma gamma gamma gamma gamma gamma theta theta theta theta simplicial partition points different classes marked different symbols 
hyperplane delta simplex say crosses delta intersects simplices lower dimension appearing deal sets degenerate positions definition crossing somewhat complicated 
define crossing number simplicial partition pi respect number simplices pi crossed crossing number pi maximum crossing numbers respect hyperplanes 
main theorem mat follows theorem point set ir parameter 
exists simplicial partition satisfying jp class classes crossing number gamma 
crossing number result asymptotically optimal 
mat gives algorithm constructing simplicial partition log running time sufficiently small fi certain small constant fi fi 
construction simplicial partitions 
construction application cuttings see box page step cuttings replaces argument similar welzl construction spanning trees low crossing number wel 
application cuttings geometric properties 
accidental alon showed choice suitable finite test set hyperplanes crossing number simplicial partition pi respect bounded number crossing number pi respect hyperplane gamma 
test set size constructed cuttings dual space 
test set disposal relation cuttings small crossing number simplicial partition xi cutting total number incidences simplices xi hyperplanes simplex xi jh incidences average number simplices xi crossed hyperplane xij total number simplices xi crossing number respect average hyperplane gamma gamma 
cutting gives simplicial partition crossing number respect average hyperplane asymptotically optimal 
shortcomings points need equally distributed simplices xi second average crossing number optimal hyperplanes bad crossing numbers 
fixed incremental construction pi called reweighting strategy imitating welzl construction simplicial partition pi constructed step step pair delta time 
suppose delta delta constructed jp dn re set points covered gamma idn re points 
hyperplane number simplices delta delta crossed assign weight xi cutting sum weights hyperplanes intersecting simplex delta xi total weight hyperplanes 
choose large possible way total number simplices xi exceed find simplex xi containing points simplex delta set chosen dn re points contained delta finishes description construction prove resulting simplicial partition required crossing number 
bounds increment total weight hyperplanes caused adding new simplex delta simplicial partition yields estimate total weight hyperplanes stage bound follows hyperplane give big crossing number refer mat detailed calculation 
recursive application simplicial partition theorem partition tree created standard way 
set find simplicial partition pi suitable choice parameter store simplices total weights points classes pi root partition tree 
class simplicial partition corresponds certain set systems exists efficient partition scheme constant bounded number regions dual shatter function small spanning tree low crossing number exists 
probably surprise reader similar strategy erdos earlier 
cuttings cutting finite set closed simplices simplex means intersection halfspaces unbounded simplices allowed disjoint interiors covering ir set hyperplanes ir parameter cutting xi called cutting provided interior simplex xi intersected hyperplanes useful consider weighted version nonnegative weight function ir sum weights hyperplanes intersecting simplex cutting exceed total weight hyperplanes notion cutting basis geometric algorithms divide conquer type dealing hyperplanes 
computational problem concerning set hyperplanes partitioned subproblems defined simplices cutting involving theta fewer hyperplanes original problem 
dividing strategy developed works clarkson haussler welzl 
cuttings considered explicitly papers chazelle friedman cf author mat name current definition mat 
applications important number simplices cutting small possible 
chazelle friedman cf showed exists cutting consisting simplices 
result asymptotically optimal applies weighted version 
efficient computation cuttings considered cf mat mat cha 
subtree root construction recursively points corresponding classes 
answering query halfspace process simplices lying completely inside completely outside directly current node simplices crossing boundary recursively descend appropriate subtrees 
query time obtain recurrence gamma crossing number simplicial partitions cost auxiliary computations node partition tree finding crossing simplices computing total weight points simplices lying completely inside query halfspace simply inspect simplices simplicial partition test position respect 
choose suitable value parameter take large constant similarly done previous partition tree constructions yields gamma tends 
choose function exactly number points current node partition tree small power interest take large possible larger means branching shallow partition tree lose constant factor query answering efficiency level partition tree shallow tree geometric duality plane duality mapping assigning points lines lines points 
various versions duality considered literature applications differences 
definiteness duality defined follows point dual line ax gamma bg conversely image line point 
defines image point line vertical ones vertical lines correspond points infinity projective plane 
easy check point non vertical line lies iff point lies line 
lies iff lies 
properties geometric duality allow intuitive formulation geometric problems passing dual objects 
similarly duality defined points hyperplanes dimensional space 
duality maps point hyperplane delta delta delta gamma gamma gamma conversely 
analog mentioned properties planar case holds duality preserves incidences relation 
example want count points lying hyperplane dual problem counting number hyperplanes point 
information geometric duality book ede 
better 
hand term recurrence obstacle 
means number simplices simplicial partition say comparable auxiliary computations finding crossing simplices summing weights take time afford 
suitable compromise sufficiently small power obtain query time gamma log constant better don try estimate 
situation preprocessing time log 
order shallow partition tree getting large start building various auxiliary data structures mentioned computations node partition tree 
mat method pursued complicated data structures gets asymptotically better query time gamma log log 
mat author succeeded reducing query complexity simplex range searching linear space gamma 
method technically somewhat complicated similar ideas mentioned plus application called hierarchical cuttings chazelle cha 
result optimal dimension higher dimensions see section 
preprocessing time ideal log 
room improvement challenge finding simpler optimal algorithm 
hyperplane arrangements consider finite set lines plane 
lines divide plane convex sets called cells word faces various dimension see cells dimensions cells short intersections lines call vertices 
remove vertices lying line line split open rays finite number open segments 
segments rays form cells edges 
removing lines plane partitioned open convex polygons unbounded ones cells 
similarly finite set hyperplanes ir defines decomposition ir cells dimensions phi phi phi phi phi phi phi phi phi phi fi fi fi phi phi phi phi phi phi fi fi fi fi fi phi phi phi phi fi fi fi decomposition cell complex sense algebraic topology called arrangement fixed total number cells dimensions bounded jh 
bound best possible general position case difficult obtain exact formula number cells dimension 
hyperplane arrangements basic objects study computational geometry see ede information 
algorithms logarithmic query time halfspace range searching 
logarithmic query time essentially achieved precomputing possible answers storing suitable data structure 
natural consider equivalent dual version problem see box page definition duality problem set hyperplanes ir equipped weights 
query point find sum weights hyperplanes lying answer obviously remains constant points lying cell arrangement see box page 
construct arrangement compute store weight cell suffices detect cell containing query point return precomputed answer 
re formulation follows special choice duality transform 
general consider problem finding total weight hyperplanes separating query point fixed point problems converted projective transforms 
point location point location problem subdivision ir convex cells construct data structure quickly determine cell subdivision containing query point 
denote combinatorial complexity subdivision total number cells dimensions 
plane optimal data structures known space preprocessing time log query time see sei modern randomized method older works ede 
dimension method polylogarithmic query time nearly linear space described pt dimension higher data structure comparable efficiency general subdivisions 
hyperplane arrangement special subdivision space efficient point location methods known arbitrary dimension 
algorithm due clarkson cla requires space preprocessing time performs location log time :10.1.1.125.6778:10.1.1.125.6778
various technical improvements basic idea chazelle friedman cf obtained algorithm query time optimal space 
conceptually simpler method discovered chazelle cha space query time preprocessing 
algorithms papers hierarchies progressively refined cuttings similarly algorithm described section 
preprocessing done time see ede csw 
dimensions efficient methods known fast point location arbitrary subdivision space convex cells 
higher dimensions special methods developed point location hyperplane arrangements see box page 
gives halfspace range searching method space preprocessing time log query time 
space preprocessing time reduced somewhat approximately factor log query time shown mat 
explain simple algorithm formulated directly problem point location algorithms hyperplane arrangements similar 
nice application notion cuttings see box page 
data structure usual tree node corresponds subset hyperplanes construction starts root corresponds choose large constant construct cutting xi delta delta theorems existence cuttings assume cr absolute constant independent simplex delta xi set hyperplanes intersecting interior total weight hyperplanes lying completely interior delta cutting xi weights stored root build subtree corresponding recursive application procedure 
recursion terminates soon reach sets hyperplanes smaller suitably chosen constant 
recursion store corresponding set hyperplanes leaf constructed tree 
total weight hyperplanes query point determined follows 
cutting stored root find simplex delta containing constant time constant 
gives total weight hyperplanes lying remains determine total weight hyperplanes computed recursive application method subtree corresponding way reach leaf tree log steps process hyperplanes stored directly 
look space requirements data structure 
space needed hyperplanes bounded recurrence relation cr cr resulting bound arbitrarily small choosing large 
described hierarchy progressively refining cuttings somewhat wasteful 
level lose additional constant factor reflected total space requirement 
effect restricted making larger searching cutting single node expensive 
chazelle cha succeeded overcoming method produces hierarchy progressively refining cuttings finest cutting level total size chazelle method explained mat somewhat simplified form 
simplex range searching 
subsets point set plane defined triangle storing possible answers triangle range searching problem requires space 
approach edelsbrunner ekm solution requires space order significant reduction space requirement achieved cole yap cy method idea resembling multilevel data structures see section 
give space data structure dimensional simplex range searching 
considering reporting planar case py 
general method simplex range searching storage approximately arbitrary point weights arbitrary dimension relatively chazelle section 
space preprocessing time query time log 
space preprocessing time improved mat chazelle hierarchy cuttings cha 
extensions examples applications halfspace range reporting special situations halfspace range searching problem emptiness queries reporting queries turned efficient solutions general simplex range searching problem 
actual query complexity halfspace range reporting space approximately bd denotes number points query halfspace 
particular dimensions algorithms exist linear storage log query time see cgl cp ahl 
higher dimension clarkson cla algorithm space preprocessing bd query time log :10.1.1.125.6778
result complemented mat algorithm log log space log preprocessing time gamma bd log query time method quite similar simplex range searching mat discussed section 
combining methods complexity achieved spectrum memory requirements 
small improvements described schwarzkopf sch 
lower bounds known 
roughly speaking say exponent formula expressing complexity simplex range searching originates fact combinatorial complexity arrangement hyperplanes ir order similarly exponent bd closely related worst case complexity polytope defined intersection halfspaces ir order bd see ede 
quickly decide emptiness halfspace dual form quickly test point lies hyperplanes set essentially deal problem point location convex polytope upper unbounded cell arrangement dual version halfspace range reporting essentially restrict attention single cell arrangement hyperplanes saw yields considerable improvement 
special situation point set lies fixed lower dimensional algebraic variety bounded degree hyperplanes bounding query ranges tangent variety range searching results improved restricted point set case helps linear space case restricted ranges large space case see am discussion 
improvements combinatorial result zone theorem aronov aps 
situations points surface means rare arises dealing lines dimensional space see 
considered static range searching problems point set 
applications need insert new points delete old ones time time advantageous modify data structure suitably rebuilding scratch change 
problem called data structure 
dynamic data structure storing points probably expect better time modification fraction time needed building static structure anew 
simplex halfspace range searching problems dynamic structures efficiency small factors typically order known see mat am see bs ove general 
interesting get rid extra factors say dynamic halfspace emptiness data structures 
simplex range searching data structures csw mat quite straightforward equally easy linear space halfspace reporting data structure mat see am 
dynamic version clarkson halfspace reporting data structure complicated 
source difficulties fact maximal asymptotic complexity convex hull points odd dimension preceding dimension gamma 
change convex hull caused adding deleting single point proportional complexity certain convex hull dimension gamma 
instance consider convex hull points ir convex polyhedron vertices edges facets vertices degrees close keep inserting deleting vertices impossible maintain explicit representation convex hull planar graph time substantially smaller operation 
reasons authors investigated dynamic data structures assumption update sequence random suitably defined sense obtained update times case see mul mul sch 
am dynamic algorithm efficient worst case arbitrary update sequence algorithm maintain explicit representation convex hull works certain implicit representation 
data structure connection techniques see section supports fast answering various queries concerning convex hull deciding query point lies inside outside current convex hull computing tangent hyperplane convex hull containing line multilevel data structures explain idea multilevel data structures example introduce notions description 
fs set segments plane 
want construct data structure quickly computes number segments intersected query line permit roughly linear space data structure 
endpoints segment denotes set set consider computing number opposite case solved symmetrically case vertical query lines treated separately 
consider partition tree set definiteness partition tree simplicial partitions theorem large constant 
partition tree determine roughly amortized sense individual update time large average sequence updates small 
time number points halfplane solve problem look closely answer obtained partition tree 
weight point accounted visited nodes tree 
node find simplices corresponding simplicial partition lying completely inside weights respective classes accounted wholes 
node partition tree call classes simplicial partition stored canonical sets 
see partition tree provides partition set roughly canonical sets various sizes 
total number canonical sets partition tree sum sizes easily estimated log 
problem segments augment partition tree set follows canonical set create partition tree set fb mg store corresponding node partition tree partition tree called primary level trees sets called secondary second level ones 
apply resulting data structure segment counting problem 
express set disjoint union certain canonical subsets mm appropriate secondary partition tree count points lying line adding counts canonical sets obtain desired number segments sight described level data structure efficient original partition trees construction 
simple calculation convince case required space log total size canonical subsets query time remains close large canonical sets decomposition computation second level fast small canonical sets 
principle example quite universal 
usually applicable query conjunction conditions geometrically intersection regions condition region suitable efficient data structure 
idea multilevel data structures appears bentley data structures orthogonal range searching ben 
context partition trees construction introduced dobkin edelsbrunner de 
quite frequently see papers oss csw mat 
descriptions data structures look complicated especially levels 
mat framework proposed description analysis data structures 
restate principle multilevel data structures somewhat setting give examples 
introduce notion decomposition schemes 
consider range searching problem form mentioned section 
set system usually defined equation 
point view range searching algorithms proceeds follows system subsets called canonical subsets defined rule express range disjoint union canonical sets 
call pair set system plus rule decompose sets decomposition scheme decomposition scheme turned range searching data structure provided decompositions efficiently simply storing total weight points canonical subset range searching data structures canonical subsets mentioned explicitly 
partition trees described section canonical subsets point sets lying regions partition schemes nodes partition tree 
dimensional data structure range searching intervals example canonical subsets just canonical intervals interval partitioned log canonical intervals 
data structure halfspace range searching logarithmic query time explained section node tree defines canonical subsets corresponding simplices cutting stored 
node corresponds subset hyperplanes delta simplices cutting corresponding canonical subset formed hyperplanes lying completely delta range set hyperplanes lying query point expressed disjoint union log canonical sets 
subsequent development need decomposition scheme operate system systems induced subsets means subset ae decomposition scheme fp pg 
usually trivially true geometric problems build decomposition scheme set build subset 
decomposition scheme called hereditary 
set basic objects necessarily points initial example section segments 
set systems suppose decomposition scheme hereditary decomposition scheme 
example segments subsets form fs hg halfplane similarly fs hg halfplane decomposition scheme building partition tree set endpoints decomposition scheme partition tree endpoints formally sets segments partition trees deal endpoints 
goal derive decomposition scheme complicated system consists sets form example segments ranges interested form sets segments endpoints lie upper halfplane endpoints lower halfplane fact complementary take advantage 
define called composition decomposition schemes denoted ffi decompose set decompose set canonical subsets cm 
consider decomposition scheme operating subsystem induced decompose set canonical sets ik 
union collections gives decomposition canonical sets resulting decomposition scheme canonical sets 
example segments rephrased composing decomposition schemes turning resulting decomposition scheme range searching data structure precomputing weights canonical sets 
knowing parameters decomposition schemes routine calculation derive parameters composed scheme 
total number canonical subsets determines space requirements data structure maximal number canonical sets appearing decomposition range related query time 
basic example consider orthogonal range searching 
point set ir set system defined intervals axis 
decomposition scheme canonical sets canonical intervals axis see example 
range form corresponds subset lying axis parallel box 
wise composition ffi ffi ffi decomposition scheme set system defined axis parallel boxes 
turning decomposition scheme range searching data structure recover version bentley range trees ben 
important example application multilevel data structures mentioned simplex range searching polylogarithmic query time csw 
halfspace range searching method described section yields decomposition scheme partitions point set query halfspace log canonical subsets stated dual form 
simplex intersection halfspaces obtain simplex decomposition scheme wise composition gives desired simplex range searching data structure 
easy calculations show resulting data structure query time log occupies memory 
conclude remarks 
asymptotically usually loses factor space query time level multilevel data structure compared efficiency data structures levels 
mat decomposition schemes described allow build multilevel data structures losing polylogarithmic factor level 
hand practical efficiency data structure lost quite quickly increasing number levels substantiated implementation experience 
big difference simplex decomposition scheme directly create composing halfspace decomposition schemes times 
point simplex range searching algorithms provide decomposition schemes explained sense halfspace emptiness halfspace reporting algorithms discussed section provide halfspace decomposition scheme sense decompose shallow halfspaces ones contain points 
want build data structure testing emptiness complicated ranges defining conditions halfspace may halfspace emptiness data structure lowest level multilevel data structure 
searching general ranges previous sections considered range searching ranges bounded hyperplanes 
applications naturally lead searching ranges nonlinear curved boundaries 
general query ranges considered 
nontrivial results expected mainly ranges determined small constant number real parameters 
important case subsets ir defined conjunction polynomial inequalities maximum degree constants 
call sets elementary cells short range searching problems various kinds elementary cells include specific problems motivated applications 
results mentioned formulated somewhat general ranges writing necessary assumptions somewhat lengthy 
simplest nonlinear ranges circular disks plane balls higher dimensions 
corresponding range searching problem arises interested points lying distance point 
notice balls appear second application oriented formulation directly 
quite typical range searching problems nonlinear ranges usually obtained suitable re formulation original specification problem 
instance asking points distance segment exceed number equivalent formulation range searching ranges shape 
want detect points see segment larger angle segment get range reporting query complicated range defined inequalities degree ball range searching related problems usually referred proximity problems rich literature see ahl cw 
range searching ranges paid attention 
important earlier considering general geometric range searching problems yy contains important ideas developed applications 
considering problem range searching elementary cells am 
extent methods developed simplex halfspace range searching applied searching elementary cells 
outline results 
concentrate ranges defined single polynomial inequality 
ranges described conjunction inequalities handled similarly applying multilevel data structures level processes inequalities 
disk ae ir center radius described inequality gamma gamma generally consider ranges form fx ir fixed polynomial variables polynomial specifies type considered ranges disks conics cylinders literature term tarski cells similar somewhat general notion 

dimensional parameter vector determining particular range type particular disk 
set admissible ranges problem fr ir possible way solving range searching problems ranges direct transformation halfspace range searching space higher dimension called linearization problem 
consider example disks gamma gammaa gamma gammaa gammaa gammaa gammax gammax define mapping ir ir 
key property mapping disk exists halfspace ir gamma words points plane mapped halfspace exactly disk easy see suitable halfspace ir gamma gamma gamma gamma 
mapping described property called linearization 
linearization allows transform disk range searching problem plane point set halfspace range searching problem ir point set 
linearization obtained introducing new coordinate monomial variables occurring polynomial problem arbitrary polynomial linearized way obtain nontrivial range searching algorithms ranges important observation yao yao yy 
example disks demonstrate general method shows method wasteful dimension image space 
known disks plane linearized sense dimension 
geometrically disk obtained vertical projection intersection certain halfspace ir paraboloid plane 
better linearization obtained mapping plane paraboloid mapping 

transformation called lifting important consequences computational geometry close relationship voronoi diagrams plane convex polytopes ir see ede 
linearization minimum dimension polynomial effectively solving system linear equations see am 
important example linearization sense frequently problems dealing lines ir line ir naturally described real parameters coordinates 
lines ir predicate lie nonlinear expressed parameter description lines 
predicate linear expressed called coordinates coordinates correspond points projective dimensional space 
situation complicated necessity dealing oriented lines leads interesting combinatorial algorithmic problems 
initial direction chazelle developments pellegrini pel pellegrini shor ps agarwal aga 
polynomials get best known range searching algorithms direct application linearization 
cases faster algorithms obtained generalizing methods halfspaces nonlinear setting 
example disk range searching plane reduction halfspace range searching dimension yields roughly query time linear space 
imitate algorithm mat replacing circles generalizing necessary results appropriately arrive linear space algorithm query time close briefly discuss complexity algorithms constructed way range searching problems ranges information am 
roughly speaking exponent query complexity linear space depends dimension space containing point set space requirement logarithmic query time depends mainly number parameters determining range talk bounds specific algorithms true complexity smaller 
disk range searching plane query time linear space approximately gamma number parameters storage close guarantees logarithmic query time 
suggestive sentence reader conclude obtain bounds close gamma resp 

case proof known resp 

higher dimensions obstacle unsolved problem efficient decomposition arrangement algebraic surfaces 
explain required notions informal level exact definitions occupy space 
oe oe algebraic hypersurfaces ir subsets described single algebraic equation reader may imagine hyper spheres 
analogously hyperplane arrangement hypersurfaces oe oe partition ir cells necessarily convex ones anymore cell characterized particular sign pattern polynomials defining oe oe number cells hidden constant depends degrees defining polynomials 
imitating techniques halfspace range searching need partition cells elementary cells defined current section 
important particular elementary cells decomposition look essential described constant number parameters 
spheres instance intersections constantly balls spheres complements balls elementary cells 
oe oe hyperplanes difficult partition cells arrangement simplices total 
conjectured general algebraic hypersurfaces bounded degree exists decomposition approximately elementary cells proving hard 
best known general construction due chazelle gives approximately gamma elementary cells planar case easy obtain elementary cells 
optimal dimension higher dimensions remains significant gap lower bound upper bound approximately gamma relationship decomposition problem range searching algorithms ranges follows decompose arrangement hypersurfaces ir certain type determined polynomial elementary cells obtain query complexity roughly gamma linear storage 
similarly decompositions elementary cells hypersurfaces ir determined imply logarithmic query time space 
described decomposition problem motivations geometric range searching 
instance important decision algorithms theory real closed fields aspects decomposition important degrees polynomial defining elementary cells decomposition 
problem decomposition solved satisfactorily clear algorithms obtained discussed techniques close optimal 
instance consider problem range searching cones ir form gamma gamma parameters determining cone problem equivalent preprocessing set circles plane query point circles enclosing quickly 
known get roughly query time linear space arithmetic model query complexity generators see section 
currently unclear better algorithm exists arithmetic model unrealistic stronger lower bound holds model computation 
section mention combinatorial results may prove significant theory geometric range searching 
oe oe ae ir graphs algebraic functions fn ir gamma ir respectively constant bounded degree 
lower envelope oe oe graph pointwise minimum fn series previous partial results halperin sharir hs sharir sha proved nearly tight upper bound worstcase combinatorial complexity lower envelope gamma arbitrarily small constant 
range searching problems typically range emptiness problems formulated detecting query point lies lower envelope collection algebraic surfaces small dimension knowing complexity lower envelope hope obtain algorithms say polylogarithmic query time storage gamma form space query time tradeoff 
currently general algorithm essentially point location lower envelope advantage new combinatorial bound known 
obstacle decomposition lower envelope constant complexity cells 
special case particular type surfaces solved sharir ms 
consider testing query line lies spheres collection analysis algorithm utilizes new bound 
related research aims bounding combinatorial complexity single cell arrangement algebraic surfaces bounded degree ir hope complexity close gamma see partial results direction 
parametric search parametric search general strategy algorithm design 
roughly speaking produces algorithms searching algorithms verification suitable assumptions 
consider problem goal find particular real number depends input objects 
consider input objects fixed 
suppose algorithms disposal algorithm number decides possibilities explicitly know input objects call algorithm oracle 
second algorithm called generic algorithm computation depends input objects real parameter guaranteed computation differs computation algorithm role possible employ simpler algorithm certain quite weak assumptions algorithm parametric search produces algorithm finding main idea simulate computation algorithm unknown parameter value computation course depends assume required information obtained testing signs polynomials small constant bounded degree coefficients polynomial may depend input objects algorithm outcomes previous tests directly sign particular polynomial tested unknown find roots polynomial locate algorithm derive sign 
way simulate computation algorithm record tests involving algorithm computation find unique value giving appropriate results tests solving search problem 
version need calls oracle test performed algorithm second idea tests possible 
algorithm executes group mutually independent tests polynomials pm meaning polynomial depend outcome test involving polynomial answer log calls oracle compute roots polynomials pm locate position binary search 
parametric search particularly efficient algorithms implemented parallel small number parallel steps tests parallel step necessarily independent mentioned sense 
parametric search formulated megiddo meg idea simulating algorithm generic value appears es gus meg 
technical improvement reduces running time logarithmic factor suggested cole col 
generalization parametric search higher dimension parameter point ir oracle test position respect hyperplane appears csy cm npt mat 
currently parametric search quite popular technique computational geometry numerous works select randomly ast 
algorithms parametric search theoretically elegant appear quite complicated implementation 
specific problems parametric search replaced randomized algorithm see dmn mat techniques ks similar efficiency 
ray shooting linear optimization section consider type generalization geometric range searching problems 
important example ray shooting problem special case mentioned problem 
problems set gamma geometric objects planes triangles balls 
goal construct data structure point direction quickly determine object gamma hit ray ae sent point direction formally ae originating question object gamma intersecting ae closest 
problem popular computer graphics arises auxiliary problem determining visibility objects hidden surface elimination ray tracing situations 
ray shooting problem somewhat different flavor range searching problems solved efficiently data structures suitable derived range searching problems 
illustrate relation specific problem ray shooting convex polytope 
role gamma played set hyperplanes ir simplicity assume hyperplanes vertical denote upper unbounded cell arrangement set points lying hyperplanes 
ray shooting problem permit rays originating problem useful number applications 
instance problem determining closest point set ae ir gamma point called post office problem transformed 
dimensions higher yields efficient algorithms post office problem see ms 
suppose query ray ae origin intersects hyperplane point finding point goal appropriate hyperplane 
point ae decide lies suffices test segment ox intersects hyperplane assumption happens iff test lies lies hyperplanes dual version halfspace emptiness problem algorithms discussed section suitable tests 
know efficiently determine point ae precedes follows find tests type 
method interval halving suggests determine position required numerical precision 
approach may bad practice infinite precision computation model suffice arbitrarily small interval ae may contain intersections hyperplanes determine intersected hyperplane bounded number steps 
apply method parametric search see box page allows find exactly usually quite efficiently 
connection method data structures halfspace emptiness problem applied ray shooting convex polytope 
space requirement remains data structure identical query time increases small power log gamma gamma gamma gamma gamma gamma gamma gamma xi xi xi xi xi xi xi xi xi xi omega omega omega omega omega omega omega gamma gamma gamma gamma gamma gamma gamma gamma psi psi psi xi xi xi xi xi xi xi xi xi xi omega omega omega omega omega omega omega ffl xi xi xi xi xi xi xi xi xi xi omega omega omega omega omega omega omega ae ae 
ae ae 
theta theta theta thetafl adding degrees freedom halfspace emptiness query 
described passage halfspace emptiness testing ray shooting convex polytope illustrated fig 

fig 
indicates halfspace emptiness query schematically illustrates dual version testing query point lies hyperplanes 
fig 
depicts ray shooting problem dual version means translate bounding hyperplane halfspace interested point hit hyperplane 
primal dual versions interpret passage adding degree freedom query object point halfspace looking extremal position freedom 
approach explained ray shooting convex polytopes applicable versions ray shooting problem 
formulate derived range searching problem test initial segment ox admissible ray intersects object gamma 
problem build data structure techniques geometric range searching usually construct suitable multilevel data structure 
apply parametric search obtain ray shooting algorithm 
application strategy particular ray shooting problems need quite routine 
idea employing range searching data structures ray shooting natural appears papers see 
described systematic approach parametric search suggested am demonstrated examples 
particular data structures halfspace emptiness queries adapted directly ray shooting convex polytopes eliminates parametric search speeds query answering somewhat see ms 
return ray shooting convex polytopes interpretation membership queries convex polytope added degree freedom see fig 

point view natural add degrees freedom query object degrees freedom look extremal position 
situation indicated fig 
single point oriented ray linear function interpreted direction space generalization orientation ray want find vertex polytope maximizing function resulting problem fact linear programming problem special situation constraints advance optimized function comes query mat shown algorithms halfspace emptiness queries transformed solve linear programming problem query complexity increased polylogarithmic factor data structure 
result uses multidimensional version parametric search construction goes induction number degrees freedom query object 
resulting algorithm quite complicated useful find simpler randomized variant 
dual version intuitive case finding empty halfspace maximizing linear function 
optimal halfspace determined tuple points point set words supported facet convex hull see fig 

dynamic halfspace emptiness data structure basis may insert delete constraints 
machinery answer various queries concerning convex hull set mentioned section 
mention application result classical computational geometry problem finding extremal points 
input point set ae ir want detect points extremal vertices convex hull problem solved computing combinatorial representation convex hull dimensions method fairly inefficient convex hull point set ir combinatorial complexity order bd testing point extremal formulated linear programming problem dimension constraints 
different points linear programs differ constraints linear programming preprocessing query mode 
build data structure appropriate constraints help answer queries determining extremal points balancing preprocessing time query time suitably obtain example total time dimension efficient known method 
applications computational geometry literature applications range searching extensive reviewed 
survey containing applications aga 
stress point problem range searching applied preprocessing query type 
example computation extreme points mentioned previous section 
give artificial example illustrate point 
suppose want count number pairwise intersections set segments plane 
approach range searching build data structure query segment counts number segments intersected 
query structure segment sum answers divide sum deal singular cases segments intersecting taken care 
methods reviewed required data structure designed routine manner multilevel construction halfplane decomposition schemes 
preprocessing query time balanced appropriately obtain algorithm 
reader suspect sloppy way solving problem better global method imposing preprocessing query mode original problem 
true partially exist somewhat better simpler algorithms ones cuttings see aga complexity slightly better log small constant don give specific value newer results cuttings improve published algorithms somewhat believed roughly dynamic data structure fact special treatment problem get away static structure 
actual complexity problem application range searching tools gave theoretically algorithm quickly 
situation exception 
problems algorithm range searching indicates complexity expect problem specific hopefully simpler practical algorithms 
problems complicated specific algorithms elaborated range searching approach remained best published solution 
examples hidden surface removal problems see counting circular arc intersections aps problems concerning lines space pel mentioned extreme points detection quote 
paragraph text intended survey article geometric range searching 
extent larger originally planned include include 
choice material necessarily reflects taste knowledge author topics mentioned briefly broad area applications refer literature 
acknowledgment 
pankaj agarwal seidel reading preliminary versions numerous useful comments 
lower bound larger log known problems type tractable query type problems far lower bounds concerned 
dim query type space query time preprocessing update time amortized source simplex range searching lower bounds general cha general log cha reporting gamma cr simplex range searching upper bounds general log 
cw general log log 
cw general gamma mat general gamma log log log mat general log log mat general log gamma csw general log log mat general log csw halfspace range searching lower bound general log gamma gamma bcp halfspace range searching upper bounds general log log log gamma mat general log mat reporting log log cgl reporting log log log log log ahl reporting log log gamma bd log log mat emptiness gamma bd log log mat emptiness gamma bd log mat reporting gamma bd log am emptiness bd log log bd log ms emptiness bd log bd gamma log bd log bd gamma ms reporting bd log bd bd gamma cla emptiness log log log ms reporting log am explanations 
symbol upper bounds omega gammae symbol lower bounds omitted 
letter denotes parameter chosen simplex range searching general halfspace range searching range halfspace emptiness halfspace reporting bd 
letter denotes positive constant arbitrarily small adjusting parameters algorithm generic letter specific constants depending 
algorithms achieving preprocessing times deterministic stated 
bounds hold arithmetic model 
bound holds pointer machine model 
due 
preprocessing known methods published 
upper bounds simplex range searching apply 
time randomized preprocessing algorithm produces data structure having parameters high probability 
algorithms ray shooting convex polytope adjusted halfspace reporting queries additional effort published version deals emptiness queries 
randomized expected time 
due am 
table results simplex halfspace range searching problems agarwal aronov sharir suri 
selecting distances plane 
algorithmica 
aga agarwal 
partitioning arrangements lines ii 
applications 
discrete comput 
geom 
aga agarwal 
geometric partitioning applications 
goodman pollack steiger editors computational geometry papers dimacs special year 
amer 
math 
soc 
aga agarwal 
stabbing lines polyhedra 
tech 
rept 
cs department computer science duke university 
ahl aggarwal hansen leighton 
solving query retrieval problems compacting voronoi diagrams 
proc 
nd annu 
acm sympos 
theory comput pages 
alon haussler welzl 
partitioning geometric embedding range spaces finite vapnik chervonenkis dimension 
proc 
rd annu 
acm sympos 
comput 
geom pages 
am agarwal matousek 
dynamic half space range reporting applications 
tech 
report cs duke university 
extended including results eppstein proc 

ieee symposium foundations computer science pages 
am agarwal matousek 
range searching sets 
proc 
th internat 
sympos 
math 

comput 
sci volume lecture notes computer science pages 
springer verlag 
appear discrete comput 
geom 
am agarwal matousek 
ray shooting parametric search 
siam journal computing 
aps agarwal pellegrini sharir 
counting circular arc intersections 
siam journal computing 
aps aronov pellegrini sharir 
zone surface hyperplane arrangement 
discrete comput 
geom 
aronov sharir 
air revisited 
proc 
th annu 
acm sympos 
comput 
geom pages 
appear discrete computational geometry 
agarwal sharir 
applications new partition scheme 
discrete computational geometry 
ast agarwal sharir toledo 
applications parametric searching geometric optimization 
proc 
rd acm siam sympos 
discrete algorithms pages 
avi avis 
non partitionable point sets 
inform 
process 
lett 
bcp chazelle pach 
hard halfspace range searching 
discrete computational geometry 
ben bentley 
multidimensional divide conquer 
commun 
acm 
bs bentley saxe 
decomposable searching problems dynamic transformation 
algorithms 
chazelle cole preparata yap 
new upper bounds neighbor searching 
inform 
control 
clarkson edelsbrunner guibas sharir welzl 
combinatorial complexity bounds arrangements curves spheres 
discrete comput 
geom 
chazelle edelsbrunner guibas sharir 
lines space combinatorics algorithms applications 
proc 
st annu 
acm sympos 
theory comput pages 
chazelle edelsbrunner guibas sharir 
stratification scheme real semi algebraic varieties applications 
theoret 
comput 
sci 
chazelle edelsbrunner guibas sharir 
diameter width closest line pair parametric searching 
proc 
th annu 
acm sympos 
comput 
geom pages 
cf chazelle friedman 
point location hyperplanes vertical ray shooting 
computational geometry theory applications 
appear 
cf chazelle friedman 
deterministic view random sampling geometry 
combinatorica 
cgl chazelle guibas lee 
power geometric duality 
bit 
cha chazelle 
filtering search new approach query answering 
siam comput 
cha chazelle 
functional approach data structures multidimensional searching 
siam comput 
cha chazelle 
lower bounds complexity polytope range searching 
amer 
math 
soc 
cha chazelle 
lower bounds orthogonal range searching reporting case 
acm 
cha chazelle 
lower bounds orthogonal range searching ii arithmetic model 
acm 
cha chazelle 
optimal convex hull algorithm point sets fixed dimension 
tech 
report cs tr princeton university 
preliminary version proc 
nd ieee symposium foundations computer science 
appear discrete computational geometry 
cha chazelle 
cutting hyperplanes divide conquer 
discrete comput 
geom 
che chew 
building voronoi diagrams convex polygons linear expected time 
report dept math 
comput 
sci dartmouth college hanover nh 
cla clarkson :10.1.1.125.6778
new applications random sampling computational geometry 
discrete comput 
geom 
cla clarkson :10.1.1.125.6778
applications random sampling computational geometry ii 
proc 
th annu 
acm sympos 
comput 
geom pages 
cla clarkson 
randomized algorithm closest point queries 
siam comput 
cm chazelle matousek 
linear time deterministic algorithms optimization problems fixed dimension 
proc 
th acm siam sympos 
discrete algorithms pages 
cm cohen megiddo 
strongly polynomial time nc algorithms detecting cycles dynamic graphs 
journal acm 
col cole 
partitioning point sets dimensions 
proc 
th internat 
colloq 
automata lang 
program volume lecture notes computer science pages 
springer verlag 
col cole 
slowing sorting networks obtain faster sorting algorithms 
journal acm 
cp chazelle preparata 
halfspace range search algorithmic application sets 
discrete comput 
geom 
cr chazelle rosenberg 
complexity computing partial sums line 
internat 
comput 
geom 
appl 
cr chazelle rosenberg 
lower bounds complexity simplex range reporting pointer machine 
international colloquium automata languages programming 
appear computational geometry theory applications 
cole salowe steiger szemer edi 
optimal time algorithm slope selection 
siam comput 
csw chazelle sharir welzl 
quasi optimal upper bounds simplex range searching new zone theorems 
algorithmica 
csy cole sharir yap 
hulls related problems 
siam journal computing 
cw chazelle welzl 
quasi optimal range searching spaces finite vc dimension 
discrete comput 
geom 
cy cole yap 
geometric retrieval problems 
inform 
control 
de berg halperin overmars snoeyink van kreveld 
efficient ray shooting hidden surface removal 
algorithmica 
appear 
extended proc 

acm symposium computational geometry pages 
de dobkin edelsbrunner 
organizing point sets dimensions 
tech 
report technische universitat graz 
de dobkin edelsbrunner 
space searching intersecting objects 
journal algorithms 
dmn mount netanyahu 
randomized algorithm slope selection 
internat 
comput 
geom 
appl 
ec canny 
general approach removing degeneracies 
proc 
nd annu 
ieee sympos 

comput 
sci pages 
ec canny 
efficient approach removing geometric degeneracies 
proc 
th annu 
acm sympos 
comput 
geom pages 
ede edelsbrunner 
algorithms combinatorial geometry volume eatcs monographs theoretical computer science 
springer verlag heidelberg west germany 
egh edelsbrunner guibas hershberger seidel sharir snoeyink welzl 
implicitly representing arrangements lines segments 
discrete comput 
geom 
eh edelsbrunner huber 
dissecting sets points dimensions 
report inst 
tech 
univ graz graz austria 
ekm edelsbrunner kirkpatrick maurer 
polygonal intersection searching 
inform 
process 
lett 
em edelsbrunner 
simulation simplicity technique cope degenerate cases geometric algorithms 
acm trans 
graph 
es eisner 
mathematical techniques efficient record segmentation large shared database 
journal acm 
ew edelsbrunner welzl 
range search linear space query time 
inform 
process 
lett 
fre fredman 
lower bounds complexity optimal data structures 
siam comput 
fortune van wijk 
efficient exact arithmetic computational geometry 
proc 
th annu 
acm sympos 
comput 
geom pages 
gabow bentley tarjan 
scaling related techniques geometry problems 
proc 
th annu 
acm sympos 
theory comput pages 
gps goodman pollack steiger editors 
computational geometry papers dimacs special year 
amer 
math 
soc 
gus gusfield 
parametric combinatorial computing problem program module distribution 
journal acm 
hau haussler 
sphere packing numbers subsets boolean cube bounded vapnik chervonenkis dimension 
tech 
report ucsc crl university california santa cruz 
hs halperin sharir 
new bounds lower envelopes dimensions applications visibility terrains 
proc 
th annu 
acm sympos 
comput 
geom pages 
hw haussler welzl 
epsilon nets simplex range queries 
discrete comput 
geom 
ks katz sharir 
expander approach geometric optimization 
proc 
th annu 
acm sympos 
comput 
geom pages 
ksp koml os szemer edi 
lower bound heilbronn problem 
london math 
soc 
mat matousek 
construction ffl nets 
discrete comput 
geom 
mat matousek 
randomized optimal algorithm slope selection 
inform 
process 
lett 
mat matousek 
approximations optimal geometric divide conquer 
proc 
rd acm symposium theory computing pages 
appear comput 
syst 
sci 
mat matousek 
cutting hyperplane arrangements 
discrete computational geometry 
mat matousek 
reporting points halfspaces 
comput 
geom 
theory appl 
mat matousek 
efficient partition trees 
discrete comput 
geom 
mat matousek 
range searching efficient hierarchical cuttings 
proc 
th acm symposium computational geometry pages 
discrete computational geometry appear 
mat matousek 
linear optimization queries 
algorithms 
results combined results schwarzkopf appear proc 
th acm sympos 
comput 
geom pages 
mat matousek 
vertical ray shooting arrangements 
comput 
geom 
theory appl march 
meg megiddo 
combinatorial optimization rational objective functions 
math 
oper 
res 
meg megiddo 
applying parallel computation algorithms design serial algorithms 
journal acm 
mehlhorn 
multi dimensional searching computational geometry volume data structures algorithms 
springer verlag heidelberg west germany 
ms matousek schwarzkopf 
ray shooting convex polytopes 
discrete computational geometry 
appear 
ms sharir 
ray shooting amidst spheres dimensions related problems 
manuscript 
mul mulmuley 
fast planar partition algorithm proc 
th annu 
ieee sympos 

comput 
sci pages 
mul mulmuley 
fast planar partition algorithm ii 
acm 
mul mulmuley 
randomized multidimensional search trees dynamic sampling 
proc 
th annu 
acm sympos 
comput 
geom pages 
mul mulmuley 
randomized multidimensional search trees results dynamic sampling 
proc 
nd annu 
ieee sympos 

comput 
sci pages 
mul mulmuley 
randomized multidimensional search trees lazy balancing dynamic shuffling 
proc 
nd annu 
ieee sympos 

comput 
sci pages 
mul mulmuley 
randomized geometric algorithms pseudo random generators 
proc 
rd annu 
ieee sympos 

comput 
sci pages 
mul mulmuley 
computational geometry randomized algorithms 
prentice hall new york 
mw matousek welzl 
splitters counting points triangles 
algorithms 
matousek welzl 
discrepancy approximations bounded vc dimension 
combinatorica 
appear 
proc 

ieee symposium foundations computer science pages 
npt norton plotkin tardos 
separation algorithms fixed dimensions 
algorithms 
oss overmars sharir 
storing line segments partition trees 
bit 
ove overmars 
design dynamic data structures volume lecture notes computer science 
springer verlag 
ove overmars 
efficient data structures range searching grid 
algorithms 
pac pach editor 
new trends discrete computational geometry volume algorithms combinatorics 
springer verlag 
pel pellegrini 
incidence nearest neighbor problems lines space 
proc 
th annu 
acm sympos 
comput 
geom pages 
ps preparata shamos 
computational geometry 
springer verlag new york ny 
ps pellegrini shor 
finding stabbing lines space 
discrete computational geometry 
pt preparata tamassia 
efficient point location convex spatial cell complex 
siam comput 
py paterson yao 
point retrieval polygons 
algorithms 
rab rabin 
probabilistic algorithms 
traub editor algorithms complexity pages 
academic press new york ny 
rot roth 
developments triangle problem 
adv 
math 
sch schwarzkopf 
dynamic maintenance geometric structures easy 
proc 
nd annu 
ieee sympos 

comput 
sci pages 
sch schwarzkopf 
ray shooting convex polytopes 
proc 
th annu 
acm sympos 
comput 
geom pages 
sei seidel 
simple fast incremental randomized algorithm computing trapezoidal decompositions triangulating polygons 
comput 
geom 
theory appl 
sei seidel 
small dimensional linear programming convex hulls easy 
discrete comput 
geom 
sha micha sharir 
tight upper bounds lower envelopes higher dimensions 
proc 
th annu 
ieee sympos 

comput 
sci 
focs page 
overmars 
dynamic partition trees 
workshop algorithms theory volume pages 
springer verlag 
lncs appear bit 
wel welzl 
partition trees triangle counting range searching problems 
proc 
th annu 
acm sympos 
comput 
geom pages 
wel welzl 
spanning trees low crossing numbers 
tech 
report fu berlin fb mathematik 
wil willard 
polygon retrieval 
siam comput 
wil willard 
new data structures orthogonal range queries 
siam comput 
wl willard lueker 
adding range restriction capability dynamic data structures 
acm 
yao yao 
space partition applications 
proc 
th annu 
acm sympos 
theory comput pages 
yao dobkin edelsbrunner paterson 
partitioning space range queries 
siam comput 
yy yao yao 
general approach dimensional geometric queries 
proc 
th annu 
acm sympos 
theory comput pages 

