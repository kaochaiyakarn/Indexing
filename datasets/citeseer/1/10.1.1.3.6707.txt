generation random bayesian networks constraints induced width application average analysis connectivity quasi random sampling loopy propagation jaime ide fabio cozman bio ramos polit cnica universidade de paulo departamento de decision making lab av 
prof mello cep paulo sp brazil jaime ide poli usp br usp br usp br 
algorithms generation uniformly distributed bayesian networks constraints induced width 
algorithms ergodic markov chains generate samples building previous algorithms authors 
constraints induced width leads realistic results requires new techniques 
discuss applications randomly generated networks study average number nodes connected query effectiveness quasi random samples approximate inference convergence loopy propagation non extreme distributions 

certain questions involving bayesian networks quite difficult answer exactly 
example average number variables connected bayesian network 
quasi random importance sampling quasi random gibbs sampling compare 
significant insight theoretical empirical questions obtained analyzing large samples bayesian networks 
hundreds real bayesian networks freely distributed near 
left obvious solution able randomly generate bayesian networks experiments comparisons 
researchers ad hoc random processes generate networks past example produce networks uniformly distributed suitable space 
challenging aspect bayesian network generation exactly define space define properties characterize realistic bayesian networks 
attempt generating bayesian networks control maximum node degree maximum number edges aiming generate relatively sparse graphs 
strategy reasonable perfect 
restrictions solely node degree number edges lead overly random edges real networks variables distributed groups edges groups 
considered number properties real networks 
example option suggested produce graphs large number equivalent graphs property observed real networks 
wanted properties clear intuitive meaning users algorithms quickly grasp properties generated networks 
eventually appropriate quantity control induced width networks 
induced width network easily explained understood conveys algorithmic complexity inferences indirectly captures dense network tests indicate subjectively network low induced width looks real networks literature 
sense control induced width usually interested comparing algorithms parameterizing results respect complexity underlying network induced width main indicator complexity 
unfortunately generation random graphs constraints induced width significantly involved generation graphs constraints node degree number tomas brought fact attention 
carlos brito suggested idea 
network moral graph induced graph ordering induced graph ordering dashed lines represent induced connections 
edges 
report new algorithms accomplish generation graphs simultaneous constraints quantities induced width node degree number edges 
previous divide generation random bayesian networks steps 
generate random directed acyclic graph satisfies constraints induced width node degree number edges generate probability distributions graph 
generate random graph construct ergodic markov chains appropriate stationary distributions successive sampling chains leads generation properly distributed networks 
necessary theory section 
algorithms described section 
freely distributed program bayesian network generation section 
illustrate random bayesian networks describe applications obvious practical significance section 
study average number connected nodes bayesian networks 
second analyze performance quasi random samples opposed pseudo random samples inference algorithms importance sampling gibbs sampling 
third investigate convergence loopy propagation networks non extreme distributions probability values far zero 

basic concepts section summarizes material :10.1.1.1.7854
directed graph composed set nodes set edges 
edge goes node parent node child 
path sequence nodes pair consecutive nodes adjacent 
path cycle contains nodes nodes 
cycle directed reach nodes arcs direction 
directed graph acyclic dag contains directed cycles 
graph connected exists path pair nodes 
graph singly connected called polytree exists exactly path pair nodes graph multiply connected multi connected short 
extreme sub graph polytree sub graph connected remainder polytree single path 
undirected graph direction edges ignored 
ordered graph pair containing undirected graph ordering nodes 
width node ordered graph number neighbors precede ordering 
width ordering maximum width nodes 
induced width ordered graph width ordered graph obtained follows nodes processed node processed preceding nodes connected call connections induced connections resulting graph induced graph 
example 
induced width graph minimal induced width ordering computation induced width np hard problem computations usually heuristics :10.1.1.1.7854
bayesian network represents joint probability density set variables 
density specified directed acyclic graph node graph associated variable xi conditional probability density xi pa xi pa xi denotes parents xi graph 
bayesian network represents unique joint probability density xi pa xi consequence markov condition 
moral graph bayesian network obtained connecting parents variable ignoring direction edges 
induced width bayesian network induced width moral graph 
inference computation posterior probability density query variable observed variables complexity inferences directly related induced width underlying bayesian network :10.1.1.1.7854
markov chains generate random graphs 
consider markov chain xt finite domains pij ij matrix representing transition probabilities number states pij xt xt 
step transition probabilities ij xt xt independent markov chain irreducible exists satisfies ij 
markov chain irreducible pair states 
markov chain positive recurrent state returned finite number steps follows finite irreducible chain positive recurrent 
markov chain aperiodic greatest common divisor ii equal ii 
ensured pii pii self loop probability 
markov chain ergodic exists vector stationary distribution satisfying ij finite aperiodic irreducible positive recurrent chain ergodic 
transition matrix called doubly stochastic rows columns sum pij pij 
markov chain transition matrix uniform stationary distribution 

generating random dags section show generate random dags constraints induced width node degree number edges 
random dag generated easy construct complete bayesian network randomly generating associated probability distributions variables bayesian network categorical probability distributions produced sampling dirichlet distributions details see 
generate random dags specific constraints construct ergodic markov chain uniform limiting distribution state chain dag satisfying constraints 
running chain iterations eventually obtain satisfactory dag 
algorithm produces ergodic markov chain required properties 
algorithm significantly complex algorithms 
added complexity comes constraints induced width price worth paying resulting dags realistic representatives bayesian networks 
algorithm works follows 
create set nodes simple network start 
loop lines constructs state dag current state 
lines verify induced width current dag satisfies maximum value allowed constraints maximum node degree maximum number edges checked 
current dag polytree dag constructed lines current dag multi connected dag constructed lines 
depending current graph different operations performed procedures ar correspond valid operations 
note particular procedure performed acceptance resulting dag probabilistic parameterized algorithm essentially mixture procedures ar 
procedure produce multi connected graphs constraints node degree second procedure produce polytrees constraints node degree 
need guarantee irreducibility markov chains constraints induced width procedure ar creates needed path space polytrees theorem 
mixture procedures benefits creates complex transitions hopefully increasing convergence chain second eliminates restriction node degree needed 
algorithm understood sequence probabilistic transitions follow scheme 
algorithm generating dags induced width control input number nodes number iterations maximum induced width possibly constraints node degree number nodes 
output connected dag nodes 

create network nodes nodes just parent node parent 
repeat times 
current graph polytree 
probability call procedure probability call procedure ar 

resulting graph satisfies imposed constraints accept graph keep previous graph 
graph multi connected 
call procedure 

resulting graph polytree satisfies imposed constraints accept probability accept satisfies imposed constraints keep previous graph 

return current graph iterations 
procedure ar add remove 
generate uniformly pair distinct nodes 
arc exists current graph keep state 
invert arc probability 
find predecessor node path remove arc add arc arc depending result line 
procedure add remove 
generate uniformly pair distinct nodes 
arc exists current graph delete arc provided underlying graph remains connected 
add arc underlying graph remains acyclic keep state 
algorithm generating dags mixing operations ar 
polytree ar polytree structure 
accept reject polytree polytree simple trees proofs simple tree simple polytree simple sorted tree 
establish ergodicity algorithm 
theorem markov chain generated algorithm aperiodic 
proof 
possible stay state procedures ar states self loop probability greater zero 
qed theorem transition matrix defined algorithm doubly stochastic 
proof 
symmetric transition probabilities neighbor states rows columns sum self loop probabilities complementary probabilities 
procedure clearly symmetric procedure ar operation symmetric 
just check transitions polytrees multi connected graphs symmetric true transitions polytree multi connected accepted probability multi connected polytree transitions accepted probability 
qed need lemma prove theorem 
lemma removal arc multi connected dag induced width increase 
proof 
remove arc moral graph stays contains arcs just keeping ordering induced width increase 
qed theorem markov chain generated algorithm irreducible 
proof 
suppose multi connected dag nodes prove graph reach simple sorted tree opposite transformation true symmetry transition matrix reach state transitions graphs remain acyclic connected satisfy imposed constraints 
start finding loop cutset removing arcs obtain polytree multi connected dag 
induced width increase removal operations lemma 
polytree move simple polytree recursive way 
extreme sub graphs polytree pair extreme sub graphs call branches possible cut branch add branch procedure ar increasing induced width 
doing get unique branch 
branches connected node repeat process pairs recursively get simple polytree 
simple polytree get simple tree just inverting arcs direction getting induced width greater 
step get simple sorted tree simple tree 
idea illustrated 
want sort labelled nodes start removing arc adding arc step 
remove arc add arc step 
note configuration induced width 
remove arc add arc step 
repeat steps nodes 
multi connected dag possible reach simple sorted tree 
opposite path clearly analogous go dag dag chain irreducible 
note constraints node degree maximum number edges dealt processes 
qed previous theorems obtain theorem markov chain generated algorithm ergodic unique stationary converges uniform distribution 
algorithm implemented quite efficiently computation induced width finding value np hard problem easy solution 
heuristics computing induced width high quality 
consequently change goal adopting constraints exact induced width assume user specifies step step step step basic moves obtain simple sorted tree 
procedure sequence 
current graph polytree repeat probability 
generate uniformly pair distinct nodes 
arc exist current graph add arc keep state 

current graph multi connected repeat probability 
generate uniformly pair distinct nodes 
arc exists current graph remove arc keep state 

new graph satisfies imposed constraints accept graph keep previous graph 
procedure maximum width particular heuristic 
call width heuristic width 
goal produce random dags space dags constraints heuristic width 
apparently algorithm obvious change lines check heuristic width induced width 
simple modification sufficient heuristic width usually computed local operations predict effect adding removing edges 
adapt lemma heuristic width general predict path dags fact followed chain violating heuristic width constraints 
create mechanism allow chain transit arbitrary dags regardless adopted heuristic 
solution add new type operation specified procedure procedure allows jumps arbitrary multi connected dags polytrees 
assume adopted heuristic dag polytree heuristic width equal induced width 
heuristic satisfy property heuristic easily modified test dag polytree return induced width polytree maximum number parents nodes 
procedure called probability line line algorithm 
complete algorithm understood sequence probabilistic transitions follow scheme 
previous theorems easily extended new situation substantially modified theorem 
transitions polytree multi connected dags performed probability transitions multi connected dags polytrees performed probability value control mixing rate chain observed remarkable insensitivity values 
polytree 
ar polytree accept reject polytree jump jump structure procedure polytree polytree algorithm modifications indicated efficiently implemented existing ordering heuristics resulting dags quite similar existing bayesian networks 
implemented algorithm log implementation minimum weight heuristic 
result package freely distributed gnu license www pmr poli usp br software 
example network generated depicted 
accepts specification number nodes maximum node degree maximum number edges maximum heuristic width minimum weight heuristic heuristics added 
software performs uniformity tests test 
tests performed relatively small number nodes number possible dags grows extremely quickly allowed test algorithm procedures 
observed relatively fast mixing chain transitions designed 

applications show previous results selected problems received analysis literature conclusive solution 
due lack space brief summary extensive tests 

connectivity node xq set nodes xe number nodes connected xq xe fundamental quantity bayesian networks 
quantity indicates variables requisite inference indicates large sensitivity analysis essentially controls complexity em algorithm learning networks eliminate redundant computations learning 
despite importance connectivity result literature indicating relationship heuristic width complexity network expected number nodes 
illustrate relationship investigated random networks 
took ensemble random networks medium number nodes heuristic width networks ones currently exact inference learning 
software uses facilities system including efficient implementation ordering heuristics www cs cmu edu 
bayesian network generated opened nodes maximum degree maximum induced width 
table average number connected nodes number nodes heuristic width hw 
hw network computed number connected nodes random queried variable varying number observed nodes 
considered situations nodes observed 
situations correspond typical queries bayesian networks situation corresponds typical inference em algorithm 
situation observed nodes intermediate case 
table presents results different sets networks different sizes heuristic width entry summarizes networks 
note interesting fact number connected nodes larger intermediate case decreasing cases 
note relatively large number connected nodes heuristic width nodes connected small number variables observed 

quasi random inferences section look behavior monte carlo methods associated quasi random numbers numbers form low discrepancy sequences numbers progressively cover space uniform manner 
quite successful applications quasi monte carlo methods integration low dimensional problems high dimensional problems conflicting evidence regarding performance quasi monte carlo methods 
positive example cheng druzdzel obtained results bayesian network inference importance sampling numbers 
little combining quasi random numbers gibbs sampling finding efficient methods open problem 
difficulty deleterious interaction correlations quasi random sequences markov chains 
liao applied quasi random numbers variance reduction gibbs sampler classical statistical models obtaining conclusive results randomly permuted quasi random sequences 
investigated question quasi random numbers affect standard table average mean square error multiplied importance sampling top gibbs sampling bottom 
imp 
samp 
pseudo quasi gibbs samp 
pseudo quasi importance sampling gibbs sampling algorithms bayesian networks 
importance sampling scheme derived dagum luby investigated networks sequences quasi random numbers :10.1.1.36.7946
summary investigation follows 
pseudo random numbers clearly better quasi random numbers medium sized networks gibbs sampling 
second pseudo random number small edge quasi random numbers importance sampling differences small 
fact hard find networks behave better quasi random importance sampling pseudo random importance sampling 
noted importance sampling gibbs sampling affected different ways observations predicted theory 
increase number observations importance sampling eventually turns worse option gibbs sampling results cheng druzdzel importance sampling algorithm displays notable degradation performance observations added figures 
illustrated table show mean square error defined sets networks various algorithms 
networks nodes heuristic width 
row shows mse different numbers observed nodes nodes 

loopy propagation loopy propagation algorithms iterative application pearl propagation algorithm multi connected graphs 
algorithms observed converge quickly correct answers 
fact little known convergence special cases 
existing analysis loopy propagation identified situations algorithm converge definite explanation lack convergence 
essential aspects networks presence logical nodes zero probability values 
pose question loopy propagation behave probabilities extreme perform inference large dense networks 
observed comprehensive exploration situations loopy propagation failed converge probabilities larger zero 
varied number nodes going nodes maximum heuristic width number values variables tried introduce somewhat extreme distributions networks forced loopy propagation oscillate 
large networks known exact algorithm succeed loopy propagation converged 
cases convergence led correct approximately correct values quality approximations excellent longer algorithm takes converge worst result 
illustrate interesting experiment random networks show relationship heuristic width number iterations convergence fixed family networks 
number nodes variables binary 
took complex networks sense heuristic width quite high 
absolute error just absolute value difference correct inference inference generated loopy propagation 
note absolute error number interactions convergence independent heuristic width 
expected notable randomly generated example phenomenon alarm network behave slightly better importance sampling pseudo random importance sampling results cheng druzdzel 
absolute error loopy propagation errors heuristic width loopy propagation convergence heuristic width error number iterations induced width test random networks bars indicate variance random networks 
dense network difficult loopy propagation converge loopy propagation incredibly robust respect 
absolute error considerably large tests 

believe best available solution generation random bayesian networks 
key idea generate dags constraints induced width generate distributions associated generated dag 
np hardness induced width resorted heuristic width width produced high quality heuristics available 
generate dags markov chains need guarantee heuristic width constraints leads reasonably complex transition scheme encoded algorithm procedure algorithm easily changed accommodate number constraints say constraints maximum number parents 
observed strategy produce realistic bayesian networks 
applications random networks 
investigated relationship induced width connectivity verifying number connected nodes tends large realistic networks 
quantity impacts inference algorithms sensitivity analysis learning algorithms em 
second confirmed comments literature suggest standard gibbs sampling profit quasi random samples straightforward importance sampling presents essentially behavior pseudo quasi random sampling medium sized networks 
third shown loopy propagation converges extraordinary regularity robustness distributions convergence algorithm affected complexity underlying networks 
carlos brito suggesting induced width robert pointing guy confirming initial thoughts nir friedman indicating generate distributions guo testing 
jaap suermondt tomas providing important ideas xiang smets dash santos ambrosio suggesting valuable procedures 
author supported 
third author supported hp labs responsible investigating loopy propagation hp labs establishing funding hp brazil managing 
received substantial generous support hp labs 
partially supported cnpq 
jian cheng druzdzel marek 
computational investigation low discrepancy sequences simulation algorithms bayesian networks 
craig boutilier moises goldszmidt editors proceedings th conference uncertainty artificial intelligence uai pages sf ca june july 
morgan kaufmann publishers 
coup linda van der gaag 
sensitivity analysis aid belief network quantification 
knowledge engineering review 
fabio cozman 
removing redundancy expectation maximization algorithm bayesian network learning 
nunes de barros roberto fabio cozman anna helena costa editors workshop probabilistic reasoning artificial intelligence pages paulo 
tec art 
paul dagum michael luby 
optimal approximation algorithm bayesian inference 
artificial intelligence 
rina dechter :10.1.1.1.7854
bucket elimination unifying framework probabilistic inference 
eric horvitz finn jensen editors proceedings th conference uncertainty artificial intelligence uai pages san francisco august 
morgan kaufmann publishers 
fang wang 
number theoretic methods statistics 
chapman hall new york 
ide cozman 
random generation bayesian networks 
proc 
xvi brazilian symposium artificial intelligence 
springer verlag 
jensen 
bayesian networks 
springer verlag new york 
kjaerulff 
triangulation graphs algorithms giving small total state space 
technical report department mathematics computer science aalborg university denmark march 
liao 
variance reduction gibbs sampler quasi random numbers 
journal computational graphical statistics september 
mceliece mackay cheng 
turbo decoding instance pearl belief propagation algorithm 
ieee journal selected areas communication csd 

random generation dags graph drawing 
technical report technical report ins dutch research center mathematical computer science cwi 
murphy weiss jordan 
loopy belief propagation approximate inference empirical study 
proceedings fifteenth conference uncertainty artificial intelligence pages 
harald 
random number generation quasi monte carlo methods volume cbms nsf regional conference series appl 
math 
siam philadelphia 
pearl 
probabilistic reasoning intelligent systems 
morgan kaufman 
sidney resnick 
adventures stochastic processes 
birkh user cambridge ma usa berlin germany basel switzerland 
robinson 
counting labeled acyclic digraphs 
harary editor new directions theory graphs pages michigan 
academic press 
ross 
stochastic processes 
john wiley sons new york ny 
peter spirtes clark glymour richard scheines 
causation prediction search second edition 
mit press 
michael jordan 
loopy belief propagation gibbs measures 
adnan darwiche nir friedman editors conference uncertainty artificial intelligence pages san francisco california 
morgan kaufmann 
yair weiss william freeman 
correctness belief propagation gaussian graphical models arbitrary topology 
technical report csd cs department uc berkeley 
xiang miller 
behaved algorithms simulating dependence structure bayesian networks 
international journal applied mathematics volume pages 
nevin zhang 
irrelevance parameter learning bayesian networks 
artificial intelligence 
