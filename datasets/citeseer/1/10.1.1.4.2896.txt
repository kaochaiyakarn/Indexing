self correcting broadcast distributed hash tables ali luc sameh el brand seif haridi royal institute technology kista sweden swedish institute computer science kista sweden seif kth se sameh sics se broadcast algorithms top distributed hash tables dhts perform group communication arbitrary queries 
group communication mechanisms embed extra information dhts random overlay networks algorithms take advantage structured dht overlay networks maintaining additional information 
proposed algorithms send redundant messages 
furthermore algorithms ensure coverage nodes system routing information outdated result dynamism network 
algorithm performs correction outdated routing table entries low cost correction traffic 
second algorithm exploits nature broadcasts extensively update erroneous routing information cost higher correction traffic 
algorithms validated evaluated stochastic distributed algorithms simulator 
key words distributed algorithms distributed hash tables group communication peer peer need making effective huge amount computing resources attached large scale networks internet established new field distributed computing area peer peer computing 
current trend new field builds idea distributed hash tables dht provide infrastructures scalable systems :10.1.1.111.1818:10.1.1.105.3673
infrastructure logical network called overlay network key value pairs stored 
main operation offered dht overlay networks lookup operation finding value associated key 
lookup operation perform arbitrary queries context dependent searches 
furthermore difficult large dht systems collect statistical information system system usage billing purposes 
partially funded information society technologies programme european commission emerging technologies ist project partially ppc project sweden broadcast algorithms distributed ary system dks solve mentioned problems 
choice dks motivated reasons 
dks systems contrast systems avoid periodic stabilization protocols maintaining routing information 
novel technique called correction serves correct outdated routing information thefly 
network bandwidth saved periods activity low 
second dks provides ability tune ratio routing table size maximum lookup length 
system configured large routing tables low maximum lookup length consequently making broadcasts faster 
contribution paved way doing broadcasts top structured networks chord system 
algorithm fails cover nodes routing information inconsistent natural case dynamic networks consequence nodes joining leaving 
broadcast algorithms deal routing table inconsistencies 
new broadcast algorithms guarantee coverage presence frequent network changes outdated routing information 
furthermore similar attempts nodes receive redundant messages :10.1.1.11.1973
furthermore extend dks philosophy avoiding periodic stabilization 
second broadcast algorithm exploits nature broadcast effectively correct outdated routing information cost extra local computation network traffic 
proposed algorithms perform multicast 
multicast group represented instance dks proposed broadcast algorithms disseminate multicast messages 
related classified extending dhts support arbitrary searches 
perspective research complex queries shares goal 
idea construct search indices enable performance database queries 
approach differs add extra indexing dht 
analysis cost construction maintenance performing database join operations available time writing 
broadcast special case multicast multicast solution developed dht provide broadcast functionality 
multicast solution require additional maintenance multicast group case broadcast large group containing nodes network 
example uses rendez vous node group disseminates messages help potential non members called forwarders multicast trees 
bootstrap node stores information group necessarily member :10.1.1.11.1973
additionally inherent redundancy messages coordinate space perfectly partitioned 
approach drawbacks avoided 
outline remaining organized follows 
section give overview dks systems 
section provides informal formal descriptions proposed algorithms 
section devoted validation evaluation algorithms 
section concludes 
dks overview sub sections dks systems 
focus main contributions generalization tune lookup length correction technique avoid periodic stabilization protocols maintaining routing information 
structure dks dks systems configured parameters lookup length guaranteed take logk hops network maximum size defined maximum number nodes simultaneously dks network chosen large node knows compute defined nodes keys system deterministically mapped identifier space globally known hash function identifier space circular space modulo key value pair physically stored node encountered ring moving clockwise direction starting key 
shall notation modulo identifier space represented interval form arbitrary note 
routing tables node addition storing key value pairs maintains routing table 
routing table consists logk levels 
logk set levels 
level node view identifier space defined vl kl means level view consists identifier space level th vl considered 
level view partitioned equally sized intervals denoted 
defined node kl node maintains responsible node interval routing table 
level ble interval il 
intervals responsible interval chosen node encountered moving clockwise direction starting interval 
shall function denote id responsible node interval addition storing routing table node maintains predecessor pointer node encountered moving counter clockwise direction starting important property dks system node joins leaves system predecessor successor explicitly updated fault free context 
rest nodes system find existence departure correction technique described section 
shows example dks network node point view 
note mapped modulo circle line node view 
lookups initiate search key identifier id node distributed lookup performed follows 
id predecessor key value pair stored resolved locally searches routing table level interval il vl id il 
lookup request forwarded ble node interval parameters piggy backed 
node receipt forwarded request checks key identifier id predecessor 
returns value associated id searches routing table level interval contains id lookup request forwarded responsible interval 
current level interval piggybacked forwarded request 
process repeats node storing key responsible node identifier network address stored communication established 
dks network nodes 
shows node views view partitioned equally sized intervals 
dark nodes represent responsible nodes node view 
node routing table showing interval responsible node 
node identifier joins network depicted 
node predecessor node immediately informed node existence 
continue erroneously consider node responsible node sends lookup message node node find node existence correction 
alternatively node aware node existence node sends lookup message node 
id case value associated id recursively sent back correction dks network routing information outdated result joining leaving nodes 
shows routing entries outdated result join operation 
outdated routing entries corrected 
long ratio lookups joins leaves failures high routing information eventually corrected 
essential assumption dks validated 
correction ideas 
idea embed level interval parameters lookup insertion message 
node receiving lookup insertion message node calculate start interval node responsible node predecessor interval node notifies node existence predecessor 
node update erroneous routing entry 
second idea message sent node node indication exists part dks network 
node examines intervals determine responsible intervals case routing information updated 
broadcast algorithms desired properties broadcast algorithms desirable properties coverage 
nodes system time broadcast operation starts receive broadcast message long remain system 
redundancy 
node receives broadcast message receives disregarding messages sent trough erroneous pointers trigger correction 
correction routing information 
broadcast algorithms contribute correction outdated routing information 
informal description basic principle broadcast algorithms follows 
node starting broadcast iterates levels starting level 
level node moves counter clockwise direction intervals broadcasting message responsible node 
broadcast message sent node carries parameters limit 
message purpose twofold 
delivers intended data receiving node 
second serves request receiving node receive data send bcast data receive bcast data limit kl predecessor deliver message application layer logk downto limit send bcast data limit limit fi od od send bcast data limit predecessor fi receive bcast data limit candidate logk downto candidate candidate candidate fi od od send candidate bcast data limit algorithm cover nodes interval limit 
node receiving broadcast message repeats mentioned process certain broadcast node limit 
illustrate principle proposed algorithms fully populated dks network considered 
broadcast initiated node proceeds level level 
level node sends broadcast message node giving responsibility cover interval 
repeats procedure giving node responsibility interval 
sending broadcast interval algorithm moves level repeating process intervals responsible nodes receiving message node repeat similar process go limits assigned 
example node send level intervals limit 
move level sending broadcast nodes responsible intervals formal description algorithms assume distributed system modeled set nodes communicating message passing communication network connected ii asynchronous iii reliable iv providing fifo communication 
distributed algorithm running node system described rules form receive sender receiver message arg arg action receive bcast data limit kl predecessor deliver message application layer logk downto limit send bcast data limit limit kl fi od od send bcast data limit predecessor fi subroutine logk downto fi od od return algorithm 
rules rules 
rule describes event receiving message message receiver node action taken handle event 
sender message executes statement send sender receiver message arg arg send message receiver 
algorithm broadcast algorithm 
rule describes reaction dks node receipt data application layer 
rule triggers rule parameters limit set initiating node id giving initiating node responsibility cover nodes system 
broadcast initiated algorithm proceeds level level 
level node iterates intervals sends message responsible node intervals 
avoid sending duplicate messages nodes responsible intervals message sent id responsible node interval checked 
due outdated routing table entries intervals nodes populated 
responsibility covering intervals delegated interval iteration 
done changing limit parameter interval 
improving correction routing information order improve correction outdated routing information extend algorithm self correction 
idea consists extending responsibility assigned experiment shows distance optimal network shows percentage correction messages node node cover preceeding intervals responsible nodes exist preceeding intervals aware trigger correction routing information corrected subroutine purpose 
second broadcast algorithm algorithm rule replaced rule shown 
simulation results section show preliminary simulation results broadcast algorithms 
metrics evaluation 
coverage redundancy correction cost distance optimal network 
coverage redundancy metrics calculated snapshot nodes overlay network initiation time broadcast 
simulator maintains counter node receiving broadcast message 
coverage calculated counting percentage nodes snapshot received broadcast message simulation 
redundancy computed counting number covered nodes received message 
correction cost defined percentage messages correction routing entries total number messages generated broadcast 
distance optimal network ratio number erroneous routing entries nodes total number routing entries system 
ratio equal routing information said optimal 
experiments conducted stochastic discrete distributed algorithms simulator developed team mozart programming platform 
results experiments 
purpose experiment test system dynamic setting evaluate performance algorithms mentioned metrics 
second experiment focused convergence minimal dis experiment shows convergence maximally optimal network performing broadcasts algorithm 
tance optimal network 
experiment 
dks network size created 
population nodes system considered variable took values 
value proceeded steps 
initialized system second nodes joined broadcasts initiated 
experiment repeated values 
high probability node initiated broadcast overlay network growing 
experiment 
dks network size created 
system initialized nodes 
arbitrary number broadcasts initiated 
experiment repeated values 
results 
experiments coverage redundancy respectively expected design 
distance optimal network 
observations 
values algorithm corrects routing information effectively algorithm 
second final distance optimal network mainly affected search arity population size 
see algorithm contrast algorithm effectively converges optimal network search arities 
correction cost 
shown correction cost general higher algorithm 
expected correction requires additional overhead 
algorithms broadcasting structured peer peer networks 
motivated reasons 
need extend distributed hash tables perform arbitrary queries retrieval global statistical information dhts 
second provide robust algorithms multicasting groups context dks overlay networks 
group formed creating specific dks instance 
proposed algorithms dks philosophy avoiding periodic stabilization maintain routing information 
second algorithm extends philosophy heavily correcting incorrect routing information 
addition broadcast algorithms provide full coverage nodes erroneous routing information 
furthermore broadcast message received new nodes join broadcasts place 
proposed algorithms validated evaluated dynamic network simulations obtained results confirm expectations 
precisely algorithm gives correction overhead larger distance optimal network compared algorithm 
el brand haridi 
dks family low communication scalable fault tolerant infrastructures applications 
rd international workshop global peer peer computing large scale distributed systems ccgrid tokyo japan may 
castro druschel 
kermarrec rowstron 
scribe large scale decentralised application level multicast infrastructure 
ieee journal selected areas communications jsac special issue network support multicast communications 
el brand haridi 
efficient broadcast structured 
nd international workshop peer peer systems iptps february 
harren hellerstein huebsch loo shenker stoica 
complex queries peer peer networks 
st workshop peer peer systems iptps 
maymounkov 
kademlia peerto peer information system xor metric 
st workshop peer peer systems iptps 
mozart consortium 
www mozart oz org 
ratnasamy francis handley karp shenker 
scalable content addressable network 
technical report tr berkeley ca 
ratnasamy handley karp shenker :10.1.1.11.1973
application level multicast content addressable networks 
third international workshop networked group communication ngc 
rowstron druschel 
pastry scalable decentralized object location routing large scale peer peer systems 
lecture notes computer science 
stoica ratnasamy shenker surana zhuang 
internet indirection infrastructure 
st workshop peerto peer systems iptps 
stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
acm sigcomm pages san ca august 
stoica morris karger kaashoek balakrishnan 
chord scalable peer peer lookup service internet applications 
technical report tr mit january 
zhao kubiatowicz joseph 
tapestry infrastructure fault tolerant widearea location routing 
berkeley technical report ucb csd april 
