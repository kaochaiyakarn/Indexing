ant load balancing telecommunications networks schoonderwoerd owen holland janet bruten leon rothkrantz hewlett packard laboratories bristol road gifford bristol bs qz united kingdom delft university technology bl delft netherlands university west england lane bristol bs qy united kingdom hpl hp com hollan csd uwe ac uk hpl hp com roth twi tudelft nl describes novel method achieving load balancing telecommunications networks 
simulated network models typical distribution calls nodes nodes carrying excess traffic congested causing calls lost 
addition calls network supports population simple mobile agents behaviours modelled trail laying abilities ants 
ants move network randomly chosen pairs nodes move deposit simulated pheromones function distance source node congestion encountered journey 
select path intermediate node distribution simulated pheromones node 
calls nodes routed function pheromone distributions intermediate node 
performance network measured proportion calls lost 
results ant control abc compared achieved fixed shortest path routes alternative algorithmically type mobile agent previously proposed network management 
abc system shown result fewer call failures methods exhibiting attractive features distributed control 
notion complex collective behaviour emerging behaviour relatively simple units interactions fundamental field artificial life 
growing understanding systems offers prospect creating artificial systems controlled emergent collective behaviour particular believe exploitation concept lead completely new approaches management distributed systems load balancing telecommunications networks 
load balancing 
economic commercial reasons networks equipped level equipment guarantee successful call connection possible circumstances lower level give acceptable performance conditions 
significant change conditions example total call volume time unusually high particular location suddenly origin destination unusually large volume calls capacity limitations lead system failing calls unable connected 
calls points typically routed number intermediate switching stations nodes large network possible routes call 
possible relieve actual potential local congestion routing calls parts network spare capacity 
load balancing essentially construction call routing schemes successfully distribute changing load system minimise lost calls 
course possible determine shortest routes node node network 
way average utilisation nodes minimised necessarily ideal way avoid node congestion traffic network distributed 
controlling distributed systems means single central controller disadvantages 
controller usually needs current knowledge entire system necessitating communication links part system controller 
central control mechanisms scale badly due rapid increase processing communication overheads system size 
failure controller lead failure complete system 
additional practical commercial requirement centrally controlled systems may need owned single authority 
nature distributed systems highly dynamic complex stochastic behaviour predicted explained reducing single central controllable factor 
decentralized control mechanism problems mentioned 
field artificial life inspiration mechanism completely distributed highly adaptive changes network traffic patterns 
solution distributed processing capability inherently network form network nodes 
distributed nature approach may system robust failures individual control entities 
approach inspired biologists studying social insects uncovered mechanisms controlling foraging behaviours ants beckers deneubourg goss deneubourg goss goss franks 
important method laying sensing trails pheromones specialised chemical substances laid amounts determined local circumstances local concentration subsequently directly influence ant choice route 
network model populated artificial ants trail laying principle node ant encounters journey destination leaves amount simulated pheromone function congestion node distance ant travelled source node ant selects node journey basis local pheromone distribution 
routing calls pheromone distributions 
compare method decentralised network control mechanism previous carried british telecom steward 
mobile agents computational processes moving node node gathering information making decisions rerouting basis minimum cost function 
approaches compared approach uses fixed non adaptive routing tables algorithmically optimised yield shortest paths 
network simulation investigate distributed control mechanisms application written simulate traffic patterns model switch telecommunications network 
network naturally represented undirected graph 
node graph corresponds switching station links nodes correspond communication channels 
node usually linked subset nodes usually geographical neighbours links intrinsically bidirectional 
network model graph nodes attributes node identifier 
capacity 
number simultaneous calls node handle 
routing table entries node network 
entry tells node node route destination node concerned 
probability node source destination call 
spare capacity 
percentage capacity available node 
links nodes assumed infinite capacity geographical distance linked nodes account 
node capacities bottlenecks network 
simulation time step simulation proceeds follows 
calls expired removed releasing capacity nodes 
calls generated traffic generator 
generated calls involve source node destination node duration measured time steps 
call generated route determined current routing tables call placed network reducing spare capacity node route 
spare capacity available node route call call fail 
expected number calls generated time step follows poisson distribution duration call exponential distribution 
source destination nodes randomly chosen function node probability node convenient reasonable 
test details node network topology chosen realistic structure possible switch network 
topology steward fact structure british synchronous digital hierarchy sdh network 
interconnection structure irregular mesh interesting traffic management complex difficult task 

network topology interconnection structure sdh network british telecom provides realistic network topology 
number parameters vary network model large 
implies arbitrary choices testing call set node model certain probability point call 
probabilities generated selection suitable distribution start run lie 
generation probabilities normalised sum 
capacity node calls call node increases utilisation decreases spare capacity node 
time step simulation average call generated average duration time steps 
means average number calls network traffic pattern built 
average length total number nodes shortest route nodes 
fixed shortest path routing tables calls capacity average nodes 
number nodes times capacity units average utilisation nodes 
facilitate seeing exactly going network simulation traffic network represented visually run time changing colour nodes indicate spare capacities 
large number features support visualisation usability added program displaying changes time particular route running simulation step step inspecting part network simu lation 
software written smalltalk running visualworks tm environment hewlett packard series workstation 
ants nature individual ants behaviourally unsophisticated insects 
limited memory exhibit individual behaviour appears large random component 
acting collective ants manage perform variety complicated tasks great reliability consistency 
examples collective behaviour observed species ants wilson franks regulating nest temperature limits forming bridges particular areas food building protecting nest sorting brood food items cooperating carrying large items colony complex patterns egg brood care finding shortest routes nest food source preferentially exploiting richest available food source 
behaviours emerge interactions large numbers individual ants environment 
cases principle stigmergy grass 
stigmergy form indirect communication environment 
insects ants typically produce specific actions response specific local environmental stimuli part execution central plan 
ant action changes local environment way affects specific stimuli influence subsequent actions ants location 
environmental change may take distinct forms 
physical characteristics may changed result carrying task related action digging hole adding ball mud growing structure 
subsequent perception changed environment may cause ant enlarge hole deposit ball mud top previous ball 
type stigmergy cumulative effects local task related changes guide growth complex structure 
type influence called wilson 
second form environment changed depositing direct contribution task solely influence subsequent behaviour task related 
sign stigmergy highly developed ants exclusively social insects variety highly specific volatile hormones pheromones provide sophisticated signalling system 
behaviours successfully simulated computer models stigmergy theraulaz bonabeau sign stigmergy franks robots beckers holland deneubourg russell 
type sign stigmergy network model 
way ants find short routes nest food source way select food 
visualworks trademark parcplace systems sources different value 
way ants organise routes inspired investigate new approach congestion avoidance telecommunications networks 
basic principles trail laying depending species ants may lay pheromone trails travelling nest food food nest travelling direction 
follow trails fidelity function trail strength variables 
ants drop pheromones walk stopping briefly touching carries pheromone gland ground 
strength trail lay function rate deposits amount deposit 
pheromones evaporate diffuse away strength trail encountered ant function original strength time trail laid 
trails consist superimposed trails different ants may laid different times composite trail strength sensed ants 
principles applied ants search food best explained example beckers 
ants decision illustrates possible routes nest food source 
initially ant arriving crossing choice point random decision probability turning left right 
suppose ants leaving nest looking food ants returning food source nest 
ants type niger deposits pheromones travelling nest 
ant pair turns left turns right situation occurs 
lines paths represent pheromone trails 
ants chose shorter branch arrived destination ones chose longer branch way 
ants initially select way probability branches pheromone paths 
pheromone higher probability ant choosing path higher pheromone concentration path ants travelled 
moment situation ants arrive choose paths choose shorter path concentration pheromone higher 
means amount pheromone shorter path reinforced 
way stronger pheromone trail arise shorter path path selected increasing proportion ants fewer ants choose longer path existing pheromone slowly evaporates trail longer path weaken eventually disappear 
nest food source 
situation moments essentially self organisation learning ants cope phenomenon looks overtraining reinforcement learning techniques 
main issues blocking problem shortcut problem sutton 
blocking problem occurs route previously ants longer available 
take relatively long time ants find new route 
shortcut problem occurs new shorter route suddenly available 
case new route easily old trails strong ants choose 
ant control abc network management trail laying behaviour applied telecommunications network 
overcome blocking problem shortcut problem 
section describes implemented artificial ant population network model 
details may schoonderwoerd 
pheromone tables replaced routing tables network nodes tables probabilities call pheromone tables pheromone strengths represented probabilities 
node pheromone table possible destination network table entry neighbour 
example node neighbours node network pheromone tables entries 
say node network uses different kinds pheromones 
entries tables probabilities influence ants selection node way destination node 
shows possible network configuration pheromone table 
example ants travelling node node probability choosing node node choosing node 
pheromone laying represented updating probabilities 
food source nest 
ants network management time step simulation ants launched node network 
ant random destination node 
ants move node node selecting node move probabilities pheromone tables destination node 
arriving node update probabilities node pheromone table entries corresponding source node ants lay kind pheromone associated node launched 
alter table increase probability pointing previous node 
ants reached destination die 
take example ant network launched node destination node just travelled node node 
ant alter node table corresponding node source node increasing probability selection node select node randomly probabilities table corresponding destination node node 
note just purpose illustration particular ant travelled ineffective route 
way ants moving away source node directly affect ants destination node 
trails bidirectional trail laying ants trail laid direction directly affect ants travelling direction 
ants directly influenced ant travelling source node destination node include travelling ants expected influence ants travelling ants travelling may strong influence ants subsequently travelling route effect ants travelling opposite route 
system may achieve similar effects biological bidirectional trail layers indirect form interaction 
way directly updating probabilities differs way ants lay pheromones functionally equivalent 
feel probabilities absolute pheromone quantities helps understand behaviour artificial ants better 
tables give probabilities alternative choices paths directly pheromones real ants basically code effectively converted probabilities ant nervous system 
method update probabilities quite simple ant arrives node entry pheromone table corresponding node ant just come increased formula pheromone tables node destination node node new probability dp probability pheromone increase 
entries table node decreased new values sum interpreted probabilities 
note probability reduced operation normalisation increase cell table reduction achieved multiplying factor probability approach zero cell cells increased times reach 
value dp absolute relative increase probability greater initially small probabilities larger 
effect weighting information ants coming nodes currently preferred route feature may assist rapid solution shortcut problem 
delaying ants primary requirement find simple methods encouraging ants find routes relatively short avoid nodes heavily congested 
methods 
dp value change pheromone tables reduce progressively age ant 
ant moves node time step age ant corresponds path length traced biases system respond strongly ants moved shorter trails 
second method depends delay ants nodes congested calls degree increases degree congestion 
delay complementary effects temporarily reduces flow rate ants congested node neighbours preventing ants affecting pheromone tables routing ants congested node allowing probabilities alternative choices increase rapidly 
ants older reach neighbouring nodes effect pheromone tables 
course possible achieve second effect increasing parameter representing age ant delaying ant essentially reduces effect pheromone tables ant passed congested node 
biological parallel species ants returning richer food source tend drop pheromone poor source beckers 
case network simulation combination delay age related penalty particularly effective 
added advantage formulation manipulation parameter relating delay degree congestion control relative weighting system gives preferring shortest route maximises spare capacity preferring congested route 
calls routed having explained ants choose routes network consider calls 
calls operate independently ants 
determine route call particu old dp dp old dp lar node destination largest probability pheromone table destination looked 
neighbour node corresponding probability node route destination 
route valid destination reached call placed network nodes route congested case call fails placed network 
way calls ants dynamically interact 
newly arriving calls influence load nodes influence ants means delay mechanism 
ants influence routes represented pheromone tables turn determine routing new calls 
relationships illustrated 
needs realise pheromone table individual ant influenced different table pheromone table updated ant 
load network time influences calls subsequently placed network calls fail course determines load stage 

relationship calls node utilisation pheromone tables ants 
arrow indicates direction influence initialisation network initialised random uniform entries pheromone tables initially contain useful information consistent non circular call routes routes 
little sense examine network performance phase 
absence calls network ants bias shortest paths 
mechanisms contributing shortest routes completed subsequently direct ants sourcing nodes 
shorter routes involve branching number ants travelling routes laying pheromones larger longer branched routes 
ants travelling shorter routes younger arrive exercise influence pheromone tables 
short time highest probabilities pheromone tables node define relatively short routes circular routes eliminated example time steps average route length typically minimum possible routes sufficiently short calls safely put network subsequent adaptation influenced congestion caused calls 
ant networks initialised equal probabilities neighbour nodes pheromone table allowed run fixed period calls applied 
routes individual new calls load nodes pheromone tables routes ants new calls arriving old calls expiring new calls failing new ants launched old ants dying due congestion noise far considered blocking problem shortcut problem 
need avoid freezing routes situations remain static long time suddenly change 
way doing adding exploration probability noise random walk ants ensure apparently useless routes occasionally information system give head start route blocked extreme node congestion node failure 
noise encourage rapid discovery better route suddenly appears 
convenient implementation arrange noise factor means time step ant probability choosing purely random path probability choosing path pheromone tables nodes 
possibly beneficial effects addition noise ant algorithms noted deneubourg simply tolerating certain degree error desirable deliberately add error little exists 
general framework ant control systems basic principles ant control abc systems applicable wide variety problems characterised follows ants regularly launched random destinations part system 
ants walk randomly probabilities pheromone tables particular destination 
ants update probabilities pheromone table location launched increasing probability selection previous location subsequent ants 
increase probabilities decreasing function age ant original probability 
probability increase function penalties rewards ant gathered way 
ants get delayed parts system heavily 
ants eventually penalised rewarded function local system utilisation 
avoid overtraining freezing pheromone trails noise added behaviour ants 
parameters large number parameters tune system choices experience variety previous simulations speed ants node simulation time step delayed particular node 
chose node launch ant random destination time step simulation 
probabilities updated explained section formula age stands number time steps passed launch ant delay time steps ant function spare capacity node initialisation period period ants initialise routes network traffic noise noise time steps 
give results simulations describe briefly distributed network management approach researchers british telecom 
compared abc method method fixed routing scheme 
mobile software agents different approach distributed control mechanism provided mobile agents developed researchers british telecom steward 
addition agents example routing scheme optimises routes network cost criterion 
implemented modified versions scheme network simulation model 
details may schoonderwoerd 
mobile agents approach species agents load management agents parent agents 
lowest level control provided load management agent 
agent launched particular node searches algorithmically better routes nodes network node launched 
parent agents provide second level control 
heuristics information gathered network parent agent decide network management certain locations needed relieve congestion launches load agents locations 
load management agent load agent launched particular node optimises routes nodes source node 
visiting node network recording current spare capacity routing tables 
investigated methods different kind load agent 
load agents find route minimum bottleneck maximise minimum spare capacity route bt 
second implemented version minimise sum squared node 
reason clear 
algorithm find new routes version dijkstra shortest path algorithm dijkstra 
criterion shortest path minimum spare capacity route original algorithm sum squared node version load agent 
algorithm load agent load agent minimum spare capacity route shortest path criterion works follows travelling network load agent distinction kinds nodes permanent temporary labelled nodes 
agent maintains lists records kinds nodes data fields dp age delay identifier node largest spare capacity route node agent source node 
route minimum spare capacity maximal 
neighbour node route 
goal load agent update routes node network agent source node 
having done agent finished terminates 
algorithm follows 
load agent launched node node sets flag load agent working 
agent starts creating permanent label source node spare capacity infinity contributor best route 
agent records nodes 
visits neighbour nodes create temporary records neighbour 
step spare capacities records equal spare capacities nodes 
entries routing tables nodes updated 
part initial step trivial node route source node source node 

step promote node temporary permanent 
temporary node largest spare capacity agent records 
agent goes node moves record list permanent nodes 
agent visits node neighbour nodes records creates temporary records 
records contributing neighbour newly promoted node spare capacity neighbour nodes spare capacity recorded newly promoted node 
routing tables updated node route source node new permanent node 
stage list temporary records consists temporary records step earlier steps 

temporary node largest spare capacity route source node visited permanent 
neighbours temporary routing tables updated agent ready promote node 
steps repeated agent visited nodes network 
point routing tables updated agent goes back starting node undo flag load agent working dies peace 
new routes load agent optimal routes information gathered agents route node network agents starting node maximised minimum spare capacity 
traffic patterns change agent working information gathered agent need accurately reflect situation moment routes guaranteed optimal 
note agent looks minimum spare capacities routes take spare capacities nodes route account 
temporary nodes labelled spare capacity available load agent arbitrary choice nodes promote 
difference original approach major difference approach bt changed direction routing tables updated 
steward load agents update routing tables direction source node direction newly visited nodes nodes route node source node 
way load agents may time updates routes node 
agents different data constant network changes suspected circular routes occur network 
early simulations observed circular routes 
changing direction updating occurs avoided problem 
lose possibly beneficial effect load agents update routes nodes network source node 
criterion shortest route improvement load agent storing total sum squared nodes route node agent source node largest spare capacity route 
node utilisation percentage node capacity occupied calls 
load agent promotes temporary nodes smallest sum squared node records 
case routing tables updated node promoted node temporary may possible find better solution node 
agent finishes soon nodes promoted 
reason chose different criterion shortest route observed relatively long routes simulations load agents maximise minimum spare capacity 
call long route occupies nodes additional demand network resources may cause subsequent calls fail load agents may amend route follow longer path 
improved algorithm counteracts spare capacities nodes route account leads shorter routes routes fewer nodes 
note squaring utilisation relative influence heavily utilised nodes increased 
parent agent level control network provided parent agents 
travel network launch load agents network management needed 
decision launch load agent basis information gathered set heuristic rules 
parent agent travels randomly network gather information nodes 
node agent visits records data fields traffic destination rate 
number calls node destination utilisation node 
destination rate history average destination rate visits node 
records global information stepping network utilisation history average node visited nodes 
number nodes visited far 
destination rate ranking table 
table contains ranking nodes destination rate history 
agent encounters node higher utilisation value agent utilisation history assumes traffic management needed 
ranking table tells agent node destination node calls 
traffic node cause network overload 
agent goes node launches load agent node got load agent working 
reaching node launching load agent parent agent continues cycle gathering information detecting new traffic management needed 
note parent agents look destination rate original mobile agents looked sourcing rate nodes 
due difference direction load agents update routing tables 
real networks parent agent programmed solve problems crashed load agents 
modelled simulation 
parameters ants space possible parameter settings large values simulations reported section best experience previous experiments speed agents basically speed ants time step simulation agent performs task current node moves node 
parent agent takes visits node account calculate destination rate history 
global utilisation history visits count calculation average utilisation 
destination ranking table size 
means table smaller parent agent gather information network number parent agents 
routing tables initialised length route number nodes route minimal 
results simulations simulation practical problems 
initial random selection call probabilities random generation calls random lengths calls variability runs high 
order overcome runs averaged run time consuming adequate number runs take prohibitively long time 
decided repeated measurements experimental design condition tested dataset reduction pairwise comparisons conditions yield information relatively small total number runs 
proceeded follows sets call probabilities generated method section 
set call probabilities generate call sequence lasting time steps 
call sequence split blocks time steps 
table 
generation call sequences adaptation test call probability set adaptation test run consisted adaptation period block test period block 
adaptation period load balancing system allowed adapt call statistics 
adaptation takes place complete time periods 
test period time steps recorded network performance terms call failures 
experiments performed fixed routing scheme load balancing mobile agents improved mobile agents explained section ants noise ants noise 
experimental design illustrated table results table 
order find extent results due dynamic actions load balancing system convergence set routing tables specific particular set call probabilities repeated experiments time routing tables method adaptation period stopped launching mobile agents ants 
results shown table 
interested load balancing systems deal sudden change call probabilities 
examined allowing system adapt adaptation block set call probabilities testing test block different set call probabilities 
table 
experimental design adaptation test table 
mean percentages experiments standard deviations call failures unchanging call probabilities mean standard dev 
load balancing fixed shortest routes original mobile agents improved mobile agents ants noise ants noise table 
mean percentages standard deviations call failures stopping load balancing unchanging call probabilities mean standard dev 
improved mobile agents ants noise ants noise experiments repeated time step call probabilities call patterns run changed call probabilities call patterns run experiments example adaptation block system tested block block 
experimental design illustrated table 
mean percentages call failures experiments experiments agents ants longer launched time step see table performed student test tailed related samples call failure data able pair observations derived call sequences test period 
paired 
differences significance level 
conditions improved mobile agents gave significantly better results original mobile agents 
ant experiments gave significant better results corresponding experiments improved mobile agents 
case unchanging call probabilities ants noise gave better results ants noise 
table 
experimental design adaptation test table 
mean percentages experiments standard deviations call failures changed call probabilities mean standard dev 
load balancing fixed shortest routes original mobile agents improved mobile agents ants noise ants noise table 
mean percentages standard deviations call failures stopping load balancing changing call probabilities mean standard dev 
improved mobile agents ants noise ants noise experiments ants gave significantly better results simulations changing call probabilities simulations changing call probabilities 
experiments ants agents significantly better experiments dynamic load balancing 
parent agents stopped launching load agents monitoring call failures started time step results simulations significantly calls fail experiments changing call probabilities 
stopping ants causes call failures leaving ants working 
situations unchanging call probabilities stopping ants produces better performance leaving kinds mobile agents working 
tell sufficient significance noise helping abc system quickly adapt new sets call probabilities 
illustrate performances different algorithms measured number call failures time steps run adaptation test periods unchanging probability conditions 
averages runs condition shown graph 
graphs represent situations continuous load balancing fourth represents load balancing 
graph ants noise depicted similar ants noise 

performances load balancing techniques unchanging call probabilities 
time call failures load balancing mobile agents improved agents ants noise time steps static solution dynamic adaptation interesting questions raised simulations node network control systems converging static set routing tables learned statistics network constantly adapting changing situations 
static set routing tables combine information network topology call distribution statistics routes sufficiently short avoid nodes congested particular call statistics 
think different forms adaptation possible adaptation network topology adaptation call probabilities nodes adaptation temporary situations caused randomness call patterns adaptation network topology 
speak adaptation network topology mean control system adapts distribution loads nodes arises consequence specific topology 
abc system system converges short paths initialisation mobile agents system initialised shortest paths 
due topology independent particular set call probabilities routing calls paths lead congestion certain nodes 
system adapt congestion changing pheromone tables 
adaptation distribution network loads response topology call probabilities possible get insight system arbitrary set call probabilities adapts topology 
insight obtained inspecting results experiments dynamic load balancing stopped time call probabilities changed 
useful adaptation control system relation topology factor left unchanged 
agents ants performance conditions better experiments fixed shortest path routing tables load balancing 
clearly see abc system performs better mobile agents call failures improved agents versus ant experiments indicates abc system adapts better load distribution caused topology 
adaptation call probabilities 
see method performs adapting combination topology call statistics consider results launching agents ants suddenly stopped call probabilities remain 
abc system performs better mobile agents call failures agents versus ant systems 
results better discussed involving adaptation network topology 
size difference gives indication influence call probabilities 
adaptation temporary situations 
performance ants agents adapting temporary situations indicated differences performance unchanging call probabilities conditions load balancing continued stopped 
situations ants launched time steps perform better launching stopped 
abc system adapted call probabilities topology routes changed frequently response temporary situations 
results improved performance take indicate ants dynamically adapting routes network temporary situations 
said agents fact sensitive temporary situations ants difference performance agent experiments relatively larger 
close observation network running simulation confirmed impression useful reaction temporary situations ants agents 
type systems appear capable types adaptation 
operation different components adaptation abc system may seen shows performance ants noise graph noise looks similar shown 
corresponding graphs mobile agents shown 
graphs scale 
comparing figures upper graph see call probabilities changed load balancing stopped types control system average better set routing tables fixed shortest paths determined load balancing technique 
illustrates adaptation network topology 
obvious soon call probabilities changed abc system starts producing increased number call failures system adapts new set call probabilities 
reaction mobile agent system changing call probabilities faster 
types control system graph situation continuous load balancing change call probabilities lies lower load balancing stopped 
indicates advantage systems comes continuous dynamic adaptation temporary situations 

performance ants noise 
average number call failures time steps plotted 
stopped launching ants change call probabilities change call probabilities continuous load balancing ants launching ants call failures time steps time 
performance improved mobile agents 
average number call failures time steps simulations plotted note standard deviations quite high situations call patterns changed load balancing stopped 
think due fact routing pheromone tables moment stopping agents ants partly adapted situation instant 
temporary situation relatively exceptional freezing tables yield static routing information 
hand temporary situation representative average situation producing acceptable results tables frozen 
abc system balance dynamic adaptation temporary situations finding static routes clearly adjusted manipulating delay function pheromone update function 
experiments fixed parameters empirical basis levels appeared give low levels call failures adaptation complete stopped launching agents change call probabilities change call probabilities continuous load balancing mobile agents launching load agents time call failures time steps systematically explore effects dynamics adaptation 
believe power abc comes fact system stores information current routes current alternative routes 
mobile agents representation alternative possibilities base routing decisions temporary situations limits capability adapt general average pattern node 
suspect mobile agents particular problem occurs recognised field network routing kelly making new routing decision temporary situation result longer route beneficial short period 
calls route put higher demand network resources may cause number subsequent calls lost 
demand node capacity increases traffic rerouted 
leads kind cascade effect 
way short term benefits outweighed longer term costs 
abc system naturally find balance adaptation short long time periods 
ants versus mobile software agents performance advantages section section ants number qualitative quantitative advantages mobile agents disadvantages 
consuming network resources 
ant hardly requires bandwidth network holds age source destination identifiers fact am ant 
mobile agents hold number relatively large tables require bandwidth ants 
property mobile agents bt load agents tend get launched load network increases re routing 
just moment want agents network congested calls 
contrast congestion dependent delay ants temporarily reduces ant traffic congested locations 
having said fewer mobile agents required ants 
numbers mobile agents order tens ants hundreds 
limits number agents 
principle limit number ants network ants interfere 
number load agents network limited 
load agent launched particular node launched agent finishes job interfere 
robustness 
malfunctioning system cause mobile process ant agent crash 
ant crashes significant effect performance algorithm 
load agent parent agent crashes affects launching load agents 
detected special measures taken restore damage 
ants considered simple mobile data elements processed node mobile computational processes problems occur due programmed ants 
individual ant small influence system damage caused corrupt ant limited 
load agent change routes source node cause damage state corrupted 
computational issues 
ants require computation nodes network mobile agents due extensive random generators 
control nodes need allocate space pheromone tables needed normal routing tables 
issues affect bandwidth switching capacity main concern 
bidirectional routes 
simulations ant controlled system route node tends time opposite direction 
probably due mechanism trail laying ants complementary source destination nodes mutually reinforce trails 
mobile agents property 
sight property disadvantageous load balancing believe significant difference small networks 
circular routes 
principle abc systems potential yield circular routes 
situation observed noise extremely high initialisation period short 
mobile agents implemented guaranteed result circular routes 
implemented completely decentralized adaptive control system telecommunications networks emergent collective behaviour arising interactions mobile objects modelled ants tables network nodes 
principles algorithm simple general 
believe general framework ant solutions capable solving load balancing problems large networks circuit switched packet switched 
know exactly statistical topological properties network influence ideal parameter settings 
shown tuning parameters hand lead balanced system 
balance obtained example emergent organisation 
individual ants remarkably simple resulting structures enable efficient resource telecommunications network 
identified possible types adaptation characteristics networks abc systems show capable performance types 
believe abc systems solve large variety optimisation problems distributing loads interconnected processors parallel machines managing interprocessor communication complex programs material flow production environments optimal routing integrated circuit boards organising public transport schemes 
investigation basic principles ant algorithm remains done 
far experiments enabled statements sufficiently supported statistics influence number ants simulations 
know exactly variations ants influence pheromones affect system effects size delays imposed ants 
choices relatively small number experiments 
useful investigate performance algorithm extremely large small networks large networks tell scaling small assist understanding basic processes algorithm 
intriguing possibility probabilistic routing calls 
routes calls proportion calls chosen largest probabilities pheromone tables randomly probabilities 
mechanism assumed natural ants useful laying anti pheromone 
ants directly decrease probabilities pheromone tables particular circumstances increase 
pheromone tables represent best routes contain information relative merits alternative possibilities goes wrong 
simulations far confined examining information dealing node congestion sudden node link failure restoration needs simulated examine abilities ants deal contingencies 
ability cope insertion new nodes links network extension topic interest 
extending ant algorithms situations telecoms networks nature increase understanding general abilities algorithms applications nature 
hope increase knowledge turn assist inform biologists studying social insects 
steward 

mobile software agents control telecommunications networks 
bt technology journal vol 

beckers deneubourg goss 
trails turns selection path ant niger 
theor 
biol 

beckers deneubourg goss 

modulation trail laying ant niger role collective selection food source 
ins 
behav 
press beckers holland deneubourg 

local actions global tasks stigmergy collective robotics 
brooks maes eds 
artificial life iv cambridge mit press 

deneubourg goss 

collective patterns decision making 
ethology ecology evolution 
deneubourg goss franks franks 

dynamics collective sorting robot ants ant robots 

meyer wilson eds animals animats proceedings international conference simulation adaptive behavior 
cambridge mit press 
thiel russell mackay sim 

odor sensing robot guidance 
int 
robotics research vol 
dijkstra 

note problems connexion graphs 
numerische mathematik vol 

franks 

army ants collective intelligence 
american scientist volume 
goss 
beckers deneubourg aron pasteels 

trail laying trail solve foraging problems ant colonies 
hughes ed 
nato series vol 
behavioral mechanisms food selection springer verlag 
grass 

la reconstruction du nid les coordinations inter chez sp 
la theorie de la interpretation des termites 
ins 
soc 
kelly 

clifford paterson lecture 
modelling communication networks 
proc 
soc 
lond 

wilson 

journey ants 
press harvard university press 
russell 

laying sensing odor markings strategy assisting mobile robot navigation tasks 
ieee robotics magazine september 
schoonderwoerd 

collective intelligence network control 
unpublished ir thesis delft university technology faculty technical informatics june 
franks 

path choice algorithm ants 
naturwissenschaften 
sutton 

reinforcement learning architectures animats 

meyer wilson eds animals animats proceedings international conference simulation adaptive behavior 
cambridge mit press 

theraulaz bonabeau 

coordination distributed building 
science 
wilson 

sociobiology press harvard university press 
