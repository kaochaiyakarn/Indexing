communication efficiency multi agent systems mary robotics institute carnegie mellon university cs cmu edu despite growing number multi agent software systems relatively physical systems adopted multi agent systems technology 
agents interact dynamic physical environment requirements shared virtual agents including need transfer information world interaction 
agent communication languages proven successful software multi agent systems incur overheads impractical infeasible transfer low level data 
real world systems typically employ application specific protocols transfer video audio sensory telemetry data 
protocols lack transparency portability formal agent communication languages consequently limited scalability 
propose augmenting capabilities current multi agent systems provide efficient transfer low level information allowing backchannels communication agents flexible protocols carefully principled way 
show extension yield significant performance increases communication efficiency discuss benefits incorporating backchannels search rescue robot system 
agents multi agent system mas able interact communicate 
usually requires common language agent communication language acl 
done developing acls declarative syntactically simple readable people 
kqml fipa acl widely acls multi agent systems 
languages successful facilitating communication coordination software agents variety domains including organizational decision making financial management aircraft maintenance 
approach interagent communication suited communication related negotiation transfer high level information significant overhead frequently proves drawback systems require transfer low level data systems stringent time bandwidth limits 
real robot systems typically fall categories 
may require transfer telemetry video audio sensory data high frequencies real time relatively slow wireless networks rf modems 
data transferred real robot systems tends relatively small messages telemetry commands large multimedia files streaming video 
overhead due acl significant small messages 
multimedia files ill suited transfer acls intermediary representation files compatible nourbakhsh robotics institute carnegie mellon university cs cmu edu katia sycara robotics institute carnegie mellon university katia cs cmu edu textual representation 
furthermore acls require ascii text messages results inflation message size plus additional processing 
consequently physical robot teams agent communication languages developed multi agent systems community 
typically ad hoc solution defining protocols specific system 
approach lacks semantic power transparency afforded language kqml allow robots various teams communicate 
robot community benefit adoption formal acl inside framework mas provided efficiency current approach hard coding various protocols significantly decreased 
adoption enable different robot systems communicate cooperate allow robots negotiate flow information provide increased transparency 
likewise mas community benefit efficient method transferring low level data media files particularly web cameras ubiquitous 
apparently opposing goals improving efficiency transfer media files small messages high frequencies preserving portability readability declarative nature agent communication language kqml 
propose tiered communication strategy augmenting current multi agent system architecture 
solution realizes goals uniting strengths acls methods robot community 
extension call backchannels implemented retsina mas uses kqml 
backchannel extension detail necessary supporting network drivers show significant analytical experimental performance improvements achieved backchannels relate successes approach search rescue robot system 
ii 
tiered communication current approach multi agent communication allow channel communication agents constrain communication language 
works software agents communicating high level information commitments negotiations efficiency paramount importance 
systems operating dynamic physical environment need send low level information telemetry video data 
low level communications fig 

shows current mas architecture 
illustrates backchannels augment current system backchannels replace current lines communication acl exist agents communicating acl level 
occur high frequencies clog main line communication 
extend current architecture allow multiple lines communication agents shown 
additional lines backchannels transfer low level information 
order preserve functionality elegance acl metainformation pertaining backchannels related acl level 
accordingly shown backchannels simplex sender denoted server receiver client evident acl level communication 
content messages sent backchannel likewise fixed agreed acl level 
backchannels resource facilitating transfer information negotiations regulation resource establishment backchannels frequency communication take place acl level 
explained backchannels replace current agent communication languages necessary communication heterogeneous agents transfer low level messages 
content meaning messages exchanged specified referencing user defined format description library 
entry library consists details parse message semantically meaningful description type format example video teleoperation imperatives applications may translator agent convert messages agent communication language human readable form transparency 
efficiency message format large impact performance explained analysis section protocols carefully designed 
purpose agent communication language facilitate communication agents multi agent system 
extending system architecture necessitates augmentation language communication acts relating extension 
accordingly acl support establishment flow control termination backchannels 
communication act description backchannel request request line type protocol message type number server name name implementation specifics accept request accept line type number server name name implementation specifics decline request decline line type number server name name reason details connection status connection status number server name name table communication acts support establishment backchannels establishing backchannel formation backchannel begins agent desiring send receive low level information agent 
initiator wishes sender server requests client line agent 
initiator wishes receive information acting client requests server line agent 
case request indicate type data transferred referencing format description library 
additional technical information relating establishment backchannel discussed network driver details section illustrated accompanies request 
communication acts necessary formation backchannel described table communication acts designed kqml easily adapted acls 
backchannels distinguished number unique server 
communication regarding particular backchannel specify server number 
line type may server line client line 
connection status status backchannel connection may requested accepted connected failed declined terminated 
implementation specifics tcp described network drivers section 
flow control backchannels backchannels simply means facilitating transfer information agents 
information transfer commodity consumes system resources negotiations regarding flow control backchannels necessary 
subject negotiation explained papers multi agent systems details 
examine communication acts specific backchannels supported acl 
necessary start stem flow messages regulate frequency transmissions repeat messages confirm connection status backchannel inquire respond total number transmissions sent 
communication communication act description transfer transmission start halt transfer number server name name repeat messages repeat number messages number server name name request frequency request frequency number server name name accept frequency accept frequency number server name name deny frequency deny frequency number server name name request total request num number number transmissions server name name report total tell num number number transmissions server name name table ii communication acts support control backchannels communication act description request termination request termination handshake method number server name name termination warning termination warning time warning method number server name name report termination connection terminated methods number server name name table iii communication acts support termination backchannels acts necessary flow control backchannels described table ii 
termination backchannels server client may initiator backchannel ability connection backchannel fall equally parties 
provide protocols termination various levels social 
support required acl method described table iii 
consider agents agent agent agent wishes terminate connection 
polite way sever line communication handshake method agent sends request agent acl connection 
agent closes tcp connection ready sends response acl alerting agent connection closed 
second protocol communication backchannel similar agent shaking head shaking hands 
warning method agent sends warnings acl line shut 
warnings sent seconds seconds 
time agent opportunity close tcp connection side notify agent connection closed 
time agent terminated connection agent terminates sends message notification agent 
final protocol cold shoulder method far friendly methods data may lost 
agent simply closes tcp connection notice 
message acl sent notifying agent connection closed 
independent protocol chosen insist message sent acl connection closed 
restriction termination protocols consistent rule handled acl level state connection apparent messages 
exception rule case agent intentionally terminates backchannel connection severed due physical loss communication agents 
occurs agents recognize connection terminated tcp level sends warning connection terminated 
protocol allow agents reopen closed backchannel reason new backchannel need established agents wish reestablish backchannel communication 
iii 
network driver details backchannels agent communication languages independent transport protocol implementation naturally depends heavily transport protocol 
section provides sample implementation details order demonstrate interleaving low level acl level communication 
specific implementation tcp low level transport protocol widely protocol real robot systems 
analysis experimental results assume tcp systems efficiency paramount importance udp may better alternative 
protocol establishing connection pair agents varies slightly depending initiator wants send receive information 
illustrate distinction consider agents initiator shown 
case agent wishes send information agent 
example agent may wish control agent teleoperation needs send commands 
case agent acts server agent client 
second case agent wishes receive information agent 
example relationship agent may want streaming video certain resolution agent 
agent client agent server 
step establishing tcp connection server open passive line port server agreement progress 
case initiator server consequently simplest 
agent server opens port connections sends message agent acl requesting permission set line send information agent perspective client line 
agent provides necessary information agent agent agent agent agent fig 

flowchart interleaved high low level communication establishment backchannel case agent wants agent client agent wants agent server 
messages sent acl boxes rounded edges 
connect available port number 
number unique number agent side referring particular channel communication 
agent specifies information sent line format descriptor library format descriptions 
agent accepts request opens client connection tcp declines optionally providing reason 
connection established agent notifies agent 
backchannel ready controlled communication agents acl 
protocol case initiator wishes receive information act client differs logistics 
complete description interactions agents initiator client refer 
iv 
analysis reasons believe backchannels improve system performance necessary define metrics 
important elements network performance bandwidth latency 
lead networking community analysis uses frequency directly related throughput latency metrics evaluating performance system 
equates bandwidth throughput system frequency message exchanges differences 
bandwidth transmission capacity network usually measured bits second 
throughput measurement real world data network bandwidth frequently due network traffic 
frequency describe number messages successfully transmitted time number bytes transmitted throughput 
frequency important multi agent system perspective maximum frequency khz effect backchannel maximum frequency wireless network backchannel backchannel useful message size bytes fig 

theoretical analysis maximum frequency messages sent mbps network assuming message content backchannels ignoring tcp effects 
number messages sent agents determines maximum number agents maximum rate information exchanged network 
network latency amount time takes packet travel source destination 
latency describe amount time takes message sent source processed destination 
latency interest systems real time constraints 
bandwidth latency partially properties network network uses phone lines lower bandwidth higher latency uses ethernet lines dependent size messages transmitted network 
theoretical analysis effect message size throughput latency illuminates fig 

modeled measured tcp latencies transfers university washington uc davis permission 
benefits efficient system propose 
analysis consider multi agent system composed identical agents sending messages 
bandwidth required system depend number agents frequency agent sending messages size message 
bandwidth number frequency message consumed agents size backchannel overhead sending messages significantly reduced 
consider case robot joystick 
interface agent wishes send left right wheel velocities robot agent 
system implemented urban search rescue multi agent system uses kqml message format tell sender agent receiver agent language default language ontology default ontology reply reply forward content alternatively message passed backchannel format description stating message characters long second characters interpreted left right wheel velocities respectively message bytes long opposed bytes required send information kqml 
hand setting backchannel controlling backchannel acl incurs overhead 
efficiency format description important 
frequency khz effect backchannel maximum frequency wireless network experimental results backchannel experimental results backchannel theoretical results backchannel theoretical results backchannel useful message size bytes fig 

measured theoretical effect backchannels maximum frequency remove dependency assume message content sent backchannel acl line overhead due purely non content overhead 
ignore fact large messages media files compressed means need encoded enlarged order transmitted ascii text incurring additional overhead uu encoding 
ignore tcp level overhead analysis 
latency studied networks researchers affects quality service network 
multi agent system particularly important real time domains small changes latency may mean difference success failure 
cardwell reproduced permission shows analytically empirically tcp latency increases message size 
example doubling message size bytes results nearly increase latency 
furthermore results indicate increased sensitivity latency message size smaller messages 
data suggests efficient protocols may significantly decrease latency system 
caveat latency system depends protocols algorithms 
nagle algorithm kernel buffers cause small messages accumulated packaged increasing latency 
experimental results augmented retsina multi agent system support backchannels discussed section 
conducted tests determine maximum frequency messages interchanged pair agents different networks 
results shown confirm claim backchannels lead significant savings small messages 
maximum frequencies observed mbps network match predicted results 
average latency ms effect backchannel latency backchannel wireless network backchannel wireless network useful message size bytes fig 

measured effect backchannels latency tests determine latency affected addition backchannel match theoretical results 
tests described measure tcp latency timed round trip includes time parse message 
total savings latency average wireless network implementation savings messages byte range significant benefit real time systems 
vi 
application search rescue robotics urban search rescue usar involves coordination people agents robots explore space environmental challenges including limited sporadic communication 
built heterogeneous set wheeled differential drive robots user interfaces allow robots explore mock disaster site 
order enable robots agents people retsina multi agent system architecture 
empirical testing system overhead kqml messages significant 
additionally sending real time video human operators done enormous cost retsina controlled outside architecture 
integrating backchannels retsina architecture stability reliability robot system improved significantly latency decreased throughput increased 
vii 
related discussion balance efficiency readability common networking community html mixed formats mime headers allow media types simple ascii text encoded message 
done improve speed transferring images multimedia 
contributed analysis throughput excellent resource information effect message size latency 
knowledge attempt integrate backchannels mas formal way 
mas community largely ignored importance throughput efficiency 
done develop real time multi agent systems focused higher level algorithms ignoring low level protocol potential benefits improving throughput 
viii 
arguments single line language agent communication inadequate systems require transfer multimedia files low level data high frequencies 
describe tiered communication architecture backchannels steps necessary integrate backchannels existing mas architectures principled way 
hope flexibility open multi agent systems physical agent systems helping bridge multi agent multi robot system research gap 
theoretical experimental tests show improved communication efficiency addition backchannels mas retsina enabled retsina urban search rescue multi robot system 
finin fritzson kqml agent communication language proceedings rd international conference information knowledge management november 
foundation intelligent physical agents 
online 
available www fipa org sycara decker williamson zeng distributed intelligent agents ieee expert december 
chalupsky electric agent technology supporting human organizations ai magazine summer 
decker sycara zeng designing multi agent portfolio management system proceedings aaai workshop internet information systems 
shehory sycara agent aided aircraft maintenance proceedings autonomous agents may pp 

sycara paolucci van retsina mas infrastructure special joint issue autonomous agents mas vol 
july 
li sycara review research literature bilateral negotiations carnegie mellon university robotics institute pittsburgh pa tech 
rep cmu ri tr nov 
zlotkin rosenschein negotiation task sharing autonomous agents cooperative domains proceedings eleventh international joint conference artificial intelligence pp 

cardwell savage anderson modeling tcp latency proceedings ieee infocom march 
harchol balter 
november quality service lectures 
online 
available www cs cmu edu srini wang lewis gennari usar game simulation teleoperation proceedings th annual meeting human factors ergonomics society denver oct 
nagle congestion control ip tcp internetworks network information center sri international menlo park ca rfc january 
kurose ross computer networking top approach featuring internet 
addison wesley july ch 
tcp congestion control 
temporal social reasoning dynamic multi agent systems proceedings fourth international conference multi agent systems icmas 
ieee computer society pp 

julian developing real time multi agent systems fourth workshop multi agent systems 
viii conference artificial intelligence november 
