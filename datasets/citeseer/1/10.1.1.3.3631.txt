flexible relation approach integrating data multiple possibly inconsistent databases agarwal arthur keller gio wiederhold krishna saraswat address problem dealing data inconsistencies integrating data sets derived multiple autonomous relational databases 
fundamental assumption classical relational model data consistent support provided dealing inconsistent data 
due limitation classical relational model semantics detecting representing manipulating inconsistent data explicitly encoded applications application developer 
propose flexible relational model extends classical relational model providing support inconsistent data 
flexible relation algebra provides semantics database operations presence potentially inconsistent data 
discuss issues raised query optimization data may inconsistent 
advances computer networking technology availability economical computing hardware led proliferation autonomous databases connected high speed communication networks 
result greatly increased access remote databases growing number database applications need jointly manipulate data located multidatabases litwin litwin breitbart sheth bright scheuermann 
component databases particular multidatabase autonomous tend heterogeneous respect 
distribution data databases arbitrary redundant possibly inconsistent 
development maintenance applications manipulate data multiple databases generally expensive difficult 
applications explicitly resolve heterogeneities especially inconsistencies data sets derived databases 
focuses problems manipulating data multiple autonomous databases may mutually inconsistent 
purposes assumed types heterogeneities hardware os network sql language variations resolved veneer individual database database presents relational interface 
definition consistency term inconsistency literature specific cases 
form inconsistency occurs tuples match key attribute values conflicting values non key attributes demichiel 
example birth date employee differs databases inconsistency 
notion conflicts tuples matching key attribute values implies inconsistency persistence software south boulevard suite san mateo ca 
mail persistence com 
done author stanford university 
communications regarding addressed 
stanford university computer science dept stanford ca 
stanford university electrical engg 
dept stanford ca 
lack conflict tuples guarantee data consistent 
approach addressing problems discussed ceri 
form inconsistency occurs error values primary key attributes 
detection inconsistencies difficult problem 
probabilistic reasoning approach detecting inconsistencies data associated non key attributes chatterjee 
consider type inconsistency tuples matching values primary key attributes conflict non key attribute values 
notion conflicting tuples formalized definition 
definition tuples tf tg associated relational schema entity identifying attribute set non entity identifying attribute set non conflicting denoted tf tg holds tf tg 
tf tg tf null tg null tf tg 
note form inconsistency imply just difference format scale data values tuples representing object conflicting data values corresponding attributes 
motivation relational databases expected consistent 
consistency database enforced storing data normalized non redundant manner date 
techniques developed maintaining consistency replicated data distributed databases bernstein gray traiger active area research wiederhold barbara 
point maintenance consistency centralized distributed relational databases considered crucial order able manipulate data relational paradigm 
premise tightly managed applications airline reservation automated teller systems banking industry necessary feasible non trivial maintain consistency tightly coupled databases feasible loosely coupled databases 
example consider case integrating data multiple autonomous databases store related data manufacturing facility 
databases operate independently long periods time easily inconsistent respect 
impractical enforce consistency databases additional semantics required jointly manipulating inconsistent data derived databases 
consider example data relations integrated 
relation represents data object set wafers semiconductor manufacturing facility 
attribute primary key attribute relations 
tuples inconsistent 
relation value attribute dia relations integrated 
tuple relation corresponding value 
suppose integrated view schema dia defined relations 
possible specification integrated view take union source relations 
materialized view shown 
dia dia materialized view tuples primary key attribute value 
resolved elimination duplicates tuples identical 
set tuples materialized view conform semantics classical relation 
consider problem manipulating data associated view pose query follows select dia classical relational semantics returns tuples 
dia result query classical relational query processing system semantics recognize fact data associated tuple inconsistent 
fact tuple may belong result actual value attribute 
loss information potential error user informed inconsistency 
option view definer try detect resolve inconsistencies integration 
problem due large amounts data stored typical databases detection database inconsistencies expensive proposition 
furthermore inconsistencies detected resolved time independent updates introduce new inconsistencies 
dealing inconsistencies classical relational framework open problem 
presents option 
proposes notion flexible relation addressing problems inconsistent data 
notion formalized defining flexible relational model extends classical relational model supporting representation inconsistent data providing extended semantics data manipulation operators presence inconsistent data 
basic motivation flexible relational model provide set semantics enable representation manipulation possibly inconsistent sets data retrieved multiple sources 
important objective semantics inconsistent data maximize information users 
presents discusses new issues raised processing optimizing queries environment data multiple sources potentially inconsistent 
flexible relational model basic data structure flexible relational model flexible relation 
section focuses definition flexible relation section considers semantics database operations flexible relations 
flexible relation derived relation 
schema data flexible relation derived classical relation boyce codd normal form 
flexible relation derived classical relation applying operator denoted 
operator takes classical relation input converts flexible relation 
schema resulting flexible relation derived extending schema input classical relation attributes cons sel src described section 
tuple classical relation converted tuple flexible relation 
appropriate values provided attributes flexible relation tuples 
definition flexible relation fr obtained applying operator classical relation schema entity identifying attribute set non entity identifying attribute set associated set tuples ti denoted fr schema cons sel src cons consistency status attribute sel selection status attribute src source attribute associated set tuples ti ti cons cons sel true src shown flexible relation derived null null derivation flexible relation 
fr cons null cons cons null cons sel true true true src classical relation extending schema attributes assigning values attributes tuples 
see section detailed description ancillary attributes 
classical relation definition consistent flexible relation derived single classical relation consistent 
data individually consistent flexible relations merged inconsistencies may arise 
notion cluple introduced order represent inconsistent data flexible relation 
cluples cluple defined cluster tuples tuples cluster match original entity identifying attribute values define object uniquely 
definition cluple schema cons sel src cluster tuples schema tuples match entity identifying attribute values tuples tp tq cluple tp tq 
flexible relation defined set cluples cluple represents data particular entity 
note cluple tuple set values attribute set context cluple primary key tuples concatenation attribute set attribute src 
tuple cluple unique value attribute src value refers original source relation tuple derived 
depending tuples associated cluple cluple may consistent inconsistent 
definition consistency tuples context classical relations earlier definition 
definition restated context flexible relations 
definition tuples tf tg associated cluple schema cons sel src attribute set non entity identifying attribute set cons sel src attributes non conflicting denoted tf tg holds tf null tg null tf tg 
note definition attributes considered determining consistency tuples 
fact value attribute cons determined evaluating consistency tuples associated cluple 
definition cluple consistent contains non conflicting pairs tuples 
formally cluple consistent pairs tuples cluple nonconflicting tf tg tf tg tf tg 
cluple containing tuple definition consistent 
equivalently cluple consistent attribute non null values agree 
null examples cluples 
null null consider cluples schema ignoring attributes entity identifying attribute non entity identifying attributes 
cluple inconsistent contains conflicting tuple pair 
hand cluple consistent non conflicting tuple pairs 
notion cluple enables representation inconsistent data 
merging data multiple sources deal problem incomplete missing information 
widely approach value null codd represent missing information 
different interpretations null values ansi chosen value null interpretation information zaniolo null place holder nonexistent unknown value 
attributes stated earlier addition user defined attributes schema flexible relation includes attributes cons ii sel iii src 
attributes instantiated application operator 
tuple flexible relation value attributes values managed system 
consider set source relations materialized flexible relation derived source relations 
null null source relations 
fr cons sel src null null cons cons true true true true true example materialized flexible relation 
interpretation data associated attributes discussed 
cons attribute cons refers consistency status cluple tuple belongs 
tuples associated particular cluple value attribute cons 
domain attribute values cons 
example cluple inconsistent cluple consistent 
sel attribute sel denotes selection status cluples result 
value attribute determined applying selection predicate data cluples 
similar previous case consistency status tuples cluple selection status value 
domain attribute sel consists values true false 
cluples value false attribute sel rejected results returned query cluples sel false 
process evaluating selection predicates cluples discussed section 
example selection restriction clause cluples selection status true 
src attribute src refers source relation particular tuple derived 
similar notion attribute locality defined gamal 
values refer source relations tuples derived 
case inconsistent data source information useful determining cause particular inconsistency subsequently resolution 
attributes provide information useful user detecting inconsistencies cons interpreting results respect selection status sel resolving inconsistencies source information src 
flexible relational algebra previous section notion flexible relation set cluples 
section semantics databases operations flexible relations 
factors complicating semantics operations possibility inconsistent data form inconsistent cluples 
intent semantics perform meaningful operations presence inconsistent data provide information possible enable user resolve inconsistency 
full algebra flexible relations defined agarwal 
due space limitations describe operations algebra 
operations flexible relations eventually translate operations cluples 
semantics operations relevant cluple processing defined section semantics extended operations flexible relations section 
cluple operations set cluple operations defined agarwal includes merging equivalence selection union cartesian product projection 
subsections consider cluple operations cartesian product projection 
merging merge operator merges tuples cluple single nested tuple referred merged cluple 
definition merged cluple obtained applying merge operator cluple tn schema cons sel src denoted 
tn tn cons cons cons 
tn cons sel sel sel 
tn sel src src src tn src 
merged cluple refined subsuming null values associated particular attribute non null value associated attribute zaniolo 
null ti null 
consider cluple attribute non attributes 
null null null null cons sel src true true true example cluple merged cluple obtained merging cluple null true attribute null value subsumed non null values attribute non null value associated null value 
discussed section merging operation useful determining equivalence cluples 
equivalence cluples instantiated different sets sources different selection conditions applied set sources may match key attribute values 
notion equivalence defined cluples values identifying attributes 
cluples associated particular schema defined equivalent merged cluples derived merging cluples equivalent 
form equivalence weaker requiring cluple set tuples 
definition merged cluples cp cq associated schema cons sel src considered equivalent denoted cp cq cp cq cp cq cp null cq null cp cons cq cons cp sel cq sel 
cases attribute associated value term cp cq implies set values associated cp set values associated cq 
note comparing merged cluples attribute src considered 
merged cluples considered equivalent match exactly attributes attribute src 
definition cluples cp cq schema cons sel src considered equivalent denoted cp cq merged form cluples equivalent cp cq 
selection classical relational algebra select operator determines selection status tuple selection condition 
condition specified means selection predicate 
definition classical relational schema simple predicate form op op op single value dom null dom refers domain attribute definition selection predicate conjunctive normal form cnf form pi pi predicate pi contains negation applies individual comparisons maier 
classical relations selection predicate tuple evaluates boolean answer true false tuple 
order apply selection predicate cluple selection predicate applied nested tuple obtained merging cluple semantics selection predicate defined definition adequate selecting nf tuples attribute associated exactly value 
merging inconsistent cluple nested tuple obtained 
extended set semantics specifying evaluating selection predicates nested tuples required 
consider example cluple 
null cons example cluple 
sel src true true true merged form cluple true order evaluate selection predicates nested tuple definition selection predicate extended allow conditions attributes may associated value 
example selection predicate cluple 
notion simple partial predicate introduced express semantics 
definition flexible relational schema cons sel src simple partial predicate form op op associated set values associated set values associated set values op single value dom null sets null values subsumed non null value set 
predicate op evaluates true false follows true op true 
false op true 
op true op false 
predicate op evaluates true false follows true op true 
false op true 
op true op false 
semantics information nulls zaniolo comparison null values evaluates false 
predicate op evaluates false attribute null null predicate op evaluates false attributes null 
selection predicate partial selection predicate simple predicates simple partial predicate 
selection predicate cluple example partial selection predicate attribute associated value 
status partial selection predicate determined status predicates 
logic evaluating status predicate consisting partial predicates defined truth tables 
truth tables valued logic 
tables stands true false 
symbols refer predicates 
definition partial predicate evaluation influenced similar notions selecting attributes may associated sets values 
valued logic defined truth tables valued logic identical results obtained previously context nulls unknown interpretation codd partial values demichiel 
notion partial value finite set values just special case null value represent entire domain particular attribute 
notion selection valued logic shown influenced efforts semantically quite different 
flexible relations attributes associated multiple values due data conflicts 
conflicts defined result violations functional dependencies 
example tuples corresponding schema dependency form inconsistent 
merged cluple represents information tuples 
tempting interpret set values set null partial value 
important note set values example conform interpretations 
set null partial value attribute corresponds set values true value attribute exactly values set 
set null partial value represent underconstrained system finite set values available known values real value 
hand set values represents fact values known true respective sources conflict merged data 
set represents constrained system different values believed true particular attribute tuple 
related set nulls partial values directly applicable important understand distinction 
value status attribute sel cluple selection status value predicate applied cluple 
result applying new selection predicate particular cluple denoted combined existing value attribute sel cluple logic defined 
note value sel may change result selection operation 
selection operation cluple associated schema denoted selection predicate results new cluple follows cons cons sel sel src src 
described selection predicate cluple evaluate true false 
try understand meaning selection 
selection cluple implies selection predicate evaluates true data cluple data cluple selection predicate evaluates false 
situation arises inconsistency cluple selection predicate attributes associated conflicting data 
cluple selection predicate evaluates attributes predicate associated conflicting data 
union union operation combines tuples source cluples form new cluple 
operation meaningful source cluples represent data entity union compatible form 
flexible relational algebra union operator applied applying selection operator source cluples 
consider cluple selected application selection predicate 
cons sel src cons true null cons true selected cluple 
consider cluple selected application selection predicate 
cons cons sel true src selected cluple 
union evaluating predicate results cluple shown 
cons sel src null selected cluple 
source cluples selection status true result selection status 
severe problem application selection operator union operation may result elimination cluples logically belong final result cluples eliminated source relations may required part answer 
situation arises possibility inconsistencies source cluples 
discussed section obviously significant implications respect strategies optimizing flexible relation query expressions 
union operation valid cases selection operator applied source cluples 
note cases attribute sel value true definition definition 
semantics union operator formalized definition 
definition union cluples associated schema cons sel src denoted tuple 
consistency resulting cluple denoted attribute cons evaluated union operation 
source cluples independently consistent possible union cluples inconsistent 
attribute sel value true assumed selection predicate applied cluple 
tuple result cluple retains source value value attribute src 
consider cluples 
cons sel src null cons cons true true null cons null cons cons sel true true src example cluples 
union cluples shown 
null null null cons sel src true true true true cluple 
cluple consistent union cluples inconsistent 
flexible relation operations defined earlier materialized flexible relation set cluples 
cluple flexible relation consistent flexible relation reduces classical relation 
flexible relation associated inconsistent cluples extended semantics required operate relations 
previous section semantics operations cluples operands defined 
section defines semantics operations flexible relations 
semantics fully compatible classical relational algebra semantics 
order differentiate extended operator symbols classical relational operator symbol marked denote flexible relational operator 
example symbol denotes flexible union operator 
membership notion membership defined determining cluple member particular flexible relation fr 
definition cluple member flexible relation fr exists cluple flexible relation fr equivalent 
definition formalized follows fr fr 
union consider source flexible relations frf frg set entity identifying attributes set non entity identifying attributes 
flexible relation may contain types cluples consistent inconsistent 
result union operation frf frg frf cg cg frg cg frg cf cf frf cf cf cg cf frf cg frg cf cg cf cg 
union mutually consistent classical relations tuples match key attributes duplicates 
case set duplicate tuples replaced single tuple 
case flexible relations tuples cluples derived different source relations may duplicates fact inconsistent semantics combine cluples form new cluple 
selection cluples consistent inconsistent selection status false eliminated result 
result selection flexible relation divided sets cluples denoted true respectively 
true result selection operation fr selection predicate fr true 
result selection operation fr selection predicate fr 
flexible relation query optimization section optimization flexible relational queries considered 
possibility presence inconsistent data materialized flexible relation raises new issues optimizing flexible relation queries 
focus rules pushing selection union flexible relations 
pushing selection union flexible relations fr fr fr fr order investigate validity rule cases cover possibilities considered 
case fr fr disjoint flexible relations fr fr disjoint cluple fr merged cluple fr 
union source relations result formation new cluples 
selection pushed source flexible relation losing cluples part rule valid case 
case ii fr fr disjoint consistent 
case may cluples fr match cluples fr key attribute values 
cluples individually consistent consistent 
new inconsistent cluples created union relations fr fr 
consider example flexible relations fr fr contain overlapping consistent data 
fr fr null null null null null null null null consistent flexible relations 
consider query fr fr selection predicate 
result obtained pushing selection shown 
null fr fr null null null null null cons sel src cons cons cons true true true fr fr fr cons cons true true fr fr result pushing selections consistent flexible relations 
result pushing selections source relations shown 
fr fr cons sel cons true src fr result pushing selections consistent flexible relations 
cluples completely lost cluples incomplete selection condition applied null value subsumed non null values 
rule valid case source relations disjoint consistent 
case iii fr fr disjoint consistent 
case source relations fr fr may inconsistent new inconsistencies may result union relations 
consider example flexible relations fr fr mutually inconsistent 
fr null fr inconsistent flexible relations 
similar previous case consider query fr fr selection predicate 
result obtained pushing selection shown 
fr fr null cons cons cons sel true true src fr fr fr fr result pushing selections inconsistent flexible relations 
result pushing selections source relations shown 
fr fr cons sel src cons true fr result pushing selections inconsistent flexible relations 
incomplete set results obtained pushing selection operator 
tuples missing cluple cluple completely eliminated result 
rule valid case source relations disjoint consistent 
strategies pushing selection unions shown previous section rule pushing selections unions flexible relations form valid case relations disjoint 
simplest potentially expensive solution push selections materializing flexible relations source relations cases 
solution discussed notion reduction operation source relations analogous semi join operation enable efficient execution queries unions flexible relations 
rest section semantics reduction operations cases ii iii defined discussed 
fr fr disjoint consistent case ii consider example relations fr fr 
problem pushing selections case presence null values source relations 
null values result selection predicate evaluating false 
example cluple selected source relations value attributes selection predicate null attribute relation fr attribute relation fr cluple 
possible reduction operation retrieve cluples source relations applying selection conditions selection predicate attribute non null value 
applying selection predicate cluple relation fr condition applied cluple 
condition applied attribute null value 
set cluples obtained applying reduction operation source relations merging results shown 
null null null null null null null cons sel src cons cons cons true true true fr fr fr cons cons cons true true true fr fr fr result reduction operation 
note tuple null fr rejected predicate evaluates false tuple 
final result obtained applying original selection predicate intermediate result shown 
cons sel src null null null null null null cons cons cons cons cons true true true true true fr fr fr fr fr result applying original selection predicate 
shown tuple null selected reduction operation satisfy original selection predicate rejected final result 
algorithm summarized steps 
apply reduction operation source relation 
union results obtained step 
apply original selection predicate result step obtain final result 
extra tuples may retrieved reduction operation operation expected efficient compared materializing entire flexible relation applying selection predicate 
fr fr disjoint consistent case iii consider example relations fr fr 
problem losing cluples null values previous case problem inconsistent data 
example selection predicate evaluates false cluples fr fr evaluation status predicate cluple formed union cluples 
case possible reduction operation source relations select cluple source relations satisfies conditions selection predicate 
selection predicate form pi selection predicate pi applied source relations reduction operation 
similar previous case original selection predicate applied result reduction operation determine final result 
selection predicate weak selects cluples may belong final result 
final selection operation removes extraneous cluples result 
problem incomplete cluples 
cluples result set may complete sense source relations may contain cluples attribute set matches corresponding attribute set cluple result result set 
cluples retrieved merged respective cluples result 
source relations queried retrieve related cluples 
algorithm summarized steps 
requires accesses source relations 
convert 
perform query source access 
merge data different sources 
perform query merged data 
determine set entity identifiers result 
source determine list entity identifiers result step received source 
fetch cluples corresponding lists source relations access 
merge cluples obtained previous step step intermediate result step reapply selection predicate obtain final result 
note set sources usually possible distinguish cases ii iii priori 
necessary access source relations twice processing query 
presence inconsistencies source relations raises new issues flexible relation query optimization 
application techniques developed context classical relation query optimization flexible relation case expected yield desired results 
new strategies similar proposed need considered optimizing flexible relation queries 
discussion motivated need deal inconsistencies manipulating data sets autonomous databases 
fundamental assumption classical relational model databases consistent provide support dealing inconsistencies 
view definition mechanisms developed context classical relations difficult define maintain integrated views presence inconsistent data 
noted earlier difficult impossible detect resolve inconsistencies defining views 
semantics detecting representing manipulating inconsistent data encoded applications 
flexible relational model proposed provides support dealing inconsistent data 
model enables definition integrated views relations may inconsistent 
notion cluples enables representation sets inconsistent data obtained materializing view 
flexible relational algebra provides set semantics database operations presence inconsistent data 
flexible relational model provides semantics detecting representing manipulating inconsistent data derived multiple source relations 
issues related optimizing flexible relation queries presence inconsistent data considered section 
issues reflect difficulty faced application developer manipulating data presence inconsistent data 
flexible relation model currently notion query optimization presence inconsistent data 
issues considered application developer encoding applications autonomous database environment 
practice ignored poor performance system viewed weakness relational database technology 
flexible relational model serves framework discovering addressing problems manipulating data located distributed possibly inconsistent databases 
acknowledgments referees improvements suggested marianne help preparation 
portions research funded advanced research projects agency texas instruments project semiconductor research src mc national science foundation iri 
agarwal agarwal flexible relation model data distributed autonomous heterogeneous databases ph thesis department electrical engineering stanford university june 
barbara barbara garcia molina demarcation protocol technique maintaining arithmetic constraints distributed database systems cs tr princeton university april 
bernstein bernstein goodman concurrency control distributed database systems acm computing surveys vol 

breitbart breitbart garcia molina litwin roussopoulos rusinkiewicz thompson wiederhold final report workshop multidatabases semantic interoperability tulsa oklahoma november 
bright bright hurson taxonomy current issues multidatabase systems computer pp 
march 
ceri ceri distributed databases principles systems mcgraw hill new york 
ceri ceri keller samarati independent updates incremental agreement replicated databases computer science technical report stan cs stanford university october 
chatterjee chatterjee segev data manipulation heterogeneous databases sigmod record vol 
december 
codd codd extending database relational model capture meaning acm transactions database systems vol 
pp 

date date database systems vol 
addison wesley reading ma 
demichiel demichiel resolving database incompatibility approach performing relational operations mismatched domains ieee transactions knowledge data engineering vol 
december 
gamal gamal thomas elmasri integrating relational databases support updates proceedings international symposium databases parallel distributed systems austin texas pp 

gray gray transaction concept virtues limitations seventh vldb cannes 
keller keller wilkins extended relational model handle changing incomplete information ieee transactions software engineering se pp 
july 
litwin litwin nicolas multidatabase language information sciences pp 

litwin litwin mark roussopoulos interoperability multiple autonomous databases acm computing surveys vol september 
maier maier theory relational databases computer science press 
transaction atomicity presence network partitions ieee data engineering conference los angeles february 
scheuermann scheuermann chong role query processing multidatabase systems edbt cambridge england 
sheth sheth larson federated database systems managing distributed heterogeneous autonomous databases acm computing surveys vol 
september 
traiger traiger transactions consistency distributed database management systems acm transactions database systems vol 

wiederhold wiederhold qian consistency control replicated data federated databases proceedings workshop management replicated data pp 
houston november 
zaniolo zaniolo database relations null values journal computer system sciences pp 

