greedy edge disjoint paths complete graphs paz thomas okamoto department computer science ben gurion university israel 
cs bgu ac il computer engineering networks laboratory department information technology electrical engineering eth rich switzerland 
tik ee ethz ch institute theoretical computer science department computer science eth rich switzerland 
inf ethz ch 
maximum edge disjoint paths problem medp classical np hard problems 
study approximation ratio simple practical approximation algorithm shortest greedy algorithm sga medp complete graphs 
previously known ratio 
adapting results scheideler proceedings soda pp 
show sga achieves approximation ratio medp undirected graphs flow number approximation ratio complete graphs 
furthermore construct family instances shows sga better approximation algorithm 
upper lower bounds hold bounded length greedy algorithm simple line algorithm medp 
keywords approximation algorithm greedy algorithm shortening lemma 
maximum edge disjoint paths problem medp classical np hard problems 
real world problems concerning efficient operation communication networks lead problems modeled medp 
instance medp pair undirected connected graph multiset unordered pairs vertices element called request 
paths called edge disjoint common edge 
consider problem connecting requests possible edge disjoint paths 
feasible solution instance supported berlin rich joint graduate program combinatorics geometry computation financed eth rich german science foundation dfg swiss national science foundation contract eu thematic network ii ist funding swiss federal office education science 
longer version available technical report :10.1.1.3.1658
paz thomas okamoto table 
results approximation ratio medp complete graphs 
approximation ratio algorithm contributors sga bga sga scheideler bga sga medp pair subset set edge disjoint paths request connected unique path task maximize size denoted 
note feasible solution 
request called accepted belongs known medp np hard input graphs restricted complete graphs interested finding approximation algorithms medp 
algorithm medp called approximation algorithm runs polynomial time outputs feasible solution instance satisfies opt opt number accepted requests optimal solution 
value called approximation ratio 
refer background information edge disjoint paths problems results approximability medp general undirected directed graphs 
mainly interested medp complete graphs 
table shows known new results approximation ratio medp complete graphs 
approximation algorithm constant approximation ratio 
algorithm divide vertex set parts divide requests parts rij consists requests ends vi vi vj 
solve problem requests restricted rij certain procedure independently take best solution 
call algorithm algorithm precisely describe algorithm 
important say showed algorithm approximation algorithm 
greedy algorithms appear simplest algorithms medp 
greedy algorithm consider called bounded length greedy algorithm bga 
takes parameter accepts request routed path length 
length path defined number edges path 
formally algorithm processes requests order greedily accepts request routed path length edge disjoint paths previously accepted requests 
rejects request 
bga introduced kleinberg 
note bga process requests arbitrary order online algorithm process request knowledge requests 
greedy edge disjoint paths complete graphs scheideler invented new network parameter called flow number showed bga parameter approximation algorithm unsplittable flow problem generalization medp explained section 
discovered shortening lemma nicely obtain bound 
see complete graphs flow number 
result implies approximation algorithm 
adapt analysis medp prove shortening lemma bga parameter approximation algorithm undirected graphs flow number shows bga approximation algorithm complete graphs 
variant greedy algorithms shortest path greedy algorithm sga 
algorithm starts repeats step request left connected path si ti request shortest path si ti minimum length requests ties broken arbitrarily accept si ti assign si ti assign path remove si ti delete edges words algorithm greedily accepts request connected shortest possible path disjoint paths previously accepted requests 
algorithm stein 
note sga line algorithm considers remaining requests step 
clear approximation ratio sga bga 
see consider arbitrary instance medp bga process requests order requests accepted sga order sga accepts requests rejected sga arbitrary order 
bga accept requests accepted sga paths length paths 
assume bga routes accepted requests paths sga 
solution produced bga larger value sga requests processed order 
upper bounds approximation ratio bga hold sga 
particular obtain sga approximation algorithm complete graphs 
worthwhile say best previous bound approximation ratio sga complete graphs 
obtain bound terms maximum multiplicity maximum number copies request instance denoted max show max upper bound approximation ratio sga 
get theorem 
theorem 
bounded length greedy algorithm approximation algorithm maximum edge disjoint paths problem complete graphs 
shortest path greedy algorithm min max approximation algorithm 
paz thomas okamoto consider lower bounds approximation ratio bga sga 
construct family instances medp complete graphs implies sga better approximation algorithm 
course lower bound applies bga 
organization follows 
prove upper bounds theorem section construct instances give lower bounds section additional remarks stated section 
notation set reals denoted ir set nonnegative reals denoted ir 
path denoted vl 
vl consecutive vertices path length path number edges denoted length 
paths represents set edges common 
means edge disjoint 
upper bounds section give better upper bound approximation ratio bga sga medp complete graphs 
subsection review framework scheideler particular flow number shortening lemma see result implies better bound 
yields bga parameter approximation algorithm medp complete graphs 
second subsection consider improvement 
show bga approximation algorithm medp graphs flow number approximation algorithm medp complete graphs 
bounds bga hold sga give bound sga depending maximum multiplicity requests 
gives proof main theorem theorem 
flow number complete graphs scheideler studied unsplittable flow problem ufp gave improved approximation ratio flow number network shortening lemma 
going review results 
ufp generalization medp 
undirected graph function ir 
number associated edge called capacity multiset requests medp 
functions ir ir associated request called demand profit respectively 
summarize instance ufp tuple consisting undirected graph multiset requests capacity demand profit feasible solution instance ufp pair subset set paths necessarily edge disjoint request greedy edge disjoint paths complete graphs connected unique path edge sum demands requests connected paths going exceed capacity edge request called accepted belongs task maximize total profit accepted requests 
medp special case ufp 
appreciate set ufp np hard problem contains medp special case 
define approximation algorithm ufp 
previous section just defined approximation algorithms medp 
algorithm ufp called approximation algorithm runs polynomial time outputs feasible solution instance satisfies opt opt total profit accepted requests optimal solution 
say approximation ratio similarly case medp 
note definitions consistent medp 
formulate ufp integer programming problem usual combinatorial optimization 
introduce kinds variables 
means xi request accepted xi accepted 
pi pi set paths connect request variable represents request accepted path pi 
formulation ufp integer programming ip ufp maximize xi subject pi pi xi xi pi 
formulation ip ufp easy understand exponentially variables 
obtain formulation polynomial size network flow problem edge variables path variables 
see example 
relax constraints replace xi 
obtain linear programming problem called multicommodity flow problem denoted lp ufp 
variant multicommodity flow problem called concurrent multicommodity flow problem 
concurrent multicommodity flow problem paz thomas okamoto defined follows maximize subject pi pi xi xi xj xi pi 
feasible solution concurrent multicommodity flow problem xi forced constraint 
problem represents situation forced accept fraction requests want know large fraction 
note feasible solution concurrent multicommodity flow problem feasible solution multicommodity flow problem lp ufp converse true 
define flow number network 
network pair undirected graph capacity function ir 
network 
consider instance concurrent multicommodity flow problem constructed follows 
set requests consists unordered pairs vertices 
demand ir defined 
instance concurrent multicommodity flow problem 
feasible solution instance concurrent multicommodity flow problem define parameters dilation congestion 
dilation length longest flow path max length congestion inverse objective value flow number network defined min max feasible solution 
easy determine flow number complete graph unit capacity 
lemma 
complete graph ir 
proof 
clear 
see note consists request demand edge means route demand request direct edge resulting solution dilation congestion 
greedy edge disjoint paths complete graphs invoking flow number scheideler derived interesting statements 
called shortening lemma lemma shortening lemma 
instance concurrent multicommodity flow problem graph flow number 
feasible solution objective value exists feasible solution objective value lemma conclude corollary 
corollary 
feasible solution instance ufp profit equal demand transform solution feasible solution corresponding instance multicommodity flow problem uses paths length objective value half original 
proof 
instance ufp feasible solution set xi consider instance concurrent multicommodity flow problem 
set xi xi pi feasible solution objective value 
apply shortening lemma 
get feasible solution objective value dilation forms feasible solution instance multicommodity flow problem corresponding original instance ufp shows objective value half large original solution dilation corollary scheideler showed bga approximation algorithm ufp networks flow number provided profit request equal demand maximum demand minimum capacity algorithm processes requests order non increasing profits 
conditions satisfied medp flow number complete graphs unit capacity lemma immediately obtain bga sga approximation algorithm medp complete graphs 
subsection derive better bound 
approximation algorithm show sga approximation algorithm medp complete graphs 
notice medp special case ufp setting refine analysis scheideler ufp obtain better bound medp 
theorem 
bounded length greedy algorithm parameter shortest path greedy algorithm approximation algorithm maximum edge disjoint paths problem undirected graphs flow number paz thomas okamoto proof 
set accepted requests set paths obtained bga respectively 
set accepted requests optimal solution 
corollary exists feasible solution corresponding multicommodity flow problem objective value 
notice proof corollary shows pi holds set paths satisfying 
take path 
note length definition bga 
length constraint lp ufp 
divide parts follows request connected belong 
claim 
path exists path common edge 
proof claim 
consider contrary 
request connected path length consisting edges path uses 
bga accepted request 
contradiction 
analyze approximation ratio 
claim get 
hand pi 
gives opt objective value pi 
shown approximation ratio 
lemma theorem immediately obtain corollary 
corollary 
bounded length greedy algorithm parameter shortest path greedy algorithm approximation algorithm maximum edge disjoint paths problem complete graphs 
greedy edge disjoint paths complete graphs consider multiplicities requests 
request copies say multiplicity 
define max maximum multiplicities requests risk confusion denote simply max 
set requests neglecting multiplicities copy unique request 
proof lemma straightforward 
lemma 
maximum edge disjoint paths problem complete graphs multiset requests shortest path greedy algorithm gives solution request accepted connected path length just edge 
exists optimal solution property 

max obvious upper bound 
bounds opt 
shows opt max max 
combining analysis corollary obtain theorem 
lower bounds previous section shown sga min max approximation algorithm 
question tight analysis 
want construct tight example bound maximum multiplicity 
unfortunately know instance achieves bound 
construct instances medp complete graphs show non trivial lower bounds approximation ratio sga bga 
max achieves ratio 
second arbitrarily large max achieves ratio arbitrarily small 
lower bounds apply sga bga 
case max subsection construct instance medp complete graphs max sga approximation ratio 
example vertices requests 
optimal solution accepts requests sga may return set requests 
ratio 
vertex set 
set consists requests 
note max 
lemma output sga optimal solution accept request corresponding edge 

remove requests remove corresponding edges 
procedure results situation shown left 
see optimal solution accepts remaining requests 
consider sga 
situation left remaining requests connected paths length 
assume sga accepts paz thomas okamoto fig 

situation removing requests paths 

requests edges left shown right 
see path 
sga accepts requests approximation ratio instance 
better approximation subsection construct family instances medp complete graphs sga approximation ratio arbitrarily small 
consider complete graph vertices large parameter divisible satisfies vv va vb vc vertex set vv 
va 
vb 
vc 

set requests rv ra rb rc follows rv contains requests vi vi 
total requests 
ra contains requests ai ai 
total requests 
rb rc consist requests constructed way ra 
observe optimal solution accept requests 
requests vi vi accepted routing direct edge vi vi routing paths length vertices vi vi 
vertices va vb vc 
copy requests ra rb rc accepted direct edge 
remaining copies requests ra accepted paths length intermediate vertices vb rb paths length intermediate vertices vc rc paths length intermediate vertices va note remaining copies request ra rb rc vertices va vb vc 
choice greedy edge disjoint paths complete graphs number available candidates intermediate vertices sufficient 
optimal solution accepts kn requests 
consider output sga 
algorithm accepts requests shortest path length 
accepted requests vi vi 
ai ai 
bi bi 
ci ci 

algorithm accepts requests shortest path length 
consider remaining requests 
assume accepted paths vi 

manner 
assume requests aj aj accepted paths aj vi aj 

requests ra accepted 
similarly assume remaining requests rb rc accepted 
internal vertices paths length 
requests ra rb rc accepted edges 
vertices va vb vc accepted paths 
vertices va vb vc intermediate vertices paths requests rv 
consider requests rv 
remaining requests accepted vertices vv 
vv sga accept requests 
total requests sga accepted requests 
consider requests 
accepted vertices vv 
reason sga accept requests 
total requests sga accepts requests 
continuing way high low indices sga accepts requests requests vi vi 

algorithm terminates edges subgraph induced vv exhausted 
sga accepts kn requests total 

approximation ratio kn kn get desired 

studied approximation ratio achieved simple practical algorithms sga bga medp complete graphs 
previously upper bound ratio sga shown non trivial lower paz thomas okamoto bound known algorithms 
proved bga sga approximation algorithms complete graphs better approximation algorithms 
substantially reduced gap upper lower bounds approximation ratio algorithms 
gap remains interesting discover exact worstcase approximation ratio algorithms 
medp complete graphs np hard known problem apx hard 
possibility polynomial time approximation scheme obtained 
medp general undirected graphs known apx hard trees rings 
inapproximability problem considered better approximation algorithms 
authors grateful anonymous referees comments earlier version 

okamoto greedy edge disjoint paths complete graphs 
tik report computer engineering networks laboratory tik eth rich february 

chekuri khanna edge disjoint paths revisited 
proceedings th annual acm siam symposium discrete algorithms soda 

approximation algorithms complexity results path problems trees rings 
tik report computer engineering networks laboratory tik eth rich june 

new results path problems generalized stars complete graphs brick wall graphs 
proceedings th international symposium fundamentals computation theory fct lecture notes computer science 

garey johnson computers intractability guide theory np completeness 
freeman new york san francisco 

garg vazirani yannakakis primal dual approximation algorithms integral flow multicut trees 
algorithmica 

guruswami khanna rajaraman shepherd yannakakis nearoptimal hardness results approximation algorithms edge disjoint paths related problems 
proceedings st annual acm symposium theory computing stoc 

kleinberg approximation algorithms disjoint paths problems 
ph thesis department electrical engineering computer science massachusetts institute technology 

stein approximating disjoint path problems greedy algorithms packing integer programs 
proceedings th integer programming combinatorial optimization conference ipco vi lecture notes computer science 

scheideler improved bounds unsplittable flow problem 
proceedings th annual acm siam symposium discrete algorithms soda 
