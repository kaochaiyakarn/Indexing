exponential red stabilizing aqm scheme low high speed tcp protocols shao liu tamer bas ar srikant uiuc edu control csl uiuc edu uiuc edu introduces analyzes decentralized network congestion control algorithm dynamic adaptations user ends link ends called general primal dual algorithm 
give sufficient conditions local stability algorithm general topology network heterogeneous round trip delays 
implementation algorithm internet introduce aqm active queue management scheme called exponential red red shown outperform red inherently stable combined tcp reno variants high speed networks 
keywords congestion control primal algorithm dual algorithm primal dual algorithm tcp red 
flurry research activity decentralized network congestion control algorithms 
widely framework introduced associate utility function flow maximize aggregate system utility function subject link capacity constraints optimization problem known kelly system problem 
congestion control schemes viewed decentralized source router algorithms drive system operating point optimum solution maximization problem 
congestion control schemes divided classes primal algorithms dual algorithms primal dual algorithms 
primal algorithms users adapt source rates dynamically route prices links select static law determine link prices directly arrival rates links 
dual algorithms hand links adapt link prices dynamically link rates users select static law determine source rates directly route prices source parameters 
comprehensive survey algorithms see 
earlier version appeared proceedings nd ieee conference decision control see 
research supported nsf itr ccr darpa afosr uri 
department electrical computer engineering coordinated science laboratory university illinois west main street urbana il usa 
modified primal algorithm called avq active virtual queue algorithm introduced 
link prices original primal algorithm slowly adjusted asymptotically time link prices equal lagrange multipliers kelly system problem 
importantly presence feedback delays parameters algorithm chosen network locally stable 
main benefit algorithm achieves arbitrary fairness users leads full link utilization 
idea adopted modify dual algorithm form new algorithm slow adaptation sources shown yield benefits avq algorithm 
modified primal algorithms modified dual algorithms dynamic adaptations sources routers primal dual sense 
algorithms primal family relate network congestion measure directly link aggregate rate corresponds averaging feedback network sources algorithms dual family relate source rate directly route congestion measure corresponds averaging source rates links feedback explicit congestion information sources 
briefly review developments identify role allocating resource fairly network competing users 
introduce new class algorithms primal dual type feature dynamic adaptations user ends link ends 
provide design guidelines stabilize algorithms general topology networks heterogeneous feedback delays 
class algorithms source dynamics similar primal algorithm link dynamics similar dual algorithm 
specifically approach introduced obtain local stability result shows stability depend source adaptation speed depends link adaptation speed 
result dual algorithm limiting case source adaptation speed approaches infinity 
stability analysis general primal dual algorithm show red random early detection stabilize tcp reno modified slightly 
modification red sets packet marking probability exponential function length virtual queue capacity slightly smaller link capacity 
due exponential marking profile call red exponential red 
analysis shown red stabilizes tcp reno packet loss mark variations 
compared aqm algorithms red blue pi red router algorithm proved stabilize tcp reno general topology network heterogeneous delays :10.1.1.128.5092
perform ns matlab simulations compare red red discuss dependence red performance network scenario red parameter choices 
simulation results show red outperforms red sense stabilize tcp reno achieve higher bandwidth utilization lower queueing delay time 
simulation results show red works highspeed tcp scalable tcp 
ii 
overview prior suppose set users routes set links resources user route involves set links subset denoted lr 
link may routes accordingly write lr 
user associated flow rate xr utility function ur xr 
furthermore link associated link aggregate rate yl xr fixed capacity cl introduce source rates column vector xr link rate column vector yl routing matrix relationship ax 
impose standard conditions user utility function ur xr increasing strictly concave continuously differentiable xr range xr assume utilities additive aggregate utility system ur xr 
called system problem introduced context kelly concave programming problem max subject cl column vector 
lagrangian system problem ur xr pl cl yl pl lagrange multiplier associated link multiplier shadow price link algorithms summarizes link congestion information 
associate user aggregate route price qr defined qr pl introduce link price column vector pl route price column vector qr 
noting ax lagrangian rewritten ur xr 
kuhn tucker theorem nonlinear programming solves exists pair constitutes saddle point function maximizer minimizer 
making natural assumption constraint set empty bounded compact strict concavity aggregate utility function leads existence unique optimal solution 
guarantees existence existence uniqueness determines uniqueness full row rank uniquely determined unique 
suppressing hat pair saddle point equilibrium xr qr pl cl yl pl cl yl 
primal algorithm issue importance driven theoretical practical considerations distributed computation realistic decentralized information available individual users 
congestion control problem deals precisely tasks finding algorithms decentralized selecting best performance 
users adapt xr respect qr links adapt pl respect yl 
tcp algorithms user adaptation laws aqm algorithms link adaptation laws 
logarithmic utility function ur xr wr log xr kelly introduced primal algorithm user implements algorithm kr scaling factor step size 
link computes price xr kr wr pl fl yl fl 
incorporating delay algorithm kelly shown primal algorithm globally stable 
consider propagation delay neglect queueing delay treating delay constant relationships yl qr xr lr pl lr lr forward delay source link lr backward delay link back source round trip delay tr lr lr denote laplace transforms respectively define routing matrix delay frequency domain relationships primal algorithm delay user exp lr 
diag str xr kr wr xr tr qr 
link pl fl yl 
presence delays proof global stability general framework elusive 
conditions local stability conjectured proved extended 
note link price computation primal algorithm static 
algorithm called avq algorithm introduced users choose dynamic adaptation links pl function yl virtual queue capacity cl time varying link parameter 
global stability algorithm shown delay local stability shown presence feedback delays 
dual algorithm dual algorithm introduced employs algorithms link user ends links adaptation parameter 
chosen cl users pl yl cl xr xr qr qr 
dual algorithm special case dual algorithm 
derived special case logarithmic utility functions 
dual algorithm global stability proved local stability proved particular choice utility functions 
restriction choice utility functions means arbitrary relative fairness users achieved algorithm 
time scale decomposition idea track arbitrary utility function dual algorithm modified introducing slow time scale dynamics user 
words xr xr qr slowly adjusted source parameter just virtual queue capacity cl avq algorithms 
ensures dual algorithm allocate network resources fairly 
primal dual algorithm primal algorithms dual algorithms dynamics user primal algorithm link dual algorithm static adaptation 
current internet tcp dynamic source algorithm aqm algorithms red vegas relate price queue length queueing delay dynamic link algorithms 
motivates primal dual algorithms directly relate xr qr pl yl 
mentioned solves system problem exists saddle point 
approach optimization problem game theoretical point view gain player controls loss player controls maximizer minimizer player zero sum game unique saddle point reach unique saddle point equilibrium choose iterative algorithms dynamic adaptations players 
simplest algorithm gradient algorithm xr kr xr kr xr qr pl pl yl cl 
algorithms considered regarded primal dual algorithms sense xr depends qr pl depends yl 
algorithm equilibrium yl xr qr cl pl cl pl equilibrium point solves system problem exactly 
passivity approach show global stability equilibrium considering delay 
section embed algorithm general class primal dual algorithms general class establish local stability presence delay 
remarks link model stated aqm algorithms choose marking probability function queue length 
intuitive choose pl function queue length bl function aggregate link arrival rate yl 
model chosen dual primal dual approaches 
primal approach pl chosen function yl 
mean measure link arrival rate queue length compute marking probability 
general answer stochastic disturbances network 
kelly argues queue length hits zero times round trip time marking queue length source acts marking probability function stochastically averaged version queue length 
deterministic model congestion control source sees price pl static function yl 
conditions queue length hits zero provided 
shown parameters popular aqm schemes determine queue length hits zero frequently 
specifically queue length capacity scaled proportion number users network marking probability queue length divided number users network get queue model queue length hits zero frequently get rate model 
primal dual algorithm considered assumes aqm parameters chosen queue length hit zero frequently 
wish low queueing delay suggests aqm algorithm primal dual algorithm analysis adjust marking probability occupancy virtual queue capacity slightly smaller real link capacity 
maintain large virtual queue length small real queue length 
discuss sections 
iii 
general primal dual algorithm local analysis primal dual algorithm specific far interpreted tcp aqm combi nation 
introduce general primal dual algorithm source law includes current versions tcp special cases link law includes current aqm algorithms special cases 
define max general primal dual algorithm xr fr xr xr qr fr xr gl pl positive continuous functions 
global stability delay xr pl gl pl yl cl immediately follows equilibrium point general primal dual algorithm solves system problem exactly 
passivity approach show general primal dual algorithm delay globally asymptotically stable gas 
define introduce hr xr jl pl xr xr pl pl ur xr fr ur vl pl gl vl pl du dv hr xr jl pl verified lyapunov function system determined leads gas 
definitions hr xr jl pl suggested correspondence wen third author different context 
local stability analysis delay presence feedback delay generalize xr fr xr xr tr xr qr xr pl gl pl yl cl slightly abusing notation allow fr function xr xr tr 
proceed local analysis linearizing algorithm equilibrium values comment boundary conditions constant delay assumption system modelling 
users restrict user set active user set ra xr 
user larger possible value qr willing join system xr 
links restrict link set active link set la pl consider bottleneck links 
sets ra la affect local analysis rest assume ra la boundary conditions ignored 
assume queueing delay neglected compared propagation delay round trip time taken constant 
reasonable assumption assumes router uses virtual queue compute link prices 
linearize 
equilibrium point qr xr 
linearization gives xr fr xr xr qr fr fr xr xr 
note equation rest slightly abusing notation xr qr yl pl represent perturbations equilibrium values xr qr yl pl respectively 
laplace domain solving xr fru xr xr xr fr fru xr qr qr xr str note ur xr concave xr 
link dynamics linearization yields laplace domain pl xr 
pl gl pl yl pl gl pl yl 
return ratio closed loop feedback system notice rewrite diag diag tr xr xr re str str re str str str gl pl diag 
diag gl pl 
leads theorem stability proof appendix 
theorem iii 
closed loop system described locally asymptotically stable equilibrium point ar positive constant 
qr ar xr gl pl pl min cl 
condition satisfied general class utility functions introduced 
example ur xr form wr log xr logarithmic utility function ar 
ur xr form wr nr power utility function order nr ar nr 

general primal dual algorithm requires control gain router inversely proportional maximum round trip delay source router 
relaxation condition local stability avq algorithm requires gain router inversely proportional maximum round trip delay network 

theorem iii lemma vii see local stability depends link price adaptation speed gl pl user utility function ur xr source rate adaptation speed fr xr xr tr 
adapt source rate infinitely fast choosing fr letting arrive dual algorithm 
stability dual algorithm depends link adaptation speed user utility function 
gl pl fixed cl dual algorithm utility function specified 
allow arbitrary utility functions add slow adaptation source choose different gl pl 
interesting observation analysis slow adaptation source necessary dual algorithm stable achieve full utilization arbitrary fairness 
dual algorithm stabilized slow adaptation links local stability result depend fr xr 
iv 
implementation internet modification tcp red current internet source law tcp link law aqm scheme droptail red 
wish little changes current protocols possible achieve guaranteed stability better performance 
section utilize local stability analysis primal dual algorithm modify tcp red combination locally stable 
general form tcp consider general form tcp introduced contains possible tcp variants 
wr represent window size source suppose window size increases ir unmarked decreases dr marked nr ir dr constants nr positive ir dr integers 
note choice ir dr corresponds tcp reno nr standard version choice ir dr corresponds scalable tcp 
window adaptation written differential equation form wr xr tr ir dr qr 
note implicit assumption qr sufficiently small distinguish qr 
assumption widely accepted modelling tcp 
source rate xr wr tr xr xr tr tr mrt ir ir nrt dr dr qr nrt dr xr tr xdr nr xir dr ir dr comparing source law primal dual algorithm fr xr xr tr dr tr dr fr nr dr xr nr ir dr ir dr qr dr xr xr ir dr xr xr dr ir qr ar xr dr ir particular tcp reno highspeed tcp correspond power utility function order ar scalable tcp corresponds utility function ar 
red exponential red theorem iii know stabilize window adaptation source law tcp family link dynamic adaptation satisfy tml maxr tr 
consider link dynamics pl gl pl pl pl cl yl cl pl 
satisfies stability condition implemented easily setting packet marking probability link price pl exponential function queue length bl pl bl cl bl bl bl bl bl queue length thresholds exponential marking selected pmin marking threshold bl pmax denote marking probability bl pmin pmax 
call marking scheme red 
note form similar fair dual algorithm 
source control laws static fair dual algorithm stability conditions different ones 
tcp aqm scheme prices pl qr expressed terms marking probabilities pl qr represent prices marking probabilities 
price feedback pl qr linear 
feedback linear qr pl 
notice pl qr sufficiently small approximate 
subsection assume small probability condition holds subsequently subsection iv consider stability issue general case 
linear feedback pl qr theorem iii condition guarantees local stability red combined window adaptation source law tcp family 
note red simply uses different marking profile red employs virtual queue 
red average queue length red marking probability linear function average queue length 
red take marking probability exponential function average value virtual queue length 
call enhancement red aq original red averaging red iq iq stands instantaneous queue length 
enhancement marking equation bl rl rl exponentially weighted moving average bl samples taken seconds 
rl lbl weight 
continuous approximation log laplace domain dynamics red aq yields rl rl bl yl pl pl rl cl equilibrium rl linearization equation yields laplace domain pl pl cl pl pl cl rl yl 
combining source algorithm logarithmic power utility function red aq loop function tr diag re xr str tr str pl diag cl tr diag re xr str str str pl diag cl leads theorem stability condition source algorithm red aq theorem iv 
closed loop system composed source algorithm red aq locally ically stable equilibrium ar positive constant 
proof see appendix 
min qr ar xr ltr min ar theorem suggests red aq requires slower adaptation speed red iq 
decreases decreases need decrease adaptation speed sources choose tcp reno source law ar condition simplified tml small tml red aq choose adaptation speed red iq 
decreases comparable tml need choose slower adaptation speed accordingly 

slow link adaptation queue length large 
maintain small queue length need implement red algorithm virtual queue capacity cl lcl link utilization parameter 
bl queue length virtual queue large bl maintaining small real queue 
probabilistic feedback subsection show exact probabilistic feedback local stability results hold 
introduce pseudo price variables vr zl defined leads linearized relationship vr log qr zl log pl vr zl lr 
column vectors vr zl respectively laplace transforms 
relationship similar diag str 
comparing noticing red gl pl cl see loop function red iq red aq combined form diag xr fr qr str pl diag gl cl 
pl stability results build fact spectral radius matrix diag yl diag xr bounded select parameters cross real line right 
stability condition obtained generalized nyquist criterion 
probabilistic feedback relationship xr xr qr fr qr xr qr fr qr vr vr xr fr qr vr qr qr zl zl pl pl new loop function form pl pl pl pl gl yl diag xr qr fr qr str pl pl diag gl cl 
probabilistic feedback law stability conditions price feedback law pl xr qr prove spectral radius matrix diag pl diag cl qr bounded 
xr cl just need show pl pl qr qr theorem iv 
inequality holds stability results linear price feedback case hold probabilistic feedback 
proof see appendix 
simulations implemented red algorithm ns package performed simulations network sources tcp reno routers choose red iq red aq red 
local stability condition red tcp reno 
sources ecn capable set maximum window maximum window threshold flow rate scenarios 
sources send packets identical size bytes including ip tcp header 
red choose parameters pmin pmax corresponds red iq corresponds red aq compute pmin pmax simulations section consider network single bottleneck link multiple flows shown fig 

users internet fluid model sense number users large choose sufficiently large number users simulations 
vary values dn obtain different network configurations 
parameter settings set buffer limit max packets measured mbps guarantees bottleneck queueing delay sufficiently large capacity bounded ms 
set buffer limit 
graphs section axis time seconds 
graphs showing queue lengths axis number packets queue 
graphs showing throughputs axis throughput bits second 
stability performance comparison red red compare stability performances red red 
subsection keep parameters red default settings choose ecn marking dropping 
analysis know red unstable capacity round trip delay large 
cl fig 

network topology single bottleneck link multiple flows heterogeneous delays scenario choose large link capacity network gbps ms delays links uniformly distributed ms maximum round trip time tm ms 
red parameters set pmin pmax 
red monitor instantaneous queue length measure throughput time granularity shown fig 

graphs see red unstable sense queue length throughput show significant oscillations queue length hits zero full buffer size frequently 
red monitor real queue length virtual queue length measure throughput time granularity shown fig 

graphs see red stable sense virtual queue length oscillates equilibrium values slightly throughput oscillatory red real queue size small transient phase 
red stabilizes tcp reno large capacity scenarios red 
compare performances numerically measure average throughput queue length algorithms transient phase interval scenario average throughput queue length red gbps packets red gbps packets 
red achieves higher bandwidth utilization lower queueing delay 
fig 

red large capacity network instantaneous queue length left graph throughput right graph 
second scenario choose large round trip delay network mbps ms delays links uniformly distributed ms maximum round trip time tm ms 
set pmin pmax 
queue length throughput red fig 

red large capacity network real queue length top left graph virtual queue length top right graph throughput bottom graph 
shown fig 
see red unstable 
real queue length virtual queue length throughput red shown fig 
see red stable achieves higher oscillatory throughput lower queueing delay red 
numerical comparison average throughputs red red mbps mbps respectively average queue length red red respectively 
fig 

red large delay network instantaneous queue length left graph throughput right graph 
large capacity large delay networks number users sufficiently large red stabilizes tcp reno red 
red achieves higher bandwidth utilization smaller queueing delay red 
iq iq iq fig 

red large delay network real queue length top left graph virtual queue length top right graph throughput bottom graph 

simulation results see virtual queue stable oscillate equilibrium point slightly system stable real queue size small throughput oscillate lcl slightly 
simulations save space provide graphs virtual queues red algorithm 
graphs real queues throughputs sources refer interested reader 
red iq red aq test stability performance red aq 
choose topologies subsection choose 
link adaptation speed adjusted correspondingly theorem iv 
virtual queue size network scenarios values shown fig 
fig 

graphs see red aq stable tcp reno smaller link adaptation speed smaller initial setup time transient response time larger 
sudden traffic changes study transient response proposed algorithm consider scenario large traffic source suddenly joins network leaves 
choose mbps round trip delays ms ms 
udp flow fixed rate joins leaves 
virtual queue shown fig 

see transient response fast 
fig 

virtual queue red aq large capacity network wq top left top right bottom graphs respectively 
fig 

virtual queue red aq large delay network wq top left top right bottom graphs respectively 
fig 

udp traffic virtual queue dependence stability parameters pmin 
study influence parameters stability performance 
choose values see system changes stability instability adaptation speed increases 
choose mbps round trip delays ms ms red parameters chosen pmin pmax 
chosen values monitored virtual queue lengths values shown fig 

see increases virtual queue shows higher oscillation 
simulation shows slow link adaptation sufficient possibly necessary 
fig 

virtual queue length red top left top right bottom graphs respectively 
simulations shown studied influence system performance 
studied scenarios mbps 
scenario seen system unstable stable 
second scenario seen system unstable stable 
scenarios small system stable oscillation level change decreases 
know fixed network scenario threshold value system stable 
threshold value larger number sources increased keeping flow throughput constant 
expected observed essentially statistical multiplexing effect 
simulations shown seen pmin smaller equilibrium value value pmin changes initial setup time influence stability transient response 
pmin reach operating point system stable 
tcp reno highspeed tcp scalable tcp studied combination red popular tcp variants high speed networks highspeed tcp scalable tcp 
performed ns simulation highspeed tcp performed matlab sim ulation scalable tcp included current ns package 
simulations scenario capacity user mbps round trip delay user ms 
window behavior users highspeed tcp shown fig 

average throughput user measured seconds 
small number sources fluid models questionable sources law large numbers hold 
despite combination red highspeed tcp gives reasonably high throughput 
fact fluid model apply noticed simulations behavior queue length 
queue length converge equilibrium value 
simulations shown due space limitations sufficiently large system converges red 
fig 

window sizes hs tcp flows red 
win hstcp ered win hstcp ered win hstcp ered matlab simulation scalable tcp shows marking probability rate oscillate trend divergence convergence 
system stable 
marking probability rate values shown fig 

results suggest critical point stability instability 
matlab simulation supports claim slow adaptation condition theorem iii sufficient close necessary 
scalable tcp rates time scalable tcp rates time scalable tcp marking probability time scalable tcp marking probability time fig 

scalable tcp red rate left graphs marking probability right graphs top graphs bottom graphs 
multi link network simulations simulations single link network 
theoretical analysis applies general topology network subsection examine performance red multi link network 
network composed routers source destination pairs users shown fig 

flows users ftp traffic go different paths path containing flows 
inter router links capacity mbps delay ms user router links capacity mbps large links non bottleneck delay uniformly distributed ms ms plot virtual queue length throughput link fig 
inter router links show similar behavior 
graphs see red stabilizes tcp reno multi link multi path multi flow network achieves satisfactory performance 
summary simulations summarize results simulations fig 

network topology 
path flow vq result path flow path flow path flow path flow fig 

virtual queue length throughput link network 
left virtual queue length 
right throughput 
general network heterogeneous delays red stabilizes tcp reno capacity round trip delays large condition number flows sufficiently large 
red aq stabilizes tcp reno reducing link adaptation speed theorem iv 
transient response fast sudden changes available bandwidth 
fixed network scenario threshold value guarantee stability realistic scenarios value 
increases value arbitrarily close 
choice pmin influence stability transient response pmin system may unstable 
system unstable due small system stabilized bring smaller values 
suggests large oscillations small due tcp aimd behavior eliminated slow adaptation speed 
choose little larger consideration stability transient response speed 
vi 
introduced general primal dual algorithms red algorithm 
general primal dual algorithm shown global stable delay locally stable delay 
red algorithm shown stabilize tcp reno high speed variants theoretical analysis simulations 
simulations performed support stability results theoretical analysis study performance red different scenarios different parameter choices 
remain open problems general primal dual algorithms red algorithm establishment global stability delay enhancement red algorithm number users sufficiently large comprehensive comparative studies primal algorithms dual algorithms primal dual algorithms 
issues currently study 
vii 
appendix appendix provide proofs theorems iii iv iv 
lemma lemma vii 
varied jx crosses real line point right jx jx left 
proof 
suppose crosses real line 
just need prove tan tan cos tan sin sin decreasing function 

matlab sketched different values shown fig 

support lemma vii 
lemma vii hand prove theorem iii proof theorem iii 
qr xr 
ar 
gl pl cl pl 
diag tr xr qr re str str str pl diag 
open loop system stable generalized nyquist criterion closed loop system ically stable 
eigenvalues identical diag re tr tr tr cl fig 

different 
theta theta theta theta theta diag pl cl diag tr xr denote spectrum square matrix spectral radius 
condition diag rtr xr qr qr diag pl cl diag qr diag pl diag diag xr yl inequality uses facts xr yl cl pl qr absolute row sums matrices equal 
eigenvalue re tr tr tr re reasoning similar 
lemma vii tr crosses real axis tr tr right point 
generalized nyquist criterion closed loop system stable 
re 
fact tr crosses real axis left point suggests tr tr local stability condition conservative regardless value takes 
prove theorem iv lemma 
lemma vii 
varied right 
jx jx jx jx crosses real line point proof 
suppose crosses real line 
just need show arctan arctan arctan arctan cos cos cos sin sin cos cos cos sin sin sin sin tan equipped lemma vii prove theorem iv 
sin sin proof theorem iv 
define proof theorem iii define maxl 
ar definition diag tr xr qr re str pl diag 
str str cl open loop system stable generalized nyquist criterion closed loop system ically stable 
eigenvalues identical diag tr rtr tr tr tr rtr diag pl cl diag tr xr qr rtr denote spectrum square matrix spectral radius 
condition diag rtr xr qr rtr diag pl cl diag qr rtr diag pl diag diag xr yl inequality uses facts xr yl cl pl qr ltr rtr absolute row sums matrices equal 
eigenvalue tr rtr tr tr tr rtr lemma vii tr rtr tr tr crosses real axis right tr rtr point 
generalized nyquist criterion closed loop system stable 
prove theorem iv 
proof theorem iv 
note pl pl qr qr vr ai ai ai 
prove inequality induction obviously true 
suppose true ai ai ai ai ai ai ai inequality holds true bas ar game theoretic framework congestion control general topology networks proceedings th ieee conference decision control las vegas nevada december 
bertsekas nonlinear programming 
athena scientific belmont ma 
deb srikant queue rate models congestion control uiuc technical report 
wang generalized nyquist stability criterion ieee transactions automatic control 

feng shin saha blue active queue management algorithms ieee acm transactions networking august 
floyd jacobson random early detection gateways congestion avoidance ieee acm transactions networking august :10.1.1.128.5092
highspeed tcp large congestion windows august internet draft 
available www icir org floyd hstcp html 
kelly resource pricing evolution congestion control automatica 
misra towsley gong designing improved controllers aqm routers supporting tcp flows proceedings ieee infocom anchorage alaska april 
tan congestion control internet delays stability ieee acm transactions networking december 
kelly fairness stability congestion control european journal control pages 
kelly tan rate control communication networks shadow prices proportional fairness stability journal operational research society 
kelly charging rate control elastic traffic european transactions telecommunications 
kelly models self managed internet philosophical transactions royal society 
kelly scalable tcp improving performance highspeed wide area networks december 
available www lce eng cam ac uk papers 
srikant congestion control utility functions random losses ecn marks proceedings ieee infocom tel aviv israel march 
srikant analysis design adaptive virtual queue algorithm active queue management proceedings acm sigcomm pages san diego ca august 
srikant designing avq parameters general topology network proceedings asian control conference singapore september 
srikant note stability avq scheme proceedings conference information sciences systems princeton nj march 
srikant time scale decomposition approach adaptive ecn marking ieee transactions automatic control june 
liu primal dual congestion control algorithms red aqm algorithm uiuc report september 
available decision csl uiuc edu research thesis html 
liu bas ar srikant controlling internet survey new results proceedings ieee conference decision control maui hi december 
low lapsley optimization flow control basic algorithm convergence ieee acm transactions networking pages december 
low wang doyle dynamics tcp red scalable proceedings ieee infocom june 
misra gong towsley fluid analysis network aqm routers supporting tcp flows application red proceedings acm sigcomm stockholm sweden september 
mo fair window congestion control ieee acm transactions october 
doyle low scalable laws stable network congestion control proceedings ieee conference decision control december 
wang doyle low new tcp aqm stable operation fast networks proceedings ieee infocom san francisco ca april 
srikant mathematics internet congestion control 
birkhauser 
stability congestion control internet university cambridge technical report cued infeng tr 
available www eng cam ac uk gv 
stability networks operating tcp congestion control proceedings ifac world congress barcelona spain 
university cambridge technical report cued infeng tr 
available www eng cam ac uk gv 
robust congestion control internet university cambridge technical report 
available www eng cam ac uk gv 
wen unifying passivity framework network flow control proceedings ieee infocom april 
rosenberg game theoretic framework bandwidth allocation pricing broadband network ieee acm transactions networking october 

