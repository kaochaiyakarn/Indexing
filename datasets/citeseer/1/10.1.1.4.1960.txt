faster simpler algorithms multicommodity flow fractional packing problems naveen garg computer science engineering indian institute technology new delhi india jochen carnegie mellon university pittsburgh pa considers problem designing fast approximate combinatorial algorithms multicommodity flows fractional packing problems 
provide different approach problems yields faster simpler algorithms 
approach allows substitute shortest path computations min cost flow computations computing maximum concurrent flow min cost multicommodity flow yields faster algorithms number commodities large 

consider problem computing maximum flow graph unit edge capacities 
different algorithms known problem discuss views problem purely packing paths constraints imposed edge capacities violated 
algorithm associates length edge step routes unit flow shortest path 
multiplies length edge path ffl fixed ffl 
longer edge flow 
choose shortest path route flow essentially try balance flow edges graph 
argue sufficiently steps maximum flow edge flow computed times maximum flow 
scaling flow gives feasible flow maximum 
note length edge step exponential total flow going edge 
length function proposed supported eu esprit ltr project alcom 
done author max planck institut fur informatik im stadtwald saarbrucken germany 
done author universitat des saarlandes im stadtwald saarbrucken germany 
compute throughput multicommodity flow instance 
problem problems considered formulated linear program solved optimality fast matrix multiplication mainly interested providing fast possibly approximate combinatorial algorithms 
procedure applied case uniform edge capacities computed approximation maximum throughput time polynomial gamma key idea procedure adopted lot subsequent compute initial flow disregarding edge capacities reroute iteratively short paths reduce maximum congestion edge 
running time improved significantly klein 
extended refined case arbitrary edge capacities leighton goldberg obtain better running times see table current best bound 
plotkin shmoys tardos khachiyan observed similar technique applied solve fractional packing covering problem 
approach packing problems starts infeasible solution 
amount packing constraint violated captured variable exponential extent violation 
step packing modified fixed amount direction determined variables 
running time procedure depends maximum extent constraint violated referred width problem 
running time algorithm packing problems pseudo polynomial suggest different ways reducing width problem 
significant departure line research motivated ideas randomized rounding young proposed oblivious rounding approach packing problems 
young approach essential ingredient previous approaches length function measures exponential extent constraint violated solution 
builds solution scratch step adds packing variable violates packing constraints violated 
particular multicommodity flow implies procedure involve rerouting flow flow scaled case maximum flow reduces algorithm discussed section 
contributions 
provide unified framework host multicommodity flow packing problems yields significantly simpler faster algorithms previously known 
approach similar young approach packing problems 
develop new simple combinatorial analysis added flexibility allows greatest possible advance step 
setting maximum flows integral edge capacities young procedure routes unit flow step procedure route flow saturate minimum capacity edge shortest path 
simple modification surprisingly powerful delivers better running times simpler proofs 
particular lets argue contribution constraint running time procedure exceed certain bound independent width 
yields new straightforward strongly polynomial combinatorial approximation algorithm fractional packing problem section 
earlier algorithm problem due khachiyan reduced problem resource sharing problems 
approach yields new natural algorithm maximum concurrent flow section extends straightforward manner min cost multicommodity flows section 
algorithms min cost flow computation subroutine earlier algorithms 
contradicting popular belief min cost flow subroutine better provide algorithms problems shortest path computations subroutine faster previous algorithms factor min nk log number commodities edges vertices respectively 
table summarizes results 
sp mcf times compute single source shortest paths min cost flow graph positive edge lengths costs orc time taken call oracle 
algorithms deterministic compute approximation optimum solution 
brevity define def ffl log ffl gamma ffl gamma def ffl log ffl gammaffl gamma ffl gamma 
note running time algorithms concurrent flow problems replace log log 
gamma log trick earlier papers section 
maximum multicommodity flow graph edge capacities pairs terminals commodity associated pair want find multicommodity flow sum flows commodities maximized 
dual maximum multicommodity flow problem assignment lengths edges def minimized 
subject constraint shortest path pair length function denote dist 
ff def min dist minimum length path pair terminals 
dual problem equivalent finding length function ff minimized 
fi def min ff 
algorithm proceeds iterations 
gamma length function th iteration gamma total flow routed iterations gamma 
path length ff gamma pair terminals capacity minimum capacity edge th iteration route units flow gamma function differs gamma lengths edges modified gamma ffl constant chosen 
initially edge length ffi ffi constant ffi chosen 
brevity denote ff ff respectively 
procedure stops iterations smallest number ff 

analysis iteration gamma ffl gamma gamma ffl gamma gamma ff gamma implies ffl gamma gamma ff gamma problem previous best running time improvement max 


gamma log mc sp gamma flow fractional packing mc orc spreading metrics 
gamma nm log nt sp mc nt sp gamma maximum 
gamma log log nt mcf log mcf constants concurrent flow log sp max 
cost bounded 
gamma log log log 
gamma log mcf log 
gamma concurrent flow mcf log sp table 
summary results consider length function gamma note gamma gamma ff gamma ff gamma longest path flow routed 
fi gamma ff gamma gamma ff gamma substituting bound gamma equation get ff ffl fi gamma gamma ff gamma note ff maximum gamma ff largest possible 
ff ff gamma ffl gamma gamma fi ff gamma ffl gammaf gamma fi ff implies ff fflf fi stopping condition ff fflf fi fi ffl ln gamma claim feasible flow value log ffl ffl ffi proof consider edge units flow routed length increases factor ffl 
time length increased path length strictly 
increase edge length factor ffl ffl 
ffi follows total flow log ffl ffl ffi scaling flow log ffl ffl ffi gives feasible flow claimed value 
ratio values dual primal solutions fl fi log ffl ffl ffi substituting bound fi obtain fl ffl log ffl ffl ffi ln gamma ffl ln ffl ln ffl ffi ln gamma ratio ln ffl ffi gamma ln gamma equals gamma ffl gamma ffi ffl ffl gamma ffl choice ffi fl ffl gamma ffl ln ffl ffl gamma ffl ffl gamma ffl gamma ffl gamma quantity approximation ratio choose ffl appropriately 

running time th iteration increase length minimum capacity edge factor ffl 
edge ffi ffl number iterations minimum capacity edge path chosen iteration ffl log ffl le 
fact edges get theorem 
theorem algorithm computes gamma ffl gamma approximation maximum multicommodity flow time md ffl log ffl sp length longest path source sink pair sp time required compute shortest path graph non negative edge weights 

packing lp packing lp linear program kind max phi psi theta theta theta matrices entries positive 
assume th entry 
dual lp min phi yja psi view rows edges columns paths 
capacity edge unit flow routed th column consumes units capacity edge providing benefit units 
dual variable corresponds length edge define length column respect dual variables length def 
finding shortest path corresponds finding column length minimum define ff def min length 
define def dual program equivalent finding variable assignment ff minimized 
procedure iterative 
gamma dual variables gamma value primal solution th iteration 
minimum length column ff gamma length yk gamma corresponds path route flow iteration 
minimum capacity edge row minimum row iteration increase primal variable amount gamma 
dual variables modified gamma ffl ffl constant chosen 
initial values dual variables ffi constant ffi chosen 
brevity denote ff ff respectively 

procedure stops iteration 

analysis analysis proceeds exactly case maximum multicommodity flow 
iteration gamma ffl gamma gamma ffl gamma gamma ff gamma implies ffl gamma gamma ff gamma fi def min ff 
fi gamma ff gamma ffl fi gamma gamma gamma implies fflf fi stopping condition fflf fi fi ffl ln gamma claim feasible solution packing lp value log ffl ffl ffi proof primal solution constructed value may feasible packing constraint may violated 
pick column increase increase left hand side lhs th constraint say 
simultaneously increase dual variable multiplicative factor 
definition follows increasing lhs th constraint causes increase multiplicative factor ffl 
note gamma 
ffl 
ffi follows final value lhs th constraint log ffl ffl ffi true scaling primal solution log ffl ffl ffi gives feasible solution value claim 
rest analysis exactly section replacing ffi ffl ffl gamma ffl 
running time th iteration increase dual variable minimum capacity row factor ffl 
row ffi 
ffl rows total number iterations md ffl log ffl theorem algorithm computes gamma ffl gamma approximation packing lp time md ffl log ffl met orc number rows orc time required compute minimum length column 

spreading metrics graph edge costs spreading metric assignment lengths edges minimize subject constraint set vertex dist dist distance length function function size linear arrangement problem jsj gamma jsj gamma problem computing ae separator defined jsj gamma 
length function positive shortest paths vertices forms tree shortest path tree rooted constraints equivalently stated tree subset vertices vertex dist dist denotes distance tree length function number vertices subtree edge rooted constraint rewritten obtain lp minimize subject primal program packing lp nonnegative variable tree subset vertex follows maximize subject note packing lp exponentially variables 
approximation optimum fractional solution previous section needed oracle returned violated constraint dual lp 
setting oracle subroutine length function finds triple equivalently dist minimum 
subroutine try choices vertex determine best choice subset expression minimum cost set edges removal disconnects graph connected components vertices 
dist minimized tree shortest paths length function choice shortest path tree rooted depends jsj jsj ratio dist minimized set nearest vertices different choices choose set ratio minimum 
subroutine requires single source shortest path computations 
running time procedure obtained noting subroutine invoked md ffl log ffl iterations 
theorem algorithm computes gamma ffl gamma approximation spreading metrics time md ffl log ffl ment sp sp time required compute single source shortest paths graph nonnegative edge weights 

maximum concurrent flow graph edge capacities commodities source sink commodity commodity demand associated want find largest multicommodity flow routes units commodity min cost minimum cost shipping units flow cost shipping unit flow edge total flow 
ff def min cost 
dual problem assignment lengths edges ff minimized 
fi minimum 
assume fi shall remove assumption 
algorithm proceeds phases phase composed iterations 
consider th iteration th phase gamma length function iteration 
iteration route units commodity paths min cost gamma 
flow edge length function modified gamma fflf 
gamma ffl gamma gamma ffl delta min cost gamma lengths start th phase th phase initially edge ffi 

analysis shall interested values functions ff length functions 
brevity denote ff ff respectively 
new notations ffl min cost gamma edge lengths monotonically increasing min cost gamma min cost ffl min cost gamma ff fi gamma gamma ffl fi gamma ffl fi gamma ffl fi ffl fi gamma ffl gamma gamma ffl fi ffl gamma fi gammaffl gamma ffl ffl gamma fi gammaffl inequality uses assumption fi 
procedure stops phase 
gamma ffl ffl gamma fi gammaffl implies fi gamma ffl gamma ffl ln gammaffl gamma phases commodity routed gamma units 
flow may violate capacity constraints 
claim fract gamma log ffl ffi 
proof consider edge units flow routed increase length factor ffl 
initially length ffi gamma phases gamma length satisfies gamma 
total amount flow gamma phases strictly log ffl ffi log ffl ffi times capacity 
scaling flow log ffl ffi implies claim 
ratio values dual primal solutions fl strictly fi gamma log ffl ffi 
substituting bound fi gamma get fl ffl log ffl ffi gamma ffl ln gammaffl ffl gamma ffl ln ffl ln ffi ln gammaffl ffi gamma ffl gamma ffl ratio ln ffi ln gammaffl equals gamma ffl gamma fl ffl gamma ffl ln ffl ffl gamma ffl ffl gamma ffl gamma ffl gamma remains choose ffl suitably gamma ffl gamma desired approximation ratio 
running time weak duality fl fi gamma log ffl ffi number phases procedure strictly fi log ffl ffi implies fi ffl log ffl gammaffl running time computation depends fi reduced increased multiplying demands capacities appropriately 
maximum possible flow commodity def min 
denotes maximum fraction demands routed independently fi scale capacities demands satisfying assumption fi 
note fi large procedure ffl log ffl gammaffl say phases know fi 
double demands commodities continue procedure 
note fi half value previous phase 
run procedure additional phases halt double demands 
halve value fi phases total number phases log theorem algorithm computes gamma ffl gamma approximation maximum concurrent flow time log kd ffl log ffl gammaffl mcf mcf time required compute minimum cost flow graph non negative edge costs 
number phases reduced idea 
compute approximation fi procedure outlined 
requires log log phases returns fi fi fi fi 
create new instance multiplying demands fi instance fi 
need additional phases obtain approximation 
number phases log log ffl ln ffl gamma multiplied gives number single commodity min cost flow computations required 

minimum cost multicommodity flow instance multicommodity flow problem previous section edge costs represents cost incurred shipping unit flow edge bound consider problem maximizing subject additional constraint cost flow dual linear program assignment lengths edges scalar oe view length associated pseudo edge capacity oe def minimized subject constraint ff oe def min cost 
equivalent finding length function oe oe ff oe minimum fi denote minimum value 
case maximum concurrent flow assuming fi 
algorithm proceeds phases composed iterations 
th iteration th phase length functions gamma oe gamma route units commodity edges define ffi 
similarly oe oe oe ffi flow iteration routed sequence steps step route flow cost exceed bound gamma oe gamma length functions start th step see fig 
lengths start step gamma oe oe gamma gamma flow commodity remains routed iteration 
compute def min cost gamma boe gamma routes units flow commodity need route gamma units flow multiply flow function gamma 
cost flow cost scaled flow gamma 
quantity exceeds multiply original flow function reuse notation denote final scaled flow cost respectively 
routes gamma units flow cost length functions modified similar manner 
gamma fflf oe oe gamma 
gamma gamma units commodity remain routed iteration 
iteration ends step 
procedure stops step exceeds happen th phase 

analysis note oe gamma oe gamma ffl delta min cost gamma boe gamma gamma oe gamma ffl delta min cost boe inequality holds edge lengths monotonically increasing steps 
total flow routed steps equals demand commodity 
summing steps get oe oe ffl delta min cost boe length functions start th iteration oe oe moving steps iterations oe gamma oe gamma ffl delta min cost boe gamma oe gamma ffl delta min cost boe inequality uses fact edge lengths monotonically increasing iterations 
summing iterations th phase oe oe ffl min cost boe gamma oe gamma oe abbreviate oe ff oe ff respectively obtain gamma remainder analysis exactly section 
modification claim throughput flow routed 
need argue cost flow scale log ffl ffi equivalently cost flow routed gamma iterations log ffl ffi 
follows fact oe gamma gamma oe ffi procedure time route flow total cost increase oe factor ffl 
gamma th phase st iter th iter 
th iter th step th step st step gamma gamma 
notation sections 
length functions central axis lengths box right ones lengths box left 

running time note step iteration steps increase length function oe factor ffl 
implies total number steps exceeds number iterations log ffl ffi 
define maximum possible flow commodity cost def min denotes maximum fraction demands routed capacity constraints bound cost flow applied independently commodity 
fi multiply demands suitably new instance fi double demands halving fi phases 
number iterations kt log procedure minimum cost multicommodity flow needs log ffl log ffl gammaffl single commodity min cost flow computations 
theorem algorithm computes gamma ffl gamma approximation maximum cost bounded concurrent flow time log ffl log ffl gammaffl mcf mcf time required compute minimum cost flow graph non negative edge costs 

avoiding min cost flow computations ideas algorithm min cost multicommodity flow give algorithms maximum concurrent flow min cost multicommodity flow problems shortest path computations min cost flow computations faster algorithms section factor min nk log 
maximum concurrent flow revisited define ff def dist dist denotes shortest path distance length function dual maximum concurrent flow problem viewed assignment lengths edges ff minimized 
fi minimum 
structure new algorithm similar previous section 
algorithm runs phases composed iterations 
th iteration th phase route units commodity sequence steps 
gamma length function th step shortest path length dist gamma 
step route min phi gamma psi units flow capacity minimum capacity edge path 
set gamma gamma iteration ends steps 
step perform shortest path computation min cost flow computation section 
length functions modified exactly manner analysis exactly 
routing flow commodity ffl delta dist routing commodities th phase ffl dist abbreviations obtain gamma point follow analysis section argue approximation choice ffl ffi 
running time note step iteration increase length edge factor ffl 
edge initial length ffi final length ffl number steps exceeds number iterations log ffl ffl ffi total number steps log ffl log ffl gammaffl involves shortest path computation 
theorem algorithm computes gamma ffl gamma approximation maximum concurrent flow time log ffl log ffl gammaffl sp sp time required compute shortest path graph non negative edge weights 

min cost multicommodity flow revisited define ff oe def dist boe 
dual min cost multicommodity flow problem assignment lengths edges scalar oe ff minimized 
fi minimum 
algorithm differs developed section step route flow path th step th phase th iteration shortest path length function gamma boe gamma minimum capacity edge path capacity flow function step corresponds routing units flow path 
gamma cost flow route flow completely 
scale flow routed step cost total flow routed iteration exceed 
analysis algorithm proceeds section modification min cost replaced dist 
running time need observe step step iteration increase length edge value oe factor ffl 
lengths edges oe increased factor ffl log ffl ffl ffi times 
number steps exceeds number iterations ffl log ffl gammaffl theorem algorithm computes gamma ffl gamma approximation maximum concurrent flow time log ffl log ffl gammaffl sp sp time required compute shortest path graph non negative edge weights 

integrality multicommodity flow integrality flow commodity edge non negative integer multiple section show small modifications algorithms discussed previous sections lead flows small integrality 
algorithm maximum multicommodity flow routes flow path th iteration 
capacity minimum capacity edge require flow routed iteration note route units increase length edge factor algorithm delivers gamma ffl gamma approximation maximum multicommodity flow albeit worse running time 
obtain feasible flow scale flow constructed manner log ffl ffi 
routing units certain iteration log ffl ffi units appear feasible solution 
theorem minimum capacity edge 
polynomial time compute flow gamma ffl gamma approximation maximum multicommodity flow integrality log ffl corollary edges capacity ffl log ffl integral flow gamma ffl gamma approximation maximum multicommodity flow 
maximum concurrent flow algorithm section 
recall th step th iteration th phase route min phi gamma psi units flow path capacity minimum capacity edge path gamma residual demand th commodity 
case maximum multicommodity flow route units flow step increase length edge factor 
ensure exactly units flow routed step th iteration require integral multiple obtain feasible flow scale flow constructed log ffl ffi 
final solution flow appears units log ffl gammaffl theorem minimum capacity edge 
demands integral multiples polynomial time compute flow gamma ffl gamma approximation maximum concurrent flow integrality log ffl gammaffl corollary edges capacity ffl log ffl gammaffl demands integral multiples ffl log ffl gammaffl integral flow gamma ffl gamma approximation maximum concurrent flow 
theorem corollary hold setting min cost multicommodity flows 
acknowledgments 
author philip klein cliff stein neal young useful discussions 
awerbuch leighton 
improved approximation algorithms multicommodity flow problem local competitive routing dynamic networks 
proceedings acm symposium theory computing pages 
naor rao schieber 
conquer approximation algorithms spreading metrics 
proceedings ieee symposium foundations computer science pages 
naor rao schieber 
fast approximate graph partitioning algorithms 
proceedings acm siam symposium discrete algorithms pages 
goldberg 
natural randomization strategy multicommodity flow related algorithms 
inform 
process 
lett 
khachiyan 
reduction method block angular convex programs 
technical report lcsr tr department computer science rutgers university new brunswick nj 
khachiyan 
approximate minimum cost multicommodity flows ffl gamma time 
math 
programming 
khachiyan 
fast approximation schemes convex programs blocks coupling constraints 
siam optimization 
karger plotkin 
adding multiple cost constraints combinatorial optimization problems applications multicommodity flows 
proceedings acm symposium theory computing pages 
klein plotkin stein tardos 
faster approximation algorithms unit capacity concurrent flow problem applications routing finding sparse cuts 
siam comput 
leighton plotkin stein tardos 
fast approximation algorithms multicommodity flow problems 
comput 
system sci 
plotkin shmoys tardos 
fast approximation algorithms fractional packing covering problems 
math 
oper 
res 

fast deterministic approximation multicommodity flow problem 
proceedings symposium discrete algorithms pages 

maximum concurrent flow problem 
acm 
david shmoys 
approximation algorithms nphard problems chapter cut problems application divide conquer pages 
pws publishing 
stein 
approximation algorithms multicommodity flow scheduling problems 
phd thesis mit 
vaidya 
speeding linear programming fast matrix multiplication 
proceedings ieee symposium foundations computer science pages 
young 
randomized rounding solving linear program 
proceedings acm siam symposium discrete algorithms 

