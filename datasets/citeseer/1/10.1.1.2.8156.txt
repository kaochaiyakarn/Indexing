configurable modelling language van der aalst centre information technology innovation faculty information technology queensland university technology margaret street brisbane qld australia phone fax qut edu au faculty technology management eindhoven university technology box nl mb eindhoven netherlands aalst tm tue nl enterprise systems es comprehensive shelf packages configured suit requirements organization 
es solutions provide models describe functionality structure system 
models capture potential configuration alternatives 
discusses shortcomings current modelling languages event driven process chains epcs example 
propose configurable epcs extended modelling language allows capturing core configuration patterns 
formalization language examples typical configurations provided 
program research including identification comprehensive list configuration patterns deriving possible notations model configurations testing quality proposed extensions experiments focus groups 
keywords model enterprise systems configuration event driven process chains research project financially supported sap corporate research 
enterprise systems es offer business solutions typical functional areas procurement materials management production sales distribution financial accounting human resource management 
functions typically countries industries automotive high tech shelf solutions require configuration individual context organization 
approach improve understandability systems stress process oriented nature solutions es vendors developed application models describe processes structure system 
enterprise systems models exist form function data system organization object business process models far popular type 
current models conventional modelling languages developed design enterprise individual models 
able adequately depict possible system configurations 
don provide decision support regarding selection relevant variants 
current application models just depict possible system capabilities sufficiently guide project team system configuration process 
discusses underlying research problem proposes extension existing modelling language order capture configuration potential enterprise systems 
structured follows 
section provides overview characteristics application models 
third section outlines research problem research methodology 
section lists requirements configurable modelling technique 
fifth section introduces proposed configurable event driven process chain epc formalization epcs 
ends section related brief summary discussion 
models models generic conceptual models formalize recommended practices certain domain 
labelled term best practice models claim capture reusable state art practices 
realistic label better practice common practice 
depicted domains different 
range selected functional areas accounting customer relationship management scope entire industry sector higher education 
main objective models streamline design enterprise individual particular models providing generic solution 
application models motivated design reuse paradigm 
models accelerate modelling process providing repository potentially relevant business processes structures 
ideally plug play models called partial enterprise models terminology generalised enterprise architecture methodology 
increased popularity business modelling wide quite heterogenous range purposes motivate model 
list purposes includes software development software selection configuration enterprise systems workflow management documentation improvement business processes education user training auditing certification benchmarking knowledge management name popular purposes 
models differentiated main criteria scope model functional areas covered granularity model number levels decomposition detail views process data objects organization depicted model degree integration views purposes supported user groups addressed internal external commercial availability model tool web availability textual explanation model explicit inclusion alternative business scenarios existence guidelines models availability relevant quantitative benchmarking data comprehensive differentiation domain underlies model 
term model models describing structure functionality business applications including enterprise systems 
cases model interpreted structured semi formal description particular application 
application models correspond existing shelf solution supports functionality structure described model 
models include software related constraints industry models typically lower level abstraction 
better understanding evaluation appropriateness software 
furthermore aim facilitate implementation software related user training 
application models reflect comprehensiveness applications tend complex industry models 
comprehensive models sap model 
data model includes entity types process models cover business processes inter organizational business scenarios 
market leading es vendors approach models 
overview baan model example provided 
see models 
foundational conceptual sap model conducted sap ag ids scheer ag collaborative research project years 
aim project develop modelling language depicts sap supported processes reasonably intuitive language 
outcome project process modelling language event driven process chains epcs design process models sap 
epcs core modelling language architecture integrated information systems aris 
popular modelling languages design sap independent models aris model crm solution developed industry models banking retail insurance telecommunication 
research problem research methodology existence models highlights difference traditional software development process 
starting scratch continuously adding functionality es solutions require continuous narrowing scope system 
process starts big picture reduced relevant part 
models description big picture 
necessary select necessary functions decide configuration process alternatives reporting financial accounting controlling 
enterprise systems models contributed significantly understandability software functionality main shortcomings 
shortcomings differentiated main stakeholders model users model designers 
model lifecycle initiated model designers enterprise systems vendor 
design phase available individual conceptual models evaluated selected consolidated 
model typically include proposed alternative range mutually exclusive alternatives 
depicted scenarios cover different industries different countries 
stage example sap maintains alternative industry organization declare internal best practice subsidiary internal benchmark 
existing conceptual model status model 
practice example observed global organizations roll business blueprint location worldwide 
models called prototypical models 
require configurations scope 
solutions 
current traditional modelling languages support consolidation models 
demonstrates problem simple example 
shows consolidation corresponding models different industries 
xor split case represents decision point relevance called configuration time 
model phase necessarily executed 
captures different alternatives domain configured serve actual build time model individual process instances 
oil gas build time chemical industry combined model fig 
configuration time build time run time xor lack required expressiveness current modelling languages configuration time reasons serious issue model users 
obvious configuration alternatives exist system implementation phase 
second models provide decision support actual selection alternative 
current models show processes supported general recommended alternative 
represent entire functionality viewpoint complete system look ordinary build time model 
subset typically derived enterprise model derived instances configuration time build time run time individual organization 
provides related example customer master data entry process sap 
tacit depends specify addr ess am wit cust omer cust omer int ion cust omer specif ied nt ion ied conditions pr pur chasing plant pr maint ain account ing inf mat ion sold party cr cus om er vendor planning gr oup specif ied customer material info processing maint ain account cont rol aint ain sales dat ship part creat ed tr par ner specif ied clear ing bet cust omer vendor specif ied aut om ic payment basic dat pr legal cont ols ent physical samples payer created specify code com code specif ied bank det specif ied possible payment ar specif ied customer volume agr processing mal plant processing customer master record creat ed specify payment ion dat manual sample det cust omer function invoice recipient creat ed account group wit inter nal number assignment det def ine customer number cust omer num ber det er mined payment card data maint ained sales area data ar maint ained aint ain payment inf orm ion alter native payer specific code specif ied creat cust omer cust omer mast er created mat er ial listing exclusion st sales personnel master processing sales processed specify account gr oup ent card set maint ain cont ol dat sam ple creat ed account group wit ext number assignment det alternative payer cust omer specif ied line em set specif ied pr ion standard fig 
sap model specif alt er nat ive payer maint ain decent pr customer created st purposes alter native payer em allowed payment block specif ied basic dat pr legal cont ols st maintain par ner functions check decent handling desired customer assortment cust omer aint ain ing dat mar data ar maint ained dunning pr specif ied sales deal pr st decent pr ed maintain dunning dat customer time cust omer det dat creat unloading point creat point creat tm ent maint ain cont ac persons ade dat det receiving point depart ment created creat ed assign receiving point assign ment cont act son dat ar unloading point point aint ained aint ain aint ain credit cor management data dunning block cor cr edit management dat specif ied maint ained det cust omer hierar chy sales summary bat ch sear ch egy ion classif ion pr st syst em st main objective configurable modelling language 
research embedded comprehensive research project phases challenges 
cust om er unloading pnt maint ained task identification classification configuration patterns 
configuration pattern describes distinguishable configuration case 
conducted workflow patterns derived set configuration patterns classify alternative configuration scenarios 
far possible examples sap model assigned configuration pattern 
sap model maturity worldwide availability researchers 
specif addr ess cust om er addr ess sp ied nter est ion specif ied condit ions pr pur chasing plant pr aint ain account ing inf mat ion sold par creat ed cust omer vendor planning gr oup specif ied cust om er ial info pr st aint ain account cont ol maint ain sales dat ship party cr eat ed tr part ner specif ied clear ing cust omer vendor specified aut om payment basic data pr legal cont ols standard ent physical samples payer cr eat ed specif com code com code specif ied bank det specif ied possible ent met ar specif ied cust omer agr ent pr normal plant processing cust omer created specif ent dat sam ple release det er mine cust omer function cr eat ed account group wit int er nal num ber assignment det erm ined define cust om er num ber cust om er number det erm ined payment card data aint ained sales ar ea dat ar aint ained maint ain ent inf mat ion alt er nat ive payer specif ic com code specif ied cr eat cust omer customer master record cr eat ed er ial listing exclusion st sales el mast er pr sales pr specif account gr oup aint ain cont ol dat sam ple er cr eat ed account gr oup wit ext er nal num ber ent det er mined alt er native payer custom er specif ied line item settlement specif ied pr ion st specif alter nat ive payer aint ain mes sages decent pr required cust omer cr st ist ical pur poses alt er nat ive payer em allowed ent block specif ied basic dat pr legal cont ols aint ain par ner ions check handling ed cust om er ent cust om er aint ain mar ket ing dat determine foreign cr trade eat unloading point cr eat point creat ent aint ain cont act dat sons mar dat ar aint ained dunning pr specif ied sales deal pr pr aint ain dunning dat cust om er ime cust omer ade data det erm ined receiving point depart ent cr eat ed cr eat ed assign receiving point assign ment cont act person dat unloading point point aint ained cust omer unloading pnts aint ained maint ain aint ain cr edit cor dat dunning block cor cr edit dat specif ied maint ained det er mined cust omer hier ar summ ar ch search st classif egy ion classif ion pr st pr pr em st step development formalization modelling language supports specification configuration patterns 
task constrained desire extend current modelling languages develop entire new language 
motivated significant development efforts invested models 
selected event driven process chains starting point research due popularity language design models 
proposed configurable modelling language corresponding notation tested ways 
experiments post graduate students conducted 
selected group students familiar sap process modelling modelling 
second focus groups sap application consultants sap model consulting practice conducted 
reports second phase proposed configurable modelling language 
language focused called essential configurations system variability visible relevant project team technical configurations subsume aspects related technical realisation 
requirements configurable modelling technique modelling languages obviously configurable 
means capture decisions instance level type level 
decisions instance level runtime decisions type level configuration time impact model actual structure 
configuration decisions clearly differentiated runtime decisions highlighted variation points model 
variation point captures decision point related possible choices 
furthermore configurable modelling language consider requirements 
language support configurations regarding entire processes functions control flow data 
possible differentiate configuration decisions mandatory optional decisions 
mandatory decisions instance derived model 
decision certain variant 
optional decisions initially neglected 
possible maintain defaults optional configuration decisions 
allows instantiation model explicitly making possible decisions 
allows confronting project team important configuration decisions 
configuration differentiated global local decisions 
global decisions general context studying individual process model 
context information includes industry country size relevant context factors maintained variation point 
soon information regarding relevant context provided hidden background configuration model take place 
local configurations require explicit study relevant process model 
cases decision maker consider available individual choices trade decision 
configuration decisions differentiated critical non critical decisions 
critical decisions significant impact system re done project team 
non critical decisions minor importance changed time individual team members 
configuration decisions interrelationships 
pre requisites configuration decision clearly highlighted 
include decisions 
impact decision decisions depicted 
means logical order configuration decisions considered 
includes interrelationships model process models interrelationships process model related data model 
configuration decisions different levels 
example configuration sap model entire global organization 
level configuration certain country business unit 
variation points refer related information enterprise system 
include system online help system configuration module sap implementation guide 
information provide valuable support decision maker 
entire configuration process guided recommendations configuration guidelines 
information come benchmarking data outside system critical mass system users willing provide required data 
include information processing time process path number times decision industry required investments implementation time certain configuration 
enterprise system models comprehensive 
extension modelling languages carefully consider impact perceived model complexity 
section introduces configurable event driven process chains approach capture variation points process model 
section reflect requirements identified 
configurable event driven process chains epcs introducing configurable event driven process chains epcs formalize notion classical event driven process chain 
epcs introduced formalized followed definition semantics discussion partially configured epcs 
section concluded reflections requirements stated previous section 
formalization epcs diagram composed events functions connectors correct event driven process chain 
example allowed connect events 
unfortunately formal syntax event driven process chains missing 
section give formal definition event driven process chain 
definition restrictions described imposed tools aris sap 
way able specify requirements event driven process chain satisfy 
definition event driven process chain event driven process chain tuple finite non empty set events finite non empty set functions finite set logical connectors xor function maps connector connector type set arcs 
event driven process chain composed types nodes events functions connectors 
type connector function type xor connector relation specifies set arcs connecting functions events connectors 
definition shows allowed arc connecting functions events 
requirements event driven process chain satisfy connectors allowed branch start event final event limitations respect connectors 
formalize requirements need define additional concepts introduce notations 
definition directed path elementary path epc event driven process chain 
directed path node node nk sequence nk ni ni 
definition directed path limit set routing constructs may 
allows definition cef set connectors path event function cfe set connectors path function event 
cef cfe partition set connectors function partition 
sets cj cs classify connectors join connectors split connectors 
definition cj cs cef cfe epc eventdriven process chain 
set nodes epc 
xor set input nodes set output nodes 
cj set join connectors 
cs set split connectors 
cef cef path nk nk nk nk nk 
cfe cfe path nk nk nk nk nk 
path nk nk nk nk nk 
cff cff path nk nk nk nk nk 
notations allow completion definition event driven process chain 
definition event driven process chain event driven process chain epc satisfies requirements sets pairwise disjoint 

event start event 
event final event 


cj cs partition cj cs cj cs cff empty cff 
cef cfe partition cef cfe cef cfe requirement states component unique identifier name 
note connector names omitted diagram event driven process chain 
requirements correspond restrictions relation events multiple input arcs start event final event 
function exactly input arc output arc connector join connector split connector 
requirement states connector path event function path function event 
remainder assume event driven process chains syntactically correct 
note cj cs cef cfe partition cj cs disjoint cj cs cef cfe disjoint cef cfe pair wise disjoint 
principle kinds connectors 
constructs allowed split connector type cef type xor cs cef cs cef 
result restriction choices functions sharing input event 
choice resolved execution function 
formalization epcs impose restriction consider cs cef cs cef guideline requirement 
semantics epcs debated literature 
contribute discussion simply refer 
configurable epcs section introduces notion configurable event driven process chain epc 
epc functions connectors configurable 
configurable functions may included skipped conditionally skipped opt 
configurable connectors may restricted configuration time configurable connector type may mapped connector 
local configuration choices skipping function may limited configuration requirements 
example configurable connector type mapped connector configurable function needs included 
configuration requirement may denoted logical expression 
guide configuration process partial order suggesting order configuration 
configuration requirements may configuration guidelines 
think configuration requirements hard constraints interpret configuration guidelines soft constraints 
definition configurable event driven process chain configurable event driven process chain epc tuple specified definition satisfying constraints mentioned definition set configurable functions set configurable connectors partial order configurable nodes suggesting order configuration set configuration requirements set configuration guidelines 
sets logical expressions atomic statements bind configurable nodes concrete values xor configurable connector configurable function 
configurable nodes denoted thick circles configurable connectors thick rectangles configurable functions 
configuration requirements denoted dotted lines connecting configurable nodes logical expression refers configuration guidelines denoted dashed lines connecting configurable nodes logical expression refers see 
partial order configurable nodes shown example 
configurable function may configured included skipped conditionally skipped opt 
configurable connectors mapped concrete choice split join considered 
clearly configurable connector type may mapped concrete connector type 
concrete connector represent behaviour allowed configurable connector configuration process restricts possible execution sequences 
case configurable connector type xor options may selected split connector output function denotes function selected 
configurable functions functions configured included skipped conditionally skipped opt 
functions configured 
connectors xor connector configurable 
configurable xor connector set xor choice runtime select paths configuration time left hand side right hand side selected 
shows requirement guideline 
requirement states configured path starting event selected 
guideline states configured configured visa versa 
configurable function requirement requirement xor seq guideline guideline fig 
example epc xor xor shows epc simple xor join possible variants derived model 
example extract sap configurable connector normal function normal connector model purchasing version 
shows details requirements guidelines scheduling agreement additional option classical purchase order 
formalizing notion configuration define fig 
example configurable epc xor join sa scheduling agreement po purchase order released sa scheduling agreement delivery sa release created transmission sa xor purchasing order transmitted purchase released po purchase order processing purchase order created release purchase order purchasing document released purchase order processing partial order specify concrete connector type may connector type connector type may configured 
released sa scheduling agreement delivery sa release created sa xor purchasing order transmitted purchase released po purchase order processing purchase order created release purchase order purchasing document released purchase order processing purchase released po purchase order processing purchase order created release purchase order purchasing document released purchase order processing purchasing order transmitted epc variant variant definition ct cts defines partial order ct xor cts cts 
xor xor xor xor cts cts cts 
note ct xor cts xor 
partial order motivated fact configurable connector subsume behaviour concrete connector 
table illustrates configuration rules connectors 
table describes constraints 
row corresponds configurable connector type xor may mapped xor seq node 
xor seq xor table constraints configuration connectors configuration maps configurable nodes concrete values opt functions xor connectors 
definition configuration epc 
opt ct configuration cts cj exists cts cs exists function maps configurable functions values opt opt configurable connectors mapped set ct ct clearly mapping consistent table partial order preset join connector postset split connector shows epcs resulting configuration 
consider epc shown epc left hand side 
configuration xor obtain epc 
note function needed split join removed 
functions satisfying guideline 
requirement shown satisfied 
skipped configurable xor split xor set seq violating requirement 
epc right hand side results configuration xor seq 
configuration specifies function configurable xor split set take left path involving function setting remaining configurable functions relevant reachable configuration xor split 
fig 
configurations epc shown example shows optional functions lead problems 
left hand side shows epc configurable function right hand side shows possible configurations 
left variant variant simply included 
variant function skipped events merged 
case opt variants possible 
left simply inserts split join connector bypass solution violates guideline rule event followed split cf 
section 
way solve add additional function additional events shown right variant 
complication construct configurations opt augmented additional decision function enforce envision post processing fragments involving event followed split refined shown 
add refinement formalizations section 
epc fig 
example configuration additional elements variant variant indicated sets logical expressions atomic statements bind configurable nodes concrete values 
configurable functions mapped set opt configurable connectors mapped xor 
examples illustrating syntax atomic statements xor 
statements correspond respectively xor xor variant opt skip xor variant additional function xor xor configurable connector configurable function suppose examples hard soft constraints requirements guidelines 
note requirement xor seq guideline 
configurations may guidelines requirements conflicting add requirements 
clearly requirements conflicting original guideline 
conflicting requirements model valid 
addition guidelines conflicting configuration suitable 
definition valid suitable configuration epc configuration 
valid configuration satisfies configuration requirements satisfies logical expressions suitable configuration valid satisfies configuration guidelines satisfies logical expressions fig 
examples invalid configurations configuration valid satisfies requirements 
shows examples invalid configurations 
possible epc valid indicated definition 
xor epc definition satisfiable epc 
satisfiable valid configuration 
give fact requirements guidelines logical expressions fairly easy provide tool support guide designer valid configuration 
semantics configurations examples showed configuration corresponds concrete epc 
provide algorithm construct epc epc configuration 
invalid variant wrong connector note epc defines space concrete epcs 
valid configuration maps invalid variant new function invalid variant missing function epc concrete epc 
function maps epc configuration concrete epc 
definition epc configuration 
corresponding epc constructed follows 
epc cs cj epc obtained mapping configurable connectors concrete type removing arcs involving selected sequence 

rename function reflect corresponding function executed 
merge input output event epc new connector name clashes merging old input output connector 
repeat type epc resulting epc 

opt add function split connector join connector making optional epc xor xor note epc may satisfy requirements stated definition 
note possible remove functions connected connector connectors path event function vice versa 

repeat type epc resulting epc 

remove connectors just input output node epc 

remove isolated nodes nodes input output arcs 

re apply step algorithm try remove remaining functions labelled 

remove nodes path start event final event 
consider start final events original epc new start final events may introduced step 
re apply step algorithm remove connectors just input output node may introduced step 
resulting epc 
easy verify examples far consistent algorithm 
definition suggests epc satisfying requirements mentioned remains proven 
theorem epc epc configuration 
epc satisfying requirements stated definition 
proof 
epc satisfies requirements definition 
check requirements affected steps 
sets pair wise disjoint 
stated explicitly assume name clashes 

cardinality number input output nodes events changed 
step may merge events jeopardize requirement 
steps reduce number inputs outputs 
event start event 
start events removed 
event final event 
final events remain final events 

functions may removed cardinality number input output nodes functions changed 

existing connectors newly added connectors satisfy requirement 
cj cs partition guaranteed step 
cef cfe partition nature connectors changed 
example summarize recommendations configurable modelling language 
example model invoice verification enterprise system sap ver 

shows current non configurable model 
purchase order created evaluated receipt settlement purchase order created goods receipt posted goods receipt posted invoice processing invoice posted release invoice payment effected fig 
sap model invoice verification ver 
model perceived max epc includes possible ways invoice verification supported sap system 
detailed analysis shows model includes optional elements 
core process classical invoice processing purchase order delivery note service entry sheet actual invoice 
process mandatory elements configured 
evaluated receipt settlement ers option allows bypass entire classical invoice verification process 
long term contracts clear specification goods invoices posted released arrival goods conform quantity quality specifications purchase order service accepted invoice received purchase order created plan settlement goods receipt posted contract 
ers typically relevant option significant size business relationship highly repetitive purchasing process long term contract clear specification payment details 
similar way invoice plan settlement optional function 
case invoices consolidated invoice plan scheduled series dates independently individual procurement transactions actual receipt goods services 
relevant regularly recurring procurement transactions car leasing subscriptions called periodic plan transactions subject stage payments building project called partial plan 
plan settlement facilitates automatic creation payment invoices uses functionality evaluated receipt settlement solution 
shows model epc notation derived description 
guideline ers long term contract goods conditions specified purchase order created evaluated receipt settlement purchase order created goods receipt posted goods receipt posted invoice processing invoice posted release invoice payment effected fig 
sap model invoice verification ver 
epc notation service accepted invoice received purchase order created plan settlement goods receipt posted requirement ips ers partially configured epcs definition assumes complete configuration complete function mapping configurable node concrete value 
configuration process may go stages add notion partial configuration 
definition partial configuration epc 
opt ct partial configuration dom cts cj exists cts cs exists think epc partial configuration epc 
algorithm similar described definition transform epc partial configuration new epc 
omit details straightforward realize definition 
simply consider configurable nodes configured nodes applying algorithm 
modified algorithm transforms epc partial configuration new epc 
proof give theorem 
theorem epc epc partial configuration 
corresponding epc 
satisfiable satisfiable 
valid suitable configuration valid suitable configuration allows indicate partial configuration epc satisfiable 
note partial functions denoted function domain subset concept partial configured epc opens interesting possibilities 
consider example configurable enterprise system sap 
top level epc indicates possible configurations sap respect process 
epc partially configured industry 
recall sap alternative industry solutions indicated section 
words industry partial configured epcs 
partial configured epcs starting point organization 
large organizations may different versions process country region 
time organization may want enforce unification 
industry specific epc may partially configured organization specific epc 
epc may configured specific parts organization region 
example shows may worthwhile partially configured epcs different levels level lower level partial configuration upper level 
example may epc level sap system level industry configurations sap sense automotive industry level organization configurations allow organization 
epc organizational level configured completely support concrete process part organization process eindhoven branch organization 
apart configuration various levels need customization support processes fit epc 
avoided risky costly 
customization unavoidable may interesting notions inheritance described 
notions inheritance easily applied epcs epcs 
topic customization scope 
extensions conclude section reflect requirements section context epc language just defined 
epc language defined section mainly focuses process control flow aspects 
data aspect function aspect addressed explicitly 
note functions configured refers presence functionality functions 
epcs distinguish mandatory optional decisions 
fairly easy add functionality 
defined extension partial order possible extend language defaults optional configuration decisions 
epcs differentiate global local decisions 
fairly easy add attribute configurable nodes 
real challenge get information 
similarly remarks hold difference critical non critical decisions 
configuration decisions interrelationships 
partly covered requirements guidelines epc 
restricted interrelationships model interrelationships process models interrelationships process model related data model 
configuration decisions different levels 
supported partially configurable epcs discussed previous subsection 
epc variation points refer related information enterprise system 
added easily 
entire configuration process guided recommendations configuration guidelines 
supported guidelines partial order requirement refers impact configuration extensions perceived model complexity 
epc natural extension standard epc cause problems typical user model 
complex parts interrelationships defined requirements guidelines epc expressed logical expressions 
may worthwhile think graphical notations modelling typical requirements example dependency constraints 
indicated epc language defined covers requirements 
language reported focuses core functionality configurable modelling language epcs 
related area research divided requirements engineering development enterprise systems requirements engineering configuration enterprise systems 
focus 
academic contributions field exception 
example rolland suggest map including erp goals objectives identification evaluation user needs 
gulla introduce process modelling tiers manage complexity process modelling comprehensive erp systems projects 
functional tier dimension deals functionality enterprise system 
discuss differentiate models tier 
discuss alternative ways configuring enterprise systems 
link models 
related conducted area variability management software families 
pohl discuss issues related communication variability software product family 
propose extension case diagrams cardinalities order explicitly depict variation points 
support dependencies variation points 
case diagrams widely models 
pohl influenced previous representing variability case diagrams von der john 
software product families investigated architectural viewpoint 
fact workshops software architectures product families cf 

example consider dolan role various stakeholders comes software product families 
outlook models defined reusable conceptual models depict recommended structures processes 
main class models application models document functionality shelf solutions 
modelling languages face specific requirements regarding configuration models 
current models sap models enterprise systems models designed modelling languages cater needs configuration 
limited opportunities exist specify valid configurations 
proposed extensions popular modelling language allow exactly explicit specification configurations process models 
language called configurable event driven process chains 
current focus research developing list configuration patterns exploring alternative ways modelling patterns 
quality proposed modelling language notations tested experiments focus groups 
project funded sap corporate research explicit aim develop applicable language 
part research project related sap funded empirical study actual modelling practice australia currently conducted 
study give important insights problems existing models 
furthermore planned extend configurable collaborative business scenario diagrams 
interesting question epc partial configuration partial configuration satisfiable 
related questions satisfiable satisfiable configurations possible 
number configurations finite easy provide automated support addressing questions 
interesting link questions dynamics resulting epcs 
may case partial configuration satisfiable terms configuration requirements resulting epcs deadlock 
area research inclusion evidence research 
include access relevant benchmarking information typical configuration decisions industry sector 
visualised models proposed configuration guidelines provide valuable guidance required decisions 
van der aalst formalization verification event driven process chains information software technology 
van der aalst basten inheritance workflows approach tackling problems related change theoretical computer science 
van der aalst desel semantics epcs vicious circle 
ttgens rump editors proceedings epk business process management epcs trier germany november 
gesellschaft informatik bonn 
van der aalst ter hofstede kiepuszewski barros workflow patterns distributed parallel databases 
basten van der aalst inheritance behavior 
journal logic algebraic programming 
becker eds process management berlin 
generalised enterprise architecture methodology version march 
case description requirements product lines 
proceedings international workshop requirements engineering product lines repl 
technical report labs 

markus tailoring erp systems spectrum choices implications proceedings th hawaii international conference system sciences 
maui hawaii january 
requirements engineering erp requirements management development packaged software proceedings th international symposium requirements engineering 
limerick ireland june 
curran keller sap business blueprint understanding business process model upper saddle river 
practical reuse measurement erp requirements engineering proceedings th international conference caise eds bergman 
stockholm sweden june lecture notes computer science 
relaxed soundness business processes dittrich norrie editors proceedings th international conference advanced information systems engineering caise volume lecture notes computer science springer verlag berlin 
dolan stakeholder centric assessment product family architecture practical guidelines information system interoperability extensibility international workshop software architectures product families iw volume lecture notes computer science springer verlag 
classification models methodology application 
information systems business management 
process modeling erp projects discussion potential benefits 

frank conceptual modelling core information systems discipline perspectives epistemological challenges proceedings america conference information systems milwaukee 
gulla challenges business modeling large scale reengineering projects 
proceedings th international conference requirements engineering ill june 
pohl communicating variability software product family customers 
software systems modeling 
john tailoring cases product line modeling 
proceedings international workshop requirements engineering product lines repl 
technical report labs 
keller ttgens scheer auf der epk ver des wirtschaftsinformatik heft german university saarland saarbr cken 
klaus erp information system frontiers 
schneider petri net certification event driven process chains 
desel silva editors application theory petri nets volume lecture notes computer science springer verlag berlin 
van der linden eds international workshop software architectures product families iw volume lecture notes computer science berlin 
von der modeling variability uml case diagrams 
proceedings international workshop requirements engineering product lines repl 
technical report labs 

zhao evaluating quality models laender liddle storey eds proceedings th international conference conceptual modeling 
salt lake cit utah usa october 
lecture notes computer science 
modified epcs formal semantics 
technical report university koblenz landau koblenz germany 
rolland prakash bridging gap organisational needs erp functionality requirements engineering 
erp software characteristics consequences eds proceedings th european conference information systems june copenhagen 
models enterprise resource planning lifecycle 
australian accounting review 
application models building blocks management control erp systems 
handbook enterprise architecture 
schmidt eds springer verlag berlin 
extension configuration models enterprise resource planning systems 
proceedings th australasian conference information systems acis lo eds harbour december 
rump gesch auf der basis 
reihe wirtschaftsinformatik teubner verlag germany 
sap ag online help sap release help sap com 
material 

scheer aris business process modelling 
rd ed berlin 
data model resource book volume library universal data models enterprises revised edition 
data model resource book volume library data models specific industries revised edition 
verbeek tools models dynamic enterprise innovation 
establishing continuous improvement business 
rd ed van es ed baan business innovation 

