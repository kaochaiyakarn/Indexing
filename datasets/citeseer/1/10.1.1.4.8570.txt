rendering hierarchical data jarke van wijk frank van ham van de hard disk full 
question doubt familiar readers inspired research years 
goal provide insight large hierarchical data sets commonly known trees 
hierarchical data sets 
large number items files products employees stocks handled managed efficiently grouped larger entities 
recursive application approach results tree structure 
hierarchical file system prime example user organize disk deal limited set files fulfilling task 
pc disk average user contains dozens gigabytes data distributed hundreds thousands files 
case difficult maintain overview determine cluttering disk 
single simple answer exists 
user pc installed large programs failed cleanup finishing task relief meeting deadline 
multiple copies multimedia file stored disk 
find large files directories identify patterns structures easily large hierarchical data structures 
automatic methods searching largest files fall short standard file browsers indented lists developed problem mind 
believe best way answer question exploit unique capabilities human visual system tuned optimized course millions years evolution extract information images 
words try synthetic images wide variety visual cues transfer information efficiently effectively possible 
tree visualization obviously try visualize trees 
graphical presentation tree structures long studied graph drawing community 
stan jarke van wijk win tue nl full professor technische universiteit eindhoven netherlands 
frank van ham win tue nl phd student technische universiteit eindhoven netherlands 
van de win tue nl assistant professor technische universiteit eindhoven netherlands 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
acm communications acm september vol 

node link 
node link diagram diagram left left corresponding corresponding treemap right 
treemap right dard widespread representation node link diagram see 
node tree mapped icon typically circle square edge mapped line arrow 
standard arrangement put root tree top draw nodes successive rows row corresponds layer tree 
variation radial mapping root node placed center nodes placed concentric circles 
methods smaller trees say nodes result clutter larger trees 
tree visualization intensively studied information visualization community 
graph drawing typically aims producing static black white diagrams information visualization means applied enable user gain insight data 
color multiple views threedimensional representations especially interaction enable user navigate data understand efficiently 
known tree visualization cone tree dimensional node link diagram options interaction 
cone trees inherit problem standard node link diagrams fall short comes large trees 
treemaps invented shneiderman address particular problem 
treemap space filling display hierarchical data size elements mapped area rectangles 
treemaps effective lead images difficult ascertain structure tree 
develop effective representations huge hierarchical data structures 
interesting aspect information visualization interdisciplinary nature 
question answered viewpoints including human perception cognitive psychology algorithms graphic design 
computer graphics main inspiration 
computer graphics plays role complexities visualization may trivial examine current results information visualization find graphical palette poor limited uniformly shaded geometric shapes 
result images corresponding data 
perceptual system capable processing visual cues texture smooth shading depth expect higher information throughput graphic means encode data 
computer graphics community devoted effort rendering highly realistic images accurately modeling geometry illumination 
september vol 
communications acm knowledge produce effective visualizations 
note consider realism aim just means get effective visualizations triggering intrinsic human capabilities 
methods visualize trees illustrate approach 
cushion treemaps variation standard treemaps added visualize structure 
beam trees variation treemaps stack cylindrical beams depicts structure 
consider botanical trees metaphor showing done carefully technique lead useful intriguing results 
cushion treemaps 
rectangle treemap compact representation tree structure represents node tree area rectangle proportional attribute node file size 
example illustrates node link diagram corresponding treemap 
node label xn name size 
size non leaf node equal sum sizes children 
treemap constructed follows 
start outer rectangle represents root tree 
subdivide rectangle left right smaller ones represents children area allocated proportional size 
rounds repeat step recursively 
rectangle correspond leaf subdivided direction subdivision alternates horizontal vertical 
result inner rectangle represents leaf structure tree traced back diagram 
treemaps different types hierarchical data varying directory structures product catalogs usenet groups 
different implementations applications realized date overview see 
martin wattenberg developed impressive application treemaps 
map market visualizes market share change large number stocks hierarchically organized market segments 
large deep trees structure hard discern 
bad case balanced tree leaves equal size treemap degenerates regular grid 
means emphasize structure color line width nesting rectangles 
provide natural cue consume space lead maze diagrams 
considered shaded geometry alternative led cushion treemaps 
hierarchy stacked emphasizes hierarchical structure data 
algorithm spirit original treemap straightforward 
subdivision rectangle level bump added new rectangle main direction bump perpendicular direction subdivision 
result rectangle provided cushion 
deep valleys indicate major subdivisions shallow valleys separate siblings 
cushion treemaps extensively visualization directory structures 
examples standard cushion treemaps shown 
color indicate file type 
running example shown figures pc disk running ms windows contained files folders 
main columns left right denote folders windows program files followed series smaller folders 
upper half windows folder windows desktop folder 
folder contains large number images communications acm september vol 

left right standard cushion treemap directory structure 
red separate folders separate frames animations large video files green large archive file purple 
windows system folder contains large number libraries yellow temporary internet cache contains large number small files including images 
lower left corner see file win swp grey 
documents help files shown blue 
comparison standard cushion treemap version reveals hierarchical structure easier detect 
method embedded freeware utility dubbed 
options provided selection coloring viewing 
important added interaction user easily find file corresponds rectangle navigate directory structure obtain additional information 
utility downloaded times www win tue nl users reported great help managing disks 
beamtrees 
section experimental approaches visualize hierarchical data 
problem standard treemaps tree structure shown explicitly 
instance non leaf nodes pointed 
visualize non leaf nodes 
answer nested rectangles alternative called beamtrees 
basic strategy standard treemap initial rectangle recursively sliced space shrink rectangle perpendicular direction subdivision 
leaf nodes gathered rectangle shown subdividing 
result algorithm image 
top left image shows result tree see instance root leaf directly visually falls apart separate shapes 
improve shaded geometry model tree stack tubes circular beams 
result large rectangles overlapped smaller ones easier discern spatial ordering reflects hierarchical order 
directory shown colors 
result leaves non leaf nodes displayed pointed 
size attribute visualized properly front view areas proportional size 
user select factor beams shrunk trade area leaves respect nonleaf nodes 
price paid efficient screen space comparison september vol 
communications acm 
beamtrees 
beamtrees construction construction tubular tubular version version front front oblique view oblique directory view structure 
directory structure standard treemaps 
user tests revealed size estimation slightly slower harder beamtrees cushion treemaps tasks related levels leaves establishing level easier carry 
furthermore users strong subjective preference beamtrees 
botanical trees 
preceding methods produce images 
generate natural models hierarchical data 
term tree standard hierarchical data 
observe botanical trees find leaves branches arrangement easily extracted spite large numbers 
happen try visualize hierarchical data botanical trees 
student ernst answered question advantage research graphics community field 
methods developed generate realistic looking trees 
strand model suitable needs 
origin strand model goes back far leonardo da vinci method strand model 
model vascular structure organic objects 
leaf connected strand traced back root 
consequence cross sectional area branch corresponds number leaves attached directly indirectly 
model artificial trees generated recursively splitting branches number strands randomly distributed 
angles proportions derived number strands 
case structure hierarchical data size attribute elements 
illustrated map non leaf nodes branches communications acm september vol 
children attached 
area cross section main branch decreased spawned 
mapping leaf nodes botanical leaves varying sizes gives cluttered confusing images 
better solution map sets sibling nodes fruit 
depict set sphere area sphere proportional sum sizes leaves 
individual leaf mapped cone size color denoting file size file type 
remaining problem distribute cones sphere balanced way 
answer graphics literature botanical modeling 
deussen developed concept phi balls generate artificial 
compact surprisingly effective algorithm generate icons display sets elements varying size 
method produces intriguing models 
shows directory previous figures 
picture show full strength complex dimensional objects viewed setting user inspect object interactively 
reactions users method mixed far 
agree images nice large objects spheres branches easily detected phi balls provide readable cue contents directory 
practical application preferred treemaps 
important result discovery rich source methods techniques translate data geometry 
phi ball great example respect simple elegant method visualize list elements compact icon 
alternative ways visualize hierarchical data 
cases geometry shading aiming visual representations convey insight 
succeeded 
beamtrees undertaken controlled experiment order compare usability treemaps 
release considered experiment 
got positive reactions conclude cushion treemap method effective september vol 
communications acm 
inspired visualization construction construction application 
application real world manage large hard disks 
strong point method users reported scanned analyzed tb file systems effectively 
methods escaped lab intend develop downloadable versions feedback real world user community highly interesting stimulating 
encouraged results believe computer graphics methods information visualization lead insight pursue path 
problems information visualization limited solutions available scale large quantities data 
challenging important problems visualization multivariate data visualization networks 
research aim development new methods hope methods computer graphics lead new intriguing insightful visualizations 

ham van wijk van 
beamtrees compact visualization large hierarchies 
wong andrews 
eds 
proceedings ieee symposium information visualization 

strands gravity botanical tree imagery 
computer graphics forum march 

van de wijk van 
botanical visualization huge hierarchies 
andrews roth wong 
eds 
proceedings ieee symposium information visualization 

deussen interactive modeling plants 
ieee computer graphics applications jan feb 

robertson mackinlay card cone trees animated visualizations hierarchical information 
proceedings conference human factors computing systems 

shneiderman tree visualization tree maps space filling approach 
acm transactions graphics jan 

shneiderman 

treemaps space constrained visualization hierarchies www cs umd edu hcil treemaps history 

tollis di battista eades tamassia graph drawing algorithms visualization graphs 
prentice hall 

ware information visualization perception design 
morgan kaufmann 

wattenberg map market 
www com 

wijk van van de 
cushion treemaps visualization hierarchical information 
wills keim 

eds 
proceedings ieee symposium information visualization 
communications acm september vol 

