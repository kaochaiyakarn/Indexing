fast embedding sparse music similarity graphs john platt microsoft research microsoft way redmond wa usa microsoft com applies fast sparse multidimensional scaling mds large graph music similarity vertices represent artists albums tracks edges represent similarity entities 
vertices assigned locations euclidean space locations browse music generate playlists 
mds large sparse graphs effectively performed family algorithms called rectangular rd mds algorithms 
rd algorithms operate dense rectangular slice distance matrix created calling constant number times 
rd algorithms compared landmark mds uses nystr approximation perform mds new algorithm called fast sparse embedding uses fastmap 
algorithms compare favorably laplacian eigenmaps terms speed embedding quality 
examines general problem sparse graph similarities set objects quickly assign object location low dimensional euclidean space 
general problem arise different applications addresses specific application music similarity 
case music similarity set musical entities artists albums tracks placed low dimensional space 
human editors supplied graph similarities artist similar artist reasons embed musical similarity graph 
visualization user musical collection placed dimensions easily visualized display 
visualization aid musical browsing 

interpolation graph similarities simple find music sounds music 
music embedded lowdimensional space new user interfaces enabled 
example user specify playlist starting song song songs playlist smoothly interpolating 
compression order estimate sounds directly graph music similarities user access graph known music 
musical entities embedded coordinates music user collection shipped user computer 
coordinates smaller entire graph 
important algorithms exploit sparseness similarity graphs large scale databases similarities sparse 
human editors create dense matrix music similarity large values best editors identify similar artists albums tracks 
furthermore humans poor accurately estimating large distances entities farther away beatles duke 
definite need scalable embedding algorithm handle sparse graph similarities generalizing similarities seen training set 
structure describes existing approaches sparse embedding problem section section describes new algorithm solving problem 
section verifies new algorithm get stuck local minima section goes detail application embedding musical similarity low dimensional euclidean space 
methods sparse embedding multidimensional scaling mds established branch statistics deals embedding objects low dimensional euclidean space matrix similarities 
specifically mds algorithms take matrix dissimilarities rs find vectors xr inter vector distances drs matched rs 
common flexible algorithm called encourages inter vector distances near ideal values min xr rs rs rs derived dissimilarities rs typically linear relationship 
existing approaches applying mds large sparse dissimilarity matrices 
apply mds algorithm sparse graph directly 
mds algorithms require dense matrix rs 
example operate sparse matrix ignoring missing terms cost function 
shown section reconstruct position known data points sparse matrix dissimilarities 

graph algorithm generate full matrix dissimilarities 
isomap algorithm finds embedding sparse set dissimilarities lowdimensional euclidean space 
isomap applies floyd shortest path algorithm find shortest distance points graph uses distances input full mds algorithm 
low dimensional space data easily interpolated extrapolated 
note systems 
generalizing musical artist similarity computes matrix distances artists set shortest distance graph 
sparse graph generated human editors music guide 
shows human perception artist similarity modeled generalizing shortest graph distance 
similar projects set artist distances euclidean space full mds algorithm 
note mds system 
computational complexity methods inhibit large data sets 
analyze complexity portion method 
finding minimum distances floyd algorithm operates dense matrix distances computational complexity 
better choice run dijkstra algorithm finds minimum distances single vertex vertices graph 
dijkstra algorithm run times 
complexity invocation dijkstra algorithm implemented binary heap logn number edges graph 
running standard mds algorithm full matrix distances requires kd computation number iterations mds algorithm dimensionality embedding 
computational complexity approach mn logn kd prohibitive large 
graph algorithm generate thin dense rectangle distances 
natural way reduce complexity graph traversal part isomap run dijkstra algorithm times 
words generating entire matrix dissimilarities generate interesting subset rows family mds algorithms called rectangular dijkstra rd mds algorithms 
rd algorithms operate dense rectangle distances filled dijkstra algorithm 
published member family landmark mds lmds 
bengio show lmds nystr approximation combined classical mds operating rectangular distance matrix 
see nystr applied spectral clustering 
lmds operates number rows proportional embedding dimensionality dijkstra gets called times 
lmds centers distance submatrix converting kernel matrix top column eigenvectors vi eigenvalues computed 
embedding coordinate mth point xm mi jm mi average distance jth row rectangular distance matrix jm distance mth point jth point 
computational complexity lmds md logn nd 
new algorithm fast sparse embedding lmds requires solution eigenproblem 
avoid eigenproblem presents new rd mds algorithm called fse fast sparse embedding 
nystr approximation fse uses fastmap mds algorithm takes constant number rows dissimilarity matrix 
fastmap iterates dimensions projection fixing position vertices dimension turn 
fastmap approximates solution eigenproblem deflation 
consider dimension 
vertices xa xb chosen dissimilarity vertices vertices computed ai bi 
fse dissimilarities computed dijkstra algorithm 
iteration dimension distances dai dbi set equal dissimilarities 
distances determine location vertices dimension shift law cosines xi ai bi 
dab subsequent dimension new vertices chosen new dissimilarities ai bi computed dijkstra algorithm 
subsequent dimensions assumed orthogonal previous ones distances dimension computed dissimilarities ai ai xin ai ai xin 
dimension accounts fraction dissimilarity matrix analogous pca 
note dab distances needed distance squared square root dimension required 
distances produced dijkstra algorithm minimum graph distances modified equation order reflect projection far 
dimension vertices heuristically chosen far apart possible 
order avoid step choosing recommends starting arbitrary point finding point furthest away current point setting current point farthest point repeating 
dijkstra call including equation logn nd complexity entire algorithm md logn nd 
experimental results artificial data output output fse reconstructing grid points directly sparse distance matrix 
left reconstruct grid right fse accurately reconstructs grid 
mds algorithm needs tested distance matrices computed distances real points order verify algorithm quickly produces sensible results 
fse tested set points grid unit spacing 
distance point random nearest points algorithm 
results shown 
procrustes analysis applied output algorithm output shown best orthogonal affine projection algorithm output original data 
shows poor job reconstructing locations data points fse accurately reconstructs grid locations 
poor performance caused performing optimization non convex cost function 
dissimilarity matrix sparse constraints final solution gets stuck local minimum 
similar results seen sammon method 
results show fse rd mds algorithms preferable sparse mds algorithms 
fse solve optimization problem get stuck local minimum 
application generalizing music similarity section presents results rd mds algorithms project large music dissimilarity graph low dimensional euclidean space 
projection enables visualization interpolation music collections 
dissimilarity graph derived music metadata database 
database consists artists albums tracks 
track subjective metadata assigned human editors style specific style general style vocal code gender singer mood 
see details metadata 
database contains tracks occur albums artists created albums 
relationship entities edge distance graph tracks style vocal code mood tracks style tracks track album album artist table mapping relationship edge distance 
sparse similarity graph extracted metadata database table 
track album artist represented vertex graph 
track connected albums appeared album connected artist 
track similarity edges sampled randomly provide average links edges distance 
final graph contained vertices edges 
rd mds enabled experiment full distance matrix taken days compute calls dijkstra 
graph distances derived tuning test set speed rd mds enabled tuning 
advantage music application quality embedding tested externally 
test set playlists pairs sequential songs gathered real users listened playlists 
embedding considered sequential songs playlists frequently closer random songs database 
table shows quality embedding fraction random songs closer sequential songs 
lower fraction better embedding embedding accurately reflects users ideas music similarity 
fraction computed treating pairwise distances scores classifier computing roc curve computing area roc curve 
algorithm average cpu time random songs closer sec sequential songs fse lmds lmds lmds lmds laplacian eigenmaps table speed accuracy music embedding various algorithms 
embeddings dimensional 
cpu time measured ghz pentium 
fse uses fixed rectangle size entry table 
fse lmds competitive 
lmds trade speed accuracy increasing laplacian applied entire sparse similarity matrix slower rd mds algorithms perform problem 
gaussian kernel convert distances similarities laplacian 
slowness laplacian prevented extensive tuning parameters 
bob dylan cat stevens eagles beatles doors mac dire rolling stones led jimi hendrix talking heads police bryan ferry kate bush genesis crow suzanne vega peter gabriel sarah mclachlan tori amos lmds projection entire music dissimilarity graph 
coordinates artists shown 
lmds outperforms fse large presents qualitative results lmds projection 
top dimensions plotted form visualization music space 
visualization shown shows coordinates artists occur near center space 
restricted top dimensions projection sensible 
example tori amos sarah mclachlan mapped close 
artist track artist track jimi hendrix purple hand pocket jimi hendrix fire really want jimi hendrix red house know jimi hendrix don live today right jimi hendrix lady learn jimi hendrix rd stone sun ironic doors waiting sun sarah mclachlan full grace doors la woman sarah mclachlan hold doors riders storm sarah mclachlan doors love sarah mclachlan path thorns cat stevens ready sarah mclachlan possession cat stevens music tide high cat stevens jesus sarah mclachlan ice cream cat stevens king trees sarah mclachlan beatles octopus garden apple limp beatles tired apple bag beatles revolution apple fast beatles sgt pepper lonely call beatles please please hanging telephone beatles eleanor table playlists produced system 
playlist reads top bottom 
playlists interpolate songs 
main application music graph projection generation playlists 
different possible objectives music playlists background listening dance mixes music discovery 
criteria playlists play similar music avoid distracting jumps new age heavy metal 
goal generate playlists background listening 
criterion generation smoothness playlists generated linear interpolation embedding space 
smoothness possible playlist generation mode criteria added matching beats artist self avoidance minimum distance songs 
criteria added top smoothness criteria 
criteria matter subjective musical taste scope 
table shows background listening playlists formed interpolating projected space 
playlists drawn collection songs 
image interpolation point dimensional space valid song attached 
interpolation performed computing line segment connecting song placing equally spaced points line segment number slots playlist 
slot location previous song projected hyperplane normal line segment goes ith point 
projected location moved halfway ith point nearest song moved location placed playlist 
method provides smooth interpolation large jumps seen table 
discussion music playlist generation browsing utilize large sparse similarity graph designed editors 
order allow tractable computations graph vertices projected low dimensional space 
projection enables smooth interpolation dimensional display music 
music similarity graphs largest graphs embedded 
rectangular dijkstra mds algorithms efficiently embed large sparse graphs 
showed fse nystr lmds technique efficient comparable performance size rectangle 
algorithms efficient laplacian eigenmaps 
lmds permits accuracy speed trade preferable 
lmds music graph vertices edges embedded approximately minutes 
baker 
numerical treatment integral equations 
clarendon press oxford 
bengio 
vincent 
sample extensions lle isomap mds eigenmaps spectral clustering 
thrun saul sch lkopf editors proc 
nips volume 
bradley 
user area roc curve evaluation machine learning algorithms 
pattern recognition 
cox cox 
multidimensional scaling 
number monographs statistics applied probability 
chapman hall crc nd edition 
de silva tenenbaum 
global versus local methods nonlinear dimensionality reduction 
becker thrun obermayer editors proc 
nips volume pages 
dijkstra 
note problems connexion graphs 
numerical mathematics 
ellis whitman lawrence 
quest ground truth musical artist similarity 
proc 
international conference music information retrieval ismir 
faloutsos 
lin 
fastmap fast algorithm indexing data mining visualization traditional multimedia databases 
proc 
acm sigmod pages 
floyd 
algorithm shortest path 
communications acm 
fowlkes belongie malik 
efficient spatiotemporal grouping nystr method 
proc 
cvpr volume pages 
johnson 
efficient algorithms shortest paths sparse networks 
jacm 
platt burges weare zheng 
learning gaussian process prior automatically generating music playlists 
dietterich becker ghahramani editors proc 
nips volume pages 
young de leeuw 
nonmetric individual differences multidimensional scaling alternating squares method optimal scaling features 
psychometrika 
tenenbaum 
mapping manifold perceptual observations 
jordan kearns solla editors proc 
nips volume pages 
