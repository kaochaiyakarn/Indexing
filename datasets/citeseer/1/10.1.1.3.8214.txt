appears proceedings tenth national conference artificial intelligence aaai pp san jose ca july learning relations pathfinding 
local plateau problem 
bradley richards dept computer sciences university texas austin austin texas bradley cs utexas edu raymond mooney dept computer sciences university texas austin austin texas mooney cs utexas edu order learn ing systems foil focl forte generally rely hill climbing heuristics order avoid combinatorial explosion learn ing order concepts 
hill climbing leaves systems vulnerable local maxima local plateaus 
method called relational pathfinding proven highly effective escaping local maxima crossing local plateaus 
algorithm provide learn ing results domains family relationships qualitative model building 
learning sy stems order horn clauses foil focl forte quinlan pazzani brunk silverstein richards mooney employ hill climbing learn clauses literal time 
problems faced hill climbing sy stems call local plateau problem see 
arises order improve classification accuracy rule add literals simultaneously may single relations decrease category accuracy lead eventual improvement 
presents new method dealing problem relational pathfinding 
approach assumption relational domains usually exists fixed length path relations linking set terms satisfying goal concept 
example family domain fixed length path grandparent grandchild path consists parent relations 
method finding paths demonstrate method domains family relationships qualitative model building logic programming 
remainder organized follows section gives brief background order learning sy stems 
section describes algorithm relational pathfinding illustrating domain family relationships 
section presents results complex problem deriving qualitative models dynamic sy stems observed behaviors 
section gives results domain logic programming 
section compares relational pathfinding related field gives recommendations 
section summarizes concludes 
order learning order learning sy stems capable pure inductive learning 
foil quinlan focl pazzani brunk silverstein golem muggleton feng forte richards mooney 
foil golem designed pure inductive learners 
focl enhancement foil initial theory uses provide hints learning process 
forte designed primarily theory revision sy stem revising empty theory perform pure inductive learning 
sy stems learn order categorization rules golem learn top specialization adding single literal time rules 
top sy stems vulnerable local plateaus local maxima 
relational pathfinding designed aid type sy stem 
golem works bottom generalization helped technique 
top sy stems learning horn time positive examples covered 
clause generated adding literal time simple hill climbing technique 
step instantiations 
portion family tree 
algorithm 
iew relational pathfinding algorithm 
instantiate rule positive instance find isolated sub graphs sub graph constants initial values repeat sub graph expand paths relation possible ways remove paths previously seen values intersection resource bound exceeded intersections intersection add path relations original rule new rule contains new singletons add relations singletons eliminated singletons keep expanded rule discard rule replace constants variables select accurate rule negatives provable normal specialization finish rule predicate data tested ability discriminate remaining positive negative examples best discriminator added negative examples excluded clause complete 
additional clauses formed cover remaining positive examples 
course hill climbing approach vulnerable local plateaus local maxima 
relational pathfinding attempt avoid locality problems 
relational pathfinding idea pathfinding relational domain view domain possibly infinite graph constants linked relations hold constants 
example portion data hinton family domain hinton shown 
domain particularly easy visualize relations binary 
see local plateau problem trying define grandparent relation instances positive grandparent christopher colin negative grandparent christopher arthur single antecedent discriminate instances 
colin arthur parents children married determinate literals help example determinate literal available married christopher penelope parents children children parents 
order create correct theory simultaneously add required parent relations grandparent parent parent 
relational pathfinding assumption relational domains important concepts represented small number fixed paths constants defining positive instance 
example grandparent relation defined single fixed path consisting parent relations 
relational pathfinding tried anytime clause needs specialized relational paths joining variables 
pathfinding rule general specialization standard foil technique 
arises example rule requires non relational antecedents 
relational pathfinding finds paths successive expansion nodes associated constants positive example manner reminiscent quillian spreading activation quillian 
arbitrarily choose positive instance instantiate initial rule 
constants instantiated rule nodes domain graph possibly connected antecedents rule 
identify iso lated subgraphs constants initial rule contains antecedents constant forms singular subgraph 
view sub graph nexus explore surrounding portion domain graph 
exploration leads new node domain graph path value node reached path value 
initially constant sub graph 
finding uncle relations 

inductive learn ing performance hinton family domain averaged trials data value path length zero 
subgraph turn find new constants reached extending path defined relation 
constants form new set path values subgraph 
check set sets values subgraphs looking intersection 
find intersection expand node 
process continues find intersection exceed preset resource bound 
find intersection add relations intersecting paths original instantiated rule 
new relations introduced new constants appear complete rule adding relations hold singletons ther constants rule 
unable singletons rule rejected 
replace constants unique variables produce final specialized theory clause simultaneously discover intersections develop clauses choose provides best accuracy training set 
pathfinding algorithm potentially amounts exhaustive exponential search generally successful reasons 
searching nodes simultaneously greatly reduce total number paths explored reach intersection 
second meaningful relations defined short paths inherently limits depth search 
practical implementation method includes resource bound 
example suppose want learn relationship uncle initially empty rule positive instance uncle arthur charlotte 
process illustrated 
exploring paths node labelled arthur leads new nodes christopher penelope 
expand node labelled charlotte leading nodes victoria james 
point intersection lengthen paths originating node arthur 
eliminate values give intersection 
leaves path value victoria 
victoria value paths originating charlotte recognize intersection 
paths leading arthur victoria case identical merely leading different grandparents 
paths select providing best accuracy final path uncle parent parent parent literal male required complete rule relation added ordinary specialization 
test hypothesis relational pathfinding improves accuracy empirical learning sy stem ran forte richards mooney family data hinton quinlan relational pathfinding 
training sets randomly selected set containing positive instances near negative instances remainder serving test set 
data includes twelve family relation concepts training set instances includes average instances concept 
results see show significant gain learning 
qualitative model cascaded tanks 
table 
single behavior cascaded tanks reaching equilibrium 
inflow amount outflow amount outflow time performance size training set 
instances learning relational pathfinding levels relational pathfinding leads complete correct theory comparison foil quinlan achieved maximum accuracy data equivalent training instances 
qualitative modelling family domain ideal demonstrating approach relations binary form fairly simple graph 
relational pathfinding works equally complex domains long concepts viewed fixed length paths joining nodes graph 
example domain qualitative modelling 
qualitative model building complex domain reasons 
relations binary second values associated new variables simple atoms full behavioral descriptions may partially instantiated 
limitation sy stems derive qualitative models behaviors satisfactory method identifying missing variables 
example seek model cascaded tank sy stem shown complete model see include variables inflow outflow amount net flow tank 
observer measure externally visible variables omit net flow variables 
qualitative models defined qsim kuipers 
qsim model set variables conjunction constraints variables 
typical constraints relations include derivative dt add 
constraints describe qualitative relationships variables time 
example constraint states variables related strictly monotonically increasing function 
relational pathfinding provides way introduce missing variables model 
qualitative constraints impose restrictions values arguments relational pathfinding generate values paths partially instantiate values enforce restrictions 
values partial behavioral descriptions hypothetical sy stem variables 
paths intersect restrictions values consistent unified 
new rule generalized intersection value new variable model 
forte relational pathfinding able create correct models sy stem variables omitted input behavioral descriptions 
consider sy stem cascaded tanks inflow tank constant outflow tank provides inflow tank sy stem single behavior shown table omits mention net flow variables forte automatically produces model model amount amount inflow plus amount plus amount minus net minus amount net derivative amount net derivative amount net add net add net inflow constant inflow 
model correct model shown addition redundant 
logic programming horn theory viewed logic program 
domains family relationships qualitative models theory recursive 
wish sy predicates relations append reverse sort able produce recursive clauses 
new issue consider evaluate recursive calls 
problem process modifying predicate wish evaluate 
answer positive instances training set extensional definition predicate 
means sy logic programs expect training set contain complete set positive 
relational pathfinding recursive clause 
examples training set list reversal contains instances lists length distinct atoms 
training set evaluate recursive calls allows relational pathfinding develop recursive clauses 
consider predicate merge sort 
suppose definitions split merge learned base case relational pathfinding uses instance merge sort develop ground path shown 
path contains singleton constants 
able eliminate singletons adding relation merge sort 
replacing constants variables produces final correct rule merge sort split merge sort merge sort merge 
related earliest overcoming locality problems order learning vere introduced idea association chains composed determinate binary relations 
idea appeared ahead time order learning sy stems take advantage determinate literals see relational pathfinding 
adding determinate literals rule idea muggleton feng golem added foil quinlan 
determinate literals literals bindings derivable positive instance prior literals possible ground instantiation 
adding possible determinate literals predefined depth limit learning proceeds normally adding determinate literals added relations necessary cross local plateaus escape local maxima able learn correct rule 
learning complete excess determinate literals discarded 
theory chain determinate literals relational pathfinding 
domains relational paths long determinate literals may efficient 
domains find chain determinate literals cross local plateau escape local maximum relational pathfinding advantage 
method dealing locality problems relational silverstein pazzani 
approach learning sy stem predefined set templates describing combinations relations appear 
example predicate part generally appears definition part learning sy stem add entire templates single relations avoiding local maxima plateaus encounter 
method relational pathfinding general relational depend predefined templates predefined templates adequate learning domain relational efficient 
domain specific sy stem building qualitative models misq richards kuipers 
date general purpose learning sy stem applied problem golem bratko muggleton 
golem performance domain limited requires negative examples definitions qualitative constraints incomplete ignores corresponding values 
misq forte build qualitative models positive information 
relational pathfinding allows new model variables introduced natural way new method relational pathfinding helps order learning sy stems escape local maxima cross local plateaus 
similar approaches determinate literals relational approaches add multiple relations rule 
methods addresses problem escaping local maxima useful different circumstances 
relational pathfinding general methods potentially efficient 
results domains relational pathfinding proven useful 
learning family relationships provides substantial performance advantage requiring fewer examples learn accurate definitions 
qualitative modelling allows sy stem learn accurate model behavioral information variables missing 
logic programming provides effective way learn recursive clauses 
domains relational pathfinding allows sy stem overcome problem local maxima local plateaus limiting combinatorially explosive search 
research supported air force institute technology faculty preparation program nasa ames research center ncc national science foundation iri 
michael pazzani helpful comments earlier draft 
bratko muggleton learning qualitative models dynamic systems proceedings eighth international workshop machine learning pp 

hinton learning distributed representations concepts proceedings eighth annual conference cognitive science society 
kuipers qualitative simulation artificial intelligence 
muggleton feng efficient induction logic programs proceedings conference algorithmic learning theory 
pazzani brunk silverstein knowledge intensive approach relational concept learning proceedings eighth international workshop machine learning pp 

quillian semantic memory semantic information processing mit press pp 

quinlan learning logical definitions relations machine learning 
quinlan determinate literals inductive logic programming proceedings eighth international workshop machine learning pp 

richards kuipers automatic abduction qualitative models proceedings tenth national conference artificial intelligence aaai 
richards mooney order theory revision proceedings eighth international workshop machine learning pp 

silverstein pazzani relational constraining constructive induction relational learning proceedings eighth international workshop machine learning pp 

vere induction relational productions presence background information proceedings fifth international joint conference artificial intelligence ijcai pp 

notes simple example disregard possibility negation grandparent parent 
uncle relationship completely defined paths length length 
illustrate process finding shorter paths 
simplicity show direction change sign variable time point 
complete behavior includes qualitative magnitudes dimensional information 
direction change increasing decreasing steady 
sign plus minus zero 
