data streams algorithms applications muthukrishnan contents puzzle finding missing numbers 
puzzle fishing 
lessons 
map data stream phenomenon data streaming formal aspects data stream models 
motivating scenario 
applications data stream models 
foundations basic mathematical ideas 
sampling 
random projections 
basic algorithmic techniques 
group testing 
tree method 
robust approximation 
exponential histograms 
lower bounds 
summary data stream principles 
streaming systems new directions related areas 
functional approximation theory 
data structures 
computational geometry 
graph theory 
periodically updated website typing google search 
rutgers univ labs research cs rutgers edu research att com 
databases 
hardware 
streaming models 
permutation streaming 
windowed streaming 
synchronized streaming 
data stream quality monitoring 
fish eye view 
linear algebra 
statistics 
complexity theory 
privacy preserving data mining 
concluding remarks data stream art 
short data stream history 
perspectives 
discuss emerging area algorithms processing data streams associated applications applied algorithms research agenda 
benefits inspired application study novel problems discouraged confines particular 
discussion idiosyncratic 
personal agenda scientist mathematician engineer 
reflected times 
art nature homeland security elements 
imagine think imagines possibilities asks questions seeks provable solutions builds solutions 
little data streaming 
see barry mazur book imaginary math 
area open problems 
puzzles 
puzzle finding missing numbers permutation 

element missing 
paul shows carole elements set increasing order 
carole task determine missing integer 
trivial carole memorize numbers seen far formally bit vector large impractical 
assume say log bits memory 
carole determine missing integer 
starter simple solution carole stores missing integer 
input integer entails subtraction 
total number bits stored log hand carole needs log bits worst case 
fact carole optimal algorithm 
say power convenience 
store parity sum ith bits numbers seen far 
final parity sum bits bits missing number 
similar solution unknown example letting max time 
paul carole history 
started questions problem solved 
paul stood paul erdos asked questions 
carole anagram oracle 
aptly answered questions 
joel spencer peter winkler paul carole coincide chooser respectively studying certain chip games carole chose groups chips falls paul determined group chips push 
joel introduced thesis 
game paul put coins weighing pans 

puzzle paul permutes carole 
little play roles 
generalizing puzzle little elements missing 
students graduate algorithms class suggested carole store 
giving equations unknown numbers carole far fewer bits tracking ss general smallest number bits needed identify missing numbers approach problem may thought having power sums 

solving 
different provably equivalent method uses elementary symmetric polynomials 
ith polynomial 
sum possible term products parameters 
carole continuously maintain missing items field prime suffices paul presents numbers details omitted 

carole needs factor polynomial determine missing numbers 
deterministic algorithms known problem randomized algorithms take roughly log bits time 
power sum method colleagues typically propose dinner 
elementary symmetric polynomial approach comes authors solve set reconciliation problem communication complexity model 
subset reconciliation problem related puzzle 
readers may guessed may different efficient solution puzzle insights error correcting codes combinatorial group testing 
true 
log log bits time solution contrast algorithm log bits worst case 
coincidence puzzle contains elements data stream algorithms 
generalize paul presents multiset elements single missing integer allowed re integers showed paul presents updates showing integers insert delete carole task find integers longer problems longer mere puzzles derived motivating data stream applications 
puzzle fishing doubtless inspiring data streams puzzle derived nature 
say paul goes fishing 
different fish species 
paul catches fish time fish species catches time number times catches species time species rare time appears precisely catch time rarity catch time ratio number rare paul calculate precisely bit vector counter current number rare species updating data structure operations fish caught 
paul wants store bits fit tiny suitcase preferably bits 
suppose paul deterministic algorithm compute precisely 
feed paul set fish species say paul algorithm stores bits suitcase 
check simply feeding paul checking number rare items decreases way recover entire suitcase feeding different time impossible general paul stored bits 
paul wishes suitcase compute exactly 
argument elements lower bound proofs area data streams 
proceeding task hand paul approximate 
paul picks random fish species independently randomly probability maintains number times fish types appear catches fish 
say 
counts time paul outputs estimator 
pr pr large say estimator arbitrarily small significant probability 
exercise doing mathematics fishing misses ingredient large presumably larger species spot paul fishes 
choosing random species waiting caught exercise fishing 
realistic redefining rarity wrt species paul fact sees catch 
paul approximate compute exactly small number bits 
define family hash functions 
min wise independent pr min paul chooses min wise independent hash functions 
parameter determined maintains min time min hash value multi set 

maintain counters 
counts number times item hash value appears 

trivial maintain progresses new items seen 
notice pr probability hash value items appeared precisely equals 
estimator provided large say completes sketch paul algorithm 
ironic paul adapted task solution traditionally carole 
done 
paul needs pick 
paul resorts tendency permute picks randomly chosen permutation 
min wise hash functions 
done 
requires log bits represent random permutation set permutations 
number bits needed store hash function fit suitcase 
overcome problem paul math 
picks family approximate min hash functions 
family hash functions called min wise independent pr min 
indyk presents family set polynomials gf degree log min wise independent hash functions function family represented log log bits hash function computed efficiently log time 
plugging solution paul uses log log bits estimates provided large turn applications streaming interest need determine large solution 
aside problem estimating rarity related different problem 
consider fishing think random sampling process 
unknown probability distribution countable set fish types probability associated fish type catch sample fishes drawn independently fish types distribution number times appears number fish types appear times consider estimating probability fish type catch 
elementary reasoning indicate probability large number fish types ocean seen paul catch impossible fish types infinite 
fish types appear sample probability caught conundrum elementary reasoning ocean 
problem estimating called missing mass problem 
classical attributed turing shown estimated provably small bias recall rarity closely related result estimating rarity data streams independent interest context estimating missing mass interested convergence properties turing estimator see david mcallester 
generalize fishing letting numerator generally letting carole go fishing letting paul carole throw fish back sea needed real data streaming applications 
honestly fishing motif silly total number fish species sea estimated roughly afford array bits 
reality data streams describe confronted fishing far numerous domain 
lessons noticed called puzzle people look discussion seriously 
puzzle section shows case data stream problem deterministically solved precisely log bits 
deterministic exact uncommon data stream processing 
contrast puzzle section solved approximation randomized algorithm polylog bits 
randomized approximate solutions representative currently known data stream algorithms 
estimation section accurate large small estimate arbitrarily bad 
points feature generally underlies data stream algorithmics 
features applied need keep mind formulating problems address data stream issues discussed detail 
map section describe data stream phenomenon 
deliberately avoided specific models phenomenon real models means may change time 
section currently popular data stream models motivating scenarios applications algorithms models dealing data streams 
section abstracts mathematical ideas algorithmic techniques lower bound approaches data stream models comprise foundation theory data streams emerging 
section right add time 
section discusses applied data streams 
drawn different systems areas grouped categories may useful perspective 
section contains new directions open problems arise research areas data streaming perspective applied 
traditional areas get enriched new ones emerge 
concluding remarks section invoke show streaming art history notes streaming 
important part section 
data stream phenomenon web site www gov projects data stream html defines data stream sequence digitally encoded signals represent information transmission 
little specific 
data stream represents input data comes high rate 
high rate means stresses communication computing infrastructure may hard transmit entire input program compute sophisticated functions large pieces input rate store capture temporarily archive long term 
people typically think level stress tcs capacity 
view data stored files 
transmitted links slow communication erroneous may delays correct data eventually gets go 
computing power limited program high complexity takes long long 
time get desired response principle get 
save data need 
simplified picture tcs requirements reasonable need balanced resources produced amount data technology ship process store patience manipulate 
developments produce new challenges tcs infrastructure 
ability generate automatic highly detailed data feeds comprising continuous updates 
ability built past decades networks spanned banking credit transactions 
dedicated network systems provide massive data streams satellite high resolution measurement earth radar derived meteorological data continuous large scale astronomical surveys optical infrared radio wavelengths atmospheric radiation measurements internet general purpose network system distributed data sources data consumers millions users 
scaled rate transactions tremendously generating multiple streams browser clicks user queries ip traffic logs email data traffic logs web server peer peer downloads internet easier deploy special purpose continuous observation points get aggregated vast data streams example financial data comprising individual stock bond securities currency trades get accumulated multiple sources internet massive streams 
wireless access networks threshold scaling phenomenon 
particular emerging vision sensor networks combines orders observation points sensors available wireless networking technology posited challenge tcs needs 
bio seismic security sensors emerging examples 
need sophisticated analyses update streams near real time manner 
traditional modifies underlying data reflect updates real time queries fairly simple looking value 
true banking credit transactions 
complex analyses trend analysis forecasting typically performed offline warehouses 
automatic data feeds generate modern data streams arise monitoring applications atmospheric astronomical networking financial sensor related 
need detect outliers extreme events fraud intrusion unusual anomalous activity monitor complex correlations track trends support exploratory analyses perform complex tasks classification harmonic analysis time critical tasks applications emerging applications homeland security need done near real time accurately keep pace rate stream updates accurately reflect rapidly changing trends data 
factors uniquely challenge tcs needs 
computer science community traditionally focused scaling wrt size efficiently manipulate large disk bound data suitable data structures scale databases petabytes synthesize massive datasets far attention benchmarking studying performance systems rapid updates near real time analyses 
benchmarks database transactions inadequate 
ways build workable systems tcs challenges 
tcs systems sophisticated developed high level principles apply 
things parallel 
lot data stream processing highly parallelizable computing storage capacity somewhat harder parallelize transmission capacity demand 
control data rate sampling shedding updates 
high energy particle physics experiments cern soon produce reduced real time hardware gb data stream careful sampling shedding 
statisticians sampling theory getting applied ip network streams 
round data structures certain block boundaries 
example community interest approach finding fraud telephone calls uses graph data structure including previous day perform current day analysis rounding freshness analysis period day 
effective way control rate real time data processing pipelining 
hierarchically detailed analysis 
fast simple filtering aggregation lowest level slower sophisticated computation john bates chief remote sensing applications division gives nice exposition www org bms ppt www org bms html 
higher levels smaller data 
hierarchical thinking stacks memory hierarchy nicely 
asking imaginative questions lead effective solutions resource constraint applied algorithms researchers know 
natural approaches ultimately limiting 
may meet ones myopic expectations 
need understand full potential data streams 
certain amount resources data stream rate particular analysis task 
natural approaches dealing data streams discussed involves approximations algorithmic principles data stream approximation 
needs systematic theory data streams 
get novel algorithms 
build data stream applications ease proven performance 
follows emerging theory data streams 
note 
previous paragraphs case data stream research 
done 
paul network service provider convince carole customer ip hosts connecting website get high quality real time media service 
needs monitor ip traffic web site understand packet performance host 
plotting statistics real time way convince carole 
numerics 
single oc link may transmit gbytes hour packet header information mbps 
takes oc link transfer streaming log challenge write tapes process new ghz intel processor rate 
limerick dialog 
chose describe data stream phenomenon words 
think words meaningful greek symbols numerals 
hope imagination implications data streaming 
imagine intend collect data may forced drop large portion store may time scan making judgements 
new kind uncertainty computing randomization approximation jar way 
data streaming formal aspects section formal define various models dealing data streams motivating application internalize 
data stream models input stream 
arrives sequentially item item describes underlying signal onedimensional function 
models differ describe time series model 
equals appear increasing order suitable model time series data example observing traffic ip link minutes nasdaq volume trades minute input may comprise multiple streams multidimensional signals consider variations 
cash register model 
increments 
think mean state signal seeing ith item stream 
cash register multiple increment time 
popular data stream model 
fits applications monitoring ip addresses access web server source ip addresses send packets link ip addresses may access web server multiple times send multiple packets link time 
model appeared literature formally name 
turnstile model 
updates 
think mean signal seeing ith item stream may positive negative 
general model 
mildly inspired busy ny subway train station turnstile keeps track people arriving departing continuously 
time large number people subway 
appropriate model study fully dynamic situations inserts deletes hard get interesting bounds model 
model appeared different guises gets name 
small detail cases refer strict turnstile model 
intuitively corresponds letting people exit turnstile entered system unrealistic intuition fits applications 
example database delete record inserted 
hand instances streams may non strict example considers signal difference cash register streams obtains non strict turnstile model 
avoid making distinction turnstile models necessary 
models decreasing order generality follows turnstile cash register time series 
conventional description models appears 
theoretical point view course wishes design algorithms turnstile model practical point view models weaker may suitable application 
furthermore may provably hard design algorithms general model may settle algorithms weaker model 
wish compute various functions signal different times stream 
different performance measures 
processing time item stream 
proc 
time space store data structure time 
storage time needed compute functions 
compute time rephrasing solutions puzzles start terms data stream models performance measures 
puzzle model function proc 
time storage compute time section cash register log log section cash register log log log state ultimate desiderata generally accepted remember felt martin farach colton coined name disk access machine model dam model drive new york city bell labs 
dam model catching 
space needed compute function 
explicitly discuss typically order storage 
time data stream item processing time storage computing time simultaneously preferably polylog 
readers get sense technical challenge desiderata sets forth contrasting traditional dynamic data structure say balanced search tree processes update log time supports query log time uses linear space store input data 
data stream algorithms similarly thought maintaining dynamic data structure restricted sublinear storage space implications come 
desiderata weakened time data stream item processing time storage need simultaneously preferably polylog computing time may larger 
proposed papers applies cases computing done frequently update rate 
domain input large warrant polylog storage may fact mean computing time linear domain input may prohibitive applications particular query 
comment desiderata 
restrict small sublinear amount space 
typically says data stream massive may able store see 
argument 
data stream massive describes compact signal small afford space linear solve problems conventional computing framework 
example see massive stream peoples ids age years wish calculate functions peoples age distribution signal trivial manage 
data streams unique applications data streams describe signals large universe 
example may number source destination ip address pairs potentially may number time intervals certain observations increases rapidly time may addresses web potentially infinite web queries get written headers 
generally significantly convincing data streams observations multiple attributes subset attributes may comprise domain signal application leads potentially large domain spaces individual attribute domains small 
second polylog function 
log input size lower bound number bits needed index represent signal poly gives familiar room play 
cognitive analogy explains desiderata qualitatively may appeal readers thorup 
human beings perceive instant life array sensory observations visual aural nervous 
course life manage store part observations function adequately recall detail instant lives 
data stream processing machines 
motivating scenario popular scenario data streaming 
internet comprises routers connected forward ip packets 
managing networks needs real time understanding faults usage patterns unusual activities progress 
needs analysis traffic fault data real time 
consider traffic data 
traffic routers may seen levels 

finest level packet log ip packet header contains source destination ip addresses ports 
higher level aggregation flow log flow collection packets values certain key attributes source destination ip addresses log contains cumulative information number bytes packets sent start time time protocol type flow 

highest level snmp log aggregate data number bytes sent link minutes 
logs generated ip networks fault alarms cpu usage routers examples suffice discussion 
collect store snmp data 
store months worth data large isp laptop tool 
store data year stressing laptop 
arguments data streaming apply flow packet logs far voluminous snmp log 
detailed description defense streaming data analysis ip network traffic data particular section 
queries may want ask ip traffic logs 

traffic went link today range ip addresses 
example slice dice query multidimensional time series flow traffic log 

distinct ip addresses link send traffic day distinct ip addresses currently link ongoing flow 

top heaviest flows day currently progress 
solution problem flow logs indirectly provides solution puzzle section 
flows comprised packet rare flows 
closely related question find tcp ip syn packets matching packets 
query motivated need detect denial service attacks networks early possible 
problem motivations fishing exercise section 
traffic yesterday routers common similar 
distributed query helps track routing usage network 
number notions common similar apply 
system supports similarity queries snmp logs operational network provider 

top correlated link pairs day correlation measure 
general number correlation measures may suitable 
rely signal analysis wavelet fourier traffic pattern prove effective 
describe algorithms computing wavelet fourier representation data streams 

source ip address minute interval count number bytes number packets related transfers 
interesting query represent output stream suitable approximation case 
questions simple slice dice aggregate group queries 
sparse sample interesting questions 
imagine setup discover relevant questions 
complex queries involve joins multiple data stream sources 
example correlate formalize examples detail say example 
distinct ip addresses link send traffic day 
say monitor packet log 
input stream 
sequence ip packets link packet having source ip address 
number packets sent source ip address initialized zero day 
signal general reasons clear paragraph 
packet adds model cash register 
counting number distinct ip addresses link day far solved determining number nonzero time 
second consider distinct ip addresses currently link 
formally time focused ip addresses flow began time originates packet log information identify packets flow 
reality hard tell flow ended 

number flows source ip address currently involved initialized zero day 
packet flow add source packet flow subtract source packet 
model turnstile 
counting number distinct ip addresses currently link solved determining number nonzero time 
similarly examples formalized terms data stream models suitable functions computed 
note lately collecting analyzing ip traffic data data stream context 
analyzing traffic data new 
telephone cellular networks call detail records routinely collected billing purposes analyzed sizing forecasting troubleshooting network operations 
experience cellular lot discover engineering problems network near real time live feed cellular network 
ip traffic data far voluminous billing usage 
reason invest measurement analysis infrastructure mainly network maintenance value added services 
case making investment strong communities service providers 
sprint engaged topic 
presents possibility getting suitable data stream sources companies 
point am going continue theme imaginative suggest mental exercise 
consider data streaming scenario section different ip traffic log case 
example exercise consider multiple satellites continuously gathering multiple atmospheric observations entire earth 
data analysis questions arise spatial data streams 
homework exercise teaching course 
queries arise substantially different ones listed ip traffic logs case 
particular problems naturally arise area computational geometry 
wealth useful fundamental research remains done 
want mental exercise related computer science concepts consider streaming text scenario 
exercise distributed servers processes stream text files instant messages emails faxes say sent users 
interesting data analysis queries text data streams 
example may look currently popular topics conversation subpopulation 
involves text processing data streams quite different ip traffic logs satellite stellar observation scenarios 
need develop examples great detail done ip traffic analysis scenario earlier 
far converging basic characteristics data streams building block queries span different application scenarios 
martin strauss hope case insurmountable opportunities 
applications data stream models data stream models suitable applications managing rapid automatic data feeds 
particular find applications scenarios cash register turnstile models 
pass sequential explicit data stream feeds discussed far implicit streams arise artifact dealing massive data 
expensive organize access sophisticated data structures massive data 
programs prefer process scans 
naturally maps time series cash register data stream model seeing data incrementally sequence updates 
disk bus tape transfer rates fast sees rapid updates inserts making pass data 
data stream model applies 
focus pass computing new 
automata theory studied power versus way heads 
sorting tape bound data relied making passes 
seeking sophisticated computations far faster updates 
application differs data streaming phenomenon saw earlier number ways 
data streaming analysis driven monitoring applications determines functions want compute stream 
may mind compute common function transitive closure eigenvalues want massive data passes 
second programming systems support scans supporting infrastructure significant amount fast memory may exist ip routers satellites generate data streams 
pass algorithms may flexibility 
rate data consumed controlled smoothed data processed chunks contrast data streams potentially higher variable update rates 
data stream model applies pass algorithms specific concerns different 
monitoring database contents 
consider large database undergoing transactions inserts deletes queries 
cases monitor database contents 
example consider selectivity estimation 
databases need fast estimates result sizes simple queries order determine efficient query plan complex queries 
estimates simple queries generated fast running queries entire database expensive 
selectivity estimation problem 
maps data stream scenario 
inserts deletes database updates turnstile model data stream signal database 
selectivity estimation query function computed signal 
data algorithms desirable property represent signal database small space results obtained looking database time space significantly smaller database size scanning time 
data stream algorithms turnstile model naturally find algorithms selectivity estimation 
reasons monitor database contents approximate query answering data quality monitoring rich areas right extensive literature 
discussed mea 
data stream algorithms find direct applications areas 
readers dismiss application monitoring database content disguised data streaming 
application motivated updates proceed slow rate relies small 
john bates national atmospheric administration www etl noaa gov faces task copying decades worth data legacy tapes current tapes take couple years continuous multiple tape readers 
question intensive copying process blocks data reside disk period time 
interim perform needed statistical analyses historic data 
apt data stream algorithms 
space fast compute time aspect data stream algorithms avoid database quick monitoring 
foundations main mathematical algorithmic techniques data stream models collected discussion technique driven problem driven 
sketchy point pointers papers 
basic mathematical ideas sampling different sampling methods proposed domain sampling universe sampling reservoir sampling distinct sampling sampling algorithms known find number distinct items cash register data stream 
see 
finding quantiles cash register data stream 
see results 
finding frequent items cash register data stream 
see 
problems nice applications results ones cited 
quite practical implement sampling high speed streams 
fact systems monitor data streams specially ip packet sampling stream just slow rate reasonable level done principled manner valuable signals may lost 
keeping sample helps estimate different statistics additionally helps return certain sample answers non aggregate queries 
consider problem say data streams observed variables 
example correlated aggregate computing aggregate function sum max min corresponding satisfy certain relationship sampling queries approximated data streams 
see motivation 
main difficulties sampling data stream problems 
sampling powerful primitive problems 
needs far samples performing sophisticated analyses 
see lower bounds 
second sampling method typically turnstile data stream model stream unfolds samples maintained algorithm get deleted may forced resample past general expensive impossible practice case allowed data stream models 
random projections approach relies dimensionality reduction projection random vectors 
random vectors generated space efficient computation random variables 
projections called sketches 
approach typically works turnstile model quite general 
building influential indyk proposed stable distributions generate random variables 
sketches different stable distributions useful estimating various norms data stream 
particular sketches gaussian random variables get estimate norm data streams cauchy distributions gets estimate norm lot motivation computing norm data stream methods prove useful computing functions 
example sketches estimate number distinct elements time turnstile data stream model 
variants sketches estimate quantiles time turnstile data stream model 
variants sketches algorithmic techniques dynamically track frequent items wavelets histograms turnstile data stream model 
sketches estimate self join size database relations 
related estimating inner product vectors provably hard general estimated high precision inner product large 
variations random projections simpler ilk 
example random subset sums counting sketches bloom filters 
detailed discussion connection needed 
problem design random projections complex random variables generalizations find suitable streaming applications 
instances considering random projections complex numbers generalization useful 
example matrix obtained replacing uniformly randomly 
det det determinant matrix permanent matrix det calculated polynomial time difficult compute estimate 
observation presents method estimate polynomial time det procedure high variance 
obtained replacing uniformly randomly det additionally variance falls significantly 
extending approach quaternion clifford algebras lot progress decreasing variance deriving effective estimation procedure permanent 
powerful concept generating sequence random variables drawn stable distribution doing property range summed fast demand 
constructions exist fact generated fast small space 
number constructions known preliminary ones reed muller construction general construction sketches approach stable distributions 
turnstile model find applications including histogram computation graph algorithms data streams 
basic algorithmic techniques number basic algorithmic techniques binary search greedy technique dynamic programming divide conquer directly apply data stream context conjunction samples random projections 
algorithmic techniques proved powerful 
group testing goes back earlier paul carole game 
paul integer mind 
carole determine number asking 
carole determines various paul answers truthfully 
questions carole need worst case 
entire area combinatorial group testing produces solutions problems 
data stream case question group items algorithm plays role carole 
set applies number problems data streams 
may thought coding decoding small space 
examples finding frequent items turnstile data streams 
determining highest haar wavelet coefficients turnstile data streams 
estimating top fourier coefficients sampling 
problem paul sees data stream representing carole sees data stream representing ac domain 
design streaming algorithm determine certain number largest ap max ac monika henzinger jennifer rexford posed problem various times 
strong intuitive appeal compare today data yesterday find ones changed 
certain relative norms similar problem provably hard 
tree method method applies nicely time series model 
typically balanced tree atop data stream 
updates come leaves tree revealed left right order 
particular path root currently seen item right boundary tree seen 
maintain small space data structure portion tree seen far typically storage level updated leaves get revealed updating right boundary 
algorithmic scheme finds applications computing largest haar wavelet coefficients time series data stream 
building histogram time series data stream 
applications finding certain outliers called 
building parse tree atop time series data stream seen string 
applications estimating string edit distances estimating size smallest grammar encode string 
problem similar ilk needs new ideas 
problem signal size time series data stream parameters goal find points remove finding largest coefficients remaining signal smallest sum squared error 
wavelet version problem studied 
applications tree hierarchy imposed artifact problem solving approach 
means algorithm data stream seen tree method building clusters points building higher level clusters representatives tree 
speculate yair bartal fundamental result embedding arbitrary metrics tree metrics find applications data streams context reducing difficult problems ones tree method applied effectively 
robust approximation concept variation local minima maxima suited approximations 
consider constructing near optimal bucket histogram signal 
approximation optimal histogram called robust property refined buckets resulting histogram little better approximation powerful concept constructing histograms get bucket optimal histogram pull poly log bucket histogram robust cull bucket histogram appropriately provably approximate 
details 
suspect robust approximations find applications 
result improved algorithm median problem data streams phase polylog facility solution obtain algorithm facilities provably accurate 
reminiscent robust approximation technical distinction polylog facility solution robustness property 
exponential histograms algorithms designers natural think exponential histograms dividing line regions boundaries distance keep points rank restricted polylog space data structure 
technique dimensional nearest neighbor problems facility location maintaining statistics window certain perspective estimating number distinct items 
simple natural strategy get seamlessly data stream algorithms 
lower bounds powerful theory lower bounds emerging data stream models 
compressibility argument 
section example 
argues seen portion data stream stored data structure solving problem design subsequent portion stream solving stream help recover precisely compressed small space lower bound size follow 
communication complexity 
communication complexity models establish lower bounds data stream problems 
particular see 
estimating set disjointness classical hard problem communication complexity underlies difficulty estimating basic statistics data streams 
see different communication models distributed stream settings 
reduction 
reduces problems known hard ones 
results known 
see examples 
information approach data stream lower bounds 
summary data stream principles algorithmic ideas proved powerful solving variety problems data streams 
hand lower bound technology follows problems finding wavelets src wavelets dest decay sse top wavelet coefficients ip data 
frequent items finding small error histograms clustering versions provably hard solve exactly approximate data streams 
successful solving problems real life main principles hold data stream applications 
signals real life terms property 
real life signals small number coefficients capture trends large 
example shows sum squared error reconstructing distribution highest coefficients various values different distributions number bytes traffic involving ip address source destination 
total number ip addresses possible 
get error drop 
capturing major trends ip traffic coefficients prove adequate 
ip traffic flows send large fraction traffic 
possible src dest ip flows interested heavy hitters usually focused small number hundreds 
flows 
means typically interested tracking frequent items small large phenomenon arises problems typically interested small number facilities clusters unusual events data streams exceptions significantly large 
number rare flows flows involving small number packets number distinct flows significantly large network attacks 
data quality problems data streams say interface polled expected problem abundant number polls may far expected 
principles implicitly designing useful data stream algorithms 
applied need keep principles mind abstracting appropriate problems study 
streaming systems systems process data streams 
think categories 
hands systems approach data streams 
uses operating system support capture streams special hooks standard programming languages get additional facility manipulating streams 
research call detail records analysis falls category hancock special purpose language 
researchers andrew moore framework quite successfully process large data sets 
ultimately know processes data stream rate generated ip network routers 
second systems high performance database process updates standard technology bulk loading fast transaction support 
builds applications atop database 
system lets database handle snmp log updates provides application level support visualizing correlating traffic patterns links ip routers 
works snmp logs production quality highly stressed packet flow logs 
bellman monitors data quality problems databases takes approach capturing transactions generic database performing statistical analysis relationships attributes various database tables 
needs scale large transaction rates 
database systems internals directly modified deal data streams 
active research area involves new stream operators sql extensions novel optimization techniques scheduling methods continuous query paradigm entire suite developments needed data stream management system dsms 
projects various universities type include niagaracq aurora telegraph stanford stream development demos conferences see sigmod 
system know category gigascope operationally deployed ip network 
deal stream rates generated ip networks point provides features geared ip network data analysis 
suitable general purpose data stream management variety data streams 
outstanding questions designing building dsmss need 
needs multiple applications defined notion stream common applications powerful operators useful applications order justify effort needed dsmss 
point ip network traffic monitoring somewhat developed application 
needs done applications text spatial data stream scenarios need dsmss 
extent algorithmic ideas incorporated emerging streaming systems 
bellman approximation algorithms including sampling random projections 
systems third category hooks sampling 
discussion testing random projection estimations gigascope reason believe simple random projections technique useful systems 
new directions section presents results areas get included 
discussion reveal open directions problems polished gems ideas 
kannan interesting talk open problems streaming 
related areas spirit techniques data streaming area related areas 
pac learning authors studied sampling algorithms clustering context pac learning 
detailed comparison needs done problems learning fourier wavelet spectrum distributions streaming solutions pac learning methods 
online algorithms data stream algorithms online component input revealed steps resource constraints typically incorporated competitive analysis online algorithms 
property testing area focuses typically sublinear time algorithms testing objects separating far having desired property 
check rubinfeld talk done sublinear time 
typically results focus sampling processing sublinear amount data 
mentioned earlier sampling algorithms simulated streaming algorithms streaming models 
markov methods 
data streams may thought intermixed states multiple markov chains 
reason maximum likelihood separation markov chains reasoning individual chains resource constraints data streams 
outlook needs developed lot 
functional approximation theory central problems modern mathematical approximation theory approximate functions concisely elements large candidate set called dictionary unit vectors span input signal representation terms input linear combination dictionary elements typically concise approximation signal error representation indicates approximates problem find best term representation find minimizes focus error 
signal error zero spans familiar special case problem dictionary fourier basis appropriate trigonometric functions 
haar wavelets comprise special case 
special cases examples orthonormal dictionaries case orthonormal dictionaries parseval theorem holds parseval theorem implies best term representation comprises largest inner product functional approximation theory interested larger redundant dictionaries called input signals distinct zero error representation different applications different natural dictionaries best represent class input signals generate 
tradeoff dictionary size quality representation dictionary properly chosen 
choosing appropriate dictionary application art 
problem determining approximate representation signals needs studied different redundant dictionaries 
directions studying specific dictionaries derived applications studying problem arbitrary dictionary completely general 
studying specific dictionaries 
specific dictionary interest wavelet packets 

define 
follows 
wavelet packets comprises vectors defined different values richer known haar wavelets potentially give better compression 
problem represent function linear combination vectors wavelet packets 
vectors necessarily orthogonal merely choosing largest 
gem result problem author proves best representation terms obtained log orthogonal terms 
representing signals orthogonal wavelet packet vectors doable 
presumably result improved allowing approximation best term representation 
problem number special dictionaries interest beamlets curvelets ridgelets suitable classes applications 
design efficient algorithms approximate best representation function dictionaries 
studying general dictionaries 
escaped attention approximation theory researchers proves general problem np hard 

addition contained nice result 
say obtain representation error needs terms 
matrix obtained having ith column pseudoinverse 
pseudoinverse generalization inverse exists matrix 
full rank author presents greedy algorithm finds representation error log terms 
deserves revived open problems remain 
problem improve fewer terms relaxing error achieved 
nontrivial non greedy algorithm problem 
problem technical problem follows algorithm takes time step greedy algorithm 
dictionary preprocessing design faster algorithm finding approximate representation signal greedy algorithm 
difficult finding best find near best greedy step prove approximation degrade significantly 
questions addressed fairly general fully general dictionaries 
dictionary coherence distinct 
orthogonal dictionaries 
coherence generalization 
nearly exponentially sized dictionaries generated small coherence 
dictionaries small coherence approximation algorithms shown theorem fix dictionary coherence signal suppose term representation error opt 
iterations polynomial find representation error 
line research just developed see new developments 
authors approximate nearest neighbor algorithms implement iterations theorem efficiently proved approximate implementation iterations degrade error estimates significantly 
think powerful framework efficient algorithms problems functional approximation theory framework 
ingrid daubechies spoke results ams maa joint meetings 
functional approximation theory general focused characterizing class functions error certain decay 
see problems 
point view nature problems discussed clearly appealing 
wonderful area new algorithmic research starting recipe study formulate algorithmic problems solve 
propose directions design new wavelets general dimensional tiling current wavelet definitions rely restricted set dimensional tiling 
design new wavelets tree decomposition la esp 
cases gives vectors dictionary defined intervals just dyadic haar wavelets 
exploring directions means finding classes functions represented compactly dictionaries efficiently find representations 
data structures heard puzzle leaves paul position singly linked list needs determine list loop 
remember log bits number items list 
puzzle small space exploration list generalized arbitrary graphs 
solutions relies leaving finger doing step exploration finger finger advanced iteration 
puzzle flavor finger search trees goal leave certain auxiliary pointers data structure search item helps subsequent search 
finger search trees rich area research 
richard cole dynamic finger conjecture splay trees example deep problems 
nice result appeared 
authors construct log space finger structure node balanced search tree maintained insertions deletions searching item rank item rank takes log time 
modulo exceptions finger search data structures prior needed bits 
think streaming result 
believe hope result generate insights streaming data structures 
particular immediate directions extend results external memory geometric data structures segment trees appropriate formalization course 
specific data structural traversal problem 
problem graph memory initially empty 
vertices explicitly loaded memory vertices may reside time 
say edge evaluated memory time 
minimum number loads needed evaluate edges graph 
caterpillar graph loaded optimally easily 
fan chung pointed dual graph obtained looking triangles may certain structure loaded optimally 
think problem arises query optimization tertiary databases sunita sarawagi thesis 
computational geometry computational geometry rich area 
problems computational geometry arise applications earth observations example naturally generate spatial data streams spatial queries 
arise implicitly modeling real life scenarios 
example flows ip networks may thought intervals state time time text documents get mapped high dimensional vector spaces consider problem estimating diameter points data stream 
results interesting 
indyk considers problem cash register model points dimensions arrive time 
algorithm uses dn space compute time item produces approximation diameter 
algorithm natural 
choose random vectors 
maintain points largest smallest point 
sufficiently large computing diameter points give approximation 
better algorithm known 
take point stream center draw sectors centered point appropriate angular width 
sector keep farthest point center 
diameter estimated arcs points 
gets approximation diameter space log compute time inserted point 
know results progress computational geometry problems get solved data stream model near 
add couple notes 
small dimensional applications keeping certain radial histograms histograms emanate sectors centers bucketing sectors find applications 
needs explored 
second know nontrivial results computational geometry problems turnstile model 
understand challenge consider points line inserted deleted insertions deletions coming right minimum point fixed 
maintaining diameter reduces maintaining maximum value points impossible space points may arbitrarily scattered 
say points range log space approximate maximum factor 
may approach want adopt general bounding box objects resources polylog area bounding box terms ratio min max projections points suitable set lines 
problem facility location say paul tracks potential sites plane 
carole continuously adds new client points removes existing client point plane 
paul space polylog preferably polylog total number points time 
solve means medians facility location problem set sites 
problem arises study sensors highways 
graph theory graph connectivity problem plays important role log space complexity 
see details 
hardly graph problem studied data stream model poly log space requirement comes constraints 
authors studied problem counting number triangles cash register model 
graph series edges particular order 
problem estimate number triples edge pair vertices 
number triples total edges pairs vertices 
consider signal triples number edges triple 
simple observe solving computed precisely 
approximated 
needs trick considering domain signal specific order item data stream edge entails updating constant number intervals signal 
appropriate variables done efficiently find variables section 
result approximated 
fact method works turnstile model authors explicitly study 
general problem interesting count subgraphs say constant sized ones 
certain small subgraphs appear web graphs estimating number may provide insights web graph structure 
web crawlers nodes web graph data streams 
nicely motivated application 
graph problems need explored data stream models 
appear difficult general 
find novel motivations variations basic graph problems 
propose direction 
problem consider semi streaming model space store vertices say polylog bits store edges 
bits 
solve interesting particular dense graph problems model 
databases databases research considered streaming extensively far summarized 
highlight interesting directions 
consider approximate query processing 
problem consider signal subset query range query response 
build histogram buckets optimal task 
consider static streaming signals 
lot formalized problem see related details 
histograms studied extensively statistics find applications commercial databases 
general study signals number tuples database value interpret set pages contain tuples value histogram described problem relevant 
background say attempt modeling page selectivity queries 
somewhat related problem concerns multidimensional signals 
problem consider dimensional signal 
design algorithms building near optimal dimensional histogram partitions 
readers think straightforward generalization dimensional problem multiple dimensions 
problem details quite different 
ways partition dimensional arrays 
dimensional problem polynomial time solvable dimensional problems np hard partitions 
argued earlier dimensional domains small fit memory streaming algorithms may appropriate multidimensional version 
authors proposed efficient approximation algorithms variety dimensional histograms static signal 
preliminary results streaming case specifically authors proposed polylog space approximation algorithm log partitions time 
ideas robustness believe truly streaming algorithm obtained partitions approximation polylog space polylog time details published soon 
questions technical 
database point view conceptual questions resolved scale continuous queries develop notion stream operator composable complex stream queries expressed managed propose direction interesting 
problem approximation stream stream siso query 
develop theory rate input stream rate output stream various siso queries 
probabilistic rate theories relevance 
hardware important question data streaming deal rate updates 
ultimately rate updates may high feasible capture storage media process software 
hardware solutions may needed updates generated fed hardware units item processing 
explored networking context variety packet processing tasks see 
previously needs done 
commercial potential hardware machines 
consider problem develop hardware implementation inner product algorithms described section various data stream analyses 
related topic 
trend graphics hardware provide programmable pipeline 
graphics hardware computing systems may thought implementing stream processing programming model 
tasks accomplished multiple passes highly parallel stream processing machine certain limitations instructions performed item pixel pass 
see example suitable model stream related results 
generic graphics hardware may suitable processing data streams coming high rate stream algorithms may find applications graphics hardware computing platform solving problems 
lot remains explored see overview 
streaming models models mar area foundational study 
set streaming models needed 
permutation streaming special case cash register model items repeat 
input stream permutation set items may arrive unordered way 
fits paul permuting section number problems studied model 
authors studied estimate various permutation edit distances 
problem estimating number inversions permutation studied 
outline simple algorithm estimate number inversions 
indicator array seen items seeing tth item number inversions far 
say tth item 
authors show estimate accuracy exponentially separated quantiles 
randomization elegant idea oversampling retaining certain smallest number identifying exponentially separated quantiles 
open problem best deterministically turnstile model 
deeper question compelling motivation study model specific problems 
theoretical justification permutations special cases sequences studying permutation edit distance may shed light notoriously hard problem estimating edit distance strings 
able find overwhelming inspiration problems model 
related problem arise practice 
problem tcp flow comprises multiple consecutively numbered packets 
see packets various flows cash register model 
packets get transmitted order retransmissions presence errors packets may repeat stream 
estimate number flows significant number order packets time 
space smaller number distinct tcp flows 
windowed streaming natural imagine past data stream significant distant past 
modify streaming models data past 
currently approaches 
combinatorial 
specifies window size explicitly focuses stream size time consider updates 
items outside window fall consideration analysis window slides time 
difficulty course store entire window typically polylog bits allowed 
model proposed natural somewhat synthetic put hard bound window size example irrespective rate arrival stream 
model telescopic 
considers signal fixed size blocks size ages signal 
represent signal block inductively maintain meta signal seeing blocks 
th block seen obtain unravel inductive definition see signal block affects meta signal exponentially new blocks get seen 
model certain linear algebraic appeal leverages notion blocks inherent real life data streams 
original suggestion block amounted days worth data kept fixed 
drawback model clearly difficult interpret results model intuitive manner 
example computed estimate mean data stream time 
propose natural model hierarchical block model described divesh srivastava 
informally analyze signal current day granularity minutes past week granularity hours past month granularity days past year granularity weeks natural hierarchy data streams study signals progressively higher level aggregation look back past 
interesting research issues particular allocate fixed amount space different signal granularities investigated 
synchronized streaming puzzle due howard follows 
imagine minus natural numbers arranged lists numerical order lexicographic order 
numbers positions lists 
special 
paul carole north american version 
carole counts 
paul counts permuted order lexicographic position numbers written english 
example carole goes paul goes 
count lock step 
say 
answer course depends formula 
see answers 
puzzle contains elements call synchronized streaming model 
say wish compute function signals data stream 
updates signals simultaneous identical possibly update values 
tth item data stream specifies tth item data stream specifies 
updates seen data stream 
goal compute various functions interest satisfying desiderata streaming algorithms 
synchronized streaming model done generic streaming model signals tth updates signals arbitrarily separated 
interest synchronized model accomplish 
believe case 
example signals strings read left right synchronized streaming estimate edit distance space 
contrast difficult generic streaming model 
synchronized streaming quite natural research needed model 
data stream quality monitoring 
engineer having field experience data sets confirm difficult problems reality dealing poor quality data 
data sets missing values repeated values default values place legitimate ones researchers study ways detect problems data quality detection fixing data cleaning 
large area research see book 
traditional view databases sets integrity constraints violation considered data quality problem exceptions raised 
bad quality data age person loaded database 
suitable paradigm databases manually updated operator 
emerging data streams data quality problems manifold 
example network databases data quality problems missing polls double polls irregular polls disparate traffic ends link due unsynchronized measurements order values unrealistic set integrity constraints processing high speed data feed violation furthermore appearance problems feed indicate abnormal network phenomena cleaning database may hide valuable evidence detecting phenomena 
developing algorithms detect data quality problem simply scalable graceful approach needs different principled approach 
am believer data quality monitoring tools 
operate database applications monitoring state measuring statistics strong deviation expected statistics may projected ping database administrator user react 
useful tool configured monitor suitable statistics thresholds need set release suitable number pings suppressing false alarms 
engineering challenge 
ways database users may deal pings writing queries informed way choice 
see related discussions 
bellman tool traditional database systems monitors structure database tables various statistics value distribution tables 
pacman tool uses probabilistic approximate constraints pacs monitor snmp data streams works operationally large isp 
pacs principled way determine data quality problems 
needs done 
general communities approached data quality problems details dealt individual problems need arises 
computational biology example deals noisy data redefining particular problem 
think need develop principled methods theory systems dealing poor quality data 
specific technical problem restricted streams 
problem set strings 
set strings 
find matching oneto mapping approximately minimized 
edit distance strings problem done computing pairs finding min cost matching goal get substantially subquadratic say near linear time approximate algorithm 
underlying scenario identical lists names people errors posited mapping names people list 
fish eye view fish eye view areas streaming problems abound 
discussion elliptical discussions formulate interesting technical open problems 
linear algebra matrix functions need approximated data stream model 
propose specific problem 
problem matrix turnstile model updates find approximation best rank representation time precisely find min rank suitable norm function similar result proved appropriate sampling fixed progress similar problem passes results turnstile model 
lot interesting technical issues problem 
may innovative seeking appropriate linear algebraic functions similarly interest estimating eigenvalues determinants inverses matrix multiplication statistics saw estimate simple statistical parameters data streams 
need vastly sophisticated statistical analyses data stream models example kernel methods scan statistics kurtosis parameters data squashing works 
statistics researchers refer recursive computing cash register model computation 
inspiring article donoho treasure tove statistical analyses interest massive data 
resource www 
org 
problems resources interesting data stream models 
propose general task problem assume model signal estimate parameters known methods regression fitting maximum likelihood estimation data stream 
complexity theory complexity theory profound impact streaming 
space bounded pseudorandom generators developed chiefly complexity theory community play important role streaming algorithms 
doubt tools developed small space computations find applications data streaming 
talk david karger question arose quantum phenomenon compress computations smaller space conventional computations quantum memory plentiful conventional memory 
propose question researchers minds sivakumar notes 
problem characterize complexity class deterministic logspace verifier way access proof 
privacy preserving data mining peter winkler gives interesting talk result read 
paul carole secret name mind problem determine secrets 
learn secret 
presents solutions attempts formalize setting 
particular solutions involve paul carole permuting domain involve small space pseudorandom generators 
yao problem related paul carole secret number problem determine secret larger revealing secrets 
problems show challenge emerging area privacy preserving data mining 
multiple databases sets multisets 
owners databases willing cooperate particular data mining task determining common secret say security purposes mandated 
willing divulge database contents process 
may due regulatory proprietary reasons 
need privacy preserving methods data mining 
researched topic positive results general settings 
protocols high complexity 
demand efficient solutions provable approximations practice 
authors formalized notion approximate privacy preserving data mining solutions techniques similar ones data stream algorithms 
lot remains done 
database community researching general efficient methods databases privacy preserving 
propose basic problem 
problem paul secrets carole secrets 
find approximate provably privacy preserving protocol find common secrets 
unique secrets paul carole revealed 
problems arise context banking medical databases credit transactions 
gives new problems example building decision trees detecting outliers example problem paul carole list banking transactions deposits withdrawal transfers wires customers 
say customers common ids lists 
design approximate provably privacy preserving protocol find heavy hitters customers executed largest amount transactions combined list transactions 
concluding remarks change life alain de wrote england summarise competition hosted python required volumes fifteen seconds deliver results evening dress 
done similar data stream algorithms amounts academic seconds sans change clothes 
think data streams topic de jour computer science 
data sources massive automatic scientific atmospheric observations telecommunication logs text data feeds rapid updates stay 
need tcs infrastructure manage process 
presents challenges algorithms databases networking systems languages 
ultimately translates new questions methods mathematics approximation theory statistics probability 
new mindset say seeking strong signals working distribution summaries needed means chance reexamine fundamentals 
data stream art trend data streams art 
ambient orbs dubbed news new york times magazine dec pages indicate fluctuations dow jones industrial average continuously modulated glow 
clearly useful financial 
dangling string created wonderful techno artist live wire connected ethernet cable motor traffic level cable shown range motions tiny wild whirl associated sounds 
mark hansen ben rubin listening post exhibit various locations including brooklyn academy music whitney museum contemporary art new york convert live text information internet chat rooms message boards light sound described ny times computer generated opera 
art ambient information displays ones typically seen technology attempt streaming data multi sensory flow 
short data stream history data stream algorithms active research agenda emerged past years 
concept making passes data performing computations early days automata theory 
making passes selection sorting got early attention area evolved slowly 
computer architecture research long considered data flow architectures may thought approach data streaming area address complex operations data item 
gem munro paterson specifically defined multi pass algorithms pass algorithms multi pass lower bounds approximately finding quantiles signal 
early remember raghu ramakrishnan wisconsin madison asking allowed pass data 
presumably question mind 
told raghu changed past years 
phil gibbons yossi matias bell labs synthesized idea synopsis data structures specifically embodied idea small space approximate solution massive data set problems 
influential limited independence small space simulation sophisticated pass norm estimation algorithms 
great example ideas emerged complexity theoretic point view pseudo random generators space bounded computations getting applied algorithmic problems motivated emerging systems 
henzinger raghavan formulated multiple pass model data stream complexity theoretic perspective insightful nuggets observations developed 
joan feigenbaum working researchers research identified developed articulated case network traffic data management data stream application 
great achievement widely accepted chief 
inspiring applications area 
significant done research labs ibm research bell labs select universities time 
early developments lot done theoretical computer science community including programming languages kdd databases networking hancock special purpose programming language supports stream handling got best award kdd 
focus decision trees data streams kdd community 
rajeev motwani gave thoughtful talk pods data stream systems focusing fundamental challenges building generalpurpose data stream management system 
associated worth reading particular database perspective 
tutorials sigmod vldb year 
dimacs gathered working groups data streams 
george varghese addressed problem computing link speed router line card focused simple data stream problems sigcomm tutorial 
sprint labs ip monitoring sigmetrics tutorial 
jiawei han tutorials talks data mining problems data streams 
wonderful website lot information 
perspectives doubtless tutorials workshops academic adventures happen time main point data stream agenda pervades branches computer science 
industry synch companies promising build special hardware deal incoming data high speed 
national academy sciences meeting data stream concerns emerged physicists atmospheric scientists statisticians spreading computer science 
lot topics poured energy data streams accepted paradigm areas cs 
think keep spirit stream data phenomenon mind imaginative seeking applications models potential new problems algorithms mathematics considerable 
hope perspective helps 
mixed exposition reflections 
soda pc giving opportunity 
left image audio video streams xml streams greg said tcs researchers timid technical writing 
inspired afternoon discussion alpha 
mike waterman sharing writings camps western sky 
joel spencer paul carole thesis unexpected data streams may vehicle induces people outside theoretical computer science accept approximation necessary seek principled ways approximating computations acceptance far universal 
days 
am happy find new roles 
kannan shared new madison nj crossword puzzles learned streaming 
mike paterson warwick uk inspiration puzzles problem solving classic papers 
rob calderbank boss times removed supported tremendously conceived project inspired math management 
immediate boss david johnson 
joan feigenbaum recruited gave opportunity build systems snmp data aws cellular intellectual property patent data national system location services wireless networks 
lot toys 
ted johnson built systems 
shared tall boys commutes 
half know systems learned attacking ted half building 
colleagues databases area tried learn despite moody self 
poosala divesh srivastava flip korn rajeev rastogi nick koudas swarup acharya minos garofalakis teaching 
rutgers tomasz imielinski guiding colleague sharing unusual music theater invaluable insight database systems research 
graham cormode worked problems data streaming shaped insights 
english side new words 
researcher called day thought cute live dreams fishing streams wouldn 
talking fishing puzzle datar helped comments suggestions 
anna gilbert yannis kotidis martin strauss formed cross functional 
team studied data streams 
am thankful 
histograms joint sudipto guha piotr indyk independently significant contributions data streaming 
am grateful researchers helped pointers yaron minsky rajeev motwani amin sasha sudipto guha monika henzinger piotr indyk sivakumar george varghese ken clarkson david madigan ravi kumar eric bach joachim von zur gathen moses charikar 
professional personal issues martin farach colton guide inspiration owe lot acknowledged 
alon matias szegedy 
space complexity approximating frequency moments 
proc 
acm stoc 
weiser brown 
coming age calm technology 
chapter 
calculation years computing denning metcalfe 
springer verlag 

versions article exist web 
varghese 
detecting packet patterns high speeds 
tutorial sigcomm 
bhattacharya moon 
network performance monitoring measurement techniques experience 
acm sigmetrics tutorial 
shah iyer prabhakar mckeown 
maintaining statistics counters router line cards 
ieee micro 
muthukrishnan 
optimal strategies searching presence errors 
proc 
soda 
gray sundaresan eggert weinberger 
quickly generating record synthetic databases 
proc 
acm sigmod 
munro paterson 
selection sorting limited storage 
proc 
ieee focs 
theoretical computer science 
knuth 
art computer programming volume iii sorting searching 
addison wesley 
henzinger raghavan rajagopalan 
computing data stream 
technical note 
digital systems research center palo alto may 
babcock babu datar motwani widom 
models issues data stream systems 
acm pods 
duffield lund thorup 
learn sample control volume variance network measurement 
sigcomm measurement workshop 
duffield grossglauser 
trajectory sampling direct traffic observation 
ieee acm transactions networking vol 
cortes pregibon 
communities interest 
proc 
intelligent data analysis 
vitter 
external memory algorithms data structures dealing massive data 
acm computing surveys 
szalay gray 
scale data mining dream reality 
msr tr 
kannan 
open problems streaming 
ppt slides request source 
indyk small approximately min wise independent family hash functions 
journal algorithms 
datar muthukrishnan 
estimating rarity similarity window streams 
proc 
esa 
blelloch maggs leung woo 
space efficient finger search degree balanced search trees 
proc 
acm siam soda 
cole 
dynamic finger conjecture splay trees part ii 
proof 
technical report tr courant institute nyu 
bender fernandez ron sahai 
power pebble exploring mapping directed graphs 
proc 
acm stoc 
von zur gathen gerhard 
modern computer algebra 
cambridge university press 
minsky 
set reconciliation nearly optimal communication complexity 
technical report cornell univ spencer winkler 
thresholds liar 
combinatorics probability computing 
gilbert kotidis muthukrishnan strauss 
quick summary analysis network data 
dimacs technical report 
gilbert kotidis muthukrishnan strauss 
surfing wavelets streams pass summaries approximate aggregate queries 
vldb journal 
charikar chen farach colton 
finding frequent items data streams 
proc 
icalp 
broder mitzenmacher 
network applications bloom filters survey 
allerton conference 
www eecs harvard edu papers html 
feldmann greenberg lund reingold rexford true 
deriving traffic demands operational ip networks methodology experience 
ieee acm transactions 
gupta 
counting inversions lists 
proc 
soda 
cortes pregibon 
signature methods data streams 
data mining knowledge discovery 
ajtai jayram kumar sivakumar 
counting inversions data stream 
proc stoc 
flajolet nigel martin 
probabilistic counting 
proc 
focs 

population frequencies species estimation population parameters 
biometrika 
datar gionis indyk motwani 
maintaining stream statistics sliding windows 
proc 
acm siam soda 
cormode muthukrishnan 
permutation editing matching embeddings 
proc 
icalp 
humphreys houston ng frank ahern kirchner klosowski 
stream processing framework interactive rendering clusters 
siggraph 
krishnan muthukrishnan venkatasubramanian 
extended range search queries geometric simd machine 
manuscript 
interactive geometric computations graphics hardware 
course 
organizer manocha 
siggraph 
www siggraph org conference courses crs html ta wigderson zhou 
log space algorithm connectivity undirected graphs 
jacm 
bar yossef kumar sivakumar 
reductions streaming algorithms application counting triangles graphs proc 
acm siam soda 
raghavan 
graph structure web survey 
latin 
indyk 
better algorithms high dimensional proximity problems asymmetric embeddings 
proc 
acm siam soda 
feigenbaum kannan 
computing diameter streaming sliding window models 
manuscript 
korn muthukrishnan srivastava 
reverse nearest neighbor aggregates data streams 
proc 
vldb 
mishra pitt 
time approximate clustering 
proc 
acm siam soda 
kleinberg 
bursty hierarchical structure streams 
proc 
th acm sigkdd kdd conf 
guha kannan 
inferring mixtures markov chains 
manuscript 
drineas kannan 
pass efficient algorithms approximating large matrices 
proc 
soda 
achlioptas mcsherry 
fast computation low rank approximation 
stoc 
donoho 
high dimensional data analysis dimensionality 
manuscript 
www stat stanford edu donoho fagin naor winkler 
comparing information leaking simple solutions 
communications acm 
yao 
protocols secure computations 
proc 
focs 
feigenbaum ishai malkin nissim strauss wright 
secure multiparty computation approximations 
proc 
icalp 
goldreich 
secure multiparty computation 
book ucsd edu books 
html 

korn muthukrishnan zhu 
ip stream oriented fast correlation tool 
sigmod demo manuscript 
chien rasmussen sinclair 
clifford algebras approximating permanent 
acm stoc 
gibbons matias 
synopsis data structures 
proc 
soda 
davis mallat 
greedy adaptive approximation 
journal constructive approximation 

best term approximation greedy algorithms 
advances computational math 
devore lorentz 
constructive approximation springer verlag new york 
natarajan 
sparse approximate solutions linear systems 
siam computing 
gilbert muthukrishnan strauss 
approximation functions redundant dictionaries coherence 
proc 
soda 
mazur 
imagining numbers particularly square root minus fifteen 
strauss 
johnson muthukrishnan shkapenyuk 
mining database structure build data quality browser 
sigmod 
cortes fisher pregibon rogers 
hancock language extracting signatures data streams 
kdd 

greed algorithmic results sparse approximation 
technical report texas institute computational applied mathematics 
daubechies 
sublinear algorithms sparse approximations excellent odds 
www ams org abstracts pdf chen dewitt tian wang 
niagaracq scalable continuous query system internet databases 
acm sigmod 
arasu babcock babu datar ito rosenstein widom 
stream stanford stream data manager 
acm sigmod demo 
abadi aurora data stream management system 
acm sigmod demo 
www cs brown edu research aurora demo pdf telegraphcq continuous dataflow processing uncertain world 
cidr 
cranor gao johnson shkapenyuk spatscheck 
high performance network monitoring sql interface 
acm sigmod 
rutgers edu demo pdf muthukrishnan poosala suel 
rectangular partitionings dimensions algorithms complexity applications 
proc 
intl conf database theory icdt 
guha indyk koudas 
dynamic multidimensional histograms 
acm sigmod 
johnson 
exploratory data mining data quality 
isbn 
wiley may 
www wiley com cda product html korn muthukrishnan zhu 
checks balances monitoring data quality network traffic databases 
manuscript 
muthukrishnan strauss 
histograms 
acm siam soda 

best approximation walsh atoms 
constructive approximation 
see www old math kth se math users thesis html cormode muthukrishnan string edit distance matching problem moves 
acm siam soda 
guha shankar venkatasubramanian 
application sided depth test csg rendering 
acm interactive graphics 
greenwald khanna 
space efficient online computation quantile summaries 
proc 
acm sigmod 
manku motwani 
approximate frequency counts data streams 
proc 
vldb 
gibbons 
distinct sampling highly accurate answers distinct values queries event reports 
proc 
vldb 
chaudhuri motwani narasayya 
random sampling histogram construction 
proc 
sigmod 
korn gehrke srivastava 
computing correlated aggregates continual data streams 
acm sigmod 
broder charikar mitzenmacher 
min wise independent permutations 
proc 
stoc 
indyk 
stable distributions pseudorandom generators embeddings data stream computation 
ieee focs 
cormode datar indyk muthukrishnan 
comparing data streams hamming norms zero 
proc 
vldb 
gilbert kotidis muthukrishnan strauss 
summarize universe dynamic maintenance quantiles 
proc 
vldb 
cormode muthukrishnan 
hot tracking frequent items dynamically 
acm pods 
gilbert guha kotidis indyk muthukrishnan strauss 
fast small space algorithm approximate histogram maintenance 
acm stoc 
feigenbaum kannan strauss viswanathan 
approximate difference algorithm massive data streams 
ieee focs 
cormode muthukrishnan 
estimating dominance norms multiple data streams 
manuscript 
gilbert guha indyk muthukrishnan strauss 
near optimal sparse fourier estimation sampling 
acm stoc 
alon gibbons matias szegedy 
tracking join self join sizes limited storage 
acm pods 
guha koudas shim 
data streams histograms 
acm stoc 
muthukrishnan shah vitter 
finding data streams 
manuscript 
guha mishra motwani callaghan 
clustering data streams 
ieee focs 
charikar callaghan panigrahy 
better streaming algorithms clustering problems 
acm stoc 
gibbons 
estimating simple functions union data streams 
acm spaa 
bar yossef jayram kumar sivakumar 
information statistics approach data stream communication complexity 
ieee focs 
chen dong han wah wang 
multi dimensional regression analysis timeseries data streams 
proc 
vldb 
see www courses cs uiuc edu cs jh ppt topics ppt 
jagadish koudas muthukrishnan 
mining time series database 
proc 
vldb 
gray hey 
search databases 
www research microsoft com gray talks querying mining data streams get look 
see www bell labs com user minos tutorial html 
www arm gov docs index html 
data streams www archive arm gov docs catalog www com department ip interworking monitor ipmon com stat rutgers edu madigan mms cat nyu edu 
www org bms massive data workshop html 
www edu data data general html cm bell labs com cm ms departments sia ear index html com projects html 
www tpc org 
details transactions testing www tpc org detail asp com integers htm 
www caltech edu sda digital sky html archive edu sdss www noaa gov www ngs noaa gov www edu data data detail html cern ch cms outreach html pdf www com cat index html 
www db stanford edu stream external nj nec com homepages www org index jsp www cs cmu edu 
