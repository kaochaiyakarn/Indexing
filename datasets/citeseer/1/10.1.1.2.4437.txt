combining usage content structure data improve web site recommendation za ane department computing science university alberta edmonton ab canada zaiane cs ualberta ca 
web recommender systems anticipate needs web users provide recommendations personalize navigation 
systems expected bright especially ecommerce learning environments 
intensively explored web mining machine learning fields commercialized systems quality recommendation user satisfaction systems optimal 
investigate novel web recommender system combines usage data content data structure data web site generate user navigational models 
models fed back system recommend users shortcuts page resources 
propose evaluation mechanism measure quality recommender systems 
preliminary experiments show system significantly improve quality web site recommendation 
web recommender system web interactive software agent 
wrs attempts predict user preferences user data user access data purpose facilitating personalizing users experience line providing recommendation lists suggested items 
recommended items products books movies music cds line resources web pages line activities path prediction 
generally speaking web recommender system composed modules line module line module 
line module pre processes data generate user models line module uses updates models fly recognize user goals predict recommendation list 
investigate design web recommender system recommend line resources content structure usage web pages web site model users user needs 
preliminary goals recommend line learning activities learning web site recommend shortcuts users web site predicting information needs 
earliest widely technologies building recommender systems collaborative filtering cf sm 
cf recommender research funded part alberta ingenuity funds nserc canada 
systems aggregate explicit user ratings product preferences order generate user profiles recognize users interests 
product recommended current user highly rated users similar interests 
cf techniques suffer problems 
rely heavily explicit user input previous customers rating ranking products unavailable considered intrusive 
sparsity user input recommendation precision quality drop significantly 
second challenge related system scalability efficiency 
user profile matching performed line process 
large datasets may lead unacceptable latency providing recommendations 
years increasing interest applying web usage mining techniques build web recommender systems 
web usage recommender systems take web server logs input data mining techniques association rules clustering extract navigational patterns provide recommendations 
web server logs record user browsing history contains hidden information regarding users navigation 
alternative explicit user rating feedback deriving user models 
web usage recommender systems navigational patterns generally derived line process 
commonly approach web usage recommender systems association rules associate page hits lar 
test approach general technique 
web usage recommender system focuses solely web server logs problems incomplete limited information problem number heuristic assumptions typically applying data mining algorithm result patterns generated may proper correct 
incorrect information problem web site visitor lost clicks visitor recorded log may mislead recommendations 
problematic web site badly designed people visiting unsolicited pages making popular 
persistence problem new pages added web site visited recommender system may recommend relevant 
page recommended may visited making look popular boost recommendation 
address problems propose improved web usage recommender system 
system attempts web server logs model user navigational behaviour web usage recommender systems 
approach differs systems combine textual content connectivity information web pages require user input 
demonstrate approach improves quality web site recommendation 
page textual content pre process log data model content coherent visit sub sessions generate accurate users navigational patterns 
structure data links pages expand navigational patterns rich relevant content 
connectivity information compute importance pages purpose ranking recommendations 
hybrid web recommender systems proposed literature mdl nm 
mdl adopts clustering technique obtain site usage site content profiles line phase 
line phase recommendation set generated matching current active session usage profiles 
similarly recommendation set generated matching current active session content profiles 
set pages maximum recommendation value recommendation sets recommendation 
called weighted hybridization method bur 
nm authors association rule mining sequential pattern mining contiguous sequential mining generate kinds navigational patterns line phase 
line phase recommendation sets selected different navigational models localized degree hyperlink connectivity respect user current location site 
called switching hybridization method bur 
weighted method switching method combination systems happens line phase 
approach combines usage data content data line phase generate content coherent navigational models better model users information needs 
line phase combine structure data improve models 
offline process hyperlinks attach rating web resources 
rating line phase ranking recommendations 
contributions follows propose novel web recommender system combines full available channels usage content structure data 
combination done line improve efficiency low latency 
second propose novel users navigational model 
representing information need sequence visitation clicks visit model assumes different information needs visit third address problems mentioned combing available information channels 
organized follows section presents line module system pre processes available usage web site data line module generates recommendation list 
section presents experimental results assessing performance system 
architecture hybrid recommender system web usage recommender systems system composed modules line component pre processes data generate users navigational models line component real time recommendation engine 
depicts general architecture system 
entries web server log identify users visit sessions web pages web server logs page textual content page connectivity information user session identification session file mission identification content clustering content clusters mission file line module line module usage clustering fig 

system architecture current session navigational patterns recommendation engine hits algorithm augmented navigational patterns recommendation list resources site clustered content 
clusters discovered web sessions order identify call missions 
sub session consistent goal 
missions turn clustered generate navigational patterns augmented linked neighbourhood ranked resource connectivity hub authority idea kle 
new clusters augmented navigational patterns provided recommendation engine 
visitor starts new session session matched clusters generate recommendation list 
details process 
user visit session identification web log text file records information regarding users requests web server 
typical web log entry contains client address requested date address timestamp related information 
similar preprocessing techniques cms identify individual users sessions 
chose idle time minutes 
visit mission identification data pre processing step proposed cms transaction identification divides individual visit sessions transactions 
cms transaction identification approaches proposed length approach maximal forward approach widely applied web mining techniques 
dividing sessions arbitrary transactions identify sub sessions coherent information needs 
call sub sessions missions 
assume visitor may different information needs fulfill visit assumption sequence needs fulfilled 
case transactions cms assumed information need fulfilled 
mission model sub session related information needs allow overlap missions represent concurrent search site 
transaction model pages labeled content pages auxiliary pages transaction simply sequence auxiliary pages ends content page mission model identified sequence real content pages 
content page model identified simply time spent page backtracking visitor navigation 
argue missions better model users navigational behavior transaction 
model propose users visit web site concurrent goals different information needs 
example user fulfill goals visit session pages contribute goal pages contribute 
pages related goal visit session supposed content coherent neighbouring page content identify missions visit session 
web site pages clustered content clusters identify content coherent clicks session 
give example illustrate point 
suppose text clustering algorithm groups web pages ande web pages andf web pages different content clusters please note text clustering algorithm soft clustering allows web page clustered clusters 
visit session system identifies missions follows mission mission mission 
seen example mission identification system different transaction identification group web pages mission sequential visit session 
see mission model generates transaction model missions transactions visitors fulfill information needs sequentially 
cluster web pages content modified version dc tree algorithm wf 
originally dc tree algorithm hard clustering approach prohibiting overlap clusters 
modified algorithm allow web pages belong different clusters 
web pages cover different topics time 
algorithm web page represented keyword vector organized tree structure called dc tree 
algorithm require number clusters discover constraint allows definition cluster sizes 
appealing property select algorithm 
want large small content cluster sizes 
large clusters help capture missions sessions small clusters may break potentially useful relations pages sessions 
content coherent navigational pattern discovery navigational patterns sets web pages frequently visited related content 
patterns recommender system recommend web pages visited 
discover navigational patterns simply group missions uncovered web server logs clusters sub sessions having commonly visited pages 
resulting clusters viewed user navigation pattern 
note patterns discovered missions possess characteristics usage cohesive content coherent 
usage cohesiveness means pages cluster tend visited content coherence means pages cluster tend related topic concept 
missions grouped content information 
cluster related topic page represented keyword vector able easily compute topic vector cluster value keyword average corresponding values pages cluster 
cluster topic widely system line line phases see details 
clustering algorithm adopted grouping missions pagegather pe 
algorithm soft clustering approach allowing overlap clusters 
attempting partition entire space items attempts identify small number high quality clusters clique clustering technique 
navigational pattern improved connectivity missions extracted clustered generate navigational patterns primarily sessions web server logs 
sessions exclusively represent web pages resources visited 
conceivable resources visited relevant interesting recommendation list 
resources instance newly added web pages pages links evidently due bad design 
pages resources missions previously discovered 
navigational patterns represented clusters pages missions recommendation engine need provide opportunity rarely visited newly added pages included clusters 
recommended 
alleviate problem expand clusters include connected neighbourhood page mission cluster 
neighbourhood page set pages directly linked pages directly link illustrates concept neighbourhood expansion 
approach expanding neighbourhood performed follows consider previously discovered navigational pattern set seeds 
seed supplemented pages links pages web site link 
result called connectivity graph represents augmented navigational pattern 
process obtaining connectivity graph similar process hits algorithm kle find authority hub pages topic 
difference consider topic start mission cluster set seeds 
consider internal links links web site 
expanding clusters representing navigational patterns augment keyword vectors label clusters 
new keyword vectors represent augmented navigational patterns terms extracted content augmented pages 
take advantage built connectivity graph cluster apply hits algorithm order identify authority hub pages cluster 
measures authority hub allow rank pages cluster 
important real time recommendation crucial rank recommendations especially recommendation list long 
authority hub mutually reinforcing kle concepts 
authority page pointed hub pages hub page points authority pages recommend pages newly added site framework consider hub measure 
newly added page authoritative page pages linked 
new page probably link authority pages chance hub page 
consequently hub value rank candidate recommendation pages line module 
recommendation engine previously described process consists pre processing done exclusively offline 
visitor starts new session web site identify navigation pattern clicks try match fly captured navigational patterns 
matched recommend relevant pages matched cluster 
identifying navigational pattern current visitor consists recognizing current focused topic interest user 
study cdg shows looking side anchor text encapsulated href tag window bytes capture topic linked pages 
study consider anchor clicked current user neighbourhood side contextual topic interest 
captured topics represented keyword vector matched keyword vectors clusters representing augmented navigational patterns 
best match get pages best hub value provide recommendation list ranked hub values 
avoid supplying large list recommendations number recommendations adjusted number links current page simply number proportional number links current page 
goal different recommendation strategy different pages links page contains 
general strategy give best recommendations number links maximum 
limit prevent adding noise providing options 
relevance importance recommendations measured hub value computed line 
experimental evaluation evaluate recommendation framework tested approach generic web site 
report results web server log web site computing science department university alberta canada 
data collected months sept apr partitioned data months 
average monthly partition contains pages resulting average links 
log month averaged visit sessions generated average missions month 
modified dc tree content clustering algorithm generated content clusters identify missions month 
methodology data partitioned month described adopt empirical evaluation months data building models training recommender system month months evaluation 
idea session month ifthe recommender system data month prefix session recommend set pages pi contain pages suffix recommendation considered accurate 
distance number clicks suffix recommended page pi considered gain shortcut 
precisely measure recommendation accuracy shortcut gain described 
recommendation accuracy ratio correct recommendations recommendations correct recommendation appears suffix session prefix triggers recommendation 
example consider visit sessions test log 
visit session take page generate recommendation list 
compared remaining portion suffix 
denote portion stands tail 
recommendation accuracy session intersect 
general formula recommendation accuracy defined shortcut gain measures clicks recommendation allows users save recommendation followed 
suppose session page system recommends page follow advice save hops pages measuring shortcut gain recommendation list contains page suffix session 
consider shortest gain longest gain 
solve problem opted distinguish key pages auxiliary pages 
key page page may contain relevant information page intermediary page linkage user spend relatively short time 
experiment threshold seconds distinction 
types pages shortcut gain measured smallest jump gain key page recommended 
key page recommended longest jump auxiliary page 
set pages session go assistance recommender system called shortened session 
total visit sessions test log shortcut gain computed addition compute coverage recommender system measure ability system produce pages visited users 
concept similar called recall information retrieval 
coverage defined results experiment varies coverage see tendency recommendation accuracy depicted 
purpose comparison implement association rule recommender system commonly approach web mining recommender systems record performance 
expected accuracy decreases increase coverage 
system consistently superior association rule system 
accuracy system vs ar system ar system system coverage shortcut gain system vs ar system ar system system coverage fig 

performance comparison system vs association rule recommender system 
recommendation accuracy shortcut gain varied coverage test shortcut gain association rule system illustrated 
see low boundary coverage lower shortcut gain system close ar system 
increase coverage system achieve increasingly superior shortcut gain performance systems continues improve 
shortcut gain accuracy vs shortcut gain accuracy anp np np npn 
web resource fig 

accuracy vs shortcut gain 
navigational patterns nps augmented navigational patterns depicts relationship recommendation accuracy shortcut gain system 
shows recommendation accuracy inversely proportional shortcut gain 
study draws association rule recommender system 
argue important property usage web recommender system adjust balance accuracy shortcut gain web recommender system achieve maximum benefit question investigated 
web sites high link density may favour recommender system high accuracy may favor system high shortcut gain 
framework combined web recommender system users navigational patterns automatically learned web usage data content data 
navigational patterns generate recommendations user current status 
items recommendation list ranked importance turn computed web structure information 
experiments show combination usage content structure data web recommender system potential improve quality system keep recommendation date 
various ways combine different channels 
area include investigating different methods combination 
bur robin burke 
hybrid recommender systems survey experiments 
user modeling user adapted interaction 
cdg chakrabarti dom gibson kleinberg raghavan rajagopalan 
automatic resource list compilation analyzing hyperlink structure associated text 
proceedings th international world wide web conference 
cms robert cooley mobasher srivastava 
data preparation mining world wide web browsing patterns 
knowledge information systems 
fu jay budzik kristian hammond 
mining navigation history recommendation 
intelligent user interfaces pages 
thorsten joachims dayne freitag tom mitchell 
web watcher tour guide world wide web 
ijcai pages 
borchers john riedl jonathan herlocker joseph konstan 
algorithmic framework performing collaborative filtering 
proceedings nd annual international acm sigir conference research development information retrieval pages 
kle jon kleinberg 
authoritative sources hyperlinked environment 
journal acm 
lar lin alvarez ruiz 
collaborative recommendation adaptive association rule mining 
mdl mobasher dai tao luo sun jiang zhu 
integrating web usage content mining effective personalization 
ec web pages 
nm nakagawa mobasher 
hybrid web personalization model site connectivity 
fifth webkdd workshop pages 
pe mike perkowitz oren etzioni 
adaptive web sites automatically synthesizing web pages 
aaai iaai pages 
srivastava robert cooley mukund deshpande pang ning tan 
web usage mining discovery applications usage patterns web data 
sigkdd explorations 
sarwar george karypis joseph konstan john riedl 
analysis recommendation algorithms commerce 
acm conference electronic commerce pages 
sm shardanand patti maes 
social information filtering algorithms automating word mouth 
proceedings acm chi conference human factors computing systems volume pages 
wf wong fu 
incremental document clustering web page classification 
chen yi hung wu yong chuan chen 
enabling personalized recommendation web user interests behaviors 
th international workshop research issues data engineering 
