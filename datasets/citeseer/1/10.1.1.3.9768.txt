graph theoretic analysis structured peer peer systems routing distances fault resilience loguinov kumar vivek rai sai ganesh department computer science texas university college station tx usa cs tamu edu examines graph theoretic properties existing peer peer architectures proposes new infrastructure optimal diameter de bruijn graphs 
generalized de bruijn graphs possess short average routing distances high resilience node failure suited structured peer peer networks 
example chord de bruijn study routing performance graph expansion clustering properties graph 
examine bisection width path overlap properties affect routing resilience peer peer networks 
having confirmed de bruijn graphs offer best diameter highest connectivity existing peer peer structures offer simple incremental building process preserves optimal properties de bruijn graphs uniform user joins departures 
call combined peer peer architecture optimal diameter routing infrastructure 
categories subject descriptors communication networks network protocols general terms algorithms performance theory keywords peer peer modeling graph theory dht de bruijn 
years peer peer networks rapidly evolved important part existing internet culture 
current peer peer proposals built application layer overlays set supported nsf ccr 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigcomm august karlsruhe germany 
copyright acm 
graph theoretic properties determine routing efficiency resilience node failure 
graphs peer peer networks range star trees centralized approaches napster complex node connected graphs chord pastry :10.1.1.142.752:10.1.1.105.3673
performance peer peer architecture determined properties graphs typically possess logn diameter logn degree node number peers system 
understanding bounds optimal existed fixed degree graphs logn diameter believed fundamental question peer topeer research :10.1.1.13.195
diameter degree third important property peer peer structure resilience simultaneous node failure 
fault resilience answer logarithmic routing fixed degree networks obvious includes variety simple tree structures 
main goal find fixed degree graph provably minimum diameter maximum connectivity fault resilience graphs 
dimension provide unifying analytical framework understanding various properties existing peer peer graphs 
existing proposals chord pastry modeled ways provide clear quantitative assessment graph resilience node failure 
addition classical approaches proposals heuristics underlying foundation choosing graph structure 
supplements proposals fundamental insight problem offers analytical tools evaluating peer peer routing architectures 
organized follows 
examine problem obtaining logarithmic routing diameter sparse graphs 
relies generalized de bruijn graphs fixed degree asymptotically optimal diameter 
diameter tell story study average distances pairs nodes metric diameter determines expected response time number hops capacity peer peer network 
examine clustering small world properties graph explain relate graph expansion 
derive de bruijn graphs order magnitude smaller clustering coefficients chord explains differences expansion resilience diameter graphs 
study resilience graphs node failure simply connectivity 
general connectivity determines number location failures graph tolerate disconnected 
examine edge bisection width graph demonstrate de bruijn graphs times difficult disconnect traditional approaches 
examine amount overlap alternative parallel paths leading destination investigate affects success greedy routing adversarial node failure 
having confirmed de bruijn graphs offer resilient diameter optimal routing structure provide algorithm building graphs incrementally peer nodes join leave system 
conclude showing uniform user joins diameter peerto peer graph remains asymptotically optimal 

background current peer peer networks distributed hash tables dhts provide decentralized mapping user objects peers :10.1.1.142.752:10.1.1.105.3673:10.1.1.105.3673
mapping accomplished organizing peers virtual coordinate space hashing object virtual coordinates 
information object ip address owner kept peer coordinates object hashes 
distributed structure excellent scalability short routing distances failure resilience dhts highly suitable peer peer networks 
peer peer dhts current dhts rely concept prefix routing introduced plaxton :10.1.1.142.752:10.1.1.1.4310
plaxton framework extended tapestry bayeux accommodate dynamic join departure peers provide necessary failure recovery mechanisms :10.1.1.1.4310
similar method generalized hypercubes pastry shown rowstron 
alphabet size pastry builds regular graph diameter node degree log 
approaches ratnasamy propose peer peer architecture called content addressable network maps dht dimensional cartesian space 
diameter dn degree node 
stoica propose distributed graph called chord uses modulo field ring diameter degree equal log :10.1.1.105.3673
proposals start address issue routing logarithmic time fixed degree graphs 
example considine expand chord ring structure constructing digraph directed graph fixed degree proposed structure needs estimate number active nodes properly build application layer graph 
tree structures freedman propose dht distributed tries tran organize peers multicast tree degree diameter 
xu study diameter degree tradeoffs current dhts propose graph modified static butterfly :10.1.1.13.195
writing details framework going investigation 
peer peer architecture butterfly networks viceroy shown 
independently papers proposed de bruijn graphs peer peer networks 
developments complementary investigation provide implementation details additional analysis covered 
fault tolerance dhts fault tolerance peer peer networks equally important topic 
liben nowell examine error resilience dynamics chord nodes join leave system derive lower bounds degree necessary maintain connected graph high probability 
fiat build censorship resistant network tolerate massive adversarial node failures random object deletions 
create highly fault resilient structure log state node log routing overhead 
unfortunately studies examine resilience existing graphs comparison attempt understand resilience improved preserving diameter routing overhead graph 
aware comparison study gummadi find ring graphs chord offer flexibility route selection provide better performance random node failure compared traditional dhts 
random graphs direction building dhts relies properties random graphs 
main thrust area build logarithmic time routing structures constant degree 
propose random dht graph constant degree certainly logarithmic diameter provide efficient routing algorithm proposed structure deterministically explore low diameter graph 
aspnes examine random graphs fixed degree derive upper lower bounds expected routing distance graphs 
results show bounds proportional ln law build random expander ln ln graphs hamiltonian cycles logn diameter logn degree 
random graphs logarithmic diameter built high probability random neighbor selection design efficient routing algorithms competitive deterministic graphs open issue 
optimal diameter graphs problem designing optimal diameter graph fixed degree extensively studied past 
formulation problem assume graph fixed degree diameter maximum distance nodes graph 
maximum number nodes packed graph 
wellknown result moore bound 
kd nm 
interestingly moore bound nm achievable trivial values fact moore bound provably achievable non trivial graph 
directed de bruijn graphs come close moore bound built nodes nodes 
general known close approach upper bound nm non trivial graphs 
context peer peer dhts concerned different formulation problem nodes fixed degree minimum diameter graph built top nodes 
answer follows log dm 
itoh construct nearly optimal de bruijn graphs diameter log dm large diameters asymptotically equal 
basic algorithms slightly improved 
important metric related routing performance graph average distance pair nodes note include distances node related 
lower bound regular graph average distance corresponding moore graph achievable non trivial values dm kd dm dm 
respect de bruijn graphs asymptotically optimal converge bound sufficiently large 

basics de bruijn graphs motivation goals build distributed hash table dht top fixed degree graphs provably optimal routing diameter 
non trivial moore graphs exist de bruijn graphs diameter log call optimal class practically achievable graphs simple routing rules optimal 
illustrate impressive reduction diameter compared classical dht structures assume nodes degree fixed log 
circumstances chord offers graph diameter equal log de bruijn graph number neighbors diameter times smaller log 
note diameter corresponding moore graph essentially dm 
concerned properties underlying graph peer peer network 
consequently examine diameter resilience graphs assuming hashing function equally spreads users dht space graphs populated maximum number nodes assumption relaxed section 
assume simplicity notation total number nodes power node degree omit ceiling functions appropriate 
structure de bruijn graphs de bruijn graphs nearly optimal fixed degree digraphs diameter fixed degree node total number nodes 
note de bruijn graphs directed graphs outgoing incoming edges node holds prefix xi xd hy routing path hx yd yd overlap suffix xi xd yd prefix overlap suffix de bruijn graph degree diameter left 
optimal routing hx hy right 
protocols :10.1.1.142.752:10.1.1.142.752:10.1.1.105.3673:10.1.1.105.3673
assume node hashed string hx drawn alphabet size example hx binary string 
directed de bruijn graph contains nodes diameter graph 
node hx graph string 
hd length linked nodes 
hd possible 
classical de bruijn graph shown left 
diameter graph nodes link 
fact de bruijn graphs contain exactly nodes 
link graph irregular 
possible create regular de bruijn graph linking nodes added failure resilience 
discuss section 
routing recall shortest path routing nodes de bruijn networks follows greedy procedure executed individual nodes distributed fashion 
assume node seeks shortest path node choice hop neighbor follows simple string matching algorithm shown right 
node finds longest overlap suffix hash index hx prefix hash index hy 
longest overlap labeled contains digits merging prefix overlap suffix node generate entire path reach notice starts hx ends hy contains intermediate nodes node character substring read left right 
example consider graph left 
suppose node needs route node shortest path 
procedure prefix overlap suffix 
resulting shortest path translates 
comparison existing graphs section briefly examine diameter degree tradeoffs existing protocols compare de bruijn graphs 
leave thorough analysis numerous proposed graphs conduct detailed study classical approaches chord sections :10.1.1.13.195
section shows results pastry static butterfly graph detailed analysis omits tapestry diameter degree tradeoff similar graph degree diameter de bruijn trie chord log log dn pastry classic butterfly log table asymptotic degree diameter properties different graphs 
pastry 
note treatment butterfly graph follows traditional definition basis proposals viceroy ulysses graphs exactly implements classic butterfly :10.1.1.13.195
discuss individual diameter degree tradeoffs approaches different classic graph 
remove fault resilient additions structure predecessor pointer element successor list chord analyze raw performance graph 
illustration fixed degree tree structures examine ary tries proposed dhts 
ary trie uses prefix routing tree parent maintains children child symbol alphabet 
consequently maximum degree node trie diameter graph log distance root back 
recall traditional butterfly network contains mk nodes degree node diameter 
notice expressed terms degree lambert function ln logk 
ln appealing graphs non trivial difficulties building nodes join leave system 
example viceroy implements binary butterfly diameter log degree requires estimation number nodes system 
example ulysses adds logn neighbors node longer fixed degree graph :10.1.1.13.195
show section distributed de bruijn graphs possess conceptual complexity chord achieve optimal diameter peer peer graph built fixed application layer degree 
table shows asymptotic diameter node degree de bruijn graphs existing deterministic structures 
note assume uses circular toroidal routing dimensions means nodes borders maintain neighbors graph regular 
second chord allows generalization log neighbors diameter log frequently default value shown table version studied 
trie maintains average degree nodes equal approximately strictly speaking tapestry routing table size logb log 
de trie chord pastry classic bruijn butterfly huge table graph diameter cells dash indicate graph support corresponding node degree 
fraction nodes leaves imbalance middle tree nodes degree creates pessimistic diameter degree tradeoff 
examine performance graphs hypothetical peer peer system nodes 
table shows diameter graph function degree notice low degree networks trie offers better diameter classical approaches chord pastry 
fact trie routes half time compared chord 
notice de bruijn graphs number neighbors offer diameters times smaller chord 
furthermore de bruijn graphs route pair nodes hops neighbors times required chord pastry achieve diameter 
traditional butterfly offers diameter approximately larger de bruijn graphs values interesting observation points fact selection number dimensions important decision number nodes noted fixed changes table shows small values log result greatly suboptimal diameters 
observation easy explain diameter dn strictly convex function unique minimum located lnn peers dimension 
keeping mind dimension contain integer number peers best practical diameter achieved log 
optimal number dimensions neighbors optimal diameter 
note log degree diameter equal chord shown table noted 
examining table notice pastry offers diameter large 
fact come hop optimal diameter pastry requires neighbors shown table 
large routing tables may impractical real internet due high volume traffic required maintain peer level connections repair broken links existing neighbors frequently fail 
angle bounded degree graphs preferable 
hand pastry advantage structures ability employ proximity peer selection 
theory graph construction possible chord de bruijn requires transparent implementation 
benefits topologically aware peer peer networks hard quantify respect metrics current study focuses pure graph performance approach 
construction topologically aware de bruijn graphs possible topic investigation 

routing analysis de bruijn graphs desirable properties peer topeer networks stem small diameter 
diameter graph simply largest distance pair nodes provides upper bound delay number hops experienced users 
balanced metric average distance pair nodes performance user expect peer peer system searching objects 
fact possible reduce diameter graph time increase average routing distance demonstrated :10.1.1.13.195
define shortest distance nodes graph 
better understand distribution formed study expansion properties graph full version derives density mass function computes expectation :10.1.1.3.9768
important results omit technical proofs :10.1.1.3.9768
chord stoica showed simulation average inter node distance chord offered sim ple explanation happens :10.1.1.105.3673
showed distribution bell shaped demonstrated left 
histogram appears gaussian illustrated perfect fit gaussian distribution 
noted certain real world graphs describing webpage linkage structure exhibit gaussian distributions explanation happens offered :10.1.1.31.3763
analyze chord distribution shortest distances understand appears gaussian provide additional qualitative insight structure graph small world terminology 
lemma proved :10.1.1.3.9768
lemma 
node chord reach exactly nodes shortest distance symmetry nodes chord result lemma pmf probability mass function binomial distribution parameters recall cd cd cd pmf shortest distances 
simulation results confirm gives exact distribution shortest path lengths chord 
expected value binomial random variable known result equals dp simply provides alternative deriva tion result previously shown 
reason distribution shortest distances chord appears gaussian explained de laplace theorem states binomial distribution asymptotically tends gaussian distribution probability chord gaussian model distance probability distance distribution shortest paths chord gaussian model left 
shortest path distribution nodes right 
mean dp variance sufficiently large provided insight certain internet graphs exhibit gaussian distributions shortest paths clear explanation phenomenon chord 
simple intuitive link bell shape curve left expansion properties graph 
distance node increases number new neighbors search slowly saturates starts declining half nodes reached 
means newly nodes link previously discovered nodes 
leads situation new neighbors know old neighbors called smallworld property clustering graph :10.1.1.31.3763
graph theory growth number new neighbors discovered certain distance related node expansion graph 
quickly expanding graphs maintain exponentially increasing number new neighbors diameter graph means new neighbors know old ones clustering coefficients virtually zero 
study phenomena carefully section currently conjecture expect reasonably high clustering low expansion chord 
recall organizes nodes dimensional cartesian space 
examine average distance graph show degree distribution routing distances identical chord 
result proved mentioned values :10.1.1.3.9768:10.1.1.3.9768:10.1.1.3.9768
lemma 
expected distance pair nodes odd lemma shows number dimensions increases distribution shortest paths gaussian 
lemma 
large distribution shortest distances gaussian 
lemma illustrated right different values shows starting pmf function gaussian high accuracy gaussian model shown 
probability chord distance probability distance comparison chord shortest path distributions left 
distribution shortest distances de bruijn right 
noted section log degree diameter log chord 
call logarithmic note size dimensions peers 
lemma 
distribution shortest distances logarithmic log binomial identical chord 
result lemma illustrated left shows perfect match graphs distributions match numerically 
note problem prevents chord difficulty dynamically adjusting number dimensions offers flexibility choice choice difficult priori rely expected number nodes system 
small fixed values prevent system scaling large large values inefficient settings happens small 
appears practical networks non trivial size ability scale degree dynamically provides chord clear advantage 
de bruijn diameter perspective de bruijn graphs offer significantly smaller upper bounds routing time 
improvement factor chord longer holds examine average shortest distances graph 
improvement substantial drops factor faster chord demonstrate 
general distribution de bruijn distances complicated known closed form expression pmf 
full version derive simple formula exact graphs diameter close real rest graphs :10.1.1.3.9768
lemma 
asymptotic distribution shortest distances de bruijn graphs kn kn 
immediately follows lemma de bruijn graphs expand exponentially majority nodes reachable shortest distance node moore de bruijn chord classic graph butterfly huge table average distance graph nodes 
demonstrated right shows de bruijn note log scale axis 
intuitively clear average distance de bruijn graphs close diameter local structure graph node looks tree short cycles low clustering 
examine cyclic structure graph section focus de bruijn average distance 
lemma 
average distance de bruijn graphs asymptotically 
expected average distance de bruijn graphs shrink small diameter fact large values average distance asymptotically tends large 
butterfly final graph examine section classic butterfly 
diameter average distance close optimal higher nontrivial de bruijn graphs 
recall average distance butterfly graph logk large asymptotically larger metric de bruijn graphs 
discussion results section indicate de bruijn graphs offer provably optimal diameter smaller average routing times compared chord static butterfly 
shown table average distance de bruijn graphs smaller half chord number neighbors smaller butterfly 
notice large de bruijn graphs converges best possible average distance moore graphs shown column table 
result practical implications 
determines expected delay graph represents measure responsiveness system user searches 
second average distance determines capacity peer peer network capacity term widely interconnection wireless networks define throughput available node random communication patterns network 
peer forward requests peers expected useful capacity node determined inverse useful request node forward average requests 
assuming fixed transmission bandwidth discounting interference effects average capacity wireless ad hoc networks due spatial restrictions connectivity chord logarithmic maintain average capacity compared log wireless networks better bound times lower de bruijn graphs :10.1.1.138.3623
assuming worst case average distance de bruijn graphs average capacity log neighbors superior chord logk log log 
log fact ratio capacities grows infinitely large albeit slowly large compared static butterfly de bruijn graphs offer asymptotically capacity capacity graphs practical size examined 
current internet search request typically carries small amount information clear point peer peer systems utilized point ultimate capacity 
believe desirable design underlying structure application layer graph able carry concurrent requests possible 
conclude de bruijn graphs offer clear benefits terms expected capacity routing distances delay existing approaches 
exists drawback fixed degree graphs static butterfly de bruijn graphs 
cases edge load distribution uniform results edges carrying load average 
addition de bruijn graphs demonstrate non uniform node load distribution 
studied area interconnection networks improvements routing protocols distribute load de bruijn butterfly networks evenly :10.1.1.13.195
leave exploration direction 
investigate clustering resilience features de bruijn graphs addressing practical peer peer networks 

clustering expansion significant research effort model structure current internet discovered existing topology generators accurately match small world clustering properties internet graph :10.1.1.31.3763
clustering interesting concept natural phenomena determines tightly neighbors node link 
follows examine clustering chord de bruijn graphs study graph theoretic semantics clustering coefficient show metrics related clustering important concepts peer peer systems 
graph node neighborhood clustering coefficient defined ratio number links entirely contained maximum possible number links graph undirected link counted twice 
graph clustering average vertices degree 
main questions study section exactly clustering mean affect properties desirable peer peer networks 
clustering coefficients values clustering coefficients graphs proofs see explain meaning results :10.1.1.3.9768
lemma 
chord clustering coefficient log lemma 
de bruijn clustering coefficient notice de bruijn decays zero quicker chord confirming earlier conjecture distribution shortest paths section 
derivation simpler easily notice nodes neighborhood link 
zero 
somewhat counter intuitive number new neighbors comes saturated just chord clustering properties similar chord examine reasons phenomenon generalize clustering global metric 
cycles ways better understand clustering means assess importance peer peer networks 
insight cycles 
regular undirected graph easy notice number cycles node determines clustering coefficient graph 
recall cycle path starts ends node contains exactly edges cycle involve direct neighbors node results clustering 
goal peer peer networks reach nodes possible certain number hops cycles lead back original node request started helpful 
goal peer peer networks provide fault resilient environment simultaneous collapse nodes separate graph disjoint components 
short cycles mean paths node different neighbors leading destination overlap 
desirable multiple parallel paths may compromised nodes neighborhood fail 
shown left failure node leaves path leading outside neighborhood 
fact node fails nodes disconnected rest graph outgoing incoming edges locally clustered 
come back issue zero clustering identical shortest path properties chord 
absence cycles explained usually paths required edge node disjoint holds cycles 
high clustering leads weak connections outside neighborhood left 
generic definition clustering right 
fact odd cycles whatsoever plenty cycles 
fact number cycles roughly undirected chord number neighbors 
consequently local properties captured clustering coefficient necessarily mean graphs friends friends common acquaintances direct friends node know 
illustrated right clustering coefficient zero nodes link friend friend node 
concept cycles applies directed graphs directly produce clustering coefficient stricter nature directed cycles 
difficulties lead generalize framework clustering expansion analysis 
graph expansion examine right shows undirected cycles contribute graph global clustering properties 
global clustering concept friends knowing generalized friends knowing friends 
previous discussion cycles allows account cases seek generic useful definition clustering goes cycles simple closed form analytical expression graphs 
study graph expansion determines quickly graph finds unknown nodes 
consider graph select nodes set define set edges rest graph 
called edge boundary edge expansion defined ratio size size 
easy see relationship clustering 
select neighborhood node number edges contained generically assuming regular graph 
clustering coefficient 
edge expansion determines strength graph presence edge failure 
clearly larger clustering efficient regular graph implies smaller seen generally leads weaker graphs 
definition 
graph edge expansion called isoperimetric number graph minimum non empty sets notice examining longer focus local clustering global properties graph resilience edge failure possible sets edge expansion tells edges link outside set tell outgoing edges link node multiple times 
example right edges leaving neighborhood link unique nodes indicates amount path overlap 
edge expansion tells size edge cut rest graph useful analysis tool studying graph resilience edges expected fail edges cut better 
peer peer systems node failure common edge failure case regardless edges cross cut strength neighborhood determined number nodes side resilience perspective peer peer networks sense examine node expansion graph define 
definition 
consider graph subset nodes define node boundary 
node expansion graph min 
related edge node bisection widths graph generally np complete problems 
furthermore years research exact expression metrics de bruijn graphs remains unknown 
limit analysis sets neighborhoods node balls centered node study graph expansion explains ball connected rest graph 
note balls necessarily represent weakest sets graph general achieve minimum bound 
derivation better bounds topic going research 
recall ball radius centered node contains nodes reachable hops 
words 
easy notice boundary ball simply derivations section applied study expansion global clustering graph 
logarithmic chord expansion properties distributions identical 
consider chord 
lemma 
chord ball expansion hb asymptotically log 
function slowly decays contrast result de bruijn graphs maintain constant connectivity hb ball sizes values lemma 
de bruijn ball expansion hb 
de bruijn graphs expand quickly approach maximum possible bound hb keep balls connected rest graph external nodes 
fact explains low diameter de bruijn graphs leads important results 
clustering de bruijn graphs minimal local global levels exponential neighborhood expansion preserved balls smaller graph 
second path overlap graph virtually non existent due little global clustering 
means shortest parallel paths destination expected node disjoint high probability 
section study fault resilience graphs examine node connectivity graph exploited greedy routing 

resilience generic methods classical failure analysis peer peer networks focused analyzing probability node disconnected percent node failure 
amounts computing probability neighbors fail simultaneously leads small individual failure probabilities practical networks 
note results derived method hold regular graph regardless internal structure 
clearly analysis insufficient distinguish regular graphs may contain weak parts partition graph disjoint components single node completely disconnected component 
approach classical fault resilience analysis examine node connectivity graph question 
graph structures show metric lead significant insight 
definition 
regular graph node connected node disjoint paths pair nodes 
implies node connected graph tolerate failure nodes disconnected diameter graph nodes failed 
chord connected de bruijn graphs due weak nodes self loops 
classical form de bruijn graphs shown node connected seek achieve maximum fault tolerance leads removing loops linking weak nodes 
consider node 
self loop 
chain linked de bruijn graph directed links 

mod development graphs studied chain linked de bruijn graphs proved node connected 
know far classical peer peer network analysis maximum fault tolerance metrics graphs similar resilience 
seek shown generating possible orders traversing dimensional paths pair nodes 
chord connectivity easily derived wellknown properties hypercubes 
additional methods distinguish fault tolerance offered graph 
metric bisection width defined smallest number possibly directed edges equal size partitions graph 
graph bisection width determines difficulty splitting graph giant components failing individual edges 
examine metric graphs 
bisection width note determining resilience bisection width graph provides tight upper bounds achievable capacity graph 
assume node sends messages random destinations certain fixed rate 
communication pattern generates messages time unit 
message replicated times average edge expected carry nk messages time unit 
note analysis assumes combined load equally distributed edges 
may bottlenecks load significantly higher average resulting throughput capacity graph may lower expected mean value 
recall approximately half communication graph expected cross bisection cut 
part graph narrow contains edges lead congestion inability graph carry expected load 
example graphs unacceptably small bisection width trees susceptible easy disconnects severe congestion near root 
lemma 
chord bisection width bw note value double bisection width binary hypercubes chord uses directed links hypercubes undirected 
lemma 
assuming size dimension bisection width bw applying result logarithmic log notice bisection width furthermore view undirected links logarithmic composed directed edges bisection width matches chord 
note achieves maximum bw log sub logarithmic values log result weaker graphs 
way showing small fixed values may competitive chord practical settings 
bisection width butterfly kn lambert function 
asymptotically kn bisection small slightly logk better 
exact value bw de bruijn graphs unknown best available upper lower bounds differ factor kn kn bw 
logk logk lower bound bisection width de bruijn graphs log larger chord factor log log generally worse butterfly 
conjectured actual bisection width de bruijn graphs higher pessimistic lower bound comparison 
summary larger values bisection width de bruijn graphs point higher resilience graph partitioning lower congestion bisection cut addition optimal routing established earlier 
examine resilience metrics may lead better understanding de bruijn fault tolerance 
path overlap far omitting great deal simulation results derived formulas exact 
section examine empirical metrics back analysis metrics simulations 
define set contain vertices path denote set vertices 
graph node connectivity means pair nodes exactly pair wise non overlapping paths 
pk qi qj paths attractive peer peer networks provide independent backup routing options main shortest path fails 
notice graphs study node disjoint paths pair paths greedy routing node 
fact order deterministically find non overlapping paths generic graph needs flood entire graph breadth search similar techniques 
examine routing rules graph able find non overlapping paths happens diameter graph nodes best path failed 
pair nodes define pi shortest greedy routing rules corresponding graph path neighbor interested structure shortest paths best neighbor fails graph routes second best neighbor trying achieve shortest path paths overlap nodes common multiple parallel paths fail diameter connectivity may significantly deteriorate 
define total number vertices shortest paths pi number unique vertices paths qi qi 
define average percentage unique nodes parallel paths 
define path overlap 
demonstrate performance graphs example chord de bruijn graphs identical size node degree 
graphs path overlap chord de bruijn 
fact larger de bruijn overlap monotonically decays zero inverse proportionally product chord overlap increases higher 
decrease de bruijn graphs easy explain set parallel paths pair nodes contains nodes average vertex repeated path 
difference chord de bruijn significant quite unexpected previous discussion expansion histogram non overlapping paths histogram non overlapping paths distribution number nonoverlapping shortest paths chord left 
distribution de bruijn right 
properties graph 
result means de bruijn automatically selects backup paths overlap best shortest path 
examine shows number pairwise non overlapping paths pair nodes corresponding graph exclude pairs direct neighbors 
interestingly pairs chord non overlapping shortest paths qi qj 
nodes paths fail alternative paths affected 
observe number node disjoint paths chord right shifted geometric distri bution asymptotic mean 
matter neighbors chord average number node disjoint paths qi 
mean distribution 
tends infinity expected number node disjoint paths tends 
right side shows de bruijn graphs non overlapping paths pair nodes 
means nodes fail packets get re routed optimal paths neighbor little likelihood encountering failed nodes 
qualitatively difference leads better de bruijn graphs smaller diameter node failure 
experiment introduced adversarial failures network 
failed nodes shortest path routed traffic second best neighbor neighbor expected shortest distance remaining neighbors 
failed nodes second best path examined third best path 
distribution average path lengths graph shown 
demonstrated average distance chord rises high hops routed suboptimal neighbors 
de bruijn graphs hand maintain low diameter average distance rises hop 
note plotted average distances path rank best worst necessarily represent order chord de bruijn typically choose best neighbor 
shows backup neighbors de bruijn graphs approximately equivalent achieve suboptimal average distance 
said chord certain neighbors average distance path rank average distance path rank distribution shortest path distances chord left de bruijn right adversarial failures 
show tendency construct shortest paths overlap failed ones 

accumulated sufficient evidence shows de bruijn graphs possess short routing distances high fault tolerance 
section discuss optimal diameter routing infrastructure builds de bruijn graphs incrementally preserves nice properties application layer 
fortunately de bruijn graphs simple build incrementally details skip identical chord 
feel algorithmic structure simpler proposed fixed degree graphs :10.1.1.13.195
nmax maximum possible number nodes system 
organize space possible nodes nmax modulo nmax number field 
notice node de bruijn graphs base integer hx neighboring rules expressed hx mod nmax shift left digit equivalent multiplication hx existing peer holds consecutive stretch number space denoted nmax 
join network node routes area circle hash index hx located asks previous owner zone split half 
notice building routing table newly joined node requires message complexity copied previous owner zone 
notification existing neighbors message overhead 
peer peer linking rules straightforward 
consider node owns zone 
integer values corresponds underlying de bruijn graph size nmax 
preserve de bruijn linkage application layer connect peers holding edge originating 
means application layer edge edge underlying de bruijn graph zx zy zx zy corresponding zones held useful results 
address issue application layer graph maintains fixed degree optimal diameter con dition equal size zones 
extend analysis random zones created uniform hashing function 
equal size zones lemma 
zones fixed size maintains application layer degree equal assumptions previous lemma notice application layer graph scaled version underlying de bruijn graph 
diameter peer peer graph conditions remain optimal show lemma 
lemma 
zones fixed size builds node application layer de bruijn graph diameter log 
random zones achieving constant size zones distributed join leave processes non trivial studied problem :10.1.1.28.7396
equal zone sizes desirable maintain fixed degree application layer provide better balancing user objects peers 
assuming uniform random hashing shown sequence random joins maximum zone held peer larger average factor ln high probability note bound applies maximum degree peer 
result application layer degree obvious 
lemma 
uniform hashing function degree peer high probability 
result shows imbalance zone sizes little impact diameter peer peer graph 
lemma 
uniform hashing function constructs peer level graph diameter log high probability 
lemma implies average distance application layer graph asymptotically optimal 
balancing zones overcome imbalance zone sizes highly dynamic environment implements variation power choices algorithm peer joins departures 
join existing network node performs biased walk graph starting random location searching largest node split 
walk biased large nodes know large nodes 
departure node biased walk looking smallest node take zone zx 
details framework currently investigation 

stage peer peer research overwhelming number proposals hard assess benefits peer peer network unifying analytical framework capture graph theoretic properties proposal 
studied diameter degree tradeoff question dht research conducted extensive graph theoretic comparison existing methods terms routing performance fault resilience 
proposed distributed architecture de bruijn graphs demonstrated offers optimal diameter fixed degree optimal resilience node connectivity large bisection width node expansion guarantees little overlap parallel paths destination 
combining findings incremental construction conclude de bruijn graphs viable appealing structures peer peer networks 

aspnes shah fault tolerant routing peer peer systems acm podc july 
azar broder karlin upfal balanced allocations siam computing vol 


barabasi albert jeong scale free characteristics random networks topology world wide web physica 
bu towsley distinguishing internet power law topology generators ieee infocom 
routing multi hop packet switching networks gbps challenge ieee network magazine 
bridges toueg impossibility directed moore graphs journal combinatorial theory series 
chung diameters communication networks mathematics information processing 
considine scalable peer peer indexing constant state boston technical report august 

du hsu ngo peck connectivity consecutive digraphs discrete mathematics vol 

feldmann monien better upper bound bisection width de bruijn networks symposium theoretical aspects computer science stacs 
fiat censorship resistant peer peer content addressable networks symposium discrete algorithms 
overview content addressable network acm podc 
freedman efficient peer peer lookup distributed trie iptps march 
ganesan sun garcia molina peer peer lookup service arbitrary topology ieee infocom march 
gummadi gummadi gribble ratnasamy shenker stoica impact dht routing geometry resilience proximity acm sigcomm august 
gupta kumar capacity wireless networks ieee trans 
information theory march 
hildrum kubiatowicz rao zhao distributed object location dynamic network acm spaa august 
application generalized perfect shuffles multihop networks ieee infocom 
itoh design minimize diameter building block network ieee trans 
computers vol 

kaashoek karger koorde simple hash table iptps february 
law 
siu distributed construction random expander graphs ieee infocom 
leighton parallel algorithms architectures arrays trees hypercubes academic press morgan kaufmann 
liben nowell balakrishnan karger analysis evolution peer peer networks acm podc 
loguinov kumar rai ganesh graph theoretic analysis structured peer peer systems routing distances fault resilience texas technical report :10.1.1.3.9768
malkhi naor viceroy scalable dynamic emulation butterfly acm podc 
manku bawa raghavan symphony distributed hashing small world usits 
naor wieder novel architectures applications continuous discrete approach acm spaa june 
raghavan upfal building low diameter networks ieee symposium foundations comp 
sci 
plaxton rajaraman richa accessing nearby copies replicated objects distributed environment acm spaa 
steger balls bins simple tight analysis random 
ratnasamy francis handley karp shenker scalable content addressable network acm sigcomm august 
ratnasamy shenker stoica routing algorithms dhts open questions iptps 
reddy lee digraph minimum diameter maximum connectivity proceedings allerton conf 
communications control computers 
bisecting de bruijn kautz graphs discrete applied math vol 
june 
rowstron druschel pastry scalable decentralized object location routing large scale peerto peer systems ifip acm international conference distributed systems platforms november 
fiat gribble karlin saroiu dynamically fault tolerant content addressable networks iptps march 
schlosser sintek decker nejdl hyper cup hypercubes ontologies efficient search networks workshop agents computing 
ramaswami networks de bruijn graphs ieee acm trans 
networking vol 

sridhar raghavendra fault tolerant networks de bruijn graph ieee trans 
computers vol 

stoica morris karger kaashoek balakrishnan chord scalable peer peer lookup service internet applications acm sigcomm august 
tran hua zigzag efficient peer peer scheme media streaming ieee info com 
xu kumar yu fundamental tradeoffs routing table size network diameter peerto peer networks appear ieee jsac nov :10.1.1.13.195
zhao kubiatowicz joseph tapestry infrastructure fault tolerant wide area location routing uc berkeley technical report april 
zhuang zhao joseph bayeux architecture scalable fault tolerant wide area data dissemination acm nossdav june 
