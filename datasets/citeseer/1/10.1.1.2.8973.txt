diameter randomly perturbed digraphs applications abraham alan frieze department mathematical sciences carnegie mellon university pittsburgh pa usa cmu edu alan random math cmu edu june central observation random edges added node connected graph digraph resulting graph diameter log 
apply smoothed analysis algorithms property testing 
smoothed analysis recognizing strongly connected digraphs basic computational task graph theory 
graphs bounded degree nl complete 
xoring arbitrary bounded degree digraph sparse random digraph obtain smoothed instance 
show high probability log space algorithm correctly determine smoothed instance strongly connected 
show nl heuristic recognize similarly perturbed instances connectivity 
property testing digraph called linked choice distinct vertices graph contains vertex disjoint paths joining 
recognizing linked digraphs np complete 
describe polynomial time algorithm bounded degree digraphs accepts linked graphs high probability rejects graphs edges away linked 
diameter graph length longest shortest path words length shortest path diameter max 
graph connected directed graph strongly connected nite diameter 
central observation random edges added node connected graph diameter log high probability meaning probability tending abbreviated whp 
true strongly connected directed graphs digraphs ways generating random edges 
ease exposition state theorem strongly connected digraph perturbed adding random digraph means supported part nsf ccr distributed distribution distribution node digraphs arc included independently probability theorem positive constant 
strongly connected node digraph diameter log similar results hold perturbations formed adding edges selected random replacement adding random matching assignment edges picking vertices adding uniformly random arc 
theorem related class problems regarding possible change diameter graph edges added deleted example results alon arf minimum number edges added graph transform graph diameter study extremal diameter alteration questions initiated chung garey 
related theorem bollob chung diameter cycle plus random matching 
application smoothed analysis digraph strongly connected vertex pair directed path recognizing strongly connected digraphs basic computational task set strongly connected digraphs nl complete 
nl log space algorithm recognizes strongly connected digraphs 
worst case complexity theory pessimistic 
consider performance simple heuristic runs randomized log space 
show heuristic succeeds random instances whp 
meaning result depends probability space draw random instances 
reasonable assume real world digraph contain amount randomness tempting believe result shows real world strong connectivity requires log space 
unfortunately valid wrong model randomness 
example distribution generated nodes including ordered pair arc independently probability pleasant analysis basic statistics degree sequence di er real world graphs 
model randomness exible 
start arbitrary digraph perturb xoring sparse random graph produces random instance random study worst case instances small random perturbations called smoothed analysis 
smoothed analysis introduced spielman teng discuss perturbation model discrete problems 
consider perturbing graphs xoring adjacency matrix random adjacency matrix edge constant probability 
probability edge ip constant perturbed instances dense graphs constant fraction possible edges appear 
independently frieze martin studied issue dense graph random edges added graph properties analyzed model frieze martin 
xor perturbation probability corruption lower 
linear number edges appropriate perturbation change edges expected number edges randomness strong connectivity recognizing strongly connected digraphs closely related recognizing connectivity digraphs canonical nl complete problem 
possible recognize connectivity undirected graphs randomized log space algorithm random walks 
cover time arbitrary connected graph bounded random walk visit vertex polynomial time whp 
approach arbitrary digraphs cover time exponential 
diameter connectivity random graphs studied see example books bollob janson nski 
closest spirit investigation bollob chung diameter hamilton cycle plus random matching chung garey diameter altered graphs 
component structure random digraphs studied karp cooper frieze 
heuristic recognizing strong connectivity ordered pair vertices repeat procedure times starting take steps random walk digraph 
random walk sequence vertices visited particle moves follows chosen uniformly random neighbors random walk restarts reaches digraph contains path continue pair vertices 
large algorithm correct whp 
example path random walk followed correctly far probability correctly step 
distance success probability single walk exceeds discover path whp 
just time algorithm problem nl values signi cantly improved smoothed random instances 
main theorem section suitable polynomials heuristic call algorithm successful perturbations bounded degree instances whp 
prove rst show successful initial instance strongly connected digraph perturbation adds edges 
extend show success initial instance necessarily strongly connected perturbation adds edges 
simple translate results original perturbation model edges added removed generate perturbation rounds rst deleting existing edge probability add random edges resulting digraph 
recall distribution random digraphs vertex set possible arc appears independently probability write mean selected randomly distribution write mean xor digraphs say vice versa 
theorem positive constant 
node digraph maximum outdegree 
ais correct log 
log absolute constants 
nd suce attempt optimize values 
strongly connected digraph bounded degree diameter log random walk length log poly chance going algorithm succeed values realized log space 
unfortunately initial instances bounded degree indicated theorem perturbed instances logarithmic diameter perturbation increases maximum degree log log little harder show random walk non negligible probability witnessing path 
additional reward nd algorithm derandomized checking paths length log uses log space 
analysis algorithm ais complicated possibility digraph strongly connected combining random produce smoothed instance strongly connected 
handle situation arguing smoothed instance strongly connected small strong components large components strongly connected short paths random walk travel nally small components connected large component close 
study instances bounded degree 
nice extend results hold perturbed copies digraph digraphs bounded degree 
result possible heuristic 
demonstrate necessity assumption bounded outdegree constructing family instances growing degree algorithm succeed whp 
theorem positive constant suciently large exists node digraph maximum outdegree 
probability algorithm exceeds 
strong connectivity versus connectivity strong connectivity nl complete problem connectivity nl complete problem 
sipser undergraduate text completeness connectivity proved detail completeness strong connectivity left exercise appendix includes simple solution exercise shows completeness holds strong connectivity graphs bounded degree 
light natural investigate ecacy heuristics smoothed instances connectivity 
nd instances algorithm whp 
log space heuristic exists provided conjecture complexity theory holds 
theorem nl log space heuristic succeeds smoothed instances bounded degree connectivity 
proof consists building machine simulates nondeterministic log space machine log space heuristic connectivity heuristic exist 
proof recall de nition land comment appears bpl 
smoothed model versus semi random model semi random model introduced vazirani 
model adversary adaptively chooses sequence bits corrupted independently probability model real world random bits output geiger counter noisy diode consider possibility random bits computation worst case instances 
blum spencer considered performance graph coloring heuristic random semi random instances 
subsequent uncovered interesting di erence random semi random instances graph coloring 
alon developed heuristic succeeds random instances constant expected degree feige kilian showed heuristic succeed semi random instances expected degree log developed heuristic semi random instances expected degree log 
original semi random model vazirani instance formed adaptive adversary looks bits generated far asks particular value bit gets opposite asked probability modi cations proposed blum spencer feige 
variations maintain adaptive aspect adversary strategy low density allows power error probability log roughly isolated vertices adversary able encode polynomial sized instance containing randomness 
wish consider extremely sparse perturbations error probability allow adversary powerful semi random model 
xor perturbation considered equivalent natural weakening semi random model making adversary oblivious 
application property testing property testing provides alternative weakening worst case decision problems 
formalized goldreich goldwasser ron 
goal property testing design algorithm decides instance property di ers signi cantly instances property 
example property tester strong connectivity bounded degree digraphs accept strongly connected instances reject instances edges away strongly connected 
note algorithm designed smoothed random instances converted property tester instance gap parameter randomly perturb adding random edges run algorithm perturbed version 
yield impressive testing strong connectivity undirected connectivity testing results goldreich ron applied directed case produce constant time tester 
perturbation approach yields property tester dicult connectivity problem linked 
digraph called linked choice distinct vertices graph contains vertex disjoint paths joining 
recognizing linked digraphs np complete 
bounded degree property testing version linked constant digraph maximum degree 
goal accept linked reject arcs away linked linked close 
heuristic testing perturb ipping coin node probability adding arc leading node chosen uniformly random 
call perturbed instance choice distinct vertices repeat procedure times starting take steps random walk graph 
random walks reach correct terminals vertex disjoint paths continue choice vertices 
reject 
assumed xed independent input 
theorem positive constant 
linked node graph maximum degree 
algorithm accepts whp 
comments regarding di erence theorem theorems 
perturbed adding maximum degree bounded 
faced additional challenges theorem addressed lemma vertex disjoint logarithmic length paths appear immediately conclude discovered polynomial number samples 
fact paths exist calculation analogous proof theorem explores disjoint neighborhoods terminals simultaneously 
analog dicult part theorem showing algorithm ais correct case disconnected leads strongly connected longer necessary 
property testing setting required correctly recognize instances lead situation 
possible carry dicult part obtain heuristic linked works smoothed instances details remain elusive 
outline follows rst prove theorem 
prove theorem showing algorithm ais successful whp 
prove theorem constructing instance growing degree algorithm constant probability prove theorem showing log space heuristic connectivity build 
prove theorem proof theorem 
proof theorem show strongly connected diameter log whp 
adding random digraph probability add random digraphs arcs appearing independently probability respectively 
take probability edge appearing union adding yields digraph identically distributed show contains short paths special form alternating appropriate number edges random edge similar approach bollob chung 
resp 
set vertices resp 
path length log resp 
identify set neighbors set neighbors resp 
set resp 
arc resp 
resp 
set vertices resp 
path length resp 

dlog ne show pr argue assertion part regarding proved analogously 

suppose ju vertex probability arc connecting js js cherno bounds binomial random variable pr np exp np pr np exp np events fs independent js see distributed js 
pr js js ju js js js show js js note size set random subset vertices ju vertices choose 
degree bounded 

vertices distance vertex 
call randomly selected vertex failure distance previously selected vertex 
probability failure particular vertex conditioned success failure vertices js 
number failures stochastically dominated js js 
interested wide range values js bound probability large small values js js obtain pr js jq ju js exp js jq exp 
relies fact js js jq 
js union bound show pr js js js 
js case failure set size js probability 
obtain lower bound size ignoring failure vertices 
note neighborhoods size non failure vertices disjoint strongly connected vertices distance vertex 
js js probability 
combining bound probability js js gives pr js js ju js js fact strongly connected js log pr ju pr ju js js pr js js ju js log log size probability 
intersect know path length 
expose edges appear independently probability nd pr 
choices theorem follows 
proof theorem strongly connected theorem know diameter log whp 
unfortunately conclude algorithm ais successful whp 
argue probability random walk traversing short path small 
original graph having diameter log imply ecient algorithm maximum degree bounded 
random perturbation created vertices degree log log little 
lemma arbitrary digraph maximum degree 
whp contains path length log deg log 
proof prove claim rst moment method 
bound number paths vertices arcs places start path di erent ways decide take arc arc degree bounded 
choices choices non arcs go 

paths length edges probability path appears 
bound probability sum logarithms degrees vertices path length exceeds log 
rst bound similar quantity graph note pr deg deg jp 
deg 
pr log 
expected number paths length edges degree exceeding log 


upper bound probability contains path length log ne ne ne 
ne maxf 

log log log maxf 

log 
log paths length log deg log 
correctness algorithm ain case strongly connected follows fact probability random walk follows path precisely deg 
strongly connected previous section shows algorithm ais correct strongly connected digraphs prove algorithm ais correct strongly connected 
outline approach consider strong components components size log show whp incident arcs strongly connected algorithm correct 
case consists larger strong components expose random arcs rounds 
argue strong components merge unique giant strong component containing vertices rst round 
invoke lemma previous section show random arcs second round gives giant low diameter 
deal vertices belong small strong components rst round random arcs added 
vertices connected giant directions necessarily sharp threshold strong connectivity 
show constants whp vertex connected direction giant paths length log vertex close giant direction reached direction 
lemma know paths length log non negligible probability traversed algorithm take bound lemma raise power 
conclude graph strongly connected case algorithm ais correct graph strongly connected way algorithm ais correct 
calculations required plan follow 
lemma log strong components containing log vertices components incident arcs proof second moment method 
small strong component xc indicator random variable event incident arc xc jcj log xc xc log xc xc jc jc xc number strong components incident arc log components log xc xc xc xc xc xc xc xc log second moment method pr follows lemma algorithm case number small strong components large 
consider case log strong components size log previous section consider adding random arcs rounds introducing take probability arc appears exactly identically distributed strong components size exceeding sizes ck nk denote number arcs ck ck denote number arcs ck pr nk nk number choices value nk nk pr nk nk nk nk nk nk nk nk nk follows whp contains giant strong component js apply results previous section strongly connected digraph add producing digraph diameter log shortest paths satisfy deg dg log 
detail remaining deal log vertices vertex 
show whp path vertex short path 
identical argument shows property holds paths consider cases 
denote set vertices reachable log arcs starting jv log say medium jv log say small 
medium vertex probability add edge vertex log medium close consider shortest path small vertex vertex whp de ned sequence canonical shortest paths similar path edge small 
allow fix holds 
number choices sequence log probability edges exist probability exists small vertex requires log whp strongly connected diameter log log log worst case coming path length log followed path length log vertex path length log applying lemma see paths traversed algorithm probability log 

algorithm ais correct whp 
proof theorem example growing degrees consider possibility applying algorithm ato case maximum degree 
grows example shows algorithm necessarily implementable polynomial time 
start directed path 
assume add arcs call backwards arcs 
perturb instance obtain probability delete edge path backwards arc strongly connected probability 
show whp lemma path fv length log backwards arcs 
paths length back edges 
proof path consist sequence sub paths lengths connected random arcs 
expected number paths 
dn dn dn 
dn calculation shows expected number paths length dn markov inequality implies pr number paths dn consider random walk parts backwards arcs called attempts denote attempt denoted successful attempts termed failures 
point algorithm connectivity executing steps random walk declaring connectivity reached 
repeated times 
order counting log space 
probability walk reaches bounded factor accounts points successful attempt begins bounds number possible paths making attempt bounds probability follow path 
vertex successful attempt degree whp 
note may deleted backwards arcs xored probability exists vertex backwards arcs deleted 

probability declare connected algorithm fails probability 
proof theorem suppose heuristic exists uses log space successful smooth instances connectivity 
log space transducer convert worst case instance connectivity nodes smoothed instance connectivity 
unfortunately reduction sucient show existence heuristic implies nl bpl nondeterministic log space simulator space store output log space transducer 
traditional technique simulating log space machine output log space transducer time bit input requested restart transducer simulate produces bit question 
inecient time exchange longer logarithmically bounded space 
case reduction randomized need log space transducer produce random instance time 
require multiple access randomness known wrong de nition denoted bp 
nisan provides evidence multiple access randomness powerful read randomness 
shows bp poly lis set languages standard measure set oracles 
details classes see survey wagner 
instance connectivity nodes construct instance nodes adding isolated vertices 
call original vertices additional vertices smooth instance xoring form 
log space machine uses multiple access randomness room write graph generate th bit scratch time heuristic asks 
values di er small probability di er way time heuristic asks th bit 
probability contains edge pair vertices bounded 
connected connected whp 
vertices isolated form sparse random graph component size exceeding log 
probability contains component arcs vertices log 
explanation choices endpoint log choices component 
choices endpoint probability random edge appears edges added components serve shortcut vertices connected connected whp 
sucient conclude heuristic exists nl form heuristic solve give correct answer original problem whp 
proof theorem show linked contains disjoint paths length log witness 
particular choice vertex disjoint paths goes order paths longest shortest de ne length log prove suppose 
type argument proof theorem show existence short paths simultaneously ensure paths nd vertex disjoint 
de ne sequence collections sets de ne 
rst log vertices log vertices 
call node useful node previously placed set 
de ne check node random arc useful node add nodes reachable steps continue js exceeds js declare failure 
de ned analogously paths lead away 
node look useful nodes random arc directed put jt wish argue form sets appropriate sizes js jt time discover useful neighbor add nodes see failure nd js useful neighbors 
step kn nodes placed degree bounded 
means 
kn useful nodes 
node random arc useful neighbor independently probability cherno bound pr number useful neighbors js js useful node random arc node independently probability jt pr number useful neighbors jt jt js jt log union bound shows probability failure kn log conclude note js jt probability node random arc node exp probability vertex disjoint paths length log 
union bound see choices nodes short edge disjoint paths linking whp 
random perturbation preserves boundedness degree random walks discover paths nonnegligible probability 
spielman teng introduced smoothed analysis help explain success simplex algorithm 
smoothed analysis examine complexity strong connectivity connectivity 
analysis np hard optimization problems judge degree diculty approximability 
provide measure diculty existence heuristics smoothed instances 
nd measure strong connectivity easier connectivity 
claim somewhat surprising determine graph strongly connected repeatedly checking pairs vertices connected 
strong connectivity global property instance section exists pair algorithm concludes connected pair algorithm concludes connected net result correct 
directions research 
easy come measure diculty easy come measure 
represents piece experimental data 
problems appear solvable heuristics smoothed instances 
property relate diculty problems practice 
especially interesting case np complete problems 
questions nature investigated 
second nice theorem 
clear achieve 
complication related limitations logspace computation 
analogous result holds proof possibility heuristics recognizing digraph contains edge disjoint paths connecting terminal pairs 
case worst case problem np complete reduction room store perturbed copy show np bpp heuristic successful smoothed instances 
similar question addresses growing degree case section 
know algorithm heuristic 
nice result form similar theorem suggesting heuristic works unbounded degree graphs 
natural extend results computing strong connectivity linked smoothed instances 
face unresolved technical di culties 
aleliunas karp lipton lov asz random walks traversal sequences complexity maze problems proc 
th ieee symp 
foundations computer science 
alon gy arf decreasing diameter bounded degree graphs graph theory 
alon spectral technique coloring random colorable graphs dimacs tr 
mehlhorn 
smoothed analysis combinatorial problems 
mfcs appear typical properties winners losers discrete optimization appear stoc 
bollob random graphs second edition cambridge university press bollob chung diameter cycle plus random matching siam journal discrete mathematics 
leonardi marchetti spaccamela schaefer helps probabilistic analysis multi level feedback algorithm appear focs 
blum spencer coloring random semi random colorable graphs journal algorithms 
frieze martin random edges dense graph hamiltonian 
random structures algorithms 
frieze martin adding random edges dense graphs appear 
chung garey diameter bounds altered graphs journal graph theory 
cooper frieze size largest strongly connected component random digraph degree sequence combinatorics probability computing 
faloutsos faloutsos faloutsos powerlaw relationships internet topology sigcomm 
feige finding certifying large hidden clique graph random structures algorithms 
feige kilian heuristics graph problems journal computer system sciences 
feige tight upper bound cover time random walks graphs random structures algorithms 
goldreich goldwasser ron property testing connection learning approximation acm 
goldreich ron property testing bounded degree graphs proc 
th stoc 
janson nski random graphs wiley interscience 
jones space bounded reducibility combinatorial problems journal computer system sciences 
karp transitive closure random digraph random structures algorithms 
personal communication 
nisan read vs multiple access randomness logspace theoretical computer science 
vazirani generating quasi random sequences semi random sources journal computer system sciences 
sipser theory computation pws 
spielman teng smoothed analysis algorithms simplex algorithm usually takes polynomial time proceedings third annual acm symposium theory computing 
spielman teng smoothed analysis motivation discrete models proceedings wads lecture notes computer science springer verlag 
wagner measure results computational complexity theory advances algorithms languages complexity 
nl completeness standard proof nl completeness connectivity nodes correspond machine con gurations includes edges pair machine con gurations follow directly 
turing machines nite set symbols nite set con gurations follow con guration 
reduction produces graph bounded degree connectivity bounded degree graphs nl complete 
bounded degree instance connectivity reduce instance strong connectivity node adding arc arc add path connected instances stay connected 
original instance contained path new instance strongly connected arc vertex path arc vertex 
unfortunately bounded degree increased degree avoid add complete binary tree vertices edges directed away root connect root leaf vertices original graph 
ect adding arcs directly increases degree adds vertices degree 
implemented log space transducer requires little bit shifting produce binary tree 

