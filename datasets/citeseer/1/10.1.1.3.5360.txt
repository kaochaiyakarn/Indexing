animating sand mud snow robert sumner james brien jessica hodgins college computing graphics visualization usability center georgia institute technology atlantic drive atlanta ga mail cc gatech edu computer animations lack subtle environmental changes occur due actions characters 
car tires usually leave marks airplanes rarely leave jet trails sky runners leave footprints 
describe simulation model ground surfaces deformed impact rigid body models animated characters 
demonstrate algorithms show footprints runner sand mud snow bicycle tire tracks bicycle crash falling runner 
shapes footprints surfaces quite different effects controlled essentially independent parameters 
assess realism resulting motion compare simulated footprints video footage human footprints sand 
keywords animation physical simulation ground interaction 
communication medium par movies computer animations rich view artificial world 
texture maps applied threedimensional models scenery help create required visual complexity 
static scenery part answer subtle motion elements scene required 
trees bushes move response wind created passing car runner crush grass clouds drift sky 
simple scenery sparse motion effectively focus attention viewer missing inconsistent action may distract viewer plot intended message animation 
principles animation viewer unintentionally surprised motion lack scene 
appear proceedings graphics interface 
image tracks left sand group fast moving motion blurred alien 
movie directors face related problem ensure viewer consistent view world characters 
actor clothing change scene scene lighting consistent edits absent unexpected elements missing tire tracks extra footprints jet trails avoided 
risk distracting viewer great member director team known continuity girl floor secretary second assistant director responsible solely maintaining consistency 
maintaining consistency easier harder computer animation 
creating artificial world control lighting conditions layout scene parameters recreate need shoot fill scene 
world artificial may tempted rearrange objects scenes best effect creating series scenes exist consistent world 
computer generated animations special effects add facet consistency problem making models move deform appropriately lot 
example animated figures leave tracks environment human actor special effects artists hard create subtle essential effects environment maps flames 
detail scene represents additional computer graphics environments clean sparse 
approach partial solution problem create interesting environment allowing character actions change part environment 
describe model ground surfaces explain surfaces deformed characters animation 
ground material modeled height field formed vertical columns 
impact rigid body model ground material deformed allowing compression material movement material columns 
demonstrate algorithms show creation footprints sand mud snow 
surfaces created modifying essentially independent parameters simulation 
evaluate results animation comparison video footage human runners dramatic patterns created bicycle tire tracks falling bicycle runner 
background researchers investigated procedural techniques generating animating background elements computer generated scenes 
primarily interested techniques allow state environment altered response motions actor methods animating modeling part environment independent movements actors relevant modified simulate interactions 
example animated ground tracks computer animation done 
describes prints created efficiently rendering object create bump map applying bump map ground surface create impressions objects contacted ground 
closely related previous li 
developed model soil allows interactions soil blades digging machinery 
soil spread terrain modeled height field 
soil pushed front blade modeled discrete chunks 
discount factors contribute soil behavior favor tractable model technique physically arrive simulation formulation detailed analysis soil dynamics 
authors note actual soil dynamics complex model focuses specific set actions performed soil effect horizontal forces acting soil causing displacements soil slippage 
method obvious similarities li focus modeling different set phenomena different scales 
adopt appearance approach interest developing technique easily model wide variety ground materials animation purposes 
method modeling appearance ground surfaces described 
simulation ground surface model behaves essentially elastic sheet 
sheet deforms acted objects 
model allows objects smooth impressions ground surface describe technique realistically model real world ground materials 
environmental effects animated include water clouds gases fire lightning leaves blowing wind 
water received attention 
early fournier reeves procedural models specially designed wave functions model ocean waves travel break beach 
kass miller developed general approach shallow water equations model behavior water general conditions 
model modified appearance sand texture wet 
brien hodgins extended kass miller allow behavior water simulation affected motion objects environment allow water affect motion objects 
included examples objects floating surface simulated humans diving pools water 
foster metaxas variation dimensional navier stokes equations model fluids 
addition surface volumetric approaches particle methods model water spray loosely packed materials 
supplementing particle models inter particle dynamics allows wider range phenomena modeled 
examples systems include reeves sims miller pearce terzopoulos platt fleischer 
simulation interactions environment generate models 
researchers described techniques generating complex plant models grammars describing plant develop grow time 
mech prusinkiewicz uniform grid forms height field defines ground surface 
grid point height field represents vertical column ground material top column centered grid point 
developed techniques allowing developing plants affect affected environment 
dorsey colleagues simulation model object surface changes time environmental factors act 
simulation sand mud snow general model deformable ground material 
model consists height field supported vertical columns material 
displacement compression algorithms animate deformations created rigid geometric objects impact ground material create footprints tire tracks patterns ground 
properties model varied produce behavior different ground materials sand mud snow 
model ground material simulation model continuous volume ground material dividing surface volume uniform rectilinear grid defines height field 
resolution grid chosen appropriately size desired features ground surface 
example resolution grid cm bicycles approximately meters long cm wide tires 
initial conditions height grid point created procedurally imported variety sources 
implemented initial conditions noise generated integer lattice interpolated cubic catmull rom splines variation dimensional perlin noise function 
terrain data output modeling program initial height field 
alternatively initial conditions output previous simulation run 
example marked surface public beach busy summer day modeled simulating criss crossing 
motion ground material height field represented top columns deformed rigid geometric objects push grid 
examples geometric objects runner shoe bicycle tire frame jointed human 
motion rigid bodies computed dynamic simulation human running bicycling falling smooth hard ground plane 
resulting motion input simulation ground material form trajectories positions orientations geometric objects 
generic specification motion input motion need dynamically simulated keyframe motion capture data 
simulation approximates motion columns ground material compressing displacing material rigid geometric objects 
time step test performed determine rigid objects intersected height field 
height affected columns reduced longer penetrate surface rigid object 
material displaced compressed forced outward surrounding columns 
series erosion steps performed reduce magnitude slopes neighboring columns 
particles generated contacting surface rigid object mimic spray material seen impact 
discuss step algorithm detail collision displacement erosion particle generation 
collision 
collision algorithm determines rigid object collided ground surface 
column ray cast bottom column vertex top 
ray intersects rigid object hits vertex rigid object penetrated surface top column moved intersection point 
flag set indicate column moved change height stored 
computational costs ray intersection tests reduced partitioning polygons rigid body models axis aligned bounding box hierarchy 
vertex coloring algorithm simulation computes contour map distance column collided object closest column collided 
information material displaced collision distributed 
initialization step columns contact object assigned value zero 
sub contour map represents distance column contact foot column contact 
illustration columns way connected 
examples way connectivity higher connectivity yielded smoother results 
sequent iterations unlabeled columns adjacent labeled columns assigned value equal value lowest adjacent column plus 
displacement 
ground material columns contact object compressed distributed surrounding columns contact object 
compression ratio chosen user parameters available controlling visual appearance ground material 
material distributed computed wherem total amount displaced material 
material compressed equally distributed neighbors lower contour values ground material redistributed closest ring columns contact rigid object 
heights columns ring increased reflect newly deposited material 
erosion 
displacement algorithm deposits material ring columns contact object heights columns may increased unrealistic fashion 
erosion algorithm identify columns form steep slopes neighbors move material slope form realistic mound 
parameters allow user control shape mound model different ground materials 
erosion algorithm examines slope pair adjacent columns grid assuming connectivity 
column ij neighboring column kl slope tan ij kl ij height column ij distance columns 
slope greater threshold ground material moved higher column slope lower column 
ground material moved computing average difference height neighboring columns great downhill slope ij kl average difference height multiplied fractional constant resulting quantity equally distributed downhill neighbors 
algorithm repeats slopes threshold inthe special case neighboring column contact geometric object different threshold provide independent control inner slope geometric object 
particle generation 
particle system model portions ground material thrown air motion geometric objects 
user controls object material rate particles fall object 
triangle object contact ground picks volume ground material contact 
volume material determined area triangle multiplied adhesion constant material 
triangle longer contact ground drops attached material particles exponential decay rate 
tc tc initial volume attached triangle current time time triangle left ground time step size half life parameter controls quickly material falls 
number particles released time step determined volume particle 
initial positions particle randomly distributed surface triangle andx coordinates vertices triangle andb barycentric coordinates independent random variables evenly distributed 
computation results uniform distribution triangle 
initial velocity particle computed velocity rigid object linear angular velocity object 
give realistic appealing look particle motion initial velocities randomly perturbed 
final component particle creation algorithm accounts greater probability material fall fast moving objects 
particle created wheres minimal speed potential particles dropped controls variation probability particle creation speed random variable evenly distributed range 
particles generated time step resulting particle distribution discrete sheet appearance 
avoid undesirable effect randomly distributing particle creation time time step interval 
information calculate initial position velocity interpolated interval obtain information appropriate particle creation time 
generated particles fall influence gravity 
particle hits surface column volume added column 
implementation optimization simulations terrain generally span large area 
example able simulate runner jogging beach snow covered slope stampede animals crossing sandy valley 
naive implementation entire terrain intractable memory computation requirements 
sections describe optimizations allow achieve reasonable performance storing simulating active portions surface parallelizing computation 
algorithm complexity 
ground model dimensional rectilinear grid straightforward implementation dimensional array nodes containing height information column 
animation required grid rows columns nodes needed computation time memory grow linearly number grid points 
patch ground grid resolution cm yields grid nodes 
node requires bytes memory entire grid requires mbytes storage 
relatively small patch ground requires significant system resources 
ground nodes static simulation allowing efficient algorithm creates simulates active nodes 
active area ground surface determined projecting enlarged bounding box rigid objects surface shown 
nodes projection marked active collision detection displacement erosion algorithms applied entire grid active grid points 
additionally nodes allocated entire ground surface created demand active 
position particular node index hash table allowing algorithms implemented simple array nodes 
active grid points processed computation time function size rigid objects scene total grid size 
memory requirements significantly reduced state modified nodes stored longer active 
parallel implementation 
despite optimization provided simulating active nodes computation time grows linearly projected area rigid objects 
adding second character approximately double active area computation time multiple characters reduced parallel processing characters contacting independent patches ground 
parallel implementation parent process maintains state grid spawns child process character animation 
child process maintains local copy grid multiple copies grid synchronized stage communication protocol time step 
child reports changes copy grid parent process 
parent process updates master copy grid reports changes children 
parallel implementation assumes projected bounding boxes rigid objects different characters overlap 
sophisticated implementation handle case assigning characters overlapping bounding boxes processor 
implemented design processor sgi power challenge unix sockets handle communication 
parallel implementation rely shared memory multiple single processor machines network delays multiple machines significant left shows ground area created hash table 
currently active area highlighted red 
right shows scene rendered initial ground surface 
approximately columns active area stored hash table number columns entire virtual grid greater 
mud snow sand video images video footage human runner stepping sand simulated runner stepping sand mud snow 
human runner images separated simulated images separated images runner obstacle falling sand 
final image shows pattern sand 
communication time single multiprocessor machine 
animation parameters goal research create tool allows animators easily generate significant fraction variety seen ground materials 
parameters simulation changed user order achieve different effects liquidity roughness inside slope outside slope compression 
erosion algorithm fifth displacement algorithm 
liquidity determines material appears modifying times erosion function called time step 
erosion time step surface appears flow outward intersecting object erosion surface moves final state quickly 
roughness controls irregularity ground deformations changing amount material moved column erosion 
small values yield smooth mound material larger values give rough irregular surface 
inside outside slope parameters modify shape mound ground material changing slope adjacent intersecting geometry slope outer part mound 
small values lead erosion gradual slope large values yield erosion steeper slope 
compression parameter substances different densities determining displaced material distributed outward object intersected grid 
value causes material displaced value allows material compressed 
additionally particles rate creation particles controlled primarily parameter representing adhesion ground material object 
included particles animations sand include animations mud snow 
dynamic motions skiing generate significant spray running snow appears generate clumps snow particles 
results discussion shows images human runner stepping sand simulated runner stepping sand mud snow 
parameters simulations ground materials table 
footprints left real simulated runners sand quite similar 
figures show complicated patterns created sand falling bicycle runner 
va ab sand mud snow liquidity roughness inside slope outside slope compression table table parameters ground materials 
images actual tire tracks snow human footprints snow mud 
simulations grid resolution cm cm yielding virtual grid size bicycle runner 
simulation described allows capture relative ease behaviors substances sand mud snow 
fifteen iterations required hand tune parameters desired effect material 
computation time burdensome second simulation running interacting cm cm resolution ground material required minutes computation time single mips processor 
effects missed model 
example wet sand mud crack form large clumps model generate smooth surfaces particles 
actual ground material uniform contains small grains sand dirt larger objects rocks leaves sea shells 
generally factors go creating appearance patch ground water wind erosion plant growth footprints people animals 
subtle effects illustrated human footprints snow mud shown 
significant approximation simulation system motion rigid objects affected deformations surface 
sequences rigid body simulations interacted flat smooth ground plane 
accurate realistic simulation system allow bike runner experience undulations initial terrain changes friction caused deforming surfaces 
example bike slowed significantly rolling sand runner foot slips slightly step soft ground 
motions sand mud snow generated distinctly different changes simulation parameters 
difference due deformations determined simulations part visual difference results different surface properties rendering 
generate images select appropriate parameters simulation select parameters rendering 
complete investigation techniques selecting rendering parameters texture maps prove useful 
regard simulation appearance engineering parameters bear scant resemblance physical parameters material modeled 
liquidity parameter example varies representing quantity water amount sand 
hope representation parameters allows intuitive adjustment resulting animation requiring deep understanding simulation algorithms soil mechanics 
evaluation qualitative appearance compare simulated video images footprints matching initial final conditions quantitatively 

physical models loose soils dynamically marked moving object 
computer animation pages 
chiba muraoka miura 
dimensional visual simulation flames smoke spread fire 
journal visualization computer animation january march 
dorsey hanrahan 
modeling rendering metallic 
siggraph conference proceedings pages 
acm siggraph 
dorsey pedersen hanrahan 
flow changes appearance 
siggraph conference proceedings pages 
acm siggraph 
ebert perlin wo ey 
texturing modeling procedural approach 
academic press october 
foster metaxas 
realistic animation liquids 
proceedings graphics interface pages 
foster metaxas 
modeling motion hot turbulent gas 
siggraph conference proceedings pages 
acm siggraph 
fournier reeves 
simple model ocean waves 
siggraph conference proceedings pages 
acm siggraph 
hodgins brogan james brien 
animating human athletics 
siggraph conference proceedings pages 
acm siggraph 
kass miller 
rapid stable fluid dynamics computer graphics 
siggraph conference proceedings pages 
acm siggraph 
li 
modeling soil realtime dynamic models soil slippage manipulation 
siggraph conference proceedings pages 
acm siggraph 

motion simulation 
november 

works ant 
siggraph video review volume 
acm siggraph 
special issue fifteen years computer graphics 
mech prusinkiewicz 
visual models plants interacting environment 
siggraph conference proceedings pages 
acm siggraph 
miller pearce 
globular dynamics connected particle system animating viscous fluids 
computers graphics 
brien hodgins 
dynamic simulation fluids 
computer animation pages 

modeling waves surf 
siggraph conference proceedings pages 
acm siggraph 
reed wyvill 
visual simulation lightning 
siggraph conference proceedings pages 
acm siggraph 
reeves 
particle systems technique modeling class fuzzy objects 
acm transactions graphics april 
millar 
technique film editing 
focal press 
sims 
particle animation rendering data parallel computation 
siggraph conference proceedings pages 
acm siggraph 
snyder 
interactive tool placing curved surfaces interpenetration 
siggraph conference proceedings pages 
acm siggraph 
stam fiume 
depicting fire gaseous phenomena diffusion processes 
siggraph conference proceedings pages 
acm siggraph 
terzopoulos platt fleischer 
heating melting deformable models 
proceedings graphics interface pages 
thomas johnston 
disney animation illusion life 
press new york 

animation aerodynamics 
siggraph conference proceedings pages 
acm siggraph 

