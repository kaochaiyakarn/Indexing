utilising ontology repository connect web miners application agents stefan university dortmund computer science viii str 
dortmund germany stefan udo edu www ai cs uni dortmund de 
ontologies important providing shared understanding domain web mining agents agents accessing gathered information 
information access decoupled mining process example building semantic web server additional storage compliant application ontology needed 
information layer built serve purpose system supporting conference participants 
able provide permanent access gathered aggregated information suitable humans software agents providing fipa acl html interfaces 
goal project design agent conference support system 
conference participants equipped wearable electronic device able recognise participants wearing similar device 
purpose device introduce participants filter requests provide background information depending current context 
order perform task agent controlling device needed background information short period time certain context valid person passed late introduce person 
background information provided web mining process 
starting mining demand slow application web mining performed 
approach similar web spiders search engines launched just somebody enters keyword web searching really practical 
mining task gathering agents enrich conference information gathering information different sources www 
case agents just collect information available registered conference participants new persons discovered gathering process investigated 
information enrich knowledge person relations persons author project partner 
conference scenario different types gathering agents collector able query project database european union ka knowledge acquisition ilp inductive logic programming agents able query different bibliography databases corresponding community 
agent takes account special structure source stem generic agent 
gathering agents able find european projects conference participants involved publications 
actual start conference learning step applied information gathered set training persons 
rule discovery tool machine learning system learn indicators may meet relation participants 
learning step performed line rules learned applied information gathered runtime system order create default instructions personal representation agents participants 
complex mining tasks require ontologies operating highly structured information space longer sufficient just store words huge database 
application ontology comes play 
gathering application agents need common language 
order able perform gathering kind repository gathered information needed 
conference scenario amount concepts modelled participants speakers talks sessions rooms agents schedules quite large 
concepts lot complex relations concepts 
relational tables purpose inadequate complicated mapping required transform ontology high number tables 
table solution inflexible ontological changes cause lot changes database tables additional wrappers 
description logic systems kl provide additional features automated classification computational expensive required system 
reasoning intended performed specialised agents 
relational tables additional wrappers agent communication language acl required 
description logics require globally unique slot names leading additional negotiation efforts project partners designing part application ontology 
ontobroker system extracting ontologies web able automatically unfold stored knowledge provides persistence ontology :10.1.1.34.7488
centralised structure starting point learning mechanisms system interface agent human oriented 
information layer system architecture reasons decided build new kind information system provides acl access place agent built ontology hard wired system 
main purpose system act blackboard decoupled communication conference organisers entering initial participant information gathering agents annotating information web content application agents utilising gathered information tasks helping conference participants 
fig 

information layer architecture overview kernel system information layer provides memory representation information structured corresponding ontology 
features delegated additional modules agents performing specialised tasks handling communication agents applying learned rules transform gathered data default agent instructions synchronisation underlying persistent data storage building generic html presentation ontology actual information layer content html presentation initial part system system built waste resources set separate conference web site built traditional techniques 
wrapper agent transformed requests acl messages forwarded corresponding agents 
shows overview system architecture 
ontology data model fig 

sample uml ontology diagram information layer uses object oriented model data representation 
objects consist atomic attributes relations objects 
consistency relations directions ensured automatically avoiding inconsistencies inside system 
concepts relations defined application dependent external ontology definition file 
files information layer stored xml documents 
ontology information layer defined unified modelling language uml model encoded simple xml format 
compared languages suitable ontology modelling uml currently lacks clearly defined semantics 
significant efforts solve problems 
shows uml diagram shared parts ontology 
gathered information publications projects transformed templates personal representative agents applying learned rules 
raw data gathered stored information system shared agents 
communication content languages communication content languages software agents system components xml 
version fipa acl communication language actual content language format derived ontology automatically 
shows content language encoding carlos gomez working ibm corresponding ontology example previous section 
linked structure nested structure organization id name ibm name organization person id name name firstname firstname idref person person id name gomez name firstname carlos firstname idref person fig 

content language examples organization id name ibm name members person id name name firstname firstname person person id name gomez name firstname carlos firstname person members organization relations instances described attribute embedding related instances relation element 
encoding sending instances software agents entities controlled corresponding entity fit particular needs best 
readers familiar resource description format rdf noticed strong similarity formats 
possible migrate rdf improvement concerning human readability turned crucial system integration maintenance 
rdf uses property centric data model causing compatibility issues traditional object oriented systems 
high number rdf syntax variants leads integration problems xml building blocks xml schema xslt 
reasons replace current xml representation serialisation format simple object access protocol soap improving compactness readability format compatibility soap third party systems 
migration soap exclude building additional rdf interface required 
query interface information layer supports subset oql query language agents 
additional languages may plugged adding corresponding agents 
subscribing information layer possible keep agent date polling 
html generation information layer contains module provides built web server functionality 
xml fully supported web browsers server able generate html dynamically object attributes simply displayed relations converted sets hyperlinks related objects 
html interface edit content system forms generated dynamically ontology 
fig 

access information layer web browser 
project html interface interaction user debugging inspection purposes 
addition generic html generation templates order generate html pages conforming look feel 
project template mechanism generate input structure required text generation system tg generate natural language output wearable device 
template mechanism generate questionnaires evaluating mining learning results 
outlook main purpose implemented system provide ontology persistent blackboard communication mechanisms connecting mining application agents 
ontologies agent technologies enabled simple extension system original purpose 
system publish structured massively linked data traditional human readable web template html generation 
system proved useful modelling aspects conference applications sets small massively linked objects 
currently information layer internal projects training server planned information layer project storing editing data mining meta information 
important developments information layer compliant soap serialisation xmi order standardised xml formats message content language ontology definition 
planned include structure translation mechanisms connecting systems different related application ontologies 
research reported supported esprit ltr project 

plaza noriega sierra competing agents agent mediated institutions 
personal technologies journal 
kietz wrobel controlling complexity learning logic syntactic task oriented models 
muggleton ed inductive logic programming 
number series 
academic press london 

sommer emde kietz wrobel user guide 
gmd german national research center information technology ai research division ki st augustin germany 
morik wrobel kietz emde knowledge acquisition machine learning theory methods applications 
academic press london 
nebel reasoning revision hybrid representation systems 
number lecture notes artificial intelligence 
springer verlag 
brachman schmolze overview kl knowledge representation system 
cognitive science 
decker erdmann fensel studer ontobroker ontology access distributed semi structured information 
meersman eds semantic issues multimedia systems kluwer academic publisher boston 
kluwer academic publisher boston 
hayes roth blackboard architecture control 
artificial intelligence 
mcfarlane persistent agents manufacturing systems 
workshop third international conference autonomous agents 
www org training 
object management group omg unified modeling language specification version 
www omg org technology documents formal unified modeling language htm 
uml ontology modelling language 
proceedings workshop intelligent information integration th international joint conference artificial intelligence ijcai 

precise uml group precise uml group home page 
www org 
clark evans kent brodsky cook feasibility study uml family languages precise oo meta modeling approach 
report precise uml group www cs york ac uk mml pdf 

foundation intelligent physical agents fipa web site www fipa org specs fipa xc pdf 

world wide web consortium xsl transformations xslt version 
www org tr xslt 
semantic web languages rdf vs soap serialization 
proceedings second international workshop semantic web www 
sunsite informatik rwth aachen de publications ceur ws vol pdf 

box layman mendelsohn nielsen thatte simple object access protocol soap 
note world wide web consortium www org tr note soap 

cattell ed object database standard odmg 
morgan kaufmann 
information agent interoperability 
klusch kerschberg eds cooperative information agents iv information agents cyberspace 
volume lncs boston usa springer 
shallow formalism defining personalized text 
workshop von und online nd annual german conference artificial intelligence ki bremen 
information environments software agents 
burgard cremers eds ki advances artificial intelligence 
volume lnai bonn germany springer verlag 
knowledge agency 
sierra gini rosenschein eds proceedings forth international conference autonomous agents barcelona spain acm sigart acm press new york 
