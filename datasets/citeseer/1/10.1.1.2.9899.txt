feature declarative opponent modelling timo institute cognitive science germany de www home page www cogsci de 
growing area multi agent systems mas diversity types agents systems grows 
agent designers longer hard code possible interaction situations software types agents encountered 
agents adapt behavior online depending encountered agents 
proposes agent behavior classified distinct stable tactical moves called features di erent levels granularity 
classification select appropriate counter strategies 
framework aimed applicable wide range domains feature representation case base counter strategies done domain specific language 
robocup domain standard coach language 
approach successfully evaluated number experiments 
important factor ecting behavior agents mas knowledge 
open domains robocup agents encounter variety opponents known 
traditional methods inferring plans actions applicable 
plan recognition focusses deliberative agent architectures application dynamic domains partly reactive agents encountered successful 
tambe attacked problem rapidly changing plans relies simplifying assumptions modelling modelled agent share operator hierarchy exact internal state modelled agent known 
promising approach builds compare tactics new opponents previously encountered ones select strategy successful back 
successfully applied situations 
extends case reasoning approach applying game situations importantly introducing flexible compact way representation 
remainder organized follows 
section defines representation formalism feature opponent models 
section describes framework applied robocup shows experimental results 
section concludes 
feature models section defines features feature models domain independent way 
architecture agents employing approach proposed 
features general idea humans typical properties opponent behavior retrieve similar known opponent strategy 
assumption limited number opponent models describe wide range opponents 
riley stores observation opponent models feature models contain small number distinct stable features 
example feature robocup domain opponent long passes left wing forwards 
modsaf domain military air combat simulator aircraft comes radar range turns collision course 
propose rules map actions situations proper means express features 
obvious features depend domain specific concepts passing radar range 
domain specific language necessary formalize situation action descriptions 
robocup accomplished standard coach language clang 
definition 
set situation descriptions 
set possible actions 
powerset feature mapping situation description set actions level situation descriptions may range raw sensor data preprocessed conceptualizations domain specific concepts 
situation descriptions may incomplete focussing part world 
actions assumed carry information agents executes 
example robocup pass player player di erent pass player 
suggested examples features probabilistic nature 
teams may tend execute certain moves certain degree probability 
features may contradict reflecting team ability decide alternative options repertoire 
treated feature declarative opponent model fbdom definition 
feature declarative opponent model set features probabilities features occur strategy specified model 
constraint satisfied 
aspects features need satisfied human deems typical strategy 
distinctness originate image recognition 
distinctness means feature appears seldom probability certain class high 
stable feature hand appears high probability class 
identical notions close approximations building opponent models 
distinctness feature assumed opponent model manually set threshold 
checked manually set threshold 
architecture fbdom section outlines architecture agent applying fbdom 
shown basis opponent models containing tactical descriptions different levels granularity specificity 
specify complete strategy certain team specify marking assignment left wing defender 
order detect features opponent models fig 

architecture fbdom system 
observations come raw sensor data processed action situation detectors 
try match observations features models 
information observations match passed model selector 
handles example cases match partially see discussion di erent matching methods implements possible selecting methods bayesian classifier tversky contrast model similarity 
opponent model best value chosen knowledge base decide applicable 
just opponent models counter strategies vary size 
contain full team strategies just partial specifications forward shoot 
architecture allows usage online ine method 
depends domain method needs data provided encounter agents histories logfiles previous encounters analyzed order select counter strategy 
application robocup section provides proof concept fbdom implementing robocup simulation league domain 
advantages shortcomings approach highlighted series experiments described 
representing features robocup performance fbdom expected highly dependent representation language 
expressive cover variety situations actions provide di erent levels granularity ranging general descriptions pass regions team specific passing behaviors particular player 
experiments standard coach language clang chosen fulfills demands 
initially clang designed online coach inform advice field players 
suited represent strategies messages basically production rules mapping situations actions 
situations crisp possibly incomplete descriptions world state player ball positions play modes score time combined logical operators 
actions highlevel actions server primitives include concepts passing regions passing positioning marking 
example example feature expressed clang follows rule direc opp bpos back left wing opp pass front left wing line due coach protocol irrelevant 
second line situation description denotes opponent ball ball specific region defined 
action specified line says pass region 
situation matching clang situation concepts externally observable rely hidden internal states situation descriptions features matched easily actual 
fact teams implement situation matching order determine coach advice applicable situation 
situation matching code experiments slightly adapted dirty dozen 
clang conditions logical operators freely definable regions situation matching decidable 
seen checking points concrete observed situations regions general conditions state space 
action detection situation matching straight forward detection actions highly ambiguous 
external observer hard impossible decide kicked ball passed player ball trajectory shot certain point line 
observed actions singular points state space regions 
match actions chose approach 
observed actions matched successfully feature action interpretation observed mutually exclusive feature action 
illustrate consider ball kicked travels certain line 
intention shooter clear action match feature action describes shot pass point player line 
overlap situations considered match 
detailed discussion clang actions see 
building models having accurate models di erent opponent classes crucial 
models fbdom complicated build riley approach 
riley models built just counting positional observations modelled teams models need distinct stable features 
building model basically finding features reliably describe behavior opponents belong class 
models defined domain expert 
definition features typical moves 
experiments opponent models behavior teams created manually 
surprisingly su cient watch games order build model team typical characteristic behaviors team high saliency 
number features models ranged fifteen 
associated probabilities acquired automatically determining frequencies modelled team teams 
frequencies ensure distinctness 
frequency feature model team significantly greater frequency teams removed distinct removed frequency certain threshold order ensure 
fact features removed due due owing expertise domain expert 
aims acquiring features models clustering rule learning 
determining best matching opponent model feature models explain observation just subset 
taken account determining best matching model 
methods possible need evaluated 
matching types mas pairs actions mutually exclusive mutex 
depends domain robocup agent turn kick time 
simple agent domains pairs action may mutex mas action pairs involving agents mutex 
definition 
actions mutually exclusive short mutex executed simultaneously 
mutex actions write definition 
action mutex set actions aa write definition 
situation subsumed situation true true 
write definition 
set situation descriptions 
set actions 
powerset observation description complete observed situation set observed actions situation 
observations may contain typical moves say defender stays certain region forward passes typical line observations features counted 
feature evaluated primitive results wrt 
observation 
list match types probability parameter features model abandoned having influence matching 
actions mutex list complete match situation feature model match observation 
partial match situation matches shared action feature action set observation action set 
full match situation matches actions feature observation action set 
partial mismatch situation matches action feature action set mutex observation action set 
full mismatch situation matches actions feature action set mutex observation action set 
partial match partial mismatch apply feature 
selection process partial matches mismatches ignored 
hand observation result type di erent features full match feature full mismatch feature 
taken account comparing opponent models terms number matches 
selection parameters considerations lead parameters combined need evaluated parameter vs determines matches counted situation 
case matching process aborts successful full match 
case features may matched situation 
means match mismatch feature 
second parameter vs ratio triggers model highest number matches best match mismatch ratio selected cf 
tversky ratio model 
third parameter increasing vs normalized specifies number full matches full mismatches divided number features model 
way normalization done overcome variability number features 
combining parameters results di erent selection methods evaluated compared bayesian classifier common methods feature approaches models observation 
classification course classification opponent improve team performance 
knowledge opponent behavior exploited 
model counter strategy created manually 
built depending characteristics model 
illustrate examples listed model specified fixed formation counter formation 
defense players pool opponent forwards forwards located free spaces opponent defenders 
positions forwards variable forwards kept role game defenders assigned marking assignments 
model fixed positions pass chains incorporates marking assignments positions kick opponent positions experiments important test counter strategies appropriateness modelled teams 
tested feeding counter strategies dirty dozen dd team behavior specified extension clang 
counter strategies directly executed 
turned counter strategies achieved significantly higher scores modelled team baseline strategy dd robocup see statistical values 
strategies experiments 
experiments experiments designed test feature models able represent opponent behaviors generalize previously unseen teams ect observation length amount classification data 
fbdom done decentralized classification done centralized coach agent experiments 
experiment considering models built games team experiment verify models able code behavior team built new games opponents 
additionally experiment determine best parameter settings cf 
section 
opponent models om om built teams team played times teams including 
games resulted test instances counting methods 
classification counted correct om selected team fare better random accuracy achieved 
interestingly normalized ratio increasing ratio bayes table 
parameters counting methods identification success 
normalized methods performed better increasing ones see table 
normalized methods best increasing method significantly better random showing models able generalize new games new opponents 
especially parameter setting achieved accuracy promising result experiments 
surprisingly bayesian classifier performed random niveau 
possible explanation inter dependence features violated independence demand bayes 
example feature saying forward shoots left wing goal highly dependent feature specifies pass ball left wing forward 
feature dependencies render bayesian classification unsuccessful 
experiment order test team benefit models plays totally new opponent experiment test classifying new opponent playing appropriate counter strategy yields better goal di erences playing baseline strategy behavior specification dd competed robocup 
new teams baseline strategy dd opponent models om om counter strategies cs cs new team baseline goal di erence running games dd 
order logfiles ectively games classify new teams 
subsequently single classification om new team played counter strategy cs resulted sets games new team exactly number instances baseline games set counter strategy games set 
note course experiments games removed consideration server crashes connection errors see table 
results show team mean counter strat 
baseline mean fc virtual mainz rolling brains fc portugal table 
goal di erence mean number games new teams baseline selected counter strategies 
depicted di erence significant tailed 
cases classification related counter strategy yielded significantly better scores baseline 
experiment significant better goal di erences classified counter strategies experiment necessary condition showing method successful su cient condition 
case counter strategies better general baseline strategy 
especially scores partly negative improvements due floor ect 
case classification obsolete choice counter strategies yield better results baseline strategy 
experiment run games run new teams strategy randomly selected 
dd played team randomly selected cs means games means experiment classified counter strategy assumed optimal strategy classification selection runs 
outcome experiment non uniform see table 
cases significant di erence random selection selection team random classif 
fc virtual mainz rolling brains fc portugal table 
goal di erence mean games strategy selected randomly games classified strategy 
di erences values previous tables due increased number games 
classification 
teams yielded significantly better results experiment case surprising 
cases selection classification performed significantly better random selection 
means cases suitable opponent model corresponding counter strategies selected experiment 
means opponent models counter strategies generalize new teams making fbdom approach successful 
cases approach better random selection discussed 
possible explanation strategies involved teams similar related counter strategies perform similarly 
interestingly cases classified times see details similar anyway human observers 
concluded counter strategies perform similarly contribute lack significant di erence 
reason outcome counter strategies performed similar di erent defensive parts opponent models focussed behaviors 
team defense situation di erence counter strategies 
anyway cases achieve significant improvements selected classification better 
due fact created opponent model pairs assumed cover existing teams 
evidence new teams covered opponent models 
thought strong evidence quality fbdom cases significantly better baselines 
experiment order test amount data needed classification observation lengths tested 
recorded games settings experiment di erence best parameter setting observation length 
observations started kick 
results show classification performs short observation windows see table 
cycles classification length accuracy table 
accuracy selection di erent lengths observation window 
significantly better random selection 
cycles classification correct cases 
accuracy gets better data acquired 
means classification done ine analysing logfiles online 
renders idea applicable select general models game select detailed models data acquired 
method representing opponent models multi agent systems introduced performance experimentally evaluated robocup domain 
claimed classifying opponent su cient focus distinct stable features processing complete behavior situations 
assumption set opponent models covers great amount existing opponent behaviors 
experiments showed identification accuracy high modelled teams claim supported features suited method describe opponent behaviors 
regarding coverage new teams experiments non uniform hint promising direction 
methodological di culties measure impact counter strategies 
perfect experimentation setting created counter strategy perform opponent model bad models 
achieved restricted toy domains manually created opponents realistic conditions real teams 
obviously experiments created opponent models cover new teams 
cases selected counter strategy performed better baseline cases better random selection 
needed verify cause unsuccessful cases similarity opponent models small number models expected generalize new teams 
creating elaborate models contain information defensive situations depth analysis existing behaviors helpful 
features form compact opponent models successfully generalized new teams related counter strategies ective previously unknown opponents 
revealed tactics identified certain typical features state robocup independent opponent experiments suggest 
opponent models easily created team observing arbitrary opponents playing team 
claus useful comments 

nie ste ens dirty dozen team coach description 
birk coradeschi editors robocup robot soccer world cup springer berlin 
calder smith mar modsaf behavior simulation control 
proceedings nd conference computer generated forces behavioral representation 
david carmel shaul markovitch incorporating opponent models adversary search 
proceedings thirteenth national conference artificial intelligence aaai press portland oregon 
gal kaminka pynadath milind tambe monitoring deployed agent teams 
proceedings fifth international conference autonomous agents agents montreal canada 
kautz allen generalized plan recognition 
proceedings national conference artificial intelligence pp 
aaai press menlo park ca 
chen heintz huang noda riley ste ens yi wang xiang yin 
manual 
robocup federation 

patrick riley manuela veloso behavior classification adversarial environments 
lynne parker george bekey jacob eds distributed autonomous robotic systems springer heidelberg germany pp 

patrick riley manuela veloso planning distributed execution probabilistic opponent models 
proceedings ijcai workshop pro planning uncertainty incomplete information 
timo ste ens feature declarative opponent modelling multi 
master thesis university 
milind tambe paul rosenbloom architectures agents track agents multi agent worlds 
wooldridge joerg mueller tambe eds proceedings ijcai workshop intelligent agents ii agent theories architectures languages springer heidelberg germany pp 

tversky features similarity psych 
review july pp 

paul viola complex feature recognition bayesian approach learning recognize objects 
technical report aim ai lab mit 
