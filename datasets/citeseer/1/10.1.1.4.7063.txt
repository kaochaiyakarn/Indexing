chapter generating context sensitive multiple device interfaces design tim kris karin tim kris karin luc ac centrum expertise centre digital media universitaire campus belgium www edm luc ac shows technique allows adaptive user interfaces spanning multiple devices rendered task specification runtime account context 
designer specify task model concurtasktrees notation contextdependent parts deploy user interface immediately specification 
defining set context rules design stage appropriate context dependent parts task specification selected concrete interfaces rendered 
context resolved runtime environment require manual intervention 
way task specification deployed different contexts 
traditionally context sensitive task specification took account variable single deployment device 
extends approach takes account task specifications executed multiple operating devices 
keywords model user interface design task modeling concurtasktrees notation context sensitive multi device 
advances mobile computing devices mobile communication support complex interaction different devices 
allows users migrate single computer desk setup heterogeneous environment uses devices accomplish tasks 
provided hardware software powerful designing interface complex 
different contexts device constraints environment mobile user 
taken account 
nomadic nature applications demands way design interaction multiple devices 
combining previous context sensitive task specifications realize supporting framework design creation context sensitive multiple multi device interaction :10.1.1.13.7202
multiple device interaction mean user interface ui distributed different devices 
implementation tested component framework 
remainder structured follows section discusses related introducing state art contextsensitive task modelling 
illustrate context testbed framework introduced section 
followed overview design process needed create contextsensitive ui section 
stages described creation task model extraction dialog model generated presentation model 
followed case study show things practice 
obtained results applicability discussed 

related proposed possible approaches adapt concurtasktrees notation context sensitive task modeling 
pointed context application influences parts task model executed 
context sensitive dependent context insensitive independent part task model identified processed accordingly 
contextsensitive part related context insensitive part multiple ways parts specified task model monolithic approach context insensitive parts connected context sensitive parts general arcs graph oriented approach context insensitive parts connected context sensitive parts special arcs constitute decision tree separation approach generating context sensitive multiple device interfaces design approach particular interesting allows different parts different contexts integrated model decision tree provides nice separation 
choose insert decision nodes task specification decision trees 
course decision nodes decision nodes descendants 
children decision node possible subtrees chosen preprocessing step 
section explains detail concrete task specification obtained preprocessing decision nodes 
patern santoro method generate multiple interfaces different contexts starting task model 
teresa tool supporting approach discussed 
contrast approach focus design aspect emphasize runtime framework necessary accomplishing 
knowledge teresa tool supports creation task model multiple devices currently take account multiple devices interacting interface migrating device 
describe process platform environmental model represent context information 
process allows create uis running systems different contexts 
stages ui design process task specification ui concrete ui runtime environment translation take place systems designer change task specification manually process context influence tasks performed 
nichols defined specification language communication protocol automatically generate uis remotely controlled appliances 
language describes functionalities target appliance contains information render ui 
case context secured target appliance represented definition 
ali rez qui ones task model uiml generate uis multiple platforms 
task model increase abstraction level uiml specification necessary guide ui different devices 

integrated framework 
supporting task specification uses high level user interface descriptions specified xml define set interactors necessary completing tasks specified task specification 
aims framework support design selected models model user interface design add support transforming design multi multiple device uis runtime 
framework supports roughly steps creating uis detailed description create context sensitive task specification trees notation create ui building blocks separate tasks relate ui building blocks tasks task specification define layout constraints define custom properties ui appearance preferred colors concrete interactors 
generate prototype evaluate dialog model presentation model calculated automatically change task specification customizations satisfied hand supports clear separation creation uis implementation application logic underlies ui 
hand built support connect uis application logic manual intervention 
section describe design process contextsensitive ui generation ui works 

design process proposed approach extends process automatically generating prototype uis annotated task models introduced 
shows extended process context sensitive task model considered generate uis depending context time ui rendered 
context sensitive task model constructed high level ui building blocks attached leaves described previous section 
context captured proper context specific generated automatically 
subsequently enabled task sets calculated 
sets tasks enabled time contain proper information rendered resulting ui 
generating context sensitive multiple device interfaces design step appropriate dialog model extracted automatically task model temporal operators 
dialog related set tasks presents appropriate ui building blocks 
context sensitive information task specification taken care preprocessing step explain detail 

context sensitive user interface design process context sensitive task model pointed section proposed approaches model context sensitive task models 
collecting decision trees propose way context insensitive part points directly context sensitive subtrees decision nodes 
nodes marked example 
resembles graph oriented approach context sensitive subtrees direct children decision node 
context sensitive parts resolved decision node removed replaced root selected subtrees decision node 
decision nodes executed stage ui generation process 
results normal specification suitable rules defined decision nodes 
normal specification enables provided algorithm extract dialog model automatically adapted current context 
order link context detection task model information subtree performed case added decision node 
shows simple scheme document type definition defining rules specified selecting particular subtree context 
conditions defined recursively numerical logical operators provided cope context parameters 
example current context decided basis comparing coordinates provided gps module 
xml specification provides way exchange context information 
tool support required encapsulate xml designer 
note approaches described focus design interface task level :10.1.1.13.7202
shows task model runtime generate context dependent uis 
done providing framework section interpret task specification generate presentation task specification 
framework resolves context dependencies resulting presentation adapted context 
section explains proceed task specification presentation ui dialog model 
dialog model applying processing task model transformed concrete resolve decision nodes order extract dialog model 
context specific task model normal suited current context processed 
transformation done replacing decision node appropriate subtree representing subtask suitable current context 
proved possible generate simple uis directly task specification 
done automatic generation dialog specification task specification 
approach dialog model expressed state transition network stn generating context sensitive multiple device interfaces design xml version element decision cond true false value case element cond value value attlist cond type cdata implied element value cond pcdata attlist value type cdata implied element true pcdata attlist true platform implied element false pcdata attlist false platform cdata implied element case value cond attlist case platform cdata implied decision cond type value type cond cond type lt value type context gps xcoord value value type int value cond value value type gt cond type equals value type context gps ycoord value value type int value cond value 
decision dtd cond true platform context left true false platform context right false decision 
decision xml example state stn equals ets 
ui information tasks ets appear resulting ui 
transitions dialogs represented stn transitions states marked tasks trigger change 
transitions different dialogs identified different temporal operators connecting selected tasks located different 
extensive description algorithm 
open source tool provided implements algorithm calculates dialog model task specification www edm luc ac software 
presentation model step render dialog model available output devices 
presentation different parts concrete ui 
nodes dialog model 
node represents ui building blocks complete current ets section showed ui building blocks attached individual tasks 
tasks ets marked target device different situations possible tasks ets targeted device tasks ets targeted device situation allows ui rendered completely device 
demands ui distributed different devices 
purpose device independence ui description extended multiple devices 
level presentation model ui descriptions dialog rendered concrete dialogs accomplished important techniques customized mappings interaction objects concrete interaction objects cios 
rendering engine device choose concrete widget selected aio 
customized designer 
positioning widgets done constraints defined language independent manner 
renderer information hierarchical widget containment split ui different parts 
details approach 
customized mapping rules device independent layout management important techniques realizing device independent distributed uis 
possible concurrent tasks located ets rendered different devices 
presentation building blocks attached tasks xml documents presentation individual device calculated device separately 
notice concurrent tasks rendered separate devices kind middleware necessary support data exchange tasks heterogeneous environment 
contrast focus distribution content distributed support task execution 

case study manage stock shows manage stock example 
situation occurs warehouse keeps track stock devices 
desktop pc manage purchase sales generating context sensitive multiple device interfaces design articles 
second employee checks updates stock amounts pda note changes immediately 
amount certain article updated desktop pc example new goods purchased employee receives message pda 
stands vicinity printer supporting radio frequency identifier rfid tags detected information product viewed printed 
result example contains 
context sensitive task model manage stock example types context denoted decision tasks platform update request overview location overview pda 
link context handler appropriate decision node decision rules need attached nodes 
shows example overview pda task 
case call function rfid reader 
step automatically generate ui convert context sensitive task model context specific task model 
condition decision xml evaluated decision node decision node replaced subtree matches current context 
overview pda task example evaluation function 
return value equals true properties printing subtree replace decision node show properties printing 
shows task model case pc change stock amounts 
overview pda subtree 
update pc subtree decision cond type equals value type context rfid reader value value type boolean true value cond true platform context show properties printing true false platform context properties printing false decision 
decision rules overview pda task pda notify employee reach rfid supporting printer 
step uses custom algorithm described calculate enabled task sets login ppc ppc shutdown ppc roduct ppc ppc rice ppc shutdown ppc roduct ppc ppc rice ppc shutdown ppc ppc shutdown ppc ppc shutdown ppc shutdown rint shutdown rint shutdown px indicates platform tasks executed 
means platform matter task executed pc pda 
example contains tasks restricted pc pda ets contains tasks marked ppc 
difference generating context sensitive multiple device interfaces design children task 

context specific task model 
dialog model accept state caused shut task omitted avoid cluttering picture 
dialog model automatically extracted 
actual ui rendered runtime environment 
shows dialog model rendered uis 

dialog model concrete dialogs 
shows context information integrated interface design generate multi multiple device user interfaces runtime 
concurtasktrees formalism combined decision nodes rules allow user interface adapt context consistent design 
important case context indicate change interaction device executing task 
model allows change providing appropriate dialog model including transitions dialogs device transitions dialogs different devices 
presentation model supports dialogs distributed devices 
precondition context frozen start main task 
involves finding way switch context concrete task model context change order recalculate dialog presentation model 
approach comes lot complications 
new dialog model may compatible old disrupts continuity user interface 
current state occur new dialog model 
dangerous adjust user interface time context changes 
cases user confused sudden changed user interface 
believe process practical step involving context design 

acknowledgments research partly funded flemish government european fund regional development 
software engineering embedded systems component oriented approach project iwt context driven adaptation mobile services project iwt directly funded iwt flemish subsidy organization 
authors bert contribution 
marc abrams alan stephen williams jonathan 
uiml appliance independent xml user interface language 
www computer networks 
generating context sensitive multiple device interfaces design mir ali manuel rez qui ones 
task models generate multi platform user interfaces ensuring usability 
proceedings chi short minnesota usa 
coutaz david 
embedding plasticity development process interactive systems 
th ercim workshop user interfaces 
huc handheld ubiquitous computing workshop resource sensitive mobile hci conference handheld ubiquitous computing hu bristol 
coutaz david 
supporting context changes plastic user interfaces process mechanism 
proceedings ihm hci september lille france 
tim karin 
integrating task models automatic user interface design 
technical report tr luc edm edm luc 
karin kris chris jan van den bert 
dynamically generating interfaces mobile computing devices embedded systems 
human computer interaction mobile devices services th international symposium mobile hci pages udine italy september 
springer 
jan van den kris karin 
run time system context aware multi device user interfaces 
hci international volume crete greece pages 
lawrence erlbaum associates june 
richard han naghshineh 
web splitter unified xml framework multi device collaborative web browsing 
proceedings acm conference computer supported cooperative pages 
acm press 
kris tim karin jean vanderdonckt 
derivation dialog model task model activity chain extraction 
interactive systems design specification verification th international workshop dsv madeira island portugal june 
springer lncs 
kris bert karin 
multi device layout management mobile computing devices 
technical report tr luc edm edm luc 
mori fabio patern carmen santoro 
tool support designing nomadic applications 
proceedings international conference intelligent user interfaces january miami fl usa pages 
acm 
jeffrey nichols brad myers michael higgins joseph hughes thomas harris roni rosenfeld 
generating remote control interfaces complex appliances 
proceedings th annual acm symposium user interface software technology pages 
acm press 
fabio patern 
model design evaluation interactive applications 
springer verlag isbn 
fabio patern carmen santoro 
model interfaces 
christophe jean vanderdonckt editors volume pages 
kluwer academic 
limbourg jean vanderdonckt 
task modelling context sensitive user interfaces 
chris johnson editor interactive systems design specification verification volume lecture notes computer science pages 
springer 
limbourg jean vanderdonckt 
task modelling multiple contexts 
peter limbourg urban jean vanderdonckt editors interactive systems design specification verification volume lecture notes computer science pages 
springer 
jean vanderdonckt fran ois bodart 
encapsulating knowledge intelligent automatic interaction objects selection 
acm conference human aspects computing systems interchi pages 
addison wesley 
chris kris karin 
location user interaction heterogeneous environments hci international volume crete greece pages 
lawrence erlbaum associates june 
