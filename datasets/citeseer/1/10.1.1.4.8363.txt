peer peer information retrieval self organizing semantic overlay networks tang dept computer science univ rochester rochester ny cs rochester edu xu hp laboratories page mill rd palo alto ca hpl hp com dwarkadas dept computer science univ rochester rochester ny cs rochester edu content full text search challenging problem peer topeer systems 
traditional approaches centralized flooding ensure accuracy results returned 
psearch decentralized non flooding information retrieval system 
psearch distributes document indices network document semantics generated latent semantic indexing lsi 
search cost terms different nodes searched data transmitted query reduced indices semantically related documents located network 
describe techniques help distribute indices evenly nodes reduce number nodes accessed appropriate index distribution index samples processed queries guide search 
experiments show psearch achieve performance comparable centralized information retrieval systems searching small number nodes 
system nodes documents news magazines psearch searches nodes transmits kb data search top documents returned psearch lsi intersection 
categories subject descriptors computer communication networks distributed systems general terms algorithms management performance design experimentation keywords peer peer system information retrieval overlay network 
report information produced worldwide digital form 
unique data added year started internship hp labs completed university rochester 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigcomm august karlsruhe germany 
copyright acm 
exceeds bytes estimated grow exponentially 
trend calls equally scalable infrastructures capable indexing searching rich content html plain text music image files 
peer peer systems hand gaining popularity quickly due scalability fault tolerance self organizing nature raising hope building large scale information retrieval ir systems low cost 
search engines google appear scalable web content little known public systems 
describe techniques build selforganizing search engine technology naturally inherits nice properties scalability faulttolerance low maintenance cost fundamentals system applicable managed stable environments google search engines data centers corporations dynamic environment 
number search techniques proposed years exceptions simple keyword matching ignoring advanced relevance ranking algorithms devised ir community decades refinement evaluation :10.1.1.123.8939
effective ranking queries consisting popular words may return superfluous number documents user capability handle 
focus studying feasibility extending classical ir algorithms environment 
ir techniques google pagerank leverage hyperlinks identify important web pages 
cross information exist digital content 
start popular studied statistical ir algorithms vector space model vsm latent semantic indexing lsi rely cross information :10.1.1.108.8490
vsm lsi represent documents queries vectors cartesian space measure similarity query document cosine angle vector representations 
variants vsm lsi adopted major search engines excite :10.1.1.122.203
practice various ir techniques combined build pragmatic search engines 
study techniques pagerank complement approach subject 
fundamental problem search existing systems difficult respect semantics documents randomly distributed 
query system search large number nodes user runs high risk missing relevant documents 
address problem introduce notion semantic overlay logical network contents organized semantics distance rout search semantic space 
ing hops documents network proportional dissimilarity semantics 
document semantics produced lsi 
content addressable networks cans provide distributed hash table dht abstraction cartesian space :10.1.1.140.3129
allow efficient storage retrieval key object pairs 
object key point cartesian space 
create semantic overlay semantic vector generated lsi document key store document index 
illustrates semantic overlay benefit searches 
document semantics generated lsi document positioned point semantic cartesian space 
documents close semantic space similar contents documents query positioned semantic space 
find documents relevant query need compare query documents small region centered query relevance documents outside region relatively low 
doing search space query effectively limited accuracy retained 
basic idea semantic overlay straightforward involves mapping overlay physical nodes 
complicated number factors 
set dimensionality equal lsi semantic space typically ranges 
actual dimensionality lower nodes partition dimensions high dimensional 
unpartitioned dimensions search space reduced 
semantic vectors uniformly distributed semantic space 
direct mapping semantic space result unbalanced distribution indices nodes 
due problem known curse dimensionality shown limiting search region highdimensional spaces difficult 
address problems leveraging properties semantic space trading accuracy efficiency storage overhead necessary 
advantage higher importance low dimensional elements semantic vectors scheme partitions semantic space dimensions rotating semantic vectors 
content aware node bootstrapping helps distribute indices evenly nodes 
samples indices processed queries guide search content directed search algorithm substantially reduces search region high dimensional semantic space 
built prototype ir system called psearch 
psearch works representing documents vectors organizing contents network vector representations 
experiments focus full text search method applied searching music image files 
evaluation shows psearch achieve performance comparable centralized ir systems searching small number nodes 
system nodes documents news magazines psearch searches nodes transmits kb data search top documents returned psearch lsi intersection 
prototype implementation include ir techniques proposed years evaluation section suggests psearch potential improve development advanced ir techniques 
remainder organized follows 
section provides background information ir 
section gives overview psearch highlights major challenges 
sections describe solutions challenges 
section describes prototype psearch experimental results 
related discussed section 
section concludes 

background psearch extensions vsm lsi generate semantic space organize nodes overlay :10.1.1.140.3129:10.1.1.108.8490
section overview concepts order set stage description algorithms 
vector space model vsm vsm represents documents queries term vectors 
element vector corresponds importance term document query 
weight element computed statistical term frequency inverse document frequency tf idf scheme 
intuition factors decide importance term document frequency term document frequency term documents 
term appears document high frequency chance term differentiate document 
term appears documents importance penalized 
retrieval operation documents ranked similarity document vector query vector highest similarity returned 
common measure similarity cosine angle vectors 
vsm implementations normalize term vectors unit length order compensate difference document length 
formally term vector 

similarity defined equation cos denotes cosine angle vector note normalized 
similarity simply inner product vectors 
cos latent semantic indexing lsi literal matching schemes vsm suffer synonyms noise documents 
lsi overcomes problems statistically derived conceptual indices terms retrieval 
uses singular value decomposition svd transform high dimensional term vector computed vsm lower dimensional semantic vector projecting semantic subspace 
element semantic vector corresponds importance concept document query 
vsm semantic vectors normalized similarity measured equation 
denote number documents corpus denote number terms vocabulary 
vsm represents corpus matrix entry ij indicates importance dimensional 
term document suppose rank svd decomposes product matrices 
ur matrix diag 
diagonal matrix 
vr matrix 
singular values 
lsi approximates matrix rank matrix lower rank omitting largest singular values 

diag 


rows semantic vectors documents corpus 
semantic vectors queries terms documents originally generated folding semantic subspace 
choosing appropriate important structure corpus retained noise variability word usage small eliminated 
studies lsi suggested setting value reported improvements vsm precision :10.1.1.108.8490
addition lsi capable bringing documents semantically related share terms learning occurring word usage 
instance search car may return relevant documents automobile text 
raghavan identified costly svd component major scalability obstacle lsi 
years efficient lsi variants proposed concept indexing 
parallel implementations svd problem tractable 
evidence advances excite reported variant lsi index web 
summary lsi represents documents queries vectors points semantic cartesian space 
similarity query document measured cosine angle vector representations 
query point cartesian space problem finding relevant documents reduced locating document points nearest query point 
central issue psearch map semantic space nodes network conduct efficient nearestneighbor search decentralized manner 
content addressable network overlay networks chord pastry tapestry offer administration free fault tolerant distributed hash table dht maps keys values 
partitions dimensional cartesian space zones assigns zone node 
object key point cartesian space object stored node zone contains point 
locating object reduced routing node hosts object 
routing translates traversing zone cartesian space 
node join corresponds randomly picking point cartesian space routing zone contains point splitting zone current owner 
overview psearch system 
example shown 
nodes overlay 
node owns zone cartesian space 
initially owns entire zone upper right corner 
joins zone owned splits part zone wants retrieve object key sends request forwards request 
psearch large number machines organized semantic overlay offer information retrieval service 
nodes overlay collectively form psearch engine 
inside engine nodes completely homogeneous functions 
client intending psearch connects engine node publish document indices submit queries 
shows example system works 
node publishes document node inside engine 
builds index document routes index overlay 
index stored node semantics 
query submitted node query routed node semantics query 
takes responsibility finding relevant indices returning example may return index published stored node system needs included psearch engine 
expect construct engine subset nodes stable network connectivity 
boundary engine adjustable 
load inside engine high nodes recruited 
new engine node finds position overlay takes indices stored neighbors starts process queries 
entire process completely autonomous 
indices stored engine node replicated neighbors 
node fail neighbors take job seamlessly 
psearch uses organize engine nodes overlay uses extension lsi answer queries 
call algorithm plsi 
basic plsi algorithm outline ideas highlight challenges 
basic algorithm plsi sets dimensionality equal lsi semantic space 
index document stored semantic vector key 
things index includes semantic vector document url document 
illustrates steps plsi 

receiving new document engine node generates semantic vector va lsi uses va key store index 

receiving query engine node generates semantic vector vq routes query overlay vq key 

reaching destination query flooded nodes radius determined similarity threshold number wanted documents specified user 
plsi dimensional 
uneven distribution document indices 

nodes receive query local search lsi reports best matching documents back user 
indices documents similar query certain threshold stored radius exhaustive search area theory plsi achieve precision lsi 
ideally radius small small number nodes involved search 
search data transmitted plsi query top documents small independent corpus size 
comparison systems maintain inverted list term contents id documents containing term frequency term document 
inverted lists different terms distributed different nodes 
answering queries containing multiple terms requires intersection corresponding lists communication 
size lists correspondingly communication grows proportionally corpus size 
plsi relies global statistics function including inverse document frequency basis semantic space 
distributing information engine node allows nodes compute semantic vectors new documents queries independently 
demonstrated ir systems need precise statistics approximation sufficient 
psearch combining tree sample documents merge statistics disseminate combined statistics 
statistics versioned 
node maintains versions order ensure consistent set indices extracted single version process disseminating new statistics 
details generation evolution statistics described earlier technical report 
major challenges basic idea plsi straightforward challenges overcome effectively 
dimensionality mismatch lsi 
plsi sets dimensionality equal lsi semantic space typically ranges 
actual dimensionality lower nodes partition dimensions high dimensional 
unpartitioned dimensions search space reduced 
uneven distribution indices 
reasons semantic vectors keys store indices may lead imbalance distribution indices nodes 
semantic vectors normalized reside surface unit sphere semantic space 
shows example dimensional 
plsi places indices average number neighbors routing hops dimensional 
unit sphere 
similarity cos documents proportional distance circle cos cos unit sphere 
gray area region searching documents close semantics 
nodes zones size store indices 
second key space uniformly distributed nodes system suffer hot spots indices uniformly distributed large search region 
due problem known curse dimensionality shown limiting search region high dimensional spaces difficult 
address challenges sections respectively 

resolving dimensionality mismatch lsi algorithm dimensionality set lsi semantic space 
ratnasamy suggest dimensional nodes node average needs maintain neighbors average length routing paths :10.1.1.140.3129
high indicate problem node large number neighbors 
result holds log 
zones produced partitioning dimensions partitioning log dimensions result zones nodes available 
log zones partitioned evenly log dimensions partitioned node log neighbors 
shows average number neighbors average routing hops dimensional seen exhibit relationship described 
refer number partitioned dimensions effective dimensionality 
limited number nodes avoids problem excessive number neighbors result low dimensions semantic space partitioned making searches efficient 
search space unpartitioned dimensions reduced documents similar semantic content dimensions spread nodes 
situation illustrated 
suppose semantic space dimensions query document semantic vectors vq va respectively 
similarity va vq computed equation 
majority similarity contributed real corpora similarity usually high consider relevant store vectors dimensional 
nodes semantic space partitioned va vq similar search find nodes probed 
presenting solution problem high level observations 
rolling index example 
position vector decided elements 
partitions dimensions original semantic space 
partitions dimensions rotating semantic vectors dimensions 
relevant document query easily node rotated space 
dimensionality semantic space high practice number dimensions relevant particular document smaller 
example concepts chemistry appear computer science 
queries submitted search engines usually short captured concepts 
result small number elements semantic vectors contribute significantly similarity 
svd sorts elements semantic vectors decreasing importance 
plots singular values trec corpus see section details corresponds importance elements 
singular values largely follow zipf distribution 
importance low dimensional elements significant fraction similarity contributed 
advantage facts propose bridge dimensionality gap reduce search space 
basic idea single partition dimensions semantic space rotating semantic vectors 
rolling index semantic vector 
rotate repeatedly dimensions time generate series new vectors see equation note 
call vectors rotated semantic vectors 
set equation number nodes system 
equation estimates effective dimensionality approximating average neighbors curve 
rotated vectors different documents queries generated amount rotation define rotated space im 
im dimensional support subvector 
im 

im 
ln document semantic vector va store index places keys 
query semantic vector vq execute plsi algorithm times 
time uses different route query guide searches rotated space rotated space independently returns matching documents vectors space 
similarity semantic vectors measured inner product see equation rotation change similarity measure 
rotated space documents close singular values trec corpus 
effect low dimensional elements identify relevant documents documents queries trec 
overlay close semantics 
note full semantic vectors keys 
similarity computed full semantic vectors support subvectors 
example rolling index shown 
discussion rolling index uses partition dimensions semantic space increased storage cost times base storage space 
low dimensions multiple rotated spaces partitioned single correspond different dimensions original semantic space 
importance low dimensional elements significant fraction documents correctly perfectly clustered support subvectors 
order demonstrate low dimensional elements sufficient identify relevant documents conducted experiment trec corpus 
retrieved relevant documents trec query similarity dimensional semantic vectors 
results form set rotated space retrieved documents query solely similarity dimensional support subvector space full semantic vector rolling index algorithm 
constant multiplication factor 
results rotated spaces form set reports average accuracy set respect set accuracy 
size corpus size covers relevant documents set section introduce algorithm selectively searches documents big set achieve high accuracy low cost 
hand low dimensional elements statistically higher importance entire corpus individual document discussing unpopular concepts highdimensional elements may carry heavy weight 
queries concepts rolling index effective 
solution problem selective rotation 
document addition storing index rotated spaces store index rotated spaces corresponding support subvectors cover heavily weighted elements covered spaces 
likewise query searches extra rotated spaces corresponding support subvectors cover heavily weighted elements query 
dimensionality semantic space increases size corpus increases may rolling index effective 
propose hierarchical document clustering partition document space clusters map cluster top 
leave evaluation improvements 
effect content aware node bootstrapping 

balancing index distribution cope uneven distribution indices propose content aware node bootstrapping force distribution nodes follow distribution indices 
node join node randomly picks document going publish computes semantic vector document 
semantic vector randomly rotated space rotated semantic vector random point suggested point join request routed :10.1.1.140.3129
node coordinates contains rotated semantic vector splits middle lowest unpartitioned dimension hands half zone new node 
bootstrapping process effects 
balanced index distribution 
larger number nodes areas semantic space dense document population 
index locality 
assuming documents published node similar semantics space indices node documents published neighbors 
query locality 
assuming documents published node indications user interests 
queries submitted user usually result neighboring nodes query submitted 
evaluates load balancing technique distributing trec corpus node dimensional 
nodes sorted decreasing order number indices store 
draw node percentage axis 
axis gives percentage indices owned corresponding nodes 
rand key series original proposal nodes indices randomly populated 
serves baseline comparison 
sv key series random points node bootstrapping indices stored semantic vectors keys 
psearch sp uses content aware bootstrapping indices stored semantic vectors 
number rotated semantic spaces 
note load rand key completely balanced due randomness 
larger corpus load expected balanced 
seen load balancing nodes store indices curve top 
loadbalancing technique effective single rotated space 
increasing number rotated spaces balance index distribution indices different rotated spaces compliment 
bootstrapping process multiple rotated spaces adversely affect neighbor distribution routing performance overlay 
evaluated uses bootstrapping rotated spaces 
example content directed search 

reducing search space rolling index clusters indices overlay semantics making possible find relevant documents query searching fraction nodes overlay 
existing centralized index structures limit search space multidimensional data usually low dimensional data search space grows quickly dimensionality data increases 
known curse dimensionality 
weber listed interesting observations highdimensional spaces 
summarize relevant observations 
high dimensional data spaces sparsely populated 
distance query nearest neighbor grows steadily dimensionality space 
content directed search large nearest neighbor distance naive nearestneighbor search large number nodes searched 
solve problem contents indices stored nodes processed queries guide searches right nodes 
sparse high dimensional semantic space documents usually form tight clusters see top curve 
relevant document document surrounded relevant documents 
illustrate basic ideas example 
ids nodes dimensional 
semantic vectors documents semantic vector query 
user wants retrieve documents relevant euclidean distance search results 
search starts node coordinates contains document node 
maintain queue contains candidate nodes search 
searching node routing neighbors added queue 
background node samples indices stored neighbors 
samples decide search order nodes example samples node similar query 
search node find document node neighbors added 
likewise choose node search samples similar query 
document node neighbors added leads search node find document nodes searched turn better matching documents 
point chance finding documents better low 
search terminated 
example assumes nodes searched sequentially speed search process improved accessing nodes parallel 
tradeoff terms number nodes searched unnecessarily 
search algorithm takes advantage processing power large number nodes pre process sample semantic space background enable efficient search 
sampled full semantic vectors direct searches removes accuracies due limited clustering capability support subvectors rolling index 
description search algorithm proceed give formal description search algorithm 
denote attribute node additional parameter 
instance set semantic vectors indices stored node set semantic vectors queries processed node stores indices processes queries multiple rotated spaces 
refer parts relevant space node single vector computed equations summarize indices stored queries processed equation normalizes unit length 
centroid center mass indices queries 
background requests neighbors return kc samples semantic vectors indices stored highest similarity summary vector 
requests kr random samples current implementation kc kr constant 
returned semantic vectors stored sample set estimation indices stored search query rotated semantic vectors uses equation estimate highest similarity query vector semantic vectors indices stored sample set 
max cos metric equation direct search rotated space 
chooses nodes sampled indices high similarity query high value search stops better matching document node visits 
denote node coordinates contains rotated query vector node space acts coordination center search 
maintains queue candidate nodes search queue indices identified relevant documents 
rotated space search starts node node search returns estimated similarity neighbors indices best matching documents locally node adds returned indices neighbor nodes index queue node queue respectively 
decision node search estimated similarity returned searched nodes 
recall search starts node rotated space 
node visited search exists path leads search nodes path visited search 
denote hops path number nodes path 
quit threshold dynamically computed max min quit bound constant set user default system value id rotated space search smallest hops reach nodes node queue node note searched node removed 
components decide quit threshold component max decreases space id increases 
intuition lower spaces want search nodes importance low dimensional elements 
guarantee searches performed high spaces component 
second component monotonically decreases search 
intuition quit threshold get tighter near neighbors searched 
multiple nodes searched concurrently rules 
nodes 
searched parallel 
direct routing neighbors searched searched parallel importance low dimensional elements 
addition rules round select top nodes node queue search parallel 
decided equation quit threshold equation dynamic concurrency factor 
designing algorithm automatically fine tune subject 
min addition cost extra storage space current implementation allows node replicate neighbors indices process queries behalf order reduce number visited nodes data transmitted search 
neighboring content sampling process extended implement selective index replication 
node equations compute vector represent replicate neighbors indices similarity vector threshold 
selective replication potential reduce amount replicated indices achieving performance similar simple replication 
leave evaluation 

experimental results built psearch prototype validate algorithms 
implemented overlay simulator 
cornell smart system implements vsm 
extended smart modules tools implement lsi 
las package compute svd large sparse matrices 
linked smart simulator implemented plsi algorithms build psearch prototype 
validated correctness lsi implementation med adi cran corpora 
precision consistent reported literature :10.1.1.108.8490
experimental setup experimented text retrieval conference trec trec corpus largest corpora available public domain widely ir researches 
includes documents news magazines total size gb 
topics queries 
smart index trec corpus 
entire document query content indexed term weighting scheme smart word list smart practice employ hierarchical version improve routing performance retaining cartesian space abstraction 
differs classical atc vector normalization step 
normalization divides element term vector tf tf th heaviest weight element vector normalization 
description default value number nodes system dimensionality lsi number rotated semantic spaces rotated dimensions equation size sample set quit bound equation number returned documents query number warm queries size concurrent search factor equation table parameters varied experiments 
effect varying system size 
stemmer modification strip word endings 
indexing process takes minutes complete ghz pentium iv machine gb memory 
randomly sampled indexed documents generate term document matrix 
terms appearing sampled document included matrix 
leaves sampled documents indexed terms matrix 
applied svd matrix compute basis semantic space 
svd computation takes minutes 
basis project documents semantic space computing semantic vector document 
takes minutes 
note process done psearch engine nodes concurrently 
lsi configuration largely follows 
main metrics number visited nodes search accuracy search results 
system resource consumption proportional number visited nodes analyzed section 
configuration lsi retrieve fixed number documents query 
returned documents form set refer documents relevant documents 
plsi retrieve number documents query 
returned documents form set accuracy defined follows 
accuracy accuracy metric compares plsi centralized lsi baseline 
discussion plsi absolute performance section 
evaluation accuracy vs number nodes visited table shows parameters vary experiments default values 
noted experiments default values index replication 
default baseline uses rolling index rotated semantic spaces 
rolling index help reduce number visited nodes effect simultaneously varying system corpus size 
effect varying number returned documents node system 
visited nodes accuracy 
visited nodes returned document 
accuracy number high 
baseline combines rolling index content directed search default sample indices neighboring nodes 
effect varying system size corpus size number returned documents shows effect number visited nodes accuracy search results varying number nodes 
results averaged queries 
non default parameter number samples 
nodes set 
decrease factor time number nodes quadruples total number documents fixed node sample larger percentage neighbors contents indices spread larger number nodes 
observe system size increases exponentially number visited nodes increases moderately 
number neighbors node deciding factor number visited nodes increases logarithmically system size 
node system psearch achieve accuracy visiting just nodes 
node system accuracy 
show improve varying parameters 
second relax quit bound controls accuracy accuracy improves slowly increase number visited nodes suggesting search results returned users incrementally waiting reach final quit bound 
varies number nodes varies number nodes size corpus proportionally full trec corpus nodes half trec corpus nodes search cost increases moderately system size corpus size scale 
shows effect varying number returned documents query 
number visited nodes grows quickly accuracy remains comparing content directed search heuristics node system 
accuracy visited nodes 
accuracy histogram 
effect replication node system 
average number nodes need searched return relevant document decreases drastically increase number returned documents 
illustrated 
user requests documents average nodes need searched find relevant document 
number returned documents increases average nodes need searched find relevant document 
reported significant percentage users view top search results 
believe default number returned documents appropriate 
effect varying content directed search heuristics evaluate heuristics content directed search 
results node system shown 
content series query series 
content heuristic uses node contents direct searches 
query heuristic system processing queries measuring performance 
uses node contents past queries direct searches 
queries locality learning past history increase accuracy reducing number visited nodes due selective sampling process neighboring contents 
shows accuracy histogram queries measured experiment 
axis means number queries accuracy 
compared content heuristic query heuristic improves accuracy queries 
effect replication results achieved replication 
replication improve accuracy efficiency see 
repl series replication serve baseline 
repl series node replicates direct neighbors contents 
repl content series replicating neighbor performance node system 
contents node replicates samples keeps neighbors 
content series set doing sampling 
suggests replication small number rotated spaces tight quit bound achieves accuracy 
instance visits nodes node system achieve accuracy 
search replicated nodes avoided searches directed right places accurately 
results larger system size presents performance node system 
configurations content query series 
repl repl content 
repl query differs repl content uses query heuristic sampling 
seen accuracy content series approach close relaxing quit bound nodes visited 
combining replication query heuristic achieve accuracy visiting nodes accuracy visiting nodes 
acknowledged example distributes relatively small corpus large system 
results show plsi retain performance corpus size system size scale proportionally 
number indices node increases chance find relevant documents single node increase reduce number visited nodes 
analysis result source distribution try understand distribution retrieved documents nodes system 
percentage relevant documents retrieved rotated space shown 
left axis percentage relevant documents rotated space 
right axis percentage nodes visited rotated space visited nodes total number nodes system 
content heuristic relevant documents rotated space 
query heuristic number goes 
important message optimal dimensionality lsi large fraction documents correctly perfectly clustered overlay low dimensional elements 
property result svd see search semantic space easier high dimensional spaces 
sampled full semantic vectors direct searches content directed search algorithm helps remove inaccuracies due limited clustering capability low dimensional elements 
shows percentage relevant documents nodes visited different hops away hop count corresponds 
measures steps takes reach search big distribution documents node system 
rotated spaces 
hop counts 
ger shortest route visited nodes curve fits docs curve meaning content directed heuristics effective directing searches right places hops away query heuristic longer tail content heuristic showing query heuristic accurate directing searches 
sensitivity system parameters final set experiments evaluate sensitivity plsi underlying vsm baseline system parameters 
term weighting schemes 
lsi proposal improve vsm built top vsm 
vsm produces sampled document matrix basis semantic space computed 
lsi precision recall tied underlying vsm baseline 
vsm baseline smart unfortunately include important ir techniques proposed years okapi term weighting automatic relevance feedback process implementing 
consequently lsi baseline inferior top systems reported trec 
believe going efforts ir community improve performance baseline orthogonal efforts decentralized implementation close centralized baseline 
supports claim showing plsi performance different underlying vsm baselines see term weighting schemes parentheses 
regardless absolute performance underlying vsm baselines plsi consistently achieves high relative accuracies reasonable cost showing great promise plsi improve developments advanced vsm baselines 
query length 
sensitivity number query terms reported 
trec query consists parts title description narrative 
series parts query default configuration title desc series title description title series title 
average query title desc title series contains terms respectively 
plsi relative accuracy sensitive number query terms 
parallel search 
vary concurrent search factor numbers parentheses specifies number nodes searched parallel 
baseline content heuristic 
seen increasing search concurrency increases number visited nodes moderately speeding search process nearly factor algorithm fine tune dynamically expect achieve better speedup lower cost 
rotated dimensions 
sensitivity number dimensions space rotated shown 
plsi sensitive long larger certain threshold 
important dimensions semantic space partitioned rotated spaces content directed search algorithm helps remove inaccuracies due rolling index 
dimensionality semantic space 
shows effect changing dimensionality semantic space numbers parentheses 
plsi sensitive suggested value expect increase corpus grows 
insensitivity suggests angle plsi potential scale corpus size 
sample size 
lastly vary size sample set guide search see 
leave room accuracy improve varies set quit bound number rotated spaces differently different configurations content query repl content repl query 
see query heuristics insensitive number samples due accurate index sampling process 
content heuristics sensitive small 
analysis system resource usage section analyze storage network resource consumption experimental results 
publishing index document data transmitted bd storage cost bd size index number rotated semantic spaces average routing hops number replicas index 
total data transmitted processing query bq sq sq sr sq size query message number visited nodes sr size returned data visited node 
set variables equations pessimistic results node system sq kb replication replication sr kb 
index query kb consist dimensional semantic vector small metadata 
data returned visited node contain similarity top documents estimated similarity neighbors independent corpus size query length document length 
pessimistic setting data transmitted processing query kb 
replication data transmitted publishing index kb storage cost kb replication numbers kb kb respectively 
big advantage psearch keyword matching systems gnutella style query flooding systems bandwidth consumption processing query independent corpus size query length document length 
factors decide resource usage constant increase slowly system scales routing hops number visited nodes hand take gnutella style systems transmit mb data just flood query nodes 
visited node computing relevant documents done efficiently 
indices memory node psearch prototype process query indices second 
indices disk process query indices second 
sensitivity system parameters node system 
term weighting schemes 
query length 
parallel search 
rotated dimensions 
dimensionality semantic space 
sample size 
summary experimental results quantified efficiency accuracy plsi experimenting largest corpora available public domain 
major findings 
plsi achieve accuracy reasonable cost respect bandwidth number nodes searched performance scalable respect system size corpus size number returned documents 
rolling index needs small number rotated spaces effectively limiting space overhead number visited nodes 
content directed heuristics effective directing searches learning past history beneficial queries locality 
replication improves performance cost extra storage 
plsi performance sensitive major parameters 
particular absolute performance shows potential improve developments advanced ir techniques 

related centralized indexing systems napster suffer single point failure performance bottlenecks index server 
hand flooding techniques gnutella send query index node system consuming huge amounts network bandwidth cpu cycles 
minimize number nodes query probes heuristic approaches direct search fraction node population 
approaches divided categories random walk employing summarization organizing nodes similar contents sharing interests groups 
lv study search replication strategies unstructured networks 
find random walk search efficient flooding 
projects employ bloom filters summarize contents network 
rhea kubiatowicz describe method uses bloom filters summarize neighbors contents 
query forwarded neighbors relevant documents high probability 
planetp uses bloom filter summarize contents node floods summaries entire system 
bloom filters crespo garcia molina introduce notion routing indices give promising direction relevant documents 
schwartz describes method organizes nodes similar contents group 
search starts random walk proceeds deterministically hits group matching contents 
motivated research data mining cohen guide rules organize nodes associative network 
sripanidkulchai extend existing network linking node nodes satisfy previous queries 
replication explored improve search efficiency 
fasttrack designates high bandwidth nodes super nodes 
super node replicates indices nodes 
cohen find setting number object replicas square root searching rate object minimizes expected search size successful queries 
systems hash term id store indices dht term id key 
systems need intersect inverted lists terms find documents contain multiple query terms 
cost grows proportionally corpus size 
planetp systems simple keyword matching ignoring advanced relevance ranking algorithms devised ir community 
believe searches just find documents contain certain keywords find relevant documents 
importantly psearch advantage able semantics limit search space 
compared architecture distributed ir systems gloss usually employ centralized hierarchical index route queries small number distributed sites 

attempts building self organizing largescale ir systems described techniques extend lsi algorithm decentralized environment 
quantified efficiency plsi respect bandwidth number nodes searched extent plsi retain lsi efficacy experimenting largest corpora available public domain 
contributions 
psearch system organizes contents semantics network 
possible achieve accuracy comparable centralized ir systems visiting small number nodes transmitting small amount data 
proposed rolling index resolve dimensionality mismatch semantic space advantage higher importance low dimensional elements semantic vectors 
helps reduce number visited nodes partitioning semantic space dimensions 
employed content aware node bootstrapping balance load achieves index query locality 
helps distribute document indices evenly nodes 
employed content directed search index samples processed queries guide searches right places high dimensional semantic space 
helps reduce number visited nodes 
experience trec med adi cran corpora shows great promise experiments needed study plsi applied larger corpus hundreds millions billions documents 
enhancements plsi content aware node bootstrapping expected scale corpus size 
intuitively expect performance content directed search improve corpus size increases relevant documents closer distances 
rolling index may affected adversely corpus size increases due enlarged dimensionality gap lsi 
proposals improve rolling index selective rotating hierarchical clustering evaluated 
includes implementing ir techniques efficient lsi variants concept index psearch comparing search algorithm plsi 
plan experiment large html corpus crawled web 
acknowledgments chen zhao chi zhang boon ang magnus karlsson christos anonymous reviewers shepherd robert morris valuable feedback 
mahalingam contribution initial stages project john sontag milojicic support 
supported part nsf ccr ccr ecs eia darpa ito afrl contract dept energy office inertial confinement fusion cooperative agreement 
de fc sf equipment financial compaq ibm intel sun 

berry 
matrices vector spaces information retrieval 
siam review 
buckley 
implementation smart information retrieval system 
technical report tr department computer science cornell university ithaca ny may 
cohen fiat kaplan 
associative search peer peer networks harnessing latent semantics 
ieee infocom april 
cohen shenker 
replication strategies unstructured peer peer networks 
acm sigcomm 
crespo garc molina 
routing indices peer peer systems 
icdcs july 
acuna nguyen 
text content search retrieval ad hoc communities 
international workshop peer peer computing may 
deerwester dumais landauer furnas harshman :10.1.1.108.8490
indexing latent semantic analysis 
journal american society information science 
dumais 
lsi information filtering trec experiments 
third text retrieval conference trec 
faloutsos barber flickner hafner niblack petkovic equitz 
efficient effective querying image content 
journal intelligent information systems 
fasttrack 
www fasttrack nu 
gravano garc molina tomasic 
gloss text source discovery internet 
acm transactions database systems 
karypis 
han 
concept indexing fast dimensionality reduction algorithm applications document retrieval categorization 
cikm november 
lempel moran 
optimizing result prefetching web search engines segmented indices 
vldb 
berry 
large scale information retrieval latent semantic indexing 
information sciences 
li loo hellerstein kaashoek karger morris 
feasibility peer peer web indexing search 
iptps february 
lv cao cohen li shenker 
search replication unstructured peer peer networks 
ics june 
mcarthur nathan redmond 
industry developments models disruptive innovation enterprise computing storage 
idc february 
raghavan 
information retrieval algorithms survey 
th siam symposium discrete algorithms soda january 
ratnasamy francis handley karp shenker :10.1.1.140.3129
scalable content addressable network 
acm sigcomm august 
rhea kubiatowicz 
probabilistic location routing 
ieee infocom june 
schwartz 
scalable non hierarchical resource discovery mechanism probabilistic protocols 
technical report cu cs university colorado 
sripanidkulchai maggs zhang 
enabling efficient content location retrieval peer peer systems exploiting locality interests 
acm sigcomm computer communication review january 

www netlib org 
tang xu mahalingam 
psearch information retrieval structured overlays 
hotnets october 
expanded version available hp technical report hpl efficient information retrieval peer peer networks 
text retrieval conference trec 
trec nist gov weber 
schek blott 
quantitative analysis performance study similarity search methods high dimensional spaces 
vldb pages august 
xu tang zhang 
building topology aware overlays global soft state 
icdcs may 

world wide web universal medium scholarly publication information retrieval interchange 
global journal engineering education 

