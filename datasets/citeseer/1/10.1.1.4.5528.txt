advanced model novel meta heuristic solution methods personnel scheduling healthcare greet vanden berghe contents nurse rostering problem problem description plane nurse rostering system belgian hospitals 
dimensions 
personnel 
skill categories 
regulations 
shift types 
planning period 
schedule 
hard constraints 
maximum assignment shift type day 
required skill 
personnel requirements 
soft constraints 

relaxation constraints 
categories soft constraints 
summary 
state art 
nurse scheduling classifications 
literature overviews 
staffing 
centralised unit scheduling 
self scheduling 
cyclical scheduling 
problem dimensions complexity 
nurse rostering approaches 
optimising approaches mathematical programming 
ai methods 
heuristics 
meta heuristic scheduling 
general personnel scheduling 

ii solution framework evaluation solutions 
evaluation approach 
formal description evaluation method 
numbering constraints values 
counters 
cost parameters 
changing regulation skill categories 
evaluation mechanism 
example 
demonstration method 
real world issues 

planning procedures 
consistency check available people 
freezing parts schedule 
people scheduled automatically 
freeze parts personal schedules 
freeze periods time 
initialisation 
input initialisation 
create feasible solution 
planning order skill categories 
coverage procedures 
minimum preferred requirements 
plan preferred requirements 
adding hours 
criterion 
floating personnel requirements 
coverage constraints 
personnel requirements time intervals floating requirements step approach 
initialisation 
improving quality schedule 
diagram modules 
examples 
test results 

iii meta heuristics hybrids variable neighbourhood search 
variable neighbourhood search 
variable neighbourhood search nurse rostering problem neighbourhoods nurse rostering problem 
shaking solution 
variable neighbourhood approaches 
test results 

hybrid tabu search 
tabu search 
tabu search algorithm nurse rostering problem 
original tabu search algorithm 
tabu list 
aspiration 
criterion 
diversification heuristics problem 
hybrid tabu search algorithms 
test results 

memetic algorithms 
evolutionary algorithms 
genetic algorithms 
memetic algorithms 
evolutionary algorithms nurse rostering 
combining qualities hybrid tabu search evolutionary algorithm 
results 

iv different framework multi criteria approach 
multi criteria decision making 
drawbacks cost function approach 
multi criteria approach nurse rostering problem 
soft constraints 
search space 
algorithm multi criteria search 
experiments 
test problems 
discussion 

general discussion problem definition model development 
directions research 
list figures schematic overview nurse rostering system 
roster example people 
week shift types introduced table 
schedule corresponding roster fig 
denotes assignment schedule denotes schedule free specified section 
minimum time shift types 
solution basic problem people 
week shift types introduced table assignment unit representation solution fig 
denotes schedule position differs assigned denotes schedule position value free numberings real world constraints table 
overview evaluation schedule 
pseudo code initialisation algorithm 
pseudo code intermediate evaluation 
pseudo code final evaluation algorithm 
overview solution framework 
unavailable timeslots 
schematic procedure consistency check available personnel case shift type personnel requirements schematic procedure consistency check available personnel case shift type personnel requirements non frozen parts schedule 
example division schedule partial schedules solved skill category 
moves skill category qo qo planning period 
belongs qo allowed carry shifts qo belongs qo alternative qualification qo 
schematic representation construction feasible schedule shift type requirements 
skill categories scheduled sequentially 
search algorithm increase quality schedule case unfortunate planning order skill categories 
post planning algorithm satisfy preferred shift type personnel requirements better skill category 
post planning algorithm decrease people skill category 
linear problem initialisation phase case floating personnel requirements minimum requirements rim 
heuristics scheduling phase floating personnel requirements 
diagram heuristics nurse rostering problem floating personnel requirements 
possible swaps shift types dataset 
possible moves single shift day neighbourhood shifts early day late night 
possible moves weekend neighbourhood 
possible moves shuffle neighbourhood personal schedules nurse nurse clarity moves instances schedule 
examples moves nurse nurse core shuffle neighbourhood 
pseudo code variable neighbourhood approach 
diagram scenario algorithm mv gs options rsd initialisation starts empty schedule post planning options selected fig 

effect applying neighbourhoods fig 
solution quality computation time 
illustration rectangles positions swap hash function 
diagram hybrid tabu search algorithms nurse rostering problem plug fig 

diagram components genetic memetic algorithms nurse rostering problem plug fig 

schematic representation original memetic algorithm 
schematic representation memetic algorithm human improvement functions 
mapping criteria space preference space person schedule 
pseudo code multi criteria search 
list tables example shift types 
example personnel requirements day formulated shift types 
example floating personnel requirements day indices correspond different skill categories 
start times realistic shift type set unoccupied periods 
allowed successions shift types consecutive days represented denotes day scheduled constraints conflicting selection total set pattern types denotes constraints evaluated corresponding pattern types type counter mean evaluate 
hard soft constraints 
objectives 
flexibility 
cyclical non cyclical approaches 
coverage 
skill categories 
regulation 
shift types 
personnel demand 
planning period 
staff size 
applicability approach 
soft constraints capacity 
soft constraints personal preferences 
soft constraints constraints 
soft constraints constraints 
soft constraints constraints 
soft constraints balance workload 
soft constraints weekends 
soft constraints 
shift types 
soft constraints column denotes value denotes cost parameter denotes numbering associated constraint 
constraint values penalty costs numberings fig 
numbers brackets refer corresponding real world constraints table 
numbering constraints evaluation soft constraints anrom column rwc 
evaluation procedure st person schedule 
evaluation procedure th person schedule 
set shift types dataset 
shift types join tightly dataset 
minimum rim preferred rip personnel requirements dataset period week different skill categories 
possible solutions regular nurses weekday dataset rim cx minimum personnel requirements shift type combination rip cx preferred personnel requirements shift type combination index denotes number combination possible solutions regular nurses weekend day dataset 
appearance shift type combinations initial solution final result dataset rim cx minimum personnel requirements shift type combination index 
shift types join tightly dataset 
personnel requirements single qualification day dataset 
possible shift type combinations satisfying daily personnel demand dataset 
test results traditional floating algorithm problem traditional personnel demand formulation 
test results traditional floating algorithm problem floating personnel demand formulation 
selection pairs neighbourhoods heuristics test results table 
test results algorithms combining different neighbourhoods search 
value evaluation function results steepest descent variants hybrid tabu search algorithm problem planning order qualifications chosen customer value evaluation function results steepest descent variants hybrid tabu search algorithm problem planning order qualifications chosen customer comparison algorithms problem 
comparison algorithms problem 
comparison algorithms problem 
comparison algorithms problem 
schedules representing worst cases corresponding constraints 
results example 
results example 
glossary standard performance absence days person au set assignment units ap set assignment units numbering value number absence days person planning period cnt number counters see constraint number days planning period set events induced schedulep absolute value largest element numbering number personnel members ward serial number patterns constraint set points time day number prototype shifts number skill categories qap qap ti ti set alternative skill categories set alternative skill categories person day equals qap skill category change planning period minimum personnel requirements qualification time interval ti day preferred personnel requirements qualification time interval ti day rpq minimum personnel requirements qualification shift type day preferred personnel requirements qualification shift type day number different shift types number assignment units planning period represents assignment units numbering undefined number different regulations bank maximum number assignments bank holidays regulation constraint days set counters valid regulation constraint denoting person day day value day value extra penalty factor multiply penalty weight personal constraints extra denoting personal request person assignment unit needs stronger penalty value value max day maximum number assignments day week denoted day regulation constraint max maximum numbers working hours planning period regulation constraint max shift shift maximum number assignments shift type denoted shift constraint maxw min maximum number assignments regulation constraint minimum number hours planning period regulation constraint night set shift types start night denotes constraint free days night shift constraint valid value valid value night value denoting constraint night shifts free weekends constraint valid regulation value valid value person constraint penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp value pattern number corresponds regulation denotes pattern constraint penalty shifts performed main skill category person constraint penalty assigning complete weekends constraint person penalty forbidden sequences consecutive shifts constraint person penalty violating constraint maximum number consecutive weekends constraint person penalty violating counters constraint person penalty violating personal request days constraint person penalty violating maximum number assignments bank holidays constraint person penalty assigning identical shifts weekend constraint person penalty maximum number assignments constraint person penalty violating maximum number consecutive days constraint person penalty violating maximum number consecutive free days constraint person penalty violating maximum number assignments day week constraint person penalty overtime constraint person penalty violating maximum number assignments shift type week constraint person penalty violating maximum number assignments shift types constraint person penalty violating minimum number consecutive assignments constraint person penalty violating minimum number consecutive free days constraint person penalty constraint person penalty minimum time assignments constraint person penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penaltyp penalty respecting free days night shifts constraint person penalty scheduling night shift free weekend constraint person penalty assigning person time constraint penalty violating patterns constraint person penalty respecting requested assignments constraint person penalty assigning duties requested shifts constraint person penalty assigning forbidden successions shifts free days constraint person penalty violating constraint constraint person penalty violating maximum number assigned weekends periods weeks constraint person pref value added assignments show marked previous balance working hours person previous planning period previous denotes saturday previous planning period planned person previous denotes sunday previous planning period planned person schedule previous planning period person durations duration prototype shift ends starts qp qp time prototype shift start time prototype shift main skill category person main skill category person day equals qp skill change planning period requirements denotes personnel requirements formulated shift types value shifts time intervals value floating st shift type corresponding assignment unit shift pss shift shift prototype shift corresponding shift type personalised version shift type person recommended free time shift type ends constraint recommended free time shift type starts constraint shift durations duration shift type shift ends shift shift starts ts time shift type denotes shifts person value want assignment assignment unit value constraint start time shift type dimensional structure denoting shift types free days scheduled immediately constraint regulation assignment unit corresponding shift type threshold hours threshold value overtime penalty generated wp wp anrom complete threshold value counter cntr relaxes evaluation constraint balancing counter person constraint regulation person regulation person day equals wp regulation change planning period weekend definition regulation saturday sunday friday till sunday friday till monday saturday till monday consecutive shift shift counter cntr advanced nurse rostering model model developed research value denoting constraint complete weekends constraint valid regulation value valid value set allowed sequences consecutive shifts type shift regulation constraint value counter cntr person counter counter counter maxw cntr counter cntr counter counter counter extra requested identical max cons free max consecutive max consecutive max shift week shift week max weekends min cons free min consecutive pattern penaltyp balance denotes counter balanced personnel members value balance value duration evaluation period counter cntr maximum value counter cntr regulation balance counter cntr previous planning period person start date counter cntr denoting subject counter cntr counts constraint time measure counter cntr denotes required assignment person assignment unit higher importance value value value denoting constraint identical shift types weekends constraint valid regulation value valid value maximum number consecutive free days regulation constraint maximum number consecutive working days regulation constraint maximum number weekends duties assigned regulation constraint maximum number assignments shift type shift week week regulation constraint maximum number working weekends weeks regulation constraint minimum number consecutive free days regulation constraint minimum number consecutive working days regulation constraint length pattern pa penalty violating balance counters constraint person penaltyp max previous free previous previous consecutive penalty violating maximum value counters constraint person number free days night shift previous planning period person number cumulative assignments bank holidays person consecutive scheduled days previous planning period previous consecutive sequence consecutive shifts type person previous planning period previous consecutive number consecutive scheduled weekends previous planning period person previous weekends previous weekends previous weekends requested start sum counter number working weekends week previous planning period person number working weekends weeks previous planning period person number working weekends weeks previous planning period person denotes person personal request assignment constraint assignment unit value value week pattern corresponding person regulation starts sum value counter cntr people belonging regulation includes counter constructing timetables personnel healthcare institutions known highly constrained difficult problem solve 
thesis introduce model practical rostering problem belgian hospitals 
general cope large set constraints meet varying objectives encountered practice 
set solution framework consists modifiable explanatory evaluation function options handling initialisation parameters formulating various objectives meta heuristics search solutions 
set neighbourhoods designed organising effective exploration search space 
combined different local search heuristics neighbourhoods managed find scenarios produce algorithms widely varying problem settings 
hybrid tabu search approach deserves special attention applied practice part software package model proposed thesis 
range new memetic approaches rostering introduced 
local search improvement heuristics genetic framework 
identify best evolutionary operators memetic algorithm rostering problem particularly nature effective recombination show memetic approaches handle initialisation parameters range instances effectively usual tabu search algorithms expense longer computation times 
having cost function search heuristics introduce new multi criteria approach overcomes practical difficulties automated nurse rostering 
developed multi criteria approach incorporated meta heuristic takes account fact constraints easier satisfy allowing schedulers control compensation constraints 
automating nurse rostering problem scheduling effort time reduced considerably comparison manual approach previously 
software model developed thesis provides unbiased way generating schedules personnel members 
enables simple verification constraints helps redefining unrealistic hard constraints leads higher satisfaction personnel 
part nurse rostering problem chapter pressure healthcare organisations increases persistently continues remain serious problem spite significant technological advances 
personnel rosters hospitals resources cover patients requirements 
affect organisational structure hospital directly influence private life personnel members 
unpredictable strongly fluctuating timetables ruin atmosphere wards give rise high level 
prevent problems hospital planners able create efficient timetables preferably long time advance 
important provide interactive system generates high quality scheduling solutions reasonable computing time 
schedules cover hospital requirements avoiding patterns harmful nurses 
unhealthy unwanted shift patterns determined possibilities exist nurses express desires 
flexible planning system incorporate knowledge possible relieve personnel manager head nurse task setting objective schedules please individual nurses 
order meet strict quality standards patient care objective personnel rostering healthcare match number skilled people working time intervals demand certain nurse services 
timetables constrained governmental hospital rules personal preferences regulations 
hospital personnel rostering complex scheduling domain services provided continuously hours day days week 
real world nurse rostering problems difficult combinatorial problems belong domain scheduling timetabling 
specifically classified personnel scheduling problems 
obtaining optimal solution impracticable task undertake due large number alternative schedules 
optimal solutions case may suitable compromise need reached 
approximate solutions satisfactory obtained quickly 
meta heuristics successfully applied similar problems 
related problems security law enforcement personnel scheduling bus driver scheduling crew scheduling employee scheduling production environments category personnel scheduling problems solved cyclical schedules complex hospital rostering 
compared industrial situations personnel schedules normally consist stable periodic morning day night cycles healthcare institutions require flexibility terms hours shift types larger set different skill categories possibilities defining part time contracts 
nurse scheduling split sub problems time horizon decisions 
long term strategic level hospital personnel scheduling considers determining service level meet patients needs addition forecasting large fluctuations 
phase involves hiring qualified personnel fulfil tasks considering possible periods outlining policy exchange personnel wards hiring float nurses 
problem domain called staffing 
research thesis concentrates mainly short term problem assigning specific tasks qualified nurses moment planning period referred rostering timetabling 
part problem data number personnel ward required qualifications definition shift types determined strategic level 
settings considered part nurse rostering problem decisions longer term affect solution strategies 
model developed thesis provides possibilities flexible problem setting 
examples shift types divided nurses personnel demands expressed terms shorter intervals shift length night shifts assigned special category night nurses possibilities exist creating part time people temporarily assigned different wards order set emergencies personnel members express certain preferences particular times planning period problem finding high quality solution personnel timetabling problem hospital ward addressed personnel managers schedulers number years 
years emergence larger constrained problems real challenge researchers 
finding quality solutions lead higher level personnel satisfaction flexible organisation 
framework designed thesis addresses complex nurse rostering problem typical belgian hospitals 
software available dealing personnel rostering hospitals packages serious disadvantages support automated scheduling simply developed solving specific local problems 
extensive market research effort carried get existing packages turned satisfactory general applicability hospitals 
especially belgian situation nurses highly demanding quality time contracts adapted private life available software proves unsuited 
hospitals united states japan european countries available software developed flexibility respect part time belgium remarkably large 
obvious hospital planners need encompass extra opportunities flexible time 
furthermore situation belgian healthcare institutes includes particular possibilities letting nurses express personal preferences shifts days weekend certain cyclical patterns superposed variable schedules 
clear program specifically including features belgian nurse rostering required 
results market research corroborate requirement belgian hospital planners desire easily modifiable software package facilitate personnel rostering 
shortly market research get set collaboration software developer resulted product called plane 
responsible user interface database modelling scheduling done framework thesis 
chapters represent different steps developing system modelling nurse rostering problem chapter coding constraints chapter setting solution framework part ii development appropriate search techniques part iii 
model developed flexible interactive system cope different kinds strategic staffing inputs 
beta versions released number users grew complex problems 
extended functionalities new planning procedures extra constraints developed order meet planners needs chapter 
system flexible applied personnel scheduling domains 
fig 
relation parts thesis schematically 
apart tabu search algorithm implemented commercial software carried experiments metaheuristics hybrid approaches attempt meet requirements better 
detailed model particular kind personnel rostering problems tackled research introduced chapter 
elaborate constraints requirements healthcare personnel belgian institutions incorporate functionalities offered plane 
chapter review available literature hospital planning 
similar problems addressed researchers clear existing approaches applicable current belgian situation 
get general engineering technologie gent nurse scheduling problem part software interactive scheduling plane model algorithms part ii iii multi criteria model part iv schematic overview nurse rostering system models algorithms thesis developed specifically purpose 
chapter introduces evaluation function algorithms part ii iii 
enables tackling large set constraints flexible modular way providing feedback users 
specific objectives detected hospital wards form basis particular heuristics solve optional planning procedures discussed chapter 
pre planning post planning algorithms keep real search algorithms separated particular problem requirements 
chapter introduce new model unusual way formulating personnel requirements 
floating requirements enable hospital planners extend problem formulation increase number alternative solutions 
higher degree freedom time interval model possible hospitals create kinds part time obtain better quality solutions 
part iii concentrates different meta heuristics solving combinatorial problems 
chapter introduce set neighbourhoods scheduling problem 
combining neighbourhoods steepest descent algorithms tabu search approach leads modifiable variable neighbourhood search method 
developed neighbourhoods applied meta heuristics chapter 
algorithms described chapter tabu search algorithm developed especially solving nurse rostering problems practice 
results outperform obtained single algorithms 
chapter compares meta heuristic approaches problem 
results better previously obtained results expense computation time 
part iv investigate applicability multi criteria approach solving nurse rostering problem 
possibility assigning weights certain criteria conditions guides search different set solutions produces interesting results quality 
compare results developed algorithms summarise benefits drawbacks general discussion chapter 
chapter problem description nurse rostering complex scheduling problem daily affects hospital personnel world 
need quality software solutions high number reasons 
particular important flexibly model realworld constraints attempt satisfy wishes preferences personnel members evenly balance workload people 
high quality roster lead effective workforce 
compared industrial situations personnel schedules normally consist stable periodic morning day night cycles healthcare institutions require flexibility terms hours shift types 
motivation research provided hospital administrators schedulers belgian hospitals 
planners early releases nurse rostering software plane section model solution framework thesis suggested improvements extensions 
refer problem description built anrom stands advanced nurse rostering model 
dimensions problem explained section 
hard soft constraints anrom describe formally section 
plane nurse rostering system belgian hospitals plane commercial software system developed collaboration get assistance hospital employee scheduling 
author contributed rostering program modelling problem evaluation function developing solution framework 
plane arose need automated rostering assistance belgian healthcare organisations 
rostering problem personnel requirements skill category fulfilled fixed period time respecting number constraints limit personal assignments 
initial version plane implemented hospital system evolving cope new complex real world problems keep appearing 
far hospitals belgium wards replaced time consuming manual scheduling system 
problem user defined large extent software efficient different settings 
specific hospital ward able formulate problem restrictions model described sections 
cost function algorithms modular deal constraints matching types described section 
dimensions main goal personnel rostering model create schedule assigning shift types skilled personnel members order meet requirements certain planning period 
personnel regulations limiting assignments 
concepts problem explained detail section 
personnel hospitals organised wards fixed activities usually settled location part permanent team nurses 
practical situations allow people migrate ward personnel shortage unsolvable personnel rostering problem research normally concerns group personnel belonging ward 
planning different hospital wards reduces complexity problem considerably 
algorithms scheduling single wards exclude people working temporarily see section 
personnel rostering model research number personnel members user definable 
result calculations planning algorithm 
staffing considerations decisions capacity terms beds patients competence short term belgian hospitals 
number people ward varies practice 
research nurse rostering problem concentrates scheduling personnel members single ward explicitly stated differently 
skill categories personnel members ward belong skill categories 
division categories particular level qualification responsibility job description experience personnel 
typical categories hospitals head nurse regular nurse junior nurse ambulance driver caretaker cleaner groups called grades applications 
model different skill categories 
personnel member belongs skill category qp 
approach anrom allows personalised organisation substitution skill categories 
strictly disjunctive skill categories hierarchical substitutability higher skilled people replace experienced colleagues opted solution closer reality hospitals 
example particular skill category class junior nurses 
case allocate ward manager category junior shift day 
practice senior staff usually reluctant stand junior staff 
case practice regular junior nurse temporarily stand head nurse 
problem replacing people solved anrom assigning alternative skill categories certain people 
people experience taken exams substitutes higher skill categories 
nurses replace head nurse example normally couple senior nurses know working ward 
denote qap list alternative skill categories person number elements list person permission replace people skill categories qp qap contains elements skill category ward 
refinement qp qap necessary personnel member skill category entire planning period 
explained section 
regulations cyclical schedules obey strict patterns 
applied personnel rostering environments impractical real healthcare environments 
model hospital personnel regulations contracts employer 
organisations allow job descriptions part time night nurses contracts weekend workers regulations involve different constraints schedules flexible 
personal arrangements free wednesday courses regular points time easily formulated 
personalised contracts majority personnel members belgian hospitals 
different regulations denoted research 
personnel member regulation denoted wp 
people change contract planning period course influence schedule see section 
shift types shift type predefined period fixed start time personnel members duty 
continuously working organisations schedule typical shift types called morning late night shift 
way manufacturing generally works 
working hours cover personnel requirements hospitals practice 
start morning shift late shift night shift table example shift types possible kinds part time require variety start times shift length 
shift types ward 
shift type start time shift starts time shift ends duration shift durations 
table presents simplified example set shift types ward 
shift type involve continuous activity start time shift durations necessarily equal shift ends shift starts 
examples shift types long break enables personnel lunch home guard duties require availability personnel longer period actual time counted working time 
common allow hospital schedulers define shift types needs 
anrom works prototype shifts defined entire hospital organisation 
prototype shifts start time starts time ends duration durations 
schedulers ward copy prototypes modify locally order match activities 
shift type corresponds prototype shift shift pss 
major advantages general definition prototype shifts personnel members working different wards evaluate schedule locally applicable constraints see constraints shift types section 
apart locally redefining prototype shifts ward exceptional shift characteristics permitted particular nurses 
examples shifted start times extended breaks solve practical private problems 
personalised shift types denoted formal description anrom model notation people ward set shifts common case 
time related constraints formulated terms regular shift types provided personalised shift types differ 
evaluation procedure regular shift types hold entire ward replace personalised shift types 
planning period planning periods nurse rostering vary couple days months 
length period expressed number days number assignment units explained section 
cyclical rosters common important individual employees know schedule time advance 
long term scheduling hand detailed personnel demand personal preferences fluctuate predictable near 
model consider planning periods start monday sunday matter duration number weeks short planning periods enable search algorithms find quality results faster longer planning periods 
short planning periods reduce possibility guaranteeing fairness personnel members 
situations require shorter planning periods 
examples unexpected changes requirements constraints 
cases personnel manager tends prefer fewest modifications possible people schedules 
anrom provides planning procedures organising rescheduling processes 
parts existing roster frozen planning 
personal schedules periods time members ward kept unchanged algorithms search better solution remaining part problem domain 
freezing parts schedule explained detail section 
schedule roster ward shift assignments people stored called schedule 
dimensions stands number assignment units 
refer personal schedule person notation schedulep particular assignment unit notation schedulep define assignment units entities minimum allocation schedule 
mainly introduced handle soft constraints personnel schedules 
evaluation model described chapter assignment units play particularly important role 
approach anrom personnel requirements schedules shift types shift type day corresponding assignment unit 
total number different assignment units schedule equal assignment unit ts corresponds shift type clarity notations st introduced shift type corresponds assignment unit illustrate meaning assignment units simple example 
fragment possible personnel roster fig 

notice people ward different shift types 
fig 
presents schedule corresponds roster fig 

column schedule represents assignment unit 
day planning period columns corresponding shift type 
assignment units ordered start times shift types represent 
shift types start time assignment unit match shift type earliest time 
assignment units defined approach represent consecutive separate periods overlap time 
nurse rostering problem considered thesis number assignment units equals number shift types mon tue wed thu fri sat sun roster example people 
week shift types introduced table schedule example schedule corresponding roster fig 
denotes assignment schedule denotes schedule free specified section times number days planning period denotes number days planning period 
hard constraints hard constraints satisfied 
cover real world hospital situations hard constraints set 
maximum assignment shift type day anrom considered feasible assign shift member ward day 
violation constraint involve twice workload person 
constraint represented pref number indicating assignments post planning coverage procedure 
value schedule position schedulep indicates assignment person assignment unit value different denotes skill category assignment 
exceptional cases person assignment main skill category 
values pref pref represent skill categories added number pref indicates assignments 
importance expansion model explained section 
schedulep 
pref 
pref ward schedule representation anrom prevents personnel members having assignment shift day main alternative skill category 
case constraint prevents people assigned overlapping shifts condition handled soft constraint section 
required skill case number people required skill category higher available number skill alternative grade assist see constraint section 
infeasible assign tasks people qualified carry 
formally values occur personal schedule restricted set 
schedulep qp qp pref qap qap pref initial phase scheduling algorithm violations soft constraints taken account 
simply done planning required duties random schedule ignoring soft constraints limitations number shifts member staff may 
situations occur particular hard constraint satisfied 
consistency checks assist planner overcome problem see section 
modelled problem developed algorithms way hard constraints violated search procedures matter bad evaluation current solution initial feasible solution new assignments enter schedule assignments removed swt heuristic defined section 
anrom model opted shifting assignments assignment unit 
number assignments shift type skill category particular day remains constant 
personnel requirements personnel requirements called coverage constraints express number personnel skill category needed staff ward 
set management usually expressed terms minimum number personnel required preferred number personnel meet patients needs 
minimum number personnel strictly covers unavoidable tasks preferred number personnel atmosphere reducing workload staff members 
requirements formulated terms shift types traditional approach literature terms times called floating requirements 
term requirements denotes shift type requirements equals shifts floating requirements equals floating 
shift type requirements denotes minimum required number nurses skill category shift day rpq denotes preferred number personnel 
simple example shift type personnel requirements different skill categories head nurse regular nurse nurse aid day table 
example different shift types defined ward 
row table corresponds shift types 
skill category columns table 
correspond minimum preferred requirements 
requirements head nurse regular nurse nurse aid shift rmr rma rpa short early early day late short late night table example personnel requirements day formulated shift types satisfy personnel requirements head nurse example sufficient head nurse available day shift 
alternatively head nurse free people respect alternative skill category authorised replace head nurse assigned required shift 
creating feasible schedule generally fairly easy provided personnel requirements exceed total number skilled personnel shift day 
skilled people ward exists feasible schedule 
case personnel requirements relaxed certain days float nurses temporarily assist extra personnel needs hired 
shift type personnel requirements formulated shown 
ts schedulep schedulep pref floating requirements rpq entrenched habit hospitals think terms number personnel hour hour 
manual planners tend defining personnel needs combination shift types 
broadened framework defining daily staff complement formulation hospital planners allows higher flexibility constructing timetables 
personnel requirements terms time intervals expressed ti minimum ti preferred personnel requirements 
interval interval denote start times time interval ti ti 
introduce set different points time day 
formally 
deduce interval start interval start 
interval interval interval 
interval shift start shift start 
shift starts shift shift 
shift ends requirements shift types possible allocate kinds part time employment shift period 
table presents simplified example personnel requirements single day expressed floating requirements 
details representation explained chapter 
depending chosen planning procedure see section minimum requirements preferred requirements hard constraints 
consequently feasible schedule people scheduled required shift time period 
personnel requirements time interval satisfied criteria reported fulfilled 
head nurse ti ti regular nurse ti ti nurse aid ti ti table example floating personnel requirements day indices correspond different skill categories soft constraints real world situation addressed research incorporates high number soft constraints personal schedules 
soft constraints preferably satisfied violations accepted certain extent 
highly exceptional practice find schedule satisfies soft constraints 
aim search algorithms minimise real impact violations constraints 
users system specify constraints 
constraints strengthen constraints adverse factors planning real world hospital wards 
constraints contradictory reality 
obvious certain constraints satisfied 
cases user planning software informed extent type constraint violated 
pit pit ti interval interval ti shift starts pit shift ends schedulep ts schedulep ts pref ti interval interval ti relaxation constraints apart describing meaning constraint explain exceptions evaluation addition certain corrections required holiday periods periods illness absence 
boundary constraints planning period important impact evaluation 
general rule holds penalty generated violation constraint avoided current planning period scheduling appropriately 
violation generated constraint satisfied satisfied scheduling appropriate shifts planning period 
evaluation absence free day different 
personal constraints holidays illness constraint section 
free days days personal schedule scheduled 
manual planners evaluate constraints strict manner violated day case violation caused free day 
constraints relaxed absence prevents scheduling shifts satisfy constraint 
free days allow compensation free days scheduled days assigning shift 
ideas hold distinguishing scheduled shifts requested shifts particular soft constraint types constraint explained section 
categories soft constraints hospital constraints personnel scheduling organised hospital ward research project 
ward group personnel working location certain floor hospital basis activities ambulance team 
number general constraints recommended hospital certain situations may need ignored 
rules hold entire hospital ward define house rules 
general hospital constraints listed turn explained detail 
constraint minimum time assignments legal constraint depicting hours personnel free assignments 
practice time assignments depends shift types 
formulation constraint represented extra data fields corresponding shift types 
anrom planners decide augment diminish rest time shift type 
scheduling morning shift starts hours late shift ended obviously worse scheduling short afternoon shift hours short morning shift example 
short duties morning shift till shorter break acceptable 
terms shift shift denote recommended free time shift type starts ends 
penalty generated overlapping time shift type forbidden zone shift 
constraint important penalty proportional number overlapping minutes 
table presents example extracted real world hospital situation start times shift types recommended idle times shown 
names shift types abbreviations shift names hospital 
fig 
derived data table illustrates constraint better 
shift type bar 
start time shifts clearly visible forbidden sequences shift types derived periods shift allowed 
constraint restricts shift types scheduled certain day addition assignments consecutive days particular cases 
sense check constraint assignments days apart 
time suffice 
penalty constraint denoted penaltyp person formal representation 
penaltyp st st shift ends shift shift starts shift ends shift starts shift schedulep schedulep penaltyp constraint alternative skill category unoccupied time hrs shifts shift starts shift ends shift shift se short early ee early early sd short day early day sl short late late ll late late night table start times realistic shift type set unoccupied periods se ee ee sd sl sl ll ll minimum time shift types hard constraint done skilled personnel 
certain duty requires head nurse preferably head nurse job available 
possibility obtain feasible solution case find person skill category authorised replace people required skill category see section 
assigning people alternative skill categories necessary cater staff shortages desirable penalised evaluation function 
penalty generated time shift performed duty ones covered prime skill category penaltyp 

penaltyp schedulep qap qap pref constraints defined regulation personnel member contract hospital 
called regulation agreement see section 
different regulations full time half time personnel members night nurses hospitals belgium allow definition personal agreement nurse 
enables formulate personal constraints wednesday afternoon free weekend weeks stand duty defining regulation constraints defined idle 
constraint maximum number assignments constraint determines number shifts person regulation planning period maxw 
order reflect real world situation adaptations number cases illness holiday 
personal schedule contains absence type leave absence 
depending reason absence taken account evaluation assignments hours 
denote ap number absence days planning period 
consider planning period weeks days full time agreement maximum assignments planning period 
suppose full time personnel member sickness leave days 
constraint adapted situation changing value maximum number assignments 
cost function value constraint penaltyp person calculated planning period 
transfer planning period 
represented 
penaltyp wp schedulep ap maxw constraint maximum number consecutive days constraint limits maximum number consecutive working days max consecutive 
evaluation involves checking days scheduled previous planning period previous consecutive 
practice schedule previous planning period known consecutive days calculated 
description soft constraints section assume required data 
suppose example maximum number consecutive days 
consecutive days scheduled previous planning period day current planning period scheduled violating constraint 
scheduling second day generate penalty 
consecutive days previous planning period assignments penalty generated current period scheduled day 
constraint violations past penalised current planning period 
formally 
wp consecutive days previous consecutive penaltyp schedule consecutive days consecutive days max consecutive penaltyp consecutive days constraint minimum number consecutive days working day free days seldom wanted 
denote min consecutive minimum number consecutive working days regulation constraint previous planning period person taken account previous consecutive 
penalty generated constraint satisfied scheduling duty day current planning period 
consequently considered violation constraint satisfied planning period 
example consecutive days required penalty generated days current planning period scheduled 
constraint minimum number consecutive days relaxed stretch working days requested days meets requirement 
consider case consecutive days required 
suppose person works consecutive days ends requested day immediately 
schedule generate penalty requested day free days considered part stretch 
day person denoted days see constraint days denoted 
illustrated 
constraint maximum number consecutive free days wp consecutive days previous consecutive consecutive days previous consecutive days penaltyp schedule consecutive days cons days days min consecutive consecutive days cons days penaltyp consecutive days cons days days value max cons free denotes maximum number consecutive free days regulation number consecutive free days previous planning period denoted previous consecutive free person constraint 
constraint minimum number consecutive free days minimum number consecutive free days regulation denoted min cons free 
formal detail 
constraint analogous previous constraints limit consecutive free days consecutive working days 
rules hold planning period 
respect free days relaxed attitude holds 
absence days added number consecutive free days occur sequence maximum number evaluated 
absence days added number consecutive free days minimum constraint 
violation minimum number consecutive free days absence days isolated working days 
constraint maximum number hours worked limit maximum number hours planning period max corresponding regulation 
constraints working time cumulative affects evaluation constraint 
adding real amount overtime wp cons free days previous consecutive free penaltyp schedulep consecutive free days cons free days max cons free penaltyp cons free days scheduled time planning period system prevents team having unfair schedules 
balance working hours personnel member transferred planning period previous added hours carried current planning period 
suppose starting balance person negative current planning period 
possibility compensating generating penalty overtime 
overtime common hospitals option available penalising overtime certain threshold threshold hours exceeded 
value personnel ward 
violations number hours penalty ignored 
regulation standard gives normal number hours worked standard day 
call standard ap number hours absence days 
nearly way explained respect constraint weighted new value maximum number hours calculated 
demonstrated 
constraint minimum number hours worked minimum number hours person planning period min 
evaluating constraint carried way constraint 
balance hours worked previous planning period added hours current period 
absence days illness compensated evaluation constraint 
constraint illustrated 
evaluation constraint relaxed setting threshold value generating penalties 
violations number hours possible ignore violations constraint 
real amount overtime added scheduled time planning period system prevents team having unfair schedules 
wp cons free days previous consecutive free cons days previous cons days penaltyp schedule consecutive days cons days days min cons free cons free days cons days penaltyp cons free days cons days days wp penaltyp max previous shift schedulep penaltyp threshold hours correction calculated person absent due illness holiday 
exactly way explained respect constraint weighted new value maximum minimum number hours calculated 
constraint maximum number assignments day week constraint limits number assignments certain days week max day denotes regulation day day week monday till sunday 
example possible provide free monday planning period restrict number working weekends constraint 
transfer planning periods 
constraint formally 
constraint maximum number assignments shift type constraint provides possibility forbidding restricting assignment certain shift types shift agreement max shift shift 
wp penaltyp min previous shift schedulep penaltyp threshold hours wp penaltyp day day max day week week schedulep week day penaltyp planner example defining agreement night nurses set number allowed shift types shift differs night shift 
agreements cleaner example night shift 
maximum number shift type set low number order enable shift type variation schedules 
constraint demonstrated formally 
constraint maximum number shift type week week week planning period user limit number assignments personal schedule shift type shift max shift week shift week 
constraint example prevent assignment night duties week 
system allows different constraint values different weeks allow definition shift type cycles early week followed late week 
formally illustrated 
constraint number consecutive shift types shift type shift series allowed sequences defined 
consecutive shift shift take values wp penaltyp shift shift shift max shift shift shift schedule penaltyp shift shift shift shift wp penaltyp week week shift shift week max shift week week schedulep week penaltyp week week week week consecutive shift shift sequence allowed 
model example supplies possibility defining allowed sequences consecutive shift shift consecutive shift shift consecutive shift shift sequences value 
sequences consecutive shifts previous planning period influence constraint 
denoted previous consecutive occurrence absence illness day relaxes constraint 
result adding absence day sequence satisfies constraint penalty charged 
addition absence days necessary satisfy constraint ignored 
resembles evaluation constraint formally 
constraint assign free days night shifts night shifts shift types 
set night contains serial numbers corresponding shift types 
constraint valid night night shift followed wp penaltyp shift shift cons days previous consecutive shifts shift cons days previous consecutive days schedule cons days cons days days consecutive shift cons days zi consecutive shift cons days cons days penaltyp zi consecutive days cons days days night shift consecutive free days 
absence day counts free day 
constraint depends daily sequences values transferred border different planning periods 
number free days night shift previous planning period previous free 
constraint 
constraint assign complete weekends setting constraint allow shift saturday sunday vice versa 
denoted complete entire regulation 
possibility redefining weekends considering friday monday part weekend 
weekend definition value means saturday sunday weekend denotes friday till sunday weekend stands friday till monday weekend saturday till monday weekend 
complete weekend constraint impose shift planned weekend days soon assignment saturday sunday 
scheduled shift friday monday require assignments saturday sunday 
absence days considered free days working days relax constraint 
schedule previous planning period play role evaluation constraint switch planning periods happens weekend 
anrom occur value equals 
de wp penaltyp cons days previous free night schedule st night schedule st night shift night cons days cons days penaltyp cons days cons days shift st cons days note weekend days transferred previous planning period previous previous 
values equal assignment corresponding day day empty full constraint seen 
constraint night shift free weekend shifts midnight scheduled free weekend constraint valid night equals 
ordinary saturday sunday weekends constraint requires night shifts scheduled entire weekend free 
definitions weekends friday saturday sunday restrict schedule similarly 
constraint illustrated 
constraint assign identical shift types weekend constraint denoted identical active creates penalty shift types weekend days 
matter weekend definition includes friday monday constraint looks shifts assigned saturday wp penaltyp weekend days previous weekend days complete wk wk absence fri absence sat absence sun absence mon fri sat sun mon fri schedulep wk sat schedulep wk sun schedulep wk mon schedulep wk fri sat previous sun previous wk mon wk absence fri days wk fri absence sat days wk sat absence sun days wk sun absence mon days wk mon absence absence sat absence sun penaltyp sat sun absence penaltyp sat sun absence fri absence fri sat sun penaltyp sat sun absence fri absence fri mon absence mon sat sun penaltyp sat sun absence mon absence mon sat sun wp penaltyp night week week fri schedule week sat schedule week sun schedule week schedulep week st night penaltyp sat sun schedulep week st night penaltyp fri sat sun sunday 
absence take dummy value constraint order generate lowest possible penalty 
constraint 
constraint maximum number consecutive working weekends constraint limits number weekends duties assigned max consecutive 
matter weekends completely scheduled 
contribute constraint friday monday considered part weekend 
explained constraints order assignments may may constraints values transferred planning period 
number consecutive weekends person schedule previous planning period previous consecutive 
formal representation seen 
constraint maximum number working weekends weeks constraint restriction weekend periods consecutive weeks provided weeks belongs planning period 
maximum number weekends max weekends 
suppose example planning period weeks 
constraint evaluated overlapping periods period starts weeks current period ends week wp penaltyp identical week week sat schedulep week sun schedulep week absence sat days week sat absence sun days week sun penaltyp sat sun absence sat absence sun current period 
number working weekends person previous planning period previous weekends previous weekends previous weekends 
specific request implemented satisfy needs particular users software earlier version anrom formally illustrated 
constraint maximum number assignments bank holidays constraints constraint cumulative 
bank holidays recorded longer period planning period 
person number cumulative assignments bank holidays denoted previous 
maximum number assignments bank holidays regulation bank 
structure bank array length value bank holidays value days 
usually hospitals prefer limit number assignments bank holidays entire year value 
constraint formally demonstrated 
constraint restriction succession shift types constraint minimum time shift types restricts sequences constraints 
current constraint explicitly forbid particular combinations shift types 
constraint minimum time assignments constraint evaluates shifts scheduled consecutive days 
scheduled shift connected day shift starts 
succession constraint provides possibility forbidding certain shifts free day free days certain shifts 
restrictions denoted dimensional structure column row shift type addition empty day 
elements column shift scheduled row shift restriction succession 
day previous planning period influence evaluation constraint wp consecutive weekends previous consecutive penaltyp week week sat schedulep week sun schedulep week consecutive weekends sat sun consecutive weekends max consecutive penaltyp consecutive weekends sat sun current period 
parameter value corresponding assignment unit day person previous planning period occupied 
real world example demonstrating constraint table 
combinations letters rows columns se ee abbreviations shift types practical hospital application 
corresponding shift types table 
constraint patterns pattern complex constraint built combination different pattern types 
patterns guide schedule follow certain predefined cyclic arrangements 
regulation subject pattern 
value serial number corresponding pattern pattern assigned regulation 
pattern pa pa defined array length pattern restricted number weeks 
start date pattern differ personnel member confined approach 
pattern pattern start independent planning period 
denote number week pattern person starts current planning period start 
enables weekends particular days week account definition 
software provides types building blocks patterns modifiable 
order define pattern building blocks assigned day pattern period 
types block pat obligatory assignment shift 
building block specify shift type prevents corresponding day free day 
wp penaltyp period period period previous weekends np weekends week week week sat schedulep week sun schedulep week weekends sat sun weekends max weekends penaltyp pat obligatory assignment certain shift type 
user set shift type 
pat obligatory assignment shift type certain duration preset 
algorithm allows small deviation preset time generally minutes 
pat restriction day 
pat free day 
pat day day type indicated compensation holiday courses family reasons depending type day important constraints see constraint 
pat forbidden shift types 
combination shift types forbidden 
building block provides possibility keeping wednesday free example 
shift types longer start cause violation 
users free assemble building blocks combination pattern 
pattern built pattern blocks corresponding pattern details schematically follows wp bank days previous penaltyp bank schedulep bank days bank days bank penaltyp succession se ee sd sl ll se ee sd sl ll table allowed successions shift types consecutive days represented denotes day scheduled pa pa pattern pattern pat pat 
pat pattern pattern pat pattern pattern pat pattern day type pattern pat pattern 
pattern pat number forbidden shift types corresponds shift wp succession day penaltyp schedulep schedulep schedulep su schedulep schedulep schedule succession schedulep succession st schedulep day pattern incompatible constraints regulation method developed conflicting soft constraints idle 
patterns activities set day days free days known require evaluation day type constraints constraint 
pattern constraint priority day type constraints 
constraints overtime constraint personal constraints constraint remain valid matter pattern 
details constraints idle certain pattern types table presents selection possible pattern type combinations 
practice table includes possible pattern types obtained combining pattern blocks list 
column table presents combination building blocks pattern 
column represents soft constraint problem 
active constraints denoted table 
constraints counter type constraint grouped column simplified representation table 
idle active pattern type combination denoted table 
order overload notations explain details validity different possible counter constraints combined pattern 
formal definition 
constraint counters blocks constraints pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat pat table constraints conflicting selection total set pattern types denotes constraints evaluated corresponding pattern types type counter mean evaluate wp pa st start pattern pa pattern day pa st pa pattern detail pa st penaltyp pa pat schedule pa pat schedule st pa schedule st pa pa pat xd pa pat pat schedule pa pat schedule st pa yd yd xd yd schedulep shift pa personnel members belonging regulation possibility defining maximum value workload balance workload period different planning period 
users define set counters cntr cnt available regulation ward 
defined counters related regulations regulations need related counters 
denote list counters valid regulation counter consists fields subject count counter 
hours assignments days shift types 
different counter defined shift type 
time measure counter 
subjects counted certain time measures weekdays weekends days specified days week day day bank holidays 
start date counter duration counter 
counter restarts time period long start date plus duration finished 
balance counter take value balanced balanced 
counter regulation maximum value set 
value denoted counter maxw cntr 
different regulations counter define maximum value example night shifts weekends period months full time contracts night shifts weekends half time regulation period 
maximum appearance subject count time measure violated counter period planning period belongs constraint generate penalty 
contribution capacity part counter constraint penalty 
counter periods valid planning period requiring evaluation 
order formulation complex assume formulas counter period covers planning period completely 
personnel member balance counter cntr previous planning period denoted counter cntr 
second constraint type evaluated counters complex 
balancing counters requires information personal schedules people regulation related counter 
evaluation balancing organised follows 
step sum sum counter maximum values counter counter cntr personnel member schedule 
maximum values belong agreement corresponding personnel member 
case person holidays counter period maximum number corrected correspondingly see constraint 
number occurrences schedule subject count particular time measure summed people belong regulation includes counter sum counter counter cntr 
note period current planning period period corresponding counter counter start date plus duration personnel counter value previous planning period added 
person balanced value counter calculated multiplying maximum value ratio counter counter 
result rarely number value replaced interval length lower limit integer smaller value small upper limit integer larger equal large 
constraint restrictive user set threshold value counter 
value belongs interval lower limit small upper limit large violation generated 
counters evaluating hours require different threshold daily counters 
threshold value hours constraint 
detailed description constraint seen 
personal constraints possible individual personnel members agreements personnel manager head nurse 
external private obligations fall category hard constraints 
theoretically cancelled emergency situations 
possibilities giving extra weight personal obligation 
reason absence taken account addition importance external commitment 
situations represented constraints 
constraint day prevents personnel member handled day cost function 
depending reason day types requests absence affect value set constraints see constraint 
person right take holiday working year 
want generate penalties person takes holidays period 
illness courses compensation occasional family reasons examples day types placed schedule 
requested days person day denoted days program possibility extra weight multiply weight factor imperative needs 
extra weight valid find structure value extra weight entire ward extra penalty 
system distinguish strong weak day requests penalise correspondingly 
constraint formally defined 
constraint shifts cntr cntr cnt sum counter sum counter wp penaltyp penaltyp max penaltyp balance cntr counter cntr counter schedulep counter counter cntr counter cntr counter cntr sum counter counter cntr sum counter counter maxw cntr counter cntr counter maxw cntr case absence adaptation counter max corresponding correction constraint penaltyp max wp cntr cntr counter maxw cntr sum counter sum counter large cntr small cntr counter cntr large small counter cntr penaltyp balance penaltyp penaltyp max penaltyp balance penaltyp schedulep days penaltyp extra penalty penaltyp shift schedulep extra penaltyp extra penalty people avoid certain shifts particular day planning period shift equals 
rest assignment units planning period value 
recommended avoid conflicts certain activities personal agenda blocking small parts planning period 
idea patterns constraint cyclic 
feature attach stronger weight requests explained respect constraint exists constraint 
requests require stronger penalty extra formal definition seen 
constraint requested assignments cases person wants assigned specific shift type certain day 
set required assignments corresponding assignment unit person denoted requested assignment units value 
explained respect constraint possibility giving higher lower importance requested assignment 
required assignments higher importance structure extra requested value 
system applies weight factor multiplication factor violations personal constraints explained day constraint constraint 
formal illustration 
constraint exists possibility defining tutor personnel member 
constraint implies tutor working penaltyp requested schedulep extra requested penaltyp extra penalty tutor penaltyp schedulep shift shift shift shift person concept set people want time car 
anrom generate penalty tutor working free moment tutor shift overlaps completely shift 
people required time time set tutor 
constraint 
constraint people allowed constraint applies idea 
prevents people involved ward time 
person 
constraint order provide maximal availability people equal skills 
applications family members prefer alternate working time order take care children 
assignments overlapping time schedules violate constraint formally 
summary nurse scheduling model tackled thesis derived real world problem short term personnel rostering belgian hospitals 
chapter introduced novel personnel rostering terminology developed formal penaltyp schedulep shift shift shift shift shift shift model components general nurse rostering framework thesis 
hospital personnel belong various skill categories defined planners 
possibility certain personnel members carry jobs skills 
substitutability personnel flexible hierarchical organisations 
explained detail literature overview chapter 
hard constraints violated sure sufficient number people requested skills scheduled time planning period 
extended list soft constraints enables search algorithms take personal requests balanced workload consideration 
user definable regulations enable high flexibility defining constraints 
group constraints schedules people contracts 
hospitals practice personalised regulations order cope varying preferences related personal life nurses 
cost parameters constraint employees ward see chapter evaluation schedule carried impartial way 
long term fairness obtained appropriate definition counter constraints constraint 
evaluation constraints fair consideration transition consecutive planning periods provided 
part ii iii iv focus solving advanced nurse rostering model introduced chapter 
chapter state art employee scheduling occupied personnel managers operations researchers computer scientists years 
domain covers staffing budgeting short term scheduling problems 
fields variable time horizons strongly interrelated 
scheduling hospital personnel particularly challenging different staffing needs different days shifts 
facilities healthcare institutions clock 
nearly personnel scheduling problems belgian hospitals solved manually 
type planning process referred self scheduling section 
scheduling hand time consuming task head nurse hospitals personnel manager foreman situations 
planners automatic tool test quality constructed schedule 
straightforward constraints working time idle time recurring process 
importance systematic approach create timetables high especially healthcare unacceptable fully support patient care needs 
jobs hospitals hard automate difficult value labour intensive 
great possibilities automated nurse scheduling 
literature overview distinguish hospital personnel scheduling general employee scheduling section 
main purpose problems differ considerably approaches solve 
overview hospital personnel presents problem problem formulation section solution method perspectives section 
general chapter different scheduling approaches various time horizons mentioned 
research concentrates short term timetabling part problem called nurse rostering briefly discuss management decision part 
section especially stresses difference topic research longterm management decision called staffing 
sections centralised unit scheduling tour scheduling self scheduling briefly introduced 
going details approaches solve nurse rostering problems section attractive cyclical schedules section 
section gives comparison problem tackled thesis problems respect particular constraints dimensional criteria 
easier personnel members accept automatically obtained schedule obviously unbiased 
mathematical heuristic approaches easily produce number solutions report quality schedules try divide evenly workers largest benefits automating personnel scheduling process undoubtedly considerable time saving administrative staff involved 
discussing nurse scheduling approaches literature overview compare complexity tackled problems problems addressed project 
nurse scheduling classifications nurse rostering nurse scheduling covers types personnel scheduling 
literature staffing rostering tackle different decision levels 
manual automated scheduling cyclical non cyclical scheduling important decisions lead completely different solutions 
classification concentrate scheduling procedures merely strategic decisions 
literature overviews literature reviews personnel scheduling discussed section 
specifically tackle personnel scheduling healthcare 
overview warner distinguishes major areas research staffing scheduling reallocation nurses 
different criteria defined scheduling part problem 
coverage difference required scheduled number people task quality including fairness stretch length comparable soft constraints considered section stability terms perception nurses schedules generated consistently predict days weekends flexibility system adapt changes environment cost resources consumed making decision personnel manager time computer time interesting combine criteria evaluating schedules address computable standards 
general hospital scheduling point view sense take broad interpretation cost generate schedule account 
sense add criteria personnel cost example list 
nearly criteria hard measure 
coverage calculated provided required number personnel reliably derived 
stability interesting criterion evaluated research thesis 
time warner research harder trustworthy schedules long time advance 
problem today stability easy calculate 
pattern constraint constraint section introduced anrom exactly give personnel request stability 
warner compares scheduling approaches criteria traditional approach schedules generated hand 
advantage respect criteria policy flexible 
cyclical scheduling generally provides schedules easily address personal requests 
cost schedules low method flexible cope changing environments 
computer aided traditional scheduling enables fast complete search schedules 
advantages approach high respect criteria considered 
compared research thesis warner overview oriented staffing decisions briefly discussed section 
presents bibliography early methods personnel rostering healthcare institutions 
early approaches rely manual procedures set arbitrary rules 
restricted applicable problems complexity situations belgian hospitals 
tien list personnel scheduling algorithms restricted healthcare 
arbitrary trial error methods 
tien concentrate hospital scheduling situation united states 
literature overview decompose manpower scheduling problem separated stages determination temporal manpower requirements total manpower requirement recreation blocks recreation schedule shift schedule 
stage stage management decisions called manpower allocation problem belong long term staffing part problem see section 
stages consider defining hospital requirements selecting resources 
problem tackled thesis expects results stage input data scheduling problem 
anrom flexible provides possibility define minimum preferred personnel requirements certain shifts time intervals allows possibility setting different personnel requirements moment day mentioned tien overview 
classification stages include entire short term timetabling part problem preferences constraints personal schedules account 
research thesis tackles stages simultaneously methods solve phase 
automatic interaction manpower allocation automated scheduling engine exists anrom 
interactive program allows re allocating people rescheduling resources simple way 
papers referred overview treat constraints soft anrom hard constraints precedence constraints earlier shifts consecutive days consecutive working days number free days number consecutive free days free weekends number weekends 
tien able classify large number papers stage model covering number stages simultaneously 
believe division simplified capture problem specific features certain problem areas applications 
define objective manpower scheduling hospitals objective develop systematic procedure allocating nurses shifts days ensure continuous high quality service 
organisation provide variable mix nursing skills specialisations satisfy organisational scheduling policies patterns 
central goal reduce personnel cost 
divide nurse scheduling approaches different models heuristic optimising ai methods 
characteristics manpower scheduling hospitals fluctuating demand human effort critical customer convenience 
schedules subject different kinds constraints 
interesting idea base decisions analysis human effort measurement patient satisfaction 
far anrom provides evaluation mathematically measurable constraints terms working time skill classes 
define stages nurse scheduling determine set feasible schedules satisfy constraints select best schedule terms cost coverage criteria fine tune accommodate changes specific shift assignments 
real world problems tackled researchers division categories arbitrary 
difficult categorise problem tackled thesis respect categories 
anrom covers stages simultaneously respecting coverage constraints 
realworld situations problem complexity nearly impossible satisfy constraints stage 
research evaluate schedules terms personnel cost coverage stage 
personnel usually hired longer period planning period pure personnel management decisions belong short term rostering field 
minimum coverage hard constraint approach 
interesting idea compare schedules respect perceived quality personnel members criterion violation constraints criterion 
anrom provides plenty possibilities address changes stage example freezing parts schedule see section interactive scheduling immediate diagnosis violated soft constraints fluctuating daily personnel demands part anrom 
constraints directly related personnel members personally 
sense unlink specific shift assignments stage schedule design assignment different people really influences quality schedule 
overview distinguish optimal heuristic scheduling techniques 
people optimising techniques simplified version real world problems 
problems complex planners apply heuristic techniques accept non optimal solutions 
heuristic scheduling techniques applied generate cyclical schedules cases 
mentioned approaches rule decision support systems 
hospitals wards hospital differ largely difficult integrate experts knowledge workable system 
advocate approach tackling staffing rostering time 
argue separating rostering management decisions leads sub optimal schedules 
case belgian hospitals believe general scheduling procedure significant changes working practices reasons high fluctuation patient needs shifting personnel hospital time recommended acceptable take additional staff lay workers time personnel request match available staff people prefer express personal preferences respect free time preferences differ month month 
planners personnel wishes deteriorate quality problems nearly constrained complex find optimal solution reasonable amount time hospital people accept non optimal schedules 
believe decision support systems address problems unsolvable previously discussed techniques 
decision support system incorporate objectives hospital personnel adding interactive component automatic schedule generation 
database solutions specific problems 
characteristics problems hospitals undefined outset 
drawback analytical formulations rigid incomplete 
easily adapted changing needs sector 
users reluctant enter lot data analytical system 
realise lot obstacles taken account order develop workable decision support system 
bradley martin distinguish basic manpower decisions hospital personnel scheduling staffing personnel scheduling allocation introduced warner 
problem consists determining long term number personnel employed 
people different skills hired assigned certain wards teams 
number personnel expressed terms fte full time equivalents supposed sufficient cover holiday periods annual leave training education 
hiring part time nurses allowing flexible permitting definition different agreements permits closer match personnel demands effective hours worked 
staffing decisions influenced stochastic nature personnel requirements personnel capabilities 
personnel managers deal problem weigh pros cons 
thesis starts results staffing phase 
examples flexible personal education different skills handled anrom 
second phase bradley martin manpower decision scheme conversion expected daily force precise assignments personnel rostering 
consists determining person works shift day matching minimum service requirements constraints personal schedules account 
constraints legal nature result negotiated labour agreements 
better schedules generated problem allows differentiation days week seasonal variations patients needs hard predict 
schedules generated actual patient needs known personnel manager scheduler anticipate personnel requirements 
phase corresponds strongly thesis belgian hospital market 
anrom provide tool calculation personnel requirements 
daily personnel requirements shift hour expected input system 
high flexibility defining minimum preferred personnel requirements possibility handle adding shifts choosing different planning procedures see section allowing overtime reporting possible check certain scenario see section 
considering precise shift assignment personnel anrom provides comparison approaches large range soft constraints personal schedules section 
third phase allocation phase refers assigning people actual sites 
remarkable researchers consider separate phase see 
belgian nurses differ skills regulation preferences allocation better postponed process 
bradley martin classification schedules formally solution method viewpoint just exact cyclical heuristic cyclical exact non cyclical heuristic non cyclical 
benton review factors influencing hospital staffing scheduling united states 
survey hospital managers reveals complexity problem 
discusses staffing history cost reduction important 
second part short term personnel scheduling discussed various constraints nurses schedules taken account 
operations management researchers hospital managers understand linkages decision making staffing scheduling 
hiring part time nurses making pool nurses addition making overtime customary respect 
allows flexibility short notice personnel demand increases 
hospital managers understand stochastic variable nature demand service 
patient care vary wide range arbitrarily number beds 
scheduling issues length shifts number weekends worked days general flexibility nursing staff intertwined issues qualifications nurses temporary nursing services house nursing pools 
cyclical approaches mentioned take preferences account flexible 
researchers collected data different hospitals total wards 
decentralised manual scheduling common approach performed operation large number people ward 
questioned hospitals different skill classes personnel 
personnel shortage solved allowing overtime leading hours day services personnel wards 
full time popular kind part time 
rare nurses doing day night shifts 
cases night done special group personnel generally case belgium 
large number personnel assigned set shift practice 
shifts fixed start times approach anrom hospitals start times day shifts weekdays different start times 
small number constraints comparable constraints handled research extracted survey 
hospitals stricter rules cases split shifts people working days week 
note anrom allows flexible definition constraints regulations approaches mentioned 
soft constraints review limit number weekends worked comparable flexible constraint section limits number weekends weeks set patterns days flexible anrom constraint user define pattern items 
personnel rostering problem addressed anrom corresponds strongly second scheduling phase benton 
constraints features hospitals complex requirements identified belgian hospitals 
hung collected articles nurse scheduling presents overview 
papers study experience new week arrangements 
hung main interest meet requirements patients find arrangements lead high personnel satisfaction 
mainly management constraint issues taken account improve schedules 
examples experiments shifts different length days schedule weeks schedule days weeks self scheduling phd dissertations topic hospital scheduling belong staffing domain warner phase model scheduling nursing personnel hospital tulane university new orleans la unpublished schneider systems analysis optimal manpower utilization health maintenance organizations university florida gainesville florida trivedi optimum allocation float nurses head nurses perspectives university michigan ann arbor michigan unpublished perez integrated methodology solve staffing scheduling problems nursing department university pittsburgh hierarchical approach schedule formulation maintenance uncertainty university pittsburgh developed rule decision support system possibility change add rules number required personnel calculated 
system allows qualitative considerations quantitative values 
flexible nurse scheduling support system arizona state university goal programming formulation including determination possible schedules assignment individual nurses sched ules 
realises formulation requires zero integer program larger available time 
considered part large decision support system incorporate artificial intelligence techniques nurse scheduling process 
vissers patient flow allocation hospital resources eindhoven university technology research focuses analysis design control operational health care processes systems 
special interest areas development process concept allocation shared resources hospital setting 
personnel scheduling part works belongs staffing domain 
quality analysis operationalization application nursing schedule quality rijksuniversiteit groningen thesis describes study support scheduling nurses focusses consequences nursing schedules performance nursing unit 
parts distinguished performance effectiveness providing nursing care efficiency nursing unit influence nursing schedule nursing unit performance 
aickelin genetic algorithms multiple choice optimisation algorithms european business management school university swansea multiple choice problem aickelin strongly related subject thesis 
corresponding part called direct genetic algorithm approach nurse scheduling 
main aim balance feasibility solution cost quality genetic algorithm framework 
meyer auf hofe mit sung ohne university kaiserslautern builds development constraint library commercial personnel planning system 
soft constraints represent different kinds restrictions personal schedules going strict general conditions flexible personal requests costs 
search algorithms combinatorial problems special propagation procedures constraint library 
staffing hospital staffing involves determining number personnel required skills order meet predicted requirements 
practice interrelated considerations task complex 
factors organisational structure characteristics personnel recruitment skill classes personnel working preferences patient needs circumstances particular nursing units significant staffing decision define agreements part time workers decide substitution skill classes allowed people real world problems studied thesis staffing budgeting personnel rostering takes place different levels completely different time horizons 
researchers decomposed nurse rostering problem phases phases phases 
interaction levels certainly necessary practice unworkable handle problems simultaneously time sub optimal short term decisions theoretically avoided 
personnel usually hired longer periods short term rostering period 
staffing hospital management decisions scope project brief summary 
section mainly discover different kinds input data short term timetabling problem 
system discussed thesis preferably tackle general complete staffing decisions 
literature overviews section nearly mention staffing stages 
hospital staffing researchers varying fields pure mathematics operations research artificial intelligence social life sciences 
wolfe young example model minimise cost assigning nurses different skill classes various tasks 
schneider developed mathematical programming models determine optimal manpower utilisation health maintenance organisations 
problem corresponds group practices settings differs nurse scheduling problem hospitals 
different healthcare team configurations considered having people different medical skills 
analytical models combine medical care aspects financial considerations search optimal solution 
developed methods produce results applied early stages setting health maintenance organisation 
warner overview stages nurse staffing nurse scheduling see section nurse reallocation 
staffing problem defined annual decision seasonal variation considered 
consists determining appropriate number full time equivalent nurses skill 
methodology staffing decision proposed warner hospitals accept subject small adaptations 
scheduling phase comes third step reallocation nurses 
phase fine tuning staffing scheduling 
involves determining float nurses assigned units changes 
hospital schedulers potential benefits reallocation step process uncertain 
warner convinced combination stages leads better scheduling policy 
de vries developed framework balance supply demand nursing care 
range balance strict equilibrium 
counts actual capacity utilisation dividing actual workload hour available staff hour 
uniform criteria handled wards hospital 
differences workload wards registered result mechanism ordination wards 
smith daniels literature overview capacity planning healthcare 
distinguish capacity decisions facility resources force resources 
categories decision levels selected acquisition decisions allocation decisions 
acquisition decisions force resources match meaning staffing defined section 
research domain thesis considers allocation decisions force resources assignment workers days shifts 
part deeply studied 
decisions group assignment workers units tasks 
different strategies approaches collected 
smith daniels predict strict staffing timetabling people resources combined objective new large scale health organisations 
easton compare different staffing policies month period large hospital united states 
attempting provide adequate staffing levels meet patients needs attractive schedules satisfy personnel 
research carried management level considering costs annual percentage personnel turnover reflecting dissatisfaction 
common problem hospital environments unplanned capacity time time 
busy periods unscheduled nurses expected slack periods people hours earn full wages 
restrictions shift rotation stretches distribution unattractive higher wages weekend night hour shifts weekend considered 
alternative scheduling patterns called getting common nurse scheduling environments 
patterns involve hours shifts combined days patterns compensation days 
easton discuss possibility working float nurses 
float nurses easily solve temporarily occurring different wards 
recommendable ask float nurses undertake high risk tasks require lot experience working intensive care assisting operating theatre overview presents results different methods compares scheduled hour utilisation paid hours workforce distribution number different tours see section 
unit scheduling centralised scheduling see section 
conclude expected nursing expenses decrease scheduling alternatives increase 
order obtain result nursing requirements obey rules 
research excludes overtime part time hard formalise 
thesis provides staffing policies algorithms handle results management decisions discussed section 
centralised unit scheduling centralised scheduling relieves head nurses time consuming task constructing schedules regular basis 
major advantages approach fairness employees consistent objective impartial application policies opportunities cost containment better resources 
head nurses unit managers responsibility generate schedules locally considered advantage nurses get personalised attention 
consequently personnel members see schedule punishment suspect head nurse give preferential treatments people 
anrom allows unit scheduling handling constraints automatic search procedure major drawbacks method avoided 
plenty possibilities impose constraints policies centralised level 
self scheduling opposed computer decision support systems discussed section self scheduling manual process 
technique time consuming automatic scheduling advantage nurses operate asked advice 
generally performed personnel members coordinated head nurse ward 
nurses personnel collectively develop schedules coverage time related constraints account 
individual personnel members express preferences schedules help setting number people required time personnel manager ensures hospital requirements met 
labour intensive procedure nurses indicate preferences negotiate breaks shift 
effort personnel manager reduced task supervisory 
term interactive scheduling respect miller 
manual scheduling generally adopted hospital wards 
recommended eliminate completely 
anrom provides algorithms generate schedules automatically enables users set specific preferences adapt parameters 
resulting schedules manually adapted better satisfy people 
cyclical scheduling cyclical scheduling concerns organisations person works cycle weeks 
type schedule common day partitioned distinct shifts personnel requirements day shift obey cyclical pattern 
cyclical schedules offer advantages warner 
personnel members know schedule long time advance blocks repeatedly divided evenly unhealthy rotations avoided common apply forward rotation forward rotation met schedule includes shift starting earlier time shift day 
benefits plenty cyclical schedules unfortunately lack generality 
address big changes flexible regulations fluctuating personnel demands personal preferences 
cyclical scheduling requires higher level decision provide precise number skilled personnel members strict personnel tasks 
working cyclical schedules impossible problem correctly stated 
hung presents cyclical pattern short term nurse scheduling 
introduces day hour shifts 
long shifts plenty benefits overlaps strategically timed 
hospitals cope daily peak overloads communication consecutive shifts improved overtime reduced 
hung allows downward substitution order fill shortages certain skill classes 
approach provides permanent shift system schedule nurses rotate 
advantages people time form real team 
benefits social activities personnel members 
scheduling problem implies consideration days reduces complexity problem considerably 
constraints algorithm workforce constraints correspond soft constraints anrom free days week strict version constraint number free weekends set weeks constraint 
algorithm complex implemented hand 
results problems daily personnel requirements constant 
schedules match perfect cyclical schedules high extent 
cyclical personnel rostering problems generated constraint satisfaction applied real world examples see section 
tour scheduling tour scheduling special case cyclical scheduling 
tour scheduling problem simultaneously determining optimal levels nursing resources deploying people set feasible schedules tours 
redefining traditional weeks nurses hospitals implemented new nurse schedules tours 
example alternative scheduling patterns introduced easton section 
combine problem staffing scheduling personnel tour scheduling model 
similar example tour scheduling approach 
easily generated cover personnel requirements cyclical schedules flexible comes addressing slight changes personnel demands expressing personal preferences 
specific problems encountered belgian hospitals cyclical scheduling applicable rare cases 
personnel prefer ad hoc schedules 
schedules address fluctuating hospital demands addition flexibility respect private preferences personnel 
problem dimensions complexity tables help place problem tackled thesis context group problems studied literature 
systematic overview dimensional parameters objectives collected range publications 
thesis particularly concerned real world nature problems tackled flexibility defining shift types regulations skill categories applicability practice considering short term rostering problem main goals distinguished coverage time related constraints personnel table 
mandatory provide assigned personnel time planning period anrom expense violations time related constraints 
approaches personnel requirements hard allow decisions management level short term planning 
anrom algorithm coverage decisions 
model interactive change personnel requirements necessary 
constraints anrom modifiable extendable violations allowed explained 
hard time related constraints fewer strict constraint types 
anrom schedules satisfying realistic 
hard constraints soft constraints coverage anrom burke de causmaecker vanden berghe meyer auf hofe chen yeung warner minimum coverage obligatory warner minimum coverage violated predefined days meisels miller schaerf meisels okada okada okada aickelin dowsland time related warner constraints personnel miller feasibility set constraints table hard soft constraints miller constraints anrom burke meisels meyer auf hofe objectives differ approach approach clear straightforward categories table 
table list possible goals different categories optimising heuristic approaches 
examples include decisions higher level 
examples constraints parameters set quite rare pure theoretical implementations single problem 
systems allow user adapt predefined constraints penalty values needs table 
flexible software systems extendible new constraints complex generate solutions 
generally design cyclical schedules requires short term rostering decisions see section 
requirements set cyclical schedules easier generate search space considerably smaller 
researchers allow small violations coverage constraints see table penalise cost function 
context anrom personnel demands shift time interval expected satisfied 
carefully defined users consistency check indicate infeasibilities section 
anrom provides planning options minimise violations time related constraints combined coverage time related constraints optimising heuristic warner schedules constructed predefined patterns objective minimise people aversion pattern miller nearly optimal solution generated mathematical algorithm anrom burke minimise people violations soft constraints arthur ravindran minimise staff dissatisfaction minimising number staff requests okada okada okada minimise number employees easton mansour arthur ravindran minimise personnel cost meyer auf hofe takes personnel costs account addition cost minimise non negative coverage uniform distribution shortages weekdays minimise deviation scheduled nurses demand minimise deviation scheduled people total capacity regulations warner cost nursing care shortage minimised bailey table objectives expenditure minimise nurse shortages arthur ravindran fixed aickelin aickelin dowsland dowsland warner constraints costs weights weights fixed adaptable musa saxena musa saxena warner tional constraints warner personal unit wide aversion patterns miller miller personal aversion non binding constraints okada user definable anrom cost parame ters burke weil generic model cope dif ferent legal regulations anrom burke anrom weights burke meyer auf hofe meyer auf hofe meisels meisels table flexibility find best coverage situation section 
authors restrict applicability models simplified examples nurse rostering example different shifts short planning horizons limited number possible patterns personnel members identical regulation skill classes hierarchically substitutable higher skill classes jobs replacing lower skilled people see table 
problems people different skill classes substitute user defined way 
approach reflects real world situation occurs belgian hospitals best 
group people skill class experienced better management skills replace head department 
simplified research examples problems defined equal constraints personnel members 
assignment schedules people arbitrary 
realistic examples take part time contracts account provide flexibility define personal agreements 
shown table case personnel shortage hospitals group float nurses assist temporarily 
current version anrom people wards assist busy wards 
procedure evaluate time related constraints different wards 
cyclical semi cyclical non cyclical chan weil flexible respect annual leave unexpected events anrom provides possibility define cyclical patterns constraint superimposed non cyclical schedules warner manual preprocessing number people rotate day night weeks smith personnel members rotating schedule anrom burke aickelin aickelin dowsland meyer auf hofe chan weil miller dowsland okada okada okada schaerf meisels table cyclical non cyclical approaches approaches generate schedules consist days 
step process assignment actual shifts people left head nurse manually 
algorithms developed practical healthcare environments strictly distinct shift types see table 
activities hospitals varied large number user definable shifts allowed 
anrom start times personal result negotiation hospital manager practical reasons see section 
higher number shift types flexible larger search space researchers aware regular changes personnel demands table 
reasons pure cyclical schedules generally workable 
part warner scheduling predict personnel requirements days 
personnel requirements nearly expressed number people required shift type day 
anrom tackles problem flexible way result feedback users system belgian hospitals 
number possible shift types higher problems encountered approach compose schedule different combinations shift types exceptional 
options allowed allowed allowed allowed miller warner hancock anrom certain circumstances occur see section warner meyer auf hofe ahmad schaerf meisels miller warner hancock ahmad day shifts okada okada okada table coverage anrom certain circumstances occur see section schaerf meisels anrom minimum preferred compromise add hours meyer auf hofe defines minimum standard staffing levels treated fuzzy constraints considerably larger penalty number skill categories user definable number skill weil musa sax classes scheduled chen ye okada arthur separately ung okada ravindran hancock warner okada hierarchical substitutability aickelin aickelin dowsland dowsland user definable miller subgroup regular nurses group perform nurses head table skill categories schaerf meisels meisels warner small overlap substitution skill classes allowed related people individually anrom burke see section short planning periods easier generate schedules 
option split period smaller intervals combine schedules 
nearly cases lead sub optimal solutions 
table gives examples realistic theoretical approaches studied literature overview 
number personnel members hospital ward vary far 
cases problem split sub problems algorithms powerful solve problems widely varying dimensions table 
identical miller full time nurses people arthur ravindran full time nurses weil full time nurses warner distinction people chen yeung mixed workforce bailey different regulations ft ht musa saxena various part time options possible user definable anrom see regulations section meyer auf hofe schaerf meisels warner people different contracted workloads float nurses anrom possible people ward see section warner generally nurses assigned unit move zero cost float nurses move meyer auf hofe constrains expenditure trivedi warner table regulation table presents purely theoretical models addition algorithms implemented software packages practical :10.1.1.28.3642
generic systems belong flexible complex problems nearly dimensional parameters section 
fact software systems right column table offer automatic procedures solving widely varying nurse rostering problems 
tables list time related constraints belong category soft constraints anrom section 
researchers set strict values constraints user definable 
compare table table clear flexible definitions exist approaches applicable real scheduling situations 
nurse rostering approaches section scheduling approaches models 
methods grouped arbitrary categorisation optimising heuristic ai methods 
single shift miller shifts defined musa saxena days narasimhan different shifts rotation problem split problems ahmad overlap control strictly distinct overlapping allowed aickelin aickelin dowsland dowsland night shifts scheduled separately certain extent complexity reduced shift problem warner trivedi warner warner hour shifts day weil hour day evening shifts hour night shift hung slightly overlapping hour shifts okada okada okada shifts strict start times different morning shift start time half duration accepted strict start times floating intervals defined length bailey field user definable meyer auf hofe hour shifts hour shifts shifts start time day shifts anrom burke anrom burke see chapter hancock meisels meisels schaerf meisels variable starting times fixed shifts day jacobs table shift types days shifts hours constant ahmad weekdays weekends fluctuating anrom anrom burke burke miller warner miller meyer warner meyer auf auf hofe hofe days ahead aickelin aickelin dowsland dowsland table personnel demand anrom burke warner papers published various aspects healthcare personnel scheduling 
mathematical scheduling approaches objective function optimised subject constraints 
earlier papers nearly examples optimising scheduling algorithms 
researchers attempted develop linear models problems 
comes real world applications pure mathematical algorithms rarely applied 
real world problems np complete tien example call complex travelling salesman problem np complete complex optimising algorithms 
real world problems optimal solution really required heuristic methods developed 
cyclical schedules generally considered difficult generate constructed heuristic techniques 
artificial intelligence techniques nurse scheduling declarative approaches constraint programming expert systems investigated 
approaches relevant today research issues 
papers tackle problem meta heuristic approaches 
days warner longer periods trustworthy respect personnel demand forecast week aickelin aickelin dowsland weeks musa saxena blau sear weeks weeks ahmad maximum days weeks warner miller month smith wiggins year chan weil user defined anrom burke usually weeks table planning period user definable bailey fixed number warner examples nurses miller musa saxena example people aickelin aickelin dowsland dowsland chan weil people ahmad maximum people anrom burke minimised arthur ravindran model relies number nurses function properly easton mansour table staff size optimising approaches mathematical programming methods especially interesting finding optimal solutions useful solve complex real world problems combinatorial complexity 
researchers restrict problem dimensions consider small set constraints models 
mathematical approaches optimising value single objective function 
number experiments carried goal programming multi objective decision making 
theoretical applied practice approaches single problem generic aickelin dowsland dowsland plane anrom meyer auf hofe meisels linear integer programming table applicability approach meisels isolated nurse scheduling general staffing problem solved mathematical stochastic programming techniques 
divide staffing hospitals decision levels policy decisions including operating procedures service centers staff control process staff planning including hiring discharge training reallocation short term scheduling available personnel subject constraints imposed stages 
short term scheduling involves management decisions timetabling problem subject thesis 
number people required fulfil stochastically varying personnel demands determined 
specific skills considered environments quality dependent person 
solution iterative non iterative part 
applied example application 
warner mixed integer quadratic programming formulation calculate number nurses certain skill class number shifts day 
non overlapping shift types hours 
goal function aims minimising difference lower limit number nurses variables number nurses 
adding nursing time employing people cost personnel shortage reduced zero 
minimum staffing requirements consider possibility replace personnel members different skills organisation established standards comparable hospital regulation categories section 
possibility include personal preferences model warner nurses anonymous 
excess nursing supply particular skill class absorb suitable rate shortage skills 
implementation research section builds ideas inspired solutions practice 
drawback approach accurate forecast personnel demand trustworthy period longer days 
due complexity non linear formulation warner advice apply maximum number assignments user definable set values finite capacity constraints anrom burke constraint overtime anrom burke constraint constraint time intervals planning period maximum number shift type maximum number shifts week restrict number free days total number bank holidays miller exact number assignments days hard constraint meyer auf hofe days legal con straint meyer auf hofe minimise overtime meisels chen yeung anrom burke constraint general constraint adjusted shift type anrom burke constraint set shift type meisels hard constraint restricted version limiting total number assignments week organised constraint table soft constraints capacity personal preferences general unspecified meyer auf hofe warner days anrom burke constraint extra information type absence holiday illness educational miller special requests overrule feasibility constraints chen yeung okada okada okada meisels shifts anrom burke constraint days anrom burke constraint possibility define working days specifying particular shift type allow ask specific working days shift anrom burke constraint meisels table soft constraints personal preferences linear programming formulation post optimality analysis applied 
model include personal suggest results considered quality input problem assigning individual nurses specific wards shifts 
warner elaborates previous formulation introducing weights fairness levels 
warner works shift patterns weeks length fixed day night rotation respond differently flexible constraints 
degree freedom construct schedule considerably smaller anrom implemented constraints warner approach predefined violated reducing number possible patterns 
constraints warner belong category soft modifiable constraints approach constraint constraint constraint section 
stretches allow extended weekends days weekends similar flexible weekend length see constraint 
nurses entire wards distribute number penalty weights constraints patterns schedules 
sum weights schedule called cost 
approach allows fair evaluation obtained schedules 
full time nurses example higher amount penalties half time nurses 
sum costs personal schedule part objective function 
global aversion maximum number consecutive days user definable set values constraints miller constraint maximum feasibility maximum anrom burke constraint miller feasibility constraint feasibility maximum warner chen yeung restricted okada okada arthur ravindran okada weil warner allow day weekend implicitly restricted weekend free minimum number anrom burke warner isolated consecutive days constraint working days miller non miller constraint constraint minimum feasibility minimum ity minimum weil minimum isolated days chen yeung min patterns mum patterns avoided warner grouping days avoided working days number aickelin aickelin tive days dowsland set number incorporated maximum number anrom burke shift pattern cost miller pat consecutive free constraint terns containing days days grouping free days table soft constraints constraints minimum number consecutive free days user definable set values constraints anrom burke constraint warner minimum isolated free days patterns anrom burke constraint warner restricted number week patterns day night weeks alternating free weekends nurse specify aversion certain patterns weil minimum isolated free days aickelin aickelin dowsland incorporated shift pattern cost chen yeung minimum patterns avoided miller patterns constraint minimum aim group days aickelin aickelin dowsland rotate night shifts weekend hard constraint restricted constraint weekend working patterns miller days patterns possible patterns musa saxena nurses chose alternative weekends free meyer auf hofe preference working time models common sequences working shifts flexible constraint usually weeks long arthur ravindran possible shift patterns table soft constraints constraints free days night shifts time assignments user definable set values constraints anrom burke minimum number consecutive free days overnight shift type constraint anrom burke constraint defines minimum rest time depends shift types meyer auf hofe obligatory preferred breaks con assignments consecutive shifts anrom burke constraint allow forbid shift sequences sequences shift types mixture day night shifts week consecutive days meyer auf hofe defines minimum preferred rest time tween shifts anrom burke constraint flexible definition shift type okada okada okada appropriate interval series night early day shift night shift lated constraint warner doubling back hours assign ments early day shift night meyer auf hofe undesired sequences free time aickelin aickelin dowsland formulated constraint anrom burke table soft constraints constraints user definable set values balance workload balance anrom burke constraint meyer auf hofe balance working time accounts chen yeung fairness measures warner nurses entire wards distribute limited amount penalty weights constraints miller individual aversion coefficient violations constraints table soft constraints balance workload balance shifts okada okada okada balance night shifts bank holidays month year okada okada okada night shifts evenly distributed day week person long term fair distribution undesired shifts distribution personnel members violations number assignments week distribute shifts evenly nurses schedule compensated scheduling nurses strictly required 
certain parts scheduling done manually optimisation starts weekends assigned hand manual determination people rotate 
simplifies model 
mathematical programming algorithm consists phases search feasibility improvement objective 
time personal constraints allow feasible solution considering number constraints anrom provides solution satisfying soft constraints non existent nearly cases 
personnel shifted order move shortages specified days minimum coverage violated 
time publication algorithm implemented hospitals united states 
hospitals schedule cyclical rosters see benefits approach 
users perceived slight increase quality schedules considerable reduction scheduling time 
automatically generated schedules fine tuned manually just approach thesis 
user definable set values weekends weekends weeks anrom burke constraint weeks miller complete weekends extended weekends compensate weekend number consecutive weekends weeks anrom burke constraint weekends extended fri day monday miller warner stretches allow days weekend encourage extend weekends meyer auf hofe okada okada okada days compensate sunday half days compensate hours saturday preferably warner alternate free weekends ev ery weeks anrom burke constraint musa saxena alternate free working weekends individual nurses choose weekends free miller table soft constraints weekends week arthur ravindran strictly schedule weekend preference days nights user definable set values constraints working history anrom burke influence constraint evaluations see section changes working shifts consecutive days maximum number consecutive patterns people working miller individual aversion index historical schedule quality versus personal preferences anrom burke constraint ahmad nurses right select preferred partners table soft constraints aickelin aickelin dowsland formulated maximum number shift types week constraint planning period constraint defining corresponding regulation aickelin aickelin dowsland cost previous period added current maximum changes minimised miller feasibility constraint okada okada okada different personnel members possible weekend night constraint implemented rom trivedi warner describe branch bound algorithm arrange short term assignment nurses different units called float nurses shortage personnel 
system deal time intervals shift types usually referred early late night shift 
mathematical approaches cope small scale problems 
miller formulated personnel requirements terms minimum preferred number personnel day just anrom section 
scheduled terms days specifying shifts 
characteristics problem quite similar nurse rostering tackled thesis 
includes fewer constraints fewer modifiable features 
personnel members full time contracts belong different skill classes 
certain amount substitutability skill classes organised defining subgroups example perform head nurses 
staffing coverage time related constraints individual preferences weighted 
compared warner approach number unwanted shift patterns higher reducing complexity problem 
time related constraints fewer soft constraints anrom divided groups feasibility set non binding constraints 
non binding constraints stricter versions existing feasibility constraints 
feasibility constraints maximum number assignments person constraint section maximum minimum number consecutive working days previous planning period account constraint 
non binding constraints defined individually nurse consecutive days constraint consecutive free days constraint number working weekends constraint working complete weekends constraint 
constraint miller approach implemented thesis 
limits number consecutive patterns type working day free day working day 
apart objective penalty assigned violated constraint extra weight added reflecting nurse personal perception violation 
anrom way treat constraints individually defining personal agreements weight factors constraint set entire ward 
miller introduce aversion index measure bad particular nurse schedules past 
overtime constraint constraint historical aversion feature part anrom 
personal requests demand day comparable constraint permitted 
granted personal preferences cancel violated binding constraints 
reduce number possible patterns search space 
cyclic coordinate descent algorithm applied look nearly optimal solution 
comparison branch bound algorithm demonstrates algorithm miller requires lower computation time 
obtained solutions feasible 
schedules certain days planning period 
bailey field formulated general mathematical model nurse scheduling problem 
cost function definition sum cost utilising shift type times number occurances shift type schedule 
number constraints imposed schedule 
schedules minimising cumulative costs identified take personal preferences account 
choosing schedule set done manually linear program 
bailey field reduced idle time schedules propose hour scheduling period traditional hour period 
method allows shifts time day 
fuller solves problem aickelin dowsland 
problem described detail section 
xpress mp commercial integer programming software package 
necessary develop extra software order obtain results reasonable amount calculation time 
goal programming mathematical programming techniques flexible cope relative ranking assigned various goals 
restricted optimising single goal criterion 
goal programming defines target level criterion relative priorities achieve goals 
method aims finding solution close possible targets order priorities 
approach called multi criteria method see chapter approach investigated problem thesis 
arthur ravindran propose phase goal programming heuristic nurse scheduling problem 
aim simultaneously minimising priority sequence staff size number staff requests preferences staff dissatisfaction deviation scheduled desired staffing levels 
zero goal programming approach assign days nurses 
heuristically assigned personnel members scheduling process 
problem definition simple compared real world problems encountered thesis 
reduce complexity arthur ravindran recommend scheduling periods week 
nurses full time contracts belong independently scheduled skill classes 
model function properly number nurses recommended 
time related constraints restricted due limit shift patterns nurse 
limit stretch length system strictly schedules weekend 
musa saxena propose interactive heuristic procedure solving nurse rostering problem 
users change relative weights goals scheduling process order take special temporal conditions account 
certainly interesting feature real world problems scheduling circumstances change regularly hard model mathematically 
planning period method introduced chapter problem thesis weight changes allowed 
problem tackled musa saxena people belonging different skill classes 
various part time options defined individual preferences incorporated model 
free working weekends alternate nurses choose weekends 
week planning period single shift scheduled complexity tackled problem remains low 
bailey defined basic objective functions goal programming approach 
goal minimise deviation number nurses scheduled demand period day called time day scheduling 
just anrom staff size fixed hourly coverage maximised approach 
second goal minimises deviations sum days patterns size force called day week scheduling 
goal system tries schedule people contract agreement 
third goal combines day week time day scheduling problems 
bailey demonstrate flexibility method modifying basic objective functions 
computational size studied problems large suggest divide phases determine schedules day week time day schedules assign people proposed schedules 
heuristic assignment schedules algorithm assign shift times days individual nurses 
compared anrom signifies important simplification 
soft constraints anrom related individual personnel members 
presents goal programming approach decision support system 
model aims maximising utilisation full time personnel minimising minimising kinds personnel costs 
provides support staffing decisions nurses preferences 
problem dimensions small compared studied thesis 
exist strictly distinct skill classes 
brief overview scheduling models 
phd formulation require large integer program unsolvable time 
publications nurse scheduling models decomposed simplified 
publications allocating surgical procedures operating rooms 
franz developed multi objective integer linear program health care staff working different locations called multi clinic health regions 
problem involves staffing personnel varying skills minimising travel costs maximising quality service considering personal preferences addition personnel requirements 
compared problem thesis franz developed general optimisation approach covering decisions higher levels short term personnel rostering 
purely looking timetabling problem investigate detail anrom 
chen yeung combine goal programming expert systems 
assigning shift types personnel members carried expert system part approach see section 
goal programming assists satisfying time related constraints personal schedules comparable soft constraints project attempts cover personnel demands 
combine multi criteria approach nurse scheduling problem tabu search see section flexible tool 
order obtain feasible solution set hard constraints differing slightly hard constraints thesis satisfied 
hard constraints related administrative union contract specifications weekend working patterns comparable constraint constraint simplified manner number weekly working days comparable constraint constraint anrom distinguish shift types necessary uniform distribution surplus shortage nurses weekdays hard constraint anrom shortages number personnel time 
soft constraints treated goals reached objective get close possible goals limited number consecutive working days prevent long stretches constraint situations constraint anrom daily requirement supervising personnel anrom users define appropriate personnel requirements particular situation personnel requirements satisfied circumstances grouping days extending weekend 
days grouped anrom constraint weekends extended constraint specification longer weekends weekends include friday monday burke 
method extended define additional constraints specific day personal requests constraint specific working day corresponds constraint satisfying daily demand exactly specific days constraint applicable anrom daily demands hard constraints 
single skill class regular nonoverlapping hour shift types 
nurse works shift time 
rotation 
implies problem split single shift problems reduced complexity 
reasons planning horizon limited weeks 
short term requests individual nurses easier implement scheduling problem remains simple 
real world examples approach produces satisfactory results compared commercial software package cplex 
order really assist head nurses save time user friendly software system developed possible modify weights different objectives 
introduces decision support system nurse scheduling problem polish hospitals 
requirements personal schedules considerably extensive soft constraints thesis results rigid required anrom 
working days free days preferably grouped number shift changes consecutive working days minimised shifts divided evenly nurses 
problem solved stages 
stage simulated annealing approach applied combination multi objective algorithm called pareto simulated annealing order generate set quality solutions 
samples stretches meet objectives satisfactory way 
hospital planner evaluates results interactive way second phase 
mathematical approaches exact methods find feasible set schedules 
real world problem complex publications mention heuristic methods assign patterns people take preferences account 
order optimising algorithms properly researchers simplify large number problem characteristics 
ai methods declarative constraint programming okada okada formal core method prolog assists assignment shifts nurses 
skilled unskilled nurses considered skill classes 
strictly defined shift types overlapping half hour 
extra morning shift scheduled precisely start time regular morning shift half duration 
relative significance various requirements change planning period 
constraints strictly satisfied okada okada find hard define optimal schedule distinguish scheduling task general requirements fulfilled 
scheduling tasks weekdays assign required number personnel night evening shifts 
remaining personnel members assigned day shifts specified 
assign members hour shifts addition night evening shifts 
remaining staff serve morning specified 
bank holidays assign members shifts 
rest personnel free specified 
give compensatory half day worked hours saturday 
give compensatory day worked sunday assign evening shift nurses worked night shift day respecting encountered constraints 
goals general requirements night shifts sunday bank holiday assignments equally divided staff members month year 
interval appropriate number days placed night 
specified number skilled nurses service shift day 
nurse night shift assignments preferably distributed day week 
night sunday bank holiday staff member preferably gain experience working different members possible 
individual preferences days assignments particular shifts taken account possible 
days compensate sunday attendance half days saturday preferably week 
approach stricter anrom 
systematic method assign shifts anrom nearly scheduled penalty cost generated violated constraints 
assignments done manual manner strict procedure visible general requirements 
okada elaborated general scheduling procedure order develop system handle varying institution specific requirements 
declarative program generated interview user models institution specific information 
method represents set role sequences language constraints grammar individual preferences constraints strings multiple criteria evaluate possible schedules personnel members 
account system tries discover best schedules 
problem dimensions comparable extra skill class consisting leaders 
anrom okada system allows flexible definition soft constraints users different types hospitals 
weil reduce complexity constraint satisfaction problem merging constraints eliminating interchangeable values reducing domains 
consider problems shift types day evening shift hours hour night shift 
model generic cope different legal regulations 
time related soft constraints anrom approach strict manner isolated days constraint value isolated days constraint value maximum stretch constraint 
individual preferences included model 
describe software system called scheduling nurses large hospital 
knowledge rules assignments handled applied constraint logic programming tool 
meisels combine constraint networks knowledgebased rules solve employee timetabling problems 
described approach implemented commercial software package called particularly flexible respect defining constraints shifts 
guarantee optimal timetables complexity allowed formulations 
constraint programming approach constraints fall groups mutual exclusion constraints nurse assigned job time introduced hard constraint anrom section anrom allows flexibility see section finite capacity employees limited number daily weekly monthly working hours limited number night shifts employee constraints represented counter comparable constraint 
objectives constraint distribution time employee assignments shift minimum number people certain skill class 
rule part system combines assignment rules constraint rules representations human knowledge 
personal preferences certain shifts tackled assignment rules 
constraint orders assignments preference morning shifts late shifts 
constraint defined anrom 
order model preferences need adapt constraints 
constraint rules handle demand certain types nurses individual nurses addition personal constraints 
real world example meisels describe team nurses hierarchical skill classes assigned different shift types weekly planning periods 
conclude generic non binary constraints constraint networks ordering constraints line preference efficient solve constraint networks 
meisels investigate constraint networks employee timetabling problems 
just flexible problem formulation possible 
approach consists mainly standard constraint processing techniques solve randomly generated test problems 
experiments show domain size variables constraint networks critical factor solvable problems 
meisels tested genetic algorithm results 
meyer auf hofe presents nurse rostering problem hierarchical constraint satisfaction problem 
research resulted development library containing various search algorithms constraint propagation techniques 
part nurse scheduling system tested complex real world problems hospitals fire departments 
model provides possibility flexibly defining personnel requirements provided expressed terms shift types 
enables arbitrary sets shifts adding additional overlapping shift types early day night shift 
anrom personnel requirements differ day day specified minimum preferred size crew attendance 
generated schedules meet requirements legal regulations personnel costs flexibility respect actual expenditure consideration special qualities 
previous considerations belong higher decision level pure short time rostering subject thesis 
clear staffing decisions implemented model 
just input data anrom 
employees contracts regulations thesis determine extent requirements fulfilled different skill categories account 
software enables users adapt needs 
enables definition regulations meyer auf hofe mentions qualified experiences personnel clear system deals 
time related constraints general anrom certainly belong elaborate published approaches 
specific constraints ensure minimum crew hard constraint anrom prefer standard crew scheduling people strictly needed meet requirements considered better comparable planning procedures section compensate weekends explicitly defined constraint anrom easy simulate counter weekends constraint keep working time accounts balance done counters constraint anrom minimisation overtime constraint management vacation absence constraint minimum preferred rest time defined constant values shift types anrom permits rest times depend shift type minimum time defined constraint working time models preferred sequences shifts usually weeks length comparable constraint anrom flexible undesired sequences shifts long chains night shifts free sequences defining strictly anrom allows flexible definition related regulations constraints requirements represented constraints constraint satisfaction approach 
just thesis impossible practice satisfy constraints meyer auf hofe mentions partial constraints satisfaction 
consequently requirements treated order importance 
complex task generate satisfactory schedule practical personnel planning situations anrom method interactive user alter result algorithms hand 
meyer auf hofe builds previous research experiences software system practice 
generic model developed different real world personnel rostering settings corresponds better approach anrom methods discussed section 
hierarchy levels constraint weights defined possible satisfy constraints anyway 
tackling constraint satisfaction nurse rostering constraint optimisation 
fuzzy non crisp constraints introduced approach constraints partially violated partially satisfied 
iterative improvement branch bound constraint propagation algorithm deals fuzzy constraints 
robust handle varying real world formulations nurse rostering problem 
chan weil construct timetables continuous environment healthcare sector 
provide cyclical pattern people entire year general problem characteristics complex anrom 
requirement constraint comparable hard coverage constraint problem tackled thesis 
rosters constructed different shift types flexible respect annual leave unforeseen events breaking cycles 
assigning cyclical timetables constraints relaxed order obtain feasible schedules 
chan weil propose unified model increasing time units days weeks solve constraint logic programming 
generate cyclical solutions simplified version general workforce scheduling problems 
rotating workforce schedules beneficial employees health satisfaction increase performance personnel 
generate allowed satisfying legal constraints shift sequences week planning period 
certain coverage levels guaranteed 
important characteristics schedules length blocks optimal weekend characteristics 
generating type rotating schedule personal preferences extra constraints implemented 
proposed method assist calculating schedules quickly probably simplified large scale healthcare environments 
expert systems decision support systems decision support systems provide possibility developing user interactive integrated staffing rostering approaches nurse scheduling problems 
smith developed decision support system various sets weights providing optimal solutions 
software interactive allows users assign weights different objectives take personal preferences account 
time related constraints basic compared anrom 
decision support system introduced goal programming model see section 
problem dimensions kept small order approach function 
problem thesis far complex tackled proposed method 
bailey describe define objectives goal programming approach see section 
chen yeung schedule full time nurses single skill class hybrid expert system approach 
system handles constraints requested days maximum consecutive working days restricted minimum consecutive free days avoiding patterns minimising overtime 
fairness measures taken consideration 
program attempts meet minimum staff levels applying goal programming module 
anrom minimum coverage hard constraint chen yeung define aspiration levels goal 
minimum staffing requirements particular days relaxed 
expert system involved assigning early late night shifts 
problem dimensions small compared real world situation personnel members regulation skills 
heuristics real world nurse rostering problems quasi uncountable number alternative solutions 
finding optimal solution terms value cost function attained polynomial calculation time np hard 
practice problem size lack knowledge structure nurse rostering problems hinders applicability exact optimisation methods 
heuristics developed obtain high quality schedules real world problems acceptable computation time 
applicability heuristic scheduling algorithms requires clear formulation hospital requirements 
necessary quantify quality different schedules unambiguous way 
heuristic schedulers outline number steps order generate schedule respects constraints 
heuristics developed generate cyclical schedules emulate trial error manner planner construct schedule hand 
section researchers apply meta heuristics realistic attempts solve complex real world scheduling problems 
smith presents interactive algorithm helps scheduler construct cyclical schedule 
algorithm takes coverage constraints days policies account determines number personnel members staffing decision section 
staff members rotating schedules 
smith wiggins developed software system list processing techniques generating non cyclical monthly schedules skill categories allows different kinds part time 
schedules developed person meeting staffing requirements alternating days 
similar done thesis smith earlier 
model incorporates considerable number constraints corresponding soft constraints research patterns constraint days constraint allows specification type leave see section 
just anrom system interactive users manual changes generated schedules 
blau sear generate possible shift patterns week period evaluate respect nurses preferences step 
cyclic descent algorithm second step order find optimal schedule best patterns nurse account 
approach developed wards skill classes substitutability hierarchical 
blau tries distribution unpopular addition frequency employees granted requests shifts days 
anrom feature exist 
anzai miura cyclic descent algorithm ward personnel members identical respect skills regulations 
admit model simplified practical applications 
jennings solve nurse scheduling problem phases 
groups feasible schedules calculated step 
groups respect minimum staffing requirements individual schedule fulfils major working constraints 
second phase best possible aversion score preferences individual nurses calculated 
tackled problems complex skill classes scheduled independently example 
schaerf meisels general definition employee timetabling problems 
define employee timetabling problem assigning employees tasks shifts 
shifts predefined time periods reside time axis 
general problem definition strict coverage constraints flexibility time related constraints 
problem involves exactly meeting coverage set time related constraints trying meet preferences assignments 
general local search introduced allows partial assignments larger search space 
concentrates hill climbing algorithms local search 
technique concentrates different part search space denoting steepness 
approach neighbourhood functions include insert delete replace moves 
approach tested theoretical environments hospital production environment 
meta heuristic scheduling simulated annealing hancock belong rare group researchers allow variable starting times fixed shifts day 
formulate problem respects simplified skill class example integer program 
research thesis chapter allowed penalised 
hancock solve different problem flexibility personnel coverage 
jacobs combine simulated annealing local search generate cyclical schedules continuously operating organisations 
apart hospitals organisations including telecommunications public safety transportation organisations 
face demands labour continuous basis hours day days week 
commonly organisations service continuous demand allow workers schedules hour week 
problem comparable floating personnel demands chapter exceptional scheduling process far complex shift type rostering 
concentrates merely staffing comparing cost alternative personnel scheduling options 
jacobs call problem tour scheduling problem determines daily shift schedules weekly days assignments employees specified planning horizon 
common flexibility alternatives pure tour scheduling encountered practical applications mixture full time part time workers mixed workforce 
approach involves problem reduction prohibits daily shift schedules overlap hour period comparable constraint general 
mathematical problem associated reduction referred discontinuous tour scheduling formulation 
tabu search combine tabu search multi objective approach see goal programming section 
tabu search moves similar moves applied research see section 
moves switch days working days different people anrom assigned shift moved person assignment shift particular day 
problem dimensions smaller anrom possible compare results 
dowsland different neighbourhood search strategies tabu search algorithm 
heuristic oscillates feasible solutions meeting personnel requirements schedules concentrating nurses preferences 
time planning period algorithm provide personnel requested qualities satisfying people granting personal requests fair manner 
attractiveness patterns differs person person 
different skill classes hierarchically substitutable problem dimensions low compared thesis 
planning horizon week different shifts night shifts scheduled separately 
designing generic widely applicable algorithm developed solve personnel scheduling problem particular hospital see aickelin dowsland aickelin 
explains quality results 
genetic algorithms easton mansour developed distributed genetic algorithm employee staffing scheduling problem called tour scheduling 
algorithm aims minimising number personnel members fulfil demands 
fitness function represents violations constraints individual solutions improved local hill climbing operators 
personal preferences implemented 
genetic algorithm works set test problems 
developed genetic algorithm solve staff scheduling problem 
objective minimise total wage cost situation number personnel fixed 
solutions meet total workforce requirements respecting maximum number individual working shifts 
overtime allowed 
problem dimensions basic week planning horizon low number constraints researchers allows flexible starting times shifts 
solutions personnel represented pairs integers giving start times day 
real life problems concludes heuristic mutation operators time consuming 
aickelin wrote phd thesis genetic algorithms multiple choice optimisation problems 
problems introduces method nurse scheduling problem 
problem tackled aickelin dowsland evolutionary approach complex operative genetic algorithm 
problem specific knowledge guide crossover operator hillclimbing operator evolutionary algorithm 
separate soft constraints personnel schedules evaluated 
aickelin dowsland determine value penalty weekly schedules similar warner 
limited number patterns exists evaluating constraints values pattern determined saved 
constraints taken account evaluation patterns days separate constraint mixture day night shifts week organised constraint preference days nights constraint constraint preference certain shifts constraint number consecutive days set number constraint rotating night shifts constraint constraint rotating weekend constraint working history taken consideration cost previous schedule added maximum 
constraint applied anrom 
previous planning period taken account constraints consecutive days rotating nights consecutive days 
corresponds approach thesis see section 
planning period aickelin week constraint really useful provide minimum fairness level employees 
anrom longer planning period value cost function assigned 
constraints taken account aickelin system takes working history account example constraint overtime constraint constraint kinds different counters 
looks planning period week schedules different shift types morning late night shift different skill classes called grades 
nurses preferences change cyclic schedule generated satisfy requirements 
approach aickelin tries decompose problem easier solve sub problems 
night day shifts preferably combined personnel member weekly schedule 
night shifts scheduled separately certain extent 
skill classes handled hierarchical manner higher qualified people replace lower qualified people 
approach works personnel scheduling problem particular hospital 
applicable situation belgian hospitals allocate highly qualified personnel tasks junior nurses see section 
substitutability skill categories personalised practice 
scheduling night shifts separately accordance belgian hospital customs 
evolutionary approach called population operative genetic algorithm applied solve shift problem ahmad 
distinguish hard soft constraints 
feasible schedules satisfy hard constraints coverage constraints personal requests days 
soft constraints time related constraints personal schedules subset soft constraints thesis 
days history personal schedules taken account evaluation 
clear feasible initial schedule created 
initialisation genetic algorithm searches solutions feasible region 
new schedules generated applying point crossover personal schedules worst schedule randomly selected 
search stops predefined number generations reached 
optimisation methods explored increasing number mates crossover diversification application mutation escape operators 
realistic individual cost functions required addition evaluation procedure hospital planner estimate quality schedule 
developed genetic algorithm scheduling nurses various constraints 
skill classes defined personnel requirements weekends differ weekdays 
approach distinction absolute desirable constraints 
absolute constraints minimum coverage skill class constraints equal hard constraints section 
constraints category treated soft constraints anrom maximum number night shifts particular example formulated constraint free day week maximum number assignments week anrom flexible constraint total number free days equals total number bank holidays implemented setting maximum total number assignments total number days minus value constraint night shift early late shift allowed done strictly setting constraint time shifts constraint constraint free days scheduled night shift 
objective function considers weights desirable criteria balance shifts granting requested holidays number night shifts assigned unskilled new nurses crossover applied strings genetic operators absolute constraints violated see section 
shifts exchanged order overcome problem attempting maintain characteristics parents 
compared conventional method implements absolute constraints evaluation function approach generates considerably better results 
general personnel scheduling apart hospital healthcare personnel scheduling organisations require personnel attendance hours day 
glover mcmillan example define general employee scheduling problem tackle design shifts assignment shifts workers problem 
burns carter operations research approach employee scheduling 
main aim design cycles minimise workforce requirements fulfil set constraints 
heuristics solving problem proven optimal 
constraints treated burns carter subset constraints section simplest constraints considered 
developed method optimising workforce scheduling full time half time personnel considering soft constraints 
millar combine possible shift patterns days length 
construct network node represents feasible pattern solve algorithm cplex software 
doctors surgeons hospital personnel normally scheduled way nurses 
cases separate algorithm developed category healthcare personnel graff radford 
locations operating patients addresses example available equipment cars de causmaecker specialised medical equipment play important role sector 
similar problems justice courts 
employee scheduling problems complex hospital scheduling bank sector customs personnel call centers postal centers solved cyclical schedules common production environments 
media personnel example broadcasting stations publishing environments perfect cyclical patterns 
kinds commercial activities require employee scheduling sales assistants cash registers stores telephone sales fast food restaurants form group duties composed short tasks 
personnel requirements task depend strongly time day 
schedules people continuously may undertaking different tasks time 
personnel demands personnel scheduling fluctuating day day number different skill categories personnel generally lower 
personnel timetabling domains include constraints normally considered hospitals 
examples law enforcement tien prison staff police taylor huxley security personnel fire departments service personnel collins locations play role 
schedules address emergency situations addition routine personnel demands 
healthcare emergencies covered assigning typical keep guard duties 
personnel members guard duty called sudden personnel shortage occurs 
military manpower scheduling problems form special group category 
scheduling courses carter laporte exams burke carter laporte teaching personnel schools universities related problem 
constraints groups students programme rooms special facilities problems hard solve 
related problems involve locations audit personnel scheduling generating timetables corne ogden courier services telephone engineers transportation personnel airline stations tien incorporate constraints vehicles routes 
problem definition differs strongly subject thesis 
group problems called crew scheduling beasley cao martins scheduling buses wren rousseau partial driver shifts trains boats airports dowling team people required skills take vehicle place 
situations locations cause extra difficulties crew stays destination point vehicle scheduled back 
personnel rostering techniques developed research certain extent applicable personnel scheduling domains cases lot extra information required 
scheduling approaches non healthcare personnel introduced section section 
problems differ nurse rostering problem section 
bailey models days patterns service organisations hourly fluctuating demands 
distinguishes shift scheduling days scheduling determining number hour shifts needed satisfy fluctuating demands day second determine weekly patterns personnel members 
bailey presents decomposable linear programming approach 
constraints daily level consecutive days staff size overtime belong shift scheduling part problem hourly demand variations changes cost reflected days problem 
goal minimise number patterns highest difference start times week 
developed method solve real world non healthcare employee timetabling problem days especially suitable personnel working remote areas 
minimises number assigned employees respecting strict cyclical schedule 
method optimal dual lp formulation avoids inefficient integer linear programming 
application oil schedule workers remote areas 
apply tabu search generate solutions general employee timetabling problems 
personnel members assigned tasks locations form shifts flexible workload conditions 
method aims long term fair distribution undesired shifts 
different contracts involve different values constraints 
planning period week common 
qualifications employees enable fulfil certain types tasks 
objective function soft constraints implemented weighted sum preferential ability availability personnel members express preferences certain shifts requiring particular skills flexible workload violations number assignments week positive negative evenly distributed personnel members time fairness special shifts achieved counters constraint shift location stability people prefer assigned shift place week time anrom locations subject consider shift stability attained setting minimum value certain shifts constraint 
special shifts defined user typical examples weekend shifts night shifts 
test examples employees method generates solutions requires calculation time 
cowling test hyperheuristics sales summit scheduling problem 
hyperheuristics require problem specific knowledge represent promising research direction building general scheduling systems 
choice function determines low level local search heuristic choose set problem independent algorithms circumstances 
problem consists organising meetings suppliers delegates subject constraints 
problem resemble nurse scheduling problem hyperheuristic approach certainly potential applied different types personnel scheduling problems 
nurse rostering belongs general domain personnel scheduling 
literature personnel scheduling planning levels distinguished staffing covers long term planning horizon intermediate levels cyclical scheduling long term patterns set rostering short term timetabling part 
compared planning scheduling literature personnel problem tackled thesis situated short term rostering problems require management decisions input 
anrom deal staffing human resources problems provides tool generating personal schedules fulfil hospital patient personal needs altering local customs ward 
review chapter compared dimensions complexity related problems description anrom 
setting tables comparison nurse rostering issues clearly state anrom flexible complete model encountered 
provides options setting goal planning algorithms addition flexible personnel requirement formulations kind planning period user definable shift types regulations skill categories importantly extensive set modifiable time related constraints 
second part review discussion different nurse rostering approaches mathematical programming artificial intelligence heuristic meta heuristic approaches manual schedulers tend defend cyclical schedules easier construct flexible 
automatic scheduling generally involves decrease time construct schedule higher satisfaction level personnel 
advanced techniques developed tackle real nurse rostering problems approaches directly suitable solving problem equally difficult anrom 
problem definitions vary widely varying rules habits different countries 
researchers develop solution method directly relates particular problem structure 
employee scheduling approaches briefly mentioned 
main goal constraints comparable nurse rostering problem solution methods general employee timetabling flexible cope problem defined thesis 
set employee timetabling problems provides restrictions considered anrom 
examples locations equipment compared research community done strong arguments importance thesis flexibility approach applicability practice generic problem formulation 
part ii solution framework chapter evaluation solutions search heuristics solving anrom model introduced chapter driven evaluation function estimates quality schedules 
chapter introduce new method model evaluate soft constraints 
implemented series modules corresponding time related constraint personal schedules 
personnel members problem evaluation function sums violations constraints 
users fix parameters set penalty weight unit violation soft constraint 
consider particular cost function approach allows quick evaluation general address kinds resource planning problems time related constraints 
tackle high number specific modifiable constraints different nature constraints section 
simple constraints affecting personal wishes employees global constraints balancing workload people formulated easily method 
addition new constraints relatively straightforward 
major benefit approach lies simple evaluation solutions considering soft constraints evaluation function 
approach deals complex time related constraints conditions related previously planned 
provides clear feedback violation constraints 
slightly modified version chapter published burke de causmaecker petrovic vanden berghe fitness evaluation nurse scheduling problems proceedings congress evolutionary computation cec seoul ieee press burke 
till morning shift late shift night shift table shift types evaluation approach method evaluates group different constraints outlined section 
generally method provides technique calculate extent constraints schedule violated 
main ideas approach guidelines translate real world constraints model explained section 
approach allows evaluation solution resource nurse rostering example resource person 
solution resource evaluated schematic representation constraints order determine value evaluation function solution 
facilitate explanation evaluation method consider simple example consisting week planning period ward people introduced section 
number shift types restricted morning late night shifts table 
personnel members agreement 
implies personal schedules subject set soft constraints 
requested shift assigned nurses belong skill category 
schedule solution depicted dimensional matrix rows represent personal schedules see section 
shift day planning period column matrix 
fig 
shows personnel schedule especially constructed demonstrate solution representation evaluation approach 
schedule previous planning period table 
previous solution defining start values constraints evaluated 
formal description evaluation method basic ideas evaluation method formally section 
assignment units introduced section basic concepts description 
suppose days planning period problem consists shift types assignment units 
set assignment units 
denoted au 
fig 
translated assignment unit schedule fig 

example 
example consists possible shift types day real world previous planning period mon tue wed thu fri sat sun current planning period mon tue wed thu fri sat sun solution basic problem people 
week shift types introduced table planning represented columns assignment unit schedule 
introduce numberings templates put personal schedule order evaluate constraints uniform way 
writing separate algorithm evaluation constraint designed numberings constraints evaluated single algorithm 
evaluation personal schedule performed go starting assignment unit person scheduled 
easy constraints constraint simple numberings suffice 
come complications involving weekends constraint night constraint numberings constructed order allow sufficient abstractions real world details problem 
definition numbering ni mapping set assignment units au set numbers ni au 


total number numberings 
positive integer symbol introduced represent assignment units numbering undefined 
mapping need need conserve sequence 
set constraints different nature selected real world constraints explain approach covers personnel rostering problem see table 
fig 
presents numberings denoted created schedule fig 

value previous planning period current planning period assignment unit representation solution fig 
denotes schedule position differs assigned denotes schedule position value free previous planning period current planning period numberings real world constraints table 
numbering assigned constraints 
constraints related days example numbering consist increasing numbers assignment units corresponding days numbering 
fig 
appropriate numbers identifying previous planning period shown 
numbers initialisation evaluation method 
fact numberings sufficient evaluate selected real world soft constraints table 
values numbering depend nature real world constraints 
numberings provide possibility implementing irregular concepts days bank holidays numberings potentially susceptible set numbering constraints introduced section 
main aims approach chapter reduction effort implementing new real world constraints designing proper soft constraints maximum assignments maximum consecutive days minimum consecutive days maximum consecutive free days minimum consecutive free days maximum assignments day week maximum night shifts minimum consecutive night shifts full weekends table soft constraints column denotes value denotes cost parameter denotes numbering associated constraint numbering 
definitions allow specific 
definition personal schedule person mapping schedulep au assigned free 
personal schedule event occurs assignment unit person assigned shift schedulep 
event numbering associated personal schedule checked constraints 
events generated order assignment units evaluated sequence algorithm see fig 

definition personal schedule schedulep event assignment unit schedulep 
denote set events induced schedulep 
denote set assignment units numbering value undefined 
denote en schedulep set events schedulep defined numbering words en schedulep 
basic idea evaluation method go set en schedulep personal schedule person consider values event en schedulep 
number constraint types numbering limited explain meaning 
numbering constraints values formal description numbering constraints values 
numbering constraint condition checked value evaluation 
numbering constraint values brackets table derived real world constraints values denoted table left part columns 
max total upper limit number events constraints real world constraint penalty costs max total cost max total min total cost min total max pert cost max pert min pert cost min pert max cost max min cost min max consecutive cost max consecutive min consecutive cost min consecutive table constraint values penalty costs numberings fig 
numbers brackets refer corresponding real world constraints table en schedulep max total real world constraints table translated numbering constraints table 
real world constraints table max total value see table 
real world constraints table evaluated max total constraint 
min total lower limit number events en schedulep min total fact evaluation numbering constraint min total required selected elementary set constraints table 
real world constraints constraint patterns constraint required assignments constraint section min total evaluation 
max pert array size representing number numbering maximum number events mapped 
min pert array size similar max pert represents minimum maximum 
constraints table min pert constraint 
realistic rostering problems constraint evaluate real world constraints patterns constraint identical shifts weekends constraint balancing workload constraint section 
convenience introduce new operator definition numbers said consecutive respect numbering number 
numbering maps event en schedulep allows introduce additional constraints max consecutive maximum number consecutive events 
con straint max consecutive numbering real world constraint table value 
min consecutive minimum number consecutive events 
different real world constraints evaluated constraint different numberings required 
constraints numberings respectively 
example value min consecutive numberings 
max maximum gap non consecutive events max 
constraint evaluated max 
value 
min minimum gap non consecutive events min 
constraint table value min numbering 
table list numbering constraints soft constraints introduced section 
counters counter variable initiated evaluation changes procedure order calculate constraint violations 
real world constraints handled single counter counter array required 
counters adjusted course evaluation checked values constraints 
real world constraints described section evaluated different constraint types 
counters total consecutive pert respectively representing total number events numbering number consecutive events number events value numbering number evaluated event 
pert counters count certain scheduling features different time periods count night shifts weekends 
real world constraints table th uses max pert constraint 
value numbering max pert set 
constraints introduced evaluated single algorithm 
section demonstrate schedule fig 
real world constraints table example evaluation approach implemented 
cost parameters evaluation function completely modifiable 
approach allows establishment weight factors adapted needs schedulers 
violation constraint contribute value cost function proportion weight factor 
evaluation approach weight factors denoted term cost followed type numbering constraint defined section 
demonstration cost parameters real world constraints table denoted set right part table 
rwc max total min total max pert min pert max min max cons min cons table numbering constraints evaluation soft constraints anrom column rwc changing regulation skill categories planning period regulation skill category personnel members necessarily constant 
people example change full time part time contracts certain date middle planning period 
introduce wp regulation person day 
possible change regulations implies constraints evaluated change abruptly 
user anrom wants know exactly violations constraints happen introduced split evaluation constraint values contract provide input constraints second 
idea similar procedure fig 
impact previously scheduled planning period current evaluation explained 
considering previous planning period initial values calculated case schedule changes constantly constraint values 
case person receives promotion changes skill category treated equally 
set alternative skill categories updated planning period 
simplest situation occurs personnel member acquires looses alternative skill class affect constraint 
person qp denotes skill category qap denotes set alternative skill categories day 
explained section subscript dropped problem description person unchanged regulation skill category set alternative skills entire planning period 
evaluation mechanism personal schedule evaluated separately 
procedure schematically fig 

evaluation starts initialisation numbering counters schedule previous planning period 
call personal schedule previous planning period person initialisation procedure described fig 

start values important constraint types max consecutive min consecutive max min 
initialisation phase evaluation go event adjusting counters numberings 
method schematically fig 

suppose number corresponding event different value total increased value pert 
depending relationship number event encountered consecutive increased intermediate evaluation consecutive counters performed 
details intermediate evaluation fig 

evaluation reached event planning period final evaluation constraints required fig 

provides values violations constraints schedule 
copy start values fig 
numberings 
find element au belonging update numbering counters intermediate evaluation fig 

find element au belonging solution reached 
perform final evaluation numbering constraints fig 

communicate results output device 
overview evaluation schedule violation values stored appropriate data structures called penalty numbering constraints see fig 
quality schedule terms particular constraint easily traced back 
approach reduces difficulty defining proper cost parameters considerably impact changes parameters immediately visible value constraints violations 
section procedure executed particular personal schedule example fig 

example demonstration method section demonstrate soft constraints section formulated evaluated approach 
data tables section 
follow entire evaluation procedure fig 
different personnel members 
results people tables 
left part table shows initial values counters 
values stored memory change evaluating new solutions 
counters numbering reflect real world constraints particular example see empty fields table 
hardly affect evaluation method impact calculation time memory low 
numbering value counter penalty stored memory 
left part tables initial values counters 
need recalculated evaluation current schedule required 
left right table chronological updating counters illustrated 
due different number assignments personnel members different number events numbering evaluation 
note values counters change time new event initial event event event event event total consecutive pert pert pert pert pert pert pert penalty max total penalty min total penalty max pert penalty min pert penalty max penalty min penalty max consecutive penalty min consecutive table evaluation procedure st person schedule 
total number numberings numbering initialised false consecutive nr ni assignment unit smallest value ni max nr ni assignment unit highest value ni find element au belonging nr ni nr nr max nr nr nr nr consecutive consecutive nr nr numbering initialised true nr nr find previous element au belonging numbering initialised save results 
pseudo code initialisation algorithm 
personal solutions choose explanation consist assignments events planning period 
penalty created intermediate evaluation phase see fig 

event evaluation goes final evaluation phase algorithm see fig 

part algorithm penalty created max consecutive constraint numbering min consecutive 
translating results back feedback planners penalties indicate maximum number assignments consecutive days violated 
addition number consecutive night shifts required 
evaluation solution step step second event creates penalty intermediate evaluation phase fig 

min constraint numbering violated going event corresponding number event corresponding number 
nr nr condition fig 
fulfilled intermediate evaluations executed 
extra violation occurs final evaluation min consecutive constraint violated 
terms real world constraints schedule violates minimum number consecutive free days constraint scheduling complete week 
nr ni nr total total nr nr consecutive consecutive nr nr consecutive min consecutive penalty min consecutive penalty min consecutive cost min consecutive min consecutive consecutive consecutive max consecutive penalty max consecutive penalty max consecutive cost max consecutive max consecutive consecutive nr nr min penalty min penalty min cost min min nr nr nr nr max penalty max penalty max cost max nr nr max consecutive pert nr pert nr nr nr pseudo code intermediate evaluation ends 
explanatory feedback especially interesting practical result calculations planners practice 
considering high number implemented soft constraints anrom section nearly impossible estimation quality schedule sight 
detailed interpretation enabled modular evaluation approach essential practical model 
real world issues figures give idea importance quick evaluation scheme solutions nurse rostering problem tackled anrom 
hospital wards number wards hundreds access planning system 
modest ward consists people different shift types different soft constraints personal schedule 
length encountered planning period weeks 
iteration evolutionary initial event event event event event total consecutive pert pert pert pert pert pert pert penalty max total penalty min total penalty max pert penalty min pert penalty max penalty min penalty max consecutive penalty min consecutive table evaluation procedure th person schedule 
total max total penalty max total penalty max total cost max total total max total total min total penalty min total penalty min total cost min total min total total consecutive max consecutive penalty max consecutive penalty max consecutive cost max consecutive consecutive max consecutive consecutive min consecutive penalty min consecutive penalty min consecutive cost min consecutive min consecutive consecutive ni maps event pert max pert penalty max pert penalty max pert cost max pert pert max pert pert min pert penalty min pert penalty min pert cost min pert min pert pert ni ni ni event max penalty max penalty max cost max ni ni ni event max pseudo code final evaluation algorithm algorithms described chapter requires approximately evaluations cost function 
ibm rs takes minute perform iterations 
evaluation approach introduced chapter perfectly suitable personnel scheduling problems section generally timetabling scheduling problems burke paechter especially evolutionary algorithms applied 
new evaluation approach nurse rostering problem proven effective 
simple evaluation function independent number character constraints imposed system 
problem complex current approach enables fast evaluation solutions 
crucial high number cycles typical meta heuristic algorithms 
introduced concept numberings form generic way evaluating constraints 
provide structural technique modifying existing constraints handling new constraints 
modular nature approach allows evaluation method provide feedback planners assist interpretation quality schedule 
novel evaluation approach applicable application domains 
chapter planning procedures describing meta heuristic approaches nurse rostering problems introduce pre post planning heuristics combined algorithms chapter 
separate planning options order isolate meta heuristics typical objectives anrom model applied practice 
fig 
schematically demonstrates order planning procedures bold appear total planning process 
experiments real world data revealed benefit dividing rostering problem sub problems opted anrom executing planning procedures skill category 
large box fig 
indicates part solution framework executed group people belonging skill category 
meta heuristics specified search algorithm maintaining coverage plugged 
boxes level denote exclusive options accept repair consistency check discovers infeasibilities 
nearly data nurse scheduling model anrom modifiable 
enables large number diverse teams cover hospital needs system offers general approach solve problems 
drawback practice danger defining problem way causes difficulties algorithms find quality feasible solutions 
modules built especially overcome particular problems introduced chapter 
relaxation procedures introduced chapter subject de causmaecker vanden berghe relaxation coverage constraints hospital personnel rostering accepted publication proceedings th international conference practice theory automated timetabling gent de causmaecker vanden berghe 
section consistency check algorithm assisting planner repairing infeasibilities data introduced 
certain circumstances require consistency check freezing initialise floating shifts initialisation previous current empty floating skill category feasible coverage procedures minimum preferred post plan post planning meta heuristics shifts hours result accept repair shift type floating infeasible criterion overview solution framework reduced search space section 
case previously generated schedule partly re 
possible options creating initial schedule explained section 
section explain problem divided sub problems related skill categories 
large solution space split smaller regions necessarily completely disjunctive 
number strategies applied search heuristics ended introduced section 
section indicate criteria adjustable widely varying problems 
consistency check available people hard constraints strict feasible solution exists planners opt relax 
planning system developed handling infeasible problems 
cases hard constraints strong obvious preliminary check soft constraints satisfied 
situation ward consists people simple example calculate number people sufficient satisfy personnel required add see lower number 
suppose people available particular day staff working predefined pattern special requests ask day constraint person asks late shift constraint 
patterns staff day follows people day constraint pat people early shift constraint pat people night shift constraint pat 
suppose early shifts required day question 
people available planned things early shift soft constraints certainly violated satisfying hard constraints 
accepting suggested changes hard constraints consistency check algorithm repair fig 
hard constraint early shifts day relaxed allowing soft constraints satisfied 
order expect insight hospital planners set data simple consistency check performed planning starts 
pre planning process number available people certain skill category compared number requested people skill category time planning period 
depending formulation personnel demands see section algorithm checks shift types time intervals 
apart obvious check hard constraints users demanded extra check precedence soft constraints constraint patterns personal requests days shifts requested shift assignments 
initially time slots available assignments shifts skill category fig 

clear distinction hard soft constraints 
algorithm shift type personnel requirements schematically fig 

consistency check respects planning order skill categories 
personnel member list available time slots shift types time intervals constructed 
personnel requirements reduced number requested assignments constraint requested shifts patterns building blocks pat pat constraint 
fig 
term requirements specific options minimum preferred personnel requirements 
explain section hard coverage constraints scheduling algorithm derived personnel requirements planning options 
assignments removed scheduling algorithms see section 
variable occupied introduced algorithm keep track areas schedule free assignments 
free days patterns type pat render corresponding days schedule occupied 
estimating number assignments schedule algorithm starts calculating requested shifts constraint considered assignment unit 
patterns constraint type pat shift type corresponding day assignment unit added assignments 
cases set equal assignment units day imaginary assignment 
certain assignment unit assignments exceed requirements value set equal excess 
case algorithm searches positions schedule extra assignments 
time units assignments requirements try add shifts unoccupied schedule positions pattern type pat pat corresponds duration st assignments step set value equal corresponding days 
excess requirements algorithm continues assigning shifts personal schedules unoccupied particular day 
schedules value equals number assignments minus number requirements 
blocking entire day assignment strict necessary 
real world situations rarely occurs personnel member healthcare assigned shift day 
better identify problems inconsistent 
manual planners free accept ignore suggested modifications 
flexibility algorithm allows doing preliminary assignments accurate diagnosis 
algorithms implemented solving anrom alternative skill categories taken account 
assignments alternative qualifications help satisfy constraint problem wp pa pa st start pattern pa pattern day pa st pa pattern detail pa st schedulep available skill category hard constraints search space schedulep qp qap soft constraints day shift st required assignment pa pa pat pa st pa pat shift pa pa pat pa pat pa pat st pa unavailable timeslots day shift required pa pa pat pa pat pa pat pa st pa pat start schedulep schedulep pref search required pa pa pat st pa 
wp pa st start pattern pa pattern day pa st pa pattern detail pa st schematic procedure consistency check available personnel case shift type personnel requirements 
search pa pa pat pa shift search pa pa pat search schematic procedure consistency check available personnel case shift type personnel requirements inconsistent main skill category 
scenarios equivalent possible personnel requirement formulations rm rp rim rip 
system handle infeasible problems algorithm reduces personnel requirements unavoidable violation detected 
user starts planning algorithm informs inconsistencies personnel demands 
inconsistencies minimum preferred shift type requirements represented structures floating requirements correspondingly denoted values requirements cause inconsistency 
value larger indicates requirements increased value negative number requires corresponding decrease 
user accept remedy relaxing personnel requirements necessary deliberately choose violate soft constraints checked 
options demonstrated overview fig 

freezing parts schedule working area rostering algorithms restricted reasons 
common approach personnel members ward scheduled till day planning period 
distinguish different reasons limit search space 
explained sections 
people scheduled automatically hospital situations require interactive way scheduling certain personnel members 
possible generate schedule particular nurses hand 
order maintain personal schedules forbidden rostering algorithms add remove assignment 
personnel member schedule planned automatically value 
frozen personal schedules evaluated soft constraints way schedules personnel members part automatic planning process 
frozen personal schedules relax hard constraints 
schedules frozen areas restricted search space 
calculation time generally corresponding full schedules 
hand frozen areas constrain solution space harder find quality solution 
rigid assignment shifts free days parts schedule frozen planning algorithms difficult meet personnel requirements quality solution remaining personnel members remaining time interval 
freeze parts personal schedules start date personal contracts necessarily coincide start times planning period 
option provides possibility allocating personnel temporarily wards 
anrom minimum period people allocated ward day 
day shift assignments 
value person employed ward day 
soft constraints evaluated entire planning period 
people employed entire planning period adjustment cost function necessary certain constraints constraint 
example values ap introduced section take time person service hospital account 
activities personnel members working wards calculated evaluating hard constraints current ward 
contribute evaluation cost function 
section explained personnel members change regulation skill category planning period 
transition regulation affect search space 
transition skill categories change global search space changes search space skill categories concerned see section 
order overload pseudo code algorithms section assume skill categories remain planning period 
freeze periods time schedules frozen partially time 
case urgent rescheduling required recommended disturb existing personal schedules drastically 
typical problem healthcare occurs personal member able perform assigned shifts example illness period 
re planning ward modified constraints personnel prefer previously generated schedules remain unchanged possible 
generating schedule scratch new situation constraints account probably lead better quality terms cost function personnel want 
personal schedules affected replacements due option section 
anrom modelled possibility freezing time intervals schedule 
frozen parts restricted start planning period 
denote day planning period start day 
hard constraints satisfied frozen parts search space rostering algorithms add remove assignment periods 
scheduled shifts periods contribute evaluation cost function looks entire planning period 
fig 
explains parts schedule belong search space rostering algorithms 
search space initialisation start non frozen parts schedule initialisation scheduling algorithm consists phases constructing feasible initial solution 
suffices schedule satisfy hard constraints called feasible 
phase input loaded option selected section 
second phase schedule feasible 
input initialisation practical planning problems possible strategies introduced 
current schedule option starts currently available schedule result previous attempt generate solution planning existed certain extra restrictions occurred 
regularly rostering happen go 
hospital planner quickly calculate schedule check certain constraints personal preferences making changes constraints personnel requirements necessary final schedule calculated 
option take current schedule input initialisation phase especially useful urgent changes existing schedule required 
real life may happen personnel member suddenly ill replaced 
course emergency supposed change schedule people drastically 
practical occasions schedulers applying option freezing tool section 
schedule previous planning period option useful schedule previous planning period high quality constraints current previous planning period similar 
recommended previous schedule input number personnel periods planning periods include bank holidays 
advice select option pattern constraint period different planning period personnel members 
empty schedule simplest input option starts initialisation empty schedule 
initial schedule constructors may attractive experiments show difficult meta heuristic algorithms produce schedules comparable quality starting random initial schedule 
case algorithm local minimum problems escaping 
create feasible solution entire search space anrom problem element search space called schedule corresponds potential solution 
call schedule feasible satisfies hard constraints 
order satisfy hard constraints initial schedule algorithm adds removes shifts personnel requirements planning options section met 
process takes soft constraints account mainly random driven 
users software anrom suggested force satisfaction personal requests days shifts constraint satisfaction patterns constraint 
precisely constraints play role determining consistency data section 
contradictory previously explained concept treating cost function sums violations constraints chapter evaluation means 
planners freely set cost parameters schedule personal constraints violated preferred better quality schedules respect cost function containing violations particular constraints 
fig 
describes entire initialisation phase procedure explained step step 
initialisation executed skill category 
group people belonging skill category extended people skill alternative qualification 
fig 
demonstrate schedule divided sub schedules correspond skill category 
personnel members alternative qualifications simplified example person changes skill category planning period 
initialisation algorithm attempt case empty schedule option holds satisfy pattern constraint 
pattern requires obligatory shift algorithm assigns randomly chosen shift corresponding people provided assignment violates hard constraint number people required 
order general simplified notation requirements see section schedule skill category qo skill category qo alternative skill category qo alternative example division schedule partial schedules solved skill category 
moves skill category qo qo planning period 
belongs qo allowed carry shifts qo belongs qo alternative qualification qo 
personnel requirements 
notation specify minimum preferred requirements 
section explain type personnel requirements determine hard coverage constraints 
case shift type specified building block pat pattern constraint shift assigned person shortage schedule shift particular pattern day 
rd building block pat algorithm randomly chooses shift type specified duration allowing small deviation preset time personnel requirements met 
algorithm moves iterative phase stops personnel requirements fulfilled assignment unit maximum number attempts assign randomly reached 
maximum number attempts function number people carry jobs skill category 
called max attempts fig 

case number scheduled personnel low meet requirements algorithm assign corresponding shift type randomly personal schedule provided part search space qualification 
experiments varying real world problems led procedure described section 
turned satisfying approach tackling large set nurse rostering problems occurring practice 
explain procedure detail 
personnel divided groups equal eagerness assignment 
case people group assignment shift currently scheduled skill category assignment fails 
algorithm stops random assignment possible group person group assignment 
person exists algorithm moves group 
people belong group considered part schedule assignment unit belongs search space 
number groups adding assignments called add max fig 

add people having personal request shift corresponding time scheduled constraint assignment 
add people working predefined pattern pat type corresponds day detail shift scheduled empty schedule assignment unit 
add people working predefined pattern pat type corresponds day detail duration shift scheduled deviation empty schedule assignment unit 
add people scheduled skill category main skill category personal request high importance day shift time scheduled see constraint empty schedule assignment unit 
add people skill category alternative personal request high importance day shift time scheduled empty schedule assignment unit 
add people belong skill category marked assignment skill category scheduled run skill category lower planning order hierarchy 
add people skill category alternative marked assignment skill category scheduled run skill category lower planning order hierarchy different main skill category particular people 
add people authorised skill category empty schedule shift 
group add exceptional marked assignment removed order enable assignment schedule feasible 
analogous procedure developed removing shifts schedule exceeds requirements certain shifts 
identify rem max different groups see fig 

hierarchy groups removal shift applied listed rem people skill category alternative marked see section assignment skill category scheduled 
rem people belong skill category marked assignment 
rem people skill category alternative assignment skill category scheduled 
rem people belong skill category assignment 
section explain personnel requirements initialisation depend planning options 
planning order skill categories hard constraints violated see section shifts skill category assigned unqualified people 
section explained personnel requirements defined skill category 
skill category scheduled separately 
dividing rostering sub problems reduces search space 
number personnel belonging skill category considerably smaller entire staff ward 
number shifts assigned translated floating requirements lower 
case people permission carry shifts main skill category difficulties 
planning qualification stopped algorithm moves qualification temporarily freezes assigned shifts 
fixed shifts hinder planning qualifications especially occur schedule person main skill category 
planners freely arrange order qualifications planned 
denote planning order skill categories qo 
elements list length qualification numbers qo qualification plan 
fig 
procedure planning shifts different qualifications predefined order schematically 
schedulep schedulep pref attempt st add max random add schedulep pref attempts attempts max attempts attempts st rem max random rem schedulep attempts attempts max attempts attempts schematic representation construction feasible schedule shift type requirements schedule feasible respect personnel requirements see section execute planning algorithm group people having main alternative skill replacing assignments schedule correspond pref skill categories scheduled sequentially intuitively schedulers choose hierarchical order skill categories starting head nurse qualification cleaners 
beneficial plan constrained categories qualifications unavoidable deploy people main skill categories 
suppose example ward consisting head nurse large group regular nurses 
imagine regular nurses designated substitute head nurses 
head nurse presence required day shift weekdays head nurse replaced absent denoted constraint 
difficult case assign regular nurse required duties absence head nurse 
problem particular regular nurse schedule empty time head nurse qualification planned 
problem regular nurse replace head nurse duty assigned assignment unit substitute schedule 
section stated person assigned shift 
involves head nurse assigned shift probably severe reason absent 
particular diversification algorithm implemented software system anrom part hybrid planning algorithms introduced chapters fig 
especially developed avoid problems 
diversification algorithm looks soft constraints constraint moves generally produces worse solution 
algorithm investigates people take shifts assigned absence days personnel members 
nurses absent considered 
goal find replacement personnel belonging skill category duty moved 
person available people skill category alternative considered 
elaborated version algorithm replacements considered 
details extended algorithm explained simple example demonstrate aim 
suppose nurse assignment shift type absence day 
nurse skilled carry shift 
suppose absence particular day assignment shift type skill category 
extra step algorithm try move assignment search space schedulep schedulep pref day shift pat search space bq day shift pat schedulep day shift pat schedulep pat pa pa pat pat pat st pa pat wx pa st start pattern pa pattern day pa st pa pattern detail pa st search algorithm increase quality schedule case unfortunate planning order skill categories third nurse schedule assignment put schedule 
algorithm useful followed proper search algorithm generally improve quality 
real world situations require rescheduling personnel members single skill category 
case freezing concerns assignments skill categories 
coverage procedures practice number required personnel certain day completely strict 
experienced planners know reasonable plan personnel required 
exist clear rules decisions planners anrom optionally choose different coverage strategies 
section introduced difference minimum preferred personnel requirements 
solution fewer assignments minimum requirements maximum requirements violates hard constraints 
framework provides planning options set coverage constraints hard constraints rostering algorithms 
possible allow post planning algorithms change coverage schedule generated 
explain options detail 
minimum preferred requirements hospital scheduler choose plan minimum personnel requirements preferred requirements hard constraints 
entire planning process number planned shifts minimal preferred change applying meta heuristics discussed 
planning option holds shift type floating requirements 
plan preferred requirements strictly setting hard constraints option allows range hard constraints considered satisfied 
algorithm organise option takes minimum requirements hard constraints 
result calculated scheduling algorithms chapter system searches possibilities adding shifts schedule involve extra violation soft constraints 
day difference scheduled preferred requirements system adds shift personal schedule improves quality schedule 
adding pair shifts consecutive days personal schedule harmful adding isolated shift 
competition best candidates assign extra shifts twin assignments considered provided assigned shifts causes excess respect preferred personnel requirements schedulep schedulep pref penaltyp penalty schedulep start rpq extra extra best pref best pref post planning algorithm satisfy preferred shift type personnel requirements better skill category schedule 
complexity finding optimal twins add schedule exponential reduced search selection best set equal shift types consecutive days personal schedule 
entire procedure illustrated fig 

floating personnel requirements slightly different approach needed 
searching best candidate assign extra shift extra pair shifts add switches shift longer shift pair shifts single shift longer entire duration single shift pair shifts longer see chapter 
system allows flexible approach providing threshold value individual cost function value 
case algorithm add extra assignments personal cost function value exceed threshold 
shift type added schedule planning algorithm stopped marked 
location marked shifts schedule result post processing algorithm shift types assigned search algorithms look entire search space 
recommended planning activities remember shift removals harm schedule 
explained importance marking section 
adding hours option add shifts people necessarily respect hard preferred personnel coverage constraints hold course planning 
pure post planning option 
schedule calculated algorithm searches personal schedule best point time assign extra shifts 
constraint holds shift added shift occurs personnel requirements day skill category 
default happen increase value cost function 
explained previous option possibility setting threshold 
case threshold determines maximum number excess hours overtime 
personal schedule reached number algorithm add extra shifts 
just previous section shifts added preferred requirements extra shifts marked 
procedure explained fig 

better terms cost function add pair shift types consecutive days possibility evaluated searching best time assign extra shifts 
criterion applying meta heuristics introduced chapters criterion required 
tabu search algorithms chapter hospitals quite years criteria fine tuned time 
experience forms basis criteria algorithms introduced sections 
search space skill category depends largely number people group schedule frozen length non frozen part planning period total number available shift types scheduled 
depending schedule supposed planners choose number options combining different hybrid algorithms 
single algorithm hybrid approaches separate criterion applied 
steepest descent algorithm soon exists improvement neighbourhood 
diversification greedy algorithms introduced section iteration improvement 
criteria specific meta heuristics discussed introducing algorithms chapter 
penaltyp penalty schedulep wp best hours previous schedulep shift duration st hours max best start rpq search schedulep penaltyp shift schedulep pref new penalty penalty schedulep schedulep penaltyp new penaltyp best best penaltyp new penaltyp rpq rpq search schedulep search schedulep penaltyp shift schedulep pref schedulep pref new penalty penalty schedulep schedulep schedulep penaltyp new penaltyp best best penaltyp new penaltyp schedulep pref hours shift best schedulep pref hours shift post planning algorithm decrease people skill category chapter floating personnel requirements motivation alternative way modelling personnel requirements provided hospital administrators schedulers apply nurse rostering software anrom see section practice 
approach direct response requirements demands difficult real world scheduling problems 
model accommodate customs practices employed personnel planners hospitals allows high flexibility constructing timetables 
new formulation developed algorithms introduced part iii thesis applied practice 
decided describe floating personnel requirements model part ii available alternative path solution framework 
meta heuristics part iii applicable traditional shift type requirements new floating requirements model 
hospitals define high number shift types match typical activities institution allow kinds part time employment 
personnel requirements nearly expressed number people required shift type day 
tackle flexible approach chapter 
number possible shift types higher problems encountered approach compose schedule different combinations shift types far author aware unique 
meta heuristics chapter depend categorising staff certain shift types 
planners practice find hard translate real world situation generated daily staff complement rigorous staff duty categories 
approach described chapter concentrates advanced representation daily personnel requirements healthcare institutions 
formulating requirements number personnel needed skill category shift type day planning period introduce floating personnel requirements section 
floating personnel requirements allow representation personnel requirements day terms time intervals start times personnel attendance 
formulation enables provision greater choice shift part time reduces amount unproductive time enables shifts split combined 
algorithmic approach handle new formulation 
set series experiments indicating approach take account requests requirements hospital schedulers generates higher quality schedules compared shift type approaches 
obtained results better sense various specific real world soft constraints constraint satisfied scheduling appropriate shift type combinations shift type approach fixed shift types restrict solution space 
section examples similar coverage problems literature 
section elaborates problem definition starting real world hospital practices induced development floating personnel requirements chapter 
section introduce step approach construct shift type schedule time personnel requirements 
method preserves desirable features metaheuristics explained part iii thesis 
examples illustrating working algorithms section 
section discuss impact floating requirements method resulting timetable 
comparison shift type personnel requirements model section 
coverage constraints matter coverage constraints formulated shift type requirements floating requirements section search algorithms violate constraints iterations 
coverage remains hard constraint 
table literature review brief overview possible shift types coverage constraints 
automatic scheduling systems strictly defined shifts 
approaches applied practice provide user definable shift definitions meisels meisels meyer auf hofe schaerf meisels 
apart anrom researchers allow time interval formulation coverage constraints 
bailey field hour scheduling periods start time day 
applying linear program identify shift configurations minimise costs 
findings hour concept reduces idle time considerably compared approaches hour shifts 
hancock coverage soft constraint 
penalised 
size tackled problems small compared carried anrom chapter 
jacobs allow flexible start times concerned staffing short term rostering 
cyclical shift days schedules generated limited planning horizon 
allows flexible start times shifts 
coverage hard constraint number personnel fixed 
dimensions tackled problems low compared problem size anrom 
schedules periods week provides personal schedules pairs start times 
problem definition chapter result feedback users nurse rostering package belgian hospitals 
personnel requirements time intervals floating requirements personnel requirements express number personnel skill category needed staff ward 
set management usually expressed terms minimum number personnel needed preferred number personnel available 
minimum number personnel strictly meets personnel needed carry preferred number personnel ameliorate atmosphere reducing workload staff members see section 
requirements formulated terms shift types traditional approach literature terms times 
personnel requirements depend time day day week formal description personnel requirements refer section 
table presents example personnel requirements certain day planning period expressed number required shift types skill category 
deduce personnel shift types till short early early day late short late night table set shift types dataset requirements shift types possible allocate kinds employment shift period 
call new representation floating personnel requirements 
floating requirements defined time interval basis 
expressed varying number personnel needed skill category day see section 
main goal approach described thesis construct timetable covering personnel requirements shift types applied hospital 
practice time intervals correspond exactly start time actual shift types 
compared shift type requirements floating requirements method changes size structure problem 
hand problem definition intricate complexity constructing feasible solutions increases 
find satisfactory combination shift types hospital fulfil floating requirements 
hand search space considerably enlarged 
formulation creates extra degree freedom construct high quality timetable floating requirements usually met different combinations shift types 
considering shift types table period till covered short early late combination early short late set 
traditional shift type approach planner determine shift type combination part input data restricting number possible solutions 
switching satisfying shift type combinations try improve personal timetables see section 
representation floating personnel requirements need shift types start times table 
depiction shift types form legal sequences joining tightly 
shift types joining relationship considered consecutive terms time 
implication floating personnel requirements approach joining shift types replaced shift type covering time intervals covered individual shift types 
shift types common start time considered relationship 
practical applications case time gaps overlaps considered restrictive 
explained section 
number personnel needed skill category terms time intervals ti days called ti minimum requirements ti preferred requirements 
elementary real world example dataset explain formulation floating personnel requirements 
problem consists different shift types table 
practice legal sequences shift types equally obvious example 
gap overlap consecutive shifts cause problems 
real world situations overlap time required consider shift types joining tightly 
necessary colleagues discussion shift changes 
lead situations replaced couple 
examples hospitals great matter join tightly short early early day late short late night short early early day late short late night table shift types join tightly dataset shifts 
cleaner nurse aid tasks example necessarily uninterrupted 
order construct timetables important know shift types precede follow affecting hospital activities 
dataset example shift types join tightly considered consecutive terms time see table simplest case hardly occurs practice 
reduce complexity example assume situation described table holds skill categories 
table presents personnel requirements day week 
minimum preferred number required personnel columns rim rip respectively 
step approach method discussed chapter step approach high quality timetable 
goal step find roster satisfies personnel requirements account soft constraints personal schedules 
step efficient hybrid tabu search algorithm applied required shift types set 
details algorithm explained section 
meta heuristic algorithms violate hard constraints process finding schedule matching soft constraints possible 
initialisation initialisation phase employed traditional shift type approach maintained current algorithms see section 
extra initialisation step performed translate personnel requirements time intervals shift types 
consistency check algorithm introduced previous chapter section gives guidelines repair infeasibilities translate subjective requirements practical situations 
result step input regular initialisation step see fig 
section 
procedure explained part section 
head nurse regular nurse nurse aid till rim rip till rim rip till rim rip monday tuesday wednesday thursday friday saturday sunday table minimum rim preferred rip personnel requirements dataset period week different skill categories initialisation shift type approach aim initialisation step construct feasible solution 
quality solution taken account scheduling algorithms described section cope input long violate hard constraints 
anrom provides options constructing initial schedule section 
initialisation floating personnel requirements approach main goal find day planning period shift type combinations fulfil personnel requirements 
tackle particular phase timetabling problem enumerate solutions linear program described fig 

far encountered problems translation floating requirements shift type combinations solved exact method 
algorithm provides possible shift type combinations fulfilling personnel requirements 
linear problem try find sets shift types point time personnel requirements satisfied surplus personnel 
set contains shift types join tightly exactly matching start time corrections taken account 
practice initialisation algorithm randomly chooses shift type combinations enumerated possibilities 
method translate floating personnel requirements shift type combinations described fig 
exists shift type combination matches floating requirements 
problem arises shift type combination case linear programming approach produce solution 
consider developing flexible heuristic initialisation phase order dead 
flexible heuristic provide graceful degradation system producing shift type combination comes close possible floating requirements 
planners practice find better get warning message requirements infeasible 
expect guidelines personnel requirements realistic translatable shift types 
advisory warning helps planners increase diminish personnel requirements certain time interval order find shift type set satisfying requirements 
addition consistency check introduced section anrom provides extension deal floating personnel requirements 
particular algorithm gives feedback users inconsistent hard constraints terms floating personnel requirements 
improving quality schedule part nurse rostering algorithm meta heuristics applied preliminary schedule order reduce violations soft constraints 
step apply algorithms shift type personnel requirements see part iii 
solve linear problem enumerate possibilities solution subject difference solution list length giving number appearances corresponding shift type solution 
difference list length ti element depicting difference rim available rim ordered list length ti containing personnel requirements corresponding time pit 
pit ordered list length ti containing start times time intervals floating requirements addition start times shift types duplicates removed 
available list length ti element giving number personnel scheduled time pit solution relaxation account available ion solution relaxation shift starts pit pit shift ends relaxation list length ti elements list give relaxation personnel requirements join matrix 
join shift shift relaxation min solution solution shift shift relaxation min solution solution relaxation join matrix dimension depicting shift types join tightly 
linear problem initialisation phase case floating personnel requirements minimum requirements rim meta heuristics shift type environment shift type requirements formulation complex floating requirements approach anrom 
initialisation phase satisfies hard constraints problem apply algorithms maintaining solution hard constraints shift type schedule 
aim timetabling algorithm assigned shifts order diminish value cost function 
apply meta heuristics developed shift type requirements especially hybrid tabu search algorithms see section implemented software package anrom 
tabu search algorithm uses environment shifts moved person day see single shift day neighbourhood section 
step referred move 
restriction moves conserve satisfaction hard constraints 
shift certain skill category moved person qualified 
move shift person assigned shift day considered forbidden 
explain details moves detail section 
meta heuristics floating requirements environment compound algorithm shift types personal schedules moved person moves briefly mentioned explained detail section shift type combinations satisfying personnel requirements varied swaps see fig 
section 
alternating system possibility satisfying personnel requirements different shift type combinations enlarges solution space considerably affecting calculation time high extent 
order keep computing time tuned alternation moves swaps experimentally adjusting criteria see fig 

planning algorithm starts tabu search moves detailed description see section criterion moves reached number iterations improvement 
switching floating personnel requirements approach allow diversification applying swaps schedule 
day planning period search possible alternatives shift type combinations 
best swaps performed case quality timetable deteriorates 
cost function chapter applicable floating requirements modification schedules set shift types 
allows quick calculation best people assign new set shift types 
suppose example person works period want swap shift type provided defined joining tightly 
algorithms find best terms cost function personnel pair carry shift type 
swap worsens initialise schedule result fig 
best schedule number steps number steps maximum number steps number moves number swaps weekend step worst personal schedule number moves maximum number moves move best schedule number moves number steps best schedule number moves number moves number steps number steps number swaps swap best schedule number steps best schedule number swaps number swaps number weekend steps maximum number weekend steps weekend step best schedule number steps best schedule number weekend steps number weekend steps worst personal schedule worst personal schedule best schedule number steps number weekend steps best schedule worst personal schedule worst personal schedule best schedule greedy shuffling best schedule maximum number steps maximum number moves maximum number weekend steps calculated algorithm starts function dimensions search space denotes cost function heuristics scheduling phase floating personnel requirements initialisation shift types initialisation hard constraints hybrid tabu search algorithm moves swaps result diagram heuristics nurse rostering problem floating personnel requirements schedule swap step repeated 
swapping tabu search moves enable improvement schedule 
combined process moves swaps repeated criterion calculating iterations improvement reached 
depending problem characteristics wishes planner step described 
dimensions problem number personnel scheduled number different shift types duration planning period influence size solution space 
dimensions depict criterion criteria moves 
fig 
demonstrates advanced option steps explained section executed 
diagram modules section demonstrate newly developed parts algorithm situated 
initialisation summarised section fully elaborated chapter represented single frame fig 

diagram shows part scheme affected floating personnel requirements 
case personnel requirements expressed floating requirements pieces dashed frames employed 
anrom model original way shift type personnel requirements simply skips parts algorithm represented dashed boxes diagram 
examples considering example tables possibilities combine shifts weekdays minimum preferred requirements 
schedule violate different combinations shift types satisfy regular nurse personnel requirements weekdays monday friday see table 
rim rip rim rim rim rip rip rip short early early day late short late night table possible solutions regular nurses weekday dataset rim cx minimum personnel requirements shift type combination rip cx preferred personnel requirements shift type combination index denotes number combination rim rip short early early day late short late night table possible solutions regular nurses weekend day dataset possible shift type combinations minimum personnel requirements denoted mc preferred personnel requirements pc 
results weekend requirements table 
table see combination satisfies personnel requirements 
study mechanism swaps counted period month number appearances shift type combination initially algorithm 
results weekdays displayed table 
swaps algorithm preference second solution table 
probably due character soft constraints personal schedules 
dataset example restriction rim rim rim initially result algorithm table appearance shift type combinations initial solution final result dataset rim cx minimum personnel requirements shift type combination index join tightly ee se sd sl ll ee se sd sl ll table shift types join tightly dataset maximum number shift type person planning period 
solutions mc mc combine lower number shift types circumstances lead violations particular constraint mentioned 
example information tables taken real world shift types represented abbreviation names particular hospital 
example illustrates extra difficulty joining tightly constraint shift types 
easy understand shift types se join tightly 
se lasts till starts till requirements table personnel requirements single qualification day dataset combinations ee se sd sl ll table possible shift type combinations satisfying daily personnel demand dataset sl ll ee se ll ee sl se possible swaps shift types dataset 
impact characteristic replacing person working people switch shifts affect hard constraints schedule 
example exceptions expected shift type joins ll sl ll derived table 
joins exceptional sl ll starts 
fig 
illustrates possible swaps shift type sets 
nurse working shift till replaced colleagues working sl shift till ll shift till respectively allowed sequences 
opposite swap significant replace nurses sl ll shift doing shift number personnel ward reduced 
fig 
demonstrates people doing ee shift replaced people se ll shift vice versa 
allowed swaps shift types derived shown line fig 

test results solutions reach satisfying hard constraints classic approach defining shift type personnel requirements constructed swap steps floating requirements approach 
direct simple way comparing approach chapter specifically developed method compare approaches 
run tests shift type floating requirements datasets proper algorithms problem type 
tests carried kinds datasets traditional algorithms eliminating swaps floating requirements dataset floating algorithms enabling swaps shift type dataset 
schematically kinds experiments set comparison reasons allowing swaps ward traditional shift type personnel requirements 
omitting swaps ward floating personnel requirements 
compare algorithms tabu search algorithm constructed traditional shift type personnel requirements section 
algorithm floating personnel requirements subject chapter 
purposes comparison selected algorithm practice trade time taken quality solution complex algorithm described chapter 
scheduling algorithm chosen ts algorithm described detail section 
ts consists tabu search moves combined complete weekends worst personal schedule 
discussed detail section 
aim model explained chapter demonstrate possibility formulating time interval problem producing shift type solution high quality 
results experiments data obtained schedulers applying anrom tables 
column value represents value evaluation function 
duration calculations ibm power pc rs column time 
test sets downloaded extern greet vandenberghe 
reasons confidentiality available data sets correspond hospitals apply software anrom 
necessary reformat input data slightly tests 
explain user data constructed shift type formulation fit floating approach vice versa 
traditional problem tp people shift types defined shift types join tightly careful way 
forbid gaps overlaps shift types allow shift type swaps cover exactly time period 
traditional problem rm rm rp value time value time tp traditional algorithm floating algorithm tp traditional algorithm floating algorithm table test results traditional floating algorithm problem traditional personnel demand formulation second problem tp people shift types constructed possibilities swaps 
case allow swap overlap swap gap 
test data formulated floating requirement problems introduced previous pages dataset dataset required reformatting order match shift type formulation 
translating floating requirements shift type personnel requirements necessary create input traditional algorithm performed different ways 
fp fp slight variations dataset fp dataset problem 
approach fp requirements equal combination shift types resulting branch bound algorithm solution 
days planning period exactly floating requirements result terms shift type requirements days 
fp data set constructed original set fp differs translation shift type requirements 
solution construct random solution day planning period 
fp daily shift type combinations fp chosen randomly possibilities dataset 
experiments matching minimum personnel requirements exactly minimum requirements tables feasible domain minimum preferred personnel requirements min pref explained section obviously lead different results 
stated chapter tests prove minimising calculation time maximising solution quality compatible 
calculation time floating algorithm higher traditional algorithm 
holds experiments table 
expectations number possible solutions increased considerably restricting schedule shift type combination 
test examples quality result better floating algorithm 
splitting long shift types shorter shifts assigning different people vice versa overcome soft constraint obstacles personal schedules 
fp fp data set table basically surprising traditional algorithm produces better results floating problem rim rim rip value time value time fp traditional algorithm floating algorithm fp traditional algorithm floating algorithm fp traditional algorithm floating algorithm table test results traditional floating algorithm problem floating personnel demand formulation fp variant 
shift type combinations chosen randomly fp initialisation results wide variety daily shift type combinations 
traditional algorithm swap steps scattered shift type combinations maintained calculations 
soft constraints minimum number consecutive shifts type easier solve shift types consecutive days equal 
considerable increase solution space due high number shift type combinations satisfying requirements reveals calculation time fp 
comparison approaches possible problems similar solved 
formulation floating personnel requirements simplifies practical nurse rostering model corresponds real world situation 
developed approach deals expanded nurse rostering problem produces better results approaches developed complex problem 
floating personnel requirements identified reflect particular difficulties hospital planners face automating personnel rostering process 
users planning software asked carefully define personnel requirements order avoid infeasibilities translation shift types 
floating requirements mechanism simplifies task 
input data personnel rostering software floating personnel requirements matches real world practice hospitals better 
structured patients needs unproductive time reduced 
enabling considerably higher number shift type combinations staff hospital tasks provides possibilities individual personnel members satisfy private needs wishes 
spite time consuming rostering personnel problems shift type base floating personnel approach induces better quality schedules respect personal constraints staff soft constraints 
search space feasible solutions considerably larger shift type personnel requirements defined 
higher degree freedom allows tackling particular soft constraint problems making different shift type combinations construction timetable 
allows kinds part time employment requiring restrictive decisions shift type combinations personnel manager planner 
experiments shown personnel hospitals benefit new approach 
possible meta heuristics developed shift type requirements chapter remains possible current methods 
fact search space shift type approach subset search space floating requirements 
floating personnel requirements important improvement shift type system 
approach provides higher level personnel satisfaction creates plenty possibilities part time employment leads efficient flexible organisations 
benefits allowing floating personnel requirements demonstrated chapter 
hospital patients served better especially personnel new model offers plenty possibilities part time contracts combining personal objectives organisational requirements 
meta heuristics part iii thesis carried shift type floating requirements applicable wide range personnel rostering environments 
part iii meta heuristics hybrids chapter variable neighbourhood search nurse rostering meta heuristics discussed part iii aimed specific individual hospitals 
contrary intention algorithms applicable healthcare sector 
applying nurse rostering algorithms real world problems involves generic heuristics deal widely varying hospital customs requirements 
escaping local optima hard search algorithms broad variety constraints 
constraints refer particular duties nurses constraints restrict consecutive shifts days weekends see chapter 
research chapter attempts problem specific characteristics dynamically change search heuristics neighbourhoods order overcome typical drawbacks meta heuristics complex combinatorial problems 
hidden parts solution space accessible applying appropriate problem specific neighbourhoods 
method allows better exploration search space combining short sighted neighbourhoods greedy ones 
experiments demonstrate heuristics neighbourhoods assembled finding quality schedules relatively short calculation time 
meta heuristics see chapter developed solving nurse rostering problem anrom apply neighbourhoods introduced chapter local search algorithms 
studying different real world implementations rostering problem cases appeared previously developed heuristics manage overcome difficulties originate particular constraint combinations 
quality resulting schedule terms cost function necessarily bad hard hospital planners accept results acceptable small manipulations schedule hand 
characteristics constraints different quality solutions hard find search space 
main ideas variable neighbourhood approach published burke de causmaecker petrovic vanden berghe variable neighbourhood search nurse rostering problems proceedings th metaheuristics international conference mic porto 
chapter organised follows 
introduce variable neighbourhood search section 
different neighbourhoods search heuristics defined section 
section explain heuristics combined order reach results remain big barriers single neighbourhood strategies 
ideas combine repair restart different heuristics applying neighbourhoods explored 
results developed variable neighbourhood algorithms discussed section conclude section 
variable neighbourhood search idea changing neighbourhoods performing meta heuristic search introduced glover means increasing performance algorithms 
suggests diversification strategies explore search space combinatorial problems effectively 
possible way reach regions barriers landscape solutions 
variable neighbourhood search combines local search heuristics local optima neighbourhood changes escape local optima :10.1.1.13.8989
approach applicable combination meta heuristic algorithms diversification strategy local search 
variable neighbourhood search applied np hard problems hansen 
examples travelling salesman problem location allocation problem clustering problem bilinear programming problem bilinear constraints 
applications linear ordering problem gonz les rez brito scheduling problems den st tzle vehicle routing brand median hansen mladenovi max cut cardinality tree problem mladenovi different approaches exist selecting neighbourhoods going neighbourhood 
recommended shake solution randomly swap solution neighbourhood current 
variable neighbourhood search nurse rostering problem approach chapter set neighbourhood structures specific information problem defined 
search heuristic fails improve solution certain amount time number iterations algorithm dynamically chooses different neighbourhood 
anrom personnel requirements hard constraints call solutions satisfying feasible solutions 
solution provide sufficient number qualified personnel time entire planning period 
meta heuristics developed nurse rostering problem remain feasible part search space iterations 
consider matrix representation fig 

feasibility respect coverage constraints section persist vertical displacements assignments allowed 
order satisfy hard constraints required skills section procedure algorithms prevents assignments shifted unqualified personnel introduced procedures chapter 
guarantee satisfaction hard constraints shifts moved person schedule day 
moves allowed person qualified perform duty provided person assigned shift 
search process algorithms aim minimising number violations soft constraints cost parameters account see section 
cost function motor search heuristics interpret problem characteristics algorithms quite blind certain improvements 
improving schedule respect constraint solution worse respect 
constraints particular importance research chapter 
constructed neighbourhoods order especially satisfy number constraints see section 
neighbourhoods nurse rostering problem introduce number different neighbourhoods enable heuristics search solutions respect evaluation function chapter 
expand group sets new neighbourhoods related soft constraints neighbourhoods inspired manual scheduling processes 
single shift day simplest neighbourhood schedule includes feasible solutions differ position scheduled shift 
basic neighbourhood meta heuristic approaches chapter executed problem described chapter 
note position refers personnel member head nurse nurse hn nurse nurse mon tue wed thu possible moves single shift day neighbourhood shifts early day late night schedule assigned shift belongs 
single shift day neighbourhood considers solutions nearest environment current solution 
order create neighbourhood suffices consider allowed displacements scheduled shift personal schedule contains shift type person schedule empty shift type day 
refer displacements moves 
solution corresponding move violate hard constraints provided nd person qualified shift type 
fig 
presents allowed moves single shift day neighbourhood 
small ward consisting head nurse regular nurses 
regular nurses head nurse skill alternative 
person replace head nurse absence 
small part realistic planning period shown shift types early day late night 
arrows demonstrate possible moves neighbourhood 
note head nurse day shifts moved schedules nurse violate hard constraint skills 
shifts regular nurses nurse moved head nurse schedule 
shifts moved horizontally schedule disturb equilibrium required personnel members scheduled ones 
soft constraint related neighbourhoods neighbourhoods introduced section comparable perceive landscape solution space different way 
searching schedules better satisfy particular soft constraint algorithms blind quality result 
main reasons neighbourhoods applied final phase search algorithm 
inspiration developing neighbourhoods comes real world suggestions hospital planners wanted violations weekend constraints reduced solution example 
looking automatically generated schedule point shortcomings respect sensitive constraints 
solving problems necessarily lead week sat sun week sat sun possible moves weekend neighbourhood search interesting part solution space generally hinder search 
philosophy working abstractions individual constraints search better solutions see propose neighbourhoods act means diversification 
examples soft constraint related neighbourhoods weekend neighbourhood neighbourhood consists solutions differing current solution assignment shift day weekend 
weekend neighbourhood importance case constraint complete weekends constraint applied personnel members 
weekend neighbourhood empty constraint complete weekends fully satisfied 
completely satisfied personal schedules subject complete weekends constraint violation constraint current solution 
fig 
illustrates possible moves weekend neighbourhood simple example 
overtime neighbourhood ou neighbourhood considers moving shifts people overtime violation constraint people violation constraint people additional assignments generate penalty overtime 
extension neighbourhood includes moves increase sum overtime violations schedule 
alternative qualifications neighbourhood aq experienced people authority carry skill categories order replace absent personnel members 
better quality schedule number replacements low constraint 
neighbourhood consists schedules assignment involves skill category replacement 
personal requests neighbourhood pr soft constraint personal requests constraint modifiable cost parameter soft constraints 
circumstances result scheduling algorithm violate constraints 
nature cost function sums violations soft constraints guarantees solution biased solving particular constraint 
nurses sensitive personal request certain shift day 
particular neighbourhood developed search solutions satisfy personal requests 
moving solution personal requests neighbourhood size neighbourhood decrease 
ideal schedules penalties personal requests neighbourhood empty 
violated constraint neighbourhood mv modular nature cost function allows isolating constraints 
neighbourhood pays attention moves affecting particular constraint constraint violated highest extent 
consider number violations constraint personal schedule order determine violated constraint 
mv neighbourhood contains solutions simplest neighbourhood single shift day evaluation function temporarily takes higher value cost parameter violated constraint 
doing search guided different parts search space 
having applied mv neighbourhood cost parameters set back original values 
swapping large sections personal schedules system anrom allows hospital schedulers change schedule manually 
manipulations aim creating schedules visually satisfying 
inspired design category neighbourhood try imitate common real world manipulations schedules 
previous group neighbourhoods neighbouring solutions differ position single shift type set neighbourhoods looks schedules differ considerably original solution 
larger groups shifts harmful quality schedule moving single shifts 
drawback applying category neighbourhoods number neighbouring solutions large calculation time 
examples shuffle neighbourhood sh shuffle environment considers switches part worst terms evaluation function personal schedule schedule 
moving duties simple single shift day neighbourhood assignments period day number days equal half planning period switched person worst schedule person ward 
possible feasible shuffles planning period considered see fig 
part shuffle neighbourhood 
greedy shuffling neighbourhood gs greedy shuffling environment comparable shuffle environment bigger 
consists possible shuffles set people schedule 
call shuffling greedy neighbourhood large time consuming evaluate steps involve large sections schedule 
core shuffle neighbourhood cs compared shuffle neighbourhood apply extra shuffle moving internal part shuffle section back see fig 

core shuffle neighbourhood considers consecutive swaps pair personal schedules time 
phase move greedy shuffling neighbourhood performed 
swapped time interval move new time interval consisting full days swapped back second phase 
second interval start day time interval day ends 
shaking solution shaking allows algorithm explore solution space random manner 
defined move random element neighbourhood 
moves soft constraint neighbourhoods act shakes 
generally improve quality schedule provide different viewpoint search space 
examples shakes shake shift making random move single shift day neighbourhood seldom interesting shake 
chances high move improve solution take schedule unexplored area environment remains unchanged moving single shift 
shake weekends swap weekend personnel members nature weekend constraints prohibits single shift day neighbourhood remove weekend shifts personal schedule 
removing adding single shift saturday sunday create violations complete weekends constraint constraints 
removing adding simultaneously saturday sunday shift pair person schedule overcome barriers cost function 
weekend shake improve quality schedule taken solution considerably different area search space 
shake people swap personal schedules swapping personal schedules people different regulations normally schedules worse 
people head nurse nurse hn nurse nurse head nurse nurse hn nurse nurse head nurse nurse hn nurse nurse head nurse nurse hn nurse nurse mon tue wed thu mon tue wed thu mon tue wed thu mon tue wed thu possible moves shuffle neighbourhood personal schedules nurse nurse clarity moves instances schedule head nurse nurse hn nurse nurse head nurse nurse hn nurse nurse head nurse nurse hn nurse nurse head nurse nurse hn nurse nurse mon tue wed thu mon tue wed thu mon tue wed thu mon tue wed thu examples moves nurse nurse core shuffle neighbourhood neighbourhood steepest descent tabu search single shift day pr personal requests weekend mv worst constraint sh shuffle gs greedy shuffle cs core shuffle table selection pairs neighbourhoods heuristics test results table regulations personal schedules different terms value cost function 
purpose diversification certainly shake 
value cost function rarely drop shake 
variable neighbourhood approaches refer section initialisation phase 
variable neighbourhood experiments chapter applied initialisation option required shifts assigned random 
heuristics start feasible schedules see procedure fig 
section 
nurse rostering problem solved scheduling skill category separately explained section 
opted applying different search algorithms problem steepest descent tabu search 
details tabu search algorithm explained thoroughly chapter 
steepest descent tabu search decision move random set equally solutions 
layouts implemented swapping algorithms combining different neighbourhoods set defined section 
experiments carried section test variable neighbourhood approach fixed algorithm neighbourhood pairs 
table presents combinations 
previous experiments indicated better combine single shift day neighbourhood tabu search steepest descent 
problems realistic size plenty non tabu moves guide search environment local optimum steepest descent ends local optimum 
long improving moves search shuffle neighbourhoods continues 
deliberately combine neighbourhoods steepest descent generally reach quality local optima provided explored search smaller size neighbourhood 
applying tabu search shuffle neighbourhoods increase calculation time enormously 
experiments carried shaking neighbourhood section 
shaking generally contribute finding quality schedules preliminary experiments decided keep algorithm 
neighbourhoods soft constraint class nd category section effect shakes search improvements partial set soft constraints 
searching neighbourhoods seen process reduces contribution particular soft constraint cost function relevant random shakes 
steepest descent algorithm obviously stops neighbourhood contains better solution current 
criterion tabu search algorithm defined number iterations improvement see section 
number depends problem dimensions number people number shift types length planning period 
criterion heuristic neighbourhood combination reached heuristic switches neighbourhood search algorithm 
starting initial solution local search applied neighbourhood 
local optimum better current best solution algorithm moves continues search neighbourhood employs neighbourhood applies corresponding search method 
algorithm stops search neighbourhood lead improvement 
fig 
presents schematic overview procedure 
initialise search select set algorithm neighbourhoods pairs neighbourhoods nk 
kmax set success rate define local criterion construct initial feasible solution set kmax explore neighbourhood local criterion met best solution better pseudo code variable neighbourhood approach neighbourhoods applied different orders affect result search considerably 
shown best approach develop algorithms exploring neighbourhoods increasing size 
neighbourhood generates better solution algorithm starts finest neighbourhood generally time consuming 
explained detail chapter beneficial practice greedy step finer neighbourhood explored 
holds core shuffle neighbourhood brings solution shape 
nature gs cs environments leads solutions judged positively schedulers 
additional moves worsen quality bring solution new area stimulates hospital planners explore manually 
greedy shuffling core shuffling neighbourhood recommended large problems calculation time limited 
exploring entire neighbourhood approaches extremely intensive task 
soft constraint related neighbourhoods equally interesting type problem 
developed method avoid neighbourhoods contribute better solutions 
probability selecting particular soft constraint neighbourhood change course calculations depending results produced neighbourhood 
introduce parameter decreased time neighbourhood lead better solutions see fig 
neighbourhood applied iterations 
single shift day neighbourhood initially high value soft constraint related neighbourhoods preferably start smaller values 
changing neighbourhood possible start solution reached previous algorithm neighbourhood combination best solution 
appeared experiments best solution recommendable start position 
variable neighbourhood search applied real world problems ignore calculation time 
test data sets complex large hospital schedulers expect schedule generated reasonable calculation time 
test results experiments carried real world data different combinations neighbourhoods defined section 
test data obtained website extern greet vandenberghe 
depending nature test data certain soft constraints applied corresponding cost parameter high effect neighbourhoods corresponding soft constraints completely different 
table test results simple real world problem algorithm rsd rs result time cs cs sh cs gs mv gs see fig 
pr sh gs pr sh gs pr sh gs pr sh cs sh gs cs sh gs sh gs sh gs sh gs pr sh gs cs pr sh gs cs table test results algorithms combining different neighbourhoods search variety algorithms 
scheduled ward consists personnel members shift types stringent soft constraints simultaneous satisfaction produce feasible schedule 
combination applied neighbourhoods denoted abbreviations column algorithm 
abbreviations stand neighbourhoods section 
summarise neighbourhoods test example single shift day weekend violated constraint mv shuffle sh greedy shuffle gs core shuffle cs 
columns restart options repeat large section neighbourhoods best solution global criterion reached time rsd restart neighbourhood best solution global criterion reached time rs identical rsd skip single shift day neighbourhood fig 
schematically presents scenario test algorithms 
algorithm applies different neighbourhoods single shift day neighbourhood soft constraint related neighbourhoods mv large section neighbourhood gs 
smallest box shows nearest neighbourhood bigger neighbourhoods represented bigger boxes 
note explored tabu search neighbourhoods steepest descent applied 
numbers explain order neighbourhoods passed 
exploration gs finished numbers demonstrate option rsd applied 
search restart smallest neighbourhood 
number indicates option gs applied search starting best solution 
initialisation single soft constraint result large sections mv gs tabu search steepest descent diagram scenario algorithm mv gs options rsd initialisation starts empty schedule post planning options selected fig 
result value cost function weighted sum violations soft constraints summed personnel members ward see chapter 
calculation time recorded ibm rs powerpc 
column time 
fig 
schematically shows effect applying neighbourhoods fig 
solution quality 
progress quality corresponds intuitive findings testing different combinations 
applying single shift day neighbourhood number violations drops drastically 
value cost function increases exploring soft constraint related neighbourhoods take quality account searching improvements particular constraint 
greedy neighbourhood time required improving solution single neighbourhood 
improvement small satisfaction planners higher applying neighbourhood 
stated difference terms cost effect applying neighbourhoods fig 
solution quality computation time function value 
algorithms reached solution value best cost function value 
solutions different 
constraints satisfied violation appears solutions schedule different people 
remarkable category algorithms reached value greedy core shuffle neighbourhood 
larger scale swaps useful search 
finding confirmed meta heuristics section 
order neighbourhoods explored important 
waste effort greedy neighbourhood improve randomly obtained initial solution 
greedy algorithms require lot time explore entire search space improve schedule slow manner 
single shift day neighbourhood small quickly brings initial solution area acceptable quality 
remarkable combination single shift day core shuffle cs neighbourhood interesting 
solution quality impressive calculation time high 
neighbourhood search stops solution result single shift swaps 
cs neighbourhood finds changes solution better requires lot calculation time 
applying cs neighbourhood series smaller scale neighbourhoods larger single shift day possible improvements smaller calculation time 
medium scale soft constraint related neighbourhoods algorithms weekend personal requests violated constraint 
searches neighbourhoods considered swaps real improvement steps 
contribute generating better solutions act diversification search see fig 

soft constraint neighbourhood contribute eliminated success variable 
soft constraint related neighbourhoods necessarily developed solve particular soft constraints explore parts solution space constraints satisfied 
iterations take solution back schedule reduced number violations constraint 
problem specific neighbourhoods soft constraint neighbourhoods consume calculation time chances finding solutions reasonable amount time increase 
discussion chapter presents final findings plenty experiments real world confidential data 
figured worth spending effort constructing quality initial solution problem defined anrom contrast claimed literature meta heuristics local search heuristics single shift day neighbourhood able quickly improve quality random initial solution reasonable value evaluation function 
comparison solution methods nurse rostering problem see literature review section approach thesis tested practice widely varying healthcare environments 
observation experienced planners manually modify resulting schedules inspired implement neighbourhoods greedy shuffling core shuffling attempt search way manual schedulers appreciate best 
fact turned satisfying spend quite lot calculation time calculating minor improvements respect evaluation function value important improvements respect impression users practice 
changing neighbourhoods applying meta heuristics nurse rostering problem enables system find schedules hidden single neighbourhood heuristics 
nature problem tackled complex search space compared problems reported literature 
meta heuristics effective explore search space thoroughly 
novel approach chapter demonstrate adding problem specific neighbourhoods straightforward ones increases applicability general heuristics keeping calculation time 
experiments revealed beneficial perform intensive local search immediate surroundings obtained schedule 
reaching local optimum recommend exploration wider environments 
algorithms reach results equally quality 
fastest pr sh gs single shift day soft constraint related neighbourhoods shuffle greedy shuffle large section neighbourhoods 
criterion reached time algorithm passes stages smallest neighbourhood rs option 
algorithm ends exploring gs neighbourhood proceeding best solution 
second runner nearly algorithm restarts rsd rs option 
find better solution explores extra neighbourhood restarting explains longer calculation time 
worst algorithm terms quality sh gs fastest 
algorithms long calculation time necessarily produce results see cs cs perform intensive local search environment early local optima 
developed method organise changes neighbourhoods choose particular soft constraint related neighbourhoods beneficial search resulting schedules low value cost function 
beneficial apply simple heuristics steepest descent variety neighbourhoods sophisticated heuristics blind large parts search space 
variable neighbourhood approach robust meta heuristic nurse rostering problem 
chapters introduce hybrid approaches apply neighbourhoods introduced section 
chapter hybrid tabu search complexity problem described chapter requires pure mathematical approaches real world applications 
implementation anrom practical section developed hybrid tabu search algorithms 
heuristics deserve full chapter form basis software application practice 
slightly modified version chapter published burke de causmaecker vanden berghe hybrid tabu search algorithm nurse rostering problem yao 
eds simulated evolution learning lecture notes artificial intelligence vol 
springer burke 
section briefly introduce tabu search applications meta heuristic 
section describes details tabu search implementation nurse rostering problem 
section developed algorithms generally applicable increase performance 
test results real world problems section 
conclude section 
tabu search term tabu search introduced glover time term meta heuristics 
operations research artificial intelligence ai domains contributed foundations tabu search 
focussing optimisation mathematical results ai qualitative analysis 
tabu search meta heuristic guides local search procedure explore solution space local optimality 
local procedure search heuristic move reach neighbourhood solution glover laguna 
improvement descent search neighbourhood structure cost function 
tabu search iteratively explores possible solutions neighbourhood current solution moves best 
order prevent heuristic cycling memory structure called tabu list incorporated method 
tabu search applies list force search away solutions selected iterations 
neighbourhood solution depends iteration number 
tabu list referred short term memory heuristic 
tabu list certain attributes moves function accordance principle 
move satisfies certain tabu list conditions rejected 
aspiration criteria required order ignore moves solutions better previous solution 
attribute tabu lists avoid cycling preventing search going back visited local optimum 
excludes solutions visited forcing search unexplored regions 
rule set tabu list sizes different problems 
determination best list size acquired experiments particular type problems algorithms developed 
intuitively large scale problems benefit long tabu lists avoid cycling 
longer tabu lists expected effective falling back local optimum 
cycling completely avoided calculations memory expensive 
tabu search algorithm nurse rostering section implemented hashing functions 
introduced hansen jaumard 
woodruff zemel explored ideas detail keep memory tabu lists 
hashing functions introduced section applied algorithms anrom 
vectors resulting moves mapped integers stored large number visited solutions 
hash functions mappings vectors integers hash list list hash functions visited solutions 
tabu search enables moves strictly selected parts search space 
probable list prevents search visiting attractive solutions 
aspiration conditions overrule tabu status certain moves occasions 
move leads solution higher quality solution move accepted 
memory tabu search learning long term meaning 
intensification diversification important components help tabu search behave intelligently 
interesting investigate solutions common properties 
intensification restrict neighbourhood change current solution satisfy beneficial properties occurred previously visited solutions 
discourages properties violated search 
pure intensification insufficient guarantee results different kinds optimisation problems 
necessary apply diversification allow effective search solution space 
diversification guides search contrasting regions 
literature overview chapter examples tabu search implementations discussed nurse rostering dowsland section personnel scheduling problems section 
researchers important contributions tabu search developed large number successful applications 
examples tabu search manufacturing srivastava chen planning scheduling barnes laguna brucker schumacher transportation routing gendreau taillard layout problems dowsland graph colouring costa graph timetabling hertz white xie di schaerf assignment problems tabu search algorithm nurse rostering problem original tabu search algorithm original tabu search algorithm developed nurse rostering problem applies single shift day neighbourhood 
move duty person day 
essentially move assignment column solution representation fig 

move allowed goal person right skill category assigned duty 
hard constraints respected 
detailed description neighbourhood refer section 
skill category iteration possible moves calculated move leading highest benefit performed 
highest benefit negative move performed anyway move forbidden tabu list 
move accepted rectangular area roster roster point duty comes moved may changed 
comparison purposes introduced steepest descent algorithm neighbourhood moves exactly tabu search algorithm 
evaluating possible moves neighbourhood best performed best move improve schedule case algorithm stops 
algorithm chooses random moves leading equally solutions 
algorithms turned powerful produce solutions complex problems shown steepest descent tabu search experiments table section 
tabu search algorithm performs better steepest descent algorithm local search heuristic hybrid algorithms described section 
personnel tabu height tabu height tabu height tabu width tabu width tl th assignment units illustration rectangles positions swap hash function tabu list tabu list application implemented hashing function 
store hash element serial numbers people schedules involved swap assignment unit swap character table roster positions surrounding areas swap origin goal move saved 
surrounding areas origin goal rectangles dimensions tabu height tabu width 
origin goal swap consider tabu height people lower serial number person schedule manipulated tabu height people higher serial number 
demonstrated fig 
representation fig 
presenting schedule 
assignment unit planning period separate column 
analogously schedule tabu width assignment units equal number assignment unit considered kept memory personal schedules 
swap positions near borders rectangle required size drawn schedule 
hash function simply works rectangles smaller width height case indicated fig 

explained section personal schedules considered people skilled category scheduled 
program temporarily map serial numbers personnel members new list length pq 
hash element fields integer values saving serial numbers people schedule involved swap time swap 
extra field table representing assignments rectangles swap positions 
hash element corresponding origin node move calculated hash function tl th schedulep pq pq hash size analogously hash element corresponds goal position move calculated follows tl th schedulep pq pq hash size value hash size formulas equals pq pq number people skill category 
value determined experiments 
application keep memory allocating memory hash elements need 
check collision comparing people time swap address hash list appears occupied 
necessary assignments schedule positions rectangles compared 
chance collision need 
aspiration criterion better solution best accepted anyway 
aspiration simplest tabu criterion prevent reversal move certain number subsequent iterations 
due characteristics tabu elements tabu move leads better solution 
example consider part imaginary schedule fig 

subsequent moves change schedule areas overlap rectangles corresponding move opposite move necessarily lead visited solution rest schedule changed 
algorithm evaluates quality new solution checks tabu list 
solve worst possible schedule initialisation original tabu search success post planning algorithms greedy shuffling success complete weekends result ts diagram hybrid tabu search algorithms nurse rostering problem plug fig 
criterion original tabu search algorithm stops number iterations improvement 
empirically set value number equal pq number take coverage account schedules high coverage smaller search space schedules low coverage 
problem specific diversification moves turned beneficial quality algorithms increasing number iterations simplest tabu search environment see section 
diversification steps iterations counter restarts improvement 
simplified representation flow diagram hybrid tabu search algorithms described section seen fig 

refer chapter thorough description possible procedures general pre post planning procedures copied 
initialisation phase feasible schedule generated algorithm enters tabu search part process 
depending chosen results ts ts generated 
ts diversification heuristics problem describe heuristics employed conjunction original tabu search algorithm improve solution 
diversification complete weekend diversification weekend neighbourhood section applied 
users program anrom assign cost parameter constraint hard find satisfactory solutions 
problem constraints degree freedom anrom high find solutions satisfying constraints 
graphical user interface incomplete weekends really catch eye constraints overtime morning shifts 
immediately visible 
impossible guarantee solutions certain setting parameters decided provide manner solving problem hard way caring possible problems constraints 
criterion diversification step simple 
stops improvement respect weekend constraint constraint possible 
search space step small number weekends schedule equals pq skill category maximum number moves required go worst case highest possible number violations constraint best lowest possible number violations approximately pq worst case weekends personnel members complete weekend means pq violations 
best case violations 
moving weekend shift weekend empty violations shifts planned day person weekend complete weekend 
weekend steps reach regions easily explored original tabu search moves 
schedules afford high violations weekend constraints 
certain features common reflect assignments weekends 
means diversification step looked intensification point view 
aims obtaining certain properties solution 
diversification consider worst personal schedule diversification algorithm shuffle neighbourhood sh introduced section 
complete weekend function changed schedule beneficial look people worst schedule evaluation function 
person category scheduled possible calculate value evaluation function exchanging part schedule people involved 
parts schedule contain full days maximum length half planning period 
possibilities calculated quite time consuming best exchange chosen random equal values performed 
result process provides better solution 
possible best shuffle improve schedule 
separate tabu list maintained prevent successive shuffles cycling 
greedy shuffling model human scheduling techniques neighbourhood search greedy shuffling gs neighbourhood introduced section 
practical applications problem results tabu search algorithm human improve visual result making small change 
process calculates possible diversification moves pair people 
listing gain cost function possible exchange shuffle leading best improvement performed 
best improvement list performed provided considered personal schedules involved earlier shuffle 
long improving exchanges list carried 
procedure starts possible exchanges improves quality schedule 
note greedy shuffling considers improvements 
diversification greedy shuffling move equally worse solution cycling 
improvements schedule obtained employing procedure tabu search described ts considerable biggest advantage step creates schedules impossible human improve schedule 
hybrid tabu search algorithms extensive testing hybrid versions tabu search algorithm heuristics algorithms developed 
produces schedules short computation time required planners react unforeseen events staff 
second algorithm needs computation time generates schedules considerably higher quality 
algorithms briefly described 
tabu search diversification ts aim algorithm provide reliable solutions short time 
practice algorithm proved useful check constraints realistic holiday periods possible plan schedules person gets desired holiday period algorithm constructed quite simply original tabu search algorithm 
number iterations improvement weekend step performed 
case weekend step result different schedule second diversification step performed 
diversification step problem rm rmp rmc value time value time value time steepest descent ts ts crit 
ts ts table value evaluation function results steepest descent variants hybrid tabu search algorithm problem planning order qualifications chosen customer original tabu search algorithm 
calculations global number iterations improvement 
tabu search greedy shuffling ts algorithm combination requires time results considerably better human point view 
anecdotal evidence suggests level satisfaction schedules produced algorithm higher cost function indicates 
main reason shuffling step users easily improve results 
important greedy shuffling step calculations real aim perform exchanges human user perform 
exhaustive search character shuffling step takes lot time 
important calculate step improvements goal excluding manual improvements schedule lost greedy shuffling section 
test results tests chapter restricted planning minimum requirements rm planning minimum preferred requirements rmp rm coverage option fig 
planning calculated demands rmc rm explained section 
experiments started empty initial schedule feasible algorithm described fig 
section 
look fig 
means experimental results shift type requirements chapter 
decided perform step add shifts preferred personnel requirements see section post planning option cause violation soft constraints section 
table results variants tabu search algorithm compared steepest descent algorithm 
test examples problem problem hard solve real world problems problem rm rmp rmc value time value time value time steepest descent ts ts ts table value evaluation function results steepest descent variants hybrid tabu search algorithm problem planning order qualifications chosen customer cases personal demands schedule impossible 
column value shows value evaluation function entire schedule see chapter cost parameter constraint times extent constraint violated 
column time contains computation time ibm power pc rs 
test examples available extern greet vandenberghe 
third set results demands adapted constraints described section rmc calculating realistic demands better results column 
expectations hard constraints changed order prevent unavoidable violations 
steepest descent algorithm table performs worse 
problem difference minimum preferred requirements 
considered examples tabu search algorithm performs better steepest descent algorithm 
decided organise criterion tabu search algorithm computation time order magnitude time required steepest descent 
table contains results original tabu search algorithm longer computation time 
obvious experimental results better implement problem specific diversification steps increase computation time simplest algorithm 
behaviour hybrid algorithms better behaviour normal tabu search algorithm short computation time 
considering computation time application practice worth hybrid tabu search algorithm degree confidence users program higher 
tabu search algorithm developed nurse rostering problem chapter respects hard constraints search 
diversification steps larger moves solution space proven beneficial quality results increase calculation time simplest version tabu search algorithm 
different users choose different algorithms depending opinions requirements 
runtime quality trade depends individual planner 
users really interested lowest possible value evaluation function matter long calculations take particularly smaller hospitals single planning officer generates roster hospital mind roster generation takes overnight run 
instance big hospitals wards scheduled individual head nurses needed quick calculations slightly lower quality schedule head nurse may tight window generate schedule 
combining original tabu search algorithm specific problem solving heuristics guarantees better quality rosters satisfies hospital planners high extent impossible experienced planners improve results considering soft constraints manually 
practical scheduling problems higher quality solutions produced hybrid algorithm compared simple tabu search algorithm compensates increase calculation time 
application practice hybrid tabu search approach combines fast scheduling quality results 
approach shortcomings applied extremely difficult real world examples application benefit extra information users 
chapter attempt overcome problems defining heuristics explore larger part solution space 
chapter memetic algorithms chapter introduce range new memetic approaches nurse rostering problem 
algorithms apply steepest descent improvement heuristics genetic algorithm framework 
main ideas memetic algorithms described chapter published burke cowling de causmaecker vanden berghe memetic approach nurse rostering problem applied intelligence special issue simulated evolution learning vol 
number 
tabu search heuristics effective particularly obtaining reasonably solutions quickly smaller rostering problems mentioned chapter 
tabu search algorithms display considerable shortcomings practical applications particularly sufficiently robust handle difficult problems 
provided motivation investigate population approaches problem 
discuss robustness problems arise practice tabu search heuristics 
provide empirical evidence demonstrate best features memetic algorithm rostering problem particularly nature effective recombination operator show memetic approaches handle initialisation parameters range instances robustly tabu search algorithms expense longer solution times 
having tabu search chapter memetic approaches benefits drawbacks algorithm hybrid memetic approaches tabu search approaches 
technique produces better solutions earlier approaches relatively unaffected initialisation parameter changes running time comparable memetic approaches combining best features approach create hybrid greater sum component algorithms 
successful solution method robust cope widely varying cost functions problem instances 
section introduce evolutionary algorithms distinction genetic memetic algorithms 
sections algorithms anrom 
section presents different genetic memetic algorithms section brings sections consider different approaches 
section compare contrast performance algorithms specific real world problems 
section 
evolutionary algorithms genetic algorithms darwin origin species forms basis evolutionary computation applications artificial intelligence optimisation game theory evolutionary algorithms introduced model natural evolution processes bremermann fraser 
holland genetic algorithm discrete domains 
schwefel introduced evolution strategies continuous optimisation goldberg explains genetic algorithms applied search optimisation learning 
reeves demonstrates genetic algorithms popular solving hard combinatorial problems 
fogel presents extensive overview early genetic approaches 
genetic algorithms inspired biological processes 
natural species undergo process slow evolution mutation crossover genes 
gradually qualities emerge uninteresting characteristics disappear species adapt environment 
mutation perturbs single individuals avoids local minima crossover combines characteristics approaches parents 
solutions maintained generation selected basis fitness 
genetic algorithm maintains population individuals solutions built set genes 
quality solution fitness value evaluation function 
genetic process new generations replace old ones 
members new generation constructed applying genetic operators individuals current generation 
section examples genetic algorithm approaches nurse scheduling aickelin dowsland easton mansour 
timetabling applications population approaches school timetabling burke newall burke carrasco paechter ueda examination timetabling ross general personnel scheduling corne ogden bin packing evolutionary approaches successfully implemented engineering garcia robotics han oh control ge optimisation fran ois kim games darwen yao reiser riddle neural networks fu forecasting lam liu yao pattern recognition scott gen programming liang data mining sierra memetic algorithms hybrid evolutionary algorithms incorporate local search methods named memetic algorithms 
term introduced moscato norman radcliffe surry formalised idea 
apart genes known evolve biology ideas evolve 
dawkins describes meme unit cultural transmission idea behaviour 
ideas combined form new ideas crossover change accident mutation 
ideas survive longer bad ones 
difference genes memes improved individuals passed 
local improvement algorithm performed meme 
examples memetic algorithms range optimisation problems vehicle routing moscato norman timetabling burke job shop scheduling cheng gen maintenance scheduling burke smith evolutionary algorithms nurse rostering basic genetic algorithm just mutation crossover operators employed reach convergence important crossover operators combine parts solutions produce new solutions 
difficulty rostering problems quality solution necessarily sum combination qualities partial solutions 
carried number experiments crossover operators conserving building blocks possible repairing roster destroyed crossover 
section describe memetic algorithm incorporates tabu search hybrid tabu search algorithms section genetic algorithm 
components algorithms introduced section section especially developed solving anrom seen fig 

describe algorithms constructed components displayed 
memetic algorithm nurse rostering problem initial population consists feasible schedules generated randomly initialisation techniques discussed section 
possibilities recombination create new offspring 
important organise recombination children inherit characteristics parent generation 
quality schedule sum schedule quality person important get personal schedules right 
characteristics constraints ts random planning order best row best row best random choice rows initialisation empty schedules schedules feasible local improvement ts diversification human inspired improvement functions creation new individuals selection parent pairs recombination criterion reached greedy shuffling partial personal schedule result best individual switch person best events diagram components genetic memetic algorithms nurse rostering problem plug fig 
mixing scheduled events person usually leads bad schedules 
algorithms variants recombination operators 
preserve personal schedules high extent preserve position placed events 
generation requires significant calculation time decided plan high number generations 
memetic algorithms stops improvement arises consecutive generations 
variants memetic algorithm described contain different recombination mechanisms 
original memetic algorithm simplest memetic algorithm steepest descent performed individual 
steepest descent algorithm applies single shift day neighbourhood section moves simplest tabu algorithm section planning order skill categories see section user 
evaluating possible moves neighbourhood best performed best move improve schedule case steepest descent stops 
step simple tournament selection best individuals creating offspring 
pair parents new individuals created 
child contains best personal schedule referred row schedule parent best personal schedule second parent different selected 
personal schedules chosen pair wise tournament rows parents 
normally result feasible schedule child schedules feasible shifts added taken away random necessary see algorithm fig 
section 
leads diverse schedules poor quality prior application steepest descent heuristic 
algorithm schematically fig 

diverse memetic algorithm dm shortcomings tabu search algorithms mind decided plan skill categories planning order chosen customers section algorithm 
dm algorithm time steepest descent algorithm performed planning order skill categories randomly chosen schedule causing additional diversity population 
features algorithm algorithm diverse memetic algorithm random selection dmr steepest descent approach features dm algorithm choose rows child rosters tournament selection personal schedule chosen randomly parents 
create different schedules random initialisation criterion reached criterion improvement generations repeat schedules feasible randomly adding deleting appropriate shifts algorithm fig 
section perform steepest descent individuals select parents individuals tournament selection recombine parents pair parents generate children child best personal schedule row parent best personal schedule row parent second best row best parents child rows tournament selection parent rows child best personal schedule row parent best personal schedule row parent second best row best parents child rows tournament selection parent rows schematic representation original memetic algorithm memetic algorithm string recombination msr algorithm different technique generate offspring 
longer copies entire schedule parents 
personal schedule row current solution time unit day shift corresponding column current period fig 
randomly chosen 
part schedule start planning period time unit copied parent remainder second parent 
procedure repeated second child part row child taken second parent remainder parent 
apart new recombination operator algorithm dm algorithm 
memetic algorithm copying best events mex difference mex algorithm dm algorithm considered previously way child schedules generated parents 
results copying best placed events person parents children 
best placed events events lead worst increase cost function removed 
experiments carried copy events parent child 
best personal events parents lead events offspring 
schedules feasible randomly adding events fig 
course leads diversity 
combining qualities hybrid tabu search evolutionary algorithm tabu search algorithms different initial solutions planning order skill categories tabu search algorithm memetic algorithms lead excellent solutions complex problems hospital planners deal 
unfortunately quality solution depends strongly initial schedule 
schedule contrary initial schedules hard improve methods considered 
problem small move tabu search section lead solution away local minima 
commercial version research hybrid versions tabu search algorithm 
users informal feedback hybrid algorithms points insensitivity random seed initial solution 
strength memetic algorithm approach different starting points taken diversity different schedules maintained 
bigger advantage possibility planning skill categories different orders 
argued starting tabu search multiple different starting points produce solutions comparable quality memetic algorithms hybrids 
order compare directly performance tabu search approaches memetic approaches hybrids similar time algorithm produces population initial solutions improved ts algorithm section ordering skill categories random 
greedy shuffling explained section applied best individual solution population see fig 

memetic algorithm human inspired improvement functions combine extra functions tabu search algorithm memetic algorithm local improvement functions performing best individual memetic algorithm results get better 
solutions quality better 
create random individual solutions criterion reached criterion improvement generations repeat steps 
schedules feasible adding removing appropriate shifts randomly fig 
section 
perform ts individuals choose planning order skill categories random 
select parents individuals tournament 
recombine parents explained algorithm 
perform greedy shuffling step best individual schematic representation memetic algorithm human improvement functions solutions hybrid tabu search algorithm 
reason better solutions diversification algorithm 
starting calculations different starting situations changing planning order skill categories probability finding better solutions increased 
tests algorithm section 
best individual obtained algorithm greedy shuffling step section applied 
algorithm schematically fig 

switch swt previous algorithms number staff skill category shift remained constant initial feasible solution 
add additional move schedule randomly changed random person random day shift 
case scheduled person time introduce new event schedule schedulep insert assignment schedulep qp 
case scheduled skill category planned remove scheduled event schedulep qp pref qp remove assignment schedulep 
random changes may violate hard constraints 
long number scheduled people lower minimum number higher preferred number long person schedule switch right skill category problem 
example assume number late shifts minimum preferably certain day planning period 
assume current solution late shifts scheduled day 
assume switch move described section randomly picks day late shift move 
case randomly chosen person assigned late duty day algorithm change adding late duty person violate hard constraints late duties planned preferred number 
possibility algorithm picks random person scheduled late duty 
case late duty removed 
removal causes violation hard constraints minimum required number scheduled late duties scheduled 
switched tabu search algorithm allow flexibility staff scheduled lower higher levels usual permitted hard constraints coverage discussed section 
decided alternate ordinary tabu search switch function swt algorithm switch resulting solution poor quality 
swt algorithm algorithm additional change 
results tested algorithms difficult real world rostering problems identical test problems discussed chapter arising belgian hospitals 
due complex confidentiality operating requirements gathering set problem data required significant amounts time effort 
rostering problems different characteristics consistent performance different problems provides strong empirical evidence performance 
appropriate test algorithms random data problems associated solution encountered practice 
results applying heuristics problems tables 
value evaluation function time taken planning minimum staff requirements rm planning preferred numbers staff skill category rmp see section planning recalculated requirements aid satisfaction soft constraints rmc explained section 
tables column value shows value evaluation function 
column time contains calculation times ibm power pc rs 
problems feasible 
extern greet vandenberghe test examples available 
consistency check procedure suggests modify hard constraints cases 
problem large conflicting soft constraints far difficult problem group 
problems smaller problems fewer difficult soft constraints easier problem 
problem feasible solution requires alternative skill category assignments 
skill categories people go long leave planning period 
problem intermediate problem rm rmp rmc value time value time value time generations generations dm dmr msr ts ts ts tsr ts ts individuals individuals swt table comparison algorithms problem complexity 
deliberately tested approach test problems different nature order demonstrate sensitivity newly developed algorithms 
hybrid tabu search results chapter repeated section problem comparison 
original tabu search algorithm ts producing reasonable starting solution random initialisation short time 
slow method generate acceptable solutions 
results hybrid tabu search algorithms ts ts considerably better indication improved 
unacceptable solutions usually arise constraints problem contradictory 
hard find narrow valleys solution space contain schedules 
giving high value cost parameter corresponding particular constraint necessarily guarantee solution free violations constraint 
test problems consist wards different skill categories tested influence changing planning order see section 
particular difficulties requirements people certain skill category higher number people available 
significant tabu search algorithm ward planned skill category skill category 
customers freely decide order want skill categories planned 
planning skill category algorithm free place required shifts day people category consideration category problem rm rmp rmc value time value time value time generations generations dm dmr msr ts ts ts tsr ts ts individuals individuals swt table comparison algorithms problem problem rm rmp rmc value time value time value time generations generations dm dmr msr ts ts ts individuals individuals swt table comparison algorithms problem problem rm rmp rmc value time value time value time generations generations dm dmr msr ts ts ts individuals individuals swt table comparison algorithms problem alternative possibility available 
step algorithm stops shifts planned skill category frozen 
causes difficulties planning shifts skill categories overlap categories demonstrated fig 

algorithms random ordering skill categories 
practical experiments shown best strategy plan skill categories decision planning ordering difficult requiring human planner expertise 
extract results results planning skill categories order reverse order initially chosen customer 
suppose worst case results certainly support bad choice 
results problem problem tsr ts ts rows tables respectively 
problem find reverse planning order skill categories generates better solution selected order case ts ts 
hospital planners habit setting planning order hierarchical importance skill categories 
example indicates option generating quality schedules 
solving frequently occurring problem set algorithm fig 

overcome unfortunate settings planning order included diversification option software anrom 
time consuming algorithm improve quality planners insight specific problem set planning order right 
see general poor ordering skill categories produces poorer results 
particularly true difficult problem 
surprisingly ts algorithm produces slightly better results rel easy problem planning order reversed ts 
behaviour due greedy shuffling step performed ts algorithm calculation 
step goes skill categories planning order 
possible changes schedule previously planned skill categories 
original tabu search algorithms ts ts go schedule skill category skill category visiting category chance rectify poor choices 
strongly affected bad planning order skill categories 
indicated tables test results memetic algorithms generations improvement typically generations 
algorithms produce test results tables population size 
see problems extra benefit allowing original memetic algorithm run times longer produces little improvement final solution approach generate sufficient diversity 
see problems dm heuristic produces better rosters heuristic random ordering skill categories gives greater population diversity 
see dmr heuristic introduces diversity choosing random rows parent schedules best rows case arguably introduced diversity results worse dm heuristic 
said heuristic msr takes appropriate segment row parent demonstrates similar performance 
memetic algorithms population size explains slower running time memetic algorithms 
consider comparison memetic approaches multi start tabu search approach 
copying large partial schedules high quality parent schedules children turns idea 
steepest descent technique memetic algorithms powerful generate better schedules 
obtained better results copying small parts qualities parent schedules degree freedom making feasible solutions high provide diversity 
see memetic algorithms selective parental traits passed generate significantly better schedules algorithms dm dmr msr 
algorithms copying smallest parts parent schedules mex algorithms 
number events copied personal schedule row great influence final solution quality 
results copying events row increasingly better events results get worse 
believe best placed events strongly influence position events freedom solution evolve restricted areas search space steepest descent heuristic particularly effective improving diverse schedules generated 
represents best compromise diverse population solutions ability focus interesting areas search space 
compare best memetic algorithms ts best tabu search algorithms see significantly better solutions produced algorithm problems comparable results problems expense longer running times 
important advantage memetic algorithms respect tabu search algorithms fact results memetic algorithms dependent planning order skill categories chosen user 
chance trapped local minimum far optimal reduced 
problem high number strict soft constraints high cost parameters attached 
problem hand fewer personnel duty types soft constraints 
problem search space depending soft constraints full traps algorithms neighbourhood search problem differentiate clearly algorithms 
explains improvements ts ts considerably higher problem original tabu search algorithms ts additional improvements yielded memetic approaches 
see rows tables applying ts algorithm random ordering skill categories starting number different initial solutions recombination switch effective showing clearly dependence human planner knowledge sequencing applied ordering skill categories 
idea time consuming greedy shuffling step individual best 
algorithms random generator create initial solution choose equally steps 
explains experiments individuals lead worse solutions fewer individuals 
memetic hybrids swt memetic algorithm demonstrate recombination operator consistently improves performance algorithm recombination similar time solve problems require user specify order skill categories scheduled 
memetic tabu hybrid shows excellent performance difficult problems solution methods hybrid swt algorithm 
demonstrates better solutions obtainable increased robustness offered hybrid approach 
originally planning option rmp start planning minimum personnel requirements add duties schedule introduce new violations soft constraints see section 
inclined think better results obtained adding duties planning algorithm active 
swt algorithm developed test leads results examples tested 
note algorithm greedy shuffling step contrast algorithms 
automating nurse rostering problem belgian hospitals scheduling effort calculation time reduced considerably manual approach previously 
time automatic schedule generation tailored suit time available 
fast tabu search algorithms quickly find reasonably schedules response events staff 
memetic algorithms robust produce excellent solutions hard problems time available 
quality automatically produced schedules higher quality manual schedules 
described memetic approaches compared previously obtained tabu search results chapter 
hybrid tabu search algorithm runs quickly produce solutions highly dependent initialisation parameters requiring expertise human planners judge correct order skill categories displays lack robustness generate schedules problems 
memetic approaches take longer run tabu search approaches 
memetic approaches copy carefully selected part parent schedule child schedules extra time effect produce better solutions dependence initialisation parameter changes reduced 
hybrid memetic algorithms combined basic approach hybrid tabu search provide solutions similar time memetic algorithms 
solutions significantly better best tabu search solution relatively unaffected initialisation parameter changes 
believe approaches particularly robust handle variety instances occur real world 
part iv different framework chapter multi criteria approach chapter multi criteria approach nurse scheduling overcomes practical difficulties personnel schedulers hospitals face 
users hospital personnel planning software cope complex task translating needs constraints different nature differing cost parameters see section 
approach chapter attempt address issue 
compared previously developed cost function guided methods chapter method allows flexible formulation problem specific requirements 
longer user responsibility compare different quality measures cost function approach violations completely different constraints added evaluation chapter 
approach schedules evaluated measuring position preference space 
especially construct preference space order evaluate criteria dimensionless units 
multi criteria approach users express importance criteria preferences 
corresponds hospital customs aiming best schedule terms particular cost function 
new evaluation framework chapter accepted publication burke de causmaecker petrovic vanden berghe multi criteria meta heuristic approach nurse rostering proceedings congress evolutionary computation cec honolulu ieee press 
problems user personnel planning software outlined section 
section elaborates developed multi criteria method order tackle particular drawbacks personnel scheduling problem 
carried set tests results explained section 
section new multi criteria approach personnel planning problem drawn 
multi criteria decision making assignment subject set constraints vary hospital regulations specific personal requests holidays days 
multi criteria approach maintain rule coverage constraint assign requested number skilled personnel time violated course search 
meta heuristics discussed chapter applied multi criteria approach discussed chapter 
nurse rostering problem complex combinatorial problem characterised multiple goals 
constraints easier satisfy taken consideration search algorithm 
researchers worked multi criteria approaches nurse timetabling problems 
approaches personnel coverage treated goal thesis hard constraint 
publications multi criteria goal programming nurse scheduling mentioned literature overview 
arthur ravindran combine goal programming heuristic assignment shifts 
musa saxena developed interactive approach small size problems 
scheduling problem tackled franz differs considerably problem defined chapter personnel works scattered locations 
bailey consider coverage time related objectives addition maintaining usage full time staff 
chen yeung apply goal programming expert system 
developed tabu search approach multi objective mathematical programming small size problems applies simulated annealing multi criteria approach 
applications multi criteria approaches timetabling problems 
developed exam scheduling package large university 
give priorities different quality measures schedule 
similar approaches method described chapter developed timetabling problems burke paechter 
main concept distance measure high number constraints nurse rostering approach inconvenient rely planner practical experience setting targets 
burke developed multi criteria approach examination timetabling phase algorithm 
phase applies graph colouring heuristic generate set timetables high quality respect criteria separately 
iterative search neighbourhood timetables tries improve quality terms criteria 
approach similar multi criteria method developed anrom weights criteria reflect importance constraints set scheduler 
drawbacks cost function approach development anrom started model stopped evolving new hospital users appeared different demands planning habits 
program currently complex system rom fine tuned hospital planners order meet requirements 
anrom adapted increasing number user defined constraints order meet high requirements different hospital wards 
system provides modifiable functionalities customers 
growing number constraints renders task assigning cost parameters constraints increasingly difficult 
artificial unify constraints completely different characteristics overtime weekend replacing people different qualification class cost function personal schedule defined linear combination violations constraints see chapter 
evaluating entire schedule cost function values personnel member summed 
problem tackled thesis copes extremely tough constraints 
aims producing satisfiable schedule violations soft constraints unavoidable 
compared similar problems described literature section rom offers plenty possibilities schedulers modify evaluation function defining different flexible regulations setting cost parameters related soft constraints 
requires insight search heuristics hospital planners reasonably expected 
encountered difficulty applying anrom scheduling practice fact planners knowledge profile search space 
increasing cost parameter particular soft constraint necessarily obtain better quality solutions general respect constraint particular cases 
experience built testing large set rostering problems practice learned increasing cost parameter create high barriers easily crossed search space 
multi criteria approach nurse rostering problem soft constraints section set modelling nurse scheduling problems multi criteria problems 
opted approach criterion measures number violations soft constraint 
violations soft constraints measured different units hours shifts days weekends combinations 
multi criteria approach enables constraints different nature expressed different units treated simultaneously 
soft constraints enumerated section take different values different personnel members ward 
briefly describe criteria groups units expressed 
hours violation particular set constraints measured terms hours 
examples constraints overtime constraint constraint counter constraints constraint shifts order calculate violation constraints belonging group count assignments shift types personnel members 
depending constraint values sequences occurrences lead violations 
group contains constraints concerning minimum maximum total number sequence shifts 
belonging group constraints require people constraints replacing people different qualification constraints allow alternative skill category constraint maximum number assignments constraint maximum number assignments day week constraint maximum number assignments shift type constraint maximum number shift type week constraint number consecutive shift types constraint maximum number assignments bank holidays constraint restriction succession shift types constraint counter constraints constraint shifts constraint requested assignments constraint people constraint people constraint days constraints independent actual shift types number hours scheduled 
constraint category needs information person works certain day 
violations minimum maximum number days consecutive days expressed expected number days 
examples maximum number consecutive days constraint minimum number consecutive days constraint assign free days night shifts constraint counter constraints constraint days constraint weekends weekend constraint group treated separately weekends attract attention real world examples constraints 
violations expressed number weekends constraints assign complete weekends constraint assign identical shift types weekend constraint maximum number consecutive working weekends constraint maximum number weekends period weeks constraint counter constraints constraint miscellaneous set constraints covers constraint groups described 
represent complex requirements personnel schedules require calculation hours shifts days evaluation 
examples constraints patterns constraint counters constraint search space search space proposed multi criteria approach defined section 
compromise programming concept distance ideal solution 
solution problem schedule represented point criteria space dimension equal number criteria 
points criteria space special meaning ideal point anti ideal point 
ideal point criteria take best value 
solution corresponding ideal point exists 
define anti ideal point represented worst value criteria 
order tackle criteria dimensionless units criteria space mapped preference space 
quality solution expressed terms number violations constraint 
larger ordinates indicate worse solutions 
criterion best value mapped worst value mapped wc wc denotes relative importance weight criterion obviously ideal point mapped point preference space ordinates equal anti ideal point mapped point ordinates equal weights criteria 
simplified example preference space explained detail section see fig 

approach quality schedule measured distance ideal point preference space 
smaller distance indicates higher quality 
order define mapping criteria space nurse rostering problem preference space best worst value calculated criterion soft constraint 
call schedules violate particular constraint ideal schedules respect constraint 
ideal schedules mapped points ordinate criterion corresponding constraint 
example schedule ideal terms maximum number hours worked constraint solution constraint overtime violated personal schedules 
constraint concerning minimum number consecutive days constraint suffices shorter sequence working days personal schedules consider solution ideal 
clear experience best value lies infeasible part solution space nearly real world problems 
calculation worst values criteria complex 
illustrate idea number examples 
consider constraints hourly measures 
estimation worst case terms overtime schedule people day night break entire planning period 
situation overtime minimum time required shifts violated highest extent 
order violate constraint constraint highest extent consider personnel members schedule assignment 
constraints shift category limit number assignments constraint procedure analogous hourly constraints 
constraints require careful approach 
order violate constraint number consecutive shift types constraint highest extent imagine schedule forbidden sequences possible 
highest number forbidden sequences obtained alternating smallest forbidden sequence assigned shifts free day 
constraint complete weekends constraint violated schedule free assigned way round personnel members 
constraints take previous planning period account 
previous planning period ends scheduled day start worst schedule minimum number consecutive free days free day vice versa 
criteria person involved combined full empty schedules simulate worst case 
table gives overview schedule types represent anti ideal points criteria 
full empty schedules possible shifts assigned assignment planning period 
algorithm multi criteria search search algorithms aim previously developed meta heuristics anrom chapter new multi criteria environment 
cost function summing violations constraints driving force minimisation distance solution ideal point preference space 
tests performed chapter hybrid tabu search algorithm described section 
initialisation phase basically consists assigning requested shifts qualified people randomly tabu search algorithm applied 
algorithm violates hard constraints calculations 
multi criteria approach algorithm demonstrate multi criteria approach sorting full weekend improving schedule person worst result called ts section 
cost function approach program enables users set cost parameter constraint schedule characteristics minimum time assignments full maximum number assignments full maximum number consecutive days full maximum number hours worked full maximum number assignments day week full maximum number assignments shift type full maximum number shift type week full maximum number consecutive weekends full maximum number working weekends weeks full maximum number assignments bank full holidays days full shifts full counters full empty schedule people people full empty schedule people full schedule people maximum number consecutive free days empty minimum number hours worked empty number consecutive shift types alternating smallest forbidden sequence free days restriction succession shift types repeated forbidden sequences requested assignments empty minimum number consecutive days alternating scheduled free days minimum number consecutive free days alternating scheduled free days assign free days night shifts alternating empty days night shifts assign complete weekends saturday planned sunday empty assign identical shift types shift type saturday weekend different shift type sunday patterns opposite pattern table schedules representing worst cases corresponding constraints constraint see section 
value cost function weighted sum violations soft constraints 
attempt find schedule set practical cost parameters set customers software copied weights multi criteria approach 
section presents results weight values 
quality schedule personal schedule considered separately measuring distance ideal point preference space 
goal search algorithm minimise sum distances people schedule 
distance measure family lx metrics gives wide range geometric measures different values distance personal schedule schedulep person ideal point denoted lx definition schedulep ordinates 
number criteria preference space 
definition lx definition sp fp fp worst fp value criterion schedule person fp worst value criterion worst possible schedule smaller values allow compensation criteria values high satisfaction constraint counterbalance low satisfaction 
distance measure distance lx defined definition value largest ordinate preference space 
violated constraint contribute value 
definition maxc distance entire schedule sum nurses ward personal schedules denoted definition 
definition lx lx mapping criteria space preference space criteria depicted fig 
fig 
presents pseudo code multi criteria search algorithm 
experiments test problems order carry preliminary experiments deliberate choice tackle simplified examples 
comparison anrom test problems chapter limited number constraints smaller problem dimensions smaller search space 
data enabled carry preliminary experiments approaches limited amount calculation time 
promising early results multi criteria approach tested complex real world data 
fp worst fp ip fp fp worst criteria space preference space mapping criteria space preference space person schedule example personnel requirements consist different shift types planning period weeks considered 
simpler problems tackled part iii thesis completely new approach early stage 
ward employs people belonging different skill categories head nurse regular nurses 
head nurse special regulation called head nurse allows day shifts weekend 
regular nurses full time regulation personalised full time regulation forbidding late night shifts tuesday constraint half time nurses 
particular problem extra difficulties affecting worst case values personal constraints 
full time nurse hired initialise feasible schedule best criterion reached perform best non tabu move neighbourhood lp lp best best return best pseudo code multi criteria search ward weeks planning period 
full time nurse leaves ward weeks 
furthermore half time full time nurse swap regulations week planning period 
multi criteria violations weights lx constraints weights patterns patterns patterns weights patterns patterns weights patterns patterns weights patterns patterns weights patterns patterns weights patterns weekends weeks weights min 
consecutive days patterns cost parameters patterns cost function violations cost parameters value constraints patterns table results example data example represent ward example planning period different 
involves different qualifications regulations personnel members position cyclic patterns value start different personal requests days different bank holidays slightly different personnel demand days 
tests carried distance measure preference space 
discussion table presents test results example table test results displayed example 
experiments carried different values weights 
columns violated constraints number times constraint violated 
column sums number violations occur different personal schedules 
ideal schedule violate soft constraints 
test examples demonstrate increasing relative importance particular constraint results schedule violations constraint 
multi criteria violations weights lx constraints weights min 
consecutive days patterns patterns hours weights min 
consecutive days patterns patterns hours weights min 
consecutive days patterns min 
cons 
days hours weights patterns weights max 
consecutive days patterns patterns hours weights patterns patterns hours weights patterns patterns min 
consecutive days weights identical weekends patterns cost parameters weights hours max 
assignments weekends weeks day min 
consecutive days complete weekends identical weekends patterns patterns hours weights max 
assignments weekends weeks day min 
consecutive days complete weekends identical weekends patterns cost parameters hours max 
assignments max 
consecutive days weekends weeks min 
time day min 
consecutive days complete weekends identical weekends patterns cost function violations cost parameters value constraints table results example min 
consecutive days generally hold local optima 
realise possible compare results different objectives general tendency applying multi criteria method explained 
best solution example violates pattern constraint times 
know investigating simplified problem data thoroughly solution corresponds ideal point 
assigning moderate weight pattern constraint violated 
data cost function approach available anyway experimented copying cost parameters weight factors corresponding constraints 
irrelevant assume correspondence cost parameters set users importance corresponding constraints 
option weights led best results multi criteria approach 
clear preliminary results hold real world problems 
results example dataset clearly show lower value distance measure enables constraints 
higher values algorithm tends generate schedules reduce penalty violated constraint contribution value cost function high 
results distance measure promising 
experiment carried weights equal 
pattern constraint determines value distance constraints violated 
increasing weight patterns obvious thing row table results worse 
people violation particular constraint decreased expense constraints 
schedule personnel members constraints responsible distance violation patterns increased 
copying cost parameters weights gives worst results best option distance measures 
increasing weights violated constraint leads better quality solutions constraints violated 
test example copying cost parameters weights best option 
possible compare results obtained cost function multi criteria approach different evaluation functions 
fact comparison approaches numbers constraint violations obtained schedules multi criteria problem 
particular case see multi criteria approach outperforms single cost function approach 
happened example dataset multi criteria approach gave violations constraints cost function approach resulted violations minimum consecutive days constraint 
proof quality newly developed multi criteria approach realistic problems simultaneously satisfying soft constraints possible obtained results promising 
new multi criteria approach chapter overcomes practical difficulties automated nurse rostering multi criteria problem nature 
enables handling dissimilar constraints better way single cost function approach ranges possible values criteria consideration 
developed multi criteria approach incorporated meta heuristic allows scheduler control compensation constraints 
constraints easier satisfy taken account search algorithm 
multi criteria approach described chapter allows users set weights reflect relative importance constraints 
search solution corresponds reality scheduler controls compensation constraints 
aiming lowest number violations soft constraints cost parameters account current approach aims ideal point preference space 
tests real world data shown previously developed search algorithms perform new multi criteria method 
comparing results different objectives possible simple tests provide strong indications new multi criteria approach responds better planner changed objectives 
assigning larger weight criterion corresponding constraint important search increasing risk cutting parts search space 
general multi criteria approach chapter potential accommodate day practice hospital schedulers better single cost function approach 
chapter general discussion problem definition model development nurse rostering complex combinatorial problem hardly software system exists 
study clear especially belgian hospitals assistance head nurses ward managers automatically generate monthly rosters save lot time effort 
levels decision making distinguished nurse scheduling problem dealt thesis situated short term timetabling level 
main objective understand automatically generate comfortable shift schedules personnel members order meet staff coverage 
major achievement research determination key parameters issue development highly flexible model nurse rostering 
hospital personnel scheduling deals particular difficulties originating real world practical issues unpredictable load round clock large number different skill categories flexible contracts part time night nurses major contributions thesis captured extensive set realistic constraints integrated explicit implicit objectives general flexible model called anrom advanced nurse rostering model 
requirements hospital planners motivated choice considering personnel coverage hard constraint relaxed controlled manner 
model entire set time related constraints personal schedules treated soft constraints 
strategic decisions hiring trained people specific skill categories assigning personnel specific wards considered part rostering include results input model 
furthermore limits available information effort describe problem accurately possible including modifiable constraints parameters applicable wide range personnel scheduling problems 
development solution framework modifiable evaluation tools large set heuristics targeting specific objectives constitutes third contribution thesis 
enables set modify constraints selects suitable combination procedures particular requirements expecting feasible problem formulation planners 
modular evaluation method calculation solution quality easily fine tuned incorporates violations possible soft constraints 
evaluation procedure provides feedback planners practice assists making problem formulation coherent 
attempt guide planners performing consistency check settings 
provide procedures assist relaxing certain hard constraints avoiding better aiming preferred personnel coverage diminishing personnel members danger fulfilling contracts floating personnel requirements introduced thesis completely new time interval formulation personnel requirements 
cases floating requirements reflect better approach hospital planners want 
option substantially enlarges search space enables calculation quality solutions allowing different shift type combinations satisfying coverage constraints 
set modules solution framework increases applicability rostering algorithms different real world settings 
modules compatible search heuristics form third part thesis 
set meta heuristics hybrids included solution framework central search force solving anrom problems 
research evolved gradually obtained implicit knowledge problem search space behaviour meta heuristics 
development heuristics originates understanding shortcomings preceding approaches 
consider design new meta heuristics hybrids nurse rostering key contribution thesis 
maintaining hard constraints large set search environments considered 
introduced part variable neighbourhood search heuristic 
approach enables algorithms escape local optima especially applying neighbourhoods aim solving particular constraints providing sensitive optional characteristics solution 
nurse rostering package anrom commercially available wards belgian hospitals 
includes hybrid tabu search approach introduced thesis provides different algorithm combinations suitable requirements 
fast tabu search algorithms quickly find reasonably schedules response events staff 
demonstrated algorithms effective implementation diversification greedy steepest descent search environment inspired watching interactions users 
users model put emphasis higher quality solution algorithms provide objective schedule treating nurses equally number violated constraints low 
planners pleased fact system gives ability generate consistently better solutions manual planning procedures providing high level robustness 
acknowledge experienced planners easily improve schedules hand 
new memetic approach effective produce excellent solutions hard problems time available 
memetic algorithms outperform heuristics single solutions evolve mainly provide search different starting points due effort find characteristics solutions 
achievement thesis gained insight behaviour applying heuristics making different problem specific neighbourhoods 
commercial package models literature suitable tackling widely varying nurse rostering problems encountered practice 
set solve problem particular hospital tested theoretical problems 
consequently benchmarking possible test data provided users system anrom 
represent relevant group hospital schedulers system applied belgian hospitals consist wards 
developed meta heuristics violate hard constraints iterative search 
aim reducing value cost function 
multi criteria approach different quality measure distance solution ideal point preference space 
multi criteria approach thesis opens perspectives releasing planners setting cost parameters 
realistic increases flexibility setting weights modifying relative priority constraints 
multi criteria approach enables combining objectives different nature importance preference space 
longer necessary compare costs quantities overtime consecutive free days soft constraints easy satisfy satisfied maintaining feasibility 
definition ideal anti ideal point preference space simplifies assessment quality solutions 
automating nurse rostering problem belgian hospitals scheduling effort time reduced considerably compared manual approach previously 
time automatic schedule generation tailored suit time available selecting appropriate search heuristics 
proposed solution method saves lots time planners practice provides unbiased way generating schedules personnel members 
enables simple verification constraints helps redefining unrealistic hard constraints leads higher satisfaction personnel manifest applications 
directions research inexperienced users system anrom large set soft constraints inconvenient 
model foresee options warn planners case conflicting requirements 
application practice revealed hospital planners strict satisfying define hard constraints 
developed nurse rostering model requires insight characteristics specific data planners practice expected 
planning procedures combined meta heuristic search algorithms assist setting feasible hard constraints relaxing necessary 
beneficial model take idea relaxing strict distinction hard soft constraints 
consistency check procedure deals precedence soft constraints guides hospital planners consistent definition problem 
remaining set soft constraints pre checked large 
consistency check procedure merit extension pre evaluation larger set soft constraints 
provide interesting guidelines planners formulate problem feasible solutions exist 
personnel members attach high importance personal constraints days shifts requested assignments patterns constraints appear 
constraints importance people example concerned overtime 
problem complex compute solution exists satisfies constraints simultaneously user dependent consistency check helpful 
meta heuristic approaches depicted possibilities improving performance widely varying real world applications 
built set neighbourhoods local search generally applied algorithms 
refinements algorithms problem specific information apply best suitable neighbourhoods search 
research certainly build promising early findings testing multi criteria approach nurse rostering 
novel method initiated interesting new direction nurse rostering research problem clearly multi criteria problem nature 
pay attention appropriately calculating best worst values soft constraints related personnel member schedule 
coverage constraints objectives hard constraints real world practice 
criteria deserve attention evenly dividing violations certain constraints people combining soft constraints constraints related overtime compensating unwanted schedules past include testing behaviour search algorithms modify weights criteria order escape local optima 
consider fact constraints easily satisfied adapt weights specified corresponding criteria accordingly 
nurse rostering model developed explicitly address hospital personnel rostering techniques methods developed result research certainly applicable personnel scheduling problems 
course algorithms deal extensive set soft constraints valid healthcare 
sectors require evaluation constraints locations equipment irrelevant nurse rostering 
development widely applicable real world scheduling models definitely profit thesis build different modules development main building blocks model user definable constraints modifiable variables parameters inclusion explanatory evaluation function pre post planning algorithms assist formulating requirements relax certain constraints lastly application meta heuristics generate quality solutions 
personnel rosters healthcare schedules arranging patient care affect diverse aspects hospital organisation directly influence lives personnel 
nursing profession known involve hard stressful irregular hours lots night weekend 
shortage staff common hospitals contribute scheduling available staff efficiently 
bibliography aarts lenstra local search combinatorial optimization wiley isbn hershey stage manpower planning scheduling model service sector example 
operations research ahmad yamamoto evolutionary algorithms nurse scheduling problem proceedings congress evolutionary computation cec san diego isbn aickelin genetic algorithms multiple choice optimisation algorithms phd thesis european business management school university swansea aickelin dowsland exploiting problem structure genetic algorithm approach nurse rostering problem journal scheduling volume issue days employee scheduling week cycle burke erben eds proceedings rd international conference practice theory automated timetabling isbn anzai miura computer programme quick scheduling nursing staff medical informatics arthur ravindran multiple objective nurse scheduling model transactions vol 
bailey integrated days shift personnel scheduling computers industrial engineering bailey field personnel scheduling models journal operations management vol 
computer aided school university timetabling new wave burke ross eds practice theory automated timetabling international conference edinburgh springer barnes laguna tabu search experience production scheduling glover laguna taillard de werra eds annals operations research vol 
beasley cao dynamic programming algorithm crew scheduling problem computers operations research vol 
comparative evaluation labor tour scheduling methods decision sciences jacobs implicit modeling flexible break assignments optimal shift scheduling management science methodology labor scheduling service operation system decision sciences petrovic vanden berghe case reasoning employee rostering learning repair strategies domain experts submitted international transactions operational research petrovic vanden berghe storing adapting repair experiences personnel rostering proceedings th international conference practice theory automated timetabling gent accepted publication dowsland tabu implementation irregular stock cutting problem international journal production research vol 
du personnel dans un phd dissertation partement informatique de recherche op universit de montr montr multi objective approach nurse scheduling hard soft constraints socio economic planning science heuristic procedure crew rostering problem european journal operational research vol 
tabu search approach solving dimensional irregular cutting problem glover laguna taillard de werra eds annals operations research vol 
blau personnel scheduling microcomputer personnel administrator vol 
blau sear nurse scheduling microcomputer journal ambulance care management bradley martin continuous personnel scheduling algorithms literature review journal society health systems routing scheduling flexible job shop tabu search glover laguna taillard de werra eds annals operations research vol 
bremermann evolution intelligence 
nervous system model environment 
technical report contract dept mathematics university washington seattle brucker schumacher new tabu search procedure problem journal scheduling vol 
jacobs cost analysis alternative formulations personnel scheduling continuously operating organisations european journal operational research jacobs lyons tang improving personnel scheduling airline stations operations research vol 

fischer holonic transport scheduling journal applied artificial intelligence burke petrovic multicriteria approach examination timetabling burke erben eds practice theory automated timetabling third international conference konstanz springer burke cowling de causmaecker vanden berghe memetic approach nurse rostering problem applied intelligence special issue simulated evolution learning vol 
number springer burke de causmaecker petrovic vanden berghe multi criteria meta heuristic approach nurse rostering proceedings congress evolutionary computation cec honolulu ieee press burke de causmaecker petrovic vanden berghe fitness evaluation nurse scheduling problems proceedings congress evolutionary computation cec seoul ieee press burke de causmaecker petrovic vanden berghe floating personnel requirements shift timetable working sint burke de causmaecker petrovic vanden berghe variable neighbourhood search nurse rostering problems proceedings th metaheuristics international conference mic porto burke de causmaecker vanden berghe hybrid tabu search algorithm nurse rostering problem mckay 
eds simulated evolution learning lecture notes artificial intelligence vol 
springer burke ford weare examination timetabling british universities survey burke ross eds practice theory automated timetabling international conference edinburgh springer burke newall multi stage evolutionary algorithm timetabling problem ieee transactions evolutionary computation vol burke newall weare memetic algorithm university timetabling burke ross eds practice theory automated timetabling international conference edinburgh springer burke newall weare initialisation strategies diversity evolutionary timetabling evolutionary computation journal special issue scheduling vol 
burke smith hybrid evolutionary techniques maintenance scheduling problem ieee transactions power systems vol 
burns carter force size single shift schedules variable demands management science vol 
byrne potts scheduling toll collectors transportation science lamma mello integrating constraint logic programming operations research techniques crew rostering problem software practice experience vol 
carrasco multiobjective genetic algorithm class teacher timetabling problem burke erben eds practice theory automated timetabling third international conference konstanz springer carter comprehensive course timetabling student scheduling system university waterloo burke erben eds practice theory automated timetabling third international conference konstanz springer carter laporte developments practical examination timetabling burke ross eds practice theory automated timetabling international conference edinburgh springer carter laporte developments practical course timetabling burke carter eds practice theory automated timetabling second international conference toronto springer young integrated system patient assessment classification nurse staff allocation long term care facilities health services research fran ois monte carlo simulation population optimization proceedings congress evolutionary computation cec seoul ieee press ern approach traveling salesman problem efficient simulation algorithm journal optimization theory applications chan weil cyclical staff scheduling constraint logic programming burke erben eds practice theory automated timetabling third international conference konstanz springer 
chen yeung hybrid expert system approach nurse scheduling computers nursing cheng gen parallel machine scheduling problems memetic algorithms computers industrial engineering schaerf solving employee timetabling problems flexible workload tabu search burke erben eds proceedings rd international conference practice theory automated timetabling isbn collins automated assignment scheduling service personnel ieee expert colorni dorigo maniezzo genetic algorithms new approach time table problem nato asi series vol 
springer bij het sint erasmus 
get info corne ogden evolutionary optimisation methodist timetables burke carter eds practice theory automated timetabling second international conference toronto springer costa known methods colorings graphs glover laguna taillard de werra eds annals operations research vol 
cowling kendall soubeiga hyperheuristic approach scheduling sales summit burke erben eds practice theory automated timetabling third international conference konstanz springer gendreau hansen mladenovi parallel variable neighbourhood search median mic chairman de sousa proceedings th metaheuristics international conference porto potts van branch bound algorithm single machine scheduling batching minimize number late jobs european journal operational research vol 
brand reactive tabu search variable neighbourhood descent applied vehicle routing problem mic chairman de sousa proceedings th metaheuristics international conference porto dantzig comment traffic delays toll operations research vol computer assisted nurse scheduling constraint programming journal society health systems vol darwen yao choices cause operation iterated prisoner dilemma proceedings congress evolutionary computation cec seoul ieee press darwin origin species hansen mladenovi variable neighborhood search multiprocessor scheduling problem communication delays mic chairman de sousa proceedings th metaheuristics international conference porto dawkins selfish gene oxford university press de causmaecker de pauw vanden berghe agents route planning application special issue emerging challenges operations research vol 
de causmaecker lu vanden berghe agent technology timetabling working sint de causmaecker lu vanden berghe web standards timetabling accepted publication proceedings th international conference practice theory automated timetabling gent de causmaecker vanden berghe le voor de de colloquium en de causmaecker vanden berghe relaxation coverage constraints hospital personnel rostering accepted publication proceedings th international conference practice theory automated timetabling gent den st tzle neighborhoods revisited experimental investigation effectiveness variable neighborhood descent scheduling mic chairman de sousa proceedings th metaheuristics international conference porto de vries nursing workload measurement management information european journal operational research di schaerf tabu search techniques examination timetabling burke erben eds practice theory automated timetabling third international conference konstanz springer dowling krishnamoorthy mackenzie staff rostering large international airport annals operations research vol 
dowsland genetic algorithms tool 
operations research dowsland nurse scheduling tabu search strategic oscillation 
european journal operations research easton mansour distributed genetic algorithm employee staffing scheduling problems conference genetic algorithms san mateo easton borders analysis alternative scheduling policies hospital nurses production operations management vol easton sufficient working subsets tour scheduling problem management science eiben jansen michalewicz paechter solving csps evolutionary algorithms self adaptive constraint weights genetic evolutionary computation conference gecco fox comparison annealing techniques academic course scheduling burke carter eds practice theory automated timetabling second international conference toronto springer sizing scheduling full time part time workforce day weekend constraints annals operations research vol 
erben grouping genetic algorithm graph colouring exam timetabling burke erben eds practice theory automated timetabling third international conference konstanz springer generalised assignment type problems powerful modeling scheme burke carter eds practice theory automated timetabling second international conference toronto springer pardalos resende ribeiro grasp vns max cut mic chairman de sousa proceedings th metaheuristics international conference porto fischer ller cooperative transportation scheduling application domain dai journal applied artificial intelligence special issue intelligent agents vol 
fogel evolutionary computation fossil record ieee press franz baker leong mathematical model scheduling staffing health regions european journal operational research vol 
fraser simulation genetic systems automatic digital computers 
ii 
effects linkage rates selection australian journal biol 
sci 
vol 
bibliography operations research health care systems operations research fuller tackling scheduling problems integer programming master thesis university wales swansea garcia molina lopez de miguel garcia design interacting multiple model filters evolution strategies proceedings congress evolutionary computation cec seoul ieee press ge lee hong robust controller design genetic algorithm flexible spacecraft proceedings congress evolutionary computation cec seoul ieee press gendreau hertz laporte tabu search heuristic vehicle routing problem management science vol 
glover paths integer programming links artificial intelligence computers operations research vol 
glover laguna tabu search kluwer academic publishers isbn glover mcmillan general employee scheduling problem integration management science artificial intelligence computers operations research vol 
glover taillard de werra user guide tabu search glover laguna taillard de werra eds annals operations research vol 
goldberg genetic algorithms search optimization machine learning addison wesley reading gonz les rez brito variable neighbourhood search solving linear ordering problem mic chairman de sousa proceedings th metaheuristics international conference porto mathematical models airline schedule planning survey annals operations research vol 
graff radford formula emergency physician staffing american journal emergency medicine vol 

han 
oh evolutionary algorithm neural network controller optimization autonomous mobile robot navigation proceedings congress evolutionary computation cec seoul ieee press hansen jaumard algorithms maximum problem computing hansen mladenovi variable neighborhood search voss 
eds advances trends local search optimization kluwer academic publishers boston ma heckmann lengauer simulated annealing approach nesting problem textile manufacturing industry annals operations research vol 
henderson berry heuristic methods telephone operator shift scheduling experimental analysis management science hertz tabu search large scale timetabling problems european journal operational research hertz taillard de werra tabu search aarts lenstra eds local search combinatorial optimization wiley isbn holland adaptation natural artifical systems university michigan press ann arbor hung cyclical schedule hour day nursing management vol hung hospital nurse scheduling journal nursing administration volume number hancock heuristic approach nurse scheduling hospital units non stationary urgent demand fixed staff size journal society health systems vol 
metaheuristic approach multiple objective nurse scheduling foundations computing decision sciences vol 
jaumard generalized linear programming model nurse scheduling european journal operational research vol 
fujimoto applying evolutionary neural networks genetic algorithms control rolling inverted pendulum mckay 
eds simulated evolution learning lecture notes artificial intelligence vol 
springer simulated annealing new tool bin packing annals operations research vol 
yamamoto yoshikawa genetic algorithm constraints nurse scheduling problem proceedings congress evolutionary computation seoul ieee press kirkpatrick gelatt vecchi optimization simulated annealing science jennings nurse scheduling microcomputer computers operations research lam genetic fuzzy expert system stock market timing proceedings congress evolutionary computation cec seoul ieee press 
liang yao newton dynamic control adaptive parameters evolutionary programming mckay 
eds simulated evolution learning lecture notes artificial intelligence vol 
springer young allocation nursing personnel extended care facility health services research liu yao evolving neural networks hand seng stock index forecast proceedings congress evolutionary computation cec seoul ieee press final exam scheduling package journal operations research vol 
lyons young staff allocation model mental health facilities health services research maier wolfe cyclical scheduling allocation nursing staff socio economic planning science vol 
wright comparison neighbourhood search strategies multi objective combinatorial problems computers operations research vol 
successful hospital personnel scheduling interfaces vol 
meisels employee timetabling constraint networks knowledge rules mixed approach burke ross eds practice theory automated timetabling international conference edinburgh springer meisels combining rules constraints employee timetabling journal intelligent systems vol 
meisels experiments networks employee timetabling problems burke carter eds practice theory automated timetabling ii second international conference toronto springer meisels schaerf modelling solving employee timetabling problems applied intelligence accepted publication meyer auf hofe personnel assignment problem hierarchical constraint satisfaction proceedings third international conference practical application constraint technology london meyer auf hofe finding regions local repair partial constraint satisfaction advances artificial intelligence lnai springer verlag meyer auf hofe solving rostering tasks constraint optimization burke erben eds practice theory automated timetabling third international conference konstanz springer millar cyclic non scheduling shift nurses network programming european journal operational research vol 
miller implementing self scheduling journal nursing administration vol 
march miller nurse scheduling mathematical programming 
operations research mladenovi hansen variable neighborhood search computers operations research vol :10.1.1.13.8989

kim multiple lagrange multiplier method constrained evolutionary optimization mckay 
eds simulated evolution learning lecture notes artificial intelligence vol 
springer mladenovi variable neighbourhood search cardinality tree mic chairman de sousa proceedings th metaheuristics international conference porto martins ai approach crew scheduling proceedings moscato norman memetic approach traveling salesman problem implementation computational ecology combinatorial optimization message passing systems jane eds parallel computing transputer applications ios press amsterdam musa saxena scheduling nurses goal programming techniques ieee efficient generation rotating workforce schedules burke erben eds proceedings rd international conference practice theory automated timetabling isbn schaerf local search shift design mic proceedings th metaheuristics international conference porto employee scheduling van nostrand reinhold new york narasimhan algorithm single shift scheduling hierarchical workforce european journal operational research vol 
okada approach generalised nurse scheduling problem generation declarative program represent institution specific knowledge 
computers biomedical research okada okada prolog system nursing staff scheduling implemented personal computer 
computers biomedical research investigating reasoning care scheduling knowledge policy vol 
flexible nurse scheduling support system arizona state university tempe arizona unpublished doctoral dissertation disaggregation model flexible nurse scheduling support system socio economical planning science vol 
integrated nurse scheduling model journal society health systems vol 
allocation surgical procedures operating rooms journal medical systems vol 
allocation operating rooms goal programming journal medical systems vol 
bailey goal programming model subsystem flexible nurse scheduling support system ieee transactions vol 
paechter cumming local suggestion lists improving solution timetabling problems evolutionary algorithms ed evolutionary computation springer lecture notes computer science vol 
paechter cumming norman extensions memetic timetabling system burke ross eds practice theory automated timetabling international conference edinburgh springer paechter rankin cumming improving lecture timetabling system university wide burke carter eds practice theory automated timetabling ii second international conference toronto springer paechter rankin cumming fogarty timetabling classes entire university evolutionary algorithm parallel problem solving nature ppsn springer lncs petrovic petrovic eco dss multicriteria loading thermal power generators journal decision systems operative evolutionary genetic algorithm solve dimensional container loading problem proceedings congress evolutionary computation cec seoul ieee press tabu search algorithm resource constrained assignment problem 
journal operational research society radcliffe surry formal memetic algorithms fogarty ed evolutionary computing lecture notes computer science springer heuristic computerised nurse scheduling system computers operational research reeves genetic algorithms operations researcher informs vol reiser riddle evolving logic programs classify chess endgame positions mckay 
eds simulated evolution learning lecture notes artificial intelligence vol 
springer self scheduling professional nurses nursing management vol 
rosenbloom cyclic nurse scheduling european journal operational research ross hart corne observations ga exam timetabling burke carter eds practice theory automated timetabling second international conference toronto springer schaerf survey automated timetabling artificial intelligence review schaerf meisels solving employee timetabling problems generalised local search proceedings italian ai schneider optimum manpower utilization model health organisations operations research vol 
assigning sessions amsterdam criminal court burke erben eds proceedings rd international conference practice theory automated timetabling isbn personnel timetabling models case studies burke erben eds proceedings rd international conference practice theory automated timetabling isbn van de velde timetables dutch high schools ed operational research elsevier science publishers 
schwefel numerical optimization computer models wiley scott clark pham genetic clustering algorithm guided descent algorithm proceedings congress evolutionary computation cec seoul ieee press segal operator scheduling problem network flow approach operations research taillard solving real life vehicle routing problems efficiently tabu search glover laguna taillard de werra eds annals operations research full part time tour scheduling methodology international journal operations production management sierra evolution fisher discriminants proceedings congress evolutionary computation cec seoul ieee press benton workforce staffing scheduling hospital nursing specific models european journal operational research nurse scheduling models state art review journal society health systems smith application interactive algorithm develop cyclical rotational schedules nursing personnel infor vol 
february smith bird wiggins computerised system schedule nurses recognises staff preferences hospital health service administration smith wiggins computer nurse scheduling system computers operations research vol 
smith daniels smith daniels capacity management health care services review research directions decision sciences vol fleet scheduling optimization simulated annealing approach burke erben eds practice theory automated timetabling third international conference konstanz springer srivastava 
chen part type selection problem flexible manufacturing systems tabu search algorithms glover laguna taillard de werra eds annals operations research vol 
staff scheduling genetic algorithm heuristic operators proceedings ieee conference evolutionary computation taylor huxley break tradition san fransisco police patrol officer scheduling optimization decision support system interfaces complexity aspects secondary school timetabling problems burke erben eds practice theory automated timetabling third international conference konstanz springer tien manpower scheduling algorithms society industrial applied mathematics thompson simulated annealing heuristic shift scheduling non continuously available employees computers operations research thompson dowsland multi objective university examination scheduling ebms european business management school swansea university uk thompson dowsland variants simulated annealing examination timetabling problem annals operations research trivedi warner branch bound algorithm optimum allocation float nurses management science vol 
tsang fast local search guided local search application british telecom workforce scheduling problem operations research letters vol 
gen evolutionary recognition features cad data mckay 
eds simulated evolution learning lecture notes artificial intelligence vol 
springer ueda takahashi evolving timeslot room assignment genetic algorithm technique university timetabling burke erben eds practice theory automated timetabling third international conference konstanz springer de 
stichting technologie de mei van construction basic math schedules bms sports competition graph theory burke carter eds practice theory automated timetabling ii second international conference toronto springer warner nurse staffing scheduling reallocation hospital hospital health services administration warner scheduling nursing personnel nursing preference mathematical programming approach 
operations research warner mathematical programming model scheduling nursing personnel hospital management science algorithm large scale integer programming application airline crew scheduling annals operations research vol 
weil francois constraint programming nurse scheduling ieee engineering medicine biology white xie examination timetables tabu search longer term memory burke erben eds practice theory automated timetabling third international conference konstanz springer willis staffing rosters breaks case study journal operational research society wolfe young staffing nursing unit part nursing res 
wolfe young staffing nursing unit part ii nursing res 
woodruff zemel hashing vectors tabu search glover laguna taillard de werra eds annals operations research vol 
wren scheduling timetabling rostering special relationship 
burke ross eds practice theory automated timetabling international conference edinburgh springer wren 
rousseau bus driver scheduling overview eds computer aided transit scheduling springer verlag concept compromise solutions method displaced ideal computers operations research vol 
generic object constraint model university course timetabling burke erben eds practice theory automated timetabling third international conference konstanz springer 
