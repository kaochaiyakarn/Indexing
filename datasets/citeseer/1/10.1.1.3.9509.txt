copyright association permission digital hard copies part ofthis personal classroom granted copies distributed profit copies bear notice full citation page 
copyrights components owned acm honored 
abstracting credit permitted 
copy republish post servers redistribute requires prior specific permission fee 
request publications dept acm fax permissions acm org 
improved approximation algorithms maximum cut satisfiability problems semidefinite programming michel goemans david williamson ibm watson randomized approximation algorithms maximum cut max cut maximum satisfiability max sat problems deliver solutions expected value times optimal value 
algorithms simple elegant technique randomly rounds solution nonlinear programming relaxation 
relaxation interpreted semidefinite program eigenvalue minimization problem 
best previously known approximation algorithms problems performance guarantees max cut max sat 
slight extensions analysis lead approximation algorithm maximum directed cut problem max approximation algorithm max sat best previously known approximation algorithms performance guarantees respectively 
algorithm gives substantial progress approximating max cut nearly years represents semidefinite programming design approximation algorithms 
undirected graph non negative weights ij ji edges maximum cut problem max cut finding set vertices maximizes weight edges cut weight edges endpoint simplicity usually set ij denote weight cut ij max cut problem karp original np complete problems long known np complete problem unweighted ij 
max cut problem solvable polynomial time special classes graphs graph planar 
theoretical importance max cut problem applications circuit layout design statistical physics barahona 
comprehensive survey max cut problem reader referred poljak 
exist efficient algorithms np hard maximization problems typical approach solving problem find ae approximation algorithm preliminary version appeared proceedings th annual acm symposium theory computing montr eal pages 
address dept mathematics room cambridge ma 
email goemans math mit edu 
research supported part nsf contract ccr darpa contract 
address ibm watson research center room box yorktown heights ny 
email watson ibm com 
research supported nsf postdoctoral fellowship 
research conducted author visiting mit 
polynomial time algorithm delivers solution value ae times optimal value 
constant ae called performance guarantee algorithm 
term ae approximation algorithm randomized polynomial time algorithms deliver solutions expected value ae times optimal 
sahni gonzales approximation algorithm max cut problem 
algorithm iterates vertices decides assign vertex placement maximizes weight cut vertices algorithm essentially equivalent randomized algorithm flips unbiased coin vertex decide vertices assigned set number researchers approximation algorithms unweighted max cut problem performance guarantees gamma delta jv jej delta denotes maximum degree progress improving constant performance guarantee sahni gonzales straightforward algorithm 
simple randomized ff gamma ffl approximation algorithm maximum cut problem ff min gamma cos ffl positive scalar 
algorithm represents substantial progress approximating max cut problem nearly years 
algorithm max cut leads directly randomized ff gamma ffl approximation algorithm maximum satisfiability problem max sat 
best previously known algorithm problem performance guarantee due yannakakis 
somewhat simpler approximation algorithm goemans williamson 
improved sat algorithm leads approximation algorithm max sat problem fractionally better yannakakis approximation algorithm max sat 
slight extension analysis yields fi gamma ffl approximation algorithm maximum directed cut problem max fi min arccos gamma gamma cos best previously known algorithm max performance guarantee 
algorithm depends means randomly rounding solution nonlinear relaxation max cut problem 
relaxation seen semidefinite program eigenvalue minimization problem 
knowledge time semidefinite programs design analysis approximation algorithms 
relaxation plays crucial role allowing obtain better performance guarantee previous approximation algorithms compared value solution obtained total sum weights ij sum arbitrarily close twice value maximum cut 
semidefinite program problem optimizing linear function symmetric matrix subject linear equality constraints constraint matrix positive semidefinite 
semidefinite programming special case convex programming called linear programming cones cone lp set positive semidefinite matrices constitutes convex cone 
extent semidefinite programming similar linear programming see alizadeh comparison :10.1.1.35.4131
inherits elegant duality theory cone lp see wolkowicz exposition alizadeh :10.1.1.35.4131
simplex method generalized semidefinite programs 
ffl semidefinite programs solved additive error ffl polynomial time ffl part input running time dependence ffl polynomial log ffl 
done ellipsoid algorithm grotschel polynomial time algorithms convex programming vaidya interior point methods nesterov nemirovskii alizadeh :10.1.1.35.4131
terminate polynomial time algorithms implicitly assume requirement feasible space size optimum solution details see grotschel section alizadeh :10.1.1.35.4131
nesterov nemirovskii alizadeh development design analysis interior point methods semidefinite programming available time writing see survey vandenberghe boyd 
semidefinite programming interesting applications variety areas including control theory nonlinear programming geometry combinatorial optimization see :10.1.1.35.4131
combinatorial optimization importance semidefinite programming leads tighter relaxations classical linear programming relaxations graph combinatorial problems 
beautiful application semidefinite programming lov asz shannon capacity graph 
conjunction polynomial time solvability semidefinite programs leads known polynomial time algorithm finding largest stable set perfect graph grotschel 
increased interest semidefinite programming combinatorial point view :10.1.1.35.4131
started lov asz schrijver developed machinery define tighter tighter relaxations integer program quadratic semidefinite programming 
papers demonstrated wide applicability power semidefinite programming combinatorial optimization problems 
semidefinite programming relaxations inspired papers alizadeh :10.1.1.35.4131
max cut semidefinite programming relaxation consider equivalent eigenvalue minimization problem proposed delorme poljak 
eigenvalue minimization problem consists minimizing decreasing sum eigenvalues matrix subject equality constraints matrix minimizing delta delta delta delta delta delta 
equivalence semidefinite program consider eigenvalue bound delorme poljak established poljak rendl 
building overton alizadeh shown eigenvalue minimization problems general formulated semidefinite programs :10.1.1.35.4131
potentially quite useful abundant literature eigenvalue bounds combinatorial optimization problems see survey mohar poljak 
shown poljak rendl delorme poljak eigenvalue bound provides bound maximum cut practice 
delorme poljak study worst case ratio maximum cut eigenvalue bound 
worst instance aware cycle ratio unable prove bound better worst case 
result implies worst case bound ff close bound cycle 
discussion worst case behavior indicates straightforward modifications technique lead significant improvements max cut result 
furthermore max cut max sat max max snp hard known exists constant approximation algorithm problems imply np 
bellare goldreich sudan shown small max cut max sat 
bidirected instances max equivalent instances max cut bound max cut applies max 
appearance feige goemans extended technique yield approximation algorithm max sat approximation algorithm max 
semidefinite programming similar rounding ideas karger motwani sudan able show color colorable graph gamma colors polynomial time 
frieze jerrum technique devise approximation algorithms maximum way cut problem improve previously best known gamma performance guarantee 
chor sudan apply ideas problem 
techniques continue prove useful designing approximation algorithms 
expect practice performance algorithms better worst case bounds 
performed preliminary computational experiments max cut algorithm show number different types random graphs algorithm usually optimal solution 
preliminary version method obtain deterministic versions approximation algorithm performance guarantees 
method subtle error pointed researchers 
mahajan ramesh document error propose derandomization scheme algorithms 
structured follows 
randomized algorithm max cut section analysis section 
elaborate semidefinite programming bound relationship max cut problem section 
quality relaxation investigated section computational results section 
section show extend algorithm algorithm max sat max sat max problems 
conclude remarks open problems section 
randomized approximation algorithm max cut graph vertex set 
ng non negative weights ij ji pair vertices weight maximum cut integer quadratic program maximize ij gamma subject gamma see note set corresponds cut weight ij gamma 
solving integer quadratic program np complete consider relaxations 
relaxations obtained relaxing constraints extending objective function larger space possible solutions feasible relaxation optimal value relaxation upper bound optimal value 
interpret restricting dimensional vector unit norm 
interesting relaxations defined allowing multi dimensional vector unit euclidean norm 
linear space spanned vectors dimension assume vectors belong precisely dimensional unit sphere sm 
ensure resulting optimization problem relaxation need define objective function way reduces ij gamma case vectors lying dimensional space 
natural ways guaranteeing property 
example replace gamma gamma delta delta represents inner product dot product resulting relaxation denoted maximize ij gamma delta subject show section solve relaxation semidefinite programming 
simple randomized algorithm max cut problem 

solve obtaining optimal set vectors 
vector uniformly distributed unit sphere 
set delta 
words choose random hyperplane origin normal partition vertices vectors lie plane non negative inner product lie negative inner product 
motivation randomized step comes fact independent coordinate system applying orthonormal transformation set vectors results solution objective value 
denote value cut produced way expectation 
show theorem section set vectors expected weight cut defined random hyperplane ij arccos delta show theorem ff delta ij gamma delta ff min mc optimal value maximum cut optimal value relaxation expected weight cut generated algorithm equal mc algorithm performance guarantee ff max cut problem 
argue algorithm implemented polynomial time 
assume weights integral 
section show program equivalent semidefinite program 
show algorithm semidefinite programming obtain ffl set vectors value greater gamma ffl time polynomial input size log ffl approximately optimal vectors randomized algorithm produce cut expected value greater equal ff gamma ffl ff gamma ffl mc point unit sphere generated drawing values 
independently standard normal distribution normalizing vector obtained see knuth purposes need normalize resulting vector standard normal distribution simulated uniform distribution see knuth 
algorithm randomized ff gamma ffl approximation algorithm max cut 
analysis algorithm section analyze performance algorithm 
analyze general case consider case maximum cut large generalization negative edge weights 
conclude section new formulation max cut problem 
fv 
vectors belonging expected value cut produced randomized algorithm previous section 
start characterizing expected value cut 
theorem ij arccos delta vector drawn uniformly unit sphere know linearity expectation ij delta pr sgn delta sgn delta sgn 
theorem implied lemma 
lemma pr sgn delta sgn delta arccos delta proof restatement lemma probability random hyperplane separates vectors directly proportional angle vectors proportional angle arccos delta 
symmetry pr sgn delta sgn delta pr delta delta 
set fr delta delta corresponds intersection half spaces dihedral angle precisely intersection sphere spherical angle symmetry sphere measure equal times measure full sphere 
words pr delta delta lemma follows 
main theorem 
argued theorem applied vectors value greater gamma ffl implies algorithm performance guarantee ff gamma ffl 
recall defined ff min gamma cos theorem ff ij gamma delta theorem nonnegativity ij result follows lemma applied delta lemma gamma arccos ff delta gamma proof expression ff follows straightforwardly change variables cos see part 
quality performance guarantee established lemma 
lemma ff proof simple calculus see ff achieves value non zero root cos sin 
formally prove bound observe 
concavity gamma cos range implies gamma gamma cos gamma cos gamma sin sin gamma cos gamma sin 
choosing gamma cos gamma sin derive gamma cos sin implying ff sin analyzed expected value cut returned algorithm 
randomized algorithms give high probability results 
case computing variance cut value analytically difficult 
fact bounded ij give lower bounds probability gamma ffl 
plot arccos function gamma 
ratio slope line 
minimum slope precisely ff corresponds dashed line 
ii plot represents arccos gamma function approaches approaches 
iii dashed line corresponds fl 
analysis maximum cut large refine analysis prove better performance guarantee value relaxation constitutes large fraction total weight 
define tot ij arccos gamma 
fl value attaining minimum interval 
value fl approximately 
theorem ij gammav deltav tot fl ij gamma delta theorem implies performance guarantee gamma ffl fl 
varies fl easily verifies varies ff see part ii 
proof letting ij tot gammav deltav rewrite expected weight cut produced algorithm equal ij arccos delta tot arccos gamma tot bound evaluate min subject consider relaxation obtained replacing largest pointwise convex function smaller equal 
easy see linear slope ff fl equal greater fl 
see part iii 
fl fact convex function 
shows tot ij gamma delta proving result 
analysis negative edge weights far assumed weights non negative 
practical problems edge weights negative 
case definition performance guarantee modified optimum value positive negative 
give corresponding generalization theorem arbitrary weights 
theorem gamma gamma ij gamma min 
fe gamma gamma ff ij gamma delta gamma gamma proof quantity gamma gamma written ij ij arccos delta ij jw ij gamma arccos delta similarly ij gamma delta gamma gamma equal ij ij gamma delta ij jw ij delta result follows lemma variation 
lemma gamma gamma arccos ff delta 
proof lemma follows lemma change variables gammay noting gamma arccos arccos gammaz 
new formulation max cut interesting consequence analysis new nonlinear formulation maximum cut problem 
consider nonlinear program maximize ij arccos delta subject denote optimal value program 
theorem mc proof show mc follows relaxation objective function reduces ij gamma case vectors lying dimensional space 
see mc vectors denote optimal solution 
theorem see randomized algorithm gives cut expected value exactly implying exist cut value relaxations duality section address question solving relaxation 
showing equivalent semidefinite program 
explore dual semidefinite program relate eigenvalue minimization bound delorme poljak 
solving relaxation defining terms notation 
matrices consideration defined reals 
theta matrix said positive semidefinite vector ax 
statements equivalent symmetric matrix see positive semidefinite ii eigenvalues non negative iii exists matrix iii possibly singular theta matrix theta matrix symmetric positive semidefinite matrix theta matrix full row rank satisfying iii obtained time incomplete cholesky decomposition 
decomposition see positive semidefinite ii corresponds precisely set unit vectors 
sm simply correspond vector ith column ij delta matrix known gram matrix fv 

equivalence reformulate semidefinite program max ij gamma ij sd subject ii symmetric positive semidefinite ij 
feasible solutions sd referred correlation matrices 
strictly speaking solve sd optimality polynomial time optimal value fact irrational 
algorithm semidefinite programming obtain ffl solution value greater gamma ffl time polynomial input size log ffl example alizadeh adaptation ye interior point algorithm semidefinite programming performs log tot log ffl iterations :10.1.1.35.4131
exploiting simple structure problem sd indicated see section iteration implemented time 
optimal solution sd incomplete cholesky decomposition obtain vectors 
sm ij gamma delta gamma ffl 
optimum solutions sd show existence solution low rank 
pierce watkins show extreme solution sd expressed strict convex combination feasible solutions rank gamma 
related results see 
means exists primal optimum solution sd rank optimum vectors embedded 
result follows general statement semidefinite programs due implicit extreme solution semidefinite program linear equalities rank semidefinite dual mentioned elegant duality theory semidefinite programming 
turn discussing dual program sd 
typical assume objective function semidefinite program symmetric 
purpose rewrite objective function sd ij gamma ij tot gamma ij ij matrix form objective function conveniently written tot gamma tr wy ij tr denotes trace 
dual sd simple description tot min fl subject diag fl positive semidefinite diag fl denotes diagonal matrix ith diagonal entry fl dual simple interpretation 
diag fl positive semidefinite expressed words weight ij viewed delta vectors fl delta kc weight cut delta greater fl fl fl fl fl fl fl fl tot fl showing weak duality easy 
consider primal feasible solution dual vector fl 
diag fl positive semidefinite derive tr diag fl see ex 

tr diag fl tr diag fl tr wy fl tr wy implying difference dual objective function value primal objective function value non negative 
semidefinite programs full generality guarantee primal optimum value equal dual optimum value 
maximum resp 
minimum fact supremum resp 
infimum guarantee supremum resp 
infimum attained 
pathological cases 
programs sd behave nicely programs attain optimum values values equal 
shown variety ways see 
strong duality holds case argument showing weak duality implies optimum primal solution optimum dual solution fl tr diag fl 
diag fl positive semidefinite derive diag fl see ex 

strong form complementary slackness semidefinite programs see alizadeh component wise product expressed trace replaced matrix multiplication :10.1.1.35.4131
implies example diag fl share system eigenvectors rank rank diag fl eigenvalue bound delorme poljak relaxation equivalent eigenvalue upper bound value maximum cut mc introduced delorme poljak 
describe bound introduce notation 
laplacian matrix ij defined ij gammaw ij ii ik maximum eigenvalue matrix denoted max 
lemma delorme poljak satisfy 

max diag upper bound mc proof simple 
optimal solution integer quadratic program 
notice ly mc rayleigh principle max max kxk mx obtain max diag diag ly mc proving lemma 
vector satisfying called correcting vector 
max diag bound proposed delorme poljak optimize correcting vectors eig inf eig subject mentioned eigenvalue minimization problems formulated semidefinite programs 
max cut equivalence sd eig established poljak rendl 
completeness derive equivalence eig dual 
optimum dual vector fl smallest eigenvalue diag fl decrease fl ffl reduce dual objective function 
rewritten max gammaw gamma diag fl 
define fl tot definition 
defining gamma fl gamma ij easily verifies gammaw gamma diag fl diag gamma implying max diag shows eig converse inequality follows reversing argument 
quality relaxation section consider tightness analysis quality semidefinite bound observe theorem implies corollary corollary instance max cut mc ff cycle delorme poljak shown mc eig implying worst case analysis tight 
obtain bound relaxation observing cycle gamma gamma gamma gamma gamma optimal vectors lie dimensional subspace expressed cos sin 
corresponding cos mc cycle yields bound delorme poljak 
delorme poljak shown mc eig holds special subclasses graphs planar graphs line graphs 
unable prove bound better absolute worst case 
worst case value mc completely settled exist instances close ff showing analysis algorithm practically tight 
leslie hall observed petersen graph 
give unweighted instance ratio vectors nice dimensional representation 
constructed weighted instance vertices ratio 
instances strongly self dual polytopes due lov asz 
polytope said strongly self dual inscribed unit sphere ii circumscribed sphere origin center radius iii bijection oe vertices facets vertex facet oe orthogonal vector example strongly self dual polytopes precisely regular odd polygons 
associate graph self dual polytope vertex set corresponds vertices edge belongs facet oe equivalently belongs oe 
regular odd polygons graphs simply odd cycles 
conditions ii iii inner product delta pair adjacent vertices equal gammar 
result strongly self dual polytope leads feasible solution value tot lov asz gives recursive construction class strongly self dual polytopes 
show choosing dimension large construction leads strongly self dual polytopes arbitrarily close critical value giving bound ff 
unclear general polytopes non negative weights selected vectors polytope constitute optimum solution 
conjecture instances lead proof arbitrarily close ff 
shown imply ratio mc graph vertices ratio unweighted case 
convex hull optimum vectors depicted right circle represents center sphere 
computational results practice expect algorithm perform better worst case bound ff 
poljak rendl see delorme poljak report computational results showing bound eig typically instances tried worse away mc performed computational experiments cuts computed algorithm usually semidefinite bound bound 
implement algorithm code supplied vanderbei special class semidefinite programs 
vanderbei code solve semidefinite program generate random vectors output best cuts induced 
applied code small subset instances considered poljak rendl 
particular considered different types random graphs complete geometric graphs defined traveling salesman problem tsp instances tsplib see reinelt 
different types random graphs ran instances graphs vertices graphs size graphs size 
type random graph edge included probability 
type random graph edge weight drawn uniformly interval ratio theorem reporting nearness semidefinite bound 
type random graph size edge included probability leading constant expected degree 
type random graphs edge included probability probability leading large cut vertices 


summarize results experiments table 
cpu times cpu seconds sun sparcstation 
case tsp instances euclidean instances tsplib set edge weight ij euclidean distance points summarize type graph size num trials ave int gap ave cpu time type type type type table summary results algorithm random instances 
ave int gap average ratio value cut generated semidefinite bound type graphs ratio value cut generated minus negative edge weights semidefinite bound minus negative edge weights 
results table 
instances compute optimal solution instances value cut produced equal able exploit additional information dual semidefinite program prove optimality problem dantzig gr hk poljak rendl show solution optimal 
tsplib instances maximum cut value semidefinite bound 
computational results tempting speculate stronger bound proven euclidean instances 
instance defined unit length equilateral triangle maximum cut value ratio 
homer implemented algorithm cm shown produces optimal nearly optimal solutions number max cut instances derived minimization problems 
instances provided michael vertices 
generalizations technique section approximate problems 
section describe variation max cut give ff gamma ffl approximation algorithm 
section give ff gamma ffl approximation algorithm max sat problem show leads slightly improved algorithm max sat 
section give fi gamma ffl approximation algorithm maximum directed cut problem max fi 
cases show approximate general integer quadratic programs model problems 
max res cut max res cut problem variation max cut pairs vertices forced side cut different sides cut 
extension instance size sd val cut val time dantzig gr gr gr hk kroa table summary results algorithm tsplib instances 
sd val value produced semidefinite relaxation 
cut val value best cut output algorithm 
algorithm max res cut problem trivial 
merely need add constraints delta delta gamma gamma resp 
gamma corresponds pair vertices forced side resp 
different sides cut 
randomized algorithm section setting delta gamma gives feasible solution max res cut assuming feasible solution exists 
easy see delta algorithm produce solution 
delta gamma case algorithm produces solution gamma delta delta event happens probability 
analysis expected value cut unchanged resulting algorithm randomized ff gamma ffl approximation algorithm 
approach problem standard reduction max res cut max cut contracting edges switching cuts see 
reduction introduces negative edge weights discuss theorem show max cut algorithm applied reduced instance performance guarantee ff gamma ffl original max res cut instance 
fact general statement ae approximation algorithm sense theorem max cut instances possibly having negative edge weights leads ae approximation algorithm max res cut 
max sat max sat instance maximum satisfiability problem max sat defined collection boolean clauses clause disjunction literals drawn set variables fx 
literal variable negation length clause number distinct literals clause 
addition clause associated non negative weight optimal solution max sat instance assignment truth values variables 
maximizes sum weight satisfied clauses 
max sat consists max sat instances clause length 
max sat np complete best approximation algorithm known previously performance guarantee due yannakakis see goemans williamson 
max cut problem max sat known max exists constant existence approximation algorithm implies np 
bellare goldreich sudan shown approximation algorithm max sat imply np shown ae approximation algorithm max res cut translated ae approximation algorithm max sat show direct algorithm 
observation reduction max res cut max cut mentioned previous section shows ae approximation max cut negative edge weights translates ae approximation algorithm max sat 
max sat order model max sat consider integer quadratic program maximize ij gamma ij subject gamma ij ij non negative 
objective function non negative linear form sigma model max sat introduce variable quadratic program boolean variable sat instance introduce additional variable value determine correspond true max sat instance 
precisely true false 
boolean formula define value formula true formula false 
gamma gammay observe gamma gamma gamma gamma gamma gamma gamma value clauses literals similarly expressed instance negated needs replace gammay value clause literals clause expressed form required 
result max sat problem modelled maximize sat subject gamma 
ng non negative linear combinations gamma sat program form 
relax maximize ij gamma delta ij delta subject expected value solution produced randomized algorithm 
linearity expectation ij pr sgn delta sgn delta ij pr sgn delta sgn delta analysis max cut algorithm note pr sgn delta sgn delta gamma arccos delta approximation ratio general program follows lemmas 
show theorem implies algorithm ff gamma ffl approximation algorithm max sat 
theorem ff ij gamma delta ij delta max sat improved max sat algorithm leads slightly improved approximation algorithm max sat 
developed randomized approximation algorithms max sat 
considered linear programming relaxation max sat problem denotes set non negated variables clause gamma set negated variables max subject gamma gamma associating set true set false clause satisfied clause satisfied program exactly corresponds max sat problem 
showed feasible solution set true probability probability clause satisfied gamma gamma 
considered choosing randomly algorithms set true independently probability set true independently probability combined algorithm probability length clause satisfied gamma gammak gamma gamma expression shown lengths optimal solution linear program algorithm results approximation algorithm max sat expected value algorithm formulate slightly different relaxation max sat problem 
denote relaxed version expression previous section products replaced inner products vectors delta delta gamma delta delta delta gamma delta 
consider relaxation max subject gamma delta set true probability optimal solution corresponding semidefinite program arguments satisfy clause length probability gamma gamma obtain improved bound consider algorithms set true independently probability set true independently probability optimal solution program pick random unit vector set true iff sgn delta sgn delta 
suppose algorithm probability 
previous section algorithm probability clause length satisfied ffu expected value solution ffp ffp gamma gammal gamma gamma set expected value yielding approximation algorithm 
see check value expression lengths notice min gamma gamma gamma gamma gamma gamma 
obtain slightly better approximation algorithm max sat problem 
bottleneck analysis algorithm contributes expected weight clauses length greater 
clause length set length clauses formed literals time contain gamma delta clauses 
literals set true gamma clauses satisfied 
program relaxation max sat problem max subject gamma gamma delta algorithm expected value ffu expected value clause length ff delta gamma delta ff delta gamma ff delta expectation algorithm ffp ffp gamma gammal gamma gamma ff delta setting obtain approximation algorithm verified checking expression lengths noticing gamma gamma gamma small improvements possible tightening analysis 
max suppose directed graph weights ij directed arc tail arc head 
maximum directed cut problem finding set vertices maximizes weight edges tails heads problem np hard straightforward reduction max cut 
best previously known approximation algorithm max performance guarantee 
model max consider integer quadratic program max ijk gamma gamma ijk subject gamma ijk ijk non negative 
observe gamma gamma written gamma gamma gamma objective function interpreted non negative restricted quadratic form sigma gamma gamma equal gammay gammay 
model max problem program introducing variable max sat program introducing variable denote side cut 
iff arc contributes weight ij gamma ij gamma gamma cut 
summing arcs gives program form 
observe directed graph weighted indegree vertex equal weighted outdegree program reduces form approximation algorithm performance guarantee ff gamma ffl 
relax max ijk gamma delta gamma delta delta ijk delta delta delta subject approximate exactly algorithm 
analysis somewhat complicated 
show performance guarantee fi slightly weaker fi min arccos gamma gamma cos vector drawn uniformly unit sphere know linearity expectation expected value solution output ijk delta pr sgn delta sgn delta sgn delta ijk delta pr sgn delta sgn delta sgn delta consider term sum say ijk delta pr sgn delta sgn delta sgn delta 
ijk terms dealt similarly simply replacing gammav performance guarantee follows proof lemmas 
lemma pr sgn delta sgn delta sgn delta gamma arccos delta arccos delta arccos delta lemma gamma arccos delta arccos delta arccos delta fi delta delta delta fi min arccos gamma gamma cos 
proof lemma short proof relying spherical geometry 
desired probability seen equal twice area spherical triangle polar spherical triangle defined stated way result corollary girard formula see expressing area spherical triangle angles excess gamma proof lemma principles 
fact proof parallels euler proof see girard formula 
define events sgn delta sgn delta sgn delta sgn delta sgn delta sgn delta sgn delta sgn delta sgn delta sgn delta sgn delta sgn delta note gamma define similarly gamma gamma clearly pr pr pr pr pr pr pr similarly adding equalities subtracting obtain pr pr pr pr lemma pr gamma arccos delta similarly derive pr gamma arccos delta arccos delta arccos delta proving lemma 
proof lemma easily verify defined value fi greater 
arccos delta arccos delta arccos delta 
theory spherical triangles follows possible values possible vectors define set see corollary 
claim restated gamma fi cos cos cos minimize gamma gamma fi cos cos cos consider cases 

gamma 
hand cos cos cos cos cos cos cos cos cos gamma cos cos cos gamma cos cos cos gamma derive gamma fi cos cos cos gammab inequality fact gamma gammab cos cos cos gammab 
symmetry assume observe gamma gamma hand cos cos cos cos cos gamma cos cos cos letting observe claim equivalent gamma fi cos cos 
fact verify gamma cos cos implying claim 


loss generality 
definition implies case reduces previous 

assume implies 
reduced problem case 
case belongs interior implies gradient vanish hessian positive semidefinite 
words sin sin sin fi cos cos cos 
derive gamma gamma fi cos 
lemma follows fact definition fi fact cos arccos gamma obtain fi gamma ffl approximation algorithm max problem 
concluding remarks motivation studying semidefinite programming relaxations came realization standard tool linear programming relaxations approximation algorithms limits easily surpassed see goemans williamson 
fact classical linear programming relaxation maximum cut problem shown arbitrarily close twice value maximum cut worst case 
lov asz schrijver showed tighter tighter relaxations obtained semidefinite programming worthwhile investigate power relaxations worst case perspective 
results constitute step direction 
mentioned steps improved results max sat max feige goemans coloring karger motwani sudan 
think continued investigation methods promising 
leaves open questions think especially interesting problems 
question approximation algorithm max cut obtained explicitly solving semidefinite program 
example approximation algorithms weighted vertex cover involved solving linear program bar yehuda devised primal dual algorithm linear programming analysis algorithm 
semidefinite analog possible max cut 
second question adding additional constraints semidefinite program leads better worst case bound 
reason think true 
linear constraints known program find optimal solution planar graph gap current semidefinite program cycle 
consequence situation max snp problems longer clear cut 
best known approximation results max cut max sat long standing defined bounds tempting believe done approximating problems matter time matching hardness results 
improved results rescue algorithm designers 
max snp problems approximated arbitrarily closely designing improved approximation algorithms 
appearance extended benefited discussions large number colleagues 
particular don coppersmith david shmoys pointing max sat algorithm lead improved max sat algorithm jon kleinberg bringing attention bob vanderbei kindly giving semidefinite code francisco barahona michael providing problem instances joel spencer motivating theorem alizadeh gabor rob freund results semidefinite programming shang hua teng bringing attention 
received useful comments alizadeh joseph jon kleinberg laurent colin mcdiarmid giovanni rinaldi david shmoys eva tardos anonymous referees 
alizadeh :10.1.1.35.4131
interior point methods semidefinite programming applications combinatorial optimization 
siam journal optimization 
arora lund motwani sudan szegedy 
proof verification hardness approximation problems 
proceedings rd annual symposium foundations computer science pages 
bar yehuda 
linear time approximation algorithm weighted vertex cover problem 
journal algorithms 
barahona grotschel reinelt 
application combinatorial optimization statistical physics circuit layout design 
operations research 

problems distance geometry convex properties quadratic maps 
discrete computational geometry 
bellare goldreich sudan 
free bits pcp non approximability tight results 
unpublished manuscript 
berger 
geometry ii 
springer verlag berlin 
bondy murty 
graph theory applications 
american elsevier publishing new york ny 
boyd el ghaoui balakrishnan 
linear matrix inequalities system control theory 
siam philadelphia pa 
chor sudan 
geometric approach betweenness 
proceedings european symposium algorithms 
christensen 
note extreme positive definite matrices 
mathematische annalen 
delorme poljak 
combinatorial properties complexity max cut approximation 
european journal combinatorics 
delorme poljak 
laplacian eigenvalues maximum cut problem 
mathematical programming 
delorme poljak 
performance eigenvalue bound max cut problem classes graphs 
discrete mathematics 
euler 
de 
petersburg 
feige goemans 
approximating value prover proof systems applications max sat max 
proc 
third israel symposium theory computing systems pages 
feige lov asz 
prover round proof systems power problems 
proceedings th annual acm symposium theory computing pages 
frieze jerrum 
improved approximation algorithms max cut max bisection 
proceedings fourth mps conference integer programming combinatorial optimization 
springer verlag 
appear algorithmica 
garey johnson stockmeyer 
simplified np complete graph problems 
theoretical computer science 
girard 
de la mesure de la des triangles sph 
appendix invention nouvelle en alg amsterdam 
goemans williamson 
approximation algorithms max cut max sat 
proceedings th annual acm symposium theory computing pages 
goemans williamson 
new approximation algorithms maximum satisfiability problem 
siam journal discrete mathematics 
golub van loan 
matrix computations 
johns hopkins university press baltimore md 
pierce watkins 
extremal correlation matrices 
linear algebra applications 
grotschel lov asz schrijver 
ellipsoid method consequences combinatorial optimization 
combinatorica 
grotschel lov asz schrijver 
geometric algorithms combinatorial optimization 
springer verlag berlin 

finding maximum cut planar graph polynomial time 
siam journal computing 

approximating maximum cnf satisfiability 
parallel processing letters 

personal communication 
venkatesan 
approximation intractability results maximum cut problem variants 
ieee transactions computers 
hall 
personal communication 
hochbaum 
approximation algorithms set covering vertex cover problems 
siam journal computing 

combinatorial design approach maxcut 
unpublished manuscript 
homer 
highly parallel implementation goemans williamson algorithm approximate maxcut 
manuscript 

personal communication 
karger motwani sudan 
approximate graph coloring semidefinite programming 
proceedings th annual symposium foundations computer science pages 
karp 
reducibility combinatorial problems 
miller thatcher editors complexity computer computations pages 
plenum press new york ny 
knuth 
algorithms volume art computer programming 
addison wesley reading ma second edition 
lancaster 
theory matrices 
academic press orlando fl 
laurent poljak 
facial structure set correlation matrices 
unpublished manuscript 

li 
tam 
note extreme correlation matrices 
siam journal matrix analysis applications 

extreme points convex subset cone positive definite matrices 
mathematische annalen 
lov asz 
shannon capacity graph 
ieee transactions information theory 
lov asz 
self dual polytopes chromatic number distance graphs sphere 
acta 
lov asz 
combinatorial optimization problems trends 
dimacs technical report 
lov asz schrijver 
matrix cones projection representations stable set polyhedra 
polyhedral combinatorics volume dimacs series discrete mathematics theoretical computer science pages 
american mathematical society 
lov asz schrijver 
cones matrices optimization 
siam journal optimization 
mahajan ramesh 
correctly goemans williamson max cut algorithm 
unpublished manuscript 
mohar poljak 
eigenvalue methods combinatorial optimization 
klee editors combinatorial graph theoretic problems linear algebra volume ima volumes mathematics applications pages 
springer verlag 
nesterov nemirovskii 
self concordant functions polynomial time methods convex programming 
central economic mathematical institute ussr academy science moscow 
nesterov nemirovskii 
interior point polynomial methods convex programming 
society industrial applied mathematics philadelphia pa 
dorfman 
finding maximal cut graph 
engineering cybernetics pages 
overton 
sum largest eigenvalues symmetric matrix 
siam journal matrix analysis applications 
overton 
optimality conditions duality theory minimizing sums largest eigenvalues symmetric matrices 
mathematical programming 
papadimitriou yannakakis 
optimization approximation complexity classes 
journal computer system sciences 

multiplicity optimal eigenvalues 
management science research report carnegie mellon university 

cone lp semi definite programs facial structure basic solutions simplex method 
working wp carnegie mellon university 
poljak rendl 
relaxations graph bisection problems 
dimacs technical report 
appear siam journal optimization 
poljak rendl 
node edge relaxations max cut problem 
computing 
appears report technische universitat graz 
poljak rendl 
solving max cut problem eigenvalues 
rinaldi editors partitioning decomposition combinatorial optimization discrete applied mathematics 

appear 
poljak ik 
polynomial algorithm constructing large bipartite subgraph application satisfiability problem 
canadian journal mathematics 
poljak 
max cut problem survey 
cook lov asz seymour editors special year combinatorial optimization dimacs series discrete mathematics theoretical computer science 
american mathematical society 
published 
reinelt 
tsplib traveling salesman problem library 
orsa journal computing 
rendl vanderbei wolkowicz 
interior point methods max min eigenvalue problems 
report technische universitat graz 
rosenfeld 
history non euclidean geometry 
springer verlag berlin 
sahni gonzalez 
complete approximation problems 
journal acm 
vaidya 
new algorithm minimizing convex functions convex sets 
proceedings th annual symposium foundations computer science pages 
vandenberghe boyd 
semidefinite programming 
submitted siam review 
vit anyi 
graph colored 
discrete mathematics 
wolkowicz 
applications optimization matrix theory 
linear algebra applications 
yannakakis 
approximation maximum satisfiability 
journal algorithms 

