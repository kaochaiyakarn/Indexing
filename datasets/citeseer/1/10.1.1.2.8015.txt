evaluating structural similarity xml documents xml documents web dtds particularly documents created legacy html 
having knowledge dtd valuable querying manipulating documents 
cf 
means re construct dtd describe structure common set document instances 
collection documents unknown dtds may appropriate construct single dtd describe document collection 
wish partition collection smaller sets similar documents induce separate dtd set 
partitioning problem address 
xml documents measure structural dtd similarity 
define tree edit distance measure suited task account xml issues optional repeated sub elements 
develop dynamic programming algorithm find distance pair documents 
validate proposed distance measure experimentally 
collection documents derived multiple dtds compute pair wise distances documents collection distances cluster documents 
find resulting clusters match original dtds perfectly demonstrate performance superior alternatives previous proposals measuring similarity trees 
algorithm runs time quadratic document collection size quadratic combined size documents involved pair wise distance calculation 
extensible mark language xml seeing increased promises fuel applications 
xml documents especially appear web document type descriptors dtds 
authors provide method automatically extract dtd set xml documents 
provide benefits existence dtds 
repositories xml documents exist methods needed access documents perform queries today traditional database systems 
just schemas necessary dbms provision efficient storage mechanisms formulation optimization queries true supported part nsf number iis 
andrew jagadish university michigan jag eecs umich edu xml repositories dtds provide schema 
instance dtd allow search access relevant portions data resulting greater efficiency 
algorithm useful apply repository xml documents repository homogeneous collection 
collection includes structurally unrelated documents dtd inferencing procedure result dtds necessity far general value 
ideally repository divided groups structurally similar documents dtd inferencing mechanism applied individually groups 
define new method computing distance xml documents terms structure 
lower distance similar documents terms structure created dtd 
crafting distance metric setting somewhat difficult documents created dtd radically different structures due repeating optional elements want compute small distance documents 
account introducing edit operations allow cutting pasting sections document 
resulting pair wise distance measure show standard clustering algorithms pulling documents derived dtd 
background xml data model xml document modeled ordered labeled tree 
node tree corresponds element document labeled element tag name 
edge tree represents inclusion element corresponding child node element corresponding parent node xml file 
xml documents may hyper links documents 
including links model gives rise graph tree 
links important actual xml data 
important far structure document hand consider 
dtd provides rules define elements attributes associated elements relationships elements may occur xml document 
dtds expressive power regular languages elements may required optional may repeated arbitrary number times 
attributes may required optional 
attributes data model elements xml attributes attributes play important role dtd determination problem attempting tackle 
traditional dom labeled ordered tree node element document attributes node corresponding element attributes 
incorporate attributes distance calculation create additional node tree attribute label name attribute 
attribute nodes appear children node adorned dom representation sorted attribute name appearing sub element siblings 
short represent xml document labeled ordered tree node corresponding element attribute 
represent actual values elements attributes tree interested structural properties xml file 
related considerable previous finding edit distances trees 
algorithms category direct descendants dynamic programming techniques finding edit distance strings 
basic idea tree edit distance algorithms find cheapest sequence edit operations transform tree 
key differentiator various tree distance algorithms set edit operations allowed 
early area selkow allows inserting deleting single nodes leaves relabeling nodes tree 
chawathe utilizes edit operations restrictions targeted situations external memory needed calculate edit distance 
approaches allow insertion deletion single nodes tree 
expanding basic operators chawathe define move operator move subtree single edit operation subsequent copying inverse gluing subtrees allowed 
operations bear resemblance insert subtree delete subtree operations approaches heuristic approaches algorithm operates unordered trees making unsuitable computing distances xml documents 
tree edit distance xml documents produced dtd different sizes account optional repeat ing elements 
edit distance metric permits change node time necessarily find large distance pair documents consequently recognize documents clustered derived dtd 
section develop edit distance metric indicative notion structural similarity 
supporting definitions 
basic definitions definition ordered tree ordered tree rooted tree children node ordered 
node children children uniquely identified left right xk 
definition level subtree ordered tree root degree level subtrees tk subtrees rooted rk 
definition labeled tree labeled tree tree associates label node denote label root definition tree equality ordered labeled trees level subtrees am bn ai bj tree transformation operations utilize different edit operations construction algorithm 
tree subtrees tm tree transformation operations defined follows definition relabel relabel operation applied root yields tree level subtrees tm 
definition insert node degree node insertion operation applied yields tree level subtrees ti ti tm 
definition delete level subtree ti leaf node ti delete node operation applied yields tree subtrees ti ti tm 
definition insert tree tree insert tree operation applied yields tree level subtrees ti ti tm 
definition delete tree ti delete tree operation applied yields tree level subtrees ti ti tm 
associated edit operations nonnegative cost 
algorithms general costs restrict presentation experimentation constant unit costs 
allowable edit sequences usual way edit distance objects consider alternative sequences edit operations transform object 
cost operations sequence considered lowest cost sequence defines edit distance objects 
case considering possible sequences edit operations restrict allowable sequences edit operations 
computational reasons improve results xml domain 
definition minimum edit distance cost trees set allowable sequences edit operations applied yield tree equal denote minimum sums costs sequence 
definition allowable sequence edit operations allowable satisfies conditions 
tree may inserted occurs source tree tree may deleted occurs destination tree 
tree inserted ree operation may subsequently additional nodes inserted 
tree deleted ree operation may previously children nodes deleted 
restriction limits insert tree delete tree operations subtree inserted deleted shared source destination tree 
insert delete subtrees contained source destination tree 
pattern tree said tree nodes occur parent child edge relationships sibling order additional siblings may occur sibling nodes embedding pattern tree 
allows matching trees optional elements dtds 
see examples relation pattern tree potentially various trees 
restriction allowable sequences edit operations delete entire source tree step insert entire destination tree second step totally defeating purpose insert tree delete tree operations 
second restriction provides efficient means computing costs inserting deleting subtrees destination source trees respectively 
procedure outlined section 
pattern tree tree tree tree true true false examples procedure algorithm dynamic programming formulation dynamic programming frequently solve minimum edit distance problems 
determining distance source tree destination tree key formulating problem dynamic programming determine cost inserting subtree cost deleting subtree determining cost inserting subtree ti possibly done single ree operation allowable combination ree insert operations 
cost associated possible sequence ree insert operations result construction subtree ti 
minimum costs denoted graft cost ti ti 
prune cost defined similarly minimum cost sequence delete ree operations needed remove subtree 
due constraints specified definition allowable sequence simple efficient bottomup procedure computing graft cost 
node calculate cost inserting single node add graft cost child call sum 
check pattern tree subtree rooted source tree true compute insert tree cost call sum 
graft cost subtree rooted minimum 
prune costs computed similarly node source tree destination tree determine minimum cost transforming operators defined section notion allowable sequences section 
dynamic programming algorithm shown 
pre computed costs graft prune costs lines nested loops lines algorithm 
complexity section analyze complexity computing edit distance measure source tree destination tree stages algorithm 
stage graft prune costs pre computed 
second stage pre computed values compute actual edit distance 

private int tree tree 
degree 
int degree 
int dist new int 
dist 
intj 
dist dist bj 
inti 
dist dist ai 

inti 
intj 
dist min 
dist ai bj 
dist bj 
dist ai 

return dist 
edit distance algorithm stage computing perform pre computation graft prune costs naive manner complexity stage dominate second stage 
central issue determining subtree contained tree potentially expensive operation operation may performed repeatedly 
implementation details necessary reduce complexity computing graft costs 
complementary method prune costs 
leaf node determine nodes label repeatedly node individually node label 
perform order walk append node list corresponding label lists kept hash labels keys 
costs 
walk leaves leaf node set pointer node corresponding list nodes label 
costs procedure determining leaf node 
perform post order traversal nodes non leaf node calculate children 
process similar simple merge operation 
lists children sorted position total entire traversal lists merge lists length 
maximum degree node assumed constant independent sizes trees time complexity procedure 
having computed relations graft prune costs calculated section simply performing post order traversals respectively complexity operations simply complexity stage 
stage dynamic programming procedure called pair vertices depth input trees results complexity 
complexity time complexity precomputation phase dynamic programming phase complexity algorithm compute structural edit distance trees linear dependence size tree quadratic dependence combined size trees borne experimental results shown section 
experimental evaluation goal find documents structural similarity documents generated common dtd 
apply standard clustering algorithm distance measures computed collection documents known dtds 
choice distance metric evaluate closely reported clusters correspond actual dtds 
setup algorithms addition edit distance measure evaluate measures proposed previously literature tree edit distance refer chawathe shasha respectively third non structural baseline metric :10.1.1.18.1163
report results section measures addition 
chawathe measure algorithm computing differences hierarchically structured data xml 
disregarding contribution efficient secondary storage algorithm seen strict generalization approach 
specifically disallow tree insertions deletions measure obtain exactly chawathe measure 
complexity approach finding minimum edit distance trees shasha measure dennis shasha jason wang propose tree edit distance metric permits addition deletion single nodes tree just leaves 
entire subtrees inserted deleted step 
complexity approach depth depth 
tag frequency freq question ask complex tree structure difference thing place 
simple measure looks count type label documents adds absolute values differences 
utilizing simple hash data structure element names frequencies compute tag frequency distance freq trees 
data sets performed experiments real synthetic data sets 
real data set xml data obtained online xml version acm sigmod record 
specifically sampled documents dtds dtd index dtd dtd 
utilize synthetic data generated automated fashion real dtds 
real world dtds obtained online xml document generator accepts dtds input generate xml documents 
varied key parameters generate repositories maximum number times child element node appear child parent node option dtd 
value chosen randomly repeating node entire document 
greater number greater fanout greater variability fanout 
attribute occurrence probabilities required optional attributes specified dtd 
equal probability optional attribute occur 
experimented values range 
tested values attribute occurrence probabilities representative sampling tests synthetic data sets data set data set attributes appear data set data set 
operator costs set equal experiments dtds dtd dtd dri dtd flights dtd dtd phonebook dtd vcard dtd dtd 
values equal appreciable differences results simply show results 
small changes operator costs little affect clustering computing environment tests done ibm rs dual processor powerpc processors running mhz 
approaches shasha measure implemented java 
shasha measure implemented timing results directly compared methods 
clustering due lack space distances obtained comparing pairs documents simply clustering results obtained distances 
utilize known techniques hierarchical agglomerative clustering form clustering 
result represented visually tree clusters called dendrogram 
dendrogram shows clusters merged distance merged clusters horizontal length branches proportional distance merged clusters 
example dendrograms seen 
clustering algorithms require knowledge distance pair clusters including single document clusters 
purpose unweighted pair group averaging method upgma 
distance clusters ci cj computed follows distance ci cj ci cj doc ci ci cj ci number xml documents contained cluster ci doc ci th xml document cluster ci 
order compare hierarchical clustering results introduce notion mis clustering 
dendrogram number mis clusterings equal minimum number documents dendrogram moved documents dtd grouped 
small sample clustering shown example approach mis clusterings chawathe approach mis clusterings 
summary number mis clusterings data sets table 
approach performs better competing approaches data sets fact underlying data average intra dtd distance lower approach average inter dtd distance higher 
approach better attributes forced appear subtrees look documents generated dtd procedure return true 
accuracy 
results due lack space 
approach chawathe sample clustering results sigmod record 
data data data data sigmod set set set set record approach chawathe shasha tag frequency table number mis clusterings approach timing analysis algorithm appears complex conceptually asymptotic time complexity chawathe algorithm slightly better shasha algorithm depth depth 
asymptotically worse freq approach approach performs poorly terms clustering documents 
formulae verified experimentally show timing results approach 
time find edit distance pairs trees various sizes grows perfect linear fashion tree size tree 
corresponding times chawathe technique smaller factor average 
time seconds number nodes tree range number nodes tree approach timing results compute pairwise distance various tree sizes xml pervasive effective management xml data high priority 
applicability database techniques xml data depends existence dtds schema data 
world internet frequently deal xml documents know schema 
previous deducing dtd collection xml documents algorithms depend critically relatively homogeneous collection documents order determine meaningful dtd 
developed structural similarity metric xml documents xml aware edit distance ordered labeled trees 
metric demonstrated ability accurately cluster documents dtd 
contrast shown measures similarity perform requiring approximately amount computation 
available athttp www acm org sigmod record xml 
available athttp www schema net 
available athttp www xml org 
available athttp www alphaworks ibm com 
chawathe 
comparing hierarchical data extended memory 
proc 
vldb pages 
chawathe garcia molina 
meaningful change detection structured data 
proc 
acm sigmod pages 
chawathe rajaraman garcia molina widom 
change detection hierarchically structured information 
proc 
acm sigmod pages 
gregory serge abiteboul marian 
detecting changes xml documents 
proc 
icde 
world wide web consortium 
document object model 
www org dom 
garofalakis gionis rastogi seshadri shim 
xtract system extracting document type descriptors xml documents 
proc 
acm sig mod pages 
jardine sibson 
mathematical taxonomy 
john wiley sons new york 
levenshtein 
binary codes capable correcting deletions insertions reversals 
sov 
phys 
dokl 
selkow 
tree tree editing problem 
information processing letters december 
shasha zhang 
approximate tree pattern matching 
pattern matching strings trees arrays chapter 
oxford university press 
tai 
tree tree correction problem 
journal acm 
wang zhang jeong shasha 
system approximate tree matching 
ieee tkde 
zhang shasha 
simple fast algorithms editing distance trees related problems 
siam journal computing december 
