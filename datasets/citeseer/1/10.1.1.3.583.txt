approximation algorithms disjoint paths problems jon michael kleinberg electrical engineering computer science massachusetts institute technology computer science mathematics cornell university submitted department electrical engineering computer science partial fulfillment requirements degree doctor philosophy computer science massachusetts institute technology may fl jon michael kleinberg 
rights reserved 
author mit permission reproduce distribute publicly electronic copies thesis document part 
signature author department electrical engineering computer science may certified michel goemans assistant professor applied mathematics thesis supervisor accepted chairman department committee graduate students approximation algorithms disjoint paths problems jon michael kleinberg submitted department electrical engineering computer science may partial fulfillment requirements degree doctor philosophy computer science construction disjoint paths network basic issue combinatorial optimization network specified pairs nodes interested finding disjoint paths pairs possible 
leads variety classical np complete problems little known point view approximation algorithms 
brought focus problems vlsi layout routing high speed networks settings current lack understanding disjoint paths problem obstacle design practical heuristics 
develop number general techniques designing approximation algorithms disjoint paths problems 
approach leads constant factor approximation algorithm maximum disjoint paths problem dimensional mesh class planar networks generalizing mesh 
obtain number related algorithms approach including routing algorithm mesh optimal line model considered problem connection requests arrive time processed immediately 
underlying number results new approximation algorithm basic np hard variant maximum flow problem 
thesis supervisor michel goemans title assistant professor applied mathematics keywords combinatorial optimization approximation algorithms network flow privilege worked number exciting intellectually rich environments wonderful array mentors colleagues 
thesis advisor michel goemans support past years 
benefited enormously working perspective algorithms combinatorics 
began area topic thesis eva tardos research contained chapters thesis done collaboration 
am grateful opportunity closely process significantly shaped approach research considered guidance different regards 
early undergraduate career cornell fortune working dan huttenlocher collaboration great impact development computer scientist 
worked dan fellow researcher teaching assistant broad balanced view research computer science 
environment cornell exciting immensely supportive benefited interactions faculty visitors including paul chew bruce donald rod downey klara kedem keith marzullo paul pedersen rubinfeld david shmoys bernd sturmfels sam toueg nick trefethen 
community friends fellow students immersed wonderful try avoid listing names want mention lillian lee tony yan anne jen smith barry rachel charlotte lee aravind srinivasan thomas yan 
environment lab computer science mit exciting part 
tom leighton advice opportunity variety problems 
fortunate able bonnie berger david karger nancy lynch additionally continuing advice job search progressed year david thorough reading thesis 
am grateful chance visitors theory group mit particular allan borodin attiya year rubinfeld 
marcos kiwi dan spielman wonderful year apartment mates matt andrews andr ur michael bender stan chen ric rosario gennaro joshua goodman shai halevi rebecca hwa mike leventon carol chris small sophie ravi sundaram lisa zhang 
bruce dale hubbard david jones talbot help 
spent summer working theory computation group ibm watson research center lively research environment 
portions thesis current aspects research emerged time look forward continued collaboration researchers summer visitors met ibm 
particular pankaj agarwal aggarwal allan borodin don coppersmith sanjeev khanna bill pulleyblank prabhakar raghavan schieber madhu sudan david williamson 
additionally allan prabhakar advice past year 
parents brother bobby lillian support 
years spent delight 
mit supported onr graduate fellowship 
portions thesis represent joint people mentioned chapters joint eva tardos chapter joint eva tardos satish rao chapter joint aggarwal david williamson portions chapter joint rubinfeld 
contents related optimization problems overview general notation background menger theorem tractable special cases disjoint paths surface fractional flow high capacity ufp approximations mdp line routing algorithms expander graphs directed graphs single source unsplittable flow coalitions congestion maximization routing rounds tools matroid theory approximation algorithm directed single source problems coalitions approximation algorithms greedy algorithm general bounds algorithm bounded degree expanders dimensional mesh simulated network line algorithm combining maximization algorithms aap algorithm routing long connections routing short connections line algorithm routing rounds generalizing mesh definitions properties smooth cycles clusters enclosures defining simulated network building simulated network line algorithm line algorithm minimizing congestion preliminaries approximation algorithm node disjoint paths node disjoint paths mesh preliminary facts bound terminals spacing constant bend routing improved approximation ratios line model extensions chapter people said telephone 
phil calls philadelphia 
pat calls 
vladimir lolita 
basic problem arises large scale communication networks assigning paths connection requests 
connection request pair physically separated nodes wish communicate path network list requests wants assign paths possible way paths interfere 
list requests ask number natural questions 
requests simultaneously realizable paths mutually edge disjoint 
rounds communication required satisfy requests paths assigned single round edge disjoint 
turn classical problems combinatorial optimization operations research known np complete graph problems 
intractability disjoint paths problems appear simply theoretical phenomenon 
number papers observed difficulty admission control routing virtual circuits high performance communication networks comes lack heuristics constructing disjoint paths 
issues arise context vlsi current lack understanding problems obstacle design effective layout wire routing algorithms printed circuits 
essentially optimization versions problems finding best solution np complete 
interested developing efficient algorithms produce near optimal solutions 
approximation algorithms focus intense amount theoretical computer science community setting disjoint paths problems similar settings development approximation algorithms value suggesting robust heuristic approaches computationally intractable problems providing understanding elusive structure optima 
precise follows 
undirected graph connection request specified pair terminals set terminal pairs 
say realizable exist mutually edge disjoint paths endpoints determining realizable karp original np complete problems refer basic disjoint paths problem 
optimization problems mentioned opening paragraph simply find maximum size realizable subset set terminal pairs graph refer maximum disjoint paths problem mdp denote maximum size realizable subset ff 
theoretical disjoint paths problem roots early development graph connectivity network flow 
special case pairs wants find maximum number disjoint paths fixed nodes graph essence menger classical theorem generalized max flow min cut theorem ford fulkerson 
led efficient algorithms special case see chapter technical background results mentioned 
karp np completeness result clear similar clean structural results efficient algorithms obtainable disjoint paths problem full generality 
graph theoretic area turned tractable special cases problem extensive coverage survey frank 
attention devoted problem designing approximation algorithms intractable cases mdp subject 
concrete approximation algorithm mdp mean algorithm input produces realizable set size ff approximation algorithms discuss run polynomial time 
survey previous approximation chapter 
worth noting outset algorithms discuss randomized approximation guarantees hold constant probability hold probability gamma gammak running times independently 
notion probabilistic performance guarantee rely assumptions distribution input holds input instances probability taken random choices algorithm 
results randomization mainly sake simplicity eliminated know avoid randomization possible prove deterministic algorithm perform randomized algorithm 
discuss natural generalization mdp obtained incorporating additional consideration network routing applications discussed 
consider graph set terminal pairs 
pair associated demand ae edge capacity indicates total amount traffic carry 
say realizable exist paths endpoints capacity constraint met edge ae total demand contained paths edge exceed capacity balance assumption ae demand capable fitting edge 
define ae total demand terminal pairs ae ae unsplittable flow problem ufp input asks realizable subset maximizes ae 
note case ae equal coincides maximum disjoint paths problem designing approximation algorithms ufp difficult mdp 
analogy mdp ff denote maximum value ae realizable special case ufp strong approximation results obtained raghavan thompson 
case capacities exceed demands ae factor omega jej refer high capacity ufp 
algorithms provide constant factor approximation graph results relate directly disjoint paths problem designing algorithms 
course strength result ufp considered largely settled high capacity case 
network routing applications communication path consume large fraction available bandwidth link situations able deal edges capacity small relative individual demands 
related optimization problems problems discussed serve main focus number closely related optimization problems techniques handle 
introduce 
line routing 
observed routing connections communication networks motivation disjoint paths unsplittable flow problems 
applications faced additional constraint terminal pairs gradually time pair immediately routed free path rejected knowledge requests 
goal remains route large number terminal pairs relative optimum 
surprisingly results problem referred integer multicommodity flow problem operations research literature 
adopted unorthodox name understanding term integer multicommodity flow single standardized meaning area example frequently refers special case ae equal 
see section 
number additional complications designer approximation algorithm contend example rules approaches incrementally develop solution re routing old paths new ones added 
algorithms operate pass fashion typically termed line algorithms 
design line algorithms issue actively studied years sleator tarjan major influence area 
routing networks clearly natural setting analyze line algorithms undertaken theoretical level number researchers earliest papers garay gopal aspnes 
interestingly approximations exist high capacity ufp line model 
algorithm awerbuch azar plotkin provides line log jej approximation demand requires log gamma jej fraction minimum edge capacity 
line setting classical setting known approximation demands ae allowed comparable size capacities lower bounds established showing line algorithm provide approximation certain families graphs 
see chapter discussion prior 
necessary distinguish line algorithms traditional algorithms occupy attention time refer line algorithms 
routing rounds 
return second questions raised opening paragraph minimum number rounds communication required route set terminal pairs paths assigned single round edge disjoint 
succinctly graph set terminal pairs asking smallest number realizable sets partitioned 
denote minimum 
course realizable determining np complete 
note question applies general setting unsplittable flow arbitrary demands seek minimum partition realizable sets 
addition scheduling interpretation view problem number ways 
salient example objective function arises design algorithm routing optical networks 
model considered current proposals network design optical communication technology 
connection request assigned path wavelength paths share edge different wavelengths 
goal minimize number wavelengths route connections 
clearly correspondence wavelengths rounds previous paragraph 
congestion 
third natural objective function addition ff consider graph terminal pairs suppose terminal pair associated demand ae say routing simply choice path congestion routing defined maximum amount demand carried routing edge expression max ae denote minimum congestion achievable routing course demands equal realizable determining np complete 
notion congestion take account capacities edges implicitly equal 
dealing arbitrary capacities interested relative congestion routing maximum fraction demand carried routing edge exceeds capacity relative congestion routing specified paths fp equal max ae denote minimum relative congestion achievable routing note graph capacities equal 
note obtain routing relative congestion simply superimposing paths routing rounds 
graphs sets terminal pairs larger see examples chapter 
karp leighton raghavan thompson congestion measure densely wires packed vlsi chip 
ufp accurate reflection types packing constraints predominate virtual circuit routing high speed networks congestion sense measure domain 
particular statistical multiplexing capabilities asynchronous transfer mode atm allow cases trade congestion link expected rate cell loss 
discuss refer reader general atm 
example 
worth discussing example graph set terminal pairs order illustrate relationship objective functions ff surprisingly case graph consisting unit capacity edge interesting 
assume set terminal pairs consists copies pair demands ae ae ffl ff corresponds np complete knapsack problem real valued weights ae ae find subset fae maximum total weight subject constraint total weight exceed 
ffl corresponds np complete bin packing problem real valued weights ae ae place bins possible total amount weight placed bin exceed 
ffl trivial case equal ae overview provide brief overview material chapters constitutes main technical portion 
results described part context set forth chapter extend earlier discussed 
focus approximation algorithms unsplittable flow problem variants 
main results build general constant factor approximation algorithm single source unsplittable flow problem chapters terminal pairs share common vertex constant factor approximation algorithm unsplittable flow problem class locally planar graphs generalizes dimensional mesh chapter 
algorithm requires component single source algorithms developed chapter 
variants algorithm provide general class graphs constant factor approximation algorithm problem minimizing congestion chapter optimal line log approximation ufp 
settles open questions karp leighton rivest thompson vazirani vazirani awerbuch gawlick leighton rabani respectively 
develop algorithms constructing node disjoint paths dimensional mesh chapter performance guarantee algorithm essentially settles logarithmic factor open question aggarwal lichtenstein linial wigderson raised context vlsi layout 
central theme connection unsplittable flow problem closely related fractional multicommodity flow problem 
discuss detail chapter sufficient think variant ufp constraint relaxed allow ae units demand associated pair routed partially split paths 
basic optimization problems involving fractional flow solved polynomial time sense investigate ways optimal fractional flows approximate ufp 
general approach typically referred rounding wish round fractional solution obtain valued solution produces unsplittable routing 
example high capacity ufp approximation raghavan thompson direct rounding procedure sketch chapter 
approximation algorithm general single source problem new rounding procedure single source fractional flow problem corresponds known maximum flow problem 
general multi terminal problems show optimal value fractional flow far exceed optimal value unsplittable flow direct comparison optimum fractional flow designing general approximation algorithm case 
dimensional mesh gener alization discussed show optimal fractional solution designing approximation algorithm 
algorithm uses raghavan thompson method high capacity simulated network construct top underlying mesh 
generalize construction simulated network mesh require multicommodity flow result okamura seymour topological results disjoint paths problem due schrijver 
interesting feature node disjoint paths problem perspective techniques gap fractional unsplittable solutions large fractional solution provides little information designing algorithm node disjoint case chapter 
certain results described definition 
say set terminal pairs permutation vertex graph appears exactly pair 
say partial permutation vertex appears pair 
single source unsplittable flow 
chapter consider basic case unsplittable flow problem previous approximation techniques unable handle 
single source ufp 
ae equal problem reduced case edge disjoint paths subject menger theorem max flow min cut theorem 
simply remove condition single source ufp np complete indicated trivially contains knapsack problem fact previous techniques capable providing approximation algorithm omega jej times ae provide constant factor approximation general case problem 
investigate said case ae max ae small relevant situations covered connection consumes small fraction bandwidth link 
provide approximation algorithm performance guarantee ae crucial point converges ae smaller smaller 
obtain similar approximation ratios problems minimizing congestion routing rounds 
problem matroid structure inherent single source disjoint paths problem order develop approximation algorithm 
connection classical matroid algorithms appears interesting right application approximation problems type author eva tardos related problem discussing 
indicated results new rounding procedure fractional version problem precisely classical maximum flow problem 
nature algorithms developed useful number subsequent chapters allow algorithms designed mdp mind converted algorithms general ufp 
single source problems directed graphs 
extend algorithms single source ufp case directed graphs 
final results obtain essentially somewhat larger constants undirected case techniques required elaborate 
place deal directed graphs main motivations doing 
known disjoint paths problem directed case interest develop techniques apply directed graphs 
second possible reduce general family np complete load balancing problems directed case single source ufp 
way constant factor approximation problem implies general constant factor approximation load balancing problem type 
case classical max flow min cut theorem obtain applications single source ufp essentially issue routing networks 
greedy algorithm 
chapter short chapter analyzes performance simplest algorithm mdp greedy algorithm routes connection shortest available path 
part consider slight variant greedy algorithm called bounded greedy algorithm bga routes connection free path sufficiently short 
show bounded degree expander graph bga provides log log log approximation mdp 
fact performance guarantee achieved algorithm line deterministic presents somewhat striking contrast lower bounds due bartal awerbuch apply classes graphs expanders 
permutations expanders show bga fact log approximation 
improves bound log follows techniques aumann rabani raghavan upfal papers consider routing permutations expanders line randomized line settings respectively 
part chapter joint rubinfeld 
approximations dimensional mesh 
chapter develop approximation algorithms dimensional mesh graph 
dimensional mesh fundamental graph consider context vlsi context virtual circuit routing 
theta dimensional mesh adjacency graph theta chessboard vertex set ng joined edge iff jk gamma ij gamma jj 
sense forms basis study vlsi layout models vlsi chip represent theta array square cells 
common parallel architectures large scale networks high speed communication configured mesh nearly planar graphs 
note mdp remains np complete underlying graph restricted mesh 
provide constant factor approximation ufp uniform capacity dimensional mesh 
constant factor approximation ufp maximum disjoint paths problem class graphs trees 
underlying technique obtain line log approximation algorithm optimal line algorithms mesh 
settles open question awerbuch gawlick leighton rabani 
underlying technique algorithms roughly 
impose high capacity simulated network mesh paths constructed stages algorithm high capacity ufp choose global routes simulated networks ii global routes converted paths mesh 
note straightforward application greedy set cover technique conjunction constant factor approximation mdp allows obtain log approximation minimum partition rounds 
improves bound aumann rabani 
approximations generalization mesh 
motivation studying mesh context communication networks stems fact bounded degree planar graph typical types networks arise practice 
important develop routing algorithms robust sense rely heavily fixed row column structure mesh 
mind define chapter class densely embedded graphs generalizes mesh 
particular includes class degree graphs embedded plane fixed boundary uniformly bounded face size 
extend constant factor approximation algorithm class graphs difficulty adapting construction underlying simulated network indicated setting arbitrary densely embedded graph 
classical results okamura seymour schrijver disjoint paths problem 
requirement vertex degrees arises previous problem seen chapter particularly limiting practice achieved doubling edge 
material chapters joint eva tardos 
minimizing congestion 
chapter consider problem minimizing congestion 
simulated network construction chapter obtain constant factor approximation congestion densely embedded graphs 
combined algorithm raghavan thompson settles open question karp leighton special case mesh 
joint satish rao eva tardos 
node disjoint paths 
concerned edge disjointness constraints 
number basic interesting questions arise requires paths node disjoint 
level arbitrary graphs problems closely related interested example case planar graphs problems different 
particular begins encounter topological obstacles existence paths arise edge disjoint case 
problems arise naturally vlsi layout problems fraught node disjointness constraints 
chapter develop algorithms finding node disjoint paths dimensional mesh 
proper approximation algorithms sense defined guaranteed produce realizable sets polylogarithmic factor bisection bound 
specifically show permutation theta mesh contains set size omega gamma log realizable node disjoint paths 
essentially logarithmic factor closes gap left open aggarwal lichtenstein linial wigderson 
develop extensions algorithm case sparse sets terminal pairs mesh 
material chapter joint aggarwal david williamson 
gives approximate guide interdependence chapters 
chapter mainly subsequent chapters rely selected portions 
interdependence chapters general notation notation require developed needed introduce basic definitions 
undirected graph possibly parallel edges 
denote number edges path 
denote set ae denote subgraph induced vertices ffi denote set edges exactly denote set vertices edge ffi 
interior disjoint sets ae ffi denote set edges eulerian graph degree vertex name fact development graph theory postponed century street map eulerian 
planar graph drawn plane edge crossings viewing drawing planar graph subset plane observe complement consists finite number connected components called faces unbounded called outer face 
confess terms node vertex completely interchangeably 
chapter background paths paths stamped network paths spreading empty land long grass burnt grass stony hills heat joseph conrad heart darkness 
theorems discussed chapter give attributions cases result part folklore 
development background material meant comprehensive particular devote attention results subsequent chapters 
menger theorem mentioned chapter basic cases disjoint paths problem pairs connections requests vertices setting menger classical theorem asks maximum number mutually edge disjoint paths 
way provide evidence exist edge disjoint paths exhibit set ae 
ii jffi edge disjoint paths pass different edge ffi contradict ii 
call set cut define value jffi menger theorem non trivial converse observation 
theorem menger exist edge disjoint paths exist cut value proofs known menger theorem ford fulkerson proved generalization max flow min cut theorem see section provided polynomial time algorithm finding maximum number edge disjoint paths graph formulation menger theorem exposes elegant necessary condition existence solution disjoint paths problem arbitrary input exist set ae set terminal pairs 
ii jffi refer general statement cut condition set cut 
called non trivial cut empty 
note general formulation cut condition require entire set terminal pairs split cut 
simple matter show lemma cut condition holds holds sets connected 
see 
cut condition sufficient solvability disjoint paths problem general 
example consider brick wall graph 
speaking somewhat informally say general theta brick wall graph consists layers vertices connected 
set terminal pairs appear top bad example bottom leftmost edge appear left right bottom layer 
pictured 
easily verify cut condition holds path share edge path ff equal 
fact interesting example compare objective functions ff ff indicating things gap large 
special case mdp encompassed menger theorem quite robust sense number seemingly general cases reduce easily 
primary example consider single source mdp vertex may distinct 
construct new graph joining additional node see exist edge disjoint paths original problem solution 
menger theorem theorem instance single source disjoint paths problem solution cut condition holds 
efficient algorithm determining maximum number edge disjoint paths newly constructed graph efficient algorithm single source maximum disjoint paths problem 
hand interesting recall example chapter single source unsplittable flow problem np complete 
develop approximation algorithms chapter 
chapters general problem reduced menger theorem computing linkages sets 
disjoint subsets linkage mean collection edge disjoint paths linkage called simple endpoints paths distinct 
simple linkage maximum size computed efficiently attaching additional vertex vertices additional vertex vertices computing maximum size set edge disjoint paths newly constructed graph 
compute non simple linkage maximum size defines delta maximum degree original graph attaches respective sets delta parallel edges vertex computes maximum size set edge disjoint paths newly constructed graph 
resp 
denote size maximum simple linkage 
karp proof disjoint paths problem np complete gave compelling evidence exist simple criterion existence disjoint paths type suggested cut condition 
sections discuss special cases disjoint paths problem feasibility decided polynomial time simple criteria necessary sufficient discuss fractional version disjoint paths problem solved general polynomial time 
tractable special cases natural special cases disjoint paths problem considered fixed number terminal pairs 
case jt turned quite non trivial independent solutions emerged due seymour 
theorem seymour polynomial time algorithm disjoint paths problem case jt 
algorithms came fairly simple structural criterion existence paths go shortest proof criterion reader referred section 
naturally question problem polynomial time fixed value jt polynomial time algorithm case discovered robertson seymour main consequences graph minors series 
algorithm proof correctness requires machinery developed series papers 
theorem robertson seymour fixed polynomial time algorithm disjoint paths problem case jt algorithm runs time 
hides high dependence large constants 
finding reasonably simple algorithm case remains interesting open question 
making theorem relate concepts introduce definitions graph minors series 
case variable number terminal pairs recall problem np complete planar graphs 
emphasis developing special cases finding structured arrangement set terminals problem tractable 
historically results developed okamura seymour setting 
planar graph phi outer face define augmented graph graph obtained adding pairs edges 
okamura seymour show theorem okamura seymour eulerian terminals lie phi outer face set realizable cut condition holds 
proof yields polynomial time algorithm finding paths 
number efficient algorithms developed case culminating linear time quite practical algorithm wagner 
requirement eulerian called parity condition appears exactly solvable special cases 
somewhat mysterious reader appreciate importance considering brick wall graph satisfies hypotheses okamura seymour theorem aside parity condition disjoint paths exist 
result due frank allows weaken parity condition little 
set denote set terminal pairs say cut condition holds strictly jffi jd non trivial cuts 
cut condition requires non strict inequality 
theorem frank planar eulerian outer face phi 
set terminal pairs lying phi 
cut condition holds strictly set realizable 
frank extension okamura seymour theorem chapter 
number subsequent results solvability disjoint paths problem cases underlying graph planar terminals nice arrangement 
particular see papers okamura schrijver discussed frank survey 
elegant theorem lines due seymour state occasion 
theorem seymour planar terminal pairs suppose planar eulerian 
realizable cut condition holds 
polynomial time algorithm accompanying theorem 
disjoint paths surface discuss special cases node disjoint paths problem underlying graph embedded fixed surface 
techniques chapter part approximation edge disjoint paths densely embedded graphs 
need preliminary topological definitions reader referred introductory textbook detail 
denote unit circle surface unit sphere topological spaces 
sigma denote compact orientable surface known sigma may obtained attaching finite number handles 
disc mean set homeomorphic closed unit ball sigma disc mean subset sigma homeomorphic disc 
terms curve continuous image closed curve continuous image 
definition graph embedding standard face embedded graph connected component sigma say strongly embedded closure face sigma disc face bounded simple cycle 
difficult produce example graph embedding strong embedding consider construction 
copy vertices copy define node graph identifying node 
possible embed torus way edge face phi embedding sequence edges bounding phi contains twice 
results follow take curves closed curves polygonal surfaces triangulated way avoid various topological exotica 
curves said homotopic sigma informally speaking continuously deformed moving endpoints 
technically homotopic written exists continuous function psi theta sigma psi psi 
ii psi psi 
define homotopy closed curves function psi theta sigma satisfies condition 
closed curve said null homotopic sigma homotopic point known see closed curve null homotopic contained sigma disc 
robertson seymour proved theorem 
planar graph set terminal pairs outer face looking realization node disjoint paths observe obstacles existence paths 
pairs terminals cross appear cyclic order outer face 
ii type cut condition 
draw simple closed curve plane meeting graph vertices number terminals pairs inside outside greater number times meets case ii path realization pass different vertex vertices 
shown conditions form criterion non existence paths 
proof difficult 
theorem robertson seymour planar lies outer face realizable node disjoint paths ii holds 
similar result proved graphs embedded cylinder 
schrijver proved sense ultimate generalization result graphs embedded arbitrary surface 
say curve sigma normal meets drawing vertices 
cr denote number times meets minimum cr curves define cr number crossings minimum cr closed curves sigma 
interested finding node disjoint cycles sigma consider necessary conditions existence cycles analogous obstacles ii 
exist closed curves sigma mutually disjoint 
ii closed curve sigma cr turns sufficient existence disjoint cycles obtain set sufficient conditions consider type parity condition 
say closed curve odd respect fa cr cr mod note parity number crossings invariant homotopy odd odd 
odd curve necessary condition existence disjoint cycles strict inequality ii 
necessitate changing statement ii know cr odd curve strict inequality holds 
problem arises concatenate odd curves common point 
odd closed curves common point sigma define closed curve obtained concatenating parametrizations common point natural way 
say doubly odd closed curve composed cr parity possible quantities equal 
parity constraints know node disjoint cycles homotopic cr cr cr cr cr cr cr cr cr cr obtain third necessary condition 
iii doubly odd closed curve sigma cr schrijver proves ii iii sufficient 
theorem schrijver closed curves sigma exist node disjoint cycles ii iii hold 
useful version theorem surfaces boundary 
surface sigma boundary mean compact surface sigma interiors disjoint closed sigma discs removed 
boundaries closed sigma discs called boundary components sigma 
setting interested related problem 
curves endpoints coincide vertices boundary components sigma want find node disjoint paths necessary conditions remain exactly incorporate fact sigma boundary 
call curve essential closed curve curve endpoints boundary components sigma 
necessary conditions exist curves sigma mutually disjoint 
ii essential curve sigma cr iii doubly odd closed curve sigma cr known fact shown simple reduction theorem theorem schrijver curves sigma endpoints coincide vertices boundary components sigma exist node disjoint paths conditions ii iii hold 
fractional flow turn issue approximation introduce notion fractional flow due tractability great help design analysis approximation algorithms mdp 
graph set terminal pairs 
consider case terminal pair associated demand ae fractional flow defined follows 
pair choose set paths ii associated non negative weights ae ae units flow total routed path ae gamma units flow routed 
say flow fractional routing ae total demand terminal pair routed associated flow paths 
fractional flow said feasible satisfies capacity constraints ask fractionally realizable fractionally feasible mean exists feasible fractional routing 
consider fractional version optimization problems considered ask maximum amount flow feasibly shipped sources sinks 
problem denote maximum question ff 
course notation unsplittable flow problem obtained simply adding requirement equal terminal pairs ae 
ii congestion fractional routing defined maximum amount flow sent edge notation write max similarly relative congestion fractional routing defined max resp 
denote minimum congestion resp 
relative congestion fractional routing termed fractional multicommodity flow problems terminal pairs viewed different commodities simultaneously transported underlying network 
follows speak maximum flow question previous paragraph allow ae units flow shipped consider version problem ship flow total demand 
mainly sake uniform presentation allowing ae pairs 
notion cut condition setting define follows 
set ae recall ffi denotes set edges exactly denotes set terminal pairs exactly define ffi ae ae cut condition 
ae ae 
cut condition necessary fractional realizability general sufficient 
fairly large amount done showing sufficiency approximate cut conditions discuss chapter refer reader details 
studied maximum flow problem deals fractional flow simply problem case pairs 
case considered fundamental ford fulkerson showed setting cut condition necessary sufficient fractional realizability 
note assuming pairs definition fractional flow allows assume jt merging demand single value ae 
split fractionally routed 
obtain max flow min cut theorem 
theorem ford fulkerson arbitrary graph consist single pair demand ae 
fractionally realizable ae sets ae original proof ford fulkerson yielded polynomial time algorithm deciding realizability case ae bounded integers 
polynomial time algorithm general case obtained independently dinic edmonds karp 
efficiency maximum flow algorithms major issue algorithm design see example survey goldberg 
algorithms solve general maximization version problem wishes ship maximum amount flow possible max flow min cut theorem appears simply fractional analogue menger theorem fact generalizes due second result ford fulkerson 
theorem ford fulkerson arbitrary graph consist single pair demand ae 
suppose ae integer capacities integers 
fractionally realizable realizable ae flow paths carrying unit flow 
due theorem feel justified term flow graph unit capacities denote set edge disjoint paths 
version results possible infer general results analogy method saw section 
example single source maximum flow problem vertex reduced maximum flow problem 
worth stating explicit corollary theorems 
corollary arbitrary graph set terminal pairs fractionally realizable cut condition holds 
ii maximum fractional flow polynomial time 
iii demands ae equal common value ae capacities multiples ae maximum fractional flow unsplittable flow 
particular case fractionally realizable realizable unsplittable sense 
consider fractional multicommodity flow problem full generality 
turns mdp ufp fractional multicommodity flow problem solved polynomial time 
direct way see verify written polynomial size linear program solved optimally polynomial time linear programming algorithm 
faster combinatorial algorithms developed provide approximations problem see 
maximum fractional flows computed polynomial time making designing approximation algorithms 
fundamental problems combinatorial optimization question naturally arises extent existence fractional solution problem implies existence integer solution 
related vein ask different optimum fractional solutions comparison optimum restricted set integer solutions 
case ae equal integer solutions correspond feasible unsplittable flows comes comparison ff ff 
example consider theta brick wall graph terminal pairs arranged shown capacities demands equal 
fractional flow total value maximum unsplittable flow value disjoint paths pairs simultaneously 
fact noted 
theorem demands capacities equal gap maximum fractional flow value ff maximum unsplittable flow value ff large factor terminal pairs 
course size gap extremely sensitive nature underlying graph double edge frank extension okamura seymour theorem applies gap 
motivated investigation relationship fractional unsplittable flow means provide approximation algorithms 
seymour formulated conjecture easily motivated examples theorems 
seymour conjecture capacities demands equal set terminals fractionally realizable realizable half integers 
fractional flow shipping demand path weights equal conjecture false disproved fact known half integer flow problem np complete 
quite possible structural results type may hold unsplittable flow problem general graphs clearly interesting issue 
high capacity ufp introduce randomized rounding technique raghavan thompson leads raghavan algorithm high capacity ufp 
recall special case ufp node edge graph minimum edge capacity omega times maximum demand 
re scaling assume maximum demand ae minimum edge capacity log raghavan algorithm simply 
solve fractional maximization problem pair obtain paths weights ae 
ii define ae ae 
iii choose constant scaling factor 
dependence determined 
iv route pair path probability don route probability gamma analyzing algorithm verify things 
argue high probability capacity constraint violated resulting paths 
second argue total amount flow routed constant factor optimum 
verify need result bound sum independent random variables spirit results chernoff hoeffding 
theorem raghavan independent bernoulli trials ex psi psi ffi pr psi 
ffi ffi ffi ffi specialize form follows 
corollary ff 
independent bernoulli trials ex psi pr psi ffm 
eff gamma ffm follows applying bound theorem set ffi set ff gamma gamma 
apply corollary prove capacity edge violated rounding high probability 
computation easier note edge fully saturated fractional solution may add artificial demands corresponding amounts flow order saturate 
assume edges saturated 
denote fraction demand routed edge fractional solution indicator random variable event routed path uses edge note ae simply capacity saturation assumption psi random variable equal amount flow crossing edge solution produced raghavan algorithm 
bad event capacity edge violated probability ce corollary log set gamma gamma obtain probability bounded gamma invoking union bound probability capacity edge violated gamma expected amount flow routed approximate solution exactly times fractional optimum exceed fractional optimum markov inequality implies probability gamma approximate solution value times fractional unsplittable optimum 
randomized rounding experiment independent trial succeeds constant probability obtain theorem raghavan iterating algorithm theta times provides constant factor approximation high capacity ufp probability gamma gammak number things worth noting algorithm 
requirement capacities large relative demands crucial experiment succeed 
consider graph consisting nodes parallel edges unit capacity 
terminal pairs equal unit demand fractional solution unfortunately splits flow pair evenly edges 
randomized rounding experiment corresponds known combinatorial problem throwing objects containers equal probability scale flow constant factor performing rounding standard argument shows theta log log log paths routed single edge high probability 
fact requirement capacities large crucial nature result proved 
randomized rounding algorithm case able produce unsplittable solution value constant factor fractional optimum 
saw previous section theorem result possible unsplittable flow problem general 
high capacity assumption played significant role approximation techniques ufp small capacities directly fractional solution 
awerbuch azar plotkin gave line log approximation high capacity ufp general graphs see section 
approximations mdp noted approximation results limited mdp ufp drops high capacity assumption 
prior class graphs constant factor approximation algorithm obtained class capacitated trees garg vazirani yannakakis 
course deciding realizability set terminals easy unique path pair 
demands equal capacities take values maximization problem np complete 
garg consider case trees demands equal capacities arbitrary 
show setting ratio fractional integral optima obtain approximation algorithm 
essentially line approximation algorithms mdp log approximation dimensional mesh obtained independently aumann rabani approximations expander graphs discussed section 
results concern mdp general unsplittable flow problem 
problem minimizing congestion arbitrary unsplittable demands underlying graph cycle 
problem demand decide send clockwise counter clockwise cycle 
question raised context ring routing 
schrijver seymour winkler showed cycle find polynomial time unsplittable routing demands amount flow crossing edge ae units required fractional optimum 
approximation guarantee obtain additive multiplicative 
line routing algorithms recall line algorithm mdp ufp sequence terminal pairs order arrives rejected routed path knowledge input 
analyzing algorithms especially randomization involved careful things defined correctly define line model slightly detail 
standard area picture execution line algorithm game played algorithm adversary generates input 
underlying graph fixed 
adversary knowledge algorithm creates ordered set terminal pairs presents time 
deterministic algorithm performance measured ratio optimum ff number pairs routed algorithm 
randomized line algorithm allow adversary knowledge algorithm random choices algorithm execution 
algorithm performance ratio optimum ff expected number pairs routed algorithm 
turn randomized line algorithms capable achieving significantly better performance guarantees deterministic ones surprising randomization part algorithm extent mitigates power adversarially chosen input 
note ways modeling randomized line algorithms number subtle issues arise get 
mentioned section awerbuch azar plotkin deterministic log approximation high capacity ufp general graphs 
prove omega lower bound performance ratio deterministic line algorithm problem 
awerbuch prove performance guarantee terms optimum unsplittable flow holds terms optimum fractional flow 
prove chapter need slightly stronger analysis algorithm line algorithm ufp densely embedded graphs 
mdp hand number fairly straightforward lower bounds show deterministic line algorithm achieve polylogarithmic performance ratio trees meshes 
line algorithms developed essentially randomized 
log approximation case trees obtained awerbuch bartal approximation ratio improved log trees diameter awerbuch gawlick leighton rabani 
awerbuch gawlick obtained line log log log approximation dimensional mesh 
technique raghavan upfal discussed section provides log approximation bounded degree expander graphs 
natural ask randomized line algorithm performance ratio log graphs answered negative bartal fiat leonardi 
showed family graphs fg line algorithm better approximation fact graphs bartal simply theta brick wall graphs 
line lower bound highly sensitive structure graphs chapter provide line log approximation eulerian planar graph loosely speaking structure brick wall graph 
class includes example brick wall graph edge capacity natural question omega gamma lower bound line algorithms family graphs edge capacity 
expander graphs discuss line related constructing disjoint paths bounded degree expander graphs 
chapter analyze performance greedy algorithm constructing disjoint paths expanders 
define expander graph 
say node graph ff expander constant ff set ae cardinality satisfies expansion condition jffi expander graphs highly non planar particular class graphs embeddable fixed surface contain arbitrarily large expanders 
expanders consider bounded maximum degree delta 
times term sufficiently strong expanders intend avoid lengthy technical details essentially mean expander graphs implicit lower bound constant ff 
turns sufficiently strong expander graph set terminals certain size realizable 
result type proved peleg upfal bound size allowable terminal set considerably strengthened broder frieze upfal 
order obtain paths edge disjoint papers require strong expansion guarantees 
moderate expanders proves 
recall congestion set paths mean maximum number paths containing fixed edge 
theorem broder frieze upfal ff exists constant holds 
delta regular node ff expander graph partial permutation containing log terminal pairs routed congestion paths length log 
proof provides randomized polynomial time algorithm constructing paths 
allows super constant congestion larger terminal sets guaranteed realizable particular leighton rao prove 
result stated strong expanders proof applies ff expanders arbitrary ff theorem leighton rao ff bounded degree ff expander property partial permutation containing log log log terminals pairs routed congestion log log paths length log 
unpublished broder frieze upfal addresses trade size terminal set allowed amount congestion 
product earlier fundamental multicommodity flow leighton rao established result 
theorem leighton rao bounded degree node ff expander 
partial permutation routed congestion log paths length log 
result aumann rabani observed 
say route partial permutation graph build conflict graph set paths routing 
path meets log paths log edges conflict graph maximum degree log 
color log colors 
color class set edge disjoint paths show theorem aumann rabani bounded degree node ff expander 
partial permutation partitioned log realizable sets 
follows log approximation mdp bounded degree expanders simply computes partition takes largest realizable set produced 
raghavan upfal arrive theorems completely different technique closely related methods broder frieze upfal 
permutation bounded degree expander produce routing iteratively follows 
terminal pair point chosen random stationary distribution random walk path constructed random walk length theta log followed random walk length theta log 
raghavan upfal show set paths produced way pairs congestion log high probability theorem follows 
variant randomized algorithm produces line log approximation mdp bounded degree expander graphs 
specifically terminal pair arrives construct type random walk route pair path constructed intersect previously routed path 
hard show conflict graph paths maximum degree log high probability log approximation 
chapter develop line log log log approximation expanders deterministic 
directed graphs discussion terms undirected graphs essentially concerned case undirected graphs 
chapter extend single source unsplittable flow algorithm case directed graphs 
section discuss known results disjoint paths directed graphs 
directed graph mean undirected graph choice direction edge 
choice direction fixes head tail 
path directed graph respect directions edges obvious way 
context mdp terminal pair seeking directed path introduces substantial new complication disjoint paths problem changes nature done algorithmically 
striking example problem deciding realizable directed jt shown np complete fortune hopcroft wyllie 
contrast algorithmic results discussed section 
disjoint paths problem understood general directed setting undirected setting 
indicate results previous sections analogues directed case 
formulate directed cut condition follows 
ae define ffi gamma set edges entering ffi set edges leaving capacitated case define gamma total capacity edges entering leaving respectively 
define ae gamma total demand terminal pairs define ae analogously 
natural phrasing cut condition follows 
ae gamma ae gamma 
cut condition ae equivalent considering place 
menger theorem max flow min cut theorem hold directed case fact easier prove directed graphs 
cut condition necessary sufficient realizability terminal pairs 
reduction discussed sections obtain results general single source problems 
state directed analogue corollary chapter 
corollary arbitrary directed graph set terminal pairs fractionally realizable cut condition holds 
ii maximum fractional flow polynomial time 
iii demands ae equal common value ae capacities multiples ae maximum fractional flow unsplittable flow 
particular case fractionally realizable realizable unsplittable sense 
general fractional multicommodity flow problem directed graphs formulated linear program polynomial size solved polynomial time 
follows high capacity ufp approximation works directed case 
fact line algorithm due awerbuch works directed case 
essentially results previous sections hold directed case 
limited number results flavor section proved see example 
similarly known directed graphs embedded general surfaces general schrijver theorem 
remains interesting general problem try identifying special cases disjoint paths problem solvable polynomial time directed graphs 
approximation algorithms described sections assume large edge capacities apply directed case 
chapter single source unsplittable flow seek source definitive closer am fine indigo girls indigo girls 
consider unsplittable flow problem case terminal pairs share common vertex 
set terminal pairs equal common vertex notational simplicity case denote set ft refer terminals vertex source specify problem triple 
recall section fractionally precisely classical maximum flow problem 
integrality theorem stated theorem shows demands value ae capacities multiples ae maximum unsplittable flow value equal maximum fractional flow value 
follows case unsplittable optimum characterized cut condition find optimum polynomial time 
far case general single source ufp 
particular result immediate similar examples chapter 
similar hardness results 
say problem strongly np complete remains np complete numbers input written unary np complete input numbers polynomially bounded 
proposition single source ufp np complete graph consisting vertices parallel edges joining 
strongly np complete graph consisting vertices parallel edges part input 
proof 
partition problem np complete set positive integers decide set ae instance partition problem numbers reduce single source ufp 
underlying graph node set fu vg parallel edges capacity 
define ae problem feasible solution partition problem solution 
prove strong np completeness note bin packing problem strongly np complete set positive integers numbers decide partition sets sums instance bin packing problem reduce single source ufp 
underlying graph node set fu vg parallel edges capacity 
define ae problem feasible solution bin packing problem solution 
problem np complete interested providing approximation algorithms 
consider maximization congestion versions problem introduced chapter 
obtain constant factor approximations versions 
consider extent tighter approximation guarantees obtained maximum demand small compared minimum edge capacity show approximation ratios converge demand capacity ratio goes 
cases results follow relation fractional unsplittable optima single source problems 
obtain constant factor approximation algorithm problem routing rounds single source case 
ratio maximum demand minimum capacity sufficiently small approximation ratio problem 
saw np hard distinguish set terminals routable single round routable hope case approximation ratio better 
possible able obtain approximation minimum number rounds differs optimum additive error leave interesting open question 
notational convenience ff denote quantity ff defined chapter maximum amount realizable demand problem 
define ff analogously 
mentioned section results similar flavor developed schrijver seymour winkler case multi terminal problems uniform capacity cycle 
problem minimizing congestion results provide approximate solution approaches optimum value demand capacity ratio goes 
basic approach quite different able fact terminal pairs common source deal arbitrary underlying graph 
techniques highlight complications arise designing approximation algorithms single source ufp worth considering obstacles arise trying adapt standard maximum flow techniques setting 
main methods prove max flow min cut theorem augmentation iteratively construct maximum flow increasing flow edges re routing induction find cut incident edges saturated contract side cut contain source proceed induction 
difficult define suitable approximate analogues methods setting unsplittable flow 
number basic reasons particular methods rely heavily fact constructing fractional flow maintain knowledge amount flow crossing edge setting hand keep track set demand values ae crossing edge example matters carrying unsplittable unit flow carrying unsplittable half units flow 
terms methods saw previous chapter randomized rounding method raghavan thompson requires minimum capacity exceed maximum demand factor omega jej inapplicable general setting considering 
approach setting demands value invoking corollary restoring demands original values inherently incapable providing constant factor approximation introduces terms depend ratio largest smallest demands basic method closest ideas reduce problem demands approximately grouping technique 
specifically cover graph small trees way edge contained trees amount demand contained tree approximately 
build unsplittable flow parts corollary find unsplittable flow paths designated leader nodes tree concatenate flow paths paths connecting terminals leaders trees 
turns undirected case essentially tree cover graph satisfies simple conditions sufficient 
things complicated directed case consider chapter 
directed analogue corollary choose tree cover carefully sure source flow large value leaders resulting trees 
careful construction tree cover require algorithm directed graphs 
coalitions recall balance assumption ae re scaling assume minimum edge capacity equal define ae max ae 
tree mean subset vertices induces connected subgraph spanning tree vertices 
tree node associated non negative weight define center node node fug component known weighted tree contains center node 
nice proof 
suppose center node node unique component fug contains half total weight fewer edges nodes pigeonhole principle implies exist nodes unique edge ffi ffi 
follows ends oe 
contradiction contains half total weight introduce notion coalition serve way grouping demand coalition set trees contain edge terminal assigned tree contains 
definition weak coalition pair ft tree ft function properties 
trees half disjoint mean edge belongs 
ii 
particularly interested coalitions total demand assigned tree approximately definition strong coalition order oe pair ft properties 
ft coalition 
ii oe ae oe ae trees strong coalition inequality hold called exceptional trees 
note exceptional trees property iii contain show strong coalitions exist 
lemma oe exists strong coalition order oe 
proof 
double edge eulerian edge sequence eulerian circuit denote order terminals encountered permutation kg 
partition sequence intervals sum values ae interval oe oe ae possible ae ae denote set terminals th interval denote set edges traversed visit vertex visit vertex case define set edges traversed visit vertex eulerian circuit 
contains edge set spanning tree superset spanning tree 
contains choose contains define function ft setting claim ft coalition 
property ii definition immediate construction see observe edge appears twice appears trees total demand assigned tree oe oe ae possibly tree contains ft strong coalition order oe 
gamma weak coalition trees define gamma set vertices fu exceptional center node ii exceptional refer node gamma leader tree called exceptional associated tree exceptional non exceptional 
define single source ufp gamma associating gamma demand exceed total demand assigned gamma tree show route set nodes gamma relative congestion possible original set terminals 
lemma gamma coalition suppose feasible fractional routing 
consider problem gamma defined previous paragraph suppose maximum demand associated gamma 
gamma fractional routing relative congestion 
proof 
feasible fractional routing assigns set paths non negative weights ae paths define fractional flow gamma gamma denote amount demand associated problem gamma denote total amount demand associated terminals assigned tree ae recall definition problem gamma gamma leader exceptional tree need construct paths 
gamma ij denote unique path define fractional flow paths follows 
gamma define ij concatenation ij set paths fp ij gamma set weight associated path ij delta define part path ij portion consisting edges part ij portion consisting edges ij verify set flow paths non exceptional relative congestion 
observe set parts flow paths contributes relative congestion parts correspondence original feasible fractional flow paths weight assigned part equal weight assigned corresponding fractional flow path equation 
set parts paths contributes congestion edge 
see observe non center node associated tree total demand edge due parts paths 
edge contained trees gamma total demand edge due parts flow paths 
edges capacity follows total relative congestion due parts paths 
adding bounds parts path obtains statement lemma 
prove lemma multiplying capacities verifying cut condition 
michel goemans suggesting proof 
congestion section strong coalitions obtain related results single source case bound ratio optimum relative congestion fractional unsplittable flows approximate max flow min cut theorem unsplittable flow approximation algorithm minimum congestion unsplittable flow 
theorem fractionally feasible 
unsplittable routing relative congestion ae ae ae proof 
set oe ae ae gamma strong coalition order oe choose set nodes gamma 
non exceptional node gamma associate demand oe exceptional associate demand 
denote graph obtained multiplying oe rounding capacity nearest multiple oe note resulting capacity satisfies oe oe oe assumed fractionally feasible follows lemma gamma fractionally feasible 
demands gamma equal oe capacities multiples oe corollary feasible unsplittable flow gamma 
part part tree constructing unsplittable flow denote path associated feasible unsplittable flow 
describe construction unsplittable flow specifying path terminal suppose define unique path define flow path concatenation define part portion consisting edges part portion consisting edges remains compute relative congestion flow defined paths fp arguments showed carry oe units flow relative congestion edge due parts flow paths oe part ii definition may carry oe ae units flow relative congestion due parts paths oe ae oe delta oe ae ae ae ae part definition belongs trees gamma 
part ii definition total amount flow due parts paths oe ae total relative congestion due parts flow paths oe ae ae ae adding total relative congestion ae ae theorem follows 
ae making assumptions having small demands aside equation congestion bound theorem equal 
note clean proof slightly improve constant theorem follows 
construction strong coalitions lemma results exceptional tree 
consequence contained trees non exceptional node tree center node 
follows total flow edge due parts flow paths oe ae exceptional tree contain plus oe ae tree containing non exceptional oe ae setting oe ae obtain bound ae ae approximately ae 
sake simplicity continue bound stated theorem 
course natural goal determine tightest possible bound minimum relative congestion unsplittable routing fractionally feasible 
example shows gamma 
consist vertices parallel edges unit capacity 
consist copies vertex terminal having demand gamma fractionally feasible minimum congestion unsplittable routing gamma example gives worst possible gap fractional unsplittable interesting open question 
say cut condition met factor fi sets containing theorem show cut condition met large factor feasible unsplittable flow 
result useful chapter 
corollary suppose ae cut condition met factor fi gamma ae gamma feasible unsplittable solution 
proof 
define graph obtained dividing capacities factor fi 
resulting problem ratio maximum demand minimum capacity theorem unsplittable flow relative congestion fi feasible unsplittable flow 
note required ae fi defined 
give approximation algorithm minimum congestion single source unsplittable flow arbitrary graph corollary approximation arbitrary graph proof 
assume edges capacity maximum demand ae 
polynomial time compute fractional flow minimum congestion know lower bound optimal unsplittable congestion know ae lower bound optimum edge carry ae units flow 
set max ae assign edges capacity feasible fractional flow choice capacity know theorem unsplittable flow congestion ae gamma approximation ratio follows 
maximization turn problem minimizing congestion basic unsplittable flow problem defined chapter wish maximize total amount flow sent subject capacity constraints 
recall optimum problem single source case denoted ff 
obtain constant factor approximation ff performance guarantee fact terms fractional optimum imply constant factor gap values fractional unsplittable optima 
denote single source minimum edge capacity 
demands roughly value difficult obtain constant factor approximation algorithm simply assigning demand value terminals applying corollary 
content lemmas 
lemmas take care demands sufficiently large particular larger constant ae define 
set demands smaller ae require technique involving strong coalitions theorem 
specifically compute maximum flow set leaders strong coalition construct unsplittable flow terminals leader routed initial maximum flow able route constant fraction demand tree 
provide constant factor approximation ratio 
recall ae max ae define ae min ae lemma polynomial time algorithm producing unsplittable flow value ae ae times ff 
proof 
write ae ae instance single source ufp 
denote graph obtained rounding capacities nearest multiple ae multiplying capacity times denote set terminals obtained assigning demand ae observe ff times ff 
see take fractional flow multiply flow values factor resulting flow satisfies capacity constraints route ae units flow terminal feasible fractional flow 
demands equal ae capacities multiples ae corollary find unsplittable flow value equal ff 
flow paths unsplittable solution turn feasible demands factor gamma greater capacities gamma times greater 
value unsplittable flow factor ff 
lemma polynomial time algorithm producing unsplittable flow value ae ae gamma times ff 
proof 
write ae ae partition terminals subsets demands terminals interval ae gamma ae 
problems produce unsplittable flow value gamma times ff lemma 
ff ff obtain claimed approximation ratio unsplittable flows compute greatest value 
theorem ae gamma polynomial time algorithm single source ufp producing flow value gamma ae ae times ff 
proof 
require ae gamma expression gamma ae ae positive 
instance single source ufp ae gamma set oe ae gamma ae note oe gamma ae ae gamma ae ae gamma ae ae gamma ae ae gamma ae gamma strong coalition order oe gamma ae denote trees gamma denote set terminals assigned tree denote graph obtained multiplying capacities oe rounding nearest multiple oe assign non exceptional vertex gamma demand oe exceptional vertex gamma demand equal amount assigned tree 
point fact placing demand simply able comparison optimum 
compute maximum unsplittable flow gamma 
demands equal oe situated source corollary implies maximum unsplittable flow equal fractional optimum gamma computed polynomial time 
claim value unsplittable flow large value maximum fractional flow 
consider fractional flow denote demand contained tree gamma routed flow 
lemma feasible fractional flow gamma routes demand gamma 
unsplittable flow compute gamma value equal maximum fractional flow proving claim 
denote set non exceptional vertices gamma routed maximum unsplittable flow constructed previous paragraph set indices vertices rg 
define ae set maximal subject condition ae gamma oe oe oe note maximality ae gamma oe oe oe gamma ae denote set indices exceptional trees show realizable graph argued oe delta ji ae large maximum fractional flow equation unsplittable flow produce value gamma oe oe oe gamma ae ji ae value factor gamma oe oe oe gamma ae oe gamma ae gamma ae gamma ae gamma ae ae gamma ae gamma ae ae times fractional optimum 
remains show realizable denote flow path maximum unsplittable flow constructed gamma 
consider proof theorem define unique path define concatenation serve flow path terminal claim set fp flow paths violate capacity constraint 
show consider edge know flow path carry oe units flow oe units flow pass due parts paths fp flow path carries gamma oe oe oe units flow gamma oe units flow pass edge due parts paths fp contained trees gamma oe oe units flow pass due parts paths fp capacity constraint edge 
set realizable flow paths fp theorem follows 
result obtain constant factor approximation assumptions size largest demand aside equation 
denote set terminals demand gamma set terminals demand gamma obtain constant factor approximation algorithm ff lemma constant factor approximation algorithm ff theorem 
unsplittable flows produced way greater value gives corollary constant factor approximation algorithm ff 
routing rounds order obtain constant factor approximation problem routing rounds classical connection flows matroids 
section discuss connection consequences approximation algorithm 
tools matroid theory matroid pair finite ground set collection subsets satisfies conditions 
closure respect inclusion 
ae ii exchange property 
jx jy exists element fyg subset called independent belongs called basis maximal independent set respect inclusion 
note exchange property ensures bases cardinality 
ae define rank denoted maximum cardinality independent subset refer reader book background matroids 
number basic problems computationally intractable set systems general tractable set system matroid 
primarily interested covering problem matroid minimum cardinality cover members 
question addressed result edmonds 
theorem edmonds polynomial time algorithm find minimum cardinality cover ground set matroid independent sets 
minimum greater ae delta jx say single source ufp integral demands equal common value ae capacities multiples ae 
recall corollary integral unsplittable problems characterized max flow min cut theorem 
relevance matroids problems consequence result due perfect 
theorem perfect integral single source ufp 
collection realizable subsets forms matroid ground set fact immediate 
lemma show integral matroid structure problem implies minimum fractional relative congestion rounded nearest integer fact equal minimum number rounds required 
far case general unsplittable flow problems 
lemma integral quantity computed polynomial time 
proof 
view previous lemma show denote quantity done assume 
theorem view minimum cardinality cover members matroid realizable subsets 
theorem set ae gamma times large maximum total demand realizable set terminals corollary gamma ae 
follows gamma approximation algorithm single source problem assume re scaling minimum edge capacity demands 
approximation algorithm similar previous section choose threshold value treat demands larger threshold separately smaller threshold 
straightforward handle large demands lemmas 
lemma polynomial time algorithm routes ae ae rounds 
proof 
denote graph obtained rounding capacities nearest multiple ae denote set terminals obtained assigning terminal demand ae problem integral compute routing problem rounds associated paths problem 
clearly paths round respect capacity constraints 
argument strictly analogous proof lemma ae ae result follows 
similarly argument strictly analogous proof lemma lemma polynomial time algorithm routes ae ae delta rounds 
theorem ae gamma 
polynomial time algorithm routes rounds 
proof 
instance single source ufp ae gamma set oe ae gamma ae gamma strong coalition order oe gamma ae denote trees gamma denote set terminals assigned tree denote graph obtained multiplying capacities oe rounding nearest multiple oe assign non exceptional vertex gamma demand oe exceptional vertex gamma demand 
claim fractional routing gamma relative congestion see note multiply capacities factor feasible fractional routing capacities lemma fractional routing gamma relative congestion oe capacities oe times multiply capacities factor gamma fractionally feasible 
follows gamma algorithm follows 
compute routing gamma gamma rounds 
break rounds rounds routed round route terminals tree pair rounds associated result claimed approximation ratio 
remains show take single round routing gamma route associated terminals rounds 
denote set vertices gamma routed single round routing gamma set indices vertices 
denote terminals associated vertex total demand terminals oe maximum demand ae partition sets demand oe ae recall equation gamma oe oe oe gamma ae oe gamma ae ae ae gamma gamma ae ae equation ae ae oe ae gamma oe oe oe claim set terminals routed single round 
show define flow path concatenate path denoted flow path denoted edge total amount flow crossing due parts paths oe delta gamma oe oe gamma oe total amount flow crossing due parts paths oe oe capacity constraints satisfied set paths fp associated terminals terminals exceptional trees routed entirely paths form routed rounds violating capacity constraints 
facts provide main approximation result section approximation algorithm ae ae arbitrary numbers 
approximation obtained simply separate sets rounds terminals demand gamma demand gamma 
constant factor optimal type demand corollary arbitrary single source unsplittable flow problem 
polynomial time constant factor approximation 
worth noting natural corollary results 
corollary fractionally feasible routable splitting constant number rounds 
additionally ae gamma routable splitting rounds 
chapter directed single source problems assays bias indirections find directions 
william shakespeare hamlet 
extend approximation algorithms previous chapter case directed graphs 
vertex terminal set ft associated demands ae ae seeking directed paths terminals capacity constraints met 
able obtain constant approximation ratios converge ratio maximum demand minimum capacity goes 
underlying technique construction coalitions directed arborescences place trees 
careful defining right coalition directed case discuss 
chapter deal directed graphs 
motivation undertaking digression directed case sources 
noted section disjoint paths problem directed graphs understood undirected case particular interest develop approximation techniques applicable directed graphs 
second observe appeal max flow min cut theorem issue routing networks lies ease reduce wide range problems combinatorial optimization 
turns notion reduction applicable setting single source unsplittable flow natural reductions require underlying graph directed 
basic example consider machine scheduling problem 
set fj jobs job weight set fm machines 
associated job set ae machines run 
goal assign job machine way maximum weight assigned machine minimized 
case equal just classical minimum makespan problem approximation polynomial time fixed 
arbitrary sets lenstra shmoys tardos show polynomial time algorithm approximate optimum load factor better provide approximation algorithm class problems includes 
observe load balancing problem easily formulated single source unsplittable flow problem level directed graph 
introduce node include directed edge iff attach source edge give demand equal minimum congestion routing unsplittable flow graph corresponds minimum load assignment jobs machines 
note constant factor approximation obtain general single source problem greater claiming improve bound lenstra shmoys tardos special case 
course elaborate reductions possible 
example consider multi stage load balancing problem set jobs sets sites residing metric space job processed site set sequence moving site job move distance metric space goal find way processing job maximum load site minimized 
straightforward formulate problem finding minimum congestion single source unsplittable flow appropriate directed graph 
jobs machines load balancing problem definitions techniques graphs capacity values integers allowing parallel edges assume capacity equal 
undirected case notion coalitions way grouping demand directed graph sure leader tree coalition directed path terminals way demand grouped leader node reach terminals resides 
define types directed trees dealing discuss additional complications arise directed coalitions 
directed graph distinguished source vertex say paths cycles directed 
interested finding flow paths terminals ft assume path node loss generality nodes participate solution unsplittable flow problem defined 
tree mean subgraph underlying edge set forms tree ignores directions edges 
tree vertex path vertex say root tree root tree root say arborescence 
say spanning arborescence arborescence vertex set equal forest set trees share vertices 
definitions directed coalition simply set half disjoint arborescences terminal assigned arborescence contains 
strong directed coalitions constructed straightforward fashion depth search spanning arborescence rooted lemma 
terminal leader fractional flow paths bad choice coalition main technical complication arises fact obvious analogue lemma hold directed case fractionally realizable set terminals possible construct coalition resulting set leaders routed large congestion 
example pictured flow paths terminals coalition built edges participating flow paths leaders share single edge results high congestion 
note difficulty arise undirected case set low congestion paths leaders built fractional flow paths terminals reverse direction precisely place proof lemma 
show lemma choose coalition leaders routed approximately congestion terminal set 
lemma approximation algorithms follow exactly undirected case 
construction coalition proceeds roughly follows 
max flow min cut theorem directed graphs corollary avoid situation set containing large number leaders edges enter set containing large number leaders consider cases contains correspondingly large number terminals 
case terminal set fractionally routable edges entering 
ii contains terminals 
paths leaders associated terminals terminals lie edges leaving case examine set edges leaving say edge dense carries units flow terminal set shallow 
arrange construction coalition gamma node entering edge dense edge enters arborescences gamma 
cases consider 
large fraction edges leaving dense large amount flow leaving follows large amount flow enters edges entering 
suppose edges leaving shallow 
difficult case argue lot flow enters grow set chains vertices degree remains case edges leaving shallow construction coalition gamma argue edges large number shallow branching nodes nodes degree greater entering edges shallow 
crucial fact establish lemma lemmas edge disjoint paths linking shallow branching nodes consequently able argue edges leaving shallow entered edge disjoint paths consequently edges entering required 
coalitions define coalitions directed setting 
definition weak coalition triple fa fu arborescence root fa function properties 
arborescences half disjoint mean edge belongs 
ii 
definition strong coalition order oe triple fa fu properties 
fa coalition 
ii oe ae oe ae arborescence inequality hold called exceptional 
say leader show strong coalitions exist directed graphs 
construction somewhat different section need produce arborescences just trees 
proceed follows 
arborescence set vertices consider collection subgraphs property arborescences containing easy verify collection contains unique minimal arborescence denote 
lemma spanning arborescence root oe 
exists strong coalition gamma order oe edge sets arborescences gamma subsets proof 
perform depth search starting root denote order terminal encountered depth search 
proof lemma partition sequence intervals total demand interval possibly oe oe ae add set construct coalition gamma defining 
define root th arborescence function show arborescences fa half disjoint properties definitions straightforward verify 
denote set edges traversed visit vertex visit vertex sets half disjoint edge traversed exactly twice depth search 
contains edge set arborescence edges belong follows fa half disjoint 
spanning arborescence rooted oe lemma gives canonical strong coalition order oe induced gamma oe denote coalition 
chapter indicated natural analogue lemma hold directed case information fractional flow terminal set construction directed coalition 
particular need prove existence disjoint paths shallow branching nodes need lemmas 
vertex directed graph ffi denote number edges tail ffi gamma denote number edges head 
ffi ffi ffi gamma say leaf ffi leaf call leaf ffi gamma leaf ffi 
say reverse arborescence root reversing direction edge turns arborescence root lemma directed acyclic graph node node fug satisfies ffi gamma ffi exists set edge disjoint paths path tail fug ffi gamma gamma ffi paths heads proof 
add new node fug add ffi gamma gamma ffi parallel edges add ffi parallel edges denote resulting graph note degree node equal degree eulerian 
eulerian circuit graph 
delete decomposes edge disjoint paths 
easy verify paths satisfy conditions lemma 
lemma reverse arborescence nodes root set leaves 
exists collection edge disjoint paths path tail distinct vertex ffi gamma paths heads fvg ffi gamma gamma paths heads proof 
attach new node single edge node apply lemma 
lemma forest vertex set fw ffi gamma 
exists collection edge disjoint paths path tail distinct vertex ii ffi gamma gamma paths heads proof 
prove tree apply lemma component separately 
assuming node fix arbitrary node root tree mean defined edge undirected distance undirected distance say edge proper tail head improper 
set trees obtained deleting improper edges 
observe facts 
reverse arborescence node tail edge 
ii node leaf belongs set iii degree node equal ffi gamma gamma root equal ffi gamma 
iv degree tree equal ffi gamma facts follows applying lemma produces desired paths lemmas construct appropriate coalition 
lemma single source fractional flow problem terminal associated demand ae assign terminal demand ae ae way feasible fractional routing 
exists spanning arborescence rooted oe induced coalition gamma gamma oe property 
suppose define problem gamma assigning gamma demand ae exceeding total ae demand terminals arborescence 
ae gamma fractional routing congestion 
proof 
assigning demand ae ae resulting problem fractional routing respects capacity constraints 
denote total amount flow crossing edge fractional routing 
call edge tight empty 
may delete empty edges affect feasibility demand ae 
perform reduction steps graph associated fractional flow 
assume set non empty edges induce directed cycles deleting empty edges necessary graph acyclic ffi gamma ii suppose exists set edges induce simple cycle ignores directions 
gamma denote set nodes cycle having ends mod say edge mod forward tail backward 
uniformly increase flow values forward edges uniformly decreasing flow values backward edges edge tight empty 
iii tight edges may delete add tight edge 
find desired coalition resulting graph easy produce coalition graph node node node terminal edge edge constructing coalition reduction steps may assume acyclic ffi gamma set edges induce forest node head tail tight edge 
point denote set vertices tails tight edges 
denote set containing vertices heads tight edges 
note disjoint sets 
say edge dense shallow 
say node branching ffi gamma shallow edges head shallow 
denote set shallow branching nodes 
ff denote number tight edges tail 
ff units flow leave flow conservation ff enter flow enter non tight edges degree ff 
particular branching 
shallow degree ff ff see example definitions 
prove lemma show linked edge disjoint paths 
prove follows 
denote forest consisting non tight edges nodes incident 
apply lemma forest obtaining set edge disjoint paths node degree zero flow conservation head tight edge equal node belongs lemma paths tail distinct vertex node head tight edge degree head ffi gamma gamma paths node fsg choose single tight edge head obtaining collection tight edges denote union edges denote subgraph consisting edges nodes incident 
node ffi gamma ffi denote degree degree subgraph claim source satisfies hypotheses lemma 
see node fsg show ffi gamma ffi 
tail path head edge 
ii tail ff edges head ffi gamma gamma ff paths 
iii edge tail corresponds internal node path paired edge head 
denote set edge disjoint paths anchored provided lemma 
claim degree strictly greater degree show path head show observe edges incident correspond paths internal path head ffi gamma ffi ffi ff head ff paths tail ff edges ffi gamma ffi exists set edge disjoint paths tails path head proves claim 
set edge disjoint paths denote path ends define arborescence acyclic graph path vertex defining arborescence specify edge node fsg 
follows 
fsg 
branching node choose unique edge head equal 
ii head dense edge choose dense edges arbitrarily 
iii shallow branching node 
case choose final edge path constructed proof claim 
prove main statement lemma 
ae denote demand assigned gamma problem gamma 
hypothesis ae ae claim edge capacity problem gamma fractionally feasible 
order show verify cut condition showing jffi gamma ae set suppose set violating cut condition choose set cardinality maximal 
suppose contains leaders associated arborescences say unsplit node set entirely contained split 
consider cases 
fraction total ae demand associated leaders unsplit arborescences 
equation ae ae feasibility problem demands ae jffi gamma ae fi fi ffi gamma fi fi ae ae ii fraction total ae demand associated leaders split arborescences 
maximum demand contained single arborescence delta ae ae split arborescences arborescences half disjoint follows fi fi ffi fi fi ae sub cases 
fraction edges ffi dense 
total flow value gamma ae problem leaving set consequently flow entering set 
edges unit capacity jffi gamma gamma ae 
fi fi ffi gamma fi fi ae fraction edges ffi shallow 
definition edges heads shallow nodes considering violated cut cardinality maximal branching node fz violated cut larger cardinality 
fz ae zr edge ffi 
follows zr edge ffi gamma 
delta ae fi fi ffi gamma fi fi ae cases jffi gamma ae contradicting assumption set violating cut condition 
violated cuts gamma fractionally feasible edge capacities equal 
approximation algorithms lemma place lemmas able obtain approximation algorithms basic objective functions previous chapter constants somewhat larger due weaker bound provided lemma 
essential difference lemmas terms application 
coalition produced lemma depends structure particular demand associated terminal issue arise undirected case lemma applied coalition 
congestion theorem directed fractionally feasible 
unsplittable routing relative congestion ae ae ae proof 
set oe ae lemma construct coalition gamma respect demands fae terminals proof theorem multiply capacities oe round capacity nearest multiple oe lemma feasible fractional routing leaders gamma resulting graph 
corollary feasible unsplittable routing leaders gamma paths fq proof theorem belongs gamma concatenate path unique path path arborescence denote path 
produces unsplittable flow path terminal total relative congestion due parts flow paths oe ae oe delta oe total relative congestion due parts flow paths oe ae oe ae oe delta oe adding bounds obtain total relative congestion oe ae oe delta oe ae ae gives bound 
interesting determine correct bound low 
theorem section obtain corollaries 
corollary directed 
suppose ae cut condition met factor fi gamma ae gamma feasible unsplittable solution 
corollary approximation arbitrary directed graph maximization observe corollary place corollary lemmas hold directed case 
directed analogue theorem 
theorem directed graph ae gamma polynomial time algorithm single source ufp producing flow value gamma ae ae times ff 
proof 
set oe ae gamma ae require ae gamma expression gamma ae ae positive oe defined 
compute fractional maximum flow denote demand routed terminal set demand values terminals apply lemma produce strong coalition gamma order oe denote graph obtained multiplying capacities oe rounding nearest multiple oe assign non exceptional vertex gamma demand oe exceptional vertex gamma demand equal amount assigned arborescence 
proof theorem maximum flow gamma unsplittable flow 
lemma assign gamma demand equal obtain fractionally feasible flow problem 
follows maximum flow value gamma large fractional maximum flow value 
proof theorem take gamma routed optimum unsplittable flow route subset terminals arborescence total demand gamma oe oe oe gamma ae argues set flow paths routed terminals satisfies capacity constraints calculate routed total demand factor gamma oe oe oe gamma ae oe gamma ae gamma ae gamma ae gamma ae ae gamma ae gamma ae ae fractional optimum 
corollary constant factor approximation algorithm ff arbitrary directed graph routing rounds theorem realizable subsets integral single source ufp form matroid holds directed case 
consequently lemmas hold directed case 
analogue theorem proof direct modification undirected version 
theorem ae gamma polynomial time algorithm routes rounds 
corollary arbitrary single source unsplittable flow problem directed graph 
polynomial time constant factor approximation 
corollary directed 
fractionally feasible routable splitting constant number rounds 
additionally ae gamma routable splitting rounds 
chapter greedy algorithm roads diverged wood took traveled difference 
robert frost road taken 
turn attention disjoint paths problems terminal pairs necessarily share common vertex essentially focus remainder 
chapter analyze performance pass greedy algorithm approximating mdp 
algorithm surprisingly certain classes graphs approximation ratio large planar graphs dimensional mesh 
development improved non greedy algorithms mesh related planar graphs taken chapter 
arbitrary graph arbitrary set terminal pairs natural algorithm consider approximating mdp greedy algorithm ffl proceed terminal pairs pass 
ffl considered check belong connected component route shortest path delete iterate 
addition simplicity greedy algorithm line deterministic 
lower bounds imply fortiori achieve performance ratio graphs trees dimensional meshes 
chapter consider slight variant greedy algorithm bounded greedy algorithm bga 
bga line algorithm implicit parameter runs follows 
ffl proceed terminal pairs pass 
ffl considered check joined path length route path delete iterate 
bga suffers bad behavior suggested lower bounds performance appears somewhat easier analyze number cases pure greedy algorithm 
developing methods analyzing pure greedy algorithm interesting open question 
chapter prove upper bound performance bga maximum disjoint paths problem arbitrary graph 
provide analogous bound ufp 
graphs bga quite poorly bound prove useful analyzing step line algorithm develop chapter 
consider bga bounded degree expander graphs 
prove parameter theta log log log bga fact log log log approximation maximum disjoint paths problem 
nature bound interesting number reasons 
shows bounded degree expanders natural class graphs routing algorithms line deterministic provably close optimal 
secondly approximation ratio prove smaller log ratio obtains techniques developed aumann rabani raghavan upfal problem routing rounds 
papers considered deterministic line randomized line settings respectively 
naturally raises question techniques developed incorporated algorithm contend line constraint lead tighter approximation bounds 
leave question research 
section prove general bound bga 
consider case bounded degree expanders section 
general bounds arbitrary graph diameter set terminal pairs theorem define max jej 
bga parameter approximation 
proof 
denote set paths routed bga run terminal pairs denote set disjoint paths connecting subset maximum cardinality 
ae denote set paths corresponding terminal pairs routed bga 
call path restricted intersects path unrestricted 
denote set restricted unrestricted paths respectively 
path length greater bga routed endpoints path 
jo jej jbj inequalities fact jbj 
path charge path intersects 
paths edge disjoint jp paths charged path charged path jo jbj definition jo jbj adding equations obtain claimed bound 
approximation ratio implied general result quite large form constant 
lower bound due blum karloff fiat rabani implies qualitatively better bound possible greedy algorithm graph dimensional mesh 
proof result readily accessible provide alternative proof 
proposition blum karloff fiat rabani deterministic line algorithm mdp theta dimensional mesh exists sequence terminal pairs depending ratio ff number pairs routed omega gamma 
proof 
simplicity assume integer 
fa denote set nodes column fb denote set nodes th column indexed belong th row mesh 
gamma observe realizable cf 
theorem 
input fails route terminal pairs better omega gamma approximation 
minimal prefix property routes terminal pairs 
paths produced routing subset pair cross 
denote set vertices paths cross jx gamma delta consider order arbitrary hamiltonian path meets pair consecutive elements order obtain partition set tx terminal pairs 
note subpaths hamiltonian path constitute realization tx ff jt construct concatenating tx ff routes terminal pairs route pairs tx edges incident vertices 
better omega gamma approximation 
note theta mesh contains theta nodes edges diameter theta upper bound approximation ratio bga provided theorem 
lower bound applies line algorithms deterministic chapter see possible obtain line log approximation randomized algorithm 
formulate prove analogue theorem unsplittable flow problem uniform capacity graphs 
re scaling assume edge underlying graph capacity 
take care issue turns general ufp bga achieve approximation ratio bounded terms size underlying graph specifically consist single edge unit capacity request demand edge request demand edge 
bga accept request able accept second approximation ratio gamma independent size natural generalization theorem fact shows bga parameter max jej ae gamma approximation ae min ae 
turns bga obtains approximation ratio require maximum demand bounded away 
particular define instance ufp bounded maximum demand gamma 
show theorem unit capacity graph set terminal pairs demands resulting ufp bounded 
diameter max jej 
bga parameter gamma approximation 
proof 
proof quite similar previous 
set paths ae denote total demand terminal pairs routed define sets paths optimum set paths maximum ae 
define path restricted uses edge bga routed total demand 
denote set restricted unrestricted paths respectively 
note ae bga clearly reject terminal pair routed demand 
direct analogy previous proof show ae gamma ae definition ae ae remains bound ae follows 
edge bga routed total demand 
charge denote set edges path charged denote set paths charged ae ae je edge carries units flow routed bga ae je max jp je follows ae gamma ae algorithm bounded degree expanders analyze bga bounded degree expander graphs 
expanders introduced section refer reader section relevant definitions 
discussion node ff expander graph maximum degree delta 
section deal maximum disjoint paths problem demands capacities equal 
analysis bga fact previous section consider set edge disjoint paths joining terminal pairs charge appropriately paths routed bga conclude number paths routed bga large relative optimum 
gives analysis considerable power case set results discussed section essentially say large partial permutations routed short paths 
particular theorem says constants partial permutation size log log log routed congestion log log paths length log prove 
simplicity suppose delta theorem bga parameter delta log log log log log log approximation mdp proof 
analogous notation proof theorem 
denote set paths routed bga run terminal pairs denote set paths maximum cardinality 
ae denote set paths corresponding terminal pairs routed bga 
paths edge disjoint delta pairs routed contain fixed vertex theorem cf 
pairs routed partitioned delta partial permutations ae denote set paths corresponding largest partial permutations 
define set paths follows 
jo log log log pigeonhole principle half paths length je jo delta log log log define set paths 
ii jo log log log theorem pairs routed routed paths length log congestion log log define set paths 
claim path intersects path suppose disjoint paths bga parameter routed endpoints path contradiction 
charge path path intersects 
paths congestion log log paths length delta log log log path charged delta log log log times 
jo delta delta jo delta delta jo delta delta log log log delta jbj definition jo jbj result follows 
obtain slight strengthening result case permutation 
theorem case phrased follows exist constants permutation routed congestion log paths length log theorem bga parameter log log approximation mdp set terminal pairs restricted permutation 
proof 
define 
denote partial permutation consisting pairs routed bga 
define set paths pair partial permutation path length log set congestion log previous proof observe path intersect path charging paths paths jt jqj log jt jbj follows jbj jt log log jo jej log deltan log equation jbj log delta joj desired 
pigeonhole principle set ae size jo consisting paths length log path meet path charging paths paths usual jo log bound follows case joj jo jo jo jbj log jbj chapter dimensional mesh declare marked just large chess board 
alice 
lewis carroll looking glass 
previous chapter saw greedy algorithm approximating maximum disjoint paths problem provide weak approximation ratio planar graphs dimensional mesh 
tells alternative techniques developed dealing graphs 
previous direction undertaken awerbuch gawlick leighton rabani aumann rabani 
papers gives line log log log approximation mdp dimensional mesh second gives line log approximation 
chapter obtain constant factor approximation unsplittable flow problem uniform capacity dimensional mesh 
constant factor approximation class graphs trees algorithm context mesh deal arbitrary unsplittable demands just problem edge disjoint paths 
techniques provide line log approximation algorithm 
matches lower bound awerbuch showing line algorithm mdp dimensional mesh better omega gamma approximation 
algorithms developed property common previous algorithms mesh quite specific fixed row column structure mesh 
basic method generalized broader class graphs chapter obtain constant factor approximation ufp class locally planar eulerian graphs 
constant factor approximation obtain astronomical large push algorithm outside range immediate practical utility 
attempted optimize constants involved development algorithm obtaining approximation ratio involve non trivial 
having said worth noting additional points 
previous best approximation bounds line line twodimensional mesh involve similarly large constants inside delta notation 
feel ideas components algorithms may suggesting practical heuristics 
chapter denote theta mesh edges capacity 
assume re scaling common capacity 
rough sketch algorithms follows 
stronger results known cases edges capacity omega gamma want model high capacity simulated network choose constant fl maximal set fl log theta fl log subject condition distance fl log serve nodes label pairs neighbors connect omega parallel edges high capacity edges network run algorithm awerbuch azar plotkin line case algorithm raghavan thompson line case 
algorithms running return routes consisting sequence neighboring 
convert route path construct disjoint paths neighboring 
link sequence neighboring pairs natural crossbar structures surrounding 
leaves problem routing original terminal boundary 
line case route total demand routing easy 
line case single source unsplittable flow algorithm chapter route appropriate subset terminals boundary 
prove approximation ratios argue total demand routed optimum upper bounded maximum demand routed copy edges capacity log 
simulated network denotes dimensional mesh denote vertex row number column number fg denote fewest number edges path 
distance vertices mean max ji gamma jj gamma choose constant fl constant influence approximation ratio obtain 
goal choose maximal set mutually distant vertices grow nodes simulated network 
divide mesh fl log fl log follows 
definition called fl block natural numbers equal set gamma fl log ifl log gamma fl log jfl log fl block associated natural numbers vertex gamma fl log gamma fl log called center fl block denote boundary vertex maximal minimal row column number 
denote union fl blocks share boundary vertices wall mean maximal set boundary vertices having row column number 
vertex internal boundary vertex 
denote set centers fl blocks 
build graph joining corresponding sets intersect internal vertex 
run randomized version luby maximal independent set algorithm graph 
vertex picks random number large probability ties small 
number higher neighbors enters cv block added dv cluster surroundings mis neighbors drop 
iterate 
ae denote resulting mis 
intersects internally vertices probability gamma enter iteration 
distance fl log common neighbors events independent 
lemma fl log constant probability belong set constructed 
call cluster 
want construct internally disjoint enclosures vertex belongs enclosure union fl blocks 
sets disjoint unions fl blocks cover maximality fl block belong share boundary vertex pick arbitrarily add form partition union fl blocks 
define graph vertex set joined edge fl block shares wall fl block argued fl block belong theta set fl blocks centered easy argue fl blocks contained share wall fl block lemma degree vertex 
contract enclosure resulting graph contain edges multiplicity theta log run high capacity algorithm 
routing run problem need convert sequence neighboring clusters connecting clusters contracted graph back routing natural crossbar structures mesh line case additional flow techniques line case 
start developing crossbar structures 
definition ring subgraph set vertices distance exactly fl log fl log ring cycle path depending wall boundary rings say inside resp 
outside distance resp 
greater distance note set rings fl log disjoint cycles right outside boundary inner half pair edge choose sufficiently small constant fi set fi log edges ffi dw 
denote set vertices incident edge choose set oe fi log vertices evenly spaced outer boundary lemma choose fi small oe fl log associate different ring vertex oe straightforward fashion construct edge disjoint paths vertex associated ring 
assign outermost fi log rings vertices oe oe denote union ring associated path ring 
lemma non simple paths mutually edge disjoint pair meets vertex proof 
paths edge disjoint construction 
suppose ring associated inside ring associated path ring intersect ring associated meet vertex 
argument applies oe oe case ring associated lies outside ring associated show optimal unsplittable flow simulated network provides approximate bound optimal unsplittable flow denote graph edge capacity vertex cluster define say undefined terminal pair ends clusters form define 
fact 
lemma realizable subset property terminals belong realizable fl log 
proof 
consider realization denote path associated construct path crosses dw dw add edge jffi dw fl log upper bound total demand paths constructed routing edge ready describe analyze routing algorithms 
line algorithm line algorithm suggested chapter variant high capacity algorithm awerbuch azar plotkin determine global routes simulated network deciding terminals selected high capacity algorithm routed clusters originate separate line algorithms cluster 
goal show final line algorithm obtained way log approximation 
subsection discuss general method analyzing combinations line algorithms 
develop variant high capacity algorithm need section 
sections describe line algorithm 
combining maximization algorithms routing connections line adopt approach decision accept connection combination algorithms connection accepted individual algorithms accepts 
approximation ratios individual algorithms infer approximation ratio combined algorithm section show done fairly general framework 
denote finite set subsets denote collection subsets closed respect inclusion fc element associated positive weight set ae define define maximum weight member contained wish design algorithm line maximization problem respect elements arrive arbitrary order element algorithm accepts rejects goal accept subset elements weight large possible relative 
algorithm called approximation accepts set size 
define corresponding line maximization problems respect exactly way 
say algorithm approximation problem associated assume state completely determined set elements accepted far 
define combined algorithm line maximization problem respect follows 
accepts iff accepts total set accepted far intersected serves state denote maximum approximation ratio algorithms suppose element appears theorem approximation 
proof 
assume algorithm set returned denote member contained maximum weight show delta 
denote elements rejected algorithm elements accepted optimal solution note ae want prove 
set elements accepted rejected order appears input running combined algorithm accept precisely set approximation definition deltaw 
delta natural way define fractional version model follows 
fractional choice subset specified vector juj indicating fraction element taken 
weight fractional subset defined delta collection feasible subsets specified subset juj closed downward sense coordinatewise implies algorithms particular choose integer valued subsets respective approximation ratios respect fractional optimum 
setting show minor modification proof 
theorem approximation relative fractional optimum approximation relative fractional optimum 
proof 
previous proof denote sequence elements integer valued set returned fractional subset maximum weight 
fractional set attaining maximum exists closed subsets juj compact 
define fractional set obtained assigning zero coordinates corresponding elements rejected algorithm fractional set obtained assigning zero coordinates corresponding elements note definition non zero disjoint sets coordinates definitions simply follow previous proof 
verifies definition delta aap algorithm graph nodes edge capacity log line ufp algorithm awerbuch azar plotkin achieves approximation ratio log arbitrary sets terminal pairs 
purposes need develop strengthening aap algorithm want approximation guarantee holds fractional optimum deal general class graphs developed chapter want require capacities log arbitrary 
show obtain algorithm 
theorem edge capacities log deterministic line ufp algorithm provides log approximation relative fractional optimum 
proof 
follow aap algorithm analysis closely 
vary little notation assume requests infinite duration profit request proportional demand 
th request specified pair terminals demand ae 
define profit connection nae define log log denote capacity edge assume log value run aap algorithm sake completeness state algorithm 
define fraction consumed paths routed 
define gamma 
request route path satisfying ae ue path available reject request 
argue relative load edge exceed 
moment happened edge say gamma ae gamma log gamma gamma log gamma gamma gamma ae nae connection edge 
suppose total requests 
denote set requests routed aap algorithm 
show log proof show induction number admitted requests proving algorithm admits th request gamma log consider edge path aap algorithm connection gamma log ue gamma exponent clearly gamma delta gamma delta delta delta log delta ae delta delta log delta ae delta log delta delta ae ae summing edges gives desired bound 
show expression upper bound profit fractional optimum minus profit line algorithm 
shows integer optimum proof essentially 
denote set indices rejected line algorithm positive fraction demand routed optimum 
suppose fractional optimum uses paths weights fl fl rejected line algorithm costs monotonic indices nae ae edge fl ae fl fl ae delta fl ae combining bounds equations obtain claimed approximation ratio 
lower bound implies factor unavoidable deterministic line algorithms 
routing long connections say terminal pair short fl log long 
say light ae heavy 
line algorithm initial random decision accept short connections long connections independent random decision accept light heavy connections costs factor approximation ratio 
section give log approximation long connections light heavy section show bounded greedy algorithm chapter gives log approximation short connections 
concreteness terms light connections 
algorithm essentially identical case heavy connections easily verified 
consider terminal pairs ends sets form denote set terminal pairs tm denotes realizable subset maximum size lemma expected demand associated terminal pairs belong tm constant fraction ae 
lose constant factor approximation ratio restricting attention tm define line routing problem simulated network fi log solution generated problem guide construction paths recall define input simulated network simply sequence terminal pairs sequence pairs algorithm running 
omit pairs ends lie clusters form demand ae algorithm problem simulated network follows route aap algorithm fi log accepts ii routing cause total routed demand equal resp 
exceed 
lemma algorithm log approximation relative fractional optimum fi log 
proof 
requested connection approach developed section view judged line algorithms aap algorithm algorithm accept total demand originating algorithm aw accept total demand originating theorem aap algorithm log approximation relative fractional optimum 
see algorithm log approximation denote total amount demand associated terminal pairs equal accept demand accept units demand maximum fractional weight connections optimum accept originating node log 
argument applies aw applying theorem log see combined routing algorithm log approximation relative fractional optimum 
line algorithm simply runs simulation accepted routes pair paths constructed lemma 
lemma says run bandwidth doing 
lemma algorithm route connections accepted simulation 
proof 
simulation accepts specifies sequence neighboring clusters vr 
algorithm routes simply moving cluster sequence paths form concretely chooses oe oe vr sets vr gamma chooses edge available capacity ae sets observe edge units demand cross fi log edges contradicting fact set paths fi log respected capacity constraint edge 
lemma union delta delta delta contains path boundary boundary vr total amount demand routed vr paths respecting capacity constraints easily 
line algorithm log approximation relative fractional optimum fi log log approximation relative fractional optimum fl log 
lemma weight maximum realizable subset tm lemma expectation constant factor weight maximum realizable subset algorithm log approximation case long connections 
routing short connections discuss case light connections algorithm heavy connections essentially easier 
require fact 
lemma gamma gamma natural numbers gamma gamma set terminal pairs ends maximum weight subset realizable maximum weight subset realizable proof 
ae denote realizable set maximum weight consider set paths routing jffi total demand paths leave denote terminal pairs corresponding paths 
show route demand imply lemma 
denote disjoint rings defined previous section 
denote intersection points path ffi 
arbitrarily choose set terminal pairs total demand route pairs joining breakpoints subpath way route demand algorithm short light connections follows 
set fl log run luby algorithm find subset maximal subject property define set vertices distance set vertices distance 
lemma short connection constant probability proof 
sufficient condition containing enter mis iteration vertices distance picks highest number distance happens constant probability 
denote set short connections ends lie run greedy algorithm theorem disjoint subgraphs simultaneously sets terminal pairs 
theorem lemma log approximation subgraph 
lemma expectation constant factor optimal routing short connections 
main result section 
theorem line log approximation ufp dimensional mesh 
line algorithm line case entire set terminal pairs input able obtain constant factor approximation 
line case partition terminal pairs long short connections heavy light 
changing terminology slightly previous section say terminal pair light ae obtain partition sets approximating maximum realizable subset set route demand obtain constant factor approximation problem 
section consider problem routing light connections 
algorithm heavy connections essentially easier discuss little detail 
deal long connections 
line case algorithm considers set tm terminal pairs ends clusters form results loss constant factor approximation ratio 
previously high capacity line algorithm awerbuch azar plotkin apply randomized rounding algorithm raghavan thompson simulated network 
see section details algorithm 
problem terminal pairs simulated network gives constant factor approximation 
get approximation problem constant factor optimum routing terminals clusters 
line algorithm route single unit demand 
build complicated network denote node representing network construct attaching edge node 
fl denote network edge nodes subgraph capacity fl edges unit capacity 
denote value fractional optimum solution ufp fi log 
run randomized rounding algorithm fi log sufficiently small scaling factor high probability parts selected paths lying subgraph fi log taken violate capacity constraint number pairs rounded constant factor fractional optimum convert selected paths fi log paths technique previous section produce selected pair global path begins ae ends ae 
real problem find paths clusters resp 
rounded reach endpoint associated global path resp 

paths returned randomized rounding value edges clusters unit capacity 
argue follows 
denote set terminals rounded 
trying get associated path begins crossbar sufficient route terminal vertex oe leaves escape problem 
set terminals rounded want route large fraction total demand oe lemma proof contains central step algorithm says done 
abuse notation set vertices ae denote total demand terminal pairs ends lemma sufficiently small constant value constant holds 
find sets ae pair belongs ii set linked oe ae edge disjoint paths iii probability ae cf constant probability taken randomized rounding produced sets proof 
construct set condition ii weakened requirement linked edge disjoint paths smaller set oe 
sufficient imply lemma follows 
suppose obtain sets identify vertex oe closest terminal pairs choose set terminal pairs maximal subject constraint total demand terminals closest vertex oe 
easy verify maximality ae ae gamma letting terminals constitute sets satisfy requirements lemma 
allows deal standard escape problem rectangular mesh terminal allowed escape vertex boundary 
attaching source edge node obtain single source unsplittable flow problem terminal set observe fact cut condition problem holds factor ff holds factor ff theta sub rectangle 
see note rectangular mesh smallest rectangle enclosing connected cut greater capacity contains terminals original cut cut condition holds factor ff holds factor ff 
recall maximum demand corollary unsplittable escape problem feasible cut condition holds factor 
suggests algorithm construct set call rectangle meet cut condition factor 
go deleting contained rectangle delete matching terminal cluster 
results set argument completely routed 
remains lower bound expected size say terminal survives initially rounded included set ii deleted matching terminal contained rectangle 
probability terminal survives 
ae denote demand terminal pair associated weight assigned fractional optimum 
consider probability contained fixed theta rectangle rounded 
order rectangle total demand gamma rounded raghavan thompson algorithm associated terminals un scaled fractional flow feasible total fractional weight contained scaling 
setting applying corollary probability rectangle rounding rounded contained pq rectangles dimensions theta probability contained rectangle rounding rounded clearly bounded infinite sum gamma deleted matching terminal contained rectangle probability deleted having rounded gammay small expression constant probability survives equal probability rounded times probability deleted rounded expected size small constant value markov inequality probability ae absolute constant lemma follows 
turn lemma statement holding constant probability high probability repeat randomized rounding log times take best routing obtained 
single run randomized rounding fails bad events happens high capacity edges simulated network selected paths set selected lemma contains little demand 
event inverse polynomially small probability probability second bounded constant total probability bad event bounded constant 
implies log tries succeed high probability 
gives constant factor approximation long light connections rounded concatenate paths lemma crossbar edges path fi log joined lemma symmetrically handle short connections section 
randomized algorithm construct ae disjoint handle short connections ends lie single case run algorithm recursively 
call connection medium long connection recursive call small 
medium connections treated long connections recursion handled described 
small connections take place clusters size log log simply solved optimality brute force 
take largest realizable set find long medium small connections obtaining constant factor approximation light connections 
word heavy connections ae long assign demand run algorithm 
lemma demands max flow min cut theorem directly unsplittable flow theorem 
give constant factor approximation demands equal 
fact overestimating demand factor constant factor approximation respect fractional optimum results loss factor approximation ratio 
short connections handled recursively 
theorem randomized line ufp algorithm dimensional mesh produces constant factor approximation high probability 
routing rounds constant factor ufp approximation just developed provide approximation algorithm routing set terminal pairs minimum number rounds communication dimensional mesh 
addressing question minimum size partition realizable sets 
denote minimum 
quantity arises analysis routing algorithms optical networks 
graph set terminal pairs demands equal pair choose path wavelength routing path 
paths wavelength edge disjoint goal minimize number wavelengths 
clearly minimum number wavelengths possible precisely 
context optical routing demands approximations raghavan upfal aumann rabani restricted types graphs 
raghavan upfal provide approximation trees approximation cycles 
show methods discussed section log permutation bounded degree expander 
aumann rabani obtain bound expanders different methods provide log approximation dimensional mesh 
notion partitioning realizable sets arises certain vlsi problems encounter chapter 
approach direct application greedy set cover technique independently chv atal johnson lov asz allows take approximation algorithm mdp obtain approximation routing rounds performance guarantee larger logarithmic factor 
reduction method applied aumann rabani derive log approximation mesh log approximation ff mesh 
case constant factor approximation mdp dimensional mesh allows obtain log approximation mesh demands capacities 
easy extend approximation handle set terminal pairs arbitrary demands edges unit capacity 
minimum demand pair terminals ae approximation ratio obtain log log ae gamma 
framework fairly general setting show apply problem approximating 
denote finite set collection feasible subsets closed respect inclusion satisfies subset ae denote maximum cardinality member suppose maximization algorithm works follows number set ae returns set cardinality 
goal cover feasible sets possible 
purpose define algorithm simply greedy set cover algorithm making maximization algorithm ffl define ffl oe terminate 
run obtaining set define size cover produced simply number non empty sets hm denote th harmonic number defined hm definition result simply main result case maximization algorithm produces set cardinality approximately maximum 
theorem size cover produced ah times size smallest cover sets proof 
suppose produces cover sets 
identify unique define cost ju gamma claim set ah jxj theorem follows directly 
verify claim consider set suppose contains subset fx cost maximum index fi fi fiu fi fi fi gamma set cardinality contained subset contradicts performance guarantee contradiction follows contains elements cost ah jxj easily specialize setting follows 
denote theta dimensional mesh edge having unit capacity denote set terminal pairs demand 
denote collection realizable subsets constant factor approximation mdp develop chapter 
defining algorithm corollary log approximation terminals demand 
set cover algorithm implemented modification line setting provided maximization algorithm line 
define infinite number copies line maximization algorithm label 
terminal pair arrives evaluated algorithms succession accepts 
set terminal pairs accepted algorithm constitutes th round 
line algorithm theorem theorem corollary line log approximation terminals demand 
turn case set terminal pairs arbitrary demands interval unit capacity dimensional mesh ae denote minimum demand associated pair terminals theorem log log ae gamma approximation proof 
denote ufp maximization algorithm provided theorem 
define partitioning algorithm exactly 
analyzing run technical complication theorem deals unweighted cardinalities algorithm approximately maximizes total demand routed 
number straightforward ways get difficulty handle creating artificial set cover problem demand discretized units ae terminal pair demand ae denote set bae ae gamma dummy elements iq set ae define 
set feasible sets consist subsets sets form realizable observe algorithm property set ae terminal pairs produces realizable set ae jw constant factor 
maximum demand routed single round maximum cardinality set ae gamma result follows theorem 
chapter generalizing mesh urged 
path smooth danger william shakespeare venus adonis 
remarked previous chapter approximation algorithms rely crucially places precise row column structure dimensional mesh 
true previous approximation algorithms 
goal chapter extend algorithms general class graphs defined 
number motivations generalizing algorithms way 
dealing broader class graphs results algorithms robust sensitive small variations structure underlying graph 
value context network routing underlying network may mesh topology having completely regular structure mesh 
designing algorithms setting helps isolate basic techniques involved suggests general approaches constructing disjoint paths planar graphs 
case see main respect fine structure mesh construction simulated network decomposition blocks crossbar structures blocks 
simulated network place routing algorithm dependent nature underlying graph 
suggests approach previous chapter applicable type graph construct analogous simulated network direction investigate 
main result chapter constant factor approximation ufp class densely embedded graphs define section 
obtain line log approximation 
note general analysis section applicable provides approximation algorithm problem routing rounds 
definitions properties definition expansion section precise type expansion exhibited dimensional mesh 
definition graph ff semi expander ae jx jv jffi ff jx goal generalize dimensional mesh note properties mesh 
planar graph bounded degree aside exceptional face eulerian bounded face size 
ii ff semi expander constant ff ratio side lengths mesh 
iii square sub meshes mesh satisfy ii 
arguments follow quite cumbersome technically difficult deal exceptional faces type 
sake presentation chapter class eulerian graphs faces bounded size 
class include theta torus mesh straightforward adapt algorithms analysis handle graphs exceptional face may arbitrary size contain odd degree vertices 
way obtain class graphs includes mesh 
class graphs defined satisfy analogues properties ii iii locally 
definition graph densely embedded parameters ff delta strongly embedded compact orientable surface sigma maximum degree delta face bounded edges 
ii log drawing contained sigma disc 
iii log graph ff semi expander 
remainder chapter assume simple eulerian graph densely embedded surface sigma parameters ff delta 
worth noting definition strictly local nature places restrictions global structure graph basic properties show definition implies additional mesh properties 
log fact bounded degree semi expander implies set size quadratic planarity show analogous upper bound 
summarize follows 
lemma constants ff fi depending ff delta holds 
log ffr jb fir proof 
fix log 
see lower bound note jb semi expansion gamma ff delta gamma gamma ff gamma edges leave gamma delta gamma incident vertex 
ff delta gamma verifies induction gamma gamma gamma see upper bound observe planar diameter 
jsj 
lipton tarjan planar separator theorem set vertices removal breaks components size union components size ff ff jx jffi delta gamma result follows 
introduce additional notation 
connected subset gamma denote unique connected component containing set vertices neighbor gamma called segment bordering denoted oe 
say set ae simple connected 
facts quite useful essentially relates size perimeter set log radius 
lemma positive integer cr log br cr fi delta gammab delta proof 
ae fu sets br br cr disjoint contained cr 
jb cr fic sets size fi delta gammab delta show extend small set simple set constant factor increase radius 
lemma constant holds 
ae log component gamma planar simple set ae ae gamma oe gamma oe gamma 
proof 
choose fir 
components gamma gamma set ff gamma ff gamma fi delta 
claim components gamma contained 
suppose gamma gamma distance ae gamma ae gamma consider edge cut size fi deltar formed ffi spheres say contained small component cut 
semi expansion requires fi deltar ff jb contradiction lemma jb ffs gamma contained 
gamma gamma denote components gamma contained say gamma gamma gamma contained 
define gamma particular planar log simple gnu component gamma satisfies conditions lemma 
show general property planar graphs small face size distance nodes large value edge cut contains segment boundary relatively large 
lemma planar graph distinguished faces phi phi bounded cycles respectively 
suppose faces phi phi bounded edges constant ae oe component jffi min gamma gamma proof 
oe ae graph lies single facial cycle traversing clockwise direction starting encounter faces boundaries contain vertices suppose fr distinct large faces phi phi choose pair phi phi phi denote corresponding maximal subpath internal vertices incident faces consecutive vertices incident edge ffi jp hypotheses lemma implies claimed bound 
single large face phi fr note phi may appear times traversal sub paths denote border component face phi appear traversal suppose consecutive vertices incident edge ffi jp result follows 
related classes graphs section show natural construction produces densely embedded graphs 
material independent rest chapter 
say graph geometrically formed embedded unit sphere way face geometrically size 
constant pair faces phi phi embedding phi factor point interior contains congruent copy phi show geometrically formed graph densely embedded prove way general definition applies arbitrary surfaces 
sigma compact orientable surface embedded sigma denote set points sigma distance measured sigma definition set ae sigma fl fl flat positive constants fl fl sigma disc 
ii points ae surface area fl fl 
iii sigma discs boundary length surface area fl say sigma fl fl locally flat orientable sigma set fl fl flat 
say graph locally formed drawn locally flat surface face geometrically small size 
definition graph drawn sigma locally formed parameters delta fl fl ae ae exists maximum degree delta ii maximum number edges face drawing iii sigma log fl fl locally flat iii face phi sigma ae ae phi ae ae 
note geometrically formed graph defined locally formed appropriate choice parameters 
want show locally formed graph densely embedded 
show routine lemma useful definition require semi expansion cuts produce components 
lemma ff semi expander condition definition holds sets connected 
proof 
proceed induction number connected components assume connected gamma gamma components 
sets gamma gamma satisfy definition induction hypothesis 
get jffi jffi gamma ff gamma ff gamma ff jx connected connected component size jv argument applies components removing edges single large component produces cut sides connected semi expansion condition holds case assumption 
proposition locally formed parameters delta fl fl ae ae positive constants ff densely embedded parameters ff delta 
proof 
locally formed parameters associated definition 
ae gamma log set contained log sigma disc 
ae wish show satisfies semi expansion requirement 
lemma may assume connected 
ffi lies single face 
jffi closed curve sigma length ae rq bounds sigma disc containing contained disc area fl ae face area fl ae fl ae fl gamma ae gamma faces times vertices 
series papers proving things disjoint paths problem fixed number terminal pairs solvable polynomial time robertson seymour notion surface embeddings 
turns definition densely embedded graphs expressed terms 
say drawing graph sigma representative nonnull homotopic closed curve sigma meets drawing times 
terminology replaced condition log contained sigma disc condition drawing omega gamma representative 
precisely proposition satisfies parts iii definition drawing log representative constant densely embedded parameters ff delta 
conversely densely embedded parameters ff delta constant drawing log representative 
proof 
converse statement easier 
densely embedded parameters ff delta closed curve sigma meeting fewer gamma log vertices meets vertices contained log contained sigma disc null homotopic 
suppose satisfies parts iii definition drawing log representative 
show log drawn 
choose log claim simple cycle null homotopic sigma 
suppose choose shortest non null homotopic cycle contained 
say simplicity contains number vertices denote sub paths ends equal suppose path ends equal length contain non null homotopic simple cycle length contradicting choice log jqj log log strongly embedded simple closed curve sigma meeting precisely vertices homotopic sigma meets fewer log times null homotopic sigma 
contradicts assumption non null homotopic 
contains null homotopic simple cycles 
theorems implies contained sigma disc 
smooth cycles sections follow construct simulated network arbitrary densely embedded eulerian graph roughly outline previous chapter 
working connected planar subsets property prove crucial construction outer cycles smooth 
mean distance vertices outer cycle set measured outer cycle significantly greater distance vertices measured interior set 
concrete denote arbitrary graph simple cycle dq denote shortest path distance length shorter paths definition say smooth 
definition subsets say close jw result form 
embedded compact surface sigma non null homotopic cycle want find cycle non null homotopic sufficiently smooth ii sufficiently close conditions tension satisfy simply take shortest non null homotopic cycle cycle smooth 
cycle close satisfy second take sufficiently smooth 
result shows find cycle satisfies parametrized versions conditions ii 
theorem holds 
sigma compact surface possibly boundary graph embedded sigma simple cycle non null homotopic sigma polynomial time find smooth simple cycle jq jqj ii close iii non null homotopic sigma proof 
denote shorter paths contained ties broken arbitrarily smooth efficiently find shortest path uv vertex disjoint example pair satisfying jp uv minimum 
simple cycles uv uv null homotopic sigma shorter update replacing cycle null homotopic 
say portion deleted adding uv marked remaining portion unmarked 
iterate process slicing parts short paths length cycle decreases iteration process terminate cycle smooth 
iteration maintains invariant current cycle non null homotopic sigma verify final cycle close clearly true iteration jp uv jqj vertex updated cycle reach vertex path length jqj 
denote cycle obtained iterations slicing 
long portions remain unmarked say phase phases defined 
phase consists alternating intervals ir ir ij ae unmarked interval ij lying ij marked replaced ij 
show induction number iterations jp ij fi fi ij fi fi fi true iteration 
done case analysis 
st iteration find new path cases consider 

lies ij ik possibly property clearly continues hold jp times number current cycle vertices cut turn number original vertices endpoints 
lies ij ik ij lengthened 
suppose amount original cycle cut addition ij equal amount ij cut denotes ij iteration jp ij fi fi ij fi fi fi jp jp jp ij jp gamma fi fi ij fi fi fi gamma fi fi ij fi fi fi 
lies ij lies ik new paths 
subcases 
jp ij goes jq ij affected property holds 
ii suppose amount original cycle cut addition ij ik equal amount ij cut amount ik cut new interval denoted jp ij fi fi ij fi fi fi jp ik jq ik jp jp jp ij jp jp ik gamma gamma fi fi ij fi fi fi jq ik gamma gamma fi fi ij fi fi fi jq ik iterations come phase close vertex ij reach path length fi fi ij fi fi fi jqj 
consider iteration phase comes 
analogous arguments obtain cycle jq jqj vertex reach path length jqj 
say vertices initially unmarked 
phase proceeds exactly previous begins cycle length reduced factor 
process terminates vertices able reach path length jqj delta jqj close clusters enclosures ready defining simulated network 
encounters number difficulties extending construction chapter densely embedded graphs general 
easily taken care example define anymore balls form seen behave way 
similarly may choose maximal set mutually distant balls grow enclosures 
major problems 
natural inside mesh routing enclosures similar inside 
join clusters simulated network 
build inside enclosures construction okamura seymour theorem describe section 
define high capacity simulated network want grow enclosures touch 
point boundaries smooth allow build inside additionally reason enclosures touch omega gamma edges common boundary 
possible build simulated network follows 
grow enclosures smooth boundaries large contain large keep mutually distant 
define notion voronoi partition allow determine clusters neighbors define simulated network putting omega parallel edges neighboring clusters edges common boundary voronoi regions 
show collection parallel edges represents graph network particular need show paths accepted simulated network routed theorem schrijver show exist omega paths neighboring enclosures paths pairs mutually disjoint 
attempt optimize constants 
set choose positive constants exact relationship constants easy determine analysis 
connection short log long 
handle long short connections separately concentrate preprocessing graph described handling long connections 
start wish choose maximal set mutually distant vertices grow clusters 
denote graph obtained joining run luby randomized maximal independent set algorithm log denote resulting mis 
vertex log enter iteration largest number chosen log chosen vertex log 
happens constant probability lemma 
log events independent lemma log constant probability log log procedure build clusters enclosures node log 
lemma choose radius log log fi log log paths log log log cluster enclosure crossbar building simulated network set 
ii extend simple set lemma choosing appropriately ensure grown process overlaps 
iii apply smoothing algorithm theorem facial cycle containing 
log plays role cylinder formed removing portions sigma log drawn plays role sigma constant resulting cycle smooth subgraph gamma close choose fi vertices resulting smooth cycle distance fi delta jq log encloses set log oe contained set log follows path ends leaves subgraph length log fi jq fi jq smooth graph just subgraph 
smooth cycle encloses set vertices containing update set grow enclosure oe step process constant place set place clusters radius log enclosures radius log separated mutual distance log algorithm chapter build crossbar structures enclosures replace natural mesh 
build frank extension theorem okamura seymour theorem 
precise definition ae say crossbar anchored set edge disjoint paths pair paths meets vertex 
oe recall mean facial cycle containing oe analogously facial cycle containing wish build crossbar anchored oe size constant fraction joe large constant depending choose set oe joe vertices oe spaced apart set spaced apart 
lemma crossbar anchored oe vertex oe endpoint distinct path crossbar 
proof 
consider planar graph 
graph large faces outer face bounded inner face left deletion bounded cycle find shortest path planar dual graph endpoints equal large faces delete edges path 
denote resulting graph note single large face bounded cycle contains oe observe jq jp fi log fi log log fi inequality merely sake having simpler expression discussion 
claim cycle smooth graph min fi gamma see suppose path endpoints cases consider 
belong belong follows smoothness cycles 
ii belongs jp gamma log fi bound follows 
iii lie short dual path shortest path planar dual jp gamma 
iv suppose lies assume denote subpath lying endpoint denote shorter subpath lying endpoints shortest path planar dual jp gamma jp smoothness jp jp combining inequalities obtain jp jp bound holds case 
write oe assume simplicity jx odd 
define vertex steps clockwise write fu xg 
jx pair unique antipodal point clockwise ordering note vertices paired vertices vice versa 
define disjoint paths problem set terminal pairs equal xg 
note terminals cycle want show realizable say cut non trivial separates pair terminals 
dealing disjoint paths problem planar graph terminals outer face 
node outer face degree 
theorem strict cut condition sufficient realizability non trivial cut capacity number terminal pairs separates 
lemma consider non trivial cuts form ffi connected 
set vertices suppose distance lemma jffi gamma facial cycle smooth number terminal pairs disconnected ffi gamma 
gamma ensures strict cut condition satisfied 
observe edge disjoint paths realization provide crossbar required lemma pair paths meet vertex crossbar just constructed denote path endpoint equal oe defining simulated network define simulated network nodes network clusters represent vertices define neighbor relation clusters notion voronoi partition clusters joined edge neighbors sense 
introduce voronoi partition general level 
graph ae 
fix lexicographic ordering elements fv set vertices close ties broken definition voronoi partition respect partition fu sg 
fact immediate 
lemma connected 
proof 
suppose claim shortest path contained suppose closest vertex lies fact follows contradiction 
build graph vertices joining voronoi cells share edge 
definition neighborhood graph denoted graph vertex set edge iff edge endpoints simulated graph neighborhood graph edge capacity log denote respectively fl graph edge capacity fl 
establish basic facts maximality lemma ae log 
proof 
suppose log log contradicts fact maximal independent set log definition number define number ae log 
define number non empty intersection log 
define max max lemmas show lemma ff gamma fip proof 
definition see log ae ju ff gamma log lemma jb log fip log follows ff gamma fip lemma proof 
vertex maximizing 
nonempty intersection log lemma log ae log lemma degree vertex delta proof 
consider vertex lemma neighbor respect property intersects log 
number neighbors explicit sense network theta log represents graph sufficiently serve analogue lemma 
chapter vertex cluster define say undefined lemma constant fl holds 
realizable subset property terminals belong realizable fl log 
proof 
set fl fi delta 
path optimal routing construct path crosses uw uw add edge consider demand constructed routing uses edge 
demand corresponds paths original routing edge ffi uw 
bound size set directly quite 
invoke argument 
ffi uw ae log vertex log log fi log jffi deltafi log upper bound total demand crossing ffi uw associated terminal pairs ends away closer clusters origin deltafi log total demand building simulated network goal part constant construct log disjoint paths pair enclosures dw edge allow convert routing simulated network log actual disjoint paths recall outer facial cycle denoted contains set vertices evenly spaced distance theorem exist vertex disjoint paths ends sets disjoint log paths pull crossings pulling crossing proof 
proof theorem due schrijver 
recall curve normal meets drawing vertices define length number times meets drawing 
neighbors draw simple normal curve vv sigma endpoints ensure curves disjoint connected edge endpoints choose small constant delta say ff ff delta gamma delta gamma gamma gamma reason clear 
construct log copies vv running parallel 
pushing apart appropriately assume curve runs different vertex uu denote normal curve runs define graph obtained deleting cut sigma facial cycles obtain sigma surface boundary 
note properly embedded sigma theorem consequence claim 
claim exist vertex disjoint paths uu uu homotopic uu proof 
curves homotopic write theorem obtain somewhat simpler sufficient condition existence desired paths essential curve sigma cr uu note verifying inequality may assume normal self crossings 
essential curve define index cr gamma uu consider curves index minimum homotopy class show fact positive index 
set delta gamma ff ff log claim normal closed curve length enclose set form disconnected edge cut size deltar ff ff log possible jd ff log follows normal closed curve length null homotopic sigma consider cases length case 
cr endpoints facial cycle short touch cycles closed curve argument 
easy produce curves fa uu cr cr uu smooth 
case 
cr just exhibit simple curves uu uu lying sigma cr cr uu set fa uu satisfies done show modify set curves 
see 
set fa uu satisfy inequality interval length violated 
consider observe curve uu initially constructed assumed length log belong enclosures neighboring voronoi cells 
delta log curves meet delta pairs clusters close suppose total number crossings curves exceeds log delta log cr curve uu meets log times interval uu pair consecutive crossings length suppose pair consecutive crossings occurs vertices denote normal curve formed interval uu portion length null homotopic argument 
minimum index curves homotopy class portion uu meets times portion modify uu runs interval 
increase length uu decreases number crossings uu process terminates set curves fa uu inequality holds 
denote path ends uu ends paths respectively 
denote uu concatenation paths uu line algorithm simulated network place routing algorithms essentially mesh just describe modified 
analogue lemma 
lemma log ae set terminal pairs maximum weight subset realizable constant factor maximum weight subset realizable proof 
choose radius fir construct simple set extension lemma smooth outer facial cycle obtain set oe contained 
ae denote simple set extension lemma 
constant pick set vertices outer facial cycle spaced apart frank theorem lemma construct set paths connecting antipodal pairs paths stay note take care ensure parity condition met outer facial cycle contain odd degree vertices 
remove sub paths cycle consecutive pairs necessarily number odd degree vertices large strict cut condition remain satisfied 
consider set paths realization maximum weight subset denote subset pairs paths meet 
break intersections 
connect subset paths respective closest vertices outer facial cycle subset chosen maximal subject constraint unit demand connected single vertex easy argue maximal set contains constant fraction demand crossbar previous paragraph connect pairs way routing amount demand constant fraction maximum achievable paths leave algorithm short connections follows 
run randomized version luby algorithm time log denote resulting mis 
constant probability ends short connection log lemmas 
denote log route connections ends lie route connections run greedy algorithm theorem log lemma log optimal long connections run simulation case mesh time graph log 
analogue lemma holds exactly lemma making paths uu paths incident enclosure cross 
optimum long connections bounded fractional optimum fl log constant factor fractional optimum log log factor total demand routed line algorithm theorem line algorithm log approximation densely embedded eulerian graph line algorithm line algorithm essentially working larger simulated network log 
non trivial change required proof lemma 
longer able talk rectangles define round cut set form contained round cuts radius lemma establishes round cuts rectangles analogue lemma densely embedded graphs 
lemma denote additional vertex joined edge vertex oe constant ae containing round cut satisfying jffi jffi proof 
set ff gamma ff gamma delta fi gamma 
ae set containing write jffi construct round cut containing jffi contract single vertex obtain planar graph maximum face size opposed due large spacing vertices oe 
lemma maximum distance points claim vertex distance ff gamma ff gamma 
reason analogous proof lemma contain ball radius contain ff gamma vertices contradiction jffi ae ff gamma ff gamma lemma jffi fi delta oe denote round cut edge ffi edge ffi ffi 
quantity just shown fi delta bound quantity note vertices apart facial cycle containing smooth means contains gamma vertices jffi delta gamma claim follows jffi delta fi gamma theorem randomized line ufp algorithm densely embedded eulerian graphs produces constant factor approximation high probability 
chapter minimizing congestion street narrow follows caesar common crowd man death william shakespeare julius 
previous chapters concern maximizing total amount demand routed graph edge capacities terminal pairs specified demands 
consider different objective function serves measure quality routing wish route demand exceed capacity constraints little possible 
concrete recall definitions chapter 
say routing choice path congestion routing fp defined maximum edges total demand crossing fp max ae denote minimum congestion routing chapter indicated ways issue congestion minimization arises 
speak routing routing sets vertices graph mean set paths path distinct vertex vertex simulated network construction previous chapter designed ufp mind allows give constant factor approximation problem minimizing congestion densely embedded graph 
result require graph eulerian 
describe algorithm section discussing previous section 
preliminaries algorithmically problem minimizing congestion better understood ufp seeks maximize amount demand routed 
primary reasons natural fractional version problem gives information unsplittable optimum case ufp 
recalling terminology section define fractional routing follows 
pair choose set paths ii associated non negative weights ae congestion routing defined fp max denote minimum congestion fractional routing randomized rounding method raghavan thompson clearly applicable setting computes fractional routing chooses path probability 
longer worried respecting capacity constraints need impose high capacity requirements algorithm graph 
performance guarantee algorithm analyzed tail bounds type theorem show high probability resulting unsplittable routing congestion log jej 
purposes state somewhat weaker version performance guarantee 
theorem raghavan thompson constants independent holds 
edge capacities demands algorithm produces routing congestion log jej high probability large gaps fractional integral optima contrast theorem applied ufp 
fractional integral optima congestion log jej factor general constant factor omega jej 
interesting note relevant material line approximations developed aspnes azar fiat plotkin waarts 
theorem aspnes line log approximation node graph 
principal question left open raghavan thompson algorithm 
algorithm provides constant factor approximation fractional optimum sufficiently large log jej approximation general 
example set terminal pairs fact realizable routable congestion algorithm theorem produce routing congestion omega jej high probability 
natural ask obtain constant factor approximation ranges fractional optimum appears techniques pure randomized rounding necessary resolve question 
chapter address question case densely embedded graphs provide constant factor approximation graphs independent value 
combined theorem settles open question karp leighton rivest thompson vazirani vazirani existence constant factor approximation congestion dimensional mesh 
algorithm randomized rounding simulated network defined previous chapters quite similar ufp approximation algorithms just developed 
difficult large part longer faced problem choosing subset terminals route 
approximation algorithm parts simulated network construction recalling aspects consolidating notation 
node densely embedded graph parameters ff delta doubling edge lose factor approximation ratio may suppose eulerian 
chapter set vertices maximal subject condition vertices closer log 
voronoi partition respect neighborhood graph recall denotes voronoi region associated partition cluster enclosure structures inside voronoi region longer necessary inter cluster paths pass 
recall smooth cycle ae log log large constant choose set vertices spaced approximately apart lemma theorem exist edge disjoint paths pair edge log paths pass vertex ii path passes vertex iii paths pass nodes set meet node 
deleting vertices necessary may assume vertex lies paths 
lie common path uu denote path 
vv uu vw analogy construction clusters enclosures section construct simple set constants fl smooth outer facial cycle contains ii jr fl log iii ae log log define function setting describe routing algorithm 
recall connection long log algorithm long connections short connections handled recursively algorithm section briefly elaborate 
time assume connections long 
algorithm follows 
apply randomized rounding algorithm graph terminal pairs result sequence delta delta delta neighboring vertices 
ii edge vw denote set terminal pairs routed edge step 
assign terminal pairs paths vw maximum demand path minimized 
fact pairs paths incident set cross obtain pair path 
iii run algorithm corollary graph produce routing gamma congestion constant factor optimal 
suppose gamma routed algorithm path qw uu denote path passes qw uu contains path meets path returned step ii 
iv concatenate path step ii paths step iii 
path routing remainder section devoted showing algorithm provides constant factor approximation 
order useful lower bounds optimum 
denote minimum congestion routing terminals gamma cycle subgraph 
define max lemma proof 
consider routing terminals gamma ends long connections path associated leave subgraph 
consequently prefix paths constitutes routing gamma cycle bounds 
simple consequence 
lemma total demand terminals gamma fl delta log fl delta log proof 
jr fl log fl delta log edges incident nodes edge carries units demand unit demand gamma traverse edges demand associated long connections 
recall step approximation algorithm considered routing problem underlying graph set terminal pairs denote value optimum congestion problem 
lemma omega gamma log proof 
minimum congestion routing construct routing congestion delta log construction routing straightforward sequence voronoi regions path passes define path bound demand sent edge proof lemma ffi uw ae log vertex log log fi log jffi deltafi log edge ffi carries units demand total demand sent associated terminal pairs having outside delta deltafi log voronoi regions lie outside lemma origin delta fl delta log units demand 
bound follows 
provide upper bound congestion routing produced algorithm terms quantities fact useful 
lemma constant holds 
exists routing paths routing traverse edge 
proof 
follow calculations fl ff gamma ff gamma sufficiently large constant 
attach source vertex edge unit capacity attach sink vertex edge capacity jr give edge capacity show feasible flow value jr imply lemma 
verify cut condition set containing jr note oe ffi contain edge capacity jr consider cases 
ae intervals contained jr gamma jr edges unit capacity incident ffi 
fsg connected components containing smooth lemma implies component containing gamma jr edges boundary contributes capacity gamma jr jr 
follows cut condition holds case 
ii ae vertex lie distance log vertex nx contains 
semi expansion log follows jffi ff ff fl log jr vertex lies distance vertex 
know consists log vertices spaced apart smooth cycle may choose vertices distance measured log gamma smoothness dg vertices separated distance lemma follows jffi gamma gamma fl log jr analyzing approximation algorithm observe steps ii iii produce paths step simply computes global routes step iv concatenates paths constructed 
provide upper bounds congestion paths produced steps ii iii 
lemma total congestion paths produced step ii log ae proof 
theorem total demand terminals assigned edge ae log je ae log number paths vw log assign terminal pairs paths vw paths carries log gamma ae ae units demand 
lemma total congestion paths produced step iii 
proof 
lemma routing gamma converted routing gamma constant factor increase congestion 
follows minimum congestion gamma routing 
produce paths congestion constant factor minimum edge appears constant number sets form congestion set paths produce step iii 
previous lemmas theorem algorithm produces routing long connections congestion constant factor optimal 
discuss handle short connections 
completely analogous done section somewhat brief 
choose set vertices maximal subject constraint distance log 
denote set terminal pairs ends log run algorithm recursively log terminal pairs construction prove lemma easy show minimum congestion routing log constant factor minimum congestion routing edge appears constant number sets log definition short connection belongs set constant factor optimal routing connections classified long recursive call 
connections classified short previous chapter belong balls radius log log compute optimum routing brute force additional recursive call 
overlay paths produced levels recursion costs factor approximation ratio 
theorem densely embedded graph set terminal pairs 
polynomial time algorithm high probability produces routing congestion constant factor optimal 
chapter node disjoint paths man sky sky far crossed leagues apart world ends re meet 
lad 
previous chapters underlying constraint related notion edge disjointness edge carry limited amount demand 
investigate problems arise requires paths node disjoint paths pass node 
finding node disjoint paths designated pairs vertices planar graph fundamental number routing embedding problems 
particular models vlsi layout effective layout strategies rely heuristics finding node disjoint paths current routing software systems rely extensively approach see 
node disjointness constraints arise context virtual circuit routing networks requires paths node disjoint sake fault tolerance bottlenecks involving switches links 
time basic node disjoint paths problem np hard dimensional mesh essentially known way reasonable approximation algorithms problem 
node disjoint edge disjoint paths problems quite similar level general graphs underlying structures different case planar graphs case mesh 
true technical sense approximation algorithm chapter analyzed part respect fractional optimum 
far true node disjoint case simple examples show optimum fractional integral solutions different value 
particular encounters obstacles existence paths saturated cuts best described topological nature 
discuss section 
appears new range techniques explored dealing node disjoint paths problems planar graphs motivation chapter 
particular concentrate objective functions ff defined case node disjoint paths 
interesting note approximating node disjoint analogue approach developed edge disjoint case turns sufficient algorithm chapter small modifications provides constant factor approximation problem densely embedded graphs 
node disjoint paths mesh discuss basic problem arises setting 
recall set terminal pairs said permutation vertex graph appears exactly pair 
denotes theta dimensional mesh graph permutation pair needs cross center column standard bisection bound says ff lack understanding problems remained open 
denote mesh 
permutation exist set omega gamma gamma pairs simultaneously routed node disjoint paths 
permutation routed rounds 
way contrast questions straightforward resolve affirmative requires edge disjoint paths 
questions turn closely related open problems aggarwal lichtenstein linial wigderson setting multi layer vlsi layout 
multi layer vlsi layouts typically pin node terminology goes layers location routing pins layer planar 
routing wire needs change layer contact cut layers usually affects yield output chip affecting general quality circuit 
consequently practically useful route connections single layer possible order reduce details see 
constraints result directly problems involving ff layers playing role rounds 
typically reduces number layers introducing spacing terminals 
model parameter consider dn theta dn mesh theta grid terminals uniform spacing mean terminals placed set nodes row column numbers multiples gamma paths routed adjacent terminals 
goal model find tightest trade possible spacing number layers required worst case 
cutler showed spacing suffices route pairs single layer showed value tight constant factors 
terms general trade minimum number layers required techniques sufficient show spacing layers sufficient 
guided reasonable question 
spacing layers sufficient route permutation mesh 
contains result case theta question case 
main results chapter provide affirmative answers questions 
specifically prove theorem permutation mesh contains set omega gamma log terminal pairs simultaneously routed node disjoint paths 
permutation mesh routed log rounds 
theorem spacing permutation mesh contains set omega gamma log pairs routed layer entire permutation routed nd gamma log layers 
strengthens bounds number layers required routing permutation 
context vlsi number layers typically fixed small number dual maximization versions theorems may fact greater interest 
algorithms provably extract permutation mesh routable set terminal pairs size polylogarithmic factors bisection bound 
approach develop fundamentally different cutler essentially previous method applicable setting 
mentioned questions easy case edge disjoint paths fact construct set paths meeting bisection bound bend path 
hand paths cutler construction constructions theorems bends 
natural ask rounds required routing uses constant number bends 
getting rounds immediate appears previous construction literature achieves 
show theorem permutation mesh routed rounds path routing bends 
context results worth mentioning feel probably natural open question 
algorithm theorem gives routing set number rounds close best possible worst case approximation algorithm result relating number rounds require set optimum value 
interesting obtain algorithm appear require new techniques analyzing cases fractional solution gives essentially information 
basic examples remainder chapter denote theta dimensional mesh 
indicate ways node disjoint paths problem mesh differs fundamentally edge disjoint counterpart 
letting denote node row column mesh consider set consisting pairs form set terminal pairs satisfies usual cut condition stating way delete nodes separate pairs terminals fact set routable round edge disjoint paths 
pair paths routing cross requires rounds paths node disjoint 
example fundamentally rely terminals positioned near boundary mesh 
consider infinite grid graph parameter denote set pairs form im jm hard show crossing number argument lemma theta routable single round edge disjoint paths 
final example show theorem implies bends sufficient route permutation rounds exist partial permutations require omega gamma rounds bend routing 
proposition exists partial permutation bend routing fewer rounds 
proof 
assume simplicity 
consists pairs form fv mg fv mg bend routing paths pass pair paths cross node 
worth noting algorithm schrijver see section applied provide polynomial time algorithm related simpler problem terminals lie boundaries designated set faces require node disjoint paths homotopies respect set faces specified 
dimensional mesh efficient algorithms homotopic routing problem cole siegel leiserson mesh schrijver viewed generalization arbitrary graphs arbitrary surfaces 
approach homotopy provides polynomial time algorithm node disjoint paths problem planar graphs terminals lie boundaries fixed number faces case polynomial number sets possible homotopies try 
course problem considering exponential number sets possible homotopies problem np complete 
sketch algorithm show possible constant factor loss bound reduce problem arbitrary set terminals theta denoted spaced apart terminal pair terminal pairs show route log simultaneously applying process greedily gives bound theorem 
approach cutler requires order route terminals single round inter terminal spacing sure routing set size resulting bound 
start considering simple notion suppose tried choosing terminal row row joining terminals possible region number difficulties particular may way choose terminals way nearly joined node disjoint fashion 
call approach row selection tries pick unique terminal row selected terminals routed rows joined selected counterparts way paths cross 
main technique generalization row selection may way choose unique terminals rows show exists rotation rotation resulting set rows allows selection 
meshes discrete objects notion rotation defined carefully monotone random walks varying biases basic way rotating having chosen candidate pair rotations decompose pseudo rows 
task pseudo row selection choosing unique terminal pseudo row analyzing bipartite graph set pseudo rows pseudo row joined pseudo row terminal pair 
show choose rotations bipartite graph contains large monotone matching edges cross 
pairs corresponding edges matching routed single round 
inter terminal spacing similar approach applicable 
main difference afford choose edge sets bipartite graph necessarily monotone matchings handle limited amount non monotonicity technique cutler pseudo row 
preliminary facts section develop basic lemmas useful analyzing algorithms 
section consider basic problem permutation mesh prove theorem 
section give algorithm routing inter terminal spacing model 
section discuss algorithms routing constant number bends path 
lemma positive integers gamma proof 
db easily proved induction lemma non negative integers gamma dx gamma gamma lemma consider random experiment choose bias ff coin uniformly interval flip coin times 
probability number heads equal proof 
probability equal ff gamma ff gammak dff lemma equal purely combinatorial proof leave exercise reader 
monotone matchings notion call monotone matching 
define develop basic facts monotone matchings general level 
section denote bipartite graph bipartition fu fv denote number edges usual matching mean set edges endpoints common denote size largest matching definition matching said monotone consists edges jk sequence increasing sequence increasing decreasing 
say matching increasing case decreasing 
give lower bounds size largest monotone matching lemma monotone matching size 
proof 
matching maximum size order edges endpoints increasing indices 
consider resulting sequence indices lemma due erdos sequence increasing sequence decreasing sequence length jm 
edges corresponding sequence constitute monotone matching 
decomposing pseudo rows lemma increasing monotone matching size 
proof 
denote set edges mod denote subset subset monotone matching disjoint size 
example due don coppersmith shows exist regular bipartite graphs nodes monotone matching size greater max 
useful establish covering versions lemmas 
state 
lemma edges covered delta monotone matchings 
lemma edges covered increasing monotone matchings 
bound vertices denote shortest path distance 
indicated consider special case theta terminal pair paths stay show bound special case prove theorem 
represent union pseudo rows follows 
denote lower left vertex choose ff uniformly random perform random walk time steps starting probability gamma ff move step right 
ii probability ff move step step right 
ff denote path traversed walk note contained gammak define ff copy path translated gamma steps upward intersected sets ff called pseudo rows 
ff fi ff immediate construction worth noting 
lemma belongs ff ff jj gamma ij 
jr ff belongs sets particular ff 
say collinear pseudo row contains case write vertex denote row number denote column number 
vertices denote distance max ja gamma jb gamma lemma probability collinear proof 
suppose loss generality 
pr pr ff dt pr dt pr delta pr dt pr delta pr dt pr delta dt pr dt case gamma gamma integral 
simply probability uniformly distributed bias number heads come coin bias flipped times 
lemma lemma follows 
lemma absolute constant terminal pairs ends realizable subset size log 
proof 
choose random ff decompose pseudo rows 
random fi 
lemma choose half pseudo rows half pseudo rows pseudo rows disjoint terminal pairs ends chosen pseudo rows 
denote set pairs 
define collineation pair collinear collinear wish bound expected number pairs simply sum pr delta pr viewed dot product vectors dimension gamma delta coordinates pr coordinates pr 
observe dot product maximized pr pr pairs dot product certainly maximized lengths vectors fixed having parallel case lengths differ increase dot product changing coordinates shorter equal longer 
expected number bounded largest possible sum pr subset size write sum pr inequality lemma 
inner sum maximized having vertices fill ball centered case value bounded ln ln absolute constant summing see expected number cq ln exist ff fi decompositions pseudo rows subset terminal pairs number cq ln set build bipartite multigraph vertex left chosen pseudo row vertex right chosen pseudo row put ij parallel edges ij terminals pseudo row build simple graph contains edge iff ij 
claim number edges ln 
see note number precisely ij ij cq ln jt ij claim follows lemma 
number vertices half bipartition lemma monotone matching size ck ln ck ln ck log route terminal edge monotone matching implies lemma 
note need omega gamma order ensure correctly align matched corresponding lemma terminal pairs ends routed log rounds 
proof 
produce partition realizable sets greedily lemma 
bound follows number remaining terminals goes gamma log fraction realizable set produce 
proof theorem 
integer denote set terminal pairs prove routed log rounds bound number rounds follows absolute constant dlog ne dlog ne log log prove log show partitioned constant number sets sets partitioned pairs separated squares invoke algorithm lemma pairs single set simultaneously 
choose define ij theta upper left corner lies row column pair squares ij defines subset consisting terminal pairs ij call pair active contains terminal pair definition active pair ij satisfies gamma ij jm gamma jj lemma route terminal pairs set defined active pair log rounds 
say active pairs ij interfere vertex distance ij build graph set active pairs joining edge interfere 
graph constant degree colored constant number colors 
set rounds routing active pairs single color class log 
proof statement theorem permutation contains routable set size omega gamma log strictly analogous 
argue interference graph lemma lemma contains routable set size omega gamma jt log bound follows dlog neg jt omega gamma 
terminals spacing proof theorem essentially theorem additional step added 
specialize case kd theta kd squares contain terminal pairs 
construct pseudo rows partition disjoint theta contract previous construction 
lemma absolute constant terminals ends realizable subset size log 
proof 
follow proof lemma construction bipartite graph vertices half bipartition ln edges 
define slice set form set consecutive vertices left side set consecutive vertices right side 
crucial point edges ends slice technique route terminal pair edges single round 
construct graph identifying blocks consecutive vertices left right 
essentially think edges corresponding particular slices give edge weight equal number edges ends super nodes weights integers weighted analogue lemma monotone matching weight weight jv je jv log ck ln ck log route number terminals equal weight monotone matching argued implies lemma 
proof theorem 
reducing case kd theta kd squares greedy approach lemma 
time reduce number remaining routing constant number bends terminals factor gamma log route terminal pairs kd gamma log rounds 
constant bend routing previous sections consider case terminal pairs ends theta squares 
additionally assume distance omega gamma boundary mesh 
suppose lowest column number node equal lowest column number node main difficulty encounter wish constant number bends approach pseudo rows appears inherently inapplicable involves partitioning paths bends 
case build graph vertex row vertex row give edge weight ij equal number terminal pairs row 
give sense algorithm mention easy algorithm routing rounds 
follows 
replace edge ij parallel edges 
lemma edges covered monotone matchings 
may assume matching cover contains edges 
claim terminal pairs corresponding single matchings routed single round 
matching increasing pairs routed having terminal leave row east wall enter matching row west wall matching decreasing pairs routed having terminal leave row west wall enter matching row west wall 
see version case 
omega gamma distance boundary mesh room paths corresponding single matching routed region outside get bound need slight strengthening technique 
divide edges log classes assigning edge smallest power greater weight 
hw denote subgraph consisting edges assigned weight tw denote set terminals corresponding edges hw lemma tw routed kw rounds bends 
proof 
lemma partition edges hw increasing monotone matchings 
edge hw corresponds terminals terminals routed kw rounds 
easy construct paths terminals bends 
lemma tw routed max rounds bends 
proof 
maximum degree vertex hw partition edges hw matchings 
say matching spaced edges difference distance easy coloring argument partition matching hw spaced matchings partition edges hw spaced matchings 
spaced matchings vertices lemma partition monotone matchings 
total monotone matchings covering edges hw property endpoints edges mutually distance different set rounds routing monotone matching 
rounds needed single monotone matching 
recall edge represents terminals 
resp 
denote set vertices th row resp 

edges anchored rows mutually apart assign edge band rows width omega gamma row similar band row pairs corresponding edge matching vertex set pairs partitioned lemma monotone matchings monotone matchings routed single round bands surrounding rows simultaneously set rounds edges single spaced monotone matching provided sufficient room squares boundary mesh routing paths 
sufficient room number rounds 
break rounds paths sub rounds route terminals time resulting bound rounds 
lemma set terminals ends routed rounds bends 
proof 
denote total number rounds required routing bends 
gamma terms sum easily seen bound follows 
proof theorem 
notion interference graph pairs proof theorem 
change theta squares row column boundary 
guarantee rows columns just built graph set columns squares 
handle define subgraph induced nodes distance boundary distance corner mesh 
jg different round terminal pair run algorithm interference graph chapter true experience evolving world design effort fire flood violent atmospheric disturbance providing seventeen cubic feet air minute person free toxic dust feel metals broadly speaking narrowly speaking continuously improving world extra networks networks individual man presents inherent island physical discontinuity sad say sad say physical discontinuity total velocities known practices proved inadequate solve 
quite extraordinary said emma mean 
said dead father meant speech 
donald dead father 
focus development approximation algorithms disjoint paths problems lines number fundamental directions research 
clearly development improved approximation guarantees interest framework approximation provides concrete way elucidate structural properties disjoint paths graphs particular relation fractional multicommodity flow 
number optimization problems involving disjoint paths graphs touched essentially non trivial known combinatorial structure 
development efficient approximation algorithms problems undoubtedly value search structure 
mind chapter outline number directions 
particular give chance mention number basic np hard problems appear relevant algorithmic techniques currently available 
section address question strengthening approximation ratios 
section open problems line model discuss limitations model currently stands 
section describe number possible extensions line complicated optimization problems 
open questions discussing hold general unsplittable flow problem maximum disjoint paths problem 
sake concreteness phrase things part terms mdp extension questions ufp applicable straightforward 
improved approximation ratios probably natural question raised best approximation ratio obtained maximum disjoint paths problem arbitrary graphs 
algorithm analyzed applicable arbitrary graphs bounded greedy algorithm approximation ratio max je diam 
constant factor approximation chapters applies class densely embedded graphs currently evidence indicate constant factor approximation algorithms exist broader classes graphs 
particular situations possible 
possible polynomial time approximation algorithm maximum disjoint paths problem arbitrary node graph np 
strong lower bounds known basic optimization problems finding maximum independent set arbitrary graph see 
currently known maximum disjoint paths problem max known result arora constant polynomial time approximation mdp np 
worth noting light previous discussed chapter algorithms chapters best approximation ratio obtainable maximum disjoint paths problem conceivably better class eulerian graphs class graphs 
complexity theoretic evidence support intuition 
possible constant factor approximation maximum disjoint paths problem arbitrary graph 
eulerian graphs example refute stronger possibility graph terminal pairs maximum fractional flow exceeds maximum size realizable subset constant factor 
non eulerian graphs theorem uses brick wall graph implies large gap quantities 
relation point number interesting questions arise considering graph set terminal pairs fractionally realizable 
essentially problem determine say realizability disjoint paths 
questions related discussed survey contains 
note example brick wall graph chapter shows general possible set fractionally realizable maximum realizable subset consist single pair terminals 
seymour observed things better behaved consider relation fractional flow half integral flow 
term mean chapter fractional flow terminal pair routed flow paths assigned weight 
seymour conjecture fractionally realizable set terminals realized half integral flow disproved 
example know evidence refute possibility fractionally realizable set terminals partitioned constant number sets realizable half integral flow 
turn case ask analogous question integral flow defined obvious analogy half integral flows 
example exist absolute constants fractionally realizable set terminals partitioned sets realizable integral flow 
result imply constant factor approximation minimum congestion problem arbitrary uniform capacity graph 
see simply argue follows 
take fractional routing minimum congestion 
partition sets integral routing congestion 
terminal pair choose paths assigned routing path unsplittable routing 
resulting unsplittable routing congestion times fractional optimum 
leaving subject improved approximation ratios worth highlighting concrete problems appeared earlier chapters 
routing rounds 
set terminal pairs dimensional mesh constant factor approximation minimum partition rounds 
result chapter provides log approximation improved approximation ratio interesting particular presumably technique greedy set cover algorithm 
tight bound single source unsplittable flow 
discussed chapter know fractionally feasible single source flow problem unsplittable routing congestion 
show trivial example gives asymptotically worst possible gap consist vertices parallel edges unit capacity consist copies vertex terminal having demand gamma generally worst possible gap ae ae usual denotes maximum demand terminal 
line model line model terminal pairs arrive time processed immediately designed capture issues arising dynamic problems network routing establish routes knowledge 
value investigate ways model best represent problems 
currently example objective function simply total demand routed 
applications problems arise connections varying priority want route low priority connection block high priority connection high priority connection smaller amount demand 
clear best incorporate line model design line algorithms affected constraint 
general level question fairness routing connections 
observe current randomized line algorithms including algorithms discussed performance guarantees hold expectation 
expected amount demand route close optimal 
result possible algorithms choose arbitrarily reject large fraction terminal pairs heavily penalized objective function 
argue desirable modify line model algorithms viable possible ways 
way try defining explicit notion fairness connection requests line algorithms observe 
alternately possible obtain robust randomized line algorithms simply required approximation ratios hold high probability 
line approximation required property probability gamma optimal 
term hide dependency input size 
note qualitative distinction expected high probability performance guarantees typically arisen randomized line algorithms 
example line algorithm chapters basic version performance guarantee holds expectation running theta times independently hold probability gamma gammak point line algorithms definition run times independently 
additional question worst case nature line model strong representative types traffic patterns arise practice 
possibility worth investigating requirement input chosen subject underlying probability distribution arbitrary adversary operates knowledge algorithm behavior 
suggested context line algorithms general number researchers see raghavan investigated framework line routing kamath plotkin 
obtains strong approximation results assumption requests connections pair vertices arrive subject unknown poisson process request lasts period time determined exponentially distributed random variable 
believes worst case line model full generality pessimistic want design algorithms rely crucially probabilistic assumptions input sense consider notion hybrid line models 
example interesting explore models traffic pattern pairs vertices specified poisson process small number adversary disregard probabilistic assumption pairs vertices generate connection requests arbitrarily 
related notion resilient algorithms continue operate correctly presence failures 
case failure correspond violation probabilistic assumptions distribution input 
captures notion network traffic pattern modeled probabilistically susceptible limited number large unpredictable variations 
line single source problem 
worth mentioning interesting open question arises pure line model concentrated 
simply line single source maximum disjoint paths problem define detail follows 
arbitrary undirected graph vertex set vertices wish design line algorithm initially receives terminals time construct disjoint paths possible 
usual route reject terminal arrives 
know reasonable line algorithm problem guaranteed entire set linked edge disjoint paths 
particular interest way contrast standard augmenting paths algorithms constructing single source disjoint paths current setting approaches re routing explicitly ruled 
extensions discuss directions covered previous chapters 
disjoint paths bounded length 
constraints arise routing problems put upper bounds maximum length path solution 
effect making disjoint paths problems tractable np hard 
probably basic example 
undirected graph vertices natural numbers 
problem decide exist mutually edge disjoint paths uses edges 
np hard variable variable 
related known minimum cost flow problem solvable polynomial time see purposes view minimum cost flow addressing problem find edge disjoint paths total length minimum 
fundamental open problem concerns max min objective function 
graph vertices number find set edge disjoint paths maximum length minimum 
compute minimum cost flow paths easy see provides approximation problem 
ask approximation problem 
lov asz neumann lara plummer galil yu related questions 
basic questions related min sum objective function 
noted chapter robertson seymour provides polynomial time algorithm deciding set terminal pairs realizable fixed jt dean galil yu ask decidable polynomial time fixed jt realized paths total length value 
re routing 
network routing problems connections established re routed incurring great cost fact provides justification line model routing 
consequently interesting look optimization problems form re routing cost objective function 
state problem chosen hopelessly difficult 
graph vertex subset vertices linked edge disjoint paths 
partition sets choose set edge disjoint paths vertices vertices terminals routed vertices terminals routed 
problem find set edge disjoint paths paths possible intermediate routing preserved 
known problem np complete turn case natural approximation problem dealt 
node disjointness constraints 
recall main issue addressed chapter design approximation algorithms node disjoint paths problems 
algorithm chapter provides absolute performance guarantee holds permutations dimensional mesh proper approximation algorithm provide solution close optimal set terminal pairs mesh 
natural open question find approximation algorithm node disjoint paths problem dimensional mesh polylogarithmic factor optimal set terminal pairs 
designing approximation algorithms problems node disjointness constraints particularly interesting requires development techniques rely solely fractional solution seen fractional integral optima far apart problems 
interesting issue approximation algorithms general approximation ratios linked overwhelming majority time corresponding bound fractional version problem approximated 
exploring methods applicable link fractional solution broken promises interesting direction 
bibliography aggarwal bar noy coppersmith ramaswami schieber sudan efficient routing scheduling algorithms optical networks proc 
th acm siam symp 
discrete algorithms pp 

aggarwal lichtenstein linial wigderson multi layer grid embeddings proc 
th ieee symp 
foundations computer science 
aggarwal lichtenstein linial wigderson lower bound area permutation layouts algorithmica pp 

aggarwal shor multi layer grid embeddings vlsi algorithmica pp 

aggarwal kleinberg williamson node disjoint paths mesh new trade vlsi layout proc 
th acm symp 
theory computing 
alon seymour thomas separator theorem non planar graphs american math 
soc pp 

arora lund motwani sudan szegedy proof verification hardness approximation problems proc 
rd ieee symp 
foundations computer science 
aspnes azar fiat plotkin waarts line load balancing applications machine scheduling virtual circuit routing proc 
th acm symp 
theory computing 
pp 

aumann rabani improved bounds optical routing proc 
th acm siam symp 
discrete algorithms pp 

awerbuch azar plotkin throughput competitive online routing proc 
th ieee symp 
foundations computer science pp 

awerbuch bartal fiat ros en competitive non preemptive call control proc 
th acm siam symp 
discrete algorithms 
awerbuch gawlick leighton rabani line admission control circuit routing high performance computing communication proc 
th ieee symp 
foundations computer science pp 

awerbuch leighton simple local control approximation algorithm multicommodity flow proc 
th ieee symp 
foundations computer science pp 

awerbuch leighton improved approximations multi commodity flow problem local competitive routing networks proc 
th acm symp 
theory computing pp 

bartal fiat leonardi lower bounds line graph problems application line circuit optical routing proc 
th acm symp 
theory computing 
ben david borodin karp tardos wigderson power randomization line algorithms proc 
nd acm symposium theory computing pp 

blum fiat karloff rabani manuscript 
bollobas extremal graph theory academic press 
broder frieze suen upfal optimal construction edge disjoint paths random graphs proc 
th acm siam symp 
discrete algorithms pp 

broder frieze upfal existence construction edge disjoint paths expander graphs siam computing pp 

broder frieze upfal manuscript 
chen sasaki irregular torus networks deadlock avoidance throughput analysis proc 
infocom pp 

chernoff measure asymptotic efficiency tests hypothesis sum observations annals math 
stat pp 

chv atal greedy heuristic set covering problem mathematics operations research pp 

cole siegel river routing way loose proc 
th ieee symp 
foundations computer science 
optimization problem related balancing loads rings telecommunications systems pp 

cutler permutation layout networks pp 

dean open problems graph structure theory robertson seymour eds ams press 
ding schrijver seymour disjoint paths planar graph general theorem siam discrete math pp 

dinic algorithm solution problem maximum flow networks power estimation soviet math 
dokl 
pp 

edmonds minimum partition matroid independent subsets res 
nat 
bur 
standards pp 

edmonds karp theoretical improvements algorithmic efficiency network flow problems journal acm pp 

erdos combinatorial problem geometry math pp 

ford fulkerson maximal flow network canadian math pp 

ford fulkerson flows networks princeton university press 
fortune hopcroft wyllie subgraph homeomorphism problem theoretical computer sci pp 

frank edge disjoint paths planar graphs comb 
theory ser 
pp 

frank disjoint homotopic paths plane polyhedral combinatorics cook seymour eds dimacs series discrete mathematics theoretical computer science vol 
pp 

frank packing paths cuts circuits survey paths flows korte lov asz schrijver eds berlin springer verlag pp 

galil yu short length versions menger theorem proc 
th acm symp 
theory computing 
garay gopal call preemption communication networks proc 
infocom pp 

garay gopal kutten mansour yung efficient line call control algorithms proc 
nd israel conference theory computing systems 
garey johnson computers intractability guide theory npcompleteness freeman 
garg vazirani yannakakis primal dual approximation algorithms integral flow multicut trees applications matching set cover proc 
international colloq 
automata languages programming pp 

garg vazirani yannakakis approximate max flow min multi cut theorems applications proc 
th acm symp 
theory computing pp 

gawlick ramakrishnan line routing permanent virtual circuits proc 
infocom pp 

gilbert hutchinson tarjan separation theorem graphs bounded genus algorithms pp 

goldberg tardos tarjan network flow algorithms paths flows vlsi layout korte lov asz schrijver eds berlin springer verlag pp 

grotschel lov asz schrijver geometric algorithms combinatorial optimization springer verlag 
hochbaum shmoys dual approximation algorithms scheduling problems theoretical practical results journal acm pp 

hoeffding distribution number successes independent trials annals math 
stat pp 

itai perl complexity finding maximum disjoint paths length constraints networks pp 

johnson approximation algorithms combinatorial problems computer system sci pp 

kamath plotkin routing admission control general topology networks poisson arrivals proc 
th acm siam symp 
discrete algorithms 
karmarkar new polynomial time algorithm linear programming combinatorica pp 

karp reducibility combinatorial problems complexity computer computations miller thatcher eds new york plenum press 
pp 

karp leighton rivest thompson vazirani vazirani global wire routing dimensional arrays algorithmica pp 

khachiyan polynomial algorithm linear programming soviet math 
dokl pp 

leighton tight lower bound area planar permutation layouts siam discrete math pp 

klein agrawal ravi rao approximation multicommodity flow proc 
st ieee symp 
foundations computer science pp 

kleinberg rao tardos routing low congestion densely embedded graphs manuscript 
kleinberg rubinfeld short paths expander graphs submitted publication 
kleinberg tardos approximations disjoint paths problem high diameter planar networks proc 
th acm symp 
theory computing pp 

kleinberg tardos disjoint paths densely embedded graphs proc 
th ieee symp 
foundations computer science pp 

kramer van leeuwen complexity wire routing finding minimum area layouts arbitrary vlsi circuits advances computing research vlsi theory preparata ed london jai press 
pp 

krishnan maxemchuk life linear 
comparison manhattan street network proc 
infocom pp 

leighton layouts shuffle exchange graph lower bound techniques vlsi ph thesis mit math dept leighton plotkin stein tardos fast approximation algorithms multicommodity flow problem proc 
rd acm symp 
theory computing pp 

leighton rao max flow min cut theorem uniform multicommodity flow problems applications approximation algorithms proc 
th ieee symp 
foundations computer science 
leighton rao circuit switching multicommodity flow approach proc 
th international parallel processing symposium 
leiserson algorithms routing testing planar vlsi layouts proc 
th acm symp 
theory computing 
lenstra shmoys tardos approximation algorithms scheduling unrelated parallel machines proc 
th ieee symp 
foundations computer science 
li mccormick levi complexity finding disjoint paths min max objective function discrete appl 
math pp 

linial london rabinovich geometry graphs algorithmic applications proc 
th ieee symp 
foundations computer science 
lipton tarjan separator theorem planar graphs siam applied math 
pp 

combinatorial approaches multiflow problems discrete appl 
math pp 

lov asz ratio optimal integral fractional covers discrete math pp 

lov asz neumann lara plummer theorems paths bounded length mathematica pp 

luby simple parallel algorithm maximal independent set problem siam computing pp 

massey algebraic topology new york springer verlag 
maxemchuk regular mesh topologies local metropolitan area networks technical journal pp 

menger zur 
math pp 

middendorf pfeiffer complexity disjoint paths problem combinatorica 
pp 

okamura seymour multicommodity flows planar graphs comb 
theory ser 
pp 

okamura multicommodity flows graphs discrete applied mathematics pp 

peleg upfal disjoint paths expander graphs combinatorica pp 

perfect applications menger graph theorem math 
analysis appl 
pp 

plotkin shmoys tardos fast approximation algorithms fractional packing covering problems proc 
nd ieee symp 
foundations computer science 
plotkin tardos improved bounds max flow min cut ratio multicommodity flows proc 
th acm symp 
theory computing pp 

de asynchronous transfer mode solution broadband isdn ellis horwood 
pulleyblank steiner tree packing problems invited talk acm symposium theory computing 
raghavan statistical adversary line algorithms line algorithms sleator mcgeoch eds dimacs series discrete mathematics theoretical computer science vol 

raghavan probabilistic construction deterministic algorithms approximating packing integer programs computer system sciences pp 

raghavan thompson randomized rounding technique provably algorithms algorithmic proofs combinatorica pp 

raghavan upfal efficient optical routing proc 
th acm symp 
theory computing pp 

rivest placement interconnect system proc 
th design automation conference 
robertson seymour graph minors ii 
algorithmic aspects tree width 
algorithms pp 

robertson seymour graph minors vi 
disjoint paths disc combinatorial theory ser 
pp 

robertson seymour graph minors vii 
disjoint paths surface combinatorial theory ser 
pp 

robertson seymour graph minors ix 
disjoint crossed paths combinatorial theory ser 
pp 

robertson seymour graph minors xi 
circuits surface combinatorial theory ser 
pp 

robertson seymour graph minors xiii 
disjoint paths problem combinatorial theory ser 
pp 

schrijver klein bottle multicommodity flow combinatorica pp 

schrijver disjoint circuits prescribed homotopies graph compact surface combinatorial theory ser 
pp 

schrijver disjoint homotopic paths trees planar graph discrete computational geometry pp 

schrijver finding disjoint paths directed planar graph siam computing pp 

schrijver personal communication 
schrijver seymour winkler ring loading problem submitted publication 
multiflow problem epilogue polyhedral combinatorics cook seymour eds dimacs series discrete mathematics theoretical computer science vol 
pp 

seymour directed circuits torus combinatorica pp 

seymour disjoint paths graphs discrete math pp 

seymour odd cuts planar multicommodity flows london math 
soc pp 

polynomial solution undirected paths problem journal acm pp 

sleator tarjan amortized efficiency list update paging rules comm 
acm pp 

tardos strongly polynomial minimum cost circulation algorithms combinatorica pp 

linked graphs european combinatorics pp 

todd token grid multidimensional media access local metropolitan networks proc 
infocom pp 

wagner linear time algorithm multicommodity flow planar graphs proc 
european symposium algorithms pp 

welsh matroid theory london academic press 

