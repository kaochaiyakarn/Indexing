event condition action rule languages semantic web george alexandra poulovassilis peter wood school computer science information systems college university london london wc hx email ap ptw dcs bbk ac uk 
semantic web xml rdf fundamental standards exchanging storing information world wide web 
event condition action eca rules natural candidate supporting reactive functionality xml rdf repositories 
describe language eca rules xml prototype implementation language 
discuss preliminary ideas regarding language eca rules operating graph triple representation rdf describe architecture distributed deployment rdf eca rules 
xml rdf dominant standards storing exchanging information world wide web 
increasing dynamic applications commerce learning need support reactive functionality xml rdf repositories 
event condition action eca rules natural candidate 
eca rules automatically perform actions response events provided stated conditions hold 
allow application reactive functionality defined managed single rule base encoded diverse programs enhancing modularity maintainability application 
eca rules high level declarative syntax amenable analysis optimisation techniques applied functionality expressed directly programming language code 
eca rules settings including active databases personalisation publish subscribe technology specifying implementing business processes 
eca rule general syntax event condition actions event part specifies rule triggered condition part query determines database particular state action part states actions performed automatically condition holds 
executing rule actions may turn trigger eca rules rule execution proceeds rules triggered 
non termination rule execution generally possibility research focussed development static rule analysis techniques detecting possibly nonterminating rule sets practical solution problem adopted commercial dbms set predefined upper limit number recursive rule firings abort transaction exceeded 
details foundations eca rules active databases descriptions range implemented active database prototypes 
brief review related eca rules xml 
describe language specifying eca rules xml repositories prototype implementation 
language rdf data serialised xml exploring eca rule languages rdf operate graph triple representation 
archetypal language architecture distributed deployment rdf eca rules 
way discuss directions languages 
reported part ongoing selene project investigating techniques managing rdf repositories educational metadata providing syndication personalisation notification services metadata see www dcs bbk ac uk selene 
eca rules xml specified language defining eca rules xml data xpath xquery standards :10.1.1.101.2822
developed techniques analysing triggering activation relationships rules showed techniques detect possibly non terminating sets eca rules 
number eca rule languages xml proposed focussed analysing behaviour eca rules 
discusses extending xml repositories eca rules order support services 
active extensions xslt lorel languages proposed handle insertion deletion update events xml documents 
discusses specific application approach push technology rule actions methods update repository trigger rules 
defines eca rule language xml 
rule syntax similar rule execution model different 
case treat insertions deletions xml fragments atomic updates eca rule execution invoked completion update updates broken sequence finer granularity requests rule ri may trigger rule rj execution action ri may generate event triggers rj 
rule ri may activate rule rj rj condition may changed false true execution ri action 
rule ri may activate condition may true execution action 
may invoke eca rule execution 
general semantics may produce different results initial update 
arml provides xml rule description rule sharing different heterogeneous eca rule processing systems 
contrast language conditions actions defined abstractly xml rpc methods matched system specific methods 
multi purpose rule markup language defining integrity derivation eca rules 
uses syntax ruleml leaving mapping real language underlying system implementation 
aims provide semantics defining access distributed heterogeneous data sources rule evaluation allows user declare semantics necessary processing rule evaluate events conditions coming heterogeneous data sources 
proposes extensions xquery language incorporate update operations 
expressive actions supported eca rule language include renaming replacement operations specification updates multiple levels documents 
triggers discussed implementation mechanism deletion operations underlying relational store xml 
provision eca rules logical xml level considered 
xml eca rule language xml repository consists set xml documents 
xml eca rule language xpath xquery specify event condition actions parts rules 
xpath selecting matching fragments xml documents event condition parts xquery insertion actions need able construct new xml fragments 
event part xml eca rule expression forms insert delete xpath expression evaluates set nodes 
rule triggered set nodes includes node new xml fragment case insertion deleted fragment case deletion 
system defined variable delta available condition actions parts rule set instantiations set new deleted nodes returned condition part rule constant true xpath expressions connected boolean connectives 
rule fires triggered condition evaluates true 
actions part rule sequence actions action 
expression forms insert insert delete xquery expression xpath expression constant true xpath qualifier 
insert action expression specifies set nodes immediately new xml fragment inserted 
fragments specified expression delta variable xml fragment constructed instantiation delta rule condition evaluates true 
delta single fragment constructed 
expression xpath qualifier evaluated child node insertions form new fragment inserted sibling true insertions form new fragment inserted sibling true 
order new fragments inserted non deterministic 
delete action expression specifies set nodes deleted descendant nodes 
may delta variable 
example 
consider xml repository containing metadata learning objects los available web personal metadata users los 
xml document los xml contains information los show information held particular book data web 
annotations new review appended time user submits review book 
los 
lo type book title data web subject computer science subject creator abiteboul creator creator buneman creator creator suciu creator description relations semistructured data xml description publisher morgan kaufmann publisher isbn isbn annotations review reviewer teacher education review panel reviewer date date rating rating description book gives comprehensive state art discussion data models query languages 
description review review reviewer john smith reviewer date date rating rating description great book learn querying semi structured data didn know 
description review annotations lo 
los xml document users xml contains information users show information held particular user johnny mnemonic 
users subscribe notified latest review submitted books subjects interested information automatically update personal metadata users 
user id name johnny mnemonic name profession student profession subjects subject computer science subject subject mathematics subject subject economics subject subjects los lo type book title data web isbn isbn latest review reviewer john smith reviewer date date rating rating description great book learn querying semi structured data didn know 
description latest review lo 
los user 
users johnny mnemonic interested computer science rule replaces current latest review computer science book personal metadata new review book insert document los xml los lo annotations review delta subject computer science delete document users xml users user id los lo isbn delta isbn latest review insert latest review delta latest review document users xml users user id los lo isbn delta isbn isbn system defined delta variable bound newly inserted review node detected event part rule 
rule condition checks subject book question computer science 
rule action deletes existing latest review book johnny mnemonic metadata inserts new review 
suppose update occurs appending new review data web book insert review reviewer neo anderson reviewer date date rating rating description clearly written organised 
describes detail 
description review document los xml los lo isbn annotations true update triggers rule causing replacement johnny mnemonic personal metadata previous review submitted john smith new review submitted neo anderson 
example rule rule removes current latest review computer science book johnny mnemonic personal metadata review removed list reviews book rule assumes reviewer reviews book delete document los xml los lo annotations review delta subject computer science delete document users xml users user id los lo isbn delta isbn latest review reviewer delta reviewer refer reader detailed discussion syntax semantics xml eca rule language :10.1.1.101.2822:10.1.1.101.2822
describe prototype implementation 
prototype implementation due current immaturity existing xml repository products supporting sufficiently expressive update language prototype implementation flat files exploited functionality provided dom standard interacting 
architecture system illustrated 
parser eca language execution engine prefix actions schedule wrapper action scheduler condition evaluator event dispatcher execution schedule registration unit read rule base send condition eval receive results pop action head schedule schedule manager xml translated rules send action execution user interface establish connection 
send updates queries 
receive results 
le se te rfa ce query update manager xml documents rule base send event query eval receive changes set connection driver fig 

eca engine architecture rule input parser parses checks syntactic validity new rule 
construction parser javacc lexer parser generator 
valid rules translated xml form added registration unit rule base xml file 
details rule stored including name priority event condition action parts 
execution engine encapsulates rule processing functionality 
particular event dispatcher condition evaluator action scheduler implement aspects rule processing describe detail 
components interface wrapper order send receive data underlying xml files 
execution schedule contains sequence updates syntax rule actions contain delta expressions 
delta expression mean xpath expression stand possibly nested xpath expression starts delta 
portions rule action part replaced result evaluating expressions current document see 
wrapper interfaces xml files disk 
update query requests upper levels system pass component coordinates 
undertakes open files submit queries updates receive back results 
wrapper performs services functionality apache xalan api 
queries performed directly xpath 
deletions identify set nodes deleted xpath expression delete part request remove rooted nodes identified 
insertions identify set nodes affected xpath expression part request add fragment specified insert part new child nodes identified placing relative existing children qualifier 
rule execution begins request schedule manager query update manager execute update currently head schedule 
case insertion query update manager executes update annotates newly inserted nodes case deletion annotates nodes deleted executing deletion execution update control passes event dispatcher 
requests query update manager evaluate xpath query event part rule may triggered update just executed 
rule query result set contains annotated nodes newly inserted deleted event dispatcher creates changes set containing annotated nodes rule triggered 
condition evaluator requests query update manager evaluate condition part triggered rule affected document evaluation context root node occurrences delta query instance changes set 
rule delta set created consisting members changes set condition evaluates true 
delta set non empty rule fires control passed action scheduler process rule 
processing rule ends 
annotation nodes performed non dom methods provided apache xerces api allow attach data xml nodes affecting physical representation file 
action scheduler reformulates rule action order eliminate instances delta expressions 
reformulation algorithm performs steps node rule delta set replaces delta variable delta expressions current node delta set 
evaluates modified delta expressions respect updated document 
replaces delta expression rule action corresponding result previous step 
outcome reformulation instance rule action created node rule delta set 
updates prefixed arbitrary order front schedule known immediate scheduling alternatives possible see 
multiple rules fired result update executed updates result actions prefixed schedule order rules specified priorities 
control passes schedule manager cycle repeats 
update executed query update manager delete control passes back schedule manager actual deletion annotated nodes performed 
accepted standard update language xml 
eca rules supported xml repositories standard eventually emerges parallel issue designing event language match update language 
seen done context particular update language xml 
shown triggering activation relationships detected particular xml eca rules 
general ability analyse optimise eca rules needs balanced complexity expressiveness issue needs borne mind developments eca rule languages xml rdf 
straightforward extend language support replace events actions syntax replace syntax replace meaning set nodes identified replaced example pair actions rule example replaced single action replace document users xml users user id los lo isbn delta isbn latest review latest review delta latest review general insert actions may result non determinism order set new fragments inserted common parent constructs specify ordering new fragments respect existing document content 
area extend xml eca language capture ordering relationships new fragments inserted document 
assume immediate scheduling rules fired straightforward allow rules scheduling modes 
practical applicability performance implications extensions area requires investigation 
important area combining eca rules transactions consistency maintenance xml repositories 
eca rules rdf language rdf serialised xml 
exploring eca rule languages rdf operate directly graph triple representation 
archetypal rdf eca rule language event part rule expression forms insert delete path expression evaluates set nodes 
rule triggered set includes new node case insertion deleted node case deletion 
system defined variable delta available condition actions parts rule set instantiations set new deleted nodes returned condition part rule query may delta variable 
analogously xml eca rule language condition queries consist conjunctions disjunctions negations path expressions 
actions part rule sequence actions action forms expressions insert triples expressions delete triples expressions optional set local variable definitions form variable path expression triples set triples form subject predicate object 
example 
consider rdf graphs illustrated figures 
application described example shows metadata relating data web book second shows personal metadata relating user 
suppose user wants keep set reviews computer science books date 
new review computer science book inserted eca rule adds new arc linking new review user personal metadata www dcs bbk ac uk los bk dc type dc title dc subject dc creator dc description book data web computer science relations semistructured data rdf type rdf rdf rdf bbk annotation rdf seq rdf type rdf rdf fig 

learning object metadata www dcs bbk ac uk books www dcs bbk ac uk books rdf bag www inria fr abiteboul www cs washington edu homes suciu www cis upenn edu peter html bbk reviewer dc type bbk details dc type dc date bbk details bbk reviewer dc date review anderson fantastic book 
review smith 
vcard fn www dcs bbk ac uk users eliot bbk interest bbk review fig 

user metadata rdf type rdf type rdf rdf rdf rdf rdf bag computer science economics rdf seq www dcs bbk ac uk books www dcs bbk ac uk books insert resource child dc type book child bbk annotation element child dc type review delta parent parent child dc subject computer science reviews resource www dcs bbk ac uk users child bbk review insert reviews seq delta event part rule checks new review added book expressed syntax 
condition part checks new review computer science book 
action part inserts new arc user reviews collection new review syntax seq indicate increment collection element count 
example user removes interests rule removes personal metadata arcs reviews learning objects subject delete resource www dcs bbk ac uk users child bbk interest element true reviews resource www dcs bbk ac uk users child bbk review review reviews element parent parent bbk annotation child dc subject delta delete reviews seq review event part checks interest user deleted 
condition part holds 
part rule action defines reviews user reviews collection defines review reviews relate learning objects subject deleted interest 
delete part generate triple deleted pair distinct values reviews review syntax seq 
match order review deleted collection 
standard query update language rdf rdf eca language prototypical xml eca language 
observations section regarding xml eca language apply need match event sub language update sub language need balance expressiveness eca rules ability analyze optimize possibility variety scheduling modes immediate rule scheduling combining eca rules transactions consistency maintenance rdf repositories 
immediate plan define formally event condition action sub languages rdf eca rules define api requirements support rules selene rdf repository forth implement experiment language testbed selene educational metadata 
eca rules distributed environment centralized version system plan develop distributed version supporting eca rules distributed rdf repositories part ongoing selene project www dcs bbk ac uk selene 
project investigating technical requirements possible technical solutions self learning networks self learning network distributed repository metadata relating learning objects los accessed users wishing publish los 
self learning network selene peerto peer topology facilities peers join leave network 
peer manage fragment distributed metadata 
metadata expressed rdf contain information learning objects users selene see 
support networks require techniques reconciliation integration heterogeneous metadata definition personalised views distributed metadata resource detection notification propagation changes metadata descriptions 
requirements fit functionality potentially provided eca rules architecture envisage illustrated 
peer shown diagram superpeer sp may coordinating group peers shown 
sp installed local eca engine features components centralized architecture discussed section illustrated 
possibility local eca engine operate web service communication xml messages soap 
peer lo metadata local eca engine event detector rule base local eca engine event detector rule base user metadata condition evaluator action scheduler execution schedule condition evaluator action scheduler peer user metadata local eca engine event detector rule base user metadata lo metadata condition evaluator action scheduler execution schedule execution schedule fig 

distributed system architecture lo metadata new eca rule registered peer sent sp storage 
see sent sps replica stored sps relevant event may occur may trigger event part may participate evaluating condition part actions may scheduled execution 
assume individual events actions occur single peer case selene condition evaluation may distributed 
peer indexing peers super peers order determine sp relevant rule index kept peer super peer 
number possibilities doing indicate solution rdf descriptions stored peer change time peer maintains annotated copy local rdf schema shows node schema rdf data type peer bit 
information propagated peer coordinating sp 
sp maintains combined rdf schema annotated node shows set peers peer group manage data type set peer ids remote sps peer group manages data set sp ids 
information gathered maintained follows node rdf schema sp changes having data peer group having data vice versa change notified sps update relevant annotation rdf schemas 
note general sps may hold heterogeneous rdf schemas need rdf schema translation service sps envisaged selene 
annotated rdf schema sp keeps node annotated rdf schema list rdf resources type peer peer group call lists rdf resources resource indexes 
comparison related approaches querying indexing data distributed rdf network complex distributed structured databases 
database servers database schema known fixed peers may dynamically join leave network may manage data conforming varying schema fragments 
schema routing indexes proposed address problem edutella 
edutella uses kinds routing indexes super peer peer sp ri super peer super peer sp sp ri 
sp ri stores information metadata usage peer peer group 
includes information schemas dc lom properties dc subject possibly conventional indexes property values 
peer registers sp provides sp metadata usage process called advertisement 
peer undertakes keep advertisement date informing sp time change affecting advertised metadata takes place 
super peer query fragments matched sp ris order determine peers relevant query gives guarantee returned result set peer empty 
similar approach sp sp ris higher level granularity possibly representing approximations information regarding peers 
difference sp ri sp sp ri contains information neighbouring sps sp topology 
update sp sp ris broadcast messages sent sps 
purposes want maintain precise information various forms metadata reside network far possible want unnecessary routing queries updates peers super peers relevant 
adopted approach annotations full rdf schema resource indexes 
scalability proposal needs investigated 
registering eca rule new rule generated peer sent peer sp storage local rule base 
sp annotates event condition action parts rule local peers relevant part list peer ids 
determined matching part rule sp annotated rdf schema resource indexes useful resource specified part rule useful resource specified 
annotated rdf schema resource indexes sp evolve annotations eca rules evolved maintain consistency 
rule sent sps may relevant determined sp id annotations originating sp rdf schema 
sps repeat process matching part rule annotated rdf schema storing resulting annotated rule rule base relevant peer group 
note due schema heterogeneity rule may translated parts expressed respect local rdf schema 
final result replica rule sp relevant rule annotated local information peers may affected part rule 
information sps changes time may eca rule longer relevant sp case rule deleted sp local rule base 
conversely eca rule stored may relevant sp 
handled follows sps know kinds data stored sps sp sp notified change status sp sp having data associated particular rdf schema node having data sp send sp copy eca rules originated sp may relevant sp 
rule triggering execution run time event occurs peer notify sp 
determine may trigger eca rule annotated id rule triggered sp send event query evaluate 
triggered condition need evaluated generating instantiation value delta variable condition 
annotations determine local peers sps sub queries condition dispatched evaluation 
delta variable condition instantiated consult sps resource indexes precise information local peers relevant sub queries instantiated condition 
condition evaluates true corresponding rule action sent scheduled sps execute 
determined annotations rule action consulting sps resource indexes 
open issues remaining realising eca architecture describe developing algorithms matching rule event condition action parts schema indexes defining syntax messages passed peers distributed processing eca rules defining coordination selene distributed query processor evaluation rule conditions defining coordination selene mediation functionality translating data rules heterogeneous schemas generally mapping distributed eca functionality selene service architecture exploring distributed transactional aspects eca rules assume individual events actions occur single peer execution eca rule may trigger eca rule cascade rule firings may need semantics single transaction 
discussed provision eca rules xml rdf repositories highlighted new issues arise context data 
described language eca rules xml preliminary ideas regarding language eca rules graph triple representation rdf 
described prototype centralised implementation xml eca rule language architecture distributed implementation 
directions explore highlighted sections 
important issue evaluate applicability scalability languages execution models implementation 
plan deploy providing reactive functionality distributed rdf repositories educational metadata part ongoing selene project 
provide opportunity assess impact moving centralised distributed environment additional challenges network delay network reliability synchronisation rule execution maintaining consistency distributed metadata resource tolerance delays failures 
abiteboul cluet 
rousset 
xyleme project 
computer networks 

abiteboul quass mchugh widom wiener 
lorel query language semistructured data 
vldb journal 

abiteboul vianu yesha 
relational transducers electronic commerce 
jcss 

adi 
push technology personalization event correlation 
proc th int 
conf 
large databases pages 

alexaki christophides karvounarakis plexousakis tolle 
ics forth managing voluminous rdf description bases 
proc 
nd 
int 
workshop semantic web semweb 

bailey poulovassilis wood 
event condition action language xml 
proc 
www hawaii 

bailey poulovassilis wood 
analysis optimisation action rules xml 
computer networks 

braga ceri 
active xquery 
proc 
ieee conference data engineering icde 

ceri paraboschi 
active rules xml new paradigm services 
vldb journal 

ceri paraboschi 
pushing reactive services xml repositories active rules 
www 

ceri fraternali 
designing database applications objects rules idea methodology 
addison wesley 

ceri fraternali paraboschi 
data driven web site generation data intensive applications 
proc 
th int 
conf 
large databases pages 

cho park kim 
arml active rule mark language heterogeneous active information systems 
proc 
ruleml sardinia june 

cluet 
views large scale xml repository 
proc 
th int 
conf 
large databases pages 

ishikawa ohta 
active web distributed database system commerce 
proc 
web dynamics workshop london 
www dcs bbk ac uk 

self learning networks functionality user requirements exploitation scenarios 
see www dcs bbk ac uk selene reports del pdf august 
se project deliverable 


transforming rdf 
see zoe mathematik uni de transform pdf march 

nejdl wolpers siberski schmitz schlosser loser 
super peer routing clustering strategies rdf peerto peer networks 
proc 
www pages 

nejdl edutella networking infrastructure rdf 
proc 
www 

paton editor 
active rules database systems 
springer verlag 

pereira fabret llirbat shasha 
efficient matching web publish subscribe systems 
proc th int 
conf 
cooperative information systems coopis pages 

simon smart space learning mediation infrastructure learning services 
proc 
www 

tatarinov ives halevy weld 
updating xml 
proc 
acm sigmod int 
conf 
management data pages 

wagner 
design general rule markup language 
invited talk workshop xml das semantic web berlin june 

widom ceri 
active database systems 
morgan kaufmann san mateo california 

world wide web consortium 
xml path language xpath version 
see www org tr xpath november 
recommendation 

world wide web consortium 
xsl transformations xslt version 
see www org tr xslt november 
recommendation 

world wide web consortium 
xquery xml query language 
see www org tr xquery november 
working draft 

world wide web consortium 
document object model dom level core specification 
see www org tr dom level core february 
working draft 
