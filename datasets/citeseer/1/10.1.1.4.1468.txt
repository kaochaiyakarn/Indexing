designing building context aware applications daniel salber anind dey gregory abowd college computing gvu center georgia institute technology atlanta ga salber acm org anind abowd cc gatech edu www cc gatech edu fce user interfaces adapt growing dissemination computing power everyday environment 
computing devices applications desktop diverse environments trend accelerating 
context account context aware applications promise richer easier interaction 
designers face major obstacles notion context ill defined lack conceptual models methods help drive design context aware applications tools available jump start development context aware applications 
address problems turn 
define context identify categories contextual information characterize context aware application behavior 
conceptual model contextaware applications development 
conceptual model introduces abstractions help deal context implemented context toolkit built 
propose design rules help derive relevant context components application requirements build software architecture application 
illustrate concepts design rules prototype application built mobile context aware conference assistant 
example application emphasizes abstractions propose facilitate description design seemingly complex system 
experience context awareness outline challenges context aware applications 
keywords context aware computing ubiquitous computing context design toolkits applications development 
radical shift taken place computing years 
typical user facing desktop machine relatively predictable office environment anymore 
users deal diverse devices mobile fixed sporting diverse interfaces diverse environments 
appearance phenomenon step realization mark weiser ubiquitous computing paradigm third wave computing specialized devices outnumber users weiser 
important pieces necessary achieve ubiquitous computing vision place 
notably interaction paradigms today devices fail account major difference desktop computing model 
author current address ibm watson research center route yorktown heights ny 
devices changing environments adapt environmental conditions changing context 
moving away desktop brings new variety situations application may computing devices left unaware surrounding environment 
context aware computing aims making computing devices aware operating environment 
research prototypes developed decade shown value difficulties approach 
main difficulties poor understanding nature context lack conceptual models tools support development context aware applications 
goals help understand context provide conceptual practical support design construction context aware applications 
motivate need context aware computing typical application scenario 

application scenario ashley attending technical conference 
conference features large number presentations demos spread multiple tracks 
ashley attending conference colleagues bob john decided try attend different presentations share learned day 
ashley picks conference package day provides contact information topics interested 
mentions colleagues bob john attending 
conference proceedings receives personal conference assistant handheld device designed guide assist conference 
ashley hard time deciding attend session 
sessions start minutes 
turns conference assistant 
interests recommends presentation demo gives directions get presentation demo rooms 
ashley chooses presentation heads room 
enters presentation room conference assistant displays information session including information presenter relevant urls proceedings page numbers papers 
shows thumbnail current slide offers note capabilities 
presentation ashley uses conference assistant note feature comments 
conference assistant indicates audio video slides content recorded session 
doesn bother copying diagrams interest 
ll look online 
presentation asks question speaker 
question relates particular detail diagram speaker slides 
conference assistant able bring relevant slide room screen question clearer speaker audience 
talk session cancelled speaker missed flight 
ashley wonders looks conference assistant find bob john 
conference assistant shows attending different sessions 
conference assistant reports bob indicated session moderately interesting 
john enjoying session lot 
ashley decides join john session 
back conference ashley connects conference web site refresh memory write trip report 
logs conference web site 
shows talks attended allows browse notes took 
watch listen recorded sessions missed 
trip report contains complete coverage sessions conference relevant team written snap 
implemented conference assistant application supports features described scenario 
section revisit conference assistant describe detail design architecture 
explain type applications difficult build today introduce number concepts context aware computing easier comprehend application designers developers 

context uses conference scenario outlines possible uses context information contextaware computing 
different disciplines linguistics semantics computing different definitions context 
context aware computing number definitions proposed usually enumerations context information sensed processed adequately applications 
concerned providing operational definition context serve basis analysis understanding notion context conflict accepted meanings context aware literature 
define context information characterizes situation related interaction user application surrounding environment 
traditionally field contextaware computing context limited environmental information automatically sensed location identity example 
definition provide limit context way certainly concentrated context acquire manually automatically environment 
section give complete definition encompasses previous attempts defining context leads deeper analysis nature context 
goal context acquisition determine user trying accomplish support task 
extremely difficult problem 
currently sensing context information kinds context aware applications possible including displaying context information user reacting context changes triggering action modifying configuration parameter behalf user context tag captured information facilitate access contextual cues 

context difficult 
difficulties arise design development context aware applications 
designers lack conceptual tools methods account context awareness 
result choice context information applications driven context acquisition mechanisms available 
means context information depends sensors hardware software hand 
approach entails number risks 
choice sensors may appropriate 
specifics shortcomings sensors may carried application level hinder flexibility interaction evolution application 
importantly sensor driven approach constrains possibilities designers limiting kind applications able design context uses imagine 
developers face set problems related distribution modifiability reusability 
context aware applications distributed acquire provide context information number different places 
example conference scenario room venue conference able sense presence identity users 
mechanisms distribution mainstream desktops servers appropriate distributed networks sensors 
context awareness relevant environment highly dynamic user mobile 
context aware applications may implemented diverse kinds computing platforms ranging handheld devices wearable computers custom built embedded systems 
result contextaware applications require lightweight portable interoperable mechanisms wide range platforms 
graphical user interfaces crucially lack experience context aware applications iterative development key creating usable context aware applications 
applications implemented way easy modify context related functions 
currently guidelines models tools support requirement 
application developers able reuse satisfactory context aware solutions 
methods tools task easy 

overview main goals clarify notion context applies context aware computing introduce conceptual models design rules help drive design context aware applications tool help develop context aware applications 
section introduce basic context types clarify context needs designing context aware application 
conceptual model design development context aware applications 
section common operations context information introduce abstractions encapsulate operations corresponding software components constitute context toolkit 
section details design example application implements scenario section conference assistant extensive context information 

understanding context section utilize survey context aware computing performed authors provide better understanding context dey abowd 
look previous definitions context context aware computing literature 
build definitions provide general definition context refine looking entities provide context information 
define contextawareness identify key categories context aware functions 

defining context webster dictionary context situation background environment relevant happening personality definition general useful contextaware computing 
definitions context previous authors fall categories enumerations examples context information categorizations 
defined term context aware schilit theimer refer context location identities nearby people objects changes objects schilit theimer 
similar definition brown chen define context location identities people user time day season temperature 
brown 
ryan pascoe morse define context user location environment identity time ryan 
dey enumerates context user emotional state focus attention location orientation date time objects people user environment dey 
definitions define context example difficult apply 
considering potential new type context information clear definition help decide classify information context 
example previous definitions helps decide user preferences interests context information 
definitions provided synonyms context referring context environment situation 
consider context user environment consider application environment 
example brown defines context elements user environment computer knows brown 
franklin see situation user franklin 
ward jones hopper view context state application surroundings ward rodden define application setting rodden 
hull bedford roberts include entire environment defining context aspects current situation hull 
definitions clearly general enumerations generality limitation 
definitions provide little guidance analyze constituent elements context identify 
definitions schilit adams want schilit dey abowd wood dey pascoe pascoe closest spirit operational definition seek 
schilit adams want claim important aspects context resources nearby 
define context constantly changing execution environment 
environment threefold computing environment available processors devices accessible user input display network capacity connectivity costs computing user environment location collection nearby people social situation physical environment lighting noise level dey abowd wood define context user physical social emotional informational state 
pascoe defines context subset physical conceptual states interest particular entity 
prior attempts define context proceed definition provided dey abowd dey abowd context information characterize situation entity entity person place object considered relevant interaction user application including user application 
context typically location identity state people groups computational physical objects 
definition encompasses definitions previous authors 
stated earlier goal context acquisition determine user trying accomplish 
user objective difficult determine directly context cues help infer information inform application best support user 
definition differentiate manually acquired information automatically acquired information 
great division context aware researchers context include automatically acquired information manually automatically acquired information 
opted inclusive definition 
ideal setting context obtained automatically need manual acquisition 
real world context sensed automatically applications rely user manually provide 
information relevant interaction information acquired impact seen context 
main goal providing definition context offer guidance identifying broad categories context 

categories context looking scenario section context aware application needs acquire various kinds information environment 
location user course topics interest user contents presentation fact audio video recorded session location users pieces context information relevant application 
diversity context information useful attempt categorize easier systematic manner 
aim introduce simple classification context information entities context assessed categories context information 
entities identified relevant places people things 
places regions geographical space rooms offices buildings streets 
people individuals groups located distributed 
things physical objects software components artifacts instance application file 
introduce essential categories context information identity location status time 
identity refers ability assign unique identifier entity 
identifier unique namespace applications 
location just position information space 
expanded include orientation elevation information deduce spatial relationships entities location proximity containment 
example information object upside location information 
location applies places 
places located frame geographical coordinates relative spatial relationships location 
status identifies intrinsic characteristics entity sensed 
place current temperature ambient light noise level 
person refer physiological factors vital signs activity person involved reading talking 
similarly group people status characteristic group enthusiasm global mood description activity attending lecture having meeting 
software components status basically refers attribute software component queried 
typical examples uptime load cpu existence state files file system state software component application 
time context information helps characterize situation 
conjunction pieces context timestamp time span indicating instant period contextual information known relevant 
reason choice basic context categories information provide infer additional pieces context lead extensive assessment situation 
simple inference derivation context information happens related context information deduced single known piece context information external sources directories 
example phone number address person derived identity 
complex inference context information refers process considering pieces context information describe situation deduce new piece context information 
example knowing room occupied number people room relative positions room talking deduce meeting place 
context categories identified inferred context information number ways context aware applications 
clarify context uses turn functions application context aware 

context aware functions having definition context identified key context types examine applications effectively context information 
survey context aware computing proposed classification context aware functions context aware application may implement dey abowd 
classification introduces categories functions related presentation information execution services storage context information attached captured information retrieval 
category presenting information services refers applications context information user context propose appropriate selections actions user 
examples class functions literature commercially available systems showing user vehicle location map indicating nearby sites interest abowd davies fels presenting choice printers close user schilit sensing presenting information group users salber 
second category automatically executing service describes applications trigger command reconfigure system behalf user context changes 
examples include teleport system user desktop environment follows moves workstation workstation want car navigation systems recompute driving directions user misses turn hertz recording whiteboard senses informal unscheduled encounter individuals occurs automatically starts recording ensuing meeting brotherton 
third category attaching context information retrieval applications tag captured data relevant context information 
example zoology application tags notes taken user location time observation pascoe 
informal meeting capture system mentioned provides interface access informal meeting notes meeting occurred meeting located 
complex examples category memory augmentation applications forget lamming flynn remembrance agent rhodes 
section established definition context elicited dimensions context information possible uses context aware applications 
turn software design context aware applications 

software design context aware applications software design context aware applications raises new challenges 
handling context difficult reasons guiding principles support software engineering practices designers lack abstractions think context context sensing distributed leads complex distributed designs 
section separation concerns context acquisition applications guiding principle 
derive abstractions help manage context application independent fashion identify corresponding software components 
components simple distributed platform form basis context toolkit 
looking new technological advance trying easily accessible software designers common stepping stone apply tried true software engineering principles particular case new technology hand 
advent graphical user interfaces gui separation concerns actual application legacy text application new world windows icons menus pointers quickly paramount 
separation concerns requirement led software architecture models design processes development tools effectively support design development guis 
principles reusability modifiability stemmed particular nature gui design development original solutions costly develop iterative design key usability 
context aware applications faced similar problem 
context awareness opens new possibilities drive development new applications beneficial legacy applications 
context aware applications need take advantage sensors sensing techniques available 
guis major preoccupation achieve separation concerns application se context acquisition processing 
inspired concepts commonly gui toolkits defined abstractions help reason context support separation concerns 
section introduce context abstractions provide rules derive application specifications 
detail implementation issues context awareness infrastructure 

learning graphical user interface toolkits taken granted gui application designers programmers reuse existing interaction solutions embodied gui toolkits widget libraries 
gui widgets interactors span large range interaction solutions selecting file triggering action choosing options direct manipulation graphical objects 
gui widgets main benefits centered notion encapsulation allowing programmers having understand inner workings hide specifics physical interaction devices applications programmer devices change minimal impact applications 
user points clicks mouse fingers taps touchpad uses keyboard shortcuts doesn require changes application 
manage details interaction provide applications relevant results user actions 
widget specific dialogue handled widget application needs implement single callback notified result interaction sequence 
provide reusable building blocks presentation defined reused combined tailored applications 
widgets provide encapsulation appearance behavior 
providing high level abstractions complex interaction mechanisms gui widgets provide stepping stones designing building user interfaces 
context widgets interpreters aggregators provide similar abstractions designing building context aware applications 

context abstractions context widget software component provides applications access context information operating environment 
way gui widgets mediate application user context widgets mediate application operating environment 
result just gui widgets insulate applications presentation concerns context widgets insulate applications context acquisition concerns 
address context specific operations introduce additional categories components interpreters aggregators 

context widgets context widgets provide benefits hide complexity actual sensors application 
location user sensed active badges floor sensors rf radio frequency indoor positioning system combination impact application 
context information suit expected needs applications 
widget tracks location user building city notifies application user moves room street corner doesn report significant moves application 
widgets provide abstracted information expect applications need frequently 
provide reusable customizable building blocks context sensing 
widget tracks location user variety applications tour guides car navigation office awareness systems 
furthermore context widgets tailored combined ways similar gui widgets 
application perspective context widgets encapsulate context information provide methods access way similar gui widget 
context widgets provide callbacks notify applications significant context changes attributes queried applications dey 
designer perspective context widgets provide abstractions encapsulate acquisition handling piece context information 
additional abstractions necessary handle context information efficiently 
abstractions embody notions interpretation aggregation 

interpreters interpretation refers process raising level abstraction piece context 
achieved inference defined section 
location example may expressed low level abstraction geographical coordinates higher levels street names 
simple inference derivation transforms geographical coordinates street names example geographic information database 
complex inference multiple pieces context provides higher level information 
example room contains occupants sound level room high guess meeting going combining pieces context 
context aware applications require higher level abstraction sensors provide 
interpreters transform context information raising level abstraction 
interpreter typically takes information context sources produces new piece context information 

aggregators aggregation refers collecting multiple pieces context information logically related common repository 
need aggregation comes part distributed nature context information 
context retrieved distributed computers 
application query distributed widget turn aggregators gather logically related information relevant applications available single software component 
accessing information provided aggregators simplified operation application applications access information single aggregator 
addition aggregators facilitate inference context information inferring higher level context multiple potentially distributed pieces context information easier pieces available aggregator 
collecting logically related information aggregators provide abstraction helps handle consistently separate pieces context information offer shop designers 
application aggregator interpreter interpreter widget sensor widget sensor context architecture 
example configuration context toolkit components identified categories components implement distinct functions 
context widgets acquire context information 
interpreters transform raise level abstraction context information 
interpreters may combine multiple pieces context produce higher level context information 
aggregators gather context information related entity easy access applications 
limited number relationships established components 
widgets polled notification inform clients changes 
clients applications aggregators widgets 
aggregators turn act bridge widgets applications 
interpreters solicited stage widget aggregator application 
shows example configuration including sensing devices widgets aggregators interpreters application 

identifying context components context components map nicely concepts introduced section 
section introduced entity categories places people objects section introduced categories context information 
design context aware application designers identify relevant entities categories context information identify entity relevant context attributes 
additionally designers specify requirements pieces context information 
requirements typically express desired frame units naming scheme quality service constraints desired coverage resolution location 
mapping rules provide straightforward way identify context components architecture 
context attribute context widget acquires required context information 

context entity aggregator collects context information entity context widgets 

applications obtain necessary context relevant context entities 

pieces context information provide higher level context information interpreters assure inference 

discrepancies occur requirements context attributes information provided sensors regard frames interpreters assure conversion frame 
section provide complete worked example conference assistant application apply rules identify context components 

context toolkit implementation context toolkit developed provides designers abstractions described widgets interpreters aggregators distributed infrastructure dey salber 
context toolkit developed java programming language independent mechanisms allowing creation interoperability widgets interpreters aggregators applications language 
instances widgets applications written frontier python currently working port entire toolkit 
built number applications demonstrate toolkit including board information display changes contents observer augmented whiteboard records audio writing whiteboard multiple people gathered salber 
section discuss advanced application conference assistant designed implemented toolkit 
widget aggregator interpreter component implemented process 
typically different components distributed different processors 
context toolkit built top simple distributed infrastructure 
main requirement distributed infrastructure support reliable communication distributed objects multiple platforms 
additional features multicasting object migration resource discovery desirable required 
current implementation context toolkit utilize simple object communication mechanism hypertext transfer protocol xml extensible markup language encoding messages 
choice dictated portability concern requirement communication infrastructure platform supports tcp ip 
simple requirement support unconventional custom built devices common ubiquitous wearable computing environments 
possible alternatives corba common object request broker architecture java rmi remote method invocation deployed limited number platforms require significantly computing resources bare bones approach 
drawback approach limited scalability number components increases 
reached limit experimentations solutions scalability problem exist distributed infrastructures jini tm sun microsystems expense resource intensive solution 
concept context widget modeled gui widgets emphasize important difference way events handled distributed 
piece context information changes modification detected context widget charge specific piece context 
notifies subscribers may include widgets aggregators applications 
new information abstracted interpreters way context widget client subscriber 
context widget subscribers necessarily run machine events sent distributed infrastructure xml messages 
gui windowing system events generated user actions expected sequential 
placed event queue processed sequentially 
context assumptions events timing 
component context widgets aggregators interpreters applications ready process events time possibly simultaneously 
event queue mechanism clearly apply context 
mechanism call event comb 
placing received events sequentially queue components listen events constantly 
event arrives handed new thread processes event 
component listening events events handled parallel 
summarizes mechanism 

event comb 
incoming events provokes spawning new thread handles event identified relevant abstractions dealing context design corresponding components managing context context aware applications 
providing context toolkit handles aspects context acquisition facilitate implementation context aware applications 
abstractions provide assume designers identify easily application requirements 
help step look actual abstractions defined suggest design process contextaware applications 

example design conference assistant section describe detail abstractions introduced design rules actual application built 
context aware application consider conference assistant 
illustrated scenario section 
implemented application provided additional information dey 
details typical application show apply design rules particular example 
result process software architecture application 

conference setting desire build context aware applications deal wide variety context moving simple identity location led investigate complex setting rich sources context 
chose environment conference involves people multiple locations diverse collection activities 
performed informal study conference attendees conferences came list determine presentations demonstrations interesting relevant attend keep track colleagues order share relevant information parallel event handling threads incoming event take notes interesting presentations meet people doing interesting research 
conference assistant context aware application supports conference attendees performing tasks task supported subsequent version application 
conference setting dynamic environment context awareness offer 
described section context awareness allows conference assistant adapt changing context providing additional value added support tasks 

conference assistant user attending multi track conference 
conference assistant provided registers runs handheld device 
starts application automatically displays copy conference schedule showing multiple tracks conference including tracks demonstration tracks 
schedule certain papers demonstrations highlighted light gray indicate may particular interest user 

screenshot augmented schedule suggested papers demos highlighted light colored boxes horizontal tracks 
screenshot comes handheld windows ce device resolution pixels 
user takes advice application walks room suggested presentation 
enters room conference assistant automatically displays name presenter title presentation 
indicates audio video recorded presentation 
presenter combination powerpoint tm web pages 
thumbnail current slide web page displayed handheld computer display 
conference assistant allows user create notes attach current slide web page 
presentation proceeds application displays updated slide web page information 

screenshot conference assistant note interface interface describe 
user looks conference schedule notices colleagues attending presentations 
colleague indicated high level interest particular presentation decides join 

screenshot partial schedule showing location interest level colleagues 
symbols indicate interest level 

screenshots retrieval application query interface timeline annotated events captured recorded audio video 
application intended run traditional desktop interface 
conference uses retrieval application retrieve information particular presentation 
application shows timeline conference schedule presentation demonstration tracks 
application uses context retrieval 
provides query interface allows user populate timeline various events arrival departure different rooms asked question people asked questions presentation particular keyword audio video recorded 
selecting event timeline user view slide web page time event audio video recorded presentation slide personal notes may taken 
continue view current presentation moving back forth slides web pages 
similar fashion presenter third application retrieve information presentation 
application displays timeline presentation populated events different slides audience members arrived left presentation identities identities audience members asked questions slides relevant questions 
interface similar shown 
presenter presentation playing back audio video moving presentation slides web pages 

applying design rules starting usage scenarios identify entities provide context information conference assistant application 
look context attributes requirements attribute 
examine choice sensors acquire specified context information 
derive software architecture application information context sources attributes 

identifying entities object oriented analysis ooa methods provide useful support identify objects 
objects users usually context entities 
case conference assistant attendees presenters interest 
places rooms conference assistant modeled context entities 
physical computational objects handled care candidates context entities objects highly dynamic 
conference schedule example conference track static objects qualify 
scenario account changes conference schedule obvious extension 
hand presentation current slide web page displayed presenter objects interest context modeling 
interest objects content wish capture annotate context information question asked attendee notes taken user 

identifying context attributes identified context entities look candidate context attributes entity 
ooa methods provide insight identifying attributes context entities corresponding objects 
decide attribute context related 
identify context related attributes context categories section guide 
entity attributes fit context categories interesting context attributes 
example attendee contact information interests colleagues derived identity 
room attendee currently stands location information 
time user moves room needed retrieval application shows user timeline whereabouts 
current level interest user falls status category 
presenter need name person identity 
comes room entity notice interesting 
room characterize location user location presentation held 
matter fact scenario involve attributes room se identity 
distinguish different rooms presentations held need identify rooms way 
imagine different application involve context attributes room 
example interested monitoring rooms time help planners edition conference 
case identify occupancy attribute room 
presentation concerned location room held 
current slide web page presentation identity slide number url secondary identity information title status information thumbnail shown user handheld scenario 
question user notes share attributes slide web page relate time question asked note taken interest 
question note contents captured annotated context information 
need able relate note question slide web page display note question timeline provided retrieval application 
table summarizes identification context entities context attributes conference assistant application 
entities attributes people attendee name contact info interests colleagues room times arrival departure level interest presenter name places room name things presentation room slide number title thumbnail web page url title thumbnail question related slide web page time user notes related slide web page time table 
context entities attributes conference assistant application 
attributes parenthesis derived context types 

identifying quality service requirements look quality service constraints context attribute 
part analysis focus dynamic attributes 
names attendee presenter room name room presentation occurs particular challenges regard quality service 
set acquired application startup 
hand location user highly dynamic context attributes current slide web page level interest user 
user location available application user conference grounds 
require coverage user location space occupied conference 
space need contiguous 
demonstration setup lab areas opposite ends lab room corridor rooms tracks simulated conference held 
requirements strict resolution want able differentiate user location rooms visiting 
location user room useful scenario 
resolution sufficient 
extended application help conference attendees navigate different rooms higher level resolution required 
specify high accuracy reliability requirements incorrect missing user location seriously jeopardize usefulness conference assistant 
frequency timeliness requirements match expected behavior users 
expect attendees move normal pace rooms stay room minutes 
retrieval application allow users re live experience displays schedule resolution minutes 
user moves room want display immediately information presentation currently held room 
user accept delay couple seconds information displayed handheld 
consequence may set requirements frequency update second minimum timeliness second maximum 
context attributes slide web page user handheld device 
attached notes taken user 
coverage resolution apply slides context attributes 
partial coverage mean context information available application constrained slides color pictures titles shorter characters 
limited resolution mean example web page jump transmitted application 
course limited coverage limited resolution conference assistant 
require coverage best possible resolution 
set high requirements accuracy reliability similar reasons 
evaluate needs terms update frequency timeliness 
approximation set update frequency timeliness second 
want avoid glaring discrepancies display shown audience display handheld 
application deployed quality service requirements definitely need backed theoretical data user testing 
level interest set user chosen values low medium high 
level interest communicated colleagues user 
level interest discrete variable values required coverage resolution best available respectively 
similarly high accuracy required 
tolerate perfect reliability 
feature essential operation conference assistant 
frequency timeliness highest importance typical minutes acceptable 

choosing sensors stage analysis identified pieces context need acquire quality service requirements 
examine sensing techniques available context attribute quality service requirements choose appropriate set sensing techniques 
user location choice sensing techniques severely limited 
information current slide web page acquired inter application communication mechanisms com dcom 
level interest user input manually user 
techniques just practical setup 
computer vision techniques extract relevant information slide reliability may issue 
physiological sensors may able determine level interest reliability may issue intrusiveness sensors 
number techniques available acquiring user location 
considered olivetti active badges want dallas semiconductor tm dallas semiconductor pinpoint id tm indoor rf positioning system pinpoint 
systems satisfy requirements terms coverage resolution accuracy 
active badges users wear ir transmitting badges signal picked fixed receivers 
users carry devices dock explicitly indicate change location adding extends coverage room level resolution easily achieved 
pinpoint system users carry rf active tag signal received set antennas setup 
triangulation signals received antennas provides tag location 
set high requirements reliability systems potential drawbacks 
active badges require line sight badge reader installed indoors 
room potentially packed attendees guarantee transmission successful 
regard rf system pinpoint system preferable 
suffers potential reliability problems tag orientation crucial operation 
providing carefully designed tag holder alleviate problem 
suffer kind reliability problem operated manually user run risk users forget indicate change location 
experience pinpoint system satisfy frequency timeliness requirements 
summary analysis pinpoint system appropriate requirements 
complexity involved initial setup pinpoint system led prototype 
systems provide slightly different information 
pinpoint system provides identity tag numeric id zone number zone map defined statically 
dock provides identity docking ibutton numeric id attach location information dock 

deriving software design derive software design analysis context entities attributes apply rules introduced section 
map entities aggregators context attributes context widgets identify need interpreters infer context information 
table model conference assistant application consists entities attendee presenter room presentation slide web page 
entities number attributes table 
mapping rules software design application contains aggregator component entity context widget attribute entity 
apply rules produce aggregators widgets sections software components list shown table 
aggregators attendee presenter room presentation slide web page widgets name attendee room attendee times departure arrival attendee level interest attendee name presenter name room room presentation number slide title slide thumbnail slide url web page title web page thumbnail web page current slide question time question current slide user note time user note interpreters tag id name attendee zone id room attendee ibutton id name attendee table 
software components derived design rules conference assistant 
entity name parentheses indicates entity attribute relates 
conference assistant application complex context inference 
need interpreters information acquired ibutton pinpoint sensors 
assume may sensing technologies life cycle application 
consequence need interpreters hand transform ibutton id attendee name hand transform tag id zone id provided pinpoint system attendee room names 
show list components shown table simplified examine tradeoffs involved 
consider aggregators provide single piece context information acquired directly context widget presenter room presentation 
aggregators intended aggregate information multiple sources aggregator source information limited usefulness 
aggregator removed software design 
gain simplicity implementation performance 
main drawback concerns extensibility 
new context attributes presentation entity number attendees interest added aggregator new attributes easier access 
result remove presenter room presentation aggregators application interact directly respective widgets 
attributes entity clearly static expected usage period application need acquired context widgets 
result name widget associated room aggregator removed room name change 

model reality conference assistant implementation actual conference assistant application developed conceived design rules just followed 
application helped gain experience design context aware applications 
interesting look actual implementation conference assistant compare design produced approach 
original design produced slightly compact architecture expense modularity 
main differences software design previous paragraph actual design conference assistant application due factoring 
actual implementation kinds factoring occurred 
entities similar slide web page entities factored single widget 
second logically related entities context attributes implemented single aggregator widget 
example single aggregator called presentation implements presentation entity result factoring slide web page 
similarly context attributes slide web page acquired single widget called content 
attendee entity context attributes factored moment acquired 
contact information interests acquired registration time registration widget 
room attendee enters leaves corresponding times acquired location widget 
result software design fewer components shown table 
modularity traded simplicity implementation 
component responsibility attendee aggregates information user presentation aggregates information presentation registration acquires contact info interests colleagues location acquires location arrivals departures users content acquires title url slide number thumbnail slide web page question acquires audience questions relevant presentation info memo acquires user notes relevant presentation info record acquires audio visual presentation info name transforms ibutton id user name table 
actual components responsibilities conference assistant implementation 
aggregator widget interpreter 
shows implemented software architecture conference assistant application 
record widget question widget presentation aggregator content widget location widget presentation space conference assistant attendee aggregator memo widget user colleague name interpreter registration widget 
conference assistant context architecture 
prototype conference assistant application implemented laboratory presentation rooms handheld devices 
deploying real conference environment scalability implemented architecture needs tested 
addition great obstacle real deployment large infrastructure requirement detecting indoor location providing ubiquitous communications supplying handheld devices conference attendees 
application interesting complex terms context uses useful testing context toolkit ideas design context aware applications 
example application design highlighted major benefits approach 
break design series manageable steps outcome clearly defined 
way context abstractions shield application designers irrelevant technical details underlying architecture 
map high level components facilitate description complex applications 
number research issues address facilitate design development context aware applications 

research issues context aware computing numerous research issues context aware computing development better sensing techniques elaboration rich representations context information 
chose highlight issues put agenda natural extensions described need context taxonomy modeling representation issues dealing ambiguity sensed context identification prototype behaviors context aware applications 
categories section provide rough useful breakdown context information 
finer taxonomy context information serve major purposes better support design providing checklist context application may need acquire 
support easier implementation allowing developers provide standardized library context components 
pursue parallel guis gui applications today take advantage standard components encapsulate complex interactions user 
similarly context aware applications rely standard components provide context information environment 
achieve general usable way provide interesting useful applications simple rule automata expect tackle difficult issues knowledge modeling representation 
uses context envision require applications capable maintaining basic dynamic model real world 
includes model environment suggested harter 
harter brumitt 
brumitt detailed models entities environment 
able example signal user milk passing grocery store suggest interesting activity town weekend requires accumulated knowledge user interests whereabouts social situation available meaningful application 
requires moving environmental context traditional context aware research include general context sensed directly environment user interests shared knowledge social relationships users environment user example 
assumption application development context sensing accurate 
obviously false assumption real need deal inaccurate ambiguous context 
complementary approaches addressing issue passing ambiguity applications attempting disambiguate context automatically attempting disambiguate context manually 
application specify accuracy context needs context sensing infrastructure 
infrastructure supply necessary context specified accuracy provides context measure accurate infrastructure unable meet accuracy requirements notify application available accuracy allow application decide course action request context lower degree accuracy disregard context example 
second approach data multiple sensors available improve accuracy available context 
multiple homogeneous sensors remove noise sensing techniques 
multiple heterogeneous sensors offset failures exist 
example computer vision tends poorly low lighting conditions affected electromagnetic interference environment 
rf sensors operate level accuracy lighting conditions susceptible electromagnetic interference 
process multiple sensors disambiguate sensor information context called sensor fusion brooks iyengar 
third approach dealing ambiguous inaccurate sensor data provide interface allows user manually disambiguate mankoff 
hiding user fact application inaccurate data application notify user multiple possible alternatives interpreting sensor data 
user chooses ignore ambiguity application choose default alternative 
user chooses actively select alternatives application proceed chosen alternative 
addition notify context sensing architecture chosen alternative allow applications context information take advantage manually disambiguated context 
mainly addressed context acquisition issues 
applications context left designers little support design approach context toolkit 
section identified classes context aware functions application support 
categorized functions call investigation prototype behaviors presenting context information executing services response context changes tagging captured data context 
prototype behaviors basis application frameworks context aware computing libraries components example displaying location tracked entity map starting personal audio video recording interesting encounters attaching location data field observations 
main question consider find level generality achievable useful 
computational capabilities environments growing legitimate concern technologists spending intellectual cycles social implications 
hope 
context aware computing holds promise providing mechanisms support social concerns 
example context tag captured information may intrusion individual privacy want meet room records say context protect concerns individuals providing computational support establish default access control lists information captured lau limiting distribution attendance 
complete solution obviously holds potential explored right infrastructure 

context aware computing infancy 
attempted clarify notion context laid foundations design development context aware applications 
defined broad categories entities capable providing context information identified basic categories context 
separation concerns guiding software engineering principle built classification introduce abstractions encapsulate common context operations 
abstractions map directly components context toolkit 
introduced structured design approach helps identifying context abstractions leads software design 
demonstrated approach design complex context aware application intended conference attendees 
outlined research issues addressed enable elaborate contextaware applications 
issues impact context aware computing go social problems raised 
ultimately authentic experience context aware computing everyday lives help learn impacts individuals groups 
main contribution context aware toolkit infrastructure seen bootstrapping mechanism encourage creative explore emerging applications area 
killer application cause widespread context aware computing 
killer existence able demonstrate coordinated intelligent interaction everyday activities computational services 

members computing environments fce group georgia tech continued influence development ideas context aware computing 
particular jennifer mankoff original insights lead analogy gui widgets context 
supported part national science foundation iri eia university partnerships research program motorola sponsorship dr ron 
information context toolkit described including gaining access research development please contact authors visit web page www cc gatech edu fce 


abowd atkeson hong long kooper pinkerton 

cyberguide mobile context aware tour guide 
acm wireless networks 

brooks iyengar 

multi sensor fusion fundamentals applications software 
st ed englewood cliffs nj prentice hall 

brotherton abowd truong 

supporting capture access interfaces informal opportunistic meetings 
technical report git gvu georgia institute technology gvu center 

brown 

stick document framework creating context aware applications proceedings electronic publishing austria ifip 

brown chen 

context aware applications laboratory marketplace 
ieee personal communications 

brumitt shafer krumm meyers 

easyliving role geometry ubiquitous computing proceedings darpa nist nsf workshop research issues smart computing environments 

dallas semiconductor 
ibutton home page 
available www ibutton com 

davies mitchell cheverst blair 

developing contextsensitive tour guide proceedings st workshop human computer interaction mobile devices 

dey 

context aware computing project proceedings aaai spring symposium intelligent environments 

dey abowd 

better understanding context context awareness 
gvu technical report git gvu gvu center 

dey abowd wood 

framework providing self integrating context aware services 
knowledge systems 

dey salber abowd 

conference assistant combining context awareness wearable computing proceedings rd international symposium wearable computers san francisco ca 

dey salber abowd 

context infrastructure smart environments proceedings st international workshop managing interactions smart environments dublin ireland appear 

fels sumi simonet mase 

progress map context aware mobile assistant proceedings proceedings aaai spring symposium intelligent environments palo alto ca aaai press 

franklin 

gadget representation jack dull environment proceedings aaai spring symposium intelligent environments 

harter hopper steggles ward webster 

anatomy context aware application proceedings th annual acm ieee international conference mobile computing networking mobicom acm press 

hertz 

available www hertz com serv prod lost html 

hull bedford roberts 

situated computing proceedings st international symposium wearable computers 

lamming flynn 

forget intimate computing support human memory proceedings proceedings friend international symposium generation human interfaces tokyo 

lau etzioni weld 

privacy interfaces information management 
communications acm 

mankoff abowd hudson 

interacting multiple alternatives generated recognition technologies 
technical report git gvu georgia institute technology gvu center 

pascoe 

adding generic contextual capabilities wearable computers proceedings nd international symposium wearable computers 

pascoe ryan morse 

human computer giraffe interaction hci field proceedings workshop human computer interaction mobile devices 

pinpoint 
pinpoint id 
available www com products products title htm 

rhodes 

wearable remembrance agent proceedings proceedings st international symposium wearable computers iswc cambridge ma ieee press 

rodden cheverst davies dix 

exploiting context hci design mobile systems proceedings workshop human computer interaction mobile devices 

ryan pascoe morse enhanced reality fieldwork context aware archaeological assistant computer applications archaeology exxon editors 


salber dey abowd 

context toolkit aiding development context enabled applications proceedings chi pittsburgh pa 

schilit adams want 

context aware computing applications proceedings st international workshop mobile computing systems applications 

schilit theimer 

disseminating active map information mobile hosts 
ieee network 

want hopper falcao gibbons 

active badge location system 
acm transactions information systems 

ward jones hopper 

new location technique active office 
ieee personal communications 

weiser 

computer st century 
scientific american 

