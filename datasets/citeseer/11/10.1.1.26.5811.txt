fast multi dimensional algorithm drawing large graphs michael goodrich stephen kobourov novel hierarchical force directed method drawing large graphs 
algorithm produces graph embedding euclidean space dimension 
dimensional drawing graph obtained projecting higher dimensional embedding dimensional subspace projecting high dimensional drawings dimensions results drawings smoother symmetric 
notable features approach utilization maximal independent set filtration set vertices graph fast energy function minimization strategy cient memory management intelligent initial placement vertices 
implementation algorithm draw graphs tens thousands vertices negligible amount memory minute mid range pc 
graphs common applications data structures networks software engineering databases 
typically small graphs drawn manually resulting picture best shows underlying relationships 
task drawing graphs hand challenging complexity graphs increases 
graph drawing tools focus graph drawing community decades see comprehensive reviews field 
numerous algorithms developed drawing special classes graphs trees planar graphs 
fewer general purpose graph drawing algorithms 
force directed methods methods choice drawing general graphs 
substantial interest force directed methods stems conceptual simplicity applicability general graphs aesthetically pleasing drawings 
exceptions existing automated systems trouble dealing graphs thousands vertices 
new algorithm allows drawing simple undirected graphs tens thousands vertices minute 
larger graphs displayed algorithm conjunction fisheye view multi level display algorithm allow accomodate graphs vertices number pixels display device :10.1.1.138.4574
ectiveness algorithms depends recursive clustering turn depends initial embedding graph 
creating embedding large graphs prohibitively expensive existing algorithms 
algorithm allows create excellent initial embeddings reasonable times 
key features algorithm intelligent initial placement vertices multi dimensional drawing simple recursive coarsening scheme fast energy function minimization space time ciency research partially supported nsf ccr aro daah 
department computer science johns hopkins university baltimore md department computer science johns hopkins university baltimore md department computer science university arizona tucson az rest organized follows section review previous dimensional drawing visualization large graphs force directed algorithms automated graph drawing 
section describe algorithm introduce maximal independent set filtrations intelligent placement vertices multi dimensional drawing 
section discuss possible modifications algorithm 
included drawings obtained grip layout system algorithm 
previous drawing dimensions majority graph drawing dimensional graph layout algorithms tools designed dimensional graph drawing 
additional degree freedom allows natural representations growing evidence shows human brain comprehend increasingly complex structures displayed objects dimensional space 
initial research dimensional information visualization applications begun 
existing dimensional graph drawing algorithms focuses algorithms special kinds graphs example algorithms cohen eades lin ruskey 
drawing general graphs force directed approach studied fruchterman reingold monien 
drawing algorithms include bru frick cruz 
context orthogonal drawings point drawing algorithms developed eades papakostas tollis 
orthogonal box drawings studied biedl multi dimensional orthogonal graph drawings wood 
visualization large graphs visualizing large graphs presents unique problems require non orthodox solutions 
drawings display entire graph advantage showing global structure graph 
large graphs drawings impractical limited resolution display devices details hard discern 
partially drawing graphs allows display larger graphs fails convey global structure 
approaches visualization large graphs particular interest fisheye views multi level displays 
fisheye views show area interest quite large detailed showing areas successively smaller detail 
multi level views allow view large graphs multiple abstraction levels 
natural realization multiple level representations drawing level drawn plane di erent coordinate clustering structure drawn tree 
multi level display algorithms introduced eades feng feng context visualization clustered graphs 
compound clustered graphs studied sugiyama misue north eades feng lin feng cohen eades 
creating graph clustering binary space partitions display large graphs introduced duncan goodrich kobourov 
quality resulting multi level drawings depends initial embedding graph plane 
algorithm allows create excellent initial embeddings reasonable times preprocessing step large graph layout methods 
force directed algorithms force directed placement algorithm quinn spring embedder eades practical algorithms graph drawing 
algorithm graph modeled physical system rings springs 
classical force directed methods start random embedding graph utilize standard optimization methods find minimum energy function choice 
characteristic feature force directed layout algorithms cost energy function assigns embedding graph euclidean space typically non negative number 
force directed methods premise minima main algorithm create filtration 
set scheduling function nbrs find vertex neighborhood 
find initial position pos repeat rounds times compute local temperature heat disp heat fn pos pos disp add edges creating vertex filtration setting scheduling function algorithm processes filtration set starting smallest 
pos point corresponding vertex rounds small constant 
refinement stage heat scaling factor displacement vector disp turn computed restriction vertices reasonably chosen energy functions produce aesthetically pleasing graph drawings 
main di erences force directed algorithms choice energy function methods minimization 
energy minimization algorithm kamada kawai uses newton raphson method improved drawings 
simulated annealing method davidson harel flexible algorithm 
fruchterman reingold slightly di erent heuristic results faster algorithm 
algorithms bru frick frick ludwig add notion local temperature speed drawing process 
force directed method draw graphs node labels shown gansner north 
main problem standard force directed algorithms inability draw large graphs 
best classical algorithms draw graphs maximum vertices 
computationally expensive graph algorithm standard approach associate graph hierarchy graphs 
needed computation done starting smallest graph hierarchy proceeding larger larger graphs stage results previous computation 
strategy brought area force directed graph drawing particle physics multi scale algorithm harel 
harel koren introduce simplifications algorithm resulting faster drawings allowing larger graphs 
beautiful drawings graphs vertices mark new chapter area force directed graph drawings 
underlying steps algorithm pairs shortest paths computed time space expensive 
binary heap implementation pairs shortest paths problem solved nm log time fibonacci heaps log nm time see 
quadratic space complexity incurred matrix distances vertices graph quickly obstacle drawing large graphs 
computationally expensive procedures include clustering procedure construction hierarchy graphs newton raphson optimization method scaling displacement vectors 
algorithm creates drawings newton raphson method extending considerably slows algorithm 
algorithm described section addresses problems introduces new features 
algorithm algorithm overview pseudo code algorithm seen fig 

stage create filtration set vertices graph set scheduling function nbrs 
detailed descriptions initial placement refinement hierarchy coarsened graphs cycle vertices initially placed vertices light vertices refined shaded 
filtration scheduling function nbrs sections respectively 
main loop runs levels filtration starting stage vertex find sets 
find initial position pos vertex neighborhood set nbrs closest elements method determining 
determining initial positions sections respectively 
refinement stage repeated rounds times rounds small constant 
refinement stage displacement vector disp set local kamada kawai force vector 
local means force vector fn computed vertex neighborhood vertices displacement vector scaled local temperature factor heat 
details process calculating heat section 
fig 
illustrates drawing stages algorithm cycle graph 
left column shows successive stages adding new vertices 
initial positions calculated positions nearest neighbors previous layer filtration right column shows positions newly added vertices change applying force directed method 
note vertices left column originally placed close eventual refined positions 
vertex set filtrations faced problem drawing large graph natural associate hierarchy graphs produce drawing starting smallest graph hierarchy drawing larger larger graphs stage previous drawing 
important properties hierarchy depth distribution vertices 
constant depth hierarchy implies go level constant fraction vertices added drawing old level insu cient placement new vertices 
hand linear depth hierarchy time consuming traverse 
logarithmic depth highly desirable 
ectiveness scheme dependent uniformity distribution vertices levels hierarchy 
hierarchy graphs thought containing di erent levels abstraction underlying graph 
uniform distribution vertices implies accurate levels abstraction turn implies better drawings level 
harel create hierarchy graphs cluster number degree number homotopic number 
harel koren simpler method create hierarchy graphs relies approximation centers problem 
algorithm begins producing example mis filtration 
underlying graph rectangular mesh size 
dark vertices included filtration 
standard maximal independent set maximal subset distances elements 
graph centers gc filtration 
set vertices graph constant 
cluster vertices closest center created center level 
set weighted edges computed elements weights correspond number edges elements corresponding clusters 
gc filtration edges forms hierarchy graphs 
gc filtrations created straightforward algorithm 
pick random element add find vertex farthest away vertices add continue process elements 
suppose find set keep adding elements farthest away completed graph centers filtration having proper graphs level necessary applications utilizing graph hierarchies context graph drawing save time space just filtration vertex set 
note filtration edges vertices 
pointed logarithmic depth uniform filtrations best graph drawing purposes 
developed tested specific filtration call maximal independent set mis filtration algorithm 
recall independent set graph elements connected edge equivalently independent set graph distance elements 
graph distance vertices defined length shortest path graph 
maximal independent set filtration family sets 
maximal subset graph distance pair elements see fig 

advantages mis filtrations gc filtrations 
number vertices sets case mis filtrations controlled geometry graph graph centers filtration sizes arbitrarily set user 
build mis filtration little time space graph centers filtrations require knowledge distances pairs vertices pairs shortest path serious time space bottleneck dealing large graphs 
mis filtrations constructed follows 
suppose constructed order independent set construct auxiliary set vertices draw elements take random element place remove elements graph distance equal distance factor important ensuring vertices distributed guaranteeing small depth filtration 
choose element remove chosen vertex vertices distance equal place repeat procedure empty 
note set produced procedure ordinary maximal independent set example maximal independent set filtration shown fig 

construction mis filtration stops level diameter mis filtration depth log 
mis filtrations provide excellent distribution vertices construction property needed high quality filtrations 
finding vertex neighborhoods key ideas hierarchical force directed graph layout method stage construction force directed position refinement method applied layer filtration locally 
precisely energy function gradient pos computed restriction neighborhood utilization filtration local position refinement strategy key means escaping quadratic lower bound space time complexity classical force directed methods 
section describes procedure constructing sets definition scheduling function nbrs 
intuitively stage hierarchical graph drawing strategy getting better better approximation final drawing graph 
ideally stage perform force directed local refinement position vertex graph take set adjacent vertices time complexity stage calculation average degree upper bound complexity calculations stage graph drawing construction 
set nbrs 
suppose logarithmic depth filtration set vertices calculation sets 
performed element added set placed vertices see fig 

require contains nbrs elements 

space complexity strategy bounded nbrs nbrs nbrs 
simplifications takes form nbrs 
similarly show exists positive constant equation greater storage complexity strategy finding 
kn 
bounded degree kn kn log gc filtration log mis filtration 
depth vertex depth respect largest sets 
created repeated application breadth search algorithm 
new vertex depth placed full 
process stops full 
note running time procedure bounded nbrs nbrs nbrs 
case expression equal nbrs 
similarly show exists positive constant equation greater time complexity strategy finding 

bounded degree log gc filtration log mis filtration 
initial placement new vertex shaded vertices placed 
vertices possible places graph distance 
vertices similar fashion results better placement initial placement vertices graph drawing algorithms placing vertices graph randomly plane 
algorithm adopted di erent approach add vertices current drawing time suitable place 
describe process dimensional space practice done euclidean space recall step algorithm compute filtration 

necessary modify sets filtration exactly elements start process drawing placing follows find triangle endpoints pos pos pos dist dist dist dist euclidean distance pos pos graph distance general refining positions vertices need find initial positions vertices vertices placed positions refined proceed level 
stage process continues vertices drawn 
natural way place new vertex placement graph distance new vertex closest neighbors placed 
base placement strategy simple idea 
suppose looking place new vertex furthermore suppose know vertices placed 
position vectors pos pos graph distances straightforward find position pos plane dist dist shown fig 

idea generalized placed vertices determine location new vertices 
vertex find closest neighbors see fig 

placed obtain suitable place solving system equations xw yw pos pos pos yw pos 
system equations determined may solutions solve pairs equations dist dist dist dist dist dist 
solving systems quadratic equations obtain di erent solutions 
choose closest call place barycenter pos see fig 

local temperature calculations common problem force directed algorithms determining scaling factor displacement vector phase 
clearly early iterations vertices move farther iteration coming schedule scaling displacement vector works graphs generally di cult 
reasons di culty initially vertices placed random result arbitrarily far final position 
result intelligent placement vertices algorithms problem 
local temperature heat simply scaling factor displacement vector disp particular implementation considered detail regardless specifics implementation time complexity updating local temperature constant total time complexity local temperature calculations linear 
multi dimensional drawing major advantages simple local temperature calculation newton raphson majority classical optimization methods works minor changes dimension 
order obtain embedding graph simply pos dimensional vector 
problem drawings dimensions higher trivially displayed 
obvious solution problem find projection consider case dimensional drawing projected dimensions 
projection method described generalizes higher dimensions 
random vector normalizing find vectors linearly independent find vectors repeatedly choosing random vector checking independent previous ones vectors 
gram schmidt orthogonalization process produce orthonormal basis vectors span dimensional subspace perpendicular vector orthogonal projection direction vector formula scalar product display screen opengl need coordinates projection respect basis vectors get simple scalar product calculation 
procedure easily generalizes higher dimensions 
find projection dimensional subspace need specify linearly independent vectors 
generalized projection directions complete basis 
gram schmidt orthogonalization process create orthonormal basis 
em vectors em em em form basis dimensional subspace coordinates orthogonal projection formula 
experiments dimensional drawings yield results noticeably di erent regular dimensional drawings 
particular note problems drawings bend directly fig 
better quality drawings graphs drawn projected fig 

strips vertices drawn directly 
note rough twists 
strips fig 
drawn projected 
note smooth twists 
space time complexity main theorem 
graph bounded degree gc filtration mis filtration set vertices time complexity algorithm constructing space required log gc filtration log mis filtration 
proof proof theorem follows fact building filtration parts algorithm take linear time space procedure finding 
element time space complexity algorithm determined time space complexity procedure finding section showed time required finding sets space required concludes proof 
novel algorithm drawing large graphs 
algorithm employs vertex filtration intelligent placement vertices fast energy minimization 
algorithm produces drawings higher dimensions sub quadratic time space 
algorithm works sparse graphs graphs low degree produce high quality drawings graphs 
particular connected graphs pose significant challenges vertex filtrations shallow 
biedl 
approaches orthogonal box drawings 
proc 
th int 
symp 
graph drawing gd volume lecture notes computer science pages 
springer verlag 
brandt 
multilevel computations integral transforms particle interactions oscillatory kernels 
computer physics communications 
brandt 
multigrid methods lattice field computations 
nucl 
phys 

proc 
suppl 
bru frick 
fast interactive graph visualization 
brandenburg editor graph drawing proc 
gd volume lecture notes computer science pages 
springer verlag 
cohen eades lin ruskey 
dimensional graph drawing 
algorithmica 
cormen leiserson rivest 
algorithms 
mit press cambridge ma 
cruz 
graph drawing simulated annealing 
brandenburg editor graph drawing proc 
gd volume lecture notes computer science pages 
davidson harel 
drawing graphics nicely simulated annealing 
acm trans 
graph 
di battista eades tamassia tollis 
algorithms drawing graphs annotated bibliography 
computational geometry theory applications 
di battista eades tamassia tollis 
graph drawing algorithms visualization graphs 
prentice hall englewood cli nj 
duncan goodrich kobourov 
balanced aspect ratio trees drawing large graphs 
proceedings th symposium graph drawing pages 
appear journal graph algorithms applications 
eades 
heuristic graph drawing 
congressus numerantium 
eades feng 
multilevel visualization clustered graphs 
proceedings th symposium graph drawing gd pages 
eades feng lin 
straight line drawing algorithms hierarchical graphs clustered graphs 
proceedings th symposium graph drawing gd pages 
eades 
algorithms dimensional orthogonal graph drawing 
north editor proc 
graph drawing gd lncs pages 
feng 
algorithms drawing clustered graphs 
phd thesis department computer science software engineering university newcastle apr 
feng cohen eades 
draw planar clustered graph 
procs 
st annual international conference computing combinatorics cocoon pages 
frick ludwig 
fast adaptive layout algorithm undirected graphs 
tamassia tollis editors graph drawing proc 
gd lncs pages 
fruchterman reingold 
graph drawing force directed placement 
softw 
pract 
exp 
furnas 
generalized fisheye views 
proceedings acm conference human factors computing systems chi pages 
kobourov 
grip graph drawing intelligent placement 
appear proceedings th symposium graph drawing 
gansner north 
improved force directed layouts 
lecture notes computer science 
garg tamassia 
advances graph drawing 
lecture notes computer science 
garg tamassia 
system visualizing hierarchical structures 
lecture notes computer science 
harel 
scale algorithm drawing graphs nicely 
proc 
th international workshop graph concepts computer science wg 
harel koren 
fast multi scale method drawing large graphs 
technical report mcs weizmann institute science rehovot israel 
kamada kawai 
automatic display network structures human understanding 
technical report department information science university tokyo 

simple algorithm drawing large graphs small screens 
graph drawing gd pages 
kobourov 
visualizing large graphs 
phd thesis johns hopkins university 
misue sugiyama 
overview diagram idea organizer 
research report rr fujitsu laboratories 
monien 
parallel simulated annealing algorithm generating layouts undirected graphs 
brandenburg editor graph drawing lncs pages 
north 
drawing ranked digraphs recursive clusters 
graph drawing proceedings international workshop graph drawing sept 

dimensional graph drawing algorithms 
master thesis dept comput 
sci univ newcastle newcastle australia 
papakostas tollis 
incremental orthogonal graph drawing dimensions 
di battista editor proc 
th int 
symp 
graph drawing gd lncs pages 
quinn 
force directed component placement procedure printed circuit boards 
ieee transactions circuits systems cas 
sarkar brown 
graphical fisheye views 
communications acm 
sugiyama misue 
visualization structural information automatic drawing compound digraphs 
ieee transactions systems man cybernetics 
ware hui franck 
visualizing object oriented software dimensions 
cascon proceedings 
wickens 
engineering psychology human performance 
new york harper collins 
wood 
multi dimensional orthogonal graph drawing small boxes 
proc 
th int 
symp 
graph drawing gd lncs pages 
springer verlag 

