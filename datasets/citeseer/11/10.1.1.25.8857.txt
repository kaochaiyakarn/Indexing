managing data quality integrity federated databases michael gertz department computer science university california davis shields avenue davis ca usa phone fax mail gertz cs ucdavis edu today organizations facing need integrate multiple previously independent semantically related information sources 
quality integrity data single information source problem issues problems regarding quality integrity integrated data mainly neglected approaches data integration 
studies show raises severe problems global applications depend reliability integrated data 
focus problems possible solutions modeling managing data quality integrity integrated data 
propose taxonomy data quality aspects includes important attributes timeliness completeness local information sources 
federated database approach describe data quality aspects modeled metadata database integration 
metadata employed specify data quality related query goals global applications dynamically integrate data component databases storing data different quality 
concepts treating data quality integrity class concept metadata model global query language 
keywords database integration federated databases data quality data integrity metadata dynamic data integration order stay competitive rely accurate complete information enterprises federal agencies facing need integrate previously independent semantically related information sources globally accessible systems 
integration approaches typically multidatabase federated database systems see sheth larson bright kim 
applications built top 
published chapman hall managing data quality integrity federated databases systems include data warehouses decision support systems hospital information systems environmental information systems studies reports show applications particular data warehouses experience problems regard reliability integrated data kimball bischoff alexander jarke vassiliou 
main reason component databases participating federation contain incorrect poor quality data 
quality integrity integrated data worse suitable methods techniques modeling managing issues employed 
past decade significant amount literature database integration published 
proposed approach focus problem resolving structural semantic conflicts heterogeneous component database 
overview problems proposed solutions see kim seo spaccapietra sheth kashyap kim 
minor part literature discusses handle integrity constraints data integration mainly connection resolving structural semantic conflicts reddy apers conrad 
claim practical point view traditional notion data integrity semantic correctness stored data plays minor role regard reliability integrated data 
typical problems occur integration level prevented traditional integrity maintaining methods data quality problems data integrity problems 
example aspect outdated expired data integration level referred data integrity problem 
exists formalism technique prevent integration outdated data 
similar assumption accuracy completeness data integration level 
exist data integrity concept covers aspects database integration 
key issues assumptions database integration approaches contribute fact poor quality integrity data integration level 
existing approaches assume data stored component databases high quality correctness 
considering individual true data site sufficient local applications 
example outdated data may sufficient local application cdb cdb contain date data 
similar scenarios concerning completeness accuracy data aspects considered existing data integration approaches 
strong need modeling aspects 
modeling approach leads problem 
existing data integration techniques assume schematic semantic conflicts resolved statically giving unique schemas global relations asso federated database approach ciated data integration rules 
true schematic aspects data stored different component databases typically change time 
example component database may date data certain days week 
integrate data different quality integrity static manner fixed set data integration rules 
aspects raise question model manage represent different data quality integrity aspects database integration 
describe observations preliminary results studying different aspects data quality integrity federated databases 
main idea treat data quality class concept data integration approaches querying integrated data 
taxonomy time varying data quality aspects aspects modeled suitably metadata integration level 
global applications designer specify data quality goals global queries applications global query processor suitably decomposes global queries subqueries retrieved data quality 
ensures data different quality combined joined 
information quality retrieved data represented integration level providing global users suitable means cope incorrect poor quality data 
organized follows section outline main concepts techniques federated database scenario important approach 
section motivate distinction data quality data integrity taxonomy data quality show data quality aspects modeled metadata database integration 
usage metadata include information local integrity constraints discussed section 
concluding remarks section 
federated database approach approach manage data quality integrity multidatabase environment adopt schema system architecture federated database systems described sheth larson 
assume global integrated database schema provides users applications integrated view local databases schemas export schemas 
discussions relational data model global data model simple structure 
approach easily adopted object oriented model 
basic components federated database system federation layer called integration level see 
depending type global applications layer database system providing global data model schema integration metadata repository capturing information related integration process global query language processor 
query processor utilizes metadata map queries managing data quality integrity federated databases global schema sub queries component databases discussed detail section 
global applications read applications data warehouses components sufficient build federation layer 
data modifications global applications additionally require global transaction manager breitbart considered 
query processor metadata global application global application global application cdb cdb dbms dbms dbms transaction manager 
integrated local schemas schema global component federation layer component databases integration level schema system architecture federated database system major task integrating data different autonomous possibly heterogeneous database systems detect correspondences elements component schemas resolve possible conflicts batini sheth larson kim 
conflicts arise due various heterogeneity databases participating federation ranging technological discrepancies software hardware schematic semantic heterogeneity 
type conflicts resolved suitable protocols wrappers type conflicts difficult cope major concern database research community bright litwin sheth kashyap kim 
schematic semantic heterogeneity stems ability component databases choose design including data model query language naming data relations attributes particular semantic interpretations data attribute values 
past decade significant amount literature discussing methods resolving schematic semantic conflicts published 
methods focus naming conflicts homonyms synonyms particular semantic data conflicts modeling information different ways kim seo rusinkiewicz spaccapietra 
data quality integrity database integration essential approach manage data quality integrity federated databases fact approaches resolving schematic semantic conflicts static conflict resolution particular data integration rules 
semantic conflicts data stored component databases detected resolved specifying suitable conflict resolution rules views metadata repository 
rules include relation attribute renaming joining local relations data conversions different scales measurements 
restructuring local relations federation layer component schemas form easily integrated building union restructured local relations contain similar related data 
views build elements global database schema views visible global users applications 
decomposing global queries views global query processor employs data integration conflict resolution rules recorded metadata repository 
data quality integrity database integration section investigate distinction notions data quality data integrity examine underlying concepts influence traditional database integration approaches 
show section aspects referred data integrity basically data quality aspects 
section show identify describe different data quality aspects database integration 
turns neglecting aspects major impact reliability integrated data 
section describe proposed data quality integrity aspects modeled integration metadata allowing designers global applications query processor treat aspects class concepts integration level 
data integrity data quality information key organizational resource companies federal agencies concerned quality data manage applications 
past years significant amount literature focusing data quality published ranging defining frameworks data quality aspects wang strong data quality improvement strategies called total data quality management wang 
essential problem data quality management lack precise definitions data quality making difficult automatically prevent detect poor quality data 
apparently problem data integrity semantic correctness data stored database managing data quality integrity federated databases specified means logic formulas tuple relational calculus 
specifications integrity maintaining mechanisms triggers easily derived grefen apers ceri widom 
opinion main difference data quality traditional notion data integrity data integrity concerns data stored database 
contrast data quality additionally relates data stored database fitness 
data quality refers applications portion real world modeled database 
fact important requirements refer data integrity simply specified integrity constraints database schema 
example model maintain requirement data stored database complete regard information real world 
exists mechanism forces user payroll office enter information employees 
case traditional integrity constraints address semantic correctness information stored employees 
typical integrity constraints focusing completeness information require defined attribute values data records preventing null values describe foreign key conditions assuming portion relevant information stored 
prominent example referred data integrity problem database contain date data 
exists concept formally specify requirement prevent storing outdated expired data 
simple examples show order ensure reliable data need new concepts techniques extend traditional notion data integrity correctness 
expect high quality data data satisfy integrity constraints 
new concepts rich deal total integrity sheth 
exist precise definition data quality dimensions frequently analyze data quality aspects considered 

accuracy describing precise accurate real world information mapped local data structures exact versus approximate values 

completeness meaning real world information relevant applications recorded database 

timeliness referring fact recorded information date expired 
note order prevent incorrect data dimensions uses concepts store validity interval data done temporal databases 
wang strong survey lists data quality attributes suggested various data consumers 
data quality integrity database integration specified formally database difficult maintain 
centralized database system detection data satisfying dimensions occurs accidentally retrieved data compared information 
intuitive notions approach furthermore add dimension consistency data quality aspects 
aspect refers traditional notion data integrity typically centralized database systems 

consistency requiring data stored database satisfy integrity constraints specified database 
dimension data consistency data quality maintaining mechanisms exist 
regard dimensions cope incorrect poor quality data additional concepts described sections allow identify manage data 
data quality data integration reports usage integrated data particular data warehouses decision support systems show quality integrated data causes major problems regarding reliability information obtained database federations 
reason quality integrity data issue single centralized database systems users applications know data know manually cope inconsistencies poor quality data 
data having poor quality integrity detected usage data changes 
exactly scenario happens data integrated multiple database systems order fulfill requirements new global applications 
section concept allows detect handle poor quality data data integration 
rationale concept difficult detect incorrect poor quality data centralized databases data integration quality data compared 
comparisons typically performed semantic data conflicts component databases containing semantically equivalent data resolved 
existing approaches data integration sketched section handle conflicts static manner 
unique conflict resolution rule specifies data integrated 
see data conflicts unique data integration rules correctness quality data changes time 
example suppose relations different component databases store environmental data 
relations named pollution contain data quantity toxic material recorded different managing data quality integrity federated databases regions 
assume relations restructured ready integrated global relation pollution 
pollution cdb region area quantity pollution cdb region area quantity order define data integration rule relations obviously data conflict resolved due different quantities recorded regions 
data integration approaches suggest conflict resolution function global relation quantity area average values recorded area cdb cdb 
assume scenario get information local stating cdb updated cdb updated 
reason relation integration compute average data values 
fact relations considered integration date global query issued determines relation select date information 
unique integration rule ensuring retrieval upto date data data change time 
example suppose third component database cdb restructured relation pollution cdb region area quantity null null comparison relations cdb cdb third relation contains accurate information 
data integration approaches consider relation integration 
argue relation included case cdb cdb reachable federation level possible access information quality 
data quality integrity database integration mentioned reason integrating relations suitable manner users interested rough information 
corresponding language constructs provided global query language relation pollution cdb sufficient satisfy requests 
importantly queries processed efficiently relation contains aggregate data 
data volume regarded useful data quality aspect 
examples exhibit kind data conflicts leading observations 
quality integrity data individual component database high concerning integrated global view data quality integrity poor 

semantic data conflicts resolved statically specifying unique data integration rules federation design time dynamic data stored component databases 
cases static rules induce varying data quality integrity integration level 

integrating poor quality data data integrity second example better integrating data 

depending data requested global applications integrating poor quality data decrease query processing cost 
observations important question data integration rules look presence data having time varying quality 
data quality course traditional integration rules adopted 
example assuming relations example contain data quality global relation pollution global simply described data integration rule pollution global pollution cdb 
case differences quality data roughly speaking integrate data relations general integration rule pollution global pollution cdb pollution cdb pollution cdb 
essential difference traditional approaches data integration integration rules extensions relations integrated disjoint overlap 
furthermore building union relations suggested approach requires different approach processing precisely decomposing global queries refer pollution global 
discuss aspect detail section 
describe different data quality aspects modeled integration level discuss suitable strategies handling integration integrity constraints may exist component databases 
despite detailed managing data quality integrity federated databases proposal handle integrity constraints database integration reddy apers conrad consensus optimal strategy designing deriving global integrity constraints 
extremes range consider integrity constraints suitable global read applications integration restrictive integrity constraints 
argue proposed approaches fulfill practical needs cope absolute integrity 
example considering information component database satisfy global integrity constraints prevents integration useful information 
instance tuples relation stored cdb satisfy simple global domain constraint tuples may carry useful information considered integration 
requires suitably model aspect integration level 
aspect explicit handling integrity constraints global query processing usage data scrubbing discussed section 
modeling data quality order suitably model data quality integrity aspects discovered conflict resolution data integration additional constructs provided integration level precisely metadata repository 
additional metadata record respective information information accessible global applications query processor 
data quality integrity aspects just attributes associated component databases stored information difficult simply assign discrete values sites information complete complete complete 
shown previous section quality aspects detected comparing information 
order model aspects define set fq basic quality dimension accuracy availability completeness reliability timeliness data volume note regard quality aspects listed section added dimensions relevant information accessed federation 
suggest dimension reliability dimensions accuracy completeness timeliness applied 
respect reliability considered generalization dimensions course possible included depending properties usage integrated data 
comparisons data quality occur different levels granularity compare relations different 
assume data quality comparisons regard quality dimension data quality integrity database integration occur information units granularity 
different types granularity consider component databases relations selected tuples relation determined selection oe projections attributes selected tuples 
different types assume function origin applied information unit returns name cdb unit contained 
example origin cdb cdb origin cdb cdb 
show function useful query origin poor quality data retrieved global query 
comparisons data quality semantically related information units having granularity defined follows definition gran denote granularity information unit gran fc ag 
semantically related information units gran gran data quality comparison regard quality dimension denoted theta theta meaning theta called quality statement quality information represented higher theta equal theta quality information represented wrt quality dimension data quality comparisons semantically related information units say relations share attribute specified formally 
said date time point iff contains tuples updated important note knowledge necessary determine quality statements derived information profiles 
profiles associated information units granularity describe information processing techniques employed map real world data local data structures maintenance data 
coarsest information unit quality comparison applied finest granularity determined attributes selected tuples stored relation cdb 
tuples attributes describing require selection condition projection 
expect information units quality dimensions quality aspects known compared take assumptions 
assumptions quality statement theta gran gran assume information units finer granularity origin origin origin origin quality statement theta holds 
exceptions assumption specified explicitly theta quality statement theta semantically related information units different having granularity assume quality statement managing data quality integrity federated databases regard specified induced exceptions information units quality wrt different specified explicitly regard 
mentioned special cases different quality attributes 
example quality dimension availability associated coarsest information units component databases 
assumption useful order specify data stored component database general complete data cdb 
property automatically inherited relations 
certain relations allow exceptions specified explicitly 
set quality statements set component databases associated information units finer granularity satisfy certain properties 
definition set quality statements correct iff exists contradiction explicitly specified quality statements complete iff information unit considered explicit implicit quality statement 
assumption ensures completeness quality statements state handle information units quality 
assume component databases cdb contains relation integrated global relation furthermore suppose quality statements cdb cdb cdb cdb 
due cdb cdb cdb cdb 
relations related relations cdb cdb cdb regard require designer federation solve cases connecting cdb cdb relations quality statements 
appropriate approach consider cdb cdb separate class handled appropriately query processor see 
discussed earlier shown example quality data may change time advances 
quality statements describe static properties data quality 
reason allow quality statement temporal condition tc associated 
temporal condition essentially describes validity interval specifies quality statement theta holds 
sake simplicity assume validity interval described start date set explicit dates 
temporal condition specified assume theta holds 
useful complex specifications validity intervals course investigated 
context useful associate time interval single information unit leading similar concept temporal databases 
including temporal query processing conditions requires extending notion complete correct set quality statements trivial discussed 
example assume relations discussed example 
specification quality statements look follows pollution cdb cdb cdb accuracy cdb cdb cdb completeness cdb cdb timeliness tc day monday thursday saturday cdb cdb timeliness tc day tuesday friday sunday cdb cdb cdb availability cdb cdb cdb data volume complete formal specification language formulate quality statements temporal conditions obvious complete formalism easily developed respective specifications represented metadata repository 
interestingly correctness completeness quality statements considered integrity constraints imposed respective metadata 
final step modeling data quality aspects consists handling local integrity constraints specified global data model 
take pragmatic approach think appropriate global applications access integrated data modify data 
assume component database set local integrity constraints specified 
practice constraints turn quite simple mainly restricted domain foreign key constraints 
definition constraint names global relations constraint affects recorded metadata repository 
information integrity constraints associated component database derived combination conflict resolving rules recorded 
discussions section show metadata repository plays important role database integration task 
information related data quality data integrity aspects recorded metadata addition conflict resolving data integration rules 
query processing federated database approach global schema employed submit global query 
objects global schema transparent user user unaware component databases data integration rules encoded metadata 
metadata global query processor decomposes global query global subqueries managing data quality integrity federated databases data needed subquery available cdb 
global query processor translates global subquery queries corresponding cdb combines results returned subqueries 
detailed discussion query processing federated multidatabase system refer reader meng yu 
presence different data quality aspects encoded metadata quite obvious global queries simply decomposed solely prespecified unique data integration rules 
assume example global relation pollution global defined integration rule pollution pollution cdb pollution cdb pollution cdb see example want issue query select region sum quantity pollution global group region integration rule get erroneous result 
expect 
general strategy want high quality data 
data integration rules exclude time varying poor quality data 
provided suitable language constructs global query language interested data include data different quality 
case get multiresolution query 
example get sets tuples set suitably represented reflect differences quality result case outdated accurate data indicated 
set quality statements including temporal conditions problem global query processing reduced issues 
tuples attributes having different quality simply combined union operator 
tuples having different quality joined possible join outdated expired data tuples date data 
suggest preliminary concept conservative approach problems 
assume main usage integrated data ad hoc queries applications having defined quality requirements regard data retrieved 
assume typical global queries simple contain complex subqueries 
different global applications may different requirements concerning quality integrated data applications 
encode requirements explicitly numerous data integration rules tailored certain applications global queries global relations enriched data quality conditions 
conditions specified designer employs quality statements encoded metadata repository semi transparent fashion 
suggest extension global query language say query processing sql quality predicates 
predicates specify data quality goal global query shown general pattern select list attributes 
list global relations 
sql selection condition 
goal list data quality goals goal list data quality goals designates primary data quality goal goal secondary data quality goal 
simple goal date accurate complete reliable 
consider example primary goal date refers timeliness integrated data 
case global relation query processor reduces corresponding general data integration rule integration rule considers date local relations build time point query issued 
information date local relations easily determined quality statements associated temporal conditions 
local relations satisfy specified goal relations chosen satisfy secondary goal best 
allow temporal conditions quality statements information units relations considered integration rule satisfy conditions 
data quality specific data integration rules generated dynamically general integration rules consider data quality aspects 
example assume global query referring global relations quality statements referring accuracy integrated data 
data quality goal accurate query processor reduces general data integration rules case quality statements accuracy local relations original data integration rules chosen include duplicate elimination 
query language constructs retrieve data satisfying specified query goal provided order compare data different quality determine poor quality data origin 
assume global relation specified quality statements referring completeness 
information relation consists groups data having different quality easily represented designer 
global query language furthermore provide designer language constructs retrieve data data belong groups 
provided respective language constructs exist designer retrieve groups separately specify select statements retrieve tuples occur specified groups 
basic idea concept designer possibility compare quality aspects integrated data federation level 
information obtained managing data quality integrity federated databases aspects leads formulation global queries global applications 
conclude section discuss integrity constraints considered integration level global applications 
suggest employ local integrity constraints formulated global data model filter tuples retrieved global queries 
assuming constraints specified simple restricted domain foreign key constraints sophisticated techniques data scrubbing developed 
assume example designer wants retrieve data global relation quality statements exist 
provided suitable tools federation layer information existence integrity constraints affecting relation displayed designer 
recall information integrity constraints recorded metadata needs represented suitably 
designer select constraints impose constraints original query 
query result result tuples violating selected constraints highlighted certain coloring schema 
query result reduced tuples violate selected constraints designer investigate origin tuples 
query processor provide information integration data local relations build global relation knowing origin tuples violate integrity constraints lead improvements data quality integrity local component databases 
examples discussions show sophisticated global query processing concepts possible sketched 
development complete query language precise semantics associated efficient query processing techniques subject research 
main idea data quality query processing outlined quite obvious data quality aspects consideration query formulation query processing semi transparent designer 
designer responsible reducing general data integration rules certain unions local relations 
designer aware fact global relation contains data different quality 
information provided query interface build global views retrieve data satisfying certain quality goals 
views associated different global applications 
applications existence data having different quality totally transparent 
depending type applications possible represent different data quality integrity aspects suitable fashion 
outlined framework modeling managing data quality integrity aspects database integration 
particular motivated existing approaches data integration typically fail address issues assumption conflict resolution data integration rules static nature 
shown means examples aspects outdated incomplete data dynamic nature 
introduced taxonomy data quality integrity aspects specify time varying statements data quality components databases relations federation design time 
respective information stored federation metadata repository employed designer specify data quality goals global queries query processor dynamically build data integration rules general ones tailored specified data quality goals 
research want address issues ffl complete formal specification data quality statements incremental modeling approach 
issue important expect designer detect specify data quality aspects federation design time 
appropriate investigate deficiencies data quality reported global users record corresponding information metadata repository 
lead incremental data quality improvement strategy 
ffl extension global query language sql allows users designers formulate different query goals represent retrieved data having different quality suitable manner 
representation techniques multiresolution queries need developed 
extension global query language includes defined syntax semantics data quality data integrity related language constructs 
ffl efficient query processing techniques tailoring general data integration rules rules integrate data satisfying data quality goal specified global query 
convinced role data quality database integration addition data integrity needs attention order ensure correct meaningful integrated data 
traditional assumption data conflicts outdated data incorrect data multiple information sources resolved unique data integration rules mainly fails 
main reason todays database applications data typically change time inconsistencies data quality properties dynamic nature 
managing data quality integrity federated databases bischoff alexander data warehouses practical advice experts 
prentice hall 
bright hurson taxonomy current issues multidatabase systems 
ieee computer march 
batini lenzerini navathe comparative analysis methodologies database schema integration 
acm computing surveys december 
breitbart molina silberschatz transaction management multidatabase systems 
kim 
conrad saake schmitt schema integration integrity constraints 
small douglas johnson king martin eds advances databases th british national conf 
databases lecture notes computer science springer verlag berlin 
ceri widom deriving production rules constraint maintenance 
mcleod sacks davis schek 
eds proceedings th international conference large data bases morgan kaufmann publishers 
dogac multidatabase query optimization 
distributed parallel databases 
grefen apers integrity control relational database systems overview 
data knowledge engineering 
jarke vassiliou data warehouse quality design review dwq project 
invited proc 
nd conference information quality 
massachusetts institute technology cambridge 
kim modern database systems object model interoperability acm press new york 
kimball dealing dirty data 
dbms magazine september miller freeman 
kim choi resolving schematic heterogeneity multidatabase systems 
kim 
kim seo classifying schematic data heterogeneity multidatabase systems 
ieee computer december 
litwin mark roussopoulos interoperability multiple autonomous databases 
acm computing surveys 
meng yu query processing heterogeneous environment 
kim 
rusinkiewicz extending multidatabase manipulation language resolve schema data conflicts 
meersman mark eds database applications semantics proceedings sixth ifip tc working conference data semantics ds chapman hall london 
data quality information age 
artech house boston ma 
reddy prasad gupta formulating global integrity constraints derivation global schema 
data knowledge engineering 
sheth pragmatics driven research issues data process integrity enterprises 
jajodia mcgregor list eds integrity control information systems chapman hall london 
sheth larson federated database systems managing distributed heterogeneous autonomous databases 
acm computing surveys 
sheth kashyap far schematically 
near semantically 
hsiao neuhold sacks davis eds interoperable database systems ds north holland amsterdam netherlands 
spaccapietra parent dupont model independent assertions integration heterogeneous schemas 
vldb journal 
apers role integrity constraints database interoperation 
buchmann mohan eds vldb proceedings th international conference large data bases sept bombay morgan kaufmann publishers 
wang product perspective total data quality management 
communications acm 
wang strong accuracy data quality means data consumers 
journal management information systems 
wang storey firth framework analysis data quality research 
ieee transactions knowledge data engineering august 
biography michael gertz assistant professor computer science university california davis 
received diploma degree computer science university dortmund germany ph degree computer science university hannover germany 
research interests design implementation multidatabase systems 
current research database integration techniques database interoperability constraint maintenance multidatabase systems integrity enforcement temporal databases 
research interests include design user interfaces database systems database tools 
