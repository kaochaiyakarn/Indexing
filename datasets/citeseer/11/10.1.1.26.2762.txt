support graph preconditioners marshall bern john gilbert bruce hendrickson nguyen toledo 
little known preconditioning technique called support graph preconditioning analyze classes preconditioners 
technique described talk pravin vaidya formally publish results 
vaidya technique devise analyze class novel preconditioners 
technique extended gremban miller development analysis class new preconditioners 
extends technique uses analyze classes existing preconditioners modified incomplete cholesky multilevel diagonal scaling 
contains presentation vaidya preconditioners previously missing literature 


presents new applications little known technique constructing analyzing preconditioners called support graph preconditioning 
technique proposed pravin vaidya described talk publish 
vaidya technique design family novel preconditioners 
gremban miller zagha extended technique construct family preconditioners 
explains technique extends uses analyze classes known preconditioners model problems 
specifically extended technique analyze certain modified incomplete cholesky preconditioners see multilevel diagonal scaling mds preconditioners see example 
principle goal bring techniques attention wider community researchers 
doing hope encourage promising area 
primary original content analyzing known preconditioners support graph technique serves purposes 
analysis preconditioners establishes bounds proved 
second shows technique widely applicable previously appreciated 
third feel new proofs provide useful insights preconditioners insights improve preconditioners guide heuristics construction additional preconditioners 
secondary goal provide complete presentation support graph technique vaidya preconditioners 
vaidya important contribution published 
theory uses gremban phd thesis vaidya preconditioners described published form 
seek rectify situation 
complete presentation support graph technique necessary important portions research supported part darpa contract number dabt nsf contract number asc 
hendrickson nguyen supported applied mathematical sciences program doe office energy research performed sandia national labs operated doe contract 
de ac 
toledo partially supported israel science foundation founded israel academy sciences humanities number number university research fund tel aviv university 
preliminary version copper mountain conference iterative methods copper mountain colorado march april 
xerox palo alto research center 
sandia national laboratories 
stanford university 
tel aviv university 
part research performed toledo xerox palo alto research center theory missing gremban thesis 
specifically formal proof congestion dilation lemma state stronger versions important lemmas 
provide detailed constructions complete proofs vaidya preconditioners missing manuscript 
support graph technique analyzes preconditioner matrix splitting am bm 
proving bi ai positive semidefinite shows positive semidefinite largest finite generalized eigenvalue matrix pair bounded 
bound smallest generalized eigenvalue proved bounding largest eigenvalue way 
splittings guided underlying graphs allows reduce complex problem problems simple structures 
main parts 
part describes support graph theory 
second part describes preconditioners vaidya gremban miller 
third part describes support graph analysis mds preconditioners 
research 

summary results 
subsection summarizes results 
start brief discussion strengths weaknesses preconditioners vaidya gremban miller 
discuss significance condition number estimates mds preconditioners 
vaidya proposed classes preconditioners 
class maximum weight spanning tree preconditioners guarantee condition number bound sparse diagonally dominant symmetric matrices 
constructed factored insignificant cost relatively simple graph algorithms 
vaidya second class preconditioners maximum weight spanning trees augmented extra edges 
constructed insignificant cost slightly complex algorithm class 
cost factoring preconditioners depends edges added tree 
vaidya proposes factorization cost balanced iteration costs provides balancing guidelines classes matrices 
class preconditioners guarantees linear solver bounded sparse matrix matrices underlying graphs planar 
strengths vaidya preconditioners especially second class general easy construct provide condition number bounds 
example required solve model poisson problem vaidya preconditioner 
compares favorably required solver modified incomplete cholesky 
coupled facts vaidya preconditioners guaranteed irregular problems numerical assumption matrix matrix impressive results 
main weaknesses vaidya preconditioners require highquality direct solver factor preconditioner balancing costs iteration costs may nontrivial task guaranteed parallelize 
preconditioners gremban miller proposed multilevel preconditioners 
hierarchical partitioning matrix may quite expensive construct 
cost preconditioning iteration small preconditioners parallelize 
condition number preconditioned system similar model problems condition numbers offered modified incomplete factorizations 
model problems preconditioners offer convergence rates multilevel preconditioners multigrid preconditioners 
hand guaranteed parallelize may preferable incomplete factorizations computers 
gremban miller condition number bounds important classes matrices regular grids constant coefficients 
problems preconditioned systems condition number bounds log 
proofs condition number bounds modified incomplete factorizations novel significant 
show condition number model laplace problem dirichlet neumann mixed boundary conditions 
bound model problem holds dirichlet case mixed boundary condition cases 
best knowledge bounds diagonal perturbation 
proofs relatively simple requiring elementary linear algebra 
condition number bound multilevel diagonal scaling preconditioner dimension log analysis difficult generalize realistic problems 
provides purely algebraic insight preconditioner works 

basic support graph theory 
section describes basic tools vaidya gremban miller developed analyze preconditioners 
preconditioners matrices symmetric diagonally dominant matrices nonpositive diagonals 
vaidya gremban miller extended results symmetric diagonally dominant matrices mixed diagonals 
extensions specific preconditioners propose extensions preconditioners described 
extensions 
number iterations conjugate gradient method solution systems linear equations ax bounded square root spectral condition number 
actual number iterations significantly smaller cases 
condition number ratio extreme eigenvalues max min 
conjugate gradient method solve consistent linear systems singular coefficient matrix basis null space known 
cases number iterations proportional square root ratio extreme positive eigenvalues 
preconditioner conjugate gradient method number iterations proportional square root ratio extreme finite generalized eigenvalues pair defined 
definition 
number finite generalized eigenvalue matrix pencil exists vector ax bx bx 
denote set finite generalized eigenvalues 
henceforth refer eigenvalue matrix pencil mean finite generalized eigenvalue 
bound amount preconditioned conjugate gradient method need bound finite eigenvalues 
need prove bounds upper bound max lower bound min 
prove upper bound directly lower bound proving upper bound max min 
need show prove upper bounds lower bound proved essentially way matrix pencil 

support lemma bounding eigenvalues matrix pencils 
main tool bound called support smallest number positive semidefinite 
informally think number copies required support action small supports large supports weakly 
denote support min positive semidefinite positive semidefinite take 
lemma shows support pencil bounds eigenvalues 
lemma implicitly vaidya proof 
gremban states lemma gives proof lemma 
state weaker hypothesis gremban strong gremban proof 
general version lemma axelsson theorem 
lemma support lemma 
positive semidefinite null null 
pairs matrices finite support 
negative eigenvalue 
lemma shows bound extreme eigenvalues cases 
pair matrices finite support support lemma tight 
lemma 
finite proof 
matrix zero eigenvalue eigenvalues continuous 
vector ax bx support lemma prove upper bound proving positive semidefinite 
rest theory consists tools prove matrix positive semidefinite 

splitting lemma proving decomposition 
way prove matrix positive semidefinite split sum matrices prove term positive semidefinite 
lemma implicitly vaidya stated proved gremban thesis lemma 
lemma splitting lemma 
qm 
qm positive semidefinite 
positive semidefinite 
splitting lemma reduce problem preconditioning symmetric diagonally dominant matrices problem preconditioning symmetric matrices zero row sums 
lemma 
symmetric diagonally dominant matrix matrix diagonal entries zero row sums 
preconditioner positive semidefinite 
preconditioner diagonal entries row sums 
positive semidefinite 
proof 
terms sum positive semidefinite hypothesis second nonnegative scalar multiple diagonal matrix nonnegative entries 
similarly positive semidefinite 
conditions limit applicability lemma condition number 
scale changing bound condition number preconditioned system 
lemma assume zero row sums 

congestion dilation lemma splitting paths graph 
vaidya gremban miller split special way prove positive semidefinite 
assume symmetric 
symmetric matrix define underlying graph 
definition 
underlying graph ga va ea symmetric matrix weighted undirected graph vertex set va 
edge set ea ai 
weight edge ai weight vertex sum elements row ga undirected weighted graph underlying gb graph underlying zero row sums graph structure edge weights determine matrices exactly vertex weights 
diagonal elements negative edge weights ga gb positive 
vaidya gremban miller interpret graphs resistive networks edge weight conductance resistor 
split bm am ai corresponds exactly edge ga bi corresponds simple path gb 
ai bi nonpositive diagonals zero row sums 
ai represents entire weight edge corresponding bi represents path contain fractions edge weights 
endpoints path represented bi endpoints edge represented ai 
example splitting fig 

graph representation splitting ai represents single edge bi path supports edge ai 
splitting proves worst congestion dilation product 
shown 
vaidya gremban miller congestion dilation lemma state prove show term bi ai positive semidefinite 
prove congestion dilation lemma steps 
lemma 

matrices 
kb positive semidefinite 
proof 
prove kb positive semidefinite showing matrix kb positive semidefinite 
show induction positive semidefinite performing symmetric gaussian elimination rows columns 
inductive claim eliminate row column eliminate matrix ik 
claim true eliminate row column case 
assume claim true eliminate elimination row column modifies entries ci ci 
new values ci proves inductive claim eliminate row submatrix consisting row column remainder matrix positive diagonal positive semidefinite 
combinatorial interpretation lemma represents single edge weight represents path endpoints consisting edges weight lemma states support dilation edge path simply length path 
lemma slightly general 
lemma 

matrices 
positive semidefinite 
proof 
case reduces scaling lemma 
lemma states general case weight edge represented weight edges path represented support dilation multiplied ratio edge weights 
state prove full congestion dilation lemma 
lemma congestion dilation lemma 

matrix bk dk bk bk dk matrix zero row sums di bi min bi positive semidefinite 
proof 
min bi 
split bk dk bk bk dk matrix symmetric diagonally dominant nonpositive diagonals positive semidefinite 
min bi term positive semidefinite positive semidefinite second term positive semidefinite lemma 
sum positive semidefinite 
combinatorial interpretation congestion dilation lemma min bi congestion edge represented path represented dilation edge 
example depicted congestion edge path dilation example 
proof shows congestion dilation bound min bi tight edges path weights extreme edge small weight rest large weights actual support closer 
support splitting congestion dilation lemmas tools vaidya uses construction 
matrix vaidya constructs preconditioner underlying graph gb consists subset edges ga set vertices 
vaidya uses lemmas bound condition number preconditioned system 
splits gb paths support edge ga gb subset ga ga supports edges gb paths length congestion small eigenvalue 
bound vaidya obtains worst congestion dilation product edges ga specific constructions vaidya proposes described 

clique star lemma 
gremban miller introduce way bounding support simple matrix 
matrix supported represents fully connected subgraph clique size supporting matrix represents edge star endpoints coincide members clique 
lemma clique star lemma 

kb 
matrices 
positive semidefinite 
proof 


step symmetric gaussian elimination row column matrix 
clearly positive semidefinite 
positive semidefinite 
lemma provides stronger bound support bound results splitting clique edges star edge paths support edges 

gaussian elimination generalized support preconditioning larger space 
gremban miller construct preconditioners space higher dimension graph vertices original matrix 
introduced linear algebra tools support graph theory deal 
lemma stated stronger hypothesis gremban lemma shows invariant non singular transformations applied lemma 
nonsingular matrices necessarily symmetric define generalized support min ax bx roughly speaking measures supports outside null spaces 
gremban lemma similar tailored precisely technique 
state prove general case stronger version support lemma 
lemma 
symmetric positive semidefinite 
proof 

note assumption implies 
assume contradiction 
eigenvector corresponding 
ay 
definition 
ay contradiction 
ay zero 
definition symmetric positive semidefinite 
contradiction 
lemmas allow preconditioner space higher dimension original matrix 
embed original matrix matrix order preconditioner 
congestion dilation arguments directly bound underlying graph disconnected vertices paths support edges lemma reduce simpler case gaussian elimination rows columns note gauss transformations applied effect 
complete analysis lemma 
space decomposed orthogonal subspaces invariant vectors subspace represented standard basis nonzeros elements vectors subspace nonzeros elements 
subspace contained null space prove bounded need show equivalent showing positive semidefinite 
see gremban miller technique analyze condition number preconditioners 
main drawback technique elimination rows columns significantly fill leading block particularly simple fill difficult analyze 
propose section alternative technique leads simpler analysis preconditioners require complete elimination trailing block 
support graph theory extensions 
describe new tools extend support graph theory developed vaidya gremban miller 
lemma extension result gremban miller 
particular tools enable simplify analysis preconditioners positive negative diagonal entries support graph theory 
results derived independently 

stepwise gaussian elimination 
technique allows analyze support graphs larger gremban miller preconditioners performing complete elimination extra vertices technique relies lemmas 
lemma version lemma generalized support eigenvalues 
lemma 
nonsingular matrix 
ag bg 
proof 

definition bg ag gx gx gx gx 
gx ag similarly bg 
bg ag ag bg 
opposite inequality proved exactly way 
second lemma shows subtract certain positive semidefinite matrices increasing 
subtracting positive semidefinite matrix easier support provided null space includes lemma shifting lemma 
positive semidefinite matrices null null 
proof 

definition ax bx 
cx ax bx 
assume contradiction bx 
cx ax 
null null implies cx contradicting 
lemmas allow reduce series phases 
phase perform steps gaussian elimination followed subtraction negative semidefinite matrix addition positive semidefinite matrix 
steps complete prove bound generalized support resulting matrices 
lemmas allow retrace steps taken performing transformations reverse effects elimination steps subtracting positive semidefinite matrices changing bound generalized support 
bound prove matrices series transformation bound original matrix preconditioner 

positive elements 
positive diagonal entries require modification splitting strategy 
recall canonical splitting lemma split bm am bi positive semidefinite 
congestion dilation lemma bi usually paths negative edges ai negative edges zero row sums positive row sums handled separately shown lemma 
positive diagonal entries strategy modified 
way prove upper bound case congestion dilation framework support positive edges negative edges split bm am bm bm bm bm bm bm represents single positive edge bm represent paths negative edges 
bm support edges bm bm support positive edges important point case increasing necessarily terms positive semidefinite 
bm bm indefinite negative definite remains 
words positive edge supported path support 
analysis simpler represented positive semidefinite 
common preconditioners produced incomplete factorization process represented way explained 
lemma shows simplify analysis 
lemma 
positive semidefinite 

proof 

matrix positive semidefinite 
positive semidefinite 
cases lemma interpreted application strategy described previous paragraph 
fraction negative edges support positive edges 
negative edges exactly edges fraction edge support giving support bound 

vaidya preconditioners 
section describe families combinatorial preconditioners developed vaidya 
vaidya family applies symmetric diagonally dominant matrices second family applies matrices vaidya suggests extended symmetric diagonally dominant matrices 
discussion assuming matrix describe extension symmetric diagonally dominant matrices 
number diagonal nonzeros rows positive row sums increase diagonal elements preconditioner row sums 
shown lemma transformation change condition number estimates may change condition number 
families preconditioners underlying graphs gb subgraphs ga set vertices subset edges support edge gb corresponding edge ga congestion dilation bound max 
vaidya preconditioner constructed finding maximum weight spanning tree ga words connected graph cycles spanning tree total weight edges maximal spanning trees fig 

graph ga spanning tree gb ga middle spanning tree augmented extra edges left 
augmentation performed cutting tree subgraphs 
roughly equal size adding heaviest edge pair subgraphs 
ga illustrated preconditioner matrix underlying graph gb row sums identical analyze congestion dilation edge ga maximum weight spanning tree exactly path endpoints furthermore edges path heavier edges edges ga order split paths 
allocate fraction weight edge path congestion edge path pair maximum length path dilation 
congestion dilation product edge path pairs mn 
lemmas mn lemma mn 
smallest positive eigenvalue mn 
computing takes log efficient minimum weight spanning tree algorithm 
underlying graph tree factored time producing fill 
consequently costs associated constructing factoring insignificant relative cost iterative linear solver cost applying iteration expensive multiplying maximum weight spanning tree preconditioners extended handle symmetric diagonally dominant matrix gb maximum weight basis ga maximum weight spanning tree 
maximum weight basis generalization maximum spanning tree see section problem background 
omit details 
vaidya second family preconditioners achieves better condition number expensive compute apply 
construction illustrated starts maximum weight spanning tree integer parameter 
decompose ga set subgraphs 
vt subgraph spanned connected subgraph vertices 
form gb adding heaviest edge vi vj add edges vi vj heaviest edge 
analyze preconditioner need additional assumption row nonzeros constant implies dn 
decompose augmented tree gb set paths follows 
endpoints edge ga vi single path connects 
endpoint belongs vi vj path uses get endpoint heaviest edge connects vi vj path uses edge uses get endpoint edges path heavier edge supported path 
paths length dn edge gb carries paths condition number bounded 
cost factoring 
denote endpoints edges connect vi vj ui 
vi disjoint ui uj 
factorization eliminating degree degree vertices remaining vertices degree greater 
phase refer contraction requires generates fill elements 
done remains vi tree vertices degree leaves ui leaves vi 
follows number non leaf vertices vi ui 
total number vertices contracted graph ut 
factor contracted graph exploiting structure planar example nested dissection factor 
total cost factoring plus cost factoring contracted graph 
worst case subgraph vi connection vertices ui 
case contracted graph vertices factoring requires 
ga planar gb planar contracted graph 
furthermore ga planar contracted graph vertices 
proved contracting vi single vertex preserves planarity 
gb edge vi vj edges disappear merged edges contraction process 
super contracted planar graph vertices edges 
edges original subgraphs vi vj represented super contracted graph proves vertices ut 
factors matrix underlying graph planar graph vertices log nonzeros factorization performed time 
lemma summarizes discussion 
result vaidya manuscript proof 
lemma 
cost factoring augmented maximum weight spanning tree preconditioner general matrix planar 
factors nonzeros general case log planar 
choice balance costs constructing factoring cost iterations determined condition number cost applying cost constructing insignificant 
special nonzero structure bound nonzeros row optimal 
factoring preconditioner costs 
number iterations bounded cost iteration total cost nt 
planar cost factoring cost iteration log 
cost minimized near total cost solve linear system versus general case 
vaidya analyzes cases estimates fill factorization various classes sparse matrices 
vaidya show bounds regular meshes finite element grids better bound applies bounded degree graphs 
vaidya proposes recursive scheme uses idea solve system bz solved iteration 
factoring preconditioner performing triangular solves iteration vaidya proposes construct preconditioner sparser solve bz iteratively 
similar ideas proposed contexts domain decomposition solvers iterative solver subdomain leading essentially multilevel preconditioner 
vaidya analyze idea detail 
potential disadvantage vaidya preconditioners guaranteed parallelize 
maximum weight trees constructed may large diameter 
large diameter trees creates long chains dependences triangular factors chains limit parallelism available iteration solver 
aware numerical experiments vaidya preconditioners 

preconditioners gremban miller 
section presents support trees family preconditioners gremban miller developed 
assume symmetric diagonally dominant diagonal entries non positive 
gremban miller show technique convert problem symmetric diagonally dominant matrix larger problem matrix non positive diagonals 
assume preconditioner zero row sums 
vaidya method gremban miller approach essentially graph algorithm constructs gb ga gremban miller construct graph gb vertices ga ga augmented additional disconnected vertices graphs vertex set 
matrix terms construction embeds leading block larger zero matrix gremban uses congestion dilation lemma bound 
way route edges gb ga ga connected 
words infinite 
gremban develops uses lemmas eliminate extra vertices gb 
nodes eliminated gremban uses congestion dilation lemma bound provides lower bound smallest positive finite eigenvalue 
construction gb illustrated hierarchical decomposition ga algorithm removes ga set edges known separator breaks small number subgraphs 
gk 
algorithm recursively partitions gi graph decomposed single vertices 
separator chosen gi roughly number vertices total weight separator small 
variety graph partitioning algorithms find edge separators see example :10.1.1.54.2060
process repeated subgraph consists single vertex 
graph gb tree constructed hierarchical decomposition 
algorithm assigns subgraph decomposition vertex gb 
gb vertex represents ga vertex subgraph ga level decomposition vertices represent single vertices ga smallest subgraphs decomposition 
leaf gb represents single vertex ga considered vertex ga matrices ordered accordingly 
vertex represents fig 

illustration preconditioners gremban miller 
partitioned hierarchically vertices represent subgraphs partition 
circled vertex represents subgraph consisting circled vertices 
weight edge sum weights edges connect subgraph rest subgraph gi decomposition connected edges subgraphs gi decomposition gi gi 
gi subgraph contains gi previous level decomposition 
weight assigned edge connects gi say gi total weight edges connect gi remainder graph 
construction easy prove fairly low upper bound 
route edge ga unique path gb connects endpoints 
edge path allocates weight support weight possible path uses edge vertices represent gi gi decomposition part separator divides gi rest graph included weight edge path 
subgraph decomposition split subgraphs sizes differ constant factor length path logk order follows congestion dilation product bounded logk logk provides upper bound 
proving lower bound difficult 
explained bound results applying congestion dilation lemma schur complement specifically gremban miller prove upper bounds weights edges dense matrix show route regular grids dimensions uniform edge weight gremban miller essentially perform symbolic elimination bound entries bound obtained leading condition number bound log fixed prove similar bounds somewhat general classes matrices additional graph theoretic tools 
classes matrices include matrices represent planar graphs finite element meshes 
gb guaranteed tree diameter log factoring applying factors iteration requires log parallel steps 
cost computing gb depends graph partitioning algorithm may substantial practice 
gremban miller show convert problem symmetric diagonally dominant matrix problem symmetric diagonally dominant matrix nonpositive diagonals technique 
graph modified problem twice vertices edges original graph 
modified graph represents vertex original graph vertices edge edges 
transformation preserves separators original graph special structure guarantees small separators modified graph fig 

incomplete factorization preconditioner model problem zero row sums left 
model problem underlying graph positive dashed edges 
complete cholesky factor matrix incomplete cholesky factor model problem 
right shows paths route positive edge 
separators algorithm find 
gremban miller describe numerical experiments show method outperforms diagonal scaling preconditioner incomplete cholesky preconditioner 
matrices represent meshes gremban miller preconditioner performs fewer iterations solves systems faster preconditioners 
problem gremban miller preconditioner requires iterations incomplete cholesky leads faster solution times vector computer 

analysis incomplete factorizations 
section describes new analysis preconditioners modified incomplete factorizations 
learned performed somewhat similar analysis unmodified incomplete factorizations 
ll level modified incomplete factorization matrix incomplete factor nonzero structure lower triangle row sums write consists fill elements dropped factorization plus diagonal modification performed order maintain row sums 
elements dropped negative row sums zero row sums 
modified incomplete factorization model problem shown 

analysis dimensional model problem 
analyze modified incomplete cholesky factorization dimensional model problem laplace equation neumann boundary conditions regular grid 
result best knowledge new 
known asymptotic condition number bound holds modified incomplete factorizations perturbed matrix 
aware previous proof case 
consider regular grid depicted solid lines 
perform elimination vertices natural order discard fill discarded values correspond dashed diagonals 
laplacian matrix modified incomplete cholesky preconditioner matrix discarded values 
lemma bound supporting sketch right shows entry supported paths length divide weight edge evenly half support edge half support edge support edge exactly 
unfortunately gives lemma give finite bound 
realize division edges boundary grid uneven division varies upper left lower right 
formalize discussion prove result 
theorem 
represent laplace equation neumann boundary conditions zero row sums discretized grid shown 
modified incomplete cholesky factorization fill natural row wise ordering grid 

proof 
assume zero row sums 
construction modified incomplete factorization row sums lemma bound obtained zero row sums applies nonnegative row sums 
denote vertex row column grid edge connecting vertices 
easy see consists edges plus edges weight connect vi vi shown 
lemma bound bounding positive semidefinite matrix dropped fill elements diagonal dashed lines 
support edges edge supported paths length shown 
formally split follows 
matrix split submatrices edge sets path length boundary edge divided submatrix submatrix 
weight edge allocated submatrix splitting weight allocated lemma submatrix supports exactly fraction edge submatrix supports fraction edge 
apply lemma conclude show splitting feasible contribution edge paths support edges weight 
edge contributes submatrix boundary grid interior 
total contribution interior edge say contribution boundary edge max easy see condition number upper bound holds model problem dirichlet mixed boundary conditions 
difference structure neumann boundary condition case dirichlet mixed case row sums vertices boundary grid may positive 
row sums split zero matrix positive diagonal matrix 
diagonal parts support support 
zero row sum parts similar case analyzed positive edges may smaller greater 
easier support bound holds 
lemma lemma proof 
theorem formalizes result 
theorem 
represent model laplace equation non negative row sums discretized grid shown 
modified incomplete cholesky factorization fill 


analysis dimensional model problem 
analyze modified incomplete cholesky preconditioner dimensional model problem 
case analyze model problem boundary conditions analysis simple possible extend results 
consider grid example depicted 
perform elimination natural order discard fill discarded values correspond dashed edges 
contrast case eliminated vertex degree vertices eliminate case degree 
eliminate vertices degree vertex number drop cholesky factor nonzeros correspond dashed edges 
vertex eliminate neighbors form edge star graph 
discarded nonzeros form clique 
eliminate vertices degree drop nonzero case 
vertices grid coordinates degree eliminated 
vertices grid coordinates exactly index equals degree eliminated 
analysis case similar analysis case splitting complex 
case supported single edges paths length 
case edge stars support edge cliques 
analyze support clique star lemma 
rest proof technique remains 
fig 

example model problem incomplete factorization 
left graph numbers denote order elimination 
middle illustration shows dashed edges dropped eliminate vertex row column 
illustration right shows graph elimination vertex dashed edges dropped eliminated vertices 
elimination vertices generates fill edges dropped 
proof theorem analyzes model problem boundary conditions simple analyze 
theorem 
represent model laplace equation discretized grid boundary conditions lead zero row sums row sums modified incomplete cholesky factorization fill 

proof 
lemma 
model problem elimination vertex eliminates edges drops fill edges weight form triangle 
elimination vertex number exactly equals situation analogous case elimination vertex eliminates edges continue denote drops edge weight 
weight dropped edge eliminate degree vertex row sum recall index set row sum 
support edges sets submatrices defined conventions equals contains edges equals empty 
represent star subgraphs ga edge weights allocated submatrices lemma submatrix supports fraction weight positive edges form clique fraction edge exactly equals particular supports fraction weight edges 
equals say supports fraction weight edge 
precisely supports weight edge weight submatrix supports fraction weight edges 
easy verify entire weight edge supported submatrix submatrix 
example positive edge supported 
total support edge fraction weight 
apply lemma conclude 
show splitting feasible 
edge contributes edges faces contribute 
easy verify total contribution negative edge contributes say contribution edges contribute case incomplete factorization problem dirichlet boundary conditions dropped edges lighter case just analyzed submatrices support 
result holds theorem 
represent model laplace equation discretized nby grid mixed boundary conditions follows row sums zero grid vertices index equal row sums 
modified incomplete cholesky factorization fill natural ordering 

analyzed pure neumann boundary conditions case zero row sums 
case dropped edges back faces grid weight difficult support 
weights case possible employ analysis support leaves little weight negative edges back faces supporting dropped edges interior grid 
able prove condition number bound bound 
omit details 

support graph analysis simple multilevel preconditioner 
section support graph theory analyze simple multilevel diagonal scaling mds preconditioner linear systems arising finite element discretizations poisson problem uniform grid 
dimension able show condition number bound logarithmic size grid 
analyzed similar preconditioners dimensions unable prove polylogarithmic condition number bounds omit details dimensional analysis 
multilevel diagonal scaling preconditioner applies diagonal scaling multiple discretization levels 
consider matrix underlying graph ga diagonal scaling preconditioner bds simply bds diag ds diag suppose construct coarse grid representation ak graph restriction operator rk interpolation operator ik rt ak rk aik rk art rk takes vector defined vertices ga returns coarse representation rk vector vertices restriction operator rk construct level diagonal scaling preconditioner ds diag rt diag ak rk 
suppose coarsen restriction operator rk rk vector rk new operator rk 
construct series rk rk 
restriction operators way construct multilevel diagonal scaling preconditioner diag mds diag ak rk rt diag ak rk rk diag ri zhang proposed family preconditioners showed certain class matrices arising finite element discretizations certain restriction operators bounded constant independently fine discretization 
mds mds preconditioners refinement called bpx preconditioners proposed bramble diag aj replaced identity 
see discussion mds preconditioners 
mds bpx preconditioners explicit sense construction gives directly 
view augmented preconditioners larger linear space contains representations coarse meshes augmented preconditioner gremban miller 
viewed augmented preconditioner construction mds preconditioner gives triangular decomposition 
suppose apply mds preconditioner applying restriction operators sequence obtain coarse representations vector apply scaling inverses diagonal matrices interpolating adding contributions coarsest level finest 
process amounts solving triangular linear system bottomup restriction process scaling diagonal matrix solving triangular linear system 
effect solving linear system coefficient matrix factored ldl lower triangular 
constructed zhang mds preconditioners model finite element problems dimension 
computed ldl explicitely graph gb supergraph gl 
augmented mds preconditioners triangular factors sparser preconditioners incomplete cholesky preconditioners 
unable analyze effectively preconditioners theory positive row sums rows correspond coarse mesh vertices rows zero matrix row sums zero 
constructed mds preconditioners row sums combinatorial structure zhang preconditioners 
specifically preconditioners graph zhang factors graphs factors zhang augmented preconditioners 
analyze preconditioners dimension show log 

analysis dimensional case 
shows graph preconditioner graph model problem 
obtained matrix finite element discretization dimensional laplace problem neumann boundary conditions 
level level algorithm 
mesh vertices including boundary define coarse grid vertices vertex fine grid represented new vertex coarse grid 

construct restriction operator stencil 
restriction determines edges finer coarser grids 
weight edges determined row sum coarse grid zero factorization preconditioner give restriction operator 
model problem weight edges original grid coarse grid weights 
compute fill edges generated coarse grid vertices factor preconditioner bottom 
edges part graph cancel numerically 
add edges coarse grid vertices exactly cancel fill 
fill canceling edges form coarse grid representation 
repeat process restricting coarser grid 
restriction operator operator scaled scaling factor edges versus fill canceling edges 
edges original grid weights fill canceling edges coarse mesh weights weight edges coarser mesh weights 
shall see scaling ensures matrix pencil bounded 
formalize generalize process section 
fig 

mds preconditioner dimensional laplace problem neumann boundary conditions left 
larger problem positive edges level weights 
paths support positive edges shown right 
show size model problem augmented matrix preconditioner satisfies log 
proving upper bound log intricate difficult 
simply show kb nonnegative splitting lemma congestion dilation lemma 
positive edges kb fill edges original edges split routed length paths negative edges 
shows positive edge split routed 
proving lower bound difficult 
prove lower bound sequence elimination subtraction steps 
elimination steps eliminate current top level vertices 
lemma change bound support 
subtraction steps subtract fill edges elimination step plus fill canceling edges grid shown 
lemma show lower bound maintained subtractions 
theorem 
tridiagonal matrix size zero row sums diagonal elements ai ai corresponding mds support graph show 

proof 
proving split vertices levels topmost vertex level bottommost vertices level 
route positive weight edge paths length node level edge node level edge shown 
positive edge level route weight level weight level 
prove feasible induction proof facts weight edge level path level consists edges weight vertical edge weight split length paths edge path level consists edges weight assume inductive step positive weight edges levels 
routed manner routing leaves fraction weight diagonal edges level free routing 
obviously true positive weight edges level weight edges level remains free 
edges need route level weight need route path length consisting edge weight half vertical elimination splitting fig 

alternating elimination splitting steps analysis mds preconditioner 
see proof theorem details 
edge supports routes edge weight remains diagonal edge supported fraction positive edge level 
route support positive weight need route fraction weight positive edge level path level 
path length need allocate weight path edges uses exactly weight edges 
concludes proof induction 
support graph positive weight edges bottommost level need route weight edges order prove positive semidefinite 
inductive claim edges level route positive edges weight setting route edges weight 
concludes proof bounding 
establish lower bound strategy 
eliminate topmost node level denote resulting matrix lemma 
elimination generates fill edges parallel positive edges level true fill edge shown 
split contains edges plus positive edges level plus diagonal weight designed maintain zero row sums 
subtract show negative semidefinite null null 
conditions lemma guarantees 
upper bound prove upper bounds 
continue eliminate nodes level subtract fill elimination generates positive edges level 
steps identical scale need show negative semidefinite 
rows columns eliminating row column top vertex yields corresponding sub matrix lemma ignore row column focus leading submatrix nonzero part 
easily checked negative semidefinite eigenvalues eigenvectors show 
preconditioner dimensional null space spanned vector 
null space dimensional essentially spanned vector 
element corresponding top vertex 
easy verify proving 
alternating steps elimination subtraction remains support graph bk bk 
edges bk adjacent vertices route edges 
support graph edges vertices level schur complement sum submatrices form routed congestion dilation product corresponding submatrices concludes entire proof 

generalizing dimensional preconditioner 
unable prove similar bounds realistic problems able distill dimensional example general algorithm constructing preconditioners 
algorithm leads hierarchical preconditioners parallelize easy efficient construct 
applied dimensional model problem algorithm generates exactly mds analyzed previous section 
sketch algorithm construct preconditioners 

initialize gb graph preconditioner vertex set ga edges 

decompose vertices ga overlapping subdomains 
condition decomposition edge ga subdomain include edge endpoints 
clearly decomposition lead better preconditioners condition required 
edges belong subdomain 
model problem subdomain consists exactly adjacent vertices 
vertices belong subdomain 
edge ga belongs exactly subdomain model preconditioner 

augment gb new vertex vs subdomain 
add edge vs subdomain vertex 
decide route edges ga gb 
edge ga routed length paths gb 
edge belongs subdomain routed gb path vs edge belongs subdomains route weight subdomain 

sum total weight ga edges routed gb edge 
model preconditioner sums gb edges rest 

assign weights edges gb 
weights sums scaled factor may different subdomain 
scale factor subdomain determined eliminating vs gb ensuring edges ga subdomain support fill edges elimination generates support 
model preconditioner scale factors happen 
generate fill canceling edges subdomain vertices vs gb 
eliminate edges ga gb non subdomain vertices 
generates fill edges remaining subdomain vertices 
add gb edges exactly cancel fill edges 

repeat construction recursively decomposing subdomain vertices coarser subdomains adding edges support newly added edges 
hard see construction ensures preconditioner desirable properties 
factored bottom fill add explicitly fill canceling edges counteract fill 
furthermore typically log levels recursion construction triangular solves apply preconditioner high levels parallelism correspond traversals shallow directed acyclic graph 
second spectrum matrix pencil bounded 
unfortunately able prove strong upper bounds spectrum complex cases simple dimensional model problem 


support graph theory motivated design novel families preconditioners 
vaidya preconditioners particular general guarantee lower condition numbers bounds modified incomplete factorizations widely class preconditioners 
showed theory prove tight bounds preconditioners model problems low bound simple mds preconditioner 
bounds new result depend diagonal perturbation 
support graph preconditioning results 
support graph theory bound condition number incomplete factorizations diagonal modification 
vavasis generalized preconditioners gremban miller complex systems 
aware john reif duke university working subject best knowledge published results 
believe support graph theory provides new largely tool analysis design preconditioners 
hope serves techniques accessible numerical analysis community stimulate promising area 
acknowledgments 
tony chan suggesting investigate mds preconditioners constructive discussions 
steve erik boman detailed comments drafts 
indebted howard elman henk van der vorst enlightening helpful discussions 
axelsson iterative solution methods cambridge university press 
bramble xu parallel multilevel preconditioners math 
comput pp 

cormen leiserson rivest algorithms mit press mcgraw hill 
graph partitioning survey tech 
report sfb technische universit chemnitz dec 
gremban miller zagha performance evaluation parallel preconditioner th international parallel processing symposium santa barbara april ieee pp 

gremban combinatorial preconditioners sparse symmetric diagonally dominant linear systems phd thesis school computer science carnegie mellon university oct 
technical report cmu cs 
graph embedding techniques bounding condition numbers incomplete factor preconditioners tech 
report icase report nasa langley research center 
gustafsson class order factorization methods bit pp 

vavasis preconditioning complex symmetric layered systems arising electrical power modeling proceedings copper mountain conference iterative methods copper mountain colorado mar 
pages 
smith gropp domain decomposition parallel multilevel methods elliptic partial differential equations cambridge university press 
vaidya solving linear equations symmetric diagonally dominant matrices constructing preconditioners 
unpublished manuscript 
talk manuscript ima workshop graph theory sparse matrix computation october minneapolis 
zhang multilevel schwartz methods numerische mathematik pp 


