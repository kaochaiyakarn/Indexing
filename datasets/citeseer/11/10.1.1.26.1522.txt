efficient multiparty computations secure adaptive adversary ronald cramer ivan damgard stefan martin hirt tal rabin eth zurich 
inf ethz ch aarhus university brics daimi aau dk ibm watson research center watson ibm com stern ed eurocrypt lncs pp 

consider verifiable secret sharing vss multiparty computation mpc secure channels model broadcast channel non zero error probability allowed 
model rabin ben proposed vss mpc protocols secure adversary corrupt minority players 
observe subprotocol theirs known weak secret sharing wss secure adaptive adversary contrary believed earlier 
propose new adaptively secure protocols wss vss mpc substantially efficient original ones 
protocols generalize easily provide security general adversaries 
multiparty computation yao gmw design analysis attracted researchers generated large body results 
problem stated roughly consider set players holding private input wish compute agreed function inputs manner preserve secrecy inputs 
need carry computation players may corrupted actively try interfere computation 
solutions problem various models different computational assumptions 
major components model type adversary assumed 
adversary entity corrupts set size players execution protocol takes control actions 
types adversaries considered literature barring supported swiss national science foundation snf spp 
basic research computer science center danish national research foundation 
cramer damgard hirt rabin slight variations static adversaries adaptive adversaries 
static adversary needs choose set corrupted players execution protocol 
adaptive adversary hand choose players execution protocol 
stated protocols bgw ccd rb bea secure adaptive adversary assumption players communicate secure private channels 
results protocols information theoretically secure 
led believe protocol designed information theoretically secure executed model private channels resulting protocol immediately secure adaptive adversary 
attempt understanding power different adversaries example natural protocol appears rb information theoretically secure static adversary fails adaptive adversary 
important goal design protocols provide protocols simple implemented practice 
case adversary corrupt third players reasonable protocols proposed bgw case adversary corrupt half players existing solutions quite cumbersome rb bea 
solutions multiparty computation verifiable secret sharing efficient existing protocol case adversary corrupt minority players 
specifically obtain protocol vss probability error gammak log players requires log bits communication opposed omega log bits required existing protocols 
improvement part efficient implementation information checking protocol concept introduced rb described loosely speaking kind unconditionally secure signature scheme 
implementation linear meaning values verified scheme linear combination verified additional information 
means linear computations done non interactively vss mpc contrary implementation rb property obtained bea efficient information checking implementation 
essential tool mpc provided rb bea protocol allows player committed manner values show ab revealing extra information 
provide protocol purpose giving error probability gammak extremely simple 
allows multiplication step mpc protocol carried cost equivalent vss earlier protocols required kn vss 
methods developed cdm protocols generalize easily provide security general adversaries hm 
transformation protocols public channel model outside scope interested reader refer bh 
efficient multiparty computations secure adaptive adversary outline show weak secret sharing wss scheme rb rab adaptively secure section 
section propose efficient implementation information checking section scheme verifiable secret sharing vss developed 
protocols section efficient protocol multiparty computation mpc 
section efficient protocol secure general non threshold adversaries sketched 
model definitions consider secure channels model broadcast players pn pairwise connected perfectly private authenticated channels broadcast channel 
central adversary unbounded computing power actively corrupts players 
actively corrupt player means take full control player player mis behave arbitrary manner 
adversary assumed adaptive dynamic means allowed corrupt players protocol execution choice may depend data seen far contrast static adversary corrupts players protocol starts 
security protocols unconditional negligible error probability expressed terms security parameter protocols operate finite field gf max 
definition information checking information checking ic information theoretically secure method authenticating data 
ic scheme consists protocols distr int initiated dealer phase hands secret intermediary int auxiliary data int recipient int initiated int carried int phase int ensures protocol honest accept secret held int int initiated int carried int phase receives value int auxiliary data accepts rejects 
ic scheme properties correctness int uncorrupted secret accept phase 
int honest phases distr int knows value accept phase probability gammak 
cramer damgard hirt rabin uncorrupted phase probability gamma gammak player reject value different secrecy information hands phase distr distributed independently secret 
consequently int uncorrupted int executed protocol information secret 
definition 
ic scheme triple distr protocols satisfy properties definition wss intuitive explanation weak secret sharing wss scheme distributed analog computational commitment 
wss scheme sharing secret consists protocols sh rec 
wss exhibits properties binds single value sharing phase sh equivalent commitment stage computational setting choose expose value reconstruction phase rec equivalent exposure commitments 
wss satisfies properties allowed error probability gammak termination dealer honest honest players complete sh honest players invoke rec honest player complete rec 
secrecy dealer honest honest player started rec adversary information shared secret correctness currently uncorrupted players complete protocol sh exists fixed value requirements hold 
dealer uncorrupted protocols sh rec shared secret uncorrupted player outputs protocol rec 

dealer corrupted uncorrupted player outputs null completing protocol rec 
definition 
secure wss scheme sharing secret pair sh rec protocols satisfy properties presence active adversary corrupts players 
efficient multiparty computations secure adaptive adversary definition vss important protocol widely multiparty computation verifiable secret sharing vss 
essence vss scheme allows dealer share secret players way adversary corrupts players obtains information secret 
furthermore secret efficiently reconstructed corrupted players try disrupt protocol 
formal definition pair sh rec protocols verifiable secret sharing vss scheme satisfies stronger correctness property allowed error probability gammak correctness currently uncorrupted players complete protocol sh exists fixed value requirements hold 
dealer uncorrupted protocol sh shared secret uncorrupted player outputs protocol rec 

dealer corrupted uncorrupted player outputs completing protocol rec 
definition 
secure vss scheme sharing secret pair sh rec protocols satisfy termination secrecy property wss stronger correctness property presence active adversary corrupts players 
definition mpc goal multiparty computation mpc evaluate agreed function player provides input receives output 
privacy inputs correctness output guaranteed adversary corrupts players 
formal definition security see gl bea 
adaptive security wss rb section describe protocol secure static adversary fail adaptive 
example captures nicely power adaptive adversary delay decisions due cause different values computed protocol 
protocol examine weak secret sharing scheme wss rabin ben rb rab 
attack 
important note attack applies wss protocol rb stand protocol apply vss scheme uses wss subprotocol 
order explain attack simplified protocol rb protocol assumes digital signatures 
essence protocol complicating non relevant details omitted 
cramer damgard hirt rabin wss share sh dealer chooses random polynomial degree secret shared sends share signature player wss reconstruct rec 
player reveals share signature 
properly signed shares ik interpolate single polynomial degree secret taken secret reconstructed 
definition wss requires sh single value set value null reconstructed rec 
clearly adversary static value set value interpolated shares held uncorrupted players 
value defined 
exists polynomial degree null 
reconstruction null players set output null shares players considered interpolation possibly additional shares corrupted players 
null additional shares provided faulty players satisfy polynomial case reconstructed 
adversary decide foil reconstruction having corrupted players supply shares match cause players output null value show adaptive adversary requirement hold described protocol 
attack proceeds follows protocol sh adaptive adversary corrupts dealer causing deviate protocol 
dealer chooses polynomials degree 
player receives value share player receives player receives share 
shares valid signatures 
rec adversary decide corrupt forcing secret corrupt force secret 
clear sh single value reconstructed rec 
decision value reconstruct deferred adversary reconstruction protocol rec started 
basic problem stand wss ensured honest players polynomial immediately distribution 
inside vss rb property ensured side effect vss distribute protocol vss protocol works correctly 
efficient multiparty computations secure adaptive adversary information checking protocol section protocols satisfy definition information checking cf 
section 
provide functionality check vector protocol rb rab time capsule protocol bea 
implementation information checking possesses additional linearity property utilized 
basic idea construction secret verification information lie polynomial degree line secret value origin 
dealer hands intermediary int points line hands recipient point constant secret evaluation point ff 
ff known unknown int say accept secret int gives point holds lies line defined points receives int general describing protocols adopt ease exposition convention player expects receive message player step message arrives assumes fixed default value received 
treat separately case message arrives 
definition 
vector ff consistent exists degree polynomial ff protocol distr int dealer chooses random value ff additional random values ff consistent addition chooses random ff consistent vector 
sends intermediary int recipient protocol distr ensures ensures properties property adding protocol ensures affecting protocol int 
int chooses random element broadcasts ds dy 
observes values incorrect broadcasts counts claiming int corrupt 
case protocol ends broadcasted values 
adjust value ff consistent 

checks ds dy dz ff consistent 
broadcasts accept reject accordingly 
observes acted incorrectly broadcasts ff 
counts claiming corrupt 
case protocol ends broadcasted values 
int adjust value ff consistent 
cramer damgard hirt rabin 
rejected claim faulty previous step broadcast broadcasted values 
adjust value ff consistent 
protocol int 
int broadcasts 

verifies ff consistent broadcasts accept reject accordingly 
lemma 
protocols distr described satisfy definition information checking section 
proof 
show property satisfied clear parties honest accept broadcast values 
property trivial cases broadcasts ff 
show sends inconsistent initially rejects high probability 
ds dy dz es ey ez ff consistent difference ff consistent 
random choice follows accept probability jkj inconsistent 
property follow fact int know ff 
show holds uses ff invocations protocol 
exploit property 
note int learns information ff distr protocols gets distr distribution independent ff 
sends correct values knows advance accepted doesn knows complain 
note holds consider invocations authentication protocol 
int knows ff priori value different candidates equally 
consider position int just opening value 
sends correct changes values knows advance reaction learns new 
sends accept ff consistent 
know ff consistent definition gamma gamma 
gives non trivial degree equation ff computed 
words int guess ff accept false value 
probability jkj gamma 
hand rejects int knows solution equation right value excluded 
follows induction values opened jkj gamma gamma candidates ff remain point view int false values accepted probability jkj gamma gamma 
application vss linear error probability gammak log efficient multiparty computations secure adaptive adversary int remain honest corrupt show learn ahead time 
observe authentication protocol learns ds dy 
note int honest knows advance ds dy dz ff consistent 
compute dy ds value deleted view loss generality 
clear ds distribution independent linearity ic protocol multiparty computation protocol able authenticate linear combination values 
setting follows int executed protocols distr different values wish reveal linear combination secrets exposing carrying additional verification 
achieved invocations ic protocol dealer chooses value ff random evaluation point gives properties protocol hold addition appropriate linear combination verification data yields verification linear combination ic signatures sequel want information checking protocol semi digital signatures 
person receives digital signature signer show person verify fact valid signature 
property easily achieved information checking carrying protocol players explained bellow 
achieve properties digital signatures order achieve goals 
ic signatures way 
protocol distr carried dealer intermediary int receiver player pn respect value protocol performed int player protocol int broadcast authentication information players accept value shall say signature confirmed 
shall call signatures ic signatures 
signature enable give int signature int convince players authenticity value received dealer 
ic signatures signatures specifically int denote signature oe int 
verifiable secret sharing simplified vss protocol 
protocol bivariate solution feldman fm bgw omitting need error correcting cramer damgard hirt rabin codes 
protocol new variant information checking provide high efficiency 
definition 
vector gamma consistent exists polynomial degree intuition construction secret shared theta matrix values row column consistent row column player share values matrix 
dealer commit values signing entry matrix 
row determines simple interpolation share single variate polynomial 
de facto dealer player signed share players check consistency matrix comparing values expose inconsistent behavior dealer signatures 
guaranteed values held uncorrupted players consistent define single secret 
order share player signed implicitly players player gets share ij row signed player return prevent adversary corrupting secret reconstruction time 
vss share sh 
dealer chooses random bivariate polynomial degree variable ij 
dealer sends player values 
ni ni 
value ji ij attaches digital signature oe ji oe ij 

player checks sets ni consistent 
values consistent broadcasts values signature 
player hears broadcast inconsistent values dealer signature execution halted 

sends ji signature generates ij oe ji privately 
player compares value ij received previous step values ij received inconsistency broadcasts ij oe ij 

player checks broadcasted value ji oe ji different value ji holds 
broadcast exists broadcasts ji oe ji 

index pair player hears broadcasts signatures dealer different values execution halted 
vss reconstruct rec 
player broadcasts values signature value ij received player 
receive signature protocol sh broadcasted value signature 
far results wss secure adaptive adversary 
efficient multiparty computations secure adaptive adversary 
player checks player shares broadcasted previous step consistent signatures valid 


values non player taken interpolated compute secret 
theorem 
protocols sh rec satisfy definition vss protocols 
proof 
prove required property satisfied secrecy 
observe steps adversary learns told step 
claim follows immediately properties bi variate polynomial degree properties information checking 
termination 
examining protocol clear dealer data shared inconsistent assuming players forge dealers signatures 
honest dealer probability gammak log 
correctness 
show fixed value defined distribution 
define secret interpolates shares held set players corrupted sh 
shares trivially consistent probability gammao gammak log correct signatures shares define uniquely underlying polynomial secret 
look uncorrupted player outside set 
corroborated shares players inconsistency 
player verified row column consistent 
player shares added initial set players shares set remains consistent defining polynomial secret examine correctness conditions 
easy see uncorrupted value 
value different interpolated reconstruction fail corrupted player able introduce values inconsistent values held honest players 
corrupted player succeeded doing step 
reconstruction procedure 
means able produce set values consistent value signature appropriate player relates 
clearly signatures uncorrupted players 
shown players shares lie corrupted player shares consistent lie 
adversary influence value revealed secret 
ut efficiency 
inspection vss distribution protocol sh finds field elements distributed authenticated cramer damgard hirt rabin distr constant number times 
executing distr requires communicating constant number field elements player find total communication log bits error probability gammak log multiparty computation vss scheme previous section build multiparty computation protocol 
bgw paradigm known sufficient devise methods adding multiplying shared numbers 
note case contrary bgw vss value consists shares held fact implicitly explicitly held subshares ij held player ic signature value 
structure ic signatures required reconstruction 
wish compute sum multiplication secrets need resultant form 
prove theorem subsections 
theorem 
assume model complete network private channels players broadcast channel 
arithmetic circuit field jkj max log security parameter 
multiparty computation protocol computing secure adaptive adversary corrupting players 
complexity protocol jcj vss protocols error probability gammak log jcj number gates amounts bits communication 
addition addition straightforward secrets shared implicit shares subshares appropriate ic signatures player needs add implicit shares means needs hold ic signature ij ij immediately achieved sum ic signatures results ic signature sum values signed 
computed addition shared secrets 
multiplication multiplication slightly involved 
assume secrets implicit shares subshares appropriate ic signatures 
apply method grr 
method calls player multiply shares resp 
share result vss 
results vss proper sharing result computed fixed linear combination player computes linear combination shares vss 
vss linear efficient multiparty computations secure adaptive adversary grr method provided show player share secret vss hold prove done properly 
fails complete process simplest solution recovery go back start computation reconstruct inputs redo computation time simulating openly 
allow adversary slow computation factor linear order eliminate recap goal stated point view player needs share secret vss satisfies ab 
value shared subshares lying polynomial say held player holds ic signature value holds value polynomial 

shares value ab vss share protocol 
polynomial defined sharing 

chooses random fi shares fi fib 
sharing values primitive 
chooses polynomial fi fi fi fi gives player value fi ic signature value 
player complains receive share signature dealer exposes values 
done fib polynomial fib 

players jointly generate standard techniques random value expose 

broadcast polynomial rf fi 

player checks appropriate linear combination shares lies polynomial exposes signed share fi requires dealer expose ic signature dealer holds generated value dealer fails 

dealer player locally computes 

broadcasts polynomial gamma fib gamma rf 

player checks appropriate linear combination shares lies polynomial exposes signed share fib requires dealer expose ic signature dealer holds generated value dealer fails 

verifies accepts sharing 
security protocol guaranteed lemma 
lemma 
executing protocol sharing ab give adversary information know 
proof 
wlog assume dealer honest 
values revealed protocol look random adversary polynomial random polynomial 
adversary learns 
ut note fc bivariate polynomial directly constructed univariate polynomial defined implicit shares cramer damgard hirt rabin lemma 
ab protocol probability dealer succeeds perform jkj proof 
suppose exist distinct challenges chosen step 
rounds 
step 
guarantees honest players consistent shares fi open know consistent 
defined value fi shared fi way step guarantees fib consistent defines value may may fib 
step ra fi fi step get ra fi rc fi conclude ab ut general adversaries possible go adaptive security dishonest minority considering general necessarily threshold adversaries hm 
corruption capability adversary specified family subsets players adversary restricted corrupting sets dishonest minority clearly special case 
results extend general scenario ideas developed cdm 
replacing shamir secret sharing monotone span program msp secret sharing kw vss immediately obtain wss protocols secure adversary hm communication computation polynomial monotone span program complexity adversary cdm 
adversary adversary capable corrupting subsets players family subsets subsets family cover full player set 
reason generalized protocol wss vss general linear secret sharing scheme qualified subset shares define uniquely secret necessarily entire set shares contrast case shamir threshold scheme 
building linearity wss monotone span program secret sharing construct efficient vss negligible non zero error secure adversary 
roughly speaking idea taken cdm dealer wss commit secret set shares 
convince players done correctly 
amounts showing number linear relations committed values easy linearity wss 
commitment share privately opened player receive 
resulting vss enables multi party computation secure adversary base construction vss called msp multiplication cdm 
msp exists chosen size twice minimal msp secure adversary 
far general adversaries concerned security adversaries maximum attainable level security 
efficient multiparty computations secure adaptive adversary construction gives vss complexity log nm bits size monotone span program 
independent smith ss somewhat similar idea results efficient protocol log nm bits directly apply ideas cdm rab replace rab shamir secret sharing monotone span programs multiplication cdm 
acknowledgment 
grateful adam smith anton pointing error information checking protocols final version 
bea beaver 
secure multiparty protocols zero knowledge proof systems tolerating faulty minority 
journal cryptology 
bgw ben goldwasser wigderson 
completeness theorems fault tolerant distributed computations 
th stoc pp 

acm 
bh beaver haber 
cryptographic protocols provably secure dynamic adversaries 
eurocrypt pp 

springer lncs 
canetti 
security composition multiparty cryptographic protocols 
manuscript appear 
ccd chaum damgard 
multiparty unconditionally secure protocols 
th stoc pp 

acm 
chor goldwasser micali awerbuch 
verifiable secret sharing achieving simultaneity presence faults 
th focs pp 

ieee 
cdm cramer damgard maurer 
general secure multi party computation linear secret sharing scheme 
manuscript 
ran canetti uri feige oded goldreich moni naor 
adaptively secure multi party computation 
th stoc pp 

acm 
fm feldman micali 
optimal algorithm synchronous byzantine agreement 
th stoc pp 

acm 
gl goldwasser levin 
fair computation general functions presence majority 
crypto pp 

springer lncs 
gmw goldreich micali wigderson 
play mental game 
th stoc pp 

acm 
grr gennaro rabin rabin 
simplified vss fast track multiparty computations applications threshold cryptography 
th podc pp 

acm 
hm hirt maurer 
complete characterization adversaries tolerable general multiparty computations 
th podc pp 

acm 
kw wigderson 
span programs 
proc 
structure complexity pp 

micali rogaway 
secure computation 
crypto pp 

springer lncs 
micali rogaway 
secure computation information theoretic case 
manuscript appear 
cramer damgard hirt rabin rab rabin 
robust sharing secrets dealer honest faulty 
journal acm 
rb rabin ben 
verifiable secret sharing multiparty protocols honest majority 
st stoc pp 

acm 
ss smith 
multiparty computations unconditionally secure adversary structures 
manuscript 
yao yao 
protocols secure computations 
rd focs pp 

ieee 
