genetic algorithms real parameter optimization wright department computer science university montana montana concerned application genetic algorithms optimization problems real parameters 
shown point crossover small relative number parameters viewed crossover operation vector parameters plus perturbations parameters 
mutation considered perturbation parameters 
suggests genetic algorithm uses real parameter vectors chromosomes real parameters genes real numbers alleles 
algorithm proposed possible crossover methods 
schemata defined algorithm shown holland schema theorem holds crossover methods 
experimental results indicate algorithm mixture crossover methods outperformed binary coded genetic algorithm test problems 
keywords optimization genetic algorithm evolution appear foundations genetic algorithms edited gregory rawlins morgan kaufman 
primarily concerned optimization problem maximize 
real parameter subject constants problems widespread application 
applications include optimizing simulation models fitting nonlinear curves data solving systems nonlinear equations engineering design control problems setting weights neural networks 
background genetic algorithms fairly successful solving problems type ill behaved multimodal non differentiable conventional hill climbing derivative techniques 
usual method applying genetic algorithms real parameter problems encode parameter bit string standard binary coding gray coding 
bit strings parameters concatenated give single bit string chromosome represents entire vector parameters 
biological terminology bit position corresponds gene chromosome bit value corresponds allele 
parameter vector denote corresponding bit string corresponding uppercase letter problem translated combinatorial problem points search space corners high dimensional cube 
example parameters ranges represent parameter point represented bit string binary coding gray coding 
consider genetic algorithms chromosome corresponds vector real parameters gene corresponds real number allele corresponds real value 
algorithms suggested particular applications chemometrics problem finding configuration dna hairpin fit nmr data davis area meta operators setting operator probabilities standard genetic algorithm 
argument non binary discrete alphabets genetic algorithms 
argues different interpretation schemata schemata non binary alphabets binary alphabets 
sense extends argument real alphabets 

binary coding gray coding single parameter lower upper bounds respectively standard way binary coding bits real values correspond standard binary code integer example real values correspond binary code 
avoid talking intervals refer binary code integer corresponding left interval example refer binary code corresponding real number gray coding way coding parameters bits property increase step parameter value corresponds change single bit code 
conversion formula binary coding gray coding th gray code bit th binary code bit bits numbered starting left denotes addition mod 
conversion gray coding binary coding summation done mod 
example binary code corresponds gray code 
crossover crossover reproduction technique takes parent chromosomes produces child chromosomes 
commonly method crossover called point crossover 
method parent chromosomes split left right left parent length right parent length 
child gets left parent right parent 
split position successive genes called crossover point 
example parent chromosomes crossover point bits bits numbered left right starting children 
call crossover applied bit level bit strings binary crossover crossover applied real parameter level real crossover 
considering binary crossover real parameter space consider special case crossover point falls codes parameters 
case child gets parameters parent parameters parent 
example parents bit strings corresponding parameter vectors 

split point component child corresponds parameter vector 

corresponds 


case binary crossover exactly real crossover 
seen pictorially easily case see 
child parent parent child general split parameter parameter child lies intersection dimensional hyperplane determined parent dimensional hyperplane determined 
suppose crossover point chosen code parameter 
consider case binary coding limit consideration parameter crossover point occurs 
part binary code parameter left crossover point correspond significant bits part left split correspond significant bits 
child gets significant part parameter parent significant part parent 
view child perturbation parent size perturbation determined difference significant bits parents 
fact crossover point bit bit perturbation corresponds changing bits parents 
size range parameter maximum size perturbation example suppose range parameter goes parameter coded bits parameter values parents corresponding binary codes 
suppose crossover point bits codes children correspond parameter values significant bits parents respectively difference corresponds parameter space 
note child parameter value parent parameter value perturbed second child parameter value second parent parameter value perturbed note significant parts parents frequently happen nearly converged population child gets parameter value parents child gets parameter value parent 
suppose gray coding crossover point occurs code parameter 
formulas converting binary coding gray coding seen significant bits binary code determine significant bits gray code vice versa 
child viewed perturbation parent received significant bits 
changing st gray bit code affects st nd binary code bits maximum size perturbation binary code case 
summarize theorem theorem 
bit strings corresponding real parameter vectors obtained point binary crossover crossover point lies bits parameter assume gets bits left crossover point right crossover point real parameter vector corresponding obtained real point crossover crossover point followed perturbation parameter size case point crossover obtained point real crossover followed perturbations parameters 
mutation mutation common reproduction operator finding new points search space evaluate 
chromosome chosen mutation random choice genes chromosome genes modified 
case binary coded genetic algorithm corresponding bits flipped 
normally probability bit chosen low code parameter bit mutated 
bit parameter code mutated think corresponding real parameter perturbed 
size perturbation depends bit bits chosen mutated 
size range parameter binary coding mutating th bit corresponds perturbation gray coding changing th bit gray code affect bits corresponding binary code th bit th bit 
magnitude corresponding perturbation perturbations sizes maximum possible 
direction perturbation determined value bit mutated 
binary coding changing produce perturbation positive direction changing produce perturbation negative direction 
gray coding changing may perturb parameter direction 
schemata theory genetic algorithms holland goldberg schema similarity template describes subset space chromosomes 
schema genes unrestricted genes contain fixed allele 
binary case schema described string alphabet means corresponding position string unrestricted 
example string describes schema 
see meaning binary coded schemata terms real parameters restrict single parameter 
suppose size range parameter parameter coded bits 
schemata symbols contiguous right string correspond connected intervals real numbers 
example range parameter schema corresponds parameter interval binary gray coding corresponds interval binary coding interval gray coding 
general contiguous schema containing corresponds parameter interval length binary gray coding 
single parameter schema contiguous right corresponds disconnected union intervals 
going back multi parameter schemata correspond connected interval parameter correspond naturally rectangular neighborhoods parameter space 
non connected schemata binary coding take advantages periodicities power relative corresponding parameter interval 
unclear interpretation non connected gray coding schemata appears author objective functions connected schemata meaningful capture locality information function 
connected schemata real crossover operation especially relevant separable objective function function 

call schemata correspond connected sets parameter space connected schemata 
single parameter coded bits connected schemata connected schemata schemata total connected schemata 
parameters connected binary schemata 
contrasts mn unrestricted binary schemata 
real coded genetic algorithm analysis binary coded genetic algorithms applied real parameter spaces help design genetic algorithm chromosomes vectors floating point numbers alleles real numbers 
design standard genetic optimization algorithm things needed 
method choosing initial population 

scaling function converts objective function nonnegative fitness function 

selection function computes target sampling rate individual 
target sampling rate individual desired expected number children individual 

sampling algorithm uses target sampling rates individuals choose individuals allowed reproduce 

reproduction operators produce new individuals old individuals 

method choosing reproduction operator apply individual reproduced 
basic algorithm step choose initial population 
steps done go population generation 
steps repeated convergence criterion satisfied predetermined number generations 
standard binary coded genetic algorithm steps bit string representation chromosome 
design real genetic algorithm take methods doing steps corresponding methods standard genetic algorithms 
suggested algorithm population member represented chromosome parameter vector 
genes real parameters 
reproduction operators suggested crossover mutation linear crossover form combination parents explained 
real crossover defined section crossover 
starts finite population crossover operation allows reach finite number points parameter space parameter components selected corresponding parameter components population members 
intuitively reach points intersections hyperplanes go initial population points parallel coordinate hyperplanes 
fact initial population size reach parameter vectors crossover 
purpose mutation allow arbitrary points parameter space reached 
designing real mutation operator question point parameter vector mutated individual parameters mutated 
schwefel base methods global real parameter optimization mutations points envisage functions mutation coordinate directions improve fitness motion directions substantially improve fitness 
functions mutation better mutation coordinate directions lower mutation rate 
see difficult mutation compatible schema theorem chosen mutate individual parameters 
problem choosing distribution sizes mutations problem keep mutated point range 
method tried follows choose mutation rate maximum mutation size 
probability parameter mutated mutation rate 
parameter chosen mutation direction mutation chosen randomly probability parameter farther edge range maximum mutation size direction mutation mutated parameter chosen uniform distribution interval parameter parameter plus minus maximum mutation size 
parameter closer edge range maximum mutation size new value parameter chosen uniform distribution interval parameter edge range 
explicit suppose original parameter value range maximum mutation size mutation chosen positive direction 
mutated parameter chosen range min uniform probability distribution 
experiments indicated mutation scheme applied repeatedly point interval selection pressure gave uniform distribution points large number mutations 
mutation method correspond closely mutation binary coded algorithm binary coded mutation heavily favors mutations small magnitude 
especially true large number bits encode real parameter 
problem real crossover illustrated 
ellipses represent contour lines objective function 
local minimum center inner ellipse 
points relatively points function value local minimum 
point generated crossover points worse point 
get situation propose form reproduction operator call linear crossover 
parent points new points generated point midpoint lie line determined best points selected 
linear crossover disadvantage highly disruptive schemata compatible version schema theorem 
point point point crossover schemata analysis real allele genetic algorithms explained section feel binary coded genetic algorithm real parameter problem meaningful schemata functions periodicities power restrict parameters subinterval possible range 
logical way define schema real allele genetic algorithm restrict parameters subintervals possible ranges 
assumed range parameter parameter space schema specified choosing real values corresponding subset parameter space symbol refer sequence pairs 
corresponding subset parameter space kind analysis done traditional genetic algorithms 
analysis important thing schema parameters restricts 
schema associate template follows 
parameter unrestricted associate parameter 
parameter restricted denote interval 
template sequence corresponding parameters 
example parameter space schema corresponding tuple average fitness population members schema average fitness population members suppose point crossover randomly selected crossover point 
selection sampling done probability individual selected reproduction ratio fitness average fitness population expected proportion individuals schema selected reproduction equation chromosome length number restricted fixed genes defining length distance outermost restricted genes probability crossover probability gene mutated 
holland schema theorem corollary holland stated genetic algorithms discrete set alleles gene 
proof schema theorem depends form objective function restricted genes restricted 
applies real coded genetic algorithms real mutation real crossover reproduction operators 
real case chromosome length number real parameters 
experimental results algorithm implemented modifying genesis program john grefenstette 
problems de jong de jong plus problems schaffer caruana eshelman das included additional problems 
problem de jong problem rotated degrees plane evaluating 
formula de jong 
function corresponds solution system equations unknowns 

system converted objective function optimization problem summing absolute values left sides equations 
parameter ranges variables region single multiplicity solution global minimum 
number local minima edges region 
global minimum problems objective function value zero 
problems run point crossover elitist strategy baker selection procedure scaling window generations population size crossover rate 
binary coded algorithm gray coding 
spinning convergence thresholds turned 
functions experiment consisted running genetic algorithm trials function evaluations 
function trials 
results saved experiment best performance offline performance 
best performance smallest value objective function obtained function evaluations 
offline performance average function evaluations best value obtained function evaluation 
order select parameter settings multiple runs done binary real coded algorithms different settings mutation rates real binary mutation sizes real 
best results settings mutation parameters 
binary coded algorithm experiments done mutation rate steps 
function mutation rates tried 
real coded algorithm real crossover experiments done combination mutation size mutation rate 
mutation sizes ranged steps mutation rates ranged steps 
function combinations mutation size rate tried 
done real crossover linear crossover 
function type algorithm binary real real crossover real real linear crossover mutation settings gave optimal performance measure shown 
standard deviation computed experiments mutation setting 
table best values best performance type mutation mutation best standard algorithm function rate size performance deviation binary real real linear binary real real linear binary real real linear binary real real linear binary real real linear binary real real linear binary real real linear binary real real linear binary real real linear table best values offline performance type mutation mutation offline standard algorithm function rate size performance deviation binary real real linear binary real real linear binary real real linear binary real real linear binary real real linear binary real real linear binary real real linear binary real real linear binary real real linear summary experimental results real coded algorithm real crossover linear crossover better real coded algorithm real crossover problems 
differences best offline performance best performance questionable significance 
real coded algorithm types crossover better binary coded algorithm problems real code algorithm real crossover better binary coded algorithm problems 
problems mixed crossover real coded better algorithms 
problem problem binary coded algorithm better real coded algorithms problem periodicities suited binary coded algorithm 
problem rotated degrees get rid periodicities function real coded algorithms better quite binary coded algorithm 
crossover mutation binary coded genetic algorithms analyzed apply real parameter optimization problems 
analysis suggested binary crossover viewed real crossover plus perturbation 
real coded genetic algorithms types crossover 
analysis implies mutation rates real coded algorithm considerably higher binary code algorithms 
types crossover real crossover holland schema theorem applies easily 
experimental results showed real coded genetic algorithm mixture real linear crossover gave superior results binary coded genetic algorithm test problems 
real coded algorithm linear crossover addition real crossover outperformed real coded algorithm real crossover test problems 
strengths real coded genetic algorithms include increased efficiency bit strings need converted real numbers function evaluation 
increased precision real number representation loss precision due binary representation 
see schraudolph proceedings 
greater freedom different mutation crossover techniques real representation 
schwefel rechenberg proponents evolutionsstrategie relevant 
greater freedom mentioned give practitioner decisions parameters set 
author student kevin conversations digital equipment loan decstation computer runs done 
jim new interpretation schema notation binary encoding constraint 
david schaffer ed proceedings third international conference genetic algorithms san mateo ca morgan kaufman publishers 
davis lawrence adapting operator probabilities genetic algorithms 
david schaffer ed proceedings third international conference genetic algorithms san mateo ca morgan kaufman publishers 
de jong analysis behavior class genetic adaptive systems 
ph dissertation department computer communications sciences university michigan ann arbor mi 
goldberg david 

genetic algorithms search optimization machine learning 
reading massachusetts addison wesley 
holland 

adaptation natural artificial systems 
ann arbor university michigan press 
applications genetic algorithms chemometrics 
david schaffer ed proceedings third international conference genetic algorithms san mateo ca morgan kaufman publishers 
random optimization 
automation remote control 
price controlled random search procedure global optimization 
global optimization edited dixon north holland 
schaffer david richard caruana larry eshelman das study control parameters affecting online performance genetic algorithms function optimization 
david schaffer ed proceedings third international conference genetic algorithms san mateo ca morgan kaufman publishers 
schraudolph nicol richard belew dynamic parameter encoding genetic algorithms proceedings 
schwefel numerical optimization computer models trans chichester john wiley 
original published 
