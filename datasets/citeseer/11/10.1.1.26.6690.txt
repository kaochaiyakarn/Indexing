user interface techniques non normal model manfred paul sven lutz wegner university kassel germany fb mathematik informatik kassel mail wegner db informatik uni kassel de 
compares graph oriented tabular representations context database editors argues displaying data tables preferred instance level 
particular nested tables advocated design user interaction issues database editor complex object data model described 
leads concept spatial cursors serve variety purposes 
argument supported illustrations taken running prototype named escher 
need visual user interfaces databases grown parallel development general availability graphical user interfaces 
relative importance suitable user interfaces database community pointed leading researchers field sto 
years seen development number editors browsers databases cf 
acm survey 
editors form paradigm kita 
forms natural representation nf data model nf stands non normal form known relational model relational values nested relational data model 
prototypes proposals directly derived model houben paredaens hp kuntz kuntz 
editor described called escher developed visual database interface handling complex objects origins cooperation ibm scientific center heidelberg dating far back ktw weg 
theoretical foundations derived extended nf data model dad ktw differs classical nf model ab ss hp lars addition lists multisets links variants constructors usual sets tuples full orthogonality depth nesting 
escher uses constructors common atomic data types construct schemas 
schema may give rise number instances called tables escher terminology 
instances complex nested structure explains termed complex values 
concentrate visual interface techniques comparing existing solutions new unique way navigating dimensional data world 
emphasis placed underlying software structures self referential nature approach 
graphical representations schemas database conceptual modelling graphical tools 
classical representative er model chen widespread numerous extensions eng 
main advantage er model entities relationships shown uniform concise way 
connection semantic data models alternative representations schemas appeared graphical notation called ifo model ah popular lately con object oriented databases heu 
figures show er ifo notation part schema 
readers notice relationships modelled means constructors 
labeling graph example decide relationship employees courses relation 
er diagram ifo notation general complexity representation primarily determined application context number entity types number relationships 
graphical representations instances graph oriented undoubtedly useful level schemas meet limits carried level instances 
disadvantages result fact complexity grows linearly number instances practical applications large hundreds millions 
give impression complexity going details 
graph representation object relationship instances solve problems associated information database browsers tend switch tuple time representation 
turn leads presentation mixes schema instance information seen graph oriented tuple time solution kuntz 
department employee visited course location name edate title mc mc edate title location name employee department course date text text text text visited departments employees courses approach disadvantages 
point time limited amount information directly visible 
secondly relevant context information lost gained position object relative 
thirdly schema instance information clearly distinguishable schema information repeated seen course title 
tuple time representation kuntz escher prefers tabular representation schema instance shown nested tables scrollable window cf 
entity types relationships 
time notices differences empty set cf 
table resp 
atomic null 
resp 
clearly visible 
nf schema und table escher representation textual form schema written departments set tuple text location text employees set tuple name text edate date courses set text navigation escher browsing tables usual cut paste copy functions cursor paradigm days considered part computer literacy 
special point cursor location employee department employee name edate visited name edate visited course course course course research kassel hans unix unix sql title title title title sql unix sql unix anna bernd hans kassel research marketing hamburg production munich departments location employees name edate courses title movement controlled nf semantics editor resemble syntax driven program editors 
particular cursor paradigm take account cursors spatial extension may move objects 
similar effects known graphics editors allow grouping objects frame drawn combination key stroke mouse click move groups 
escher shows location cursor switching color corresponding atomic complex values color associated cursor note shaded area 
cursors exist color exactly cursor active moment called active cursor cursors nested inner cursor painted outer cursor 
cursors created forking existing cursors 
old new cursor rest top new active cursor moved new destination 
multiple cursors needed swap operations subsets book markers examining courses example misplaced participants 
cursors placed system response query turn formulated cursor inside schema indicate attributes involved query 
general rule schema information displayed simultaneously instance information provide semantic clues 
cursors come pairs schema cursor moving step step table cursor cf 
schema object table object 
scrolling table horizontally moves schema accordingly 
editors browsers restrain cursor movement invisible rules popular time users 
true escher 
consider arrow key ignoring mouse similar pointing device moment 
depending active cursor located cursor moves left annoying beep indicate semantic violation fortunately turned protect innocent 
reason escher knows dimensions moving successor predecessor 
located tuple predecessor successor neighbouring attributes left right reached left right arrow keys 
located set list nf way placing elements set list vertical list move cursor predecessor successor case arrow key 
keys tuples set lists right succ left pred debated design team 
going object means entering object attribute element target move 
going mentally associated escaping complex object surrounding object enter esc happen diagonally separated natural choices keyboard implementation 
figures show pred succ cursor movements 
users database background quickly accept fact cursors move complex object data model 
welcome navigate large steps moving cursor outermost set tuples 
find natural move delete copy large chunks data stroke having group data 
demand short cuts normally available able move directly inner atomic attribute attribute outer object moving sql course directly anna unix course 
nf data model gives rise mixture tabular tuple time representation departments shown time employees department time visited courses scrollable sub table 

cursors called fingers user point object consideration 
tabular nested display obvious advantages non textual data displayed 
pixel pictures graphs audio video information easily displayed rectangular area table cursors moving 
fact cursors move complex vector graphics objects 
demonstrated andrew part student project university queensland australia 
attached drawing methods geometric operations rotate scale nested tuples suitable attributes type graphical object escher showed cursors usual colored markers vertices 
nested table schema graphical interpretation table displayed simultaneously changes representation immediately reflected 
operations cut paste copy search principles multiple cursors nested cursors affected addition complex geometric objects come free 
summary table oriented representation escher clearly preferred instance level clearer graph oriented informative tuple sql unix sql unix anna bernd hans kassel research marketing hamburg production munich departments location employees name edate course title going complex object sql unix sql unix anna bernd hans kassel research marketing hamburg production munich departments location employees name edate course title time display 
familiar cursor paradigm text processing carries requires lower learning curve 
disadvantage lost data space problem zooming offers help extent 
user orientation remains major challenge complex object browsers 
software support nested cursors escher originally designed test tool complex object sorting duplicate deletion designed scratch 
adopt design complex object semantics 
particular take account fact complex object data trees lists tuples flat relational model 
obvious disadvantage building top relational dbms query processing doesn come free important features concurrency roll back indexing triggers industrial strength db systems impossible achieve research prototype 
having multiple cursor concept built extending editor concurrent operative editing option 
similarly ability export import data linearized fashion existing databases oracle ingres agenda promote real world applications 
sql unix sql unix anna bernd hans kassel research marketing hamburg production munich departments location employees name edate course title pred succ going successor predecessor sql unix sql unix anna bernd hans kassel research marketing hamburg production munich departments location employees name edate course title escher single user editor running aix rs workstation 
implementation language gui derived osf motif parts interface toolkit 
shows screen dump current implementation 
screen shot taken escher cursor participant concentrate unique features support cursor principle 
easily understood depicting schema table trees way stored persistent objects disc volatile extensions core cf 
data 
illustration shows trees 
top tree schema object nodes type tuple keeping information attributes name type extensions 
nodes type set collecting data set relational theory attributes unordered 
similarly bottom tree shows set tuples degree complex value list valued attribute 
exact details schema table information stored interest 
trees stacks addresses pointing nodes tree 
schema table cursors sf schema finger tf table finger 
cursors simply stacks containing pointers nodes object tree 
alternatively cursors hierarchical paths object trees shown marking nodes path fat circles 
mentioned cursors come pairs sf tf 
software layer responsible managing cursors called object manager knows nf semantics moves cursors accordingly set small fast push pop subroutines 
needs done escher done cursors 
cursors traverse schema object trees schemas tables result window events 
cursors know existence cursors meet cause change cursor colors screen 
cursors traverse tree collect information recursively computed depth width data 
objects reordered sorted having pairs cursors doing element wise comparisons 
cursors play key role realization lock management 
today gui interface builders offer little help producing interface driven data model 
fact considered point drive windowing interface escher escher tables keep track panes scroll bars colors fonts excellent speed tree traversal software layer viable approach 
having objectoriented interface libraries low cost toolkits hand convinced direct time personal areas interest escher 
relying escher database store resources fits escher design principle self referential structures way inspired choice name editor refers works known dutch artist escher 
example mention schema viewed table instance called 
extends schema schemas including acts fixpoint 
viewing schema infinite having magic loop set back tuple containing attributes causes aname bt aname aname aname courses title set participants name set tuple tuple tuple text text text list list list text date courses title name sql unix top tf schema 
top sf 
city tuple text hamburg tuple tuple schema table tree example set tuple type text text set text set text set 
tuple tuple title participants city 
problems drawing algorithm stops traversing tree soon nodes longer visible window links known nf data model suited hierarchical relationships 
compared relational model offers additional support general relationships 
brought hierarchical form side result 
solution similar relational case normalize data table foreign keys 
editor cumbersome solution similar hypertext connectors preferable 
expanding link escher escher offers data type link 
links typed persistent database place foreign keys avoid costly joins 
go navigational paradigm editor browser 
maintain referential integrity system checks target link exists refuses delete objects pointing 
navigation link easy shown 
attribute participant link valued shown prefix 
expanded entering link referenced table opened separate window cursor referenced object 
marking new object target table new value entered link valued field source table 
annotation user defined text string link indicates link points 
solutions closer classical hypermedia proposals dexter model gr conceivable 
discussed advantages tabular versus graph oriented representations 
advantages area schema design tables prevail showing instances 
particular nested tables attractive close forms paradigm 
require cursor spatial extension 
additional features multiple cursors simultaneous display schema table display editing vector graphics directly underlying data data model driven operations complex objects discussed 
note escher impossible world appears deceive cursor draws 
cursor thinks traversing tree keeps collecting addresses stack visibly descends tree reality running circle pushing addresses 
link link hans link hans link rudi link anna sql unix courses participants participant year anna bernd hans employee name edate escher demonstration 
indicating intricate design requirements supporting nested cursor principle pointing tables visualized reporting current status implementation concluded report 
ab abiteboul bidoit non normal form relations algebra allowing data restructuring 
rapp 
de recherche inria rocquencourt france nov acm acm sigmod record vol 
march special issue advanced user interfaces database systems ah abiteboul hull ifo formal semantic database model 
acm tods vol 
pp 
ba bancilhon delobel eds building object oriented database system story morgan kaufmann publ san mateo california batini catarci costabile levialdi visual query systems 
tech 
rep dipartimento di informatica sistemistica universita degli studi di roma la sapienza chen chen entity relationship model unified view data 
acm tods vol 
pp 
dad dadam andersen lum dbms prototype support extended nf relations integrated view flat tables hierarchies 
proc 
acm sigmod conf 
management data washington pp eng engels conceptual modelling database applications extended er model 
data know 
eng vol 
pp 
gr trigg design issues dexter hypermedia system cacm vol 
pp heu heuer konzepte systeme 
addison wesley hp 
houben paredaens graphical interface formalism specifying nested relational databases 
proc 
ifip tc 
conf 
visual database systems tokyo elsevier science publ amsterdam pp 
kita kitagawa form document management system 
proc 
acm conference office information systems toronto ont canada june published newsletter vol 
nos 
pp 
ktw wegner design issues experience visual database editor extended nf data model 
proc 
rd hawaii int 
conf 
system science january pp 
kuntz kuntz versatile browser editor nf relations 
proc 
nd far east workshop database systems kyoto japan apr pp 
lars 
larsen data model query language laurel 
ieee database eng vol 
ss 
schek scholl relational model relation valued attributes 
inf 
systems vol 
pp 
sto stonebraker dbms research crossroads vienna update 
proc 
th int 
conf 
vldb dublin morgan kaufmann publ pp 
weg wegner escher interactive visual handling complex objects extended nf data model 
proc 
ifip 
conference visual database systems tokyo april pp 
weg wegner fingers walking object manipulation nf database editor 
proc 
new results new trends comp 
science maurer ed graz austria june springer lncs pp 
bing yao shi luo office forms management system 
acm tois vol 
july pp 

