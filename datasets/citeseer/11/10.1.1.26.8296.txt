evolution evolvability genetic programming lee altenberg institute statistics decision sciences duke university durham nc internet duke edu notion evolvability ability population produce variants fitter existing developed applies genetic algorithms 
theoretical analysis dynamics genetic programming predicts existence novel emergent selection phenomenon evolution evolvability 
produced proliferation programs blocks code higher chance increasing fitness added programs 
selection come mold variational aspects way evolved programs represented 
model code proliferation programs analyzed illustrate effect 
mathematical conceptual framework includes definition evolvability measure performance genetic algorithms application price covariance selection theorem show fitness function representation genetic operators interact produce evolvability genetic operators produce offspring fitnesses specifically correlated parent fitnesses blocks code emerge new level replicator proliferating function constructional fitness distinct schema fitness programs may change innovative code conservative code populations mature 
new selection techniques genetic operators proposed order give better control evolution evolvability improved evolutionary performance 
choice genetic operators representations proven critical performance genetic algorithms gas comprise dual aspects process creation new elements search space old 
hope genetic algorithm research representation operator problem solved evolutionary approach creating gas representations operators evolve 
discuss chapter genetic programming gp exhibits evolution representations inherent property 
investigate direction evolution representations genetic programming may increasing evolvability programs evolve suggest ways evolution evolvability controlled 
chapter advances genetic programming kinnear jr ed 
pp 

fl press lee altenberg evolvability evolvability concept wish develop performance measure genetic algorithms 
evolvability mean ability genetic operator representation scheme produce offspring fitter parents 
clearly necessary adaptation progress 
adaptation depends offspring fitter parents fitter property ultimately consideration speaking evolvability entire distribution fitnesses offspring produced population 
chance offspring fitter parents random search ga performance requires upper tail offspring fitness distribution random search 
excess fitter offspring compared random search needn occur parents 
need occur parents fitter average selection biasing population direction 
words action genetic operator representation needs produce high correlations performance parents fitness distribution offspring 
shown section application price covariance selection theorem price 
price theorem mind serves fundamental theorem genetic algorithms 
correlation property exemplified building blocks hypothesis goldberg 
building block schema holland fitter average individual recombined individual increase fitness 
building block defined correlation parent offspring fitnesses recombination 
recombination operator able pick schema individual substitute leaving intact building blocks producing variation way adaptive opportunity combining proper building blocks 
recombination representation building blocks schemata give correlated fitnesses substituted chromosome recombination exist 
evolvability understood local finest grained scale measuring performance genetic algorithm production fitter offspring course run ga runs global large scale performance measures 
population evolves distribution offspring fitnesses change 
global performance genetic algorithm depends maintaining evolvability population population evolves global optimum 
explore genetic programming ability evolve representations may able maintain increase evolvability programs population evolves 
evolution evolvability genetic programming representations evolvability achieved genetic algorithms 
comes genetic operators able transform representation ways leave intact aspects individual adapted perturbing aspects highly adapted 
variation dimensions selective opportunity 
illustrative domestic example consider ways water flow temperature bathroom shower represented 
common control mechanisms handle hot water flow handle cold water flow single handle varies water flow tilting varies temperature twisting clockwise counterclockwise 
adjusting shower consists perturbing degrees freedom representation flow temperature satisfactory 
representation invented deal problem usually want change flow rate changing temperature vice versa 
require sophisticated operator changes handles simultaneously right amounts requires changing tilt handle twist 
generally takes adjustments converge satisfaction greater risks freezing 
representation attuned dimensions variation typical environment barwise perry 
way saying degrees freedom epistatic relation objective function 
basic design task genetic algorithms create system dimensions variability match dimensions variability task domain 
existence sub tasks sub goals problem correspond dimensions variability task domain 
representations operators attuned dimensions exhibit greater evolvability 
speaking evolution representations genetic programming mean fine scale aspects genetic program choice functions terminals data structure implementation lisp versus programming language fixed outset 
mean large scale structure program 
particular program representation behavior program exhibits 
program behavior represented variety programs 
programs may exhibit different evolvability representations may modification genetic operators produce fitter programs 
representation understood variational properties changes lee altenberg representation map changes behavior code 
object oriented programming example usually described manner fundamentally method engineering desirable variational properties code 
important understand variational properties program distinct fitness 
classical fixed length gas selection act fitness population variational properties representation 
genetic programming selection act described 
evolving evolvability number modifications genetic algorithms implemented evolve evolvability adapting genetic operators representations 
include ffl addition modifier genes values control genetic operators loci controlling recombination mutation rates distributions back schwefel bergman feldman shaffer ffl running meta level ga parameters operators run primary ga produces performance measure fitness operator parameter grefenstette ffl messy gas form representation allows complex transformations parent offspring goldberg deb korb ffl focusing probabilities operator events history generating fitter individuals davis ffl adjusting mutation distribution maintain certain properties fitness distribution fifth rule evolution strategies back schwefel ffl dynamic parameter encoding neil smith greenwood schraudolph belew 
genetic programming allows means evolvability evolve differential proliferation blocks code programs 
differential proliferation blocks code programs observed practice see angeline pollack tackett chapters volume angeline ch 
kinnear ch 
teller ch 
ch 
handley ch 

constructional selection proliferation copies code programs possible genetic programming syntactic closure programs duplications 
recombination operators evolution evolvability genetic programming carry duplications 
exchange subtrees main genetic operator gp general recombination involve block code automatically defined functions koza 
blocks code duplicated indefinitely programs constitute emergent level replication selection 
employ concept replicator entity spawn multiple copies interactions environment dawkins brandon 
programs primary level replicator gp selection operator explicitly duplicates fitness 
blocks code emerge level replicator copies proliferate programs 
rate proliferate imposed selection operator case programs 
suppose different blocks code different likelihoods improving fitness substituted random locations randomly chosen programs population 
genetic operator increase frequency chooses blocks code bearing highest likelihood producing fitter offspring evolvability increase 
frequency depends average number copies block code population increase ways way programs contain block increase number population 
shows schema marginal fitness block code accounted applying schema theorem holland genetic programming koza 
pure selection effect produce copies block code programs 
requires creation novel programs insertion additional copies code donor programs recipient programs 
offspring programs survive long recipients copies code donors contributing additional copies code recipient programs 
numbers evolve number programs carrying block code number copies code programs 
change determined selection specified fitness function gp algorithm 
change emergent selection phenomenon involving effects constructing new programs adding copies block code 
am proposing proliferation copies code programs constitutes secondary kind selection process refer constructional selection altenberg 
schema theorem account process 
increases number copies block code programs requires multiple sampling genetic operator result time lucky event 
differential proliferation code depends repeatable statistical differences fitness effects code substitutions different blocks 
contrast fixed length ga single substitution schema chromosome produce individual fit lee altenberg schema goes fixation recombination events point increase schema frequency possible 
block code relatively stationary distribution effects fitness programs added rate proliferation programs referred constructional fitness 
constructional fitness distinct current average fitness population block code marginal schema fitness 
emergent selection phenomenon constructional fitness evaluated gp algorithm obtained averaging current program fitnesses 
determines constructional fitness block code 
fitness distribution carry new copy block code determine block 
rapidly particular block code programs depends nontrivial ways relationship population dynamics fitness distribution new programs carrying additional copies stationary distribution population evolves 
population dynamics easy analyze gp version hill climbing 
single program modified internally duplicating block code substituting location program 
new program fitter keep try 
gp hill climbing effective dynamics low recombination rates selection fixes fittest program recombination event occurs 
gp hill climbing resembles dynamics gene duplication natural populations 
dynamics deleterious additions block code go extinct code passed recombination 
advantageous additions resampled 
blocks code proliferate solely probability increasing fitness added program 
consequence time growing proportion code additions genetic operator involve blocks code high probability producing fitness increase 
way operator focused action dimensions variability greater potential increasing fitness 
simply increase programs population change potential adaptation change evolvability gene pool 
high recombination rates typical gp picture simple 
refer block code probability increasing fitness added program evolvability value 
high recombination rates blocks code highest evolvability value need highest constructional fitness 
program way extinction selection sampled times genetic operator donor code new programs 
block code caused deleterious effect evolution evolvability genetic programming added program chance sampled donation program goes extinct 
blocks code proliferate depending survival time programs resulting addition 
code produces near neutral effect constructional fitness advantage ruth code code occasionally produces fit new programs average deleterious effect added program 
early stages evolution population block code survive distinct question proliferation programs able increase fitness recombination events blocks code fast mean fitness population increasing 
code competition high evolvability expect code high evolvability survive proliferate programs stage 
stages population evolution population reaches balance mean fitness approaches quasi stationary state 
point main selective opportunity fitter average program preserve fitness got producing offspring altenberg altenberg feldman 
code competition robustness behavior face actions genetic operators 
evolution populations programs fitness robust crossover stages gp runs reported koza andrew singleton mick keenan personal communication identified phenomenon defense crossover 
possibilities genetic programming emergent evolutionary phenomena indicate may prove rich area research 
shows better understanding gp dynamics needed control direction emergent phenomena making gp useful tool 
suggestions provided discussion maintain evolution evolvability special selection regimes genetic operators 
synopsis models sections provide mathematical underpinnings concepts discussed far 
section investigate relations selection genetic operators representations evolvability 
main results duality representations genetic operators producing transmission function second relationship transmission function selection function determines performance genetic algorithm third relationship selection ruth american baseball player mediocre average got hit home run 
lee altenberg transmission produces ga performance correlations parental fitness offspring fitness distributions 
expressed mathematically elaborating price covariance selection theorem price 
propose theorem provides adequate basis account genetic algorithm performance schema theorem holland 
section offer simple model genetic programming dynamics illustrate constructional selection produce evolution evolvability 
model includes simplifying assumptions provide tractable illustration mechanism evolutionary increase evolvability simplifications undoubtedly limit model applicability emergent phenomena genetic programming 
assumptions include genetic operator add blocks code programs programs delete blocks code programs disrupt population undergoes gp hill climbing 
model comprises generation model complex models developed 
demonstrates different distributions fitness effects blocks code lead exponential proliferation confer greater evolvability programs contain 
emphasize distinction schema fitness block code constructional fitness determines proliferation rate programs 
selection transmission evolvability conventional theoretical approach genetic algorithms focuses schemata schema theorem 
approach relies hidden assumptions obscured misled ga design principle minimal alphabets goldberg 
main hidden assumption wish bring implicit correlations 
approached considering general model genetic algorithms arbitrary representations operators selection 
approach possible extract features essential performance gas schemata 
action genetic operators representation produces transmission function feldman altenberg altenberg feldman simply probability distribution offspring possible mating 
parents example transmission function simply evolution evolvability genetic programming labels parents label offspring 
precise search space 
clearly transmission function represent action genetic operators binary fixed length gas messy gas parse trees gp real valued gas ae functionals 
multi parent transmission simply represented 
principle relationship transmission function fitness function determines ga performance 
transmission function screens salmon brandon effect choice representation operators changes affect dynamics ga effect transmission function 
example effect inserting introns loci neutral performance targets crossover forrest mitchell change representation equivalently achieved adjustment crossover operator 
discussion implications principle genetic programming design considered 
aspect relationship transmission function fitness function crucial ga performance 
correlation parental performance offspring performance action genetic operators 
correlation selection parents means influencing distribution offspring fitnesses 
explicit condition section utilize price selection covariance theorem price show change fitness distribution population depends correlation 
develop form recursion general canonical genetic algorithm 
define idea measurement functions extract information population allows statement price theorem 
proper measurement function allows price theorem show distribution fitnesses population changes generation including probability producing individuals fitter population 
seen depend covariance parent offspring fitness distributions search bias indicating better current population genetic operator random search 
general model canonical genetic algorithm purpose mathematical exposition canonical model genetic algorithms generally formulation holland incorporates lee altenberg assumptions common evolutionary models population genetics discrete nonoverlapping generations frequency independent selection infinite population size 
algorithm iterates steps selection random mating production offspring constitute population generation 
definition canonical genetic algorithm dynamical system representing canonical genetic algorithm jk ffl frequency type population frequency generation ffl fitness type ffl mean fitness population ffl probability offspring type produced parental types result action genetic operators representation 
general form transmission selection recursion early subsequently variety quantitative genetic complex transmission systems feldman karlin altenberg feldman 
quadratic structure recursion seen displaying vector form omega omega transmission matrix matrix transmission function probabilities number possible types assuming finite diagonal matrix fitness values frequency vector different types population omega kronecker tensor product 
kronecker product gives products pairs matrix letter fitness traditional population genetics derives worth wright informal comment 
evolution evolvability genetic programming elements omega fl fl fl fl fl fl fl fl fl fl fl fl fl fl fl fl fl fl fl fl fl fl fl fl xa xb ya yb za zb xc xd yc yd zc zd xe xf ye yf ze zf fl fl fl fl fl fl fl fl mathematics identity matrix explored depth 
measurement functions 
function properties individuals type 
parameterized family functions parameter 
interested properties averaged population vector space real numbers allowing averages 
different measurement functions allow extract different kinds information population examining change population mean measurement function examples different measurement functions population properties measured shown table 
price theorem applied evolvability price theorem gives generation change population mean value theorem covariance selection price parental pair fj kg oe jk represent expected value offspring 
oe jk population average measurement function generation oe cov oe jk oe jk oe jk lee altenberg table measurement functions arguments population properties measured mean population property measurement function ffl mean fitness ffl fitness distribution ffl subtree frequency pr operator picks subtree crossover ffl schema frequency ffl mean phenotype valued average offspring value population reproducing selection cov oe jk jk oe jk gamma oe population covariance parental fitness values measured values offspring 
roof obtained directly substituting 
price theorem shows covariance parental fitness offspring traits means selection directs evolution population 
price theorem extract change distribution fitness values population measurement function evolution evolvability genetic programming proportion population fitness greater standard cumulative distribution function gamma 
definitions need 
ffl probability random search produces individual fitter ffl parental pair fj kg define search bias fi jk excess chance producing offspring fitter compared random search fi jk gamma ffl average search bias population selection fi jk fi jk ffl variance relative fitness parental pairs var jk gamma var var ffl coefficient regression fi jk population measures magnitude fi varies reg fi jk cov fi jk var theorem evolution fitness distribution probability distribution fitnesses generation fi var reg fi jk theorem shows order ga perform better random search producing individuals fitter search bias plus parent offspring regression scaled fitness variance fi reg fi jk var positive 
lee altenberg wish know frequency population produces individuals fitter exist 
simply uses max max theorem 
refined quantifying degree transmission function exploring search space versus exploiting current population 
holland introduced idea gas find balance exploration exploitation optimal search 
transmission function global upper bound placed degree exploration altenberg feldman lemma exploration rate limit transmission function parameterized uniquely gamma ff ffi ij ffi ik ffp ffi ij ff gamma min transmission function value ff defined global exploration rate limit transmission function sets maximum rate novel genotypes produced transmission possible population compositions 
exploratory part transmission function referred search kernel 
classical gas example transmission function consists recombination followed mutation transmission matrix decomposed product gamma gamma ae omega aer gamma ae chance crossover gamma chance mutation reproduction markov matrix representing mutation probabilities matrix representing recombinant offspring probabilities long vector yielding ff ae gamma ae evolution evolvability genetic programming recursion rewritten gamma ff ff jk gives theorem evolvability probability population generates individuals fitter existing max ff phi max fi max var reg fi jk max psi search bias fi jk max defined terms search kernel fi jk gamma roof result direct noting terms times gamma ff max 
regression search bias terms require transmission function knowledge fitness function 
random search terms zero 
implicit knowledge source power genetic algorithms 
appear maximum evolvability achieved setting ff 
ff cumulative increases frequency fittest types selection occur average search bias able increase 
average search bias population reflects accumulation time covariance search bias fitness seen fi changes generation fi fi jk gamma ff fi cov fi jk ff optimal value ff complex question received amount theoretical empirical attention special cases manner back schaffer davis grefenstette 
lee altenberg price theorem schema theorem theorems ga performance needed invoke schemata 
schema theorem holland viewed theoretical foundation explaining power genetic algorithms 
schema theorem distinguish ga easy problem ga hard problem random needle fitness functions obey schema theorem short schemata average fitness increase frequency schemata unrelated way fitness function 
muhlenbein radcliffe pointed schema theorem explain sources power genetic algorithms 
expositions schema processing provides gas power framing building blocks hypothesis goldberg implicit regression search bias terms theorems positive recombination operator 
deceptive ga hard problems point population evolution optimum evolvability vanishes terms go zero 
investigations performance different representations operators implicitly studying keep positive optimum attained 
example hamming cliffs single bit changes classical binary string gas cause large changes real valued parameter encoded string problem large jumps parameter space lower correlations fitness typical problems 
gray code increases correlation resulting single bit changes average 
fact theorems apply representation scheme genetic operator important give measure representations operators judged 
representations mutation may give greater evolvability search space representations recombination operator may give greater evolvability 
operators gives greater evolvability may change population evolves 
question non binary representation non classical operators recombination mutation legitimate fit framework schema processing seen misconception 
combination operators representations achieve evolvability properties course run equally legitimate 
studies manderick de menczer parisi attempted estimate performance different genetic operators examining correlation mean fitness parent offspring 
price theorem shows correlation embedded covariance expression exact term equation change mean fitness population 
model real valued ga qi qi qi go evolution evolvability genetic programming derive version price theorem order give change mean phenotype population vector valued phenotype measurement function 
dynamics genetic programming section look search bias parent offspring regression evolve differential proliferation blocks code programs 
dynamics code proliferation genetic programming exact behavior formidable analytical problem 
describe believe qualitative aspects analyze simplified model dynamics gp hill climbing 
basic conjecture blocks code proliferate programs shape distribution fitness effects added programs population 
differential proliferation code come change distribution fitness effects resulting genetic operator evolvability evolve 
model genetic programming dynamics assume genetic operator recombination mutation acting 
space different blocks code 
ijj probability recombination operator picks particular block program ijj frequency operator picks block random program population ijj marginal fitness prefers schema fitness block average fitnesses programs contain weighted frequency block programs ijj definitions give gp form gamma ff ff note longer symmetrical arguments lee altenberg constructional fitness block code described section high recombination rates block code program fit average way extinction may get sampled added program blocks high probability producing near neutral effect fitness may able proliferate competing blocks large portions deleterious effects 
low recombination rates population tend fix single fittest program recombination events 
deleterious usually go extinct sampled recombination 
blocks code proliferate producing fitness increases added program fixed population 
simple situation effectively gp hill climbing show program come composed code high chance producing fitness increases duplicated program 
model differential code proliferation genetic programming need additional simplifying assumptions 
assume blocks code transmitted discretely nested 
second shall consider recombination events add blocks code deleting 
third sort regularity assumption properties block code order systematic differential proliferation different blocks 
shall assume block code added program factor changes program fitness relatively stationary distribution 
necessary consistent constructional fitness population evolves 
reality distribution doubtless depends stage evolution population diversity programs task domain 
complications course areas investigation 
new block code type created suppose probability density multiplies fitness organism factor 
probability density result phenotypic properties block code nature programs added task domain 
small ff population evolves addition block code increases fitness program 
code duplications occur population fixed new fitter program 
probability copy block code increases fitness program 
fi jk block added program produce program major simplifying assumption constant programs added 
value rate evolution evolvability genetic programming block code gives rise new copies successfully incorporated program think block constructional fitness 
number blocks code type program time set ff rate duplication unit time genetic operator blocks code 
probability operator picks block duplication probability copy block successfully added program obtains differential equation change composition program approximating number blocks code continuum dt ff evolving program ratio frequencies blocks code grows exponentially difference constructional fitnesses ff gamma theorem evolution evolvability evolvability program average constructional fitness blocks code chance duplicated random block code increases fitness program increases rate ff var roof dt dt ff gamma ff ff gamma ff var lee altenberg program size program size constructional fitness block code number blocks code comparison distribution constructional fitnesses blocks code evolving program 
initial program size generation truncated normal distribution assumed illustration 
dynamics constructional selection time program evolved size distribution shifted favor fit blocks code 
rate increase evolvability program proportional variance constructional fitnesses blocks code 
result fisher fundamental theorem natural selection fisher applied fitness evolving programs evolvability probability genetic operators acting program gives rise new fitter programs 
distribution constructional fitnesses blocks code program followed program grows size evolution 
example plotted distribution constructional fitness values blocks program generation compared distribution program evolved times original size 
blocks high likelihood increasing program fitness duplicated increased proportion enormously 
constructional fitness distinct marginal fitness illustrated example 
consider programs equal fitness subtree chance increasing fitness duplicated 
call subtree program subtree second program rest code programs produces deleterious results duplicated 
suppose possible ways subtree duplicated program increases fitness suppose subtree chance program 
values constructional fitnesses subtrees 
suppose duplications subtree produce fitness increase increase factor subtree factor 
follow expected evolution evolvability genetic programming subtree fitness effect probability expected program fitness expected number subtree copies trials trials example showing constructional fitness subtree marginal fitness population 
equations plot 
left fa bg 
right oe exp gamma oe fitness effect factor subtree 
number copies subtrees expected fitnesses programs carrying time model 
plotted 
see program subtree higher constructional fitness smaller fitness effect falls expected fitness shoots ahead program subtree exponential growth takes 
assumes proportion programs block small 
constructional fitness marginal fitness block code schema theorem account proliferation blocks code programs 
discussion conservative versus exploratory code mature gp populations typical high recombination rates blocks code proliferate may greatest chance increasing fitness added programs may play conservative game trade ability increase fitness ability deleterious added nearly neutral code 
constructional fitness block code may correspond evolvability lee altenberg value 
high recombination rates induce selection central part block fitness distribution upper tail 
expect upper tail probability block increasing fitness added shrink population highly adapted average fitness effect important statistic block code 
possible measure gp runs 
low recombination rates probably optimal gp performance benefit constructional selection favor blocks code upper tails fitness effects yielding code greater evolvability 
ways limit constructional selection upper tails distribution high recombination rates suggest upward mobility selection 
recombinant offspring produced place population fitter parents 
implemented requirement fitter parents parent mid parental value supra parental value 
regime exaggerated adding population copy individuals exceed parents fitnesses certain amount 
upward mobility selection put deleterious near neutral recombinations equal footing preventing proliferation code trades evolvability value ability produce deleterious effects 
soft brood selection 
suppose produce number recombinant offspring mating fittest brood result mating effectively holding tournament brood 
called soft brood selection population biology soft selection brood affect offspring mated pair contribute generation 
total probability upper tail fitness effect distribution block brood size probability offspring fitter parent recipient block code gamma gamma small 
scaling population evolves mimic dynamics constructional selection small recombination rates 
conjecture upward mobility selection brood selection evolvability soft brood selection upward mobility selection distribution fitness effects recombination events genetic programming increase upper lower tails compared conventional selection 
tests conjecture currently way 
brood selection practical benefit depends computational overhead producing larger better expended larger population sizes 
evolution evolvability genetic programming genetic engineering 
direct way counter constructional selection conservative code create intelligent recombination operators seek code high evolvability value 
done estimating evolvability value different blocks code sampling history code creating library code highest evolvability values having operator draw library source donor code 
approach development walter tackett personal communication 
constructing library requires keeping tallies distribution fitness changes produced genetic operation order estimate block code evolvability value 
may profitable genetic operator intelligent adding context sensitivity 
examine arguments calling nodes block code see increased fitness 
principle applied genetic programming design genetic programming algorithms point principle may helpful changes representations operators relevant evolutionary dynamics change transmission function 
point obscured representations serve dual function gp representation computer program perform computations fitness representation operated genetic operators produce variants 
functions representation refer generative variational aspects respectively variational aspect relevant evolutionary dynamics 
modifications gp representation provide illustration modules angeline pollack automatically defined functions adfs koza 
angeline pollack introduce operator replaces subtree single referent possibly arguments making subtree atom call module 
evolutionary dynamics result adding markers told genetic operator avoid crossover delimited region 
compression operator changes variational aspect representation 
koza introduced adfs modification gp representation shown improve evolvability orders magnitude number task domains 
understand adfs 
way see adfs doing variational properties representation expand main result producing branch program recursively replacing adf calls code executed 
consider operator acting adf form representation doing expanded form representation 
generation new randomly generated programs expanded form show internally repeated structures code 
lee altenberg vanishingly random programs node argument sampled independently pool functions terminals 
effect achieved non independent generation branches initial population 
adf form representation adf branch undergoes recombination expanded form see parallel substitutions instance repeated code 
operator recognized repeated instances block code changed parallel variational property adfs 
translate equivalent forms simple operators acting complex representations complex operators acting simple representations 
success adfs indicates variety cases dimensions variation produced adfs highly attuned dimensions variation task domain 
main research task explore variational possibilities representations operators find attuned task domains 
suggestions offered divergent adfs 
allow different calls adf replaced instantiation adf code evolutionarily diverge original adf 
mimics process gene duplication divergence biological evolution 
adf may optimal calling function may optimal relaxing constraint may allow better optimization 
alternatively adf instantiated code gene conversion operator produce tunable degree information exchange family related adfs 
cassette recombination crossover occurs root branch boundaries internal part subtree set inputs feeding root unchanged intervening code varies genetic operator grew discussion kenneth kinnear jointly defined operator calls operator modular crossover chapter volume 
maintaining relationship distal arguments proximal functions varying processing advantageous dimension variation 
branching junctions 
included set terminals functions primitives facilitate creation programs topologies 
branch allow value returned subtree piped arguments different functions program 
scaling 
problem scaling small toy problems large ones ubiquitous artificial intelligence 
ability scale may emerge genetic programming manage scaling evolvability property 
attempted maintaining constant directional selection performing increasing term borrowed genetics refers substitution block genes transposition yeast mating type switching example nielsen 
evolution evolvability genetic programming scale population reached certain performance level fitness cases scale fitness cases higher scale introduced 
blocks code may proliferate able increase simple actions genetic operator scale program handles 
chapter described emergent selection phenomenon evolution evolvability occur genetic programming differential proliferation blocks code programs 
preparing conceptual framework phenomenon mathematical analysis evolvability genetic algorithms general 
analysis employed price covariance selection theorem demonstrate genetic algorithm performance requires genetic operator acting representation produce offspring fitness distributions correlated parents fitnesses 
discussed theorem yields necessary connection representations operators fitness missing schema theorem order tell genetic algorithm 
general framework backdrop illustrated evolution evolvability simple mathematical model code proliferation genetic programming 
consideration dynamics genetic programming number suggestions offered ways control evolution evolvability 
included gp hill climbing upward mobility selection soft brood selection genetic engineering 
furthermore techniques suggested enhance performance genetic programming including divergent adfs cassette recombination branching junctions selection 
certainly various conjectures suggestions chapter provide directions 
really needed mathematical methods analysis simulation models explore thoroughly population genetics genetic programming 
chapter mainly concerned population dynamics algorithmic properties blocks code may determine evolvability value 
area needs investigation 
phenomena gp primarily population dynamic phenomena deeply derived algorithmic nature evolving programs 
simulations genetic programming implement population dynamics controlling fitness function instrumental distinguishing 
lee altenberg genetic programming open ended complexity evolve potentially rich new area emergent evolutionary phenomena 
novel approaches need developed phenomena implications genetic programming design understood 
search alternative schema theorem began santa fe institute complex systems summer school 
david hall pointing price 
chapter benefited greatly discussions held international conference genetic algorithms reviews earlier versions 
especially roger altenberg kenneth kinnear walter tackett peter angeline andrew singleton john koza 
cassette recombination jointly invented discussion kenneth kinnear 
notice application material chapter military expressly wishes author 
bibliography altenberg generalization theory evolution modifier genes 
phd thesis stanford university 
available university microfilms ann arbor mi 
altenberg 
knowledge representation genome new genes exons pleiotropy 
genetics supplement 
meeting genetics society america 
altenberg feldman 

selection generalized transmission evolution modifier genes 
reduction principle 
genetics 
angeline 
genetic programming emergent intelligence 
kinnear editor advances genetic programming cambridge ma 
mit press 
angeline pollack 

coevolving high level representations 
langton editor artificial life iii menlo park ca 
addison wesley 
press 

new interpretation schema notation binary coding constraint 
schaffer editor proceedings third international conference genetic algorithms pages san mateo ca 
morgan kaufmann 
back 
self adaptation genetic algorithms 
varela bourgine editors practice autonomous systems 
proceedings european conference artificial life pages cambridge ma 
mit press 
evolution evolvability genetic programming back 
schwefel 

survey evolution strategies 
belew booker editors proceedings fourth international conference genetic algorithms pages san mateo ca 
morgan kaufmann 
barwise perry 

situations attitudes 
press boston pages 
bergman feldman 

recombination dynamics fitness landscape 
physica 
brandon 
levels selection hierarchy interactors 
plotkin editor role behavior evolution pages 
press cambridge massachusetts 
brandon 
adaptation environment 
princeton university press princeton pages 
feldman 

evolution continuous variation direct approach joint distribution genotypes phenotypes 
proceedings national academy science 
davis 
adapting operator probabilities genetic algorithms 
schaffer editor proceedings third international conference genetic algorithms pages san mateo ca 
morgan kaufmann 
dawkins 
selfish gene 
oxford university press oxford 
nielsen 

unblocking crossing silent mating type fission yeast conditioned recessive pleiotropic mutant rik 
current genetics 
fisher 
theory natural selection 
clarendon press oxford pages 
forrest mitchell 

relative building block fitness building block hypothesis 
whitley editor foundations genetic algorithms pages 
morgan kaufmann san mateo ca 
goldberg 
genetic algorithms search optimization machine learning 
addison wesley 
goldberg deb korb 

messy genetic algorithms revisited studies mixed size scale 
complex systems 
grefenstette 
optimization control parameters genetic algorithms 
ieee transactions systems man cybernetics smc 
handley 
automatic generation plans mobile robot genetic programming automatically defined functions 
kinnear editor advances genetic programming cambridge ma 
mit press 
manner 

optimal mutation probability genetic algorithms 

schwefel manner editors parallel problem solving nature pages berlin 
springer verlag 
holland 
adaptation natural artificial systems 
university michigan press ann arbor 
karlin 
models inheritance multivariate formulations basic convergence results 
theoretical population biology 
kinnear 
alternatives automatic function definition comparison performance 
kinnear editor advances genetic programming cambridge ma 
mit press 
koza 
genetic programming programming computers means natural selection 
mit press cambridge ma 
koza 
hierarchical automatic function definition genetic programming 
whitley editor foundations genetic algorithms pages 
morgan kaufmann san mateo ca 
lee altenberg 
inserting introns improves genetic algorithm success rate cue biology 
belew booker editors proceedings fourth international conference genetic algorithms pages san mateo ca 
morgan kaufmann 

mathematical structures population genetics 
springer verlag newyork pages 
manderick de 

genetic algorithm structure fitness landscape 
belew booker editors proceedings fourth international conference genetic algorithms pages san mateo ca 
morgan kaufmann publishers 
menczer parisi 

evidence hyperplanes genetic learning neural networks 
biological cybernetics 
muhlenbein 
evolution time space parallel genetic algorithm 
rawlins editor foundations genetic algorithms pages 
morgan kaufmann san mateo ca 

scientific applications genetic programming stack filters non linear equation fitting chaotic data 
kinnear editor advances genetic programming cambridge ma 
mit press 
neil 

strategy iii bbn butterfly multiprocessor 
martin editors proceedings supercomputing vol ii science applications pages 
ieee computer society press 
qi 

analyses darwinian optimization algorithms continuous space 
technical report ee department electrical systems engineering university connecticut ct available ftp ftp roma eng edu 
smith greenwood 

genetic design processing elements path planning networks 
ijcnn international joint conference neural networks volume pages new york 
price 
selection covariance 
nature 
price 
extension covariance selection mathematics 
annals human genetics 
qi 

general properties genetic algorithms euclidean space adaptive mutation crossover 
technical report ee department electrical systems engineering university connecticut ct available ftp ftp roma eng edu 
radcliffe 
non linear genetic representations 
manner manderick editors parallel problem solving nature pages amsterdam 
north holland 
salmon 
statistical explanation statistical relevance 
university pittsburgh press pittsburgh 
schaffer 

adaptive crossover distribution mechanism genetic algorithms 
grefenstette editor genetic algorithms applications proceedings second international conference genetic algorithms pages hillsdale nj 
lawrence erlbaum associates 
schaffer caruana eshelman das 

study control parameters affecting online performance genetic algorithms function optimization 
schaffer editor proceedings third international conference genetic algorithms pages san mateo ca 
morgan kaufmann 
schraudolph belew 

dynamic parameter encoding genetic algorithms 
machine learning 

strategy adaptive representation genetic optimizer technique 
grefenstette editor genetic algorithms applications proceedings second international conference genetic algorithms pages hillsdale nj 
lawrence erlbaum associates 
evolution evolvability genetic programming 
selection characters 
proceedings national academy sciences 

multi stage adaptive coding genetic algorithm design applications 
pace editor proceedings summer computer simulation conference pages san diego ca 
tackett 
genetic programming feature discovery image discrimination 
forrest editor proceedings fifth international conference genetic algorithms pages san mateo ca 
morgan kaufmann 
teller 
evolution mental models 
kinnear editor advances genetic programming cambridge ma 
mit press 
