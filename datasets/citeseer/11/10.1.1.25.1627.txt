image segmentation nested cuts olga veksler nec research institute independence way princeton nj olga research nj nec com new image segmentation algorithm graph cuts 
main tool separation pixel special point outside image cut minimum cost 
cut creates group pixels pixel 
show groups disjoint nested give natural segmentation image 
addition property allows efficient implementation algorithm pixels computation performed graph 
inspect discard interesting example small 
procedure automatically groups small components merges nearby large clusters 
effectively segmentation performed extracting significant non intersecting closed contours 
interesting segmentation results real artificial images 
popular framework image segmentation data clustering graph partitioning 
weighted undirected graph constructed set image pixels edges connect neighboring pixels prescribed neighborhood system 
weight edge fp qg measures similarity pixels usually increasing function similarity 
goal graph partitioning break disjoint sets similarity pixels small 
lot prior performs partitioning purely local properties 
methods local properties general efficient fail capture important global properties scene see discussion 
years graph cuts emerged powerful optimization technique allows extraction global information 
propose new segmentation method graph cuts 
reviewing graph cuts segmentation methods graph cuts 
graph cuts suppose subsets 
cut subset edges connect cut cost just sum edge weights minimum cut cut minimum cost 
efficiently example see 
general may minimum cuts 
rooted variant minimum cut problem distinct nodes call terminals 
want find minimum cut restriction notation cut denote cut restriction 
cut splits vertices sets denote segmentation cuts wu leahy proposed algorithm optimally partitions graph subgraphs maximum inter subgraph cut minimized 
solution minimizes similarity different subgraphs 
algorithm works recursively splitting segment parts minimum cut graph partitioned parts 
avoid cutting single pixel connected neighbors edge weights decrease fast 
severing just edges pixels similar intensities expensive severing edges pixels different intensities 
weight assignments approach prefers cutting small isolated clusters graph choice right difficult 

original image best contour normalized length 
avoid problem small clusters shi malik propose normalize cost cut follows nc addition minimizing similarity normalized cut maximizes normalized association similarity group 
problem minimizing normalized cut np hard find approximate solution generalized eigenvalue problem interesting discussion segmentation algorithms eigenvectors see 
normalized cut algorithm successful applied types grouping problems 
cases difficulties 
perona freeman provide example 
consider segmentation structured foreground unstructured background see illustration 
foreground pixels large similarity background pixels dissimilar 
bipartitioning foreground background fails due bad approximation fact normalized cut seeks partition image groups pixels group similar 
removing bias small segments normalized cut biased splitting image parts equal weight 
extreme example 
background intensity 
foreground consists square intensity 
left side square narrow ramp foreground background gap pixel wide edge square background 
assume pixel connected nearest neighbors 
normalized cost cut separates square background cost 


cost edge pixels intensity just considered cost highest terms equation 
normalized cost cut splits image vertically equal pieces approximately 





regardless weights cut high cost edges cost smaller cost cut just high cost edges 
think ways normalize cut example total number edges cut 
intuitively corresponds finding highest contrast edge 
approach creates small clusters 
second consider 
rectangles different size stacked top bottom top rectangles shaded 
due shading inner outer contours middle rectangle decrease contrast left right 
weight choices optimal cut normalized number edges shown 
consists brightest parts contours middle rectangle cuts inside middle rectangle 
cost including heavy edges averaged result best contour combination distinct contours perceived human observer 
interesting approach bipartitioning gdalyahu weinshall werman 
propose stochastic segmentation algorithm way cuts generalization way cut defined 
approach propose new algorithm rooted graph cuts 
methods discussed algorithm similar 
partitioning graph optimally subgraphs graph cuts directly search closed contour small cost pixel 
introduce new graph node connect pixels boundary image edges appropriately chosen small weight 
new addition graph structure serves purposes 
assigns low cost contour consisting image boundary cost contour sum weights edges incident 
secondly node intuitively represents scene outside image similar pixel nodes 
find low cost contour separate external node minimum cut 
cut creates group pixels containing show find minimum cuts nested disjoint 
give natural partitioning graph 
addition property allows implement algorithm efficiently 
exclude segmentation uninteresting example smaller prescribed size 
procedure automatically groups small components merges larger clusters 
effectively algorithm performs segmentation finding significant closed contours touch intersect 
recursively apply algorithm segment certain stopping criterion reached 
criterion implies interesting contours 
organized follows 
section explain algorithm section show implement efficiently section experimental results 
nested cuts graph structure describing structure graph 
set image pixels ffp qg pg prescribed neighborhood system 
common choice set pixel pairs distance 
set vertices graph ftg 
set edges ffp tg image special node serves terminals 
intuitively interpreted node outside image dissimilar pixel node 
weight edges fp qg proportional similarity pixels weight edges ft pg discussed general keep low 
main theorems pixel minimum cut 
results theorem minimum cut theorem minimum cut give intuition theorems simple situation cuts form paths give general proofs appendix 
suppose theorem false 
minimum cut 
case illustrated 
theorem theorem 
thick solid dashed edges show cut thin solid dashed edges show cut cut consists dashed thin path solid thin path 
prefers cutting thin solid path thick dashed path 
means thin solid path cheaper thick dashed path 
cut prefer cutting thin solid path thick dashed path get contradiction 
suppose theorem false 
minimum cut 
consider 
cut prefers cutting thin solid path thick dashed path 
means cut prefer cutting thin solid edge contradiction 
weights edges fp tg assign edge weight edges ffp tg image 
choice plays important role algorithm 
general want assign low weight pixel similar way looking contour consisting border image low cost 
small optimal cut choose discrete range wmax binary search find smallest threshold jc jp threshold 
jsj denotes set size threshold smallest segment size allow 
segmentation stopped 
image segmented apply algorithm recursively resulting segment 
controls maximum cost cuts willing include segmentation 
include segmentation cut cost multiplied boundary length 
choice wmin wmax follows wmin just smallest possible edge weight wmax largest possible edge weight contour consisting edges weights wmax considered contour include segmentation 
notice cases boundary length longer length contours inside image expect image contain contours longer boundary original image results 
create edges boundary pixels 
segmentation stopped cut cheaper wmax times boundary length decision contours left 
desired property equal wmax done segmenting contours contours consisting edges weights larger current 
algorithm proceeds recursively find contours 
nested cuts algorithm 
create new graph 
binary search find smallest threshold jc jp threshold 
step exit 
find discard jc jc jp threshold 
recursively apply algorithm segments 
deeper levels recursion costs cuts get larger 
get hierarchy segmentations deeper levels hierarchy general contain weaker contours 
current implementation decision include final segmentation size 
criterion 
efficient implementation stated algorithm previous section inefficient 
section discuss steps take implement efficiently 
sampling recall step algorithm need test threshold jc jp threshold 
implement test efficiently sample pixels random 
trials satisfactory assume exists 
suppose pixels satisfy desired property 
probability random trials replacement find pixels practice choose pixels desired property probability 
graph reduction theorems allow reduce graph size 
suppose want compute cut contracted node furthermore nodes contracted node 
required storage linear size graph 
keep separate graph contains nodes soon new new graph created nodes contracted node graph speedups reduce computations required step algorithm 
suppose pixel computed minimum cut easy observe cost minimum cut larger equal minimum cut cut equal 
exploit fact 
cost minimum cut equal amount flow push see 
push flow cost neighboring pixels similar color push flow cost just edges graph 
cases push flow just single edge algorithm proceeds follows 
pixels marked unprocessed 
unprocessed pixel compute minimum cut mark processed 
neighbors close color unprocessed cut small piece graph usually nodes pixels check push flow size mark processed continue process looking neighbors leave unprocessed 
contract nodes set replace nodes new node remove edges points replace multiple edges single edge weight equal sum multiple edge weights 
original image top hierarchy bottom hierarchy 
baseball image 
size 
running time minutes 
levels hierarchy 
experimental results section experiments segmenting intensity images 
important parameters algorithm edge weights 
usually segmentation results sensitive weights 
important factor choosing edge weights sure decrease rapidly decrease similarity 
common choice intensity pixel distance pixels control parameters 
chose different weights similar functional form max iq experiments set threshold wmax wmin 
image section nearest neighbors images nearest neighbors 
results displayed assigning segment unique intensity 
structured foreground unstructured background shows example similar 
intensities distributed uniformly background larger square smaller square 
algorithm achieves segmentation foreground squares segmented unstructured background grouped 
spurious pixels similar intensities intensities squares get grouped squares 
baseball image shows baseball image 
figures show results top bottom level hierarchy 
top level significant pieces players segmented 
bottom level background players split parts 
interestingly shoe top player segmented pixels inside shoe visibly large intensity variation 
contour shoe strong contours inside shoe strong surround segment significant size 
notice spite fact forbid small size segments small size especially higher levels hierarchy intensity edges 
suppose passes size requirements 
overlap way breaks small pieces especially boundary 
principle easily detected corrected implemented 
peppers image shows image peppers taken machine vision textbook 
figures show results levels hierarchy 
bottom hierarchy thin long pepper foreground segmented similar pepper bottom image small piece similar pepper left 
big pepper foreground split parts 
acknowledgments yuri boykov david jacobs useful discussions 
original image top hierarchy bottom hierarchy 
peppers image 
size 
running time minutes 
levels hierarchy 
appendix proof theorem suppose theorem false 
minimum cut 
define edges set pq contains edges pixels pq fe similarly define pq pq pq pq pq follows pq fe pq fe pq fe pq pq fe fe sets defined split pq pq pq pq pq pq pq pq define new cuts cut cut pq pq pq pq pq pq observe minimum cut required theorem 
cd ab disjoint get pq pq pq pq fact writing costs terms derive contradiction 
proof theorem similar proof theorem 
boykov veksler zabih 
fast approximate energy minimization graph cuts 
international conference computer vision 
cook cunningham pulleyblank schrijver 
combinatorial optimization 
john wiley sons 
gdalyahu weinshall werman 
stochastic image segmentation typical cuts 
ieee conference computer vision pattern recognition pages 
ishikawa geiger 
segmentation grouping junctions 
ieee conference computer vision pattern recognition pages 
jain dubes 
algorithms clustering data 
prentice hall 
perona freeman 
factorization approach grouping 
european conference computer vision pages 
roy cox 
maximum flow formulation stereo correspondence problem 
th international conference computer vision 
shi malik 
normalized cuts image segmentation 
ieee conference computer vision pattern recognition pages 
weiss 
segmentation eigenvectors unifying view 
seventh international conference computer vision pages 
wu leahy 
optimal graph theoretic approach data clustering theory application image segmentation 
ieee transactions pattern analysis machine intelligence 
