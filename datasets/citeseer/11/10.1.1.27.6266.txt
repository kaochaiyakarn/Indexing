closet efficient algorithm mining frequent closed itemsets jian pei jiawei han mao intelligent database systems research lab 
school computing science simon fraser university burnaby canada mail han cs sfu ca association mining may derive undesirably large set frequent itemsets association rules 
studies proposed interesting alternative mining frequent closed itemsets corresponding rules power association mining substantially reduces number rules 
propose efficient algorithm closet mining closed itemsets development techniques applying compressed frequent pattern tree fp tree structure mining closed itemsets candidate generation developing single prefix path compression technique identify frequent closed itemsets quickly exploring partition projection mechanism scalable mining large databases 
performance study shows closet efficient scalable large databases faster previously proposed methods 
recognized frequent pattern mining plays essential role important data mining tasks associations sequential patterns episodes partial periodicity known frequent pattern mining generates large number frequent itemsets rules reduces efficiency effectiveness mining users sift large number mined rules supported part natural sciences engineering research council canada networks centres excellence canada nce iris hewlett packard lab find useful ones :10.1.1.40.6757
interesting alternative proposed pasquier mining complete set frequent itemsets associations association mining needs find frequent closed itemsets corresponding rules :10.1.1.37.1102
important implication mining frequent closed itemsets power mining complete set frequent itemsets substantially reduce redundant rules generated increase efficiency effectiveness mining 
examine simple example 
suppose database contains transactions 
minimum support threshold occurrence frequent minimum confidence threshold 
traditional association mining method generate gamma frequent itemsets 


tremendous number association rules frequent closed itemset mining generate frequent closed itemsets association rule derived easily 
study efficient mining frequent closed itemsets large databases 
pasquier propose apriori mining algorithm called close :10.1.1.37.1102
zaki hsiao propose mining algorithm charm improves mining efficiency exploring item data structure 
analysis close charm costly mining long patterns low minimum support thresholds large databases 
continued study frequent pattern mining candidate generation propose efficient method mining closed itemsets :10.1.1.3.2424
techniques developed purpose framework developed efficient frequent pattern mining method fp growth extended strategies devised reduce search space dramatically identify frequent closed itemsets quickly partition projection mechanism established mining efficient scalable large databases :10.1.1.3.2424
performance study shows closet efficient scalable large databases faster previously proposed methods 
remaining organized follows 
section problem mining frequent closed itemsets defined related concepts introduced 
section introduce method closet step step 
section reports performance comparison method close charm scalability study 
summarize discuss research directions section 
problem definition fi ng set items 
itemset non empty subset brevity itemset fi jm denoted delta delta delta jm itemset items called itemset 
xi called transaction tid transaction identifier itemset 
transaction database tdb set transactions 
itemset contained transaction transaction database tdb support itemset denoted sup number transactions tdb contains association rule implication itemsets ae 
support rule denoted sup defined sup 
confidence rule denoted conf defined sup sup discussed studies transaction database tdb minimal support threshold min sup minimal confidence threshold min conf problem association rule mining find complete set association rules database support confidence passing thresholds respectively 
shown problem mining association rules divided sub problems 
find frequent itemsets transaction database respect support threshold 
itemset called frequent itemset support min sup 
convenience discussion support defined absolute occurrence frequency 
notice defined literature relative occurrence frequency vs total number transactions transaction database 

frequent itemset generate association rules gamma ae confidence min conf requirement mining complete set association rules leads problems may exist large number frequent itemsets transaction database especially support threshold low may exist huge number association rules 
hard users comprehend manipulate huge number rules 
interesting alternative problem mining frequent closed itemsets corresponding association rules proposed :10.1.1.37.1102
definition frequent closed itemset itemset closed itemset exists itemset proper superset transaction containing contains closed itemset frequent support passes support threshold 
mining association rules itemsets mine association rules frequent closed itemsets 
definition association rule frequent closed itemsets rule association rule frequent closed itemsets frequent closed itemsets exist frequent closed itemset ae ae confidence rule passes confident threshold similar mining association rules complete set association rules frequent closed itemsets mined step process mining set frequent closed itemsets min sup generating complete set association rules frequent closed itemsets min conf example association rule mining transaction database tdb table 
fa fgi transaction transaction identifier fa fg itemset 
itemset fa fg denoted min sup min conf association rules mined step process ffl find frequent itemsets transaction database 
done apriori shown second requirement rationale rules rule redundant sup yields sup conf conf 
transaction id items transaction table transaction database tdb 
association mining studies 
total frequent itemsets tdb closed cef ae cf ac closed transaction containing contains ffl generate association rules frequent itemset 
example frequent itemset cf subset support confidence rule cf ad sup sup cf 
association rule 
verified frequent itemset total association rules generated implication ae fa fg fa fg gamma association rule 
notice association rules generated cf ad cdf confidence 
example adf confidence items happen 
association rules frequent closed itemsets look interesting 
compute confidence interesting association rules supports frequent closed itemsets needed 
example derive cf ad cdf need know support cf derive association rules frequent closed itemsets 
rule form support confidence itemsets 
frequent closed itemset subsets cf frequent closed itemsets 
generates association rules cf ad cdf 
cf cf 
refer readers theoretical foundation association rules frequent closed itemsets :10.1.1.37.1102
focus find complete set frequent closed itemsets efficiently large database called frequent closed itemset mining problem 
introducing method mining frequent closed itemsets property closed itemsets follows definition closed itemsets 
cond db cef cf ea cond db ea output ea cond db ce cond db tdb ea cef cef cond db cfa frequent closed itemset output output output cf cef output list mining frequent closed itemsets abbreviated closet 
lemma itemsets sup sup 
closed itemset ae efficiently mining frequent closed itemsets section study efficient mining frequent closed itemsets 
section illustrate mining process closet example 
presents closet algorithm section 
enhancement scalability method discussed section 
mining frequent closed itemsets projected database example examine mine frequent closed itemsets example 
example closet transaction database tdb table min sup introduce divide conquer method mining frequent closed itemset 
method explores concepts projected database shown 
find frequent items 
scan tdb find set frequent items derive global frequent item list called list list hc items sorted support descending order number indicates support item 
easier understanding frequent items transaction listed order list infrequent item omitted 
example abe listed ea 

divide search space 
frequent closed itemsets divided non overlap subsets list ones containing item ones containing item ones containing item ones containing containing subsets complete set frequent closed itemsets done 

find subsets frequent closed itemsets 
subsets frequent closed itemsets mined constructing corresponding conditional databases mine recursively 
find frequent closed itemsets containing transactions containing needed 
conditional database denoted contains transactions having 
notice item omitted transaction appears transaction conditional database 
support 
items appear twice respectively transaction containing contains infrequent appears frequent closed itemset 
itemset covers frequent item mining finishes 
find frequent closed itemsets containing similarly conditional database cfg 
item transactions omitted frequent closed itemsets containing sup item appearing transactions conditional database frequent closed itemset 
find remaining frequent closed itemsets containing need project conditional database 
set frequent items conditional database forms local frequent item list list hc local infrequent item ignored global list 
list frequent closed itemsets containing partitioned subsets ones containing af ones containing ae ones containing ac example happens list prefix global list different counts 
general local frequent items re arranged local support counts 
mined constructing conditional databases recursively 
support fa equals super set fa frequent closed itemset 
means transaction containing fa contain 
frequent closed itemset containing fa similarly frequent closed itemset containing ca ca subset sup ca sup 
ea conditional database fcg generate frequent items 
ea frequent closed itemset 
find frequent closed itemsets containing conditional database fce cg ce indicates ce happens times 
happens transaction conditional database cf subset frequent closed itemset support cf frequent closed itemset 
support fc equals happen frequent closed itemsets containing cef subset itemset frequent closed itemset 
find frequent closed itemsets containing similarly conditional database fc 
ce closed itemset proper subset cef sup ce sup cef 
frequent closed itemsets 
find frequent closed itemsets containing step know frequent closed itemsets containing frequent closed itemsets containing 
summary set frequent closed itemsets ae cf cef 
closet algorithm soundness justify correctness completeness mining process example 
definition frequent item list list transaction database tdb support threshold min sup list frequent items support descending order called frequent item list list short 
lemma transaction database tdb support threshold min sup list hi problem mining complete set frequent closed itemsets divided sub problems th problem find complete set frequent closed itemsets containing gammaj gamma 
problem partitioning performed recursively 
subset frequent closed itemsets divided necessary 
forms divide conquer framework 
mine subsets frequent closed itemsets construct corresponding conditional databases 
definition conditional database transaction database tdb 
frequent item tdb 
conditional database denoted subset transactions tdb containing occurrences infrequent items item items list omitted 
frequent item conditional database frequent itemset 
jx conditional database denoted jx subset transactions containing occurrences local infrequent items item items local list omitted 
find frequent closed itemsets containing items list construct conditional database 
subproblem divided necessary 
instance example construct fa ea conditional databases conditional database 
identify frequent closed itemsets conditional databases 
lemma provides theoretical foundation closet find frequent closed itemsets correctly 
lemma frequent closed itemset item appearing transaction conditional database 
proof 
exists item appearing transaction conditional database sup ix sup 
lemma closed itemset 
lemma 
lemma itemset maximal set items appearing transaction conditional database subsumed frequent closed itemset identical support frequent closed itemset 
proof 
itemset maximal set items appearing transaction conditional database potentially frequent closed itemset 
crucial point generated frequent closed itemset may subsume 
suppose exists frequent closed itemset subsumes frequent having identical support occur times conditional database earlier rules construction conditional databases 
appear 
lemma 
search closed itemsets improved optimization techniques shown 
optimization compress transactional conditional databases fp tree structure 
fp tree prefix tree structure representing compressed complete frequent itemset information database :10.1.1.3.2424
construction simple 
transactions prefix share portion path root 
similarly conditional fp trees constructed conditional databases 
refer readers details fp tree related techniques :10.1.1.3.2424
benefits fp tree closed itemsets computation 
ffl fp tree compresses databases frequent mining 
transactions sharing common prefix paths branch tree create new nodes fp tree 
deeper recursion construction conditional databases better chance sharing compact conditional fp tree 
ffl conditional databases derived fp tree efficiently 
shown :10.1.1.3.2424
fp tree may compress multiple transactions path projection path equivalent scan multiple transactions 
optimization extract items appearing transaction conditional database 
exists set items appearing transaction conditional database forms frequent closed itemset proper subset frequent closed itemset support 
instance example appear transaction conditional database frequent closed itemset 
note items easily identified item counting phase optimization takes effect constructing fp tree 
root kl 
frequent closed itemset frequent closed itemset frequent closed itemset kl directly extract frequent closed itemsets fp tree 
conditional database 
items extracted excluded local frequent item list conditional database 
soundness optimization follows lemma 
optimization takes effect forming conditional database 
benefits reduces size fp tree conditional database contains number items extraction may reduce level recursions combines items 
optimization directly extract frequent closed itemsets fp tree 
exists single prefix path fp tree frequent closed itemsets extracted directly conditional database 
example conditional database example transactions ce 
corresponding fp tree branch hc 
case directly enumerate itemsets cf cef 
examine detail 
definition frequent item conditional database 
node labeled corresponding fp tree ancestor child child child child count value smaller single segment itemset union itemset set items including ancestors excluding root 
lemma single segment itemset frequent closed itemset support conditional database passes threshold proper subset frequent closed itemset 
proof 
fp tree count ancestor support conditional database passes support threshold frequent itemset 
show closed 
suppose item appearing transaction containing support conditional database equal follow local frequent item list item including support appear transaction conditional database 
construction fp tree son node labeled item local frequent item list count node exactly leads conflict single segment itemset 
lemma 
optimization shares similar benefits optimization 
allows program identify frequent closed itemsets quickly reduces size remaining fp tree examined reduces level recursions combines multiple items 
optimization prune search branches 
frequent itemsets support 
ae closed itemset need search conditional database hope generate frequent closed itemset 
example example need search conditional database subset fc frequent closed itemset support 
soundness optimization verified lemma 
lemma frequent itemsets support 
ae closed exists frequent closed itemset containing gamma proof 
frequent closed itemset containing suppose contain item gamma ae priori heuristic sup 
sup sup holds transaction containing contains gamma item appear transaction containing ae means closed 
lemma 
reasoning analysis algorithm closet follows 
algorithm closet mining frequent closed itemsets fp tree method 
input transaction database tdb support threshold min sup output complete set frequent closed itemsets method 
initialization 
fci set frequent closed itemset 
initialize fci gamma 
find frequent items 
scan transaction database tdb compute frequent item list list 
mine frequent closed itemsets recursively 
call closet tdb list fci 
subroutine closet db list fci parameters ffl frequent itemset db conditional database db tdb ffl db transaction database conditional database ffl list frequent item list db ffl fci set frequent closed itemsets 
method 
set items list appear transaction db insert fci proper subset itemset fci support applying optimization 
build fp tree db items extracted excluded applying optimization 
apply optimization extract frequent closed itemsets possible 
form conditional database remaining item list time compute local frequent item lists conditional databases 
remaining item list starting call closet ix list fci ix subset frequent closed itemset support count conditional database respect db list corresponding frequent item list 
applying optimization lemma itemset frequent closed itemset iff closet says 
proof 
itemset identified frequent closed itemset closet frequent item appearing transaction conditional database proper subset frequent closed itemset 
lemma show frequent closed itemset ae suppose find itemset gamma happen transaction conditional database 
leads conflict fact item appearing transaction conditional database 
lemma 
correctness algorithm reasoned step step section 
generates complete set frequent closed itemsets shown lemma 
optimization techniques divide conquer method ensure frequent closed itemsets extracted efficiently search space reduced substantially 
transaction database large assume fp tree held main memory 
section develop techniques ensure scalability closet large databases 
scaling closet large databases specified section fp tree contributes substantially efficiency closet 
transaction database large unrealistic construct main memory fp tree 
cases construct conditional databases fp tree construct disk fp trees 
disk fp tree discussed :10.1.1.3.2424
section focus building conditional databases fp tree 
naive method expand conditional databases parent time 
method basically duplicates tdb times average number frequent items transactions 
transaction database large transactions long frequent items construction conditional databases costly operation 
propose partition approach reduce space cost dramatically 
illustrate principle example 
example consider construction conditional databases example partition approach demonstrated 
tdb ea cef cef cond 
db cef cf ea conditional db fa conditional db ce cond 
db ce cond 
db cond 
db cfa constructing conditional databases partition approach 
construction conditional databases copying transaction conditional database takes part copy list item contains 
example item list transaction contains 
copied conditional databases simultaneously tuple copied conditional database 
conditional database processed transaction transferred conditional database second item 
way guarantee level recursion database partitioned 
partition done original database gone 
partition conditional database construction needs scan database 
please note processing conditional database takes scan conditional database partition fa ea conditional databases 
time transactions conditional database copied conditional databases 
shows copied various conditional databases turn 
partition conditional database construction closet proceed fp tree rounds transaction database large fp trees constructed size conditional databases fit memory 
may wonder optimization fp tree 
fortunately maintaining branch fp tree 
spirit maintain upper portion fp tree root node son branch 
performance study section report performance study algorithms mining frequent closed itemsets closet charm close 
close finds frequent closed itemsets apriori framework pruning redundancies candidates post processing generate complete non duplicate result 
charm explores vertical data format find frequent closet itemsets computing intersections sets transaction ids tids itemsets 
experiments performed mhz pentium pc mb main memory running microsoft windows nt 
programs written microsoft visual 
close charm implemented described :10.1.1.37.1102
runtime period input output report result cpu time measured literature 
test methods various datasets including synthetic ones generated standard procedure described real datasets 
limited space reported results datasets follows 
ffl synthetic dataset items 
dataset average transaction size average maximal potentially frequent itemset size set respectively totally transactions 
dataset sparse 
frequent itemsets closed 
ffl real dataset connect 
data set uc irvine machine learning database repository compiled connect game state information 
total number transactions transaction items 
dense dataset lot long frequent itemsets 
ffl real dataset ii pumsb 
data set ibm almaden research center transactions transaction items 
dense dataset long frequent itemsets 
reduction size itemsets frequent closed itemsets experiments show number frequent itemsets need represented mining reduced order magnitude dense database represented frequent closed itemsets 
example table lists numbers www ics uci edu mlearn mlrepository html www almaden ibm com cs quest demos html frequent closed itemsets frequent itemsets ratio dataset connect 
support table number frequent closed itemsets frequent itemsets dataset connect frequent closed itemsets frequent itemsets 
want mine association rules dense database connect mining set frequent closed itemsets generating rules reduce search space substantially generate smaller set rules 
support threshold decreases saving increasingly substantial 
comparison close charm closet close charm closet tested various datasets 
closet outperforms charm close 
shown sparse dataset majority frequent itemsets closed itemsets 
performance close close apriori 
advantage closet close basically fp growth apriori 
dataset charm wins apriori 
support threshold low transaction identification tid sets frequent itemsets relatively small charm efficient 
slower closet 
advantage closet significant dense datasets 
results dataset connect shown 
please note runtime logarithmic scale 
example closet uses seconds find complete set frequent closed itemsets support threshold set 
close find result support threshold time 
pumsb challenging dataset 
results dataset shown 
close uses seconds find frequent closed itemsets support threshold closet needs seconds find support threshold 
experiments observe non trivial cost charm intersection operations large sets tids 
example dataset connect support threshold set set tids frequent itemset contains theta tids 
order test scalability closet generate synthetic datasets size times replicate transactions real datasets times 
keep support threshold constant percentage 
results shown 
shows closet scalable increase number transactions 
interesting see runtime closet real datasets increases slower sizes real datasets 
closet scans transaction twice 
mining confined fp tree 
matter times datasets replicated fp tree remains shape respect constant support threshold percentage 
summary closet efficient scalable mining frequent closed itemsets large databases 
faster close faster charm 
mining complete set itemsets suffers generating large number itemsets association rules 
mining frequent closed itemsets provides interesting alternative inherits analytical power mining set frequent itemsets generates smaller set frequent itemsets leads interesting association rules 
proposed fp tree database projection method closet efficient mining frequent closed itemsets large databases 
proposed algorithm closet mining closed itemsets adopts techniques applying compressed frequent pattern tree fp tree structure mining closed itemsets candidate generation developing single prefix path compression technique identify frequent closed itemsets quickly exploring partition projection mechanism scalable mining large databases 
performance study shows closet efficient scalable large databases faster previously proposed methods 
express nicolas pasquier lakhal promptly sending papers frequent closed itemsets 
anonymous reviewers comments 
scalability support threshold sparse dataset 
scalability support threshold dense dataset connect 
scalability support threshold dense dataset pumsb 
size scaleup datasets 
agarwal aggarwal prasad 
tree projection algorithm generation frequent itemsets 
journal parallel distributed computing special issue high performance data mining appear 
agrawal srikant 
fast algorithms mining association rules 
proc 
int 
conf 
large data bases vldb pages santiago chile september 
agrawal srikant 
mining sequential patterns 
proc 
int 
conf 
data engineering icde pages taipei taiwan march 
bayardo 
efficiently mining long patterns databases 
proc 
acm sigmod int 
conf 
management data sigmod pages seattle washington june 
han dong yin 
efficient mining partial periodic patterns time series database 
proc 
int 
conf 
data engineering icde pages sydney australia april 
han pei yin :10.1.1.3.2424
mining frequent patterns candidate generation 
proc 
acm sigmod int 
conf 
management data sigmod dallas tx may 
mannila toivonen verkamo 
efficient algorithms discovering association rules 
proc 
aaai workshop knowledge discovery databases kdd pages seattle wa july 
mannila toivonen verkamo 
discovery frequent episodes event sequences 
data mining knowledge discovery 
pasquier bastide taouil lakhal :10.1.1.37.1102
discovering frequent closed itemsets association rules 
proc 
th int 
conf 
database theory icdt pages jerusalem israel january 
zaki hsiao 
charm efficient algorithm closed association rule mining 
technical report computer science rensselaer polytechnic institute 

