adaptive web sites conceptual framework case study mike perkowitz oren etzioni department science engineering box university washington seattle wa fmap cs washington edu fax creation complex web site thorny problem user interface design 
explore notion adaptive web sites sites semi automatically improve organization presentation learning visitor access patterns 
easy imagine sites er shortcuts popular pages 
sophisticated adaptive web sites feasible 
degree automation achieve 
address questions describe design space adaptive web sites consider case study problem synthesizing new index pages facilitate navigation web site 
algorithm automatically identi es candidate link sets include index pages user access logs 
demonstrate experimentally pagegather outperforms apriori data mining algorithm task 
addition compare pagegather link sets pre existing human authored index pages 
keywords adaptive clustering data mining motivation designing rich web site readily yields information tricky 
oyster contains single pearl web site contains myriad facts images hyperlinks 
di erent visitors approach popular web site goals concerns 
consider example web site typical computer science department 
site contains amalgam research project descriptions course information lists graduating students pointers industrial 
information value access readily 
think organized hierarchy solve problem experience heads web site crying got 
problem web design compounded factors 
di erent visitors distinct goals 
second visitor may seek di erent information di erent times 
third sites original design accumulating links pages places 
fourth site may designed particular kind di erent ways practice designer priori expectations may violated 
web site designs cast html web navigation dynamic time dependent idiosyncratic 
challenged ai community address problem creating adaptive web sites sites semi automatically improve organization presentation learning visitor access patterns 
web sites viewed user interfaces complex information stores 
contrast standard user interfaces data user behavior gathered expensive arti cial focus groups usability labs web server logs automatically record user behavior site 
posit adaptive web sites valuable method mining data goal continually tuning site user population needs 
adaptive web sites potentially valuable feasibility priori non trivial adaptations automated 
adaptive web sites run yielding chaos improvement 
appropriate division labor automated system human webmaster 
investigate issues empirically analyze problem index page synthesis 
focus subproblem generating candidate link sets include index pages amenable automation describe pagegather algorithm solves 
remainder organized follows 
discuss design space adaptive web sites previous area 
design desiderata motivate approach 
section de ne index page synthesis problem focus case study 
pagegather analyzing variants pagegather data mining clustering algorithms potential solutions 
section experimentally evaluate variants pagegather compare performance pagegather apriori classical data mining algorithm discovery frequent sets :10.1.1.40.6757
compare pagegather output pre existing human authored index pages available experimental web site 
conclude discussion summary contributions 
design space adaptive web sites vary number design axes 
types adaptations 
new pages may created 
links may added removed highlighted rearranged 
text link labels formatting may altered 
customization vs transformation 
customization modifying web site suit needs individual user customization necessitates creating large number versions web site user 
contrast transformation involves altering site navigation easier large set users 
example university web site may reorganized support view faculty members distinct view students 
addition certain transformations may seek improve site visitors 
content vs access 
adaptation organizes presents pages content pages say 
access adaptation uses way past visitors interacted site guide information structured 
naturally content access adaptations complementary may 
degree automation 
excite yahoo manually personalized home pages simple example customization interested automatic adaptation techniques 
feasibility adaptive web sites partially automated 
survey previous adaptive web site vocabulary distinctions introduced 
index page page consisting links set pages cover particular topic electric 
previous quite common web sites allow users customize site 
common manual customizations include lists favorite links stock quotes interest local weather reports 
slightly automated customizations include records previous interactions site pages changed previous visit 
sites allow users describe interests information news articles example relevant interests 
sophisticated sites attempt path prediction guessing user wants go immediately providing link 
webwatcher learns predict links users follow particular page function speci ed interests 
link webwatcher believes particular user follow highlighted graphically duplicated top page 
visitors site asked broad terms looking 
depart asked wanted 
webwatcher takes access approach paths people indicated success examples successful navigations 
example people looking personal home pages follow people link webwatcher tend highlight link visitors goal 
note webwatcher groups people stated interests customizing individual falls continuum pure customization pure transformation 
try customize user trying guess general interests dynamically browses 
avanti project focuses dynamic customization users needs tastes :10.1.1.50.8204
webwatcher avanti relies partly users providing information enter site 
knows user avanti attempts predict user eventual goal step 
avanti prominently links leading directly pages thinks user want see 
additionally avanti highlight links accord user interests 
form customization collaborative ltering 
collaborative ltering users rate objects web pages movies 
users tend give similar ratings similar objects presumed similar tastes user seeks recommendations new objects site suggests objects highly rated users similar tastes 
site recommends objects solely users ratings accesses ignoring content objects 
simple form collaborative ltering example amazon com web page particular book may links books commonly purchased people bought 
fire uses individualized form collaborative ltering members may rate hundreds cds movies building avery detailed personal pro le fire compares pro le members new recommendations 
footprints takes access transformation approach 
motivating metaphor travelers creating grass time 
visitors web site leave footprints form counts link traversed time paths accumulate heavily traveled areas 
new visitors site worn paths indicators interesting pages visit 
footprints left automatically anonymously visitor site may see visitors need provide information order system 
footprints provides essentially localized www cs cmu edu webwatcher zeus gmd de projects avanti html www firefly com information user sees links adjacent pages traveled 
web site ability adapt enhanced providing meta information information content structure organization 
way meta information represent site content formal framework precisely de ned semantics database semantic network 
meta information customize optimize web sites explored number projects see example xml annotations apple meta content format projects :10.1.1.118.9134
example approach strudel web site management system attempts separate information available web site graphical presentation 
manipulating web sites level pages links web sites may speci ed strudel view de nition language 
site content encoded presentation may easily adapted 
anumber projects explored client side customization inwhich user associated agent learns interests customizes web experience accordingly 
aia project explores customization web page information adding presentation agent direct user attention topics interest 
agent model individual user needs preferences interests uses model decide information highlight 
aia model presentation agent side similar techniques applied customized presentation server 
letizia personal agent learns model user observing behavior :10.1.1.31.3135
letizia explores web ahead user investigating links current page uses user model recommend pages thinks user enjoy 
projects investigated performing customization client server part network particularly transcoding proxies 
transend example proxy server university california berkeley performs image compression allows thousands users customize degree compression interface image re nement web pages compression applied 
approach survey area led formulate desiderata adaptive web site 

avoid creating visitors lling questionnaires 
visitors site turned extra especially clear reward may participate 
furthermore site improve feedback fail users assist 

web site easier including rst time users casual users customization genuinely useful repeat visitors bene rst time users 
addition user customizations apply users sharing aggregation information multiple users 
transformation potential overcome limitations 

web sites availability meta information currently available xml annotations 
web sites heavily annotated semantic structural meta information 
possible transform today existing web sites adaptive ones making assumptions regarding web 
edu nov get home jones collectors html edu nov get home jones gif edu nov get home jones gif umn edu nov get home rich html umn edu nov get general info gif nov get home smith html edu nov get home jones thumbnails bo gif typical user access logs computer science web site 
entry corresponds single request server includes originating machine time url requested 
note series accesses oftwo users umn 

protect site original design destructive changes 
web designers put great deal ort designing web sites 
want replace undo 

keep human webmaster control 
clearly webmaster needs remain control web site foreseeable gain trust automatic adaptive techniques avoid disasters 
desiderata constraints approach creating adaptive web sites 
transformation customization avoid confronting visitors questionnaires facilitate sharing site improvements wide range visitors 
focus access approach automatic understanding free text di cult 
assume annotations web pages html 
safety limit transformations changes site leave existing structure intact 
may add links remove create pages destroy add new structures scramble existing ones 
restrict generating candidate adaptations presenting human webmaster non trivial changes web site webmaster control 
main source information rely site web server log records pages visited user site 
underlying intuition coherence assumption pages user visits interaction site tend conceptually related 
assume pages single visit related 
information glean individual visits noisy example visitor may distinct tasks single visit 
large number visitors continue visit re visit set pages provides strong evidence pages set related 
accumulate statistics visits numerous visitors search trends 
di cult devise number simple non destructive transformations improve site describe 
examples include highlighting popular links promoting popular links top page site front page linking pages related 
implemented transformation attempt provide links page visitors eventual goals skipping pages 
reported signi cant number visitors automatic shortcuts 
long term goal demonstrate fundamental adaptations feasible 
example change view site er alternative organization contents user access patterns 
consider example music machines web site machines org primary testbed maintained authors full access documents access logs 
music machines devoted information various kinds electronic musical instruments 
data site organized manufacturer instrument particular model number 
page manufacturer roland page links pages instrument roland produces 
imagine visitor site interested comprehensive overview keyboards available various manufacturers 
rst visit roland page roland keyboards visit keyboard manufacturers 
imagine site repeatedly observed kind behavior automatically created new web page containing links keyboards 
visitor need visit new page search keyboards 
page represents manufacturer centric organization type instrument 
discover user access patterns create new web pages facilitate theory able create new views site 
case study index page synthesis automatic change view feasible practice 
rst step investigate automatic synthesis new index pages 
index pages central site organization 
able generate index pages valued adopted human webmaster extend elaborate kind organizational changes suggested 
section de ne index page synthesis problem algorithm pagegather solves part problem 
index page synthesis problem page synthesis automatic creation web pages 
index page page consisting links set pages cover particular topic electric 
terminology de ne index page synthesis problem web site visitor access log create new index pages containing collections links related currently unlinked pages 
access log document containing entry page requested web server 
request lists origin ip address request url requested time request 
related unlinked pages pages share common topic currently linked site pages considered linked exists link exists page links 
problem synthesizing new index page decomposed subproblems 

contents hyperlinks index page 

hyperlinks page ordered 

hyperlinks labeled 

title page 
correspond coherent concept 

appropriate add page site 

focus rst subproblem generating contents new web page 
remaining subproblems topics 
note subproblems particularly quite di cult solved collaboration site human webmaster 
show task generating candidate index page contents automated success pagegather algorithm described 
pagegather algorithm section introduce pagegather 
large access log task nd collections pages tend occur visits 
clustering see natural technique consider task 
clustering documents represented dimensional space example word vectors 
roughly cluster collection documents close relatively distant clusters 
standard clustering algorithms partition documents set mutually exclusive clusters 
cluster mining variation traditional clustering suited task 
attempting partition entire space documents try nd small number high quality clusters 
furthermore traditional clustering concerned placing exactly cluster cluster mining may place single document overlapping clusters 
relationship traditional clustering cluster mining parallel classi cation data mining described 
segal contrasts mining nuggets nding high accuracy rules capture patterns data traditional classi cation classifying examples positive negative traditional classi cation algorithms best mining algorithms 
pagegather algorithm uses cluster mining nd collections related pages web site relying visit coherence assumption 
essence pagegather takes web server access log input maps form ready clustering applies cluster mining data produces candidate index page contents output 
algorithm basic steps 
process access log visits 

compute occurrence frequencies pages create similarity matrix 

create graph corresponding matrix nd maximal cliques connected components graph 

rank clusters choose 

cluster create web page consisting links documents cluster evaluation 
discuss step turn 

process access log visits 
de ned visit ordered sequence pages accessed single user single session 
access log sequence page views requests web server 
request typically includes time request url requested machine request originated 
purposes extract discrete visits log 
rst assume originating machine corresponds single visitor 
series page views day log visitor site restricted collection html documents residing single server able handle dynamically generated pages multiple servers 
fact necessarily case 
internet service providers channel users requests small number gateway machines users simultaneously visit site machine 
fortunately coincidences uncommon ect data signi cantly necessary accurate logs generated cookies visitor tracking software 
consider entire day page views visit user example morning visit evening visit 
simpli cation greatly ect data necessary series page views divided signi cant time gaps 
candidate cluster webmaster approval naming 
nal page appear site properly named formatted 
ordered time stamps corresponds single session visitor 

compute occurrence frequencies pages create similarity matrix 
pair pages compute jp probability visitor visiting visited jp probability visitor visiting visited 
occurrence frequency minimum values 
minimum conditional probabilities avoid asymmetrical relationship true case similarity 
example popular page common path obscure page 
jp high leading think pages similar 
jp quite low path pages relatively obscure 
stated goal nd clusters related currently unlinked pages 
avoid nding clusters pages linked 
prevent setting matrix cell pages zero linked site 
observed similarity matrix viewed graph enables apply graph algorithms task identifying collections related pages 
graph corresponding similarity matrix completely completely connected 
order reduce noise apply threshold remove edges corresponding low occurrence frequency 

create graph corresponding matrix nd maximal cliques connected components graph 
create graph page node nonzero cell matrix arc apply graph algorithms ciently extract connectivity information graph linear time algorithm identifying connected components 
frequency information arcs ignored step sake ciency 
creating sparse graph cient graph algorithms cluster mining identify high quality clusters substantially faster relying traditional clustering methods 
may extract kinds subgraphs leading variants pagegather algorithm 
rank topic coherent 
useful 
images keyboards somewhat images keyboards somewhat somewhat sequencers sequencers roland instruments samplers instrument samples somewhat samplers instrument samples somewhat books info somewhat clusters overlap reduction 
clusters ordered ranked pagegather 
topics provided webmaster cluster contents 
clusters subjectively rated webmaster qualities coherence degree cluster contents correspond apparent topic usefulness rates topic interest site users 
note spite overlap reduction multiple clusters topic 
roland instrument manufacturers keyboards sequencers samplers types instruments 
nds maximal cliques graph 
clique subgraph pair nodes edge maximal clique subset larger clique 
ciency bound size discovered cliques 
nds connected components subgraphs pair pages path edges 
step applied threshold similarity matrix 
threshold high graph sparse nd clusters tend small size high quality 
threshold lower nd larger clusters 
note generally require di erent threshold settings sparse graph contains number connected components may sparse contain sizeable cliques 
tune threshold clusters approximate desired size generally nds small number small clusters 
generally nd performs better variant 
compare variants experimentally section 
rank clusters choose output 
step may nd clusters may wish output 
example site webmaster want see handful clusters week decide turn new index pages 
accordingly clusters rated sorted averaging occurrence frequency pairs documents cluster 
tends discover similar clusters 
developed ways reducing number similar clusters nal results 
overlap reduction proceeds ranked cluster list removes cluster overlaps highly previously seen better cluster 
note place maximum size discovered clusters interest performance large clusters useful output practically speaking create new web page containing hundreds links 
merging walks ranked list clusters cluster su cient overlap previously seen cluster merges continues 
approaches require overlap measure clusters divided size union 
variants overlap threshold parameter tuned experimentally 
note connected components overlap reduction merging ect 
reduction merging advantages disadvantages 
general reduction preserves coherence clusters changes cluster contents may pages clustered 
merging hand may combine related pages cost reducing coherence clusters 
default reduction order preserve coherence clusters 
variants compared raw ranked list section 
process ranked list clusters return bounded number results apply quality threshold returning results 
webmaster speci es bound give clusters quality threshold 

cluster create web page consisting links documents cluster evaluation 
pagegather algorithm nds candidate link sets presents webmaster gure 
webmaster prompted accept reject cluster name links thinks inappropriate 
links labeled titles target pages ordered alphabetically titles 
webmaster responsible placing new page site 
time complexity running time pagegather algorithm 
summarize complete analysis 
number page views log number pages site 
step group page views originating machine 
sorting page views origin time requires time 
step process log create matrix size requires time 
note implement algorithm create matrix collection logs repeatedly generate candidate clusters 
bound size discovered clusters step polynomial related pagegather pagegather addresses problem nding sets items access patterns 
previous clustering data mining applied problem 
discussed cluster mining variation traditional clustering 
pagegather uses graph clustering component specialized cluster mining possible adapt traditional clustering algorithms problem 
follow compared pagegather clustering component variants standard algorithms means clustering hierarchical agglomerative clustering hac 
literally hundreds clustering algorithms variations thereof 
chose means particularly fast hac widely 
pagegather clustering component faster hac means higher quality clusters 
frequent set algorithms designed nd sets similar items large collections see example :10.1.1.103.5437:10.1.1.40.6984
compare pagegather standard apriori algorithm nding frequent sets see :10.1.1.40.6757
traditional frequent set problem data collection average visit percentage candidate link sets pg cc pg clique performance raw ranked cluster output overlap reduction 
apparently performs better clusters variations basic set pages 
market basket information 
basket contains set items goal nd sets items appear baskets 
problem domain user visit corresponds basket set pages visited user corresponds set items basket 
section compare performance pagegather apriori test data 
experimental validation section report experiments designed test ectiveness approach 
rst compare performance variants algorithm 
compare pagegather apriori frequent set algorithm 
compare pagegather candidate clusters human authored index pages 
experiments draw data collected music machines web site site devoted information kinds electronic musical instruments 
site contains approximately distinct documents including html pages plain text images audio samples 
music machines receives approximately hits day roughly distinct visitors 
experiments training data collection access logs months test data set logs subsequent month period 
compare algorithms terms quality candidate index pages produce 
measuring cluster quality notoriously di cult problem 
measure quality cluster index page candidate need measure cluster captures set pages viewed users visit 
grouping index page save user trouble traversing site nd 
approximate measure ask user visits page cluster percentage pages cluster visit 
formally letv set user visits site vc set machines org data sets publicly available authors 
average visit percentage candidate link sets pg cc pg clique reduced performance overlap reduction 
performs better top clusters generally better 
include page cluster particular visit vc thenumber pages visited average number hits cluster visits average percentage average divided jv cj jcj experiment algorithm outputs ranked list clusters 
graphs clusters sorted average visit percentage sake clarity 
described section pagegather variants di er clusters graph representation 
nds maximal cliques nds connected components graph 
rst experiment compare variants algorithm shown gure 
note clusters apparently perform better 
examine clusters closely nd top clusters similar tends produce slight variations basic cluster 
reason may exist connected set pages form clique 
subsets cliques algorithm returns similar subsets clusters 
decrease occurrence threshold allowing pages connected edges graph representation set pages may clique 
generally borderline sets exhibit behavior 
observation motivation introducing overlap reduction merging described section 
gure compare overlap reduction 
note una ected reduction step connected components graph overlap 
see versions algorithm perform comparably 
slight edge remaining comparisons 
earlier discussed ways processing ranked list clusters pagegather clustering component 
may simply return raw ranked list may eliminate overlapping clusters may merge similar clusters 
discussed list inadequate 
gure compare performance overlap reduction merging applied 
expect merged clusters show lower quality scores operation brings documents associated pagegather clustering component average visit percentage candidate link sets pg clique reduced pg clique merged comparing performance overlap reduction cluster merging 
reduction performs better rst clusters variants comparable 
apparent performance comparison 
hand best merged cluster times larger containing links best reduced set links 
smaller cluster subset larger complete cluster see discussion section 
section discussed apriori frequent set algorithm applied problem index page synthesis 
apply apriori collection path data nd frequently occurring sets pages frequently occurring sets candidate clusters compared output 
compare performance apriori see gure 
initially evaluated raw apriori 
raw version top clusters variations 
show results adding reduction step apriori surprisingly thousands sets apriori prove su ciently distinct 
case observe clusters score higher apriori 
natural ask clusters really visit percentage high 
attempt answer questions ideal case index pages created human webmaster 
music machines contains index pages di erent kinds 
expecting site index pages score signi cantly better pagegather output chose index pages pertaining representative topics instruments produced particular manufacturer roland documents pertaining particular instrument roland keyboard instruments particular type drum machines les particular type audio samples 
set outgoing links page excluding standard navigation links treated cluster evaluated test data 
shows comparison clusters output overlap reduction 
believe reasons clusters perform better existing human authored index pages 
believe cluster mining approach nds genuine regularities access logs carry training data test data 
pagegather geared nding regularities apparently successful 
high proportion links page 
average visit percentage candidate link sets pagegather apriori apriori reduced performance overlap reduction compared apriori algorithm overlap reduction 
performs signi cantly better variations 
note apriori nds distinct clusters overlap reduction applied 
second creating index pages high click rates desirable webmaster site considerations mind 
example page titled drum machines complete contain drum machines site just occur logs 
similarly page pure contain links statistical regularity 
considerations motivated expectations human visitors coming site accounted measure 
high average visit percentages promising tell story 
limitations quality measure suggest natural direction 
far focused nding clusters frequently occurring pages 
approach produce useful index pages address issues purity completeness 
example page titled electric typical user expect set links provided pure containing links complete containing links site 
purity completeness analogous respectively criteria precision recall information retrieval 
ir systems evaluated terms precision recall respect labeled data collection human judges decide objects match particular query system rated closely results accord human judges 
precision recall may metric evaluating pagegather require hand labeling examples cluster judge topic cluster corresponds set pages belong cluster 
goal extend current approach identify topics nd pure complete sets relevant pages 
plan candidate link sets generated pagegather starting point mapping closest pure complete topics 
ways notion topic available pagegather 
extensional de nition potential topic site set links identifying topic average visit percentage candidate link sets pagegather human authored performance overlap reduction compared performance clusters human authored index pages music machines web site 
clusters perform signi cantly better existing index pages 
closest pagegather generated link set straightforward 
alternatively predicate language describing di erent pages site xml la strudel apply concept learning techniques generate description pagegather link set language 
view pagegather links positive examples target concept links outside set negative examples apply noise tolerant symbolic learning technique decision trees output description topic closely matching pagegather link set 
mapping candidate link sets topics decrease statistical measure realize measure rough approximation true index page quality 
plan investigate alternative measures carry user studies web site visitors webmasters assess impact suggested adaptations users practice 
index pages common uses summary information particular topic useful visitor wanting get overview topic directory speci resources useful visitor speci goal 
di erent di erent requirements may con ict 
example rst usage important links may su cient better links topical include irrelevant 
second complete listing essential included links marginally relevant 
focused rst usage index able support 
far focused single web site convenience 
plan test approach additional web sites including department web site near 
reported part ongoing research ort develop adaptive web sites increase degree automation 
list main contributions 
motivated notion adaptive web sites analyzed design space sites locating previous space 

demonstrate feasibility non trivial adaptations domain synthesizing new index pages 
identi ed key subproblem amenable automatic solution 

fully implemented pagegather algorithm discovering candidate index page contents visitor access patterns extracted web server logs 

experimentally compared pagegather output frequent sets discovered apriori data mining algorithm human authored index pages 
identi ed generation complete pure index pages key step automation index page synthesis 
index page synthesis step long term goal change view adaptive sites automatically suggest alternative organizations contents visitor access patterns 
agrawal imielinski swami 
mining association rules sets items large databases 
proceedings sigmod pages 
agrawal mannila srikant toivonen verkamo 
fast discovery association rules pages 
mit press cambridge ma 
agrawal srikant :10.1.1.40.6757
fast algorithms mining association rules 
proceedings th vldb conference 
andre graf muller 
pro rist wahlster 
aia adaptive communication assistant ective access 
document dfki saarbrucken 
armstrong freitag joachims mitchell 
webwatcher learning apprentice world wide web 
working notes aaai spring symposium information gathering heterogeneous distributed environments pages stanford university 
aaai press 
fernandez florescu kang levy suciu 
system demonstration strudel site management system 
acm sigmod conference management data 
fink kobsa nill :10.1.1.50.8204
user oriented adaptivity adaptability project 
designing web empirical studies microsoft usability group redmond wa 
fox gribble chawathe brewer 
adapting network client variation infrastructural proxies lessons perspectives 
ieee personal communications 
khare rifkin 
xml door automated web applications 
ieee internet computing 
lieberman :10.1.1.31.3135
letizia agent assists web browsing 
proceedings fourteenth international joint conference onarti cial intelligence pages 
luke spector hendler 
ontology web agents 
proc 
intl 
conf 
autonomous agents 
mitchell 
machine learning 
mcgraw hill 
perkowitz etzioni 
adaptive web sites ai challenge 
proceedings fifteenth international joint conference onarti cial intelligence 
perkowitz etzioni 
adaptive web sites automatically learning user access patterns 
proceedings sixth int 
www conference santa clara ca 
perkowitz etzioni 
adaptive web sites automatically synthesizing web pages 
proceedings fifteenth national conference onarti cial intelligence 
rasmussen 
clustering algorithms 
frakes baeza yates editors information retrieval pages 
prentice hall cli 
rist andre muller 
adding animated presentation agents interface 
proceedings international conference intelligent user interfaces pages orlando florida 
rocchio 
document retrieval systems optimization evaluation 
phd thesis harvard university 
savasere omiecinski navathe 
cient algorithm mining association rules large databases 
proceedings st vldb conference 
segal 
data mining massive search 
phd thesis university washington 
www cs washington edu homes segal brute html 
toivonen 
sampling large databases association rules 
proceedings nd vldb conference pages 
voorhees 
implementing agglomerative hierarchical clustering algorithms document retrieval 
information processing management 
wexelblat maes 
footprints history rich web browsing 
proc 
conf 
computer assisted information retrieval riao pages 
willet 
trends hierarchical document clustering critical review 
information processing management 
oren etzioni associate professor department computer science engineering university 
received ph carnegie mellon university 
joining university washington launched internet softbot project 
received nsf young investigator award 
research interests include software agents web navigation search technology human computer interaction 
see www cs washington edu homes etzioni 
mike perkowitz graduate student computer science university 
received bachelor degree cognitive science brown 
received year nsf graduate fellowship 
include adaptive web sites machine learning intelligent agents intelligent user interfaces 
see www cs washington edu homes map 

