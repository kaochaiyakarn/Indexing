definability compression afrati afrati ece ntua gr national technical university athens greece hans lei cis uni muenchen de universitat munchen cis munchen germany michel de mdr lri fr universite paris ii lri orsay cedex france compression algorithm takes finite structure class input produces finite structure different class output 
property class defined logic study definability property class 
consider compression schemas unary ordered structures words compression encoding classical lempel ziv 
order properties strings order compressed strings fails images dimensional strings 
simple order properties strings order definable strings compressed lempel ziv compression schema 
show properties strings firstorder definable strings definable lempel ziv compressed strings fo tc extension order logic transitive closure operator 
define subclass order properties strings defined property order definable lempel ziv compressed strings 
monadic second order properties strings dyadic second order definable lempel ziv compressed strings 

data implicitly compressed form symbolic representation important know problems efficiently solved 
examples type arise large amount data communicated processed compressed form need tools efficiently determine properties data having decompress 
efficient algorithms search substrings compressed strings proposed various compression schemas try understand problems solved 
example second type symbolic model checking obdd ordered binary decision diagrams provide representation relations evaluation formulas may efficient try understand cases generalize approaches study definability problems various compression schemas descriptive complexity point view 
view compression schema encoding finite structure succinct representation structure generally different signature 
natural question arises compressed structure sentence language exist sentence iff 
call problem compressed model checking problem 
rephrase property descriptive complexity checking 
sentence logic property iff investigating compressed model checking problem offer methods deciding existence efficient algorithms property expressed order sentence know check log space compressed data 
study compressed model checking problem case labeled finite order 
case compression strings compressed model checking problem generalizes compressed pattern matching problem problem checking compressed text original version contains string probably determine occurrence positions 
problem important text files images multimedia files 
searching archives compressed data decompressing fundamental requirement computations multimedia information 
efficient algorithms search substring lempel ziv compressed strings 
compression schemas coding common pairs letters byte omitting letters predictable text proposed different tradeoffs compression rate possibility search substrings 
generally compression schemes ask problems efficiently solved compressed data 
consider compression schemas strings classical lempel ziv compression schema optimal information theory point view called lz naive compression run length encoding call binary string length finite structure size unary predicate linear order true iff th bit 
run length compression lempel ziv compression schemes precisely define compressed structures called lz 
choice structures motivated basic properties run length compressed version lempel ziv compressed version lz induce various logical languages properties compressed strings formulated 
substring problem expressed existential order sentence 
suppose lempel ziv compressed form lz example gz file 
express substring problem lz 
show order definable lz order definable compressed structures corresponding compression schemes mentioned 
generalizing substring problem focus descriptive complexity class order definability lempel ziv compression 
main results 
run length compression schema order properties strings order definable compressed strings 
case dimensional strings images 

lempel ziv compression schema firstorder definability kept compressed strings 
order properties strings defined fo tc formula compressed strings order formula transitive closure operator 
define class properties language order definable language 

run length lempel ziv compression class languages order definable compressed strings closed concatenation 
results extend case strings additional relations labeled ordered relational structures compressed run length encoding lempel ziv 
section describe finite structures represent strings compressed run length encoding give formal definition problem 
section study definability strings images compressed run length compression schema 
section study definability strings compressed classical lempel ziv compression schema 

strings compressed strings finite structures string length alphabet sigma fa represented finite relational structure dn dn gamma linear order dn inherited dn unary predicate iff st letter binary string sigma simplify notation dn dn dn gamma write formulas order language abbreviations 
similarly gamma fixed 
max mean formula saying holds element fixed bounded quantifiers max gamma rephrased max gamma 
abc likewise uw strings sigma 
set sigma strings definable logic orders labeled letters sigma sentence fw sigma 
star free resp 
regular built finite languages union elementwise concatenation complement resp 
closure concatenation 
basic facts definable properties strings theorem suppose sigma resp 
regular iff order resp 
monadic second order definable 
particular closure concatenation need order definable fact order worth noting 
string called periodic form ffl call aperiodic 
example abab periodic aperiodic 
proposition 
string aperiodic iff occurrences ss 

string aperiodic fsg firstorder definable ind max gamma jsj gamma jsj general order definable define aa define linear orders length impossible cf example 

run length compression strings string compression schemes decompose input string sigma sequence subwords blocks sigma delta delta delta bm gamma return sequence representations blocks 
run length compression compression bn gamma defined delta delta delta bn gamma sigma bn longest prefix letters 
compression sequence delta delta delta pm gamma pairs pn bn example run length block decomposition bbbb aa run length compression 
familiar notation represent run length compressed strings order structures dm dn dm represents string second components length natural order dm iff maximal block length maximal dm dn block length gamma iff natural order dn order language talking variables indicate range dn dm formula dn dm 

lempel ziv compression strings classical lempel ziv compression family algorithms variations cf 

follow simple version lz 
lz compression decomposes word sigma sequence subwords blocks sigma delta delta delta bm gamma block consists letter suppose constructed blocks bn gamma delta delta delta bn gamma sigma bn shortest non empty prefix fb bn gamma exists bn lz compression lz sequence delta delta delta pm gamma pairs pn bn gamma gamma ffl delta delta delta bm gamma decompression decode pm gamma decode delta delta delta decode gamma decode decode decode insert dots string show decomposition lz blocks 
example bb aa bba bbb encoded lz 
represent lz compressed strings lz delta delta delta pm gamma finite labeled ordered graphs lz dm run length compression dm represents string second components lz length lz natural order dm true iff letter block binary relation describes previous pairs sigma th block gamma longest strict prefix edge gamma node node gamma 
string bb aa bba bbb lz graph lz note number pairs add numbers third component resulting triples represent tree block labels path root node tree trie branches leaving node labeled different letters block equals previous bb aa bba bba 
case compressed binary string lz structure lz dm unary predicate complement 
definability compression suppose scheme maps strings class compressed strings viewed finite structures class 
property strings defined sentence logic class definition property strings definable logic exists formula logic language strings iff say sigma order definable compressed strings order sentence language structures fw sigma 
interested properties definable strings related properties definable compressed strings class properties strings definable compressed strings behaves 
study example problems substring query substring query fixed pattern string asks string contains substring 
order definable strings xu 
general classical question problem finding occurrences pattern string computing closure concatenation concatenation order definable languages order definable language theorem 
true compression order definable compressed strings concatenation order compressed strings 

definability run length compressed strings show order queries strings expressed order queries run length compressed strings 
translate non boolean queries mapping elements pairs elements iff position st relative position block iff sigma 
theorem order formula xn strings order formula xn run length compressed strings proof induction formula xn define xn jwj xn xn xn yn jwj xn xn remaining clauses verification left reader 
see definition relations jwj corollary free language order definable compressed strings 
corollary substring query order definable compressed strings 
properties strings order compressed strings order strings 
example ng regular buchi result monadic second order strings 
order compressed strings iff max max dm previous example shows directly corollary language concatenation order definable compressed strings definable structures addition function 
interesting generalization substring query subimage query 
consider images dimensional strings image function dn theta dn sigma gives pixel colour 
represent images structures dn binary predicate dn iff ordering dn compressed images obtained compressing strings arise concatenation lines 
delta delta delta gamma delta delta delta gamma delta delta delta gamma gamma 
query binary alphabet sigma fffi fflg asks existence square ffl symbols 
define order images sq ffl ffl ffl ffl refers position bottom left corner square 
prove gammai gamma gammai ad ad bc gammai bc bc gamma bc gammai bc bc bc bc gammai bc bc gamma bc bc gammai 
lines sequence dimensional letters theorem query order compressed images 
proof sketch construct images square pattern square pattern standard ehrenfeucht game show compressions elementarily equivalent 
query defined firstorder sentence quantifier rank run length compressed images 
example images image square matrix filled ffi ffl 
lines matrix filled ffi look follows suitable fixed ffl ffi ffl ffi ffl ffi ffi ffl ffl ffi ffi ffi ffi ffl ffl ffi ffl ffl ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffi ffi ffl ffl ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffl ffi ffl ffi ffl ffi ffi ffl ffl ffi ffi ffi ffi ffl ffl ffi ffl ffl ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffi ffl ffl ffi ffi ffi ffl ffl ffi ffl ffl ffi ffi ffl ffl ffi line images 
ffl misaligned lines ffl exist 
occurs underlined position abbreviations ffi ffi ffl ffl ffi ffi compressions ad bc bc bc bc ad bc bc bc bc improve readability inserted mark line 
convenient dimensional letters order transform lines dimensional structure dm ua ug ad bc bc bc bc compressed images viewed cf 
words ab gammai ec gamma dc gammai shifted positions right ab gammai ec gammaj gamma dc gammai parameters large relative exhibit winning strategy duplicator string structure generally homogeneous points point points appear string call points boundary points 
fa ang points played stage boundary points 
duplicator maintain absolute distances close obtain lemma refine duplicator winning strategy obtain winning strategy simply mimicking spoiler moves obtain lemma 
concludes proof theorem 

definability lempel ziv compressed strings show order properties strings generally order definable lz compressed strings fo tc definable 
define class order properties strings order lz compressed strings 
start example 
example regular language defined max string lz graph compression lz consecutive linear orders points sequence sequence 
defined lz max max gamma 
order properties strings lz compressed strings show order strings general expressed order sentences lz compressed strings 
substring query order lz compressed strings 
finding substring difficult lz compressed structures essentially lz code substring occurrence 
depends left context 
example consider alphabet sigma ag language lz lz compressed strings represented graphs lz lz decompressed strings resp 
resp 

lemma order property strings order definable lz compressed strings 
proof consider order definable language example 
suppose order definable lz compressed strings sentence quantifier rank lz lz orders length gamma lz lz ehrenfeucht argument 
compression injective lz lz lz lz 
lz lz contradicting lz lz 
corollary substring query order definable lz compressed strings 
proof consider example 
substring occurs compressed strings elementarily equivalent 
order formula quantifier rank language compressed structures define substring query 
corollary language concatenation order definable lz compressed strings 
proof note compression af order definable 
slight modification example compression 
answer reverse question lemma exists order property class lz compressed strings order definable class strings 
proof consider class compressed strings defined gamma gamma graph size satisfying note lz iff set strings regular language order strings 

order strings order tc lz compressed strings show define order properties strings classical extension order formulas lz structures 
notice complete obtain lz decomposition relation fo tc definable original string 
formula language fo tc built constructions order formulas extended formula sequences length pairwise distinct variables tc formula free tc bound subformula 
meaning tc transitive closure free variables write tc 
see tc define substring query lz compressed strings 
example consider occurrences substring binary strings 
prefix block content previous block sufficient define occurrences block borders defined formula case check symbols block node obtained back edge 
second case check block check symbol block requires follow back edges tc node way find block containing prefix block length 
example suggests code position original string pair nodes lz compressed string positions block uniquely correspond blocks containing non empty prefixes set positions covered represented lz lz transitive reflexive closure example aa ab aba aa positions contained aba represented nonempty prefixes ab aba theorem order formula xn strings fo tc formula lz xn yn lz graphs lz lz mapping elements pairs elements lz iff position lies block prefix position need tc define tc 
deterministic relation translation fact go fo dtc fo tc 
proof omitting cases equality boolean connectives define lz lz lz xn xn xn yn xn yn lz xn yn partly verify clause 
shortest prefix covers position ends letter label node lz lz 
similarly converse 
clause assume lz lz lz 
nodes represent blocks lz block decomposition reached chain block prefix block prefix block induction 
xn 
corollary substring query fo tc definable lz compressed strings 
translation uses dtc order properties strings logspace computable lz compressed strings 
reconstruct positions answers lz translated queries lz 
see note jb jb gamma jb gamma define jb lz recursion prefixes apply external arithmetics sum 
translating fo tc second order properties translation extended fo tc tc lz tc lz corollary fo tc property strings fo tc lz compressed strings 
extended second order formulas doubling arity quantified relations lz lz corollary monadic property strings dyadic lz compressed strings 
works theorem bijection jwj ary relation corresponds ary relation lz 
similarly lz compression strings additional relations 
example compress labeled graphs impose total linear order lz compression resulting string edge relation 
properties involving additional relation read compressed structure equipped relation 

order strings remains order lz compressed strings class order properties strings remain order lz compressed strings 
class closed limited iterated concatenation 
definition class languages sigma built union intersection complement finite languages languages sigma sigma aperiodic 
theorem proposition class firstorder definable languages 
theorem order definable lz compressed strings 
proof induction definition slight generalization sigma aperiodic order definable lz compressed strings 
rest outlines proof claim lemma transfers proposition lz compressed strings 
main observation large ordered labeled graphs lz repeated pattern sequence isomorphic subgraphs adjacent ones linked back edges way 
existence pattern sufficient lemma straightforward 
best shown ignoring lz compression behaves turn compression infinite string sss delta delta delta infinite word sigma obtained concatenation infinitely copies lz block decomposition infinite sequence delta delta delta delta delta delta bm sigma shortest nonempty prefix delta delta delta bm gamma gives infinite lz graph lz order type label node 
letter block useful think lz sequence dominoes follows 
string prefix mean uv sigma suffix uv sigma suffix infinite words note finite suffix set fvs suffix shortest prefix example suffix set fvs suffix bas splittings prefix suffix jv unique jp delta delta delta delta delta delta call ordered pair class block small example consider aperiodic string aba 
lz block decomposition gives sequence blocks follows aa ba ab aab sa baa asa bas sab delta delta delta classes blocks delta delta delta example block class delta delta delta bas gives component delta delta delta gives second component jaj 
domino just ordered pair numbers jp component type 
jp gamma jp gamma jp gamma sequence delta delta delta dominoes called lz domino sequence satisfies conditions 
domino rule match dominoes 
lz rule smallest index domino rule says lz block prefix suffix left removing prefix delta delta delta lz rule expresses prefix block taken extends block taken single letter 
lz domino sequence delta delta delta defines labeled ordered graph gc jcj iff av suffix iff type works length 
example cont 
aba gc particular lz graph completely determined sequence delta delta delta block classes easily checks gc lz 
representation lz lz domino sequence allows show existence repeating subgraph showing ultimately periodic 
lemma infinite lz domino sequence 
finite words ts contains domino exactly 
proof show prefix ts contains domino 
jp cm cm occurrences domino may assume cm delta delta delta cm longest suffix delta delta delta cm containing domino twice show cm delta delta delta cm longest suffix delta delta delta cm containing domino twice 
case cm occur cm delta delta delta cm choose 
case cm occurs cm delta delta delta cm type say 
cm cm lz rule dominoes type occur cm delta delta delta cm cm cm cm type cm contradicting assumption domino type occurs twice cm delta delta delta cm cm cm cm delta delta delta cm longest suffix delta delta delta cm containing domino twice length lz rule occur times sequence 
follows run case increased 
reach cm delta delta delta cm updated contains domino 
argued case cm cm similarly cm cm 
delta delta delta cm gamma gives ts finite domino sequence obvious firstorder formula ordered labeled graph fj jc gamma gc fj jc gamma restriction nodes jcj gamma 
example cont 
aba jt initial segment tss described tss shown 
lemma lz gc infinite ts expressing unbounded repetition gc jt ss ss find order characterization lz lemma sigma order formula ts 
ordered labeled graph order type ts 
lz want define set graphs tss finite prefixes tss ts express bounded repetition 
need extend notion aperiodic word case lz graphs 
call labeled ordered graph form ss periodic sss contains segments isomorphic ss 
account backedges copies consider graphs form gss proposition sigma power aperiodic string lz block class sequence ts jsj jp gss aperiodic 
proof suppose gss periodic ss jsj 
gs 

defines embedding isomorphic segment 
gs relates nodes class domino type jp fe jp jg union graphs disjoint fields 
note 
preserves dominoes cn type mapped dominoes cn type bijection jp jp domino rule cn cn 
preserves relation gamma gamma mod jp 
aa ba ab aab sa baa asa bas sab ass ss ssa bass 
graph example identity mod jp jp 
respects labeling labels letter rn prefix equals letter rn rn rn implies periodic contradicting assumptions 
corollary sigma ts representation lz block class sequence lemma 
order formula tss finite ordered labeled graph tss max proof impose upper bound formula ts 
lemma obtaining tss tss jt gamma ss ss jsj jt sj gamma jsj know ss jt max gamma max gamma 
words need sss ss holds nodes jsj follows proposition 
note analogy proposition 
combine arguments prove announced lemma sigma aperiodic order definable lz compressed strings 
proof language set finite prefixes distinguish elements class lz block ends 
consider sequence delta delta delta lz blocks associated sequence delta delta delta block classes 
ts lemma 
aperiodic jsj jsj subsequent blocks class appear distance jsj blocks second extends jsj subsequent letters jsj jt jt particular block jts contains note union jsj sublanguages ranges non empty suffixes fw prefix delta delta delta fw delta delta delta gamma fw delta delta delta gamma prefix prefix delta delta delta remains shown order definable lz compressed strings 
proof clear dealing finite language 
proof domino form jsj set empty 
lz graph delta delta delta gamma 
graphs finite models tss max gamma jp sp max gamma jsp tss formula corollary sp max gamma jsp forces segment isomorphic gsp proof note delta delta delta gamma prefix prefix delta delta delta lz initial segment lz gts extends tss lz graph delta delta delta gamma maximal node labeled letter max suitable node express possible values class block blocks gamma contain determine gamma independently 
final block lz class contains related lz block containing longest strict prefix block jt blocks block containing gamma class 
jt numbers jt blocks containing longest strict prefix jsj resp 
jp position domino resp 
max gamma jp jt jt sublanguage defined order lz compressed strings tss max gamma jp sq max gamma jsp max max letter tss variation formula tss corollary restrict back edge node max 
define strings needed aperiodic induction formula ind define define lz compressed strings need aperiodic different reason 
periodic say lz graphs define lz 
define lz ae lz case proof allow back edge max go arbitrary block class 
done order aa suppose quantifier rank defines lz compressed strings 
choose lz length max 
lz lz wa differ max 
wa belong aa impossible 
order lz compressed strings 

considered properties strings definable compressed strings run length lempel ziv compression schema 
order queries strings translated order queries run length compressed strings queries definable order extended transitive closure lempel ziv compressed strings 
approach generalizes compressed pattern matching problem characterized class problems defined class order defined lz compressed strings 
interesting note new compression schema designed search problems easier compressed structures 
hoped definability point view helpful design compression schemas preserve key properties 
extend approach binary structures generalize model checking approach new compression schema obdd may useful compressed symbolic representation verify property 
classical case verify formula iterating construction binary decision diagrams syntax formula 
approach may define new compression schema different formula defines property 
may smaller compressed symbolic structure formula richer language 
bell cleary witten 
text compression 
prentice hall englewood cliffs nj 
buchi 
decision method restricted second order arithmetic 
nagel editor international congress logic information philosophy science volume 
stanford university press 
cover thomas 
elements information theory 
john wiley 
crochemore 
text compression 
nielsen editors th international colloquium automata languages programming icalp prague july lncs berlin 
springer verlag 
de agostino 
complete problems data compression 
theoretical computer science 

ebbinghaus flum 
finite model theory 
springer verlag 
elgot 
decision problems finite automata design related arithmetics 
transactions american mathematical society 
farach 
string matching lempel ziv compressed strings 
acm symposium theory computing 
manber 
text compression scheme allows fast searching directly compressed file 
combinatorial pattern matching lncs pages berlin 
springer verlag 
mcnaughton 
elementary computability formal languages automat 
prentice hall englewood cliffs 
shibata takeda shinohara arikawa 
pattern matching text compression 
th annual symposium combinatorial pattern matching cpm warwick july lncs berlin 
springer verlag 
ziv lempel 
compression individual sequences variable rate coding 
ieee transactions information theory pages 
