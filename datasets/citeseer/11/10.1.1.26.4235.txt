polynomial time approximation schemes geometric graphs thomas klaus jansen eike seidel disk graph intersection graph set disks arbitrary diameters plane 
case disk representation polynomial time approximation schemes maximum weight independent set problem selecting disjoint disks maximum total weight minimum weight vertex cover problem disk graphs 
known np hard optimization problems disk graphs 
novel recursive subdivision plane allows applying shifting strategy different levels simultaneously dynamic programming approach feasible 
disk graphs represent common generalization previous results planar graphs unit disk graphs 
extended intersections graphs disk geometric objects squares regular polygons higher dimensions 
intersection graphs graphs vertices represented sets vertices adjacent corresponding sets non empty intersection 
studied authors 
interested approximation algorithms np hard optimization problems intersection graphs geometric objects particular approximation algorithms independent set vertex cover 
prominent applications geometric intersection graphs frequency assignment cellular networks map labeling 
goal maximum weight independent set problem mwis compute set geometric objects certain weights subset disjoint non overlapping objects maximum total weight 
goal minimum weight vertex cover problem compute subset objects minimum total weight intersecting objects objects contained subset 
mis mvc refer unweighted versions problems 
obtain polynomial time approximation schemes mwis intersection graphs disks squares disk objects higher dimensions 
preliminaries set geometric objects corresponding intersection graph undirected graph vertex set edge vertices corresponding objects intersect 
computer engineering networks laboratory swiss federal institute technology eth zurich ch zurich switzerland 
email tik ee ethz ch institute computer science applied mathematics christian university kiel 
kiel germany 
email informatik uni kiel de 
supported part eu research training network ct 
assume set fd disks plane diameter center weight subset denotes sum weights disks disks intersect dist dist denotes euclidean distance points plane 
disk graph called circle graph intersection graph set disks 
assume input algorithms set disks corresponding intersection graph 
important distinction determining graph disk graph known np complete efficient method known computing disk representation intersection graph 
interestingly planar graph coin graph intersection graph set interior disjoint disks 
class disk graphs properly contains class planar graphs 
set disks plane opt opt denote total weight optimal solution mwis respectively 
algorithm approximation algorithm mwis runs polynomial time computes independent set total weight opt 
algorithm approximation algorithm runs polynomial time computes vertex cover total weight opt 
algorithm polynomial time approximation scheme ptas mwis takes additional parameter computes independent set total weight opt running time polynomial size representation fixed 
ptas defined analogously 
algorithm approximation algorithm algorithm said approximation ratio 
note complement independent set vertex cover vice versa 
opt opt 
complement solution output approximation mwis general provide approximation vice versa 
general graphs vertices polynomial time approximation algorithm mwis approximation ratio np rp 
max general graphs approximated constant smaller np 
best known approximation algorithm general graphs approximation ratio 
intersection graphs geometric objects better approximation ratios possible 
related disk graphs unit disk graphs intersection graphs disks equal diameter mwis remain np hard exist mwis minimum dominating set problem 
intersection graphs disks arbitrary diameters best previously known approximation algorithms achieve approximation ratio mis 
question raised ptas exists disk graphs 
class disk graphs contains class unit disk graphs class planar graphs ptas disk graphs generalize results 
resolves question presenting mwis disk graphs 
related map labeling map labeling refers family tasks concerning placement labels map 
assumed features labeled points labels modeled rectangles just take bounding box label text 
feature certain admissible positions labeling rectangle example rectangle placed feature coincides corner rectangle 
rectangles assigned weights represent importance including label map 
meaningful study problem maximizing total weight labeled features subject constraint different labels overlap 
just maximum weight independent set problem intersection graph set axis aligned rectangles 
agarwal give log approximation algorithm mwis intersection graph axis aligned rectangles 
special case rectangles height meaningful labels text labels certain font size obtain ptas 
consider sliding labels point lie boundary label assume labels may placed orientation 
provide constant factor approximation algorithms maximizing size labels assuming features labeled labels circles squares identical size 
improved 
bicriteria approximation algorithms label fraction features labels size fraction optimal size discussed 
algorithms ptas mwis subroutine 
mentioned algorithms extended case non uniform squares ratio size largest square smallest square bounded constant 
new ptas mwis intersection graphs squares algorithms extended labeling non uniform squares ratio arbitrary 
van kreveld investigate question features map labeled different restrictions rectangular labels enforced feature corner rectangle vs sliding rectangles 
practical approximation algorithm ptas maximizing total weight labeled features case sliding labels rectangles height 
date bibliography publications map labeling web 
results mwis intersection graphs disk objects 
sections details mwis disk graphs 
section discuss approach extended geometric objects squares regular polygons higher dimensions 
mention open problem section 
sophisticated shifting strategy previously employed results obtaining various optimization problems planar graphs unit disk graphs 
partition disks levels diameters novel recursive subdivision plane allows apply shifting strategy levels simultaneously 
outline basic idea ptas mwis 
plane partitioned squares level disks removed input different squares level yield independent subproblems respect disks level level disks smaller diameter 
furthermore constant number disks larger diameter disjoint intersect square current level 
sets disks enumerated polynomial time square dynamic programming approach feasible 
details section 
ptas independent set disk graphs fixed positive integer 
scale disks largest disk diameter 
min diameter smallest disk 
blog min partition set disks levels 
level consists disks diameter satisfying active line level active line level active line level active line level example grid active lines level coarse grid level fine grid 
big disks level small disks level 
disks shown maximum possible diameter level 
active lines drawn thicker grid lines 
disks hit active lines drawn dashed 
note disk level hit active line center strip active line enclosed dotted lines 
subdividing plane level impose grid plane consists lines apart 
th vertical line th horizontal line say th vertical line index th horizontal line index furthermore say disk center diameter hits vertical line 
similarly say hits horizontal line 
intuitively disk hits line intersects line touches line left 
note disk hit horizontal line vertical line level 
consider vertical lines index modulo equals horizontal lines index modulo equals say lines active 
define set disks obtained deleting disks hit line level disk active 
see example 
write opt short hand opt lemma pair opt opt 
proof set disjoint disks total weight opt 
set disks hit vertical line level index modulo sets disjoint weight fraction weight set note weight opt 
set disks hit horizontal line level index modulo weight sets fraction weight set note weight opt 
tu algorithm considers possible values possibility optimal independent set computed dynamic programming 
sets obtained way largest weight output 
lemma set total weight opt 
algorithm achieves approximation ratio gets larger approximation ratio gets arbitrarily close 
remains show optimal independent set computed dynamic programming total running time algorithm polynomial size input fixed value dynamic programming consider particular level 
lines level active partition plane squares 
precisely consecutive active vertical lines consecutive active horizontal lines square obtained 
refer squares level squares 
definition disk level completely contained square 
furthermore lemma relationship squares different levels 
lemma square completely contained square 
proof prove lemma showing line active level active level 
loss generality consider vertical lines 
active vertical line level means mod line identical line level index 
obviously mod mod line active level 
tu show number disjoint disks level intersect square bounded constant 
serve illustration fact disjoint disks diameter larger small disks intersect square shown 
lemma square set disjoint disks disk level intersects constant depending jij proof square consists strip width surrounding disks level diameter area furthermore disk occupies area disks diameter intersect completely contained larger disks intersect occupy area larger 
area jij choose 
tu ready discuss dynamic programming algorithm computing optimal independent set 
call square relevant contains disk level table disks level intersect jj disks disjoint fd level jg child squares fd intersects table od fd level smaller jg able undefined table table fi fi od computing table relevant square contained relevant square relevant square say child child square parent contained relevant square contained contained algorithm processes relevant squares order non increasing levels 
square processed table table computed 
set disjoint disks level smaller intersect table entry table maximum weight set disjoint disks level contained disjoint disks order compute table table sets containing disks constant lemma level intersect enumerated 
set consists disjoint disks optimal way extending set adding disks larger levels contained computed looking respective sets stored tables children pseudocode computation table shown 
tables relevant squares computed algorithm takes union sets table relevant squares parent 
claim result maximum weight independent set 
prove correctness algorithm 
lemma assume algorithm processed relevant square set disjoint disks smaller levels intersect table properties table consists disks contained level 
table independent set 
table maximum sets satisfy 
proof proof induction number squares processed algorithm 
initially claim lemma holds vacuously 
assume algorithm processes relevant square set disjoint disks smaller levels intersect maximum weight set disks contained level independent set 
disks level set sets enumerated outer loop algorithm 
furthermore disk contained relevant child square relevant child squares disjoint 
inductive hypothesis tables computed children correct 
iteration algorithm obtains set total weight conclude table hand child squares disjoint table entries computed algorithm sets disjoint disks 
particular table independent set 
shows table table algorithm computes correct entries table induction goes 
tu observe disks contained relevant square parent relevant squares parent disjoint 
lemma shows algorithm computes optimal independent set 
remains consider running time 
lemma fixed running time algorithm polynomial 
proof disks relevant squares 
relevant squares forest structure links relevant square children computed polynomial time 
relevant square algorithm shown enumerate sets perform set lookups children lookup takes polynomial time 
algorithm executed possible values 
running time tu summarize result theorem 
theorem polynomial time approximation scheme maximum weight independent set problem disk graphs provided disk representation graph 
ptas vertex cover disk graphs section describe ptas 
partitioning disks levels subdivision plane squares level mwis 
values considered turn 
note definition squares level depends contrary ptas mwis disks completely contained square level removed disks considered squares level intersect squares 
square called relevant contains disk level intersects consider square denote set disks intersect set disks level smaller define analogously 
say set pseudo cover disks intersect contains 
note pseudo cover need contain intersection outside observe disks intersect exists relevant square intersect 
pseudo cover call projection similarly 
processing algorithm considers pseudo covers projection equals independent set number independent sets bounded lemma enumerate complements corresponding projections pseudo covers polynomial time 
ptas mwis relevant squares processed bottom fashion 
relevant square projections pseudo covers complements independent sets table disks level intersect jj disks disjoint fd level jg child squares fd intersects table od fd level smaller jg able undefined table table fi fi od modified algorithm minimum vertex cover enumerated 
enumeration process table table constructed looking respective entries stored tables children entry table projection set pseudo cover ptas mwis entries table optimal minimum weight sets general purposes 
shows pseudocode computing table tables table computed children constant lemma 
algorithm outputs union sets table taken relevant squares parent 
claim approximation minimum weight vertex cover 
order analyze algorithm lemmas 
proofs lemma lemma appendix lemma algorithm outputs vertex cover optimal vertex cover disk hits vertical line level horizontal line level 
pair values set disks hit vertical line level index modulo equals horizontal line level index modulo equals obviously exist values total weight times weight consider subdivision plane results choice set relevant squares 
square denote disks intersect level note 
lemma 
proof disks counted sum left hand side intersect squares level 
disk intersect squares level 
furthermore disks intersect square level 
disks total weight counted multiple times disk counted times left hand side counted 
exceed 
tu lemma vertex cover output algorithm 

combining lemmas obtain theorem 
theorem polynomial time approximation scheme minimum weight vertex cover problem disk graphs provided disk representation graph 
extension geometric graphs previous sections mwis intersection graphs disks arbitrary diameters 
approach specific properties disks required geometric objects partitioned levels constant number disjoint objects level intersect square level approach geometric objects squares regular polygons 
deal rectangles ratio height width differ constant factor different rectangles suffices scale input axis resulting rectangles approximately squares 
furthermore approach works geometric objects dimensional space provided constant 
space partitioned dimensional cubes level removing objects case mwis hit certain horizontal vertical lines remove objects hit certain hyperplanes 
specifically obtain mwis intersection graphs geometric objects dimensions conditions satisfied possibly appropriate scaling bounded constant 
object dimensional ball contains determined polynomial time 
decide polynomial time objects intersect object intersects arbitrary cube 
level contain objects balls diameter satisfying number disjoint objects level intersect dimensional cube side length bounded constant fixed 
open problem approximation schemes partitioning plane squares level works ratio height width roughly geometric objects 
clear approach extended intersection graphs arbitrary axis parallel rectangles example 
computing maximum independent set rectangles best known approximation algorithm approximation ratio log 
open problem devise approximation algorithm constant approximation ratio ptas problem provide evidence mwis intersection graphs arbitrary rectangles substantially harder approximate intersection graphs squares disks 
agarwal van kreveld suri 
label placement maximum independent set rectangles 
computational geometry theory applications 
baker 
approximation algorithms np complete problems planar graphs 
journal acm 
extended published proceedings focs pp 

bar yehuda 
local ratio theorem approximating weighted vertex cover problem 
annals discrete mathematics 
le 
graph classes survey volume monographs discrete mathematics applications 
siam 
clark johnson 
unit disk graphs 
discrete mathematics 
marathe moret zhu 
map labeling generalizations 
proceedings th annual acm siam symposium discrete algorithms soda pages 
marathe moret 
point set labeling positions 
proceedings th annual acm symposium computational geometry pages 
golumbic 
algorithmic graph theory perfect graphs 
academic press new york 
hastad 
clique hard approximate proceedings th annual symposium foundations computer science focs pages 
hastad 
optimal inapproximability results 
proceedings th annual acm symposium theory computing stoc pages 
hunt iii marathe radhakrishnan ravi rosenkrantz stearns 
schemes np pspace hard problems geometric graphs 
journal algorithms 

der abbildung 
berichte uber die der akademie der wissenschaften leipzig math 
klasse 

intersection graphs arc connected sets plane 
proceedings symposium graph drawing gd lncs pages 

graph theoretical models frequency assignment problems 
phd thesis technische universitat berlin 
marathe breu hunt iii ravi rosenkrantz 
simple heuristics unit disk graphs 
theoretical computer science 
mckee 
topics intersection graph theory volume monographs discrete mathematics applications 
siam 
van kreveld wolff 
point labeling sliding labels 
computational geometry theory applications 
wolff 
map labeling bibliography 
www math inf uni de map labeling bibliography 
proofs lemma lemma proof lemma square set disks intersect recall denotes set disks level smaller similarly set disjoint disks show table entry table set pseudo cover proof induction number relevant squares processed algorithm 
assume entry table modified algorithm iteration outer loop corresponding certain set disks level equal level smaller respectively 
note consider child level subset containing disks intersect inductive hypothesis table set pseudo cover obviously set assigned table set child clearly remains show pseudo cover note contains sets children pseudo cover child consider disks intersect level greater intersect child pseudo cover level contained independent set contained shows pseudo cover algorithm outputs union pseudo covers relevant squares parent 
intersection contained relevant square proves algorithm outputs vertex cover tu proof lemma relevant square set disks intersect define usual 
recall claim table computed table means relevant square contained note proof induction number relevant squares processed algorithm 
assume algorithm process relevant square holds squares processed iterations outer loop iteration algorithm look sets table children assume square 
child inductive hypothesis know table 
set computed iteration loop weight child table shown satisfied set relevant squares parent 
algorithm outputs table solution 
relevant square 
get table 
tu 
