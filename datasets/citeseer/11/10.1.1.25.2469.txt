strand spaces proving security protocols correct javier thayer jonathan herzog joshua guttman mitre burlington rd ms bedford ma usa mitre org strand sequence events represents execution legitimate party security protocol sequence actions penetrator 
strand space collection strands equipped graph structure generated causal interaction 
framework protocol correctness claims may expressed terms connections strands di erent kinds 
preparing rst example needham schroeder lowe protocol prove lemma gives bound abilities penetrator protocol 
analysis example gives detailed view conditions achieves authentication protects secrecy values exchanged 
proof methods explain original needham schroeder protocol fails 
turning second example introduce ideals method prove additional bounds abilities penetrator 
prove number correctness properties otway rees protocol clarify limitations 
believe approach distinguished simplicity model precision results produces ease developing intelligible reliable proofs automated support 
appears journal computer security pages 
contents strand spaces basic notions 
bundles causal precedence 
terms encryption 
freeness assumptions 
penetrator penetrator strands 
bound penetrator 
notions correctness needham schroeder lowe protocol nsl strand spaces 
agreement responder guarantee 
original needham schroeder protocol 
secrecy responder nonce 
initiator guarantees secrecy agreement 
ideals honesty ideals 
entry points honesty 
bounds penetrator 
otway rees protocol otway rees protocol 
otway rees secrecy 
otway rees authentication 
initiator guarantee 
responder guarantee 
missing guarantee 
discussion 
goals protocols 
security protocol exchange messages parties encryption provide authentication distribute cryptographic keys new conversations 
security protocols developed carefully experts reviewed carefully experts aws unusable see example 
cases attacks presuppose weakness cryptosystem just harmful ideal cryptosystem 
cases characteristics cryptosystem characteristics protocol combine cause protocol failure 
analyzing security protocols consists mainly complementary activities 
rst nd aws protocols correct second establish convincingly correctness 
activities interrelated discovery aw may suggest altered protocol may wish prove correct failure prove correctness protocol may suggest particular aw 
focus second activity proving correctness protocols fact correct 
stage study protocol correctness assuming ideal cryptography 
instance earlier vintage proposed techniques proving protocols correct :10.1.1.44.4593:10.1.1.115.3569
believe approach advantages 
approach gives clear semantics assumption certain data items nonces session keys fresh arise protocol run 
explicit model possible behaviors system penetrator allows develop general theorems bound abilities penetrator independent protocol study 
simple example section powerful method introduced section 
method allows various notions correctness involving secrecy authentication stated proved 
opinion approach leads detailed insight reasons protocol correct assumptions required 
proofs simple informative easily developed hand help identify exact conditions rely protocol 
basic contribution strand space 
strand space set strands strand sequence events single principal may engage 
individual strand sequence message transmissions receptions speci values data keys nonces 
sequential process exhibits internal external choice 
legitimate principal strand represents actions party party presumed interlocutor particular run protocol 
party may involved run protocol period time represented strands 
activities di erent parties represented di erent strands 
strand penetrator sequence message transmissions receptions model basic capability penetrator assumed possess 
examples penetrator strands include activities receiving symmetric key message encrypted key sending result decrypting message receiving messages sending result concatenating sending data item name penetrator may know 
useful penetrator actions may modeled connecting number penetrator strands 
strand space set strands consisting strands various legitimate protocol parties penetrator strands 
may think strand space containing legitimate executions protocol expected useful lifetime actions penetrator apply messages contained executions 
bundle portion strand space 
consists number strands legitimate hooked strand sends message strand receives message 
typically protocol correct bundle contain strand legitimate principals apparently participating session agreeing principals nonces session keys 
penetrator strands stray legitimate strands may entangled bundle correct protocol prevent legitimate parties agreeing data values maintaining secrecy values chosen 
may think bundle collecting activities relevant run protocol de nition give allows bundle contain additional events need strictly relevant 
strand linear structure sequence principal message transmissions receptions 
bundle graph structured entity representing communication number strands 
protocol correctness typically depends essentially freshness data items nonces session keys 
reason strand spaces concern full sense contain strands arise possible data items 
presumably useful lifetime protocol shorter length time needed principals possible session key random value may reasonably assume values kinds invented lifetime protocol 
strand space models assumption values occur freshly including strand originating data item initially sending message containing 
strands contrast may stand ready combine originating strand receiving message processing contents 
strand space model assumption values impossible penetrator guess essence space simply lacks penetrator strand value sent having rst received 
develop basic machinery strand spaces section 
machinery includes partial order models causal contribution justi es induction proof method section 
develop model penetrator section including simple useful theorem gives general bound penetrator regardless protocol modeled section 
section describes notions correctness may easily expressed 
section study needham schroeder lowe public key protocol example proving authentication results sections secrecy results section 
section develop sophisticated machinery reasoning protocols notion ideal 
concept section state powerful bounds penetrator straightforward theorem section 
turn otway rees protocol case study show utility results 
contrast needham schroeder lowe protocol otway rees protocol uses secret key cryptography results section particularly useful secret key protocols 
case study discover detailed unexpected information exact conditions protocol correct 
strand spaces section introduce strand spaces related notions section 
bundle section portion strand space large represent full protocol exchange natural causal precedence relation relative inductive arguments may carried 
set messages consider described section 
develop restrictive treatment supports reasoning develop details merely distract main points exposition 
basic notions consider set elements possible messages exchanged principals protocol 
refer elements terms 
section impose algebraic structure set section assume subterm relation de ned means subterm protocol principals send receive terms 
represent transmission term occurrence term positive sign reception term occurrence negative sign 
de nition signed term pair ai symbols write signed term 
set nite sequences signed terms 
denote typical element abuse language treat signed terms ordinary terms 
instance shall refer subterms signed terms 
de nition strand space set trace mapping tr 
usually represent strand space underlying set strands 
particular applications theory trace mapping need injective 
may want distinguish various instances trace example may need distinguish identical traces occurring di erent times model replay attacks 
de nition fix strand space 
node pair hs ii integer length tr 
set nodes denoted say node hs ii belongs strand clearly node belongs unique strand 

hs ii index strand de ne term tr ith signed term trace similarly uns term tr unsigned part ith signed term trace 
edge term term intuitively edge means node sends message received recording potential causal link strands 

hs ii hs members edge intuitively edge expresses immediate causal predecessor strand write mean precedes necessarily immediately strand 

unsigned term occurs term 

suppose set unsigned terms 
node entry point term term 
unsigned term originates entry point set ft bundle 
unsigned term uniquely originating originates unique term originates uniquely particular strand space play role nonce session key structure 
sets edges directed graph hn 
bundles causal precedence bundle nite subgraph graph regard edges expressing causal dependencies nodes 
illustrates particular bundle 
de nition suppose suppose suppose hn 
subgraph hn 
bundle 
nite 

term negative unique 

acyclic 
conditions follows graph 
purposes matter communication regarded synchronizing event asynchronous activity 
de nition formalizes process communication model properties strand process may send receive message time strand receives message unique node transmitting message immediately received strand transmits message strands may immediately receive notational convention node bundle hn written strand nodes bundle height strand largest hs ii trace tr height 
de nition set edges 
transitive closure re exive transitive closure relations subsets ns ns ns set nodes incident edge lemma suppose bundle 
partial order re exive antisymmetric transitive relation 
non empty subset nodes minimal members 
regard expressing causal precedence holds occurrence causally contributes occurrence bundle understood simply write 
similarly minimal mean minimal 
existence minimal members non empty sets serves induction principle observation clari es relation approach paulson schneider 
arguments turn minimal elements set nodes 
arguments motivated question know know 
lemma suppose bundle set nodes uns term uns term implies minimal member sign positive 
proof 
term negative bundle property uns term uns term 
violating minimality property lemma suppose bundle minimal element fm term node originating occurrence proof 
member term 
lemma sign positive 
applying de nition clause times necessary minimality property term 
originating fn fn fn gkb needham schroeder terms encryption specialize set terms particular assume set texts representing atomic messages 
set cryptographic keys disjoint equipped unary operator inv assume inv injective maps member key pair asymmetric cryptosystem maps symmetric key 
binary operators encr join follow custom write inv encr join set keys denotes set inverses elements illustrate notation shows bundle containing intended behavior needham schroeder public key protocol 
column represents strand consisting initiator activity exchange column represents strand respondent activity 
form discuss protocol assumes participant acquired public key 
party initiator generates number randomly nonce joins name encrypts intended respondent public key 
generates nonce sending initiator nonce back encrypted initiator public key 
answered initiator challenge showing read rst message 
initiator returns respondent nonce encrypted respondent public key 
intended result protocol participants come share access values associating values participant party possession 
fn fn fn fn gkp fn gkb needham schroeder protocol context values hashed yield shared symmetric key encrypted session instance 
fact achieve goal displays bundle serves counterexample illustrates go wrong protocol 
gure penetrator periods activity represented short strand 
initiator intends session principal key controls exploits opportunity impersonate show detail behavior achieved 
freeness assumptions proofs assumption call assumption free encryption authors similar assumptions dating back dolev yao 
stipulates ciphertext regarded ciphertext just way axiom fm gk clarity exposition stronger assumption algebra freely generated operators encr join embodied axiom 
axiom 

fm gk 

fm gk needed method leads simplest exposition main points 
showed weaken assumption considerably accounting possibility join operator associative instance 
axiom may de ne width terms de nition fm gk width 
width width width 
attacks exist terms may read having form referred type aw attacks 
type aw attacks implausible sense implementations vulnerable troublesome 
type aw attacks example general issue protocol analysis 
real protocols algebra messages relations identities holding terms allow model 
instance message composition usually associative operator implemented 
seriously contrary axiom real cryptosystems non trivial identities form fm gk sense say techniques provide useful information protocols real cryptography encryption algebra free encryption algebra surjective algebra morphism unique isomorphism ectively de nition free algebra theory universal algebras 
shown protocol correctness results strand spaces free algebra easy see protocol property fails strands protocol property fails converse true protocol failures may exploit relations algebra lifted useful information obtained considering free message algebra excluding vulnerabilities structure protocol particular properties message algebra 
problem remains determine relations elements free algebra preserve protocol correctness result 
hard problem doubtless require exploring di erent approaches considered aspect problem 
assumed message algebra freely generated simple inductive de nition subterm relation 
de nition subterm relation de ned inductively smallest relation emphasize 
restricting subterms way re ects assumption penetrator capabilities keys obtained ciphertext embedded text encrypted 
case instance dictionary attack possible assumption 
notion subterm mesh perfectly de nition origination unique origination refers subterm relation definition clauses 
cases natural notion origination referring larger relation relation de ned de nition clause instance contains condition key server may choose unnecessary alternative notion 
immediate consequence freeness assumption inductive de nition subterm proposition suppose fh gk fhgk fh gk penetrator penetrator powers characterized ingredients set keys known initially penetrator set penetrator strands allow penetrator generate new messages messages intercepts 
penetrator set consists set keys contains keys initially known penetrator 
typically contain public keys private keys held penetrator symmetric keys px xp initially shared penetrator principals playing protocol rules 
may contain lost keys known penetrator previously succeeded cryptanalysis 
penetrator strands atomic actions available penetrator encoded set penetrator traces 
summarize ability discard messages generate known messages piece messages apply cryptographic operations keys available 
protocol attack typically requires hooking atomic actions 
de nition penetrator trace text message ti flushing fn kb fn needham schroeder penetrator step tee hg gi concatenation hg hi separation components hg hi key ki encryption hk fhgk decryption hk fhgk hi 
set penetrator traces gives penetrator powers similar approaches 
ensure values may emitted penetrator closed joining encryption relevant inverses 
shows example illustrating penetrator strands hooked provide behavior assumed 
open circles show points diagram meshes rst nodes strands top 
label strands shows kind strand de nition 
possible extend set penetrator traces desired model special ability penetrator 
requires essential change framework proofs need modi ed take account additional penetrator traces 
theorems characterize penetrator just powers described penetrator additional computational cryptanalytic abilities may subject limitations 
example extended penetrator penetrator old session keys bene kinds replay attacks penetrator formalize ability 
de nition strand space pair strand space tr penetrator trace strand penetrator strand belongs node penetrator node strand lies penetrator strand 
call non penetrator regular strand node 
node node lies penetrator strand trace kind expect strand space realize penetrator traces type case space model nonces 
usually assumed space lacks strands text values regular participants fresh nonces 
remainder examine strand spaces regular strands belong single protocol 
examine case regular strands may belong protocol 
bound penetrator powers penetrator de ned penetrator keys penetrator strands independent choice particular protocol proved correct 
accordingly prove general facts penetrator powers re interested new protocol 
section develop powerful theorems penetrator prove results various protocols 
prove simple theorem useful example turn lowe protocol 
proof theorem typical lemma 
mean set di erence proposition bundle originates regular node term node particular penetrator node term 
proof 
consider set fn term suppose derive contradiction non empty 
members minimal relative lemma 
lemma minimal members originating occurrences assumption penetrator nodes 
lemma positive nodes 
examine possible cases positive penetrator nodes 
strand form ti strand form lacks positive nodes 
strand form hg gi value originates positive nodes 
strand form hg hi freeness algebra key subterm positive node subterm previous node 
strand form hg hi value originates positive nodes 
strand form contrary assumption strand form hk fhgk de nition fhgk fhgk algebra freely generated fhgk key occur positive node having occurred previous node 
strand form hk fhgk hi 
de nition fhgk key occur positive node having occurred previous node 
fact empty 
empty term certainly term penetrator nodes proof method characteristic successively considers minimal elements set considers regular nodes penetrator nodes nally takes cases di erent forms penetrator strands 
proposition instance fact establish corollary 
proved separately useful section wanted illustrate straightforward characteristic proof method 
notions correctness gavin lowe studies range authentication properties strand spaces natural model stating proving agreement properties akin correspondence properties woo lam 
protocol guarantees agreement participant say responder certain data items time principal completes run protocol responder appears run unique run protocol principal initiator appears run regular strand authentication protocol principal engaging strand apparent interlocutor inferred contents terms occurring strand 
weaker non injective agreement ensure uniqueness requires time principal completes run protocol responder apparently run protocol principal initiator apparently non injective agreement weaker prevent party executing multiple runs matching single run prove non injective agreement establishing bundle contains strand representing responder run contains strand representing initiator run corresponds sense uses establish agreement showing contains unique initiator strand illustrate properties propositions propositions 
state simple notion secrecy data value sucient purposes 
value secret bundle term propositions illustrate property 
notion secrecy concerns said wire 
sense value secret regular strands emit penetrator emit 
regular protocol participants may know secret value sense carrying computations depend long behavior protocol include disclosing public 
prove penetrator emits value follows derive values receives derived capable emitting 
penetrator strands de ned de nition correspond ways penetrator derive new values possesses 
instance penetrator received value strand lead penetrator emitting supposed secret stringent notions secrecy possible instance information ow security properties may fruitfully applied security protocols 
needham schroeder lowe protocol needham schroeder lowe protocol proposed gavin lowe way public key protocol proposed needham schroeder discovered awed 
form lowe considers protocol assumes participant discovered public key 

fn 
fn 
fn gkb protocol di ers original needham schroeder public key protocol message original protocol name included 
lowe proves correctness revised protocol showing attack revised protocol realized just runs protocol 
fdr model checker discloses attack exists small system result con rmed examining possible forms attack 
section give di erent proof strand space approach 
specialize term algebra somewhat equipping set names tname variables range tname mapping tname mapping associates public key principal 
follow tradition writing form ka assume function injective ka kb protocol achieve authentication goals mapping injective 
nsl strand spaces de nition strand space nsl space union kinds strands 
penetrator strands 
initiator strands init trace fn fn fn gkb tname tname init denote set strands trace shown 
principal associated strand 
complementary responder strands resp trace hfn fn fn gkb tname tname resp denote set strands trace shown 
principal associated strand init resp regular strand refer initiator responder respectively initiator value responder value respectively 
intention values nonces sense texts uniquely originating 
initiator responder strands strand space complete sense contain nodes particular bundles may contain rst nodes strand 
strand uniquely classify penetrator strand initiator strand respondent strand just form trace 
particular nsl space read strands penetrator strands uniquely determined 
omit safely 
fn hs fn fn gkb regular node minimal agreement responder guarantee proposition suppose 
nsl space bundle responder strand resp height 

uniquely originating 
contains initiator strand init height 
prove sequence lemmas 
remainder section arbitrary satisfying hypotheses proposition 
node hs outputs value fn convenience refer node term node hs receives value fn gkb refer node term identify additional nodes course proof lemma originates proof 
assumptions sign positive 
need check node hs preceding strand 
term fn need check hypothesis follows stipulation de nition clause responder value tname comes main lemma establishes crucial step taken regular strand penetrator strand 
usual considers minimal members set nodes 
content lemma represented 
lemma set fn term term minimal node node regular sign positive 
proof 
contains non empty 
minimal element lemma 
sign positive lemma 
lie penetrator strand 
examine possible cases positive penetrator nodes form trace consider case 
trace tr form ti case originates strand 
impossible originates uniquely regular node lemma 
trace tr form lacks positive nodes 
trace tr form hg gi positive nodes minimal occurrences 
trace tr form hg hi positive node minimal occurrence 
trace tr form case apply 
trace tr form hk fhgk suppose fhgk fhgk fhgk positive node minimal trace tr form hk fhgk hi 
positive node minimal fhgk assumption free encryption ka exists node rst strand term assumption may apply proposition infer originates regular node 
initiator strand responder strand originates trace tr form hg hi 
assume term symmetrical case term observe situation minimality know fm term member penetrator node regular node contains subterm contains encrypted subterm 
non empty hp minimal member lemma positive sign lemma 
consider kind strand lie 
clearly minimal member lie strands 
fn hs fn fn 
fn gkb node contains term positive node strand kind term hp 
hp contradicting minimality term positive node strand kind term hp 
hp contradicting minimality term positive node strand kind term hp 
hp contradicting minimality suppose term positive node strand kind minimal term trace hg hi 
term hp term hp contradicting minimality lie penetrator strand lie regular strand 
de nition fix minimal fn term term regular positive sign 
strand lies 
show node fn occurs 
lemma illustrated 
lemma node precedes term fn proof 
originates lemma originates uniquely assumption 
term term 
originate node preceding strand term 
minimality property fn term 
regular node contains encrypted term proper subterm fn term 
lemma regular strand containing initiator strand contained proof 
node positive regular node comes node form fx initiator strand responder strand contain negative node form 
second third nodes respectively 
node contained height 
proof proposition 
proposition follows immediately lemmas 
proved non injective agreement property nsl responder 
injectivity follows easily assumption initiator chooses value uniquely originates 
uniquely originating injectivity property clearly false 
proposition nsl space uniquely originating strand init proof 
init ht positive possibly occur earlier originates node ht 
originates uniquely requirement proposition distinct peculiarity approach 
assumption proposition false 
responder strand hfn fn fn gkb embedded bundle originate nodes nal term fn gkb generated penetrator chance reuse nonce responder nonce originate uniquely responder strand strand 
probabilistic model assume choice independent value case penetrator strategy succeed frequently randomly generating bits encrypt message 
strategy may safely ignored 
strand space model stringent faithful probabilistic model 
implementor justify cutting corners instance programming check showing probabilistic model exploitation strategy negligible probability success despite existing strand space model 
original needham schroeder protocol analysis sheds light original needham schroeder protocol vulnerable 
analysis exactly parallel lemma corresponding lemma read lemma original needham schroeder protocol node precedes regular strand term fn weaker information conclude init responder identity determined term fn know agree 
infer init exactly weakness lowe attack exploits 
secrecy responder nonce may methods show responder nonce remains secret protocol 
result need assume responder private key compromised 
penetrator read directly message exchange 
proposition suppose 
nsl space bundle responder strand resp 

uniquely originating 
nodes term fn term fn gkb term 
particular term 
proof 
satisfy hypotheses proposition refer hs term fn node hs receives value fn gkb refer node term consider set fn term term term non empty minimal element 
show rst lemma nodes regular 
show lemma penetrator nodes 
empty theorem holds 
lemma minimal member regular node 
proof 
suppose minimal regular node 
sign positive lemma 
node lie positive term lie responder strand case hs term fn term term hs rst node hs fn fn fn fn hs hs contradicts minimality originates contradicting assumption originates uniquely suppose lies initiator strand rst third node 
hs term originates contradicting assumption originates uniquely hs term fn second node hs form fx cgk term 
hs contradicting minimality lemma minimal member penetrator node 
proof sketch 
proof identical proof lemma 
signi cant di erence penetrator strand type consider cases 
case ka plaintext key produce case kb plaintext key produce apply proposition private keys explains need assume uncompromised 
initiator guarantees secrecy agreement proof secrecy initiator nonce similar proof just 
proposition suppose 
nsl space bundle initiator strand init height 

uniquely originating 
nodes term fn term fn term 
particular term 
contrast initiator guarantee agreement essentially di erent 
particular requires stronger hypothesis proposition private keys uncompromised 
surprisingly penetrator complete entire exchange activity part 
somewhat surprising penetrator read reply fn substituting di erent reply fn attack prevents proving agreement initiator assuming responder private key uncompromised 
proof approach analogy proposition fails 
prove agreement theorem secrecy lemma 
proposition suppose 
nsl space bundle initiator strand init height 

uniquely originating 
exists responder strand resp height 
proof sketch 
consider set fm fn term non empty contains hs 
contains minimal member lies regular strand show resp nodes lies penetrator strand shown strand trace fn contradicts proposition implies appear form shown node ht 
uniqueness result corresponding easy establish requires assumption propositions give detailed insight conditions needham schroeder lowe protocol achieves authentication secrecy goals 
ideals honesty introduce concept ideal formulate general facts penetrator capabilities 
ideals de nition ideal subset 

fhgk smallest ideal containing denoted 
follows immediately de nition de nition 
de nition smallest ideal containing ideal structure simple proposition 
proof 
property ideal equivalent closure mappings 


fxg union ideals ideal 
ideal contains clearly 
lemma kg 

proof 
induction 
direction clearly ideal contains de nition term simple form alternatively term simple element element form fhgk proposition suppose simple form fhgk 
note may contain term contains subterms encrypted proof 
assume fhgk 
set di erence fhgk clearly contain encrypted outermost key ideal ideal fhgk form clearly satis es join closure condition ideals 
fhgk fh gk axiom free encryption contradiction 
ideal contains contradicts de nition smallest ideal contains proposition suppose simple form fhgk entry point proof similar proof proposition 
proof 
assume fhgk preceding proposition fhgk reason satis es join closure condition ideals 
free encryption fhgk form fh gk ideal contains contradicts de nition 
proposition suppose simple 

proof 
virtue lemma proposition simple case case form fhgk simple 
claim 
consider set fg hg 
freeness assumption ideal contains contradicting minimality 
entry points honesty recall de nition clause node entry point term nodes term shown 
proposition suppose bundle minimal fm term ig entry point proof 
term de nition clause node term violating minimality 
term de nition clause repeatedly contradicting minimality 
de nition set honest relative bundle penetrator node entry point node node 
honest relative penetrator achieve entry lucky guess utters right nonce text lucky node utters right key lucky node 
deduce abilities decrypt encrypt concatenate separate 
bounds penetrator main theorem structure ideals possible cases penetrator strand 
theorem suppose bundle honest 
proof 

may infer set contains encrypted concatenations propositions applied 
suppose penetrator node entry point consider various kinds strands penetrator node occur 
de nition entry point strand kind kind consider remaining cases strand trace hg gi 
proposition contradicting de nition entry point 
strand trace hh gi 
term positive second third node strand ideal property contradicting de nition entry point 
belongs strand trace hk fhgk hi 
assumption entry point ideal property fhgk contradicting de nition entry point 
belongs strand trace hk fhgk assumption fhgk proposition contradicting de nition entry point 
remaining possibilities strand kind kind asserted 
analysis otway rees section corollaries main result 
rst allows conclude situations key originally known penetrator transmitted regular non penetrator node provided entry point 
corollary suppose bundle 
exists node term exists regular node entry point 
proof 
assume regular node entry point 
hypothesis fn term non empty contains minimal element proposition entry point 
regular penetrator node 
theorem implies penetrator node kind kind kind kind proposition special case fkg chosen chosen second corollary gives condition encryption guarantees non penetrator origin 
corollary suppose bundle regular node entry point 
term form originate penetrator strand 
proof 
corollary node term 
suppose originates penetrator strand inspection occur penetrator strand kind consider remaining cases occurs strand trace hk fhgk fhgk proposition implies contradicting de nition entry point 
belongs strand trace hk fhgk hi fhgk contradicting de nition entry point 
illustrate section theorems ideals frequently quite useful protocol correctness assertions particular mold 
fact needham schroeder lowe protocol counterexample 
lemma proved minimal members set fn term fn term regular nodes 
set ideal formed di erence ideals fn term fn crucial authenticating step initiator demonstrates identity respondent private key uncompromised extract emit term containing fn case need able reason entry points di erence ideals 
results ideals prove facts yahalom protocol neuman stubblebine protocol 
corresponding results prove version tmn protocol 
quite widely useful especially reason shared secrets 
otway rees protocol section illustrate machinery ideals honesty applying analyze otway rees protocol 
ab fn ab fn fn fn kab gkas fn kab fn kab gkas message exchange otway rees otway rees protocol protocol roles initiator responder server 
goal protocol authenticate initiator responder mutually distribute session key generated server 
see 
provide mathematical model protocol re ne algebra ways similar section set tname names 
mapping tname intended denote mapping associates principal key shares server 
literature protocol mapping usually written subscripts kas assume mapping 
kas injective 
assume kas protocol symmetric cryptography 
adopt conventions variables remainder section variables range tname variables range variables letters decorated subscripts range tname texts names 
letters range emphasize just variable having reliable connection kas result applying function argument reliably refers long term key shared de nition 
init set strands trace ab fn fn principal associated strand init 
resp de ned value set strands trace abh abh fn fn principal associated strand resp 
serv de ned tname value set strands trace ab fn fn fn fn principal associated strand serv xed server de nition responder traces condition implies originates strand resp 
protocol participant inspect contents enforce condition normal operation protocol ciphertext inaccessible participant 
assuming condition enforced probabilistic mechanism 
nd convenient indicate union indices 
instance resp resp extreme case parameters omit instance init init 
lemma sets serv init resp pairwise disjoint 
proof 
suces prove sets traces disjoint 
originator traces positive term 
second term responder trace width de nition server trace width exactly 
de nition otway rees strand space strand space serv init resp union disjoint lemma observation contains strands form serv init resp 
fix otway rees strand space otway rees secrecy rst prove session keys distributed server disclosed penetrator possesses long term keys run 
show session key occur form encrypted participants long term keys 
theorem suppose bundle tname uniquely originating kas kbs serv serv 
kbs kg node term 
proof 
proposition suces prove stronger statement node term 
corollary suces show regular node entry point 
argue contradiction assume regular node entry point 
entry point de nitions follows term element 
implies keys kas kbs subterm term 
regular node contains key form subterm 
fact keys occur subterms term regular session keys emanating server 
de nition server strands set keys disjoint set keys form follows subterm term 
positive regular node strand term implies 
serv hs case session key 
resp hs case entry point hs preceding negative node 
consider case 
unique origination serv term fn fn proposition 

fn 
fn 
rst impossible de nition second third impossible proposition 
otway rees authentication subsection prove authentication guarantees otway rees provides initiator responder 
possible prove protocol provides authentication guarantees server 
rst import consequence corollary need 
proposition consider bundle 
suppose tname term form tname originate penetrator node proof 
apply corollary check regular node entry point equivalently originate regular node 
key originates regular node session key originating server strand serv 
de nition serv session key long term key may apply corollary term originate regular node 
proposition originates regular strand 
serv 
init tname 
resp tname proof 
de nition originating de nition clause term originates positive 
init hs 
term form ab fn encrypted subterm term fn form 
resp positive nodes hs hs 
encrypted subterms hs plaintext forms respectively encrypted subterm hs form originating 
similar argument holds serv 
corollary suppose regular strand 

fn originates serv serv case term originates node hs originates 
fn originates init term originates node hs originates 
fn originates resp term originates node hs originates proof 
regular serv init resp 
apply proposition 
initiator guarantee theorem asserts bundle contains strand init reasonable assumptions regular strands resp resp serv serv agree initiator responder values 
theorem suppose bundle uniquely originating kas kbs init height regular strands resp resp height 
serv serv height 
proof 
assumption theorem means ab fn fn trace strand kas proposition fn originates regular node corollary node belongs strand serv satis es conditions 
serv serv 
serv serv tname hs serv serv height 
condition holds fn term hs serv 
proposition fn originates regular strand corollary originates strand unique origination serv serv 
proposition fn originates regular node corollary node second strand resp resp 
hs resp follows resp height 
suppose condition holds 
fn subterm term hs serv 
proposition fn originates regular strand corollary originates strand unique origination corollary contradicting assumption 
remarks 
intention protocol design receive fn way prevent penetrator replacing fn garbage 
penetrator prevent output server reaching show height 
responder guarantee responder rest assured bundle contains strand resp familiar assumptions regular strands init init serv serv agree initiator responder values 
proof similar proof theorem 
theorem suppose bundle uniquely originating kas kbs resp height regular strands init init height 
serv serv height 
proof 
assumption proposition means trace contains abh abh fn fn kbs proposition fn originates regular node corollary node belongs strand serv satis es conditions 
serv serv 
serv serv tname hs serv serv height 
condition holds fn hs serv 
proposition fn originates regular strand corollary originates strand unique origination contradicting assumption 
suppose condition holds 
fn hs serv 
proposition fn originates regular strand corollary originates strand unique origination serv serv 
proposition fn originates regular node corollary node belongs strand init init 
init height 
remarks 
previous theorem penetrator behaviors prevented 
instance penetrator take encrypted session key supposed pass throw away 
show initiator strand height 
signi cantly argument clear ban modi cation otway rees section fail shown mao boyd 
modi cation nonce outside encryption 
true condition holds term fm originates regular strand term contain may origination point longer conclude ban modi cation requires weakening theorem longer infer responder server strands agree responder nonce missing guarantee authentication theorems establish expected bundle contains complete initiator responder strands agree session key distributed 
strengthen theorem replacing asterisk obtain resp resp 
strengthen theorem replacing asterisk obtain init init 
reason counterexample bundle illustrated player complete strand agree agree protocol studied carefully past weakness appears explicit literature 
instance ban authors section suggest contrary participants believe single key kab shared key authors comment principal know key known presumably principal knows completed strand 
paulson despite detailed argument comment point 
presumably protocol weakness serious shared keys disclosed 
serves illustrate subtleties remain poorly understood familiar protocols 

ab fn 
ab fn fn 
fn kab gkas fn kab 
fn ab gkas fn ab 
fn kab gkas 
fn ab gkas otway rees weakness mismatched keys discussion developed idea strand spaces proving correctness cryptographic protocols 
developed algebraic machinery notion ideal supplement strand space idea prove general re usable bounds penetrator section 
methods exploit partial orderings subterm relation terms relation nodes 
inductive characteristics orderings formulated notion ideal case element principle case 
closely related paulson inductive approach 
paulson models protocol set rules extending sequence events rules represent actions legitimate participants represent actions penetrator 
sequence events generated rules corresponds roughly bundle 
paulson expresses authentication goals secrecy goals properties sequences prove induction way sequence generated 
general purpose theorem proving system isabelle provides mechanical support reasoning 
contrast approach uses partially ordered structure bundle 
mentioned lemma ect induction principle partial order nodes bundle organized strands 
naturally bundle may linearized event sequence way event sequence determines bundle 
think advantages approach 
bundle contains exactly causally relevant information 
ordering relation nodes causality determined basic relations requires simpli es inductive arguments 
strand captures great deal information 
particular strand may known nodes bundle value originates uniquely 
identify sequence relevant actions participant aids isolating exact agreement properties protocol satis es 
believe results somewhat sharper literature 
strand space framework ways apart simply prove protocol correct 
instance give alternate semantics belief logics applied cryptographic protocols distributed systems broadly contrast usual semantical approaches sequences events states :10.1.1.115.3569
localization notion strand ers help re ne sharpen models 
alternatively results authentication protocols proved strand space context imported usual linear models linearizing bundles 
speci algebraic properties considered elementary 
applied assumptions free encryption restrictive 
suggests approach case message algebras restrictive assumptions 
goals protocols proved variety speci results protocols formalizes protocol goal 
include secrecy results protocols theorems agreement properties needham schroeder lowe theorems otway rees theorems uniqueness result needham schroeder lowe theorem otway rees gives counterexample 
results little di erent 
theorems di er keys uncompromised height corresponding strand 
theorem additional assumption initiator respondent di erent nonces 
despite fact proof methods fairly tightly organized induction lemma bounds penetrator theorems corollaries protocol goals proved hand crafted speci protocol express optimally achieves 
extent variability real fact life extent drawback method 
paragraphs argue secrecy authentication thought single property dictating rigidly formulated theorem proved protocols 
logical form suggests kind theorem considered 
main things learnt protocol analysis exactly theorems kinds true protocol 
secrecy 
kind correctness property protocols secrecy 
means value usually key falls wrong hands 
exactly means particular protocol may vary logical form common 
secrecy theorem stating values set disclosed takes form sentence term write range bundles strands nodes 
hypothesis frequently contains assumptions keys uncompromised frequently contains assumptions values sent received uniquely originating frequently stipulates kind strand initiator strand responder strand 
see really expresses secrecy rst suppose exist bundles containing penetrator nodes emitting antecedent conditional false true 
value disclosed necessary occur unencrypted encrypted keys inverse penetrator obtain 
set includes keys inverse penetrator obtain obtaining value long term penetrator derive term containing value form decrypt 
form secrecy set data values formally di erent corresponding notion discussed section 
notion proposed states set secret received transmitted clear anybody 
formally stronger notion proposed says secret received transmitted anybody 
node term adding penetrator strands construct bundle penetrator node term prefer form explication secrecy matches strong methods developed section proving secrecy results 
expository reasons theorems stated form amount theorems form kb ng respectively 
authentication 
view authentication goal establishes identity principal entity principal 
unfortunately concept authentication vague na say actions may traced back principal period time identity remains unchanged 
authentication properties proved motivated desire shared authors replace na view authentication meaningful concept 
prove authentication property prove bundle contains regular strand height subject assumptions 
shown de ned sequence events performed principal associated regular strand 
result form extract core precise meaning traditional notion entity authentication 
authentication results logical form common 
take form sentence height height hypothesis typically says type strand initiator strand responder strand 
typically contains assumptions certain values uniquely originating certain keys uncompromised 
may assume values distinct theorem theorem 
typically says type strand responder strand initiator strand entails regular 
say data values shared may impose uniqueness asserting strand satisfying previous conditions analyzing authentication guarantee ered protocol means ect determining values yield true instances 
happens speci authentication protocol may complex 
question ask protocol kind authentication talking 
way decide protocol capable achieving goal real world signi cance 
think purpose protocol analysis 

national security agency supported army contract 
integrates contents 
grateful colleagues nsa support encouragement discussions 
shim marion john patiently helped improve presentation 
peter ryan taught great deal eld provided initial impetus doing 
mart abadi anonymous referees useful comments 
mart abadi andrew gordon 
reasoning cryptographic protocols spi calculus 
concur lecture notes computer science pages 
springer verlag july 
mart abadi mark tuttle 
semantics logic authentication 
proceedings th acm symposium principles distributed computing pages august 
michael burrows mart abadi roger needham 
logic authentication 
proceedings royal society series december 
appeared src research report shortened form acm transactions computer systems february 
ulf carlsen 
cryptographic protocol aws 
proceedings th ieee computer security foundations workshop pages 
ieee computer society 
john clark jeremy jacob 
security protocols 
information processing letters november 
dorothy denning sacco 
timestamps key distribution protocols 
communications acm august 
dolev yao 
security public key protocols 
ieee transactions information theory 
shimon oded goldreich adi shamir 
security ping pong protocols implemented rsa 
advances cryptology crypto lncs pages 
springer verlag 
riccardo focardi roberto gorrieri 
compositional security checker tool veri cation information ow security properties 
ieee transactions software engineering september 
joseph halpern 
reasoning knowledge survey 
gabbay hogger robinson editors handbook logic arti cial intelligence logic programming volume pages 
oxford university press 
hoare 
communicating sequential processes 
prentice hall international englewood cli new jersey 
gavin lowe 
attack needham schroeder public key authentication protocol 
information processing letters november 
gavin lowe 
breaking xing needham schroeder public key protocol fdr 
proceeedings tacas volume lecture notes computer science pages 
springer verlag 
gavin lowe 
casper compiler analysis security protocols 
th computer security foundations workshop proceedings pages 
ieee computer society press 
gavin lowe 
authentication speci cations 
th computer security foundations workshop proceedings pages 
ieee computer society press 

honest functions application analysis cryptographic protocols 
proceedings th computer security foundations workshop 
ieee computer society press june 
mao colin boyd 
formal analysis security protocols 
proceedings computer security foundations workshop vi pages 
ieee computer society press 
edmund clarke jha 
model checker authentication protocols 
cathy meadows hilary editors proceedings dimacs workshop design veri cation security protocols 
dimacs rutgers university september 
judy moore 
protocol failures cryptosystems 
proceedings ieee may 
roger needham michael schroeder 
encryption authentication large networks computers 
communications acm december 
patel 
number theoretic attacks secure password schemes 
proceedings ieee symposium security privacy pages 
ieee computer society press may 
paulson 
isabelle generic theorem prover 
number lncs 
springer verlag 
lawrence paulson 
mechanized proofs recursive authentication protocol 
th ieee computer security foundations workshop pages 
ieee computer society press 
lawrence paulson 
proving properties security protocols induction 
th ieee computer security foundations workshop pages 
ieee computer society press 
lawrence paulson 
inductive approach verifying cryptographic protocols 
journal computer security 
report cambridge university computer lab 
roscoe 
intensional speci cations security protocols 
proceedings th ieee computer security foundations workshop pages 
javier thayer jonathan herzog joshua guttman 
honest ideals strand spaces 
proceedings th ieee computer security foundations workshop 
ieee computer society press june 
javier thayer jonathan herzog joshua guttman 
strand space pictures 
lics workshop formal methods security protocols june 
javier thayer jonathan herzog joshua guttman 
strand spaces security protocol correct 
ieee symposium security privacy 
ieee computer society press may 
javier thayer jonathan herzog joshua guttman 
mixing protocols 
proceedings th ieee computer security foundations workshop 
ieee computer society press june 
steve schneider 
verifying authentication protocols csp 
proceedings th ieee computer security foundations workshop pages 
ieee computer society press 
thomas woo simon lam 
verifying authentication protocols methodology example 
proc 
int 
conference network protocols october 

