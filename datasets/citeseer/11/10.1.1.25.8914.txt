convex hull algorithms 
david avis david bremner january convex polytope bounded intersection finite set halfspaces 
classic theorem convexity theory convex polyhedron expressed convex hull set vertices 
closely related computational problems related descriptions polytope 
vertex enumeration problem compute convex hull problem compute polytope verification problem decide vertex description halfspace description define polytope 
problems essentially equivalent point hyperplane duality 
open problem problems solved time polynomial jhj jvj 
describe hard polytopes convex hull algorithms pivoting triangulation insertion algorithms 
simplex method long regarded practical efficient algorithm linear programming seminal klee demonstrated exponential time algorithm 
authors described class hard polytopes cause simplex method exponential number pivots greatest cost coefficient pivoting rule 
subsequent papers gave similar results pivot rules search polynomial pivot rule proof non existence continues 
describe hard polytopes various convex hull algorithms 
dimensional convex polyhedron intersection finite number non redundant halfspaces bounded convex polyhedron called polytope 
classic theorem convexity polytope expressed convex hull extreme points vertices descriptions referred halfspace vertex descriptions respectively 
size polytope denoted size space required store descriptions polytope 
vertex lies affinely independent hyperplanes bounds halfspace set hyperplanes called basis 
polytope simple vertices unique basis 
closely related computational problems concerning descriptions polytope ffl vertex enumeration problem compute ffl convex hull problem compute ffl polytope verification problem decide vertex description halfspace description define polytope 
research supported nserc canada fcar qu ebec 
authors mcgill university school computer science 
email bremner cs mcgill ca open problem problems solved time polynomial size 
problems essentially equivalent point hyperplane duality mainly restrict ourself vertex enumeration problem results apply problems 
main classes algorithms solving problems pivoting algorithms insertion algorithms 
pivoting algorithm vertex enumeration problem begins finding basis vertex bases adjacent differ hyperplane 
adjacency relation defines graph bases edge corresponds pivot replacement exactly hyperplane basis 
vertices graph generated extreme points readily computed 
representatives class gift wrapping algorithm kapur seidel algorithm reverse search algorithm avis fukuda 
simple polytope pivoting algorithms solve problems time polynomial size 
non simple polytopes number bases may exponential size polytopes pivoting algorithms rely perturbation symbolic numerical reduce computation time 
section give fairly general model pivoting algorithms valid perturbation schemes polytopes 
give examples polytopes valid perturbation scheme yield polynomial time pivoting algorithms model 
insertion algorithms vertex enumeration algorithm compute vertex description intersecting defining halfspaces sequentially 
initial simplex constructed subset halfspaces vertices computed 
additional halfspaces introduced sequentially vertex description updated stage 
explicit description algorithm widely known double description method appeared pioneering motzkin overlooked computational geometry community 
ideas rediscovered refined beneath method seidel randomized algorithm clarkson shor derandomized algorithm chazelle 
sense algorithms considered optimal 
upper bound theorem states polytope defined halfspaces size bd bound achieved see 
algorithms solve vertex enumeration problem time bound 
known size omega gamma md bound achieved 
efficient vertex enumeration algorithm polytopes clearly polynomial md known algorithm exists 
examples arisen practice see suggest sizes polytopes interest closer lower bound upper 
wide variation output sizes vertex enumeration problems suggest size appropriate measure problem size 
success insertion algorithms widely believed depend keeping vertex complexity intermediate polytopes generated small possible judicious choice order halfspaces inserted 
necessary success algorithm sufficient 
examples section show insertion algorithms rely triangulation randomized derandomized algorithms perform badly intermediate polytopes small size regardless order insertion halfspaces 
insertion algorithms rely triangulation choice insertion order critical factor 
section give example class polytopes insertion algorithm inserts halfspaces fixed order independent input lexicographic order construct exponential sized intermediate polytopes worst case 
section experimental evidence popular heuristic insertion orders exponential class polynomial insertion order double description method class 
examples hard polytopes sections apply computational models include published convex hull algorithms 
number algorithms implemented various people implementation rarely completely faithful algorithm derived 
reason section give actual computational experience obtained trying solve vertex enumeration convex hull problems hard polytopes 
preliminaries set points called affine combination affine hull set points written aff set affine combinations set called affinely independent affine combination gamma points convex combination affine combination non negative 
proper convex combination positive 
subset called convex set convex combination points convex hull denoted conv set convex combinations relative interior convex set written relint interior affine hull lemma theorem convex set point relint point open line segment contained relint 
lemma theorem convex set point conditions equivalent relint 
distinct exists proper convex combination segment yx extended dimensional convex polyhedron intersection finite number halfspaces bounded convex polyhedron called convex polytope 
halfspace called valid constraint convex polyhedron set halfspaces called non redundant point feasible feasible denote non redundant halfspace description denote vertex description abbreviate dimensional convex polyhedron polytope polyhedron polytope 
polytope containing origin interior vertices defining halfspaces dual polytope vertices am defined intersection halfspaces known easy show vertex enumeration problem identical convex hull problem dual vice versa 
convex polytope point extreme point proper convex combination points set extreme points polyhedron written ext 
supporting halfspace convex polyhedron halfspace bounding hyperplane called supporting hyperplane 
face convex polyhedron intersection supporting hyperplanes abbreviate dimensional face face 
gamma gamma dimensional faces polyhedron called vertices edges ridges facets facet polytope denotes closed halfspace induced aff containing gamma closed halfspace induced aff 
denote interior int 
centroid set points denote point define centroid convex polytope centroid vertices 
observe centroid set points proper convex combination lemma contained relative interior conv 
convex hull set affinely independent points dimensions called simplex lemma theorem vertices simplex determine facet polyhedron hyperplane int point say beneath respectively halfspace induced containing int respectively containing int 
point strictly beneath respectively strictly beneath hyperplane strictly separates points open halfspace defined 
take beneath facet mean beneath aff 
convex hull exactly facet say lemma characterizes structure result facet polytope 
lemma theorem polytope 
point strictly exactly facet strictly beneath facet conv set face holds 
face conv face strictly contained perturbation triangulation pivoting polytope facets vertices 
pivoting algorithm vertex enumeration problem starts basis vertex generates feasible bases bases vertices obtained repetitions non simple 
efficient simple polytopes extremely inefficient polytopes highly degenerate vertices 
worst case may single vertex gamma delta bases 
extreme case highly degenerate polytopes arise practice generating bases impractical 
reduce computation perturbed simple polytope facets vertices hopefully smaller number bases vertices simple polytope computed vertices original polytope obtained 
denote sets bases respectively 
call perturbation valid conditions satisfied 
ii vertex basis contained clear conditions vertices generated follows 
generate list vertices corresponding bases removing duplicates 
simple number bases bd upper bound theorem 
perturbation scheme numerical symbolic general framework describing schemes contained yap 
common numerical perturbation obtained perturbing right hand side vector system halfspaces defining perturbed vector calculations 
simple way transforming perturbed vertices back vertices simply carry extra column original right hand side vector 
pivoted rest constraint matrix play role calculations 
outputting perturbed right hand side corresponding vertex additional column output corresponding vertex duplicates removed line 
practice perturbation extremely useful 
vertices highly degenerate dimensional polytope defined halfspaces computed exact arithmetic reverse search pivoting scheme 
case computing bases original polytope infeasible perturbed polytope bases 
effectiveness perturbation scheme obviously lies ability generate simple polytope vertices possible 
number vertices perturbed polytope natural measure quality perturbation 
measure quality perturbation studied literature 
bound number bases perturbed polytope assumes worst case perturbed dual cyclic polytope 
hand valid perturbation lower bound polytope possible get results 
answer fundamental question possible find perturbation number vertices polynomial size 
positive answer lead polynomial time algorithm problems described section 
unfortunately answer negative 
order see perturbation impossible consider example suggested gunter rote 
convenient consider convex hull problem vertex enumeration problem 
input set vertices dimensional hypercube output list facets 
basis facet full dimensional simplex spanned gamma vertices defining facet 
convex hull problem perturbation applied input points give simplicial polytope polytope facet unique basis 
checked criteria ii valid perturbation dualize condition facets convex hull perturbed point set induce triangulation facets unperturbed hypercube 
duality triangulations perturbations previously observed lee 
note facets hypercube gamma cubes 
known see example triangulation requires omega gamma 
simplices 
size number simplices required triangulate facets super polynomial size 
valid perturbation scheme yields perturbed point set polynomial size 
dualizing argument conclude halfspaces defining cross polytope perturbed simple polytope size polynomial size cross polytope 
pivoting algorithms vertex enumeration problem rely perturbation super polynomial worst case 
argument gives non polynomial lower bound bound just super polynomial 
size number pivots omega gamma log 
polytopes suggested bernd sturmfels give sharper lower bounds 
vector ones denote vector zero position denote simplex spanned vertices gamma gamma gamma gammaw note centroid origin 
construct product theta simplices orthogonal subspaces 
product contains vertices formed concatenating vertex vertex results known polytopes theta vertices facets 
triangulation theta requires exactly gamma delta simplices 
facet theta combinatorially equivalent gamma theta facts obtain result 
theorem polytope theta size valid perturbation yields simple polytope size omega gammaz 
theorem implies solving convex hull problem theta pivoting algorithm perturbation requires generation omega gammaa bases size polytope 
bounds apply insertion algorithms construct triangulations polytope facets polytope randomized derandomized algorithms 
bound apply double description method empirically run polynomial time polytopes 
similar result applies vertex enumeration problem dual theta section illustrate results practice currently available implementations algorithms 
conclude section observe similar argument applied technique frequently suggested dealing degeneracy truncating degenerate vertices 
idea introduce additional halfspace contains interior vertices polytope known degenerate vertex 
vertices truncated polytope enumerated lying cutting hyperplane associated original degenerate vertex 
technique applied line degenerate vertex encountered 
arguments similar show lead polynomial time algorithm 
consider dual convex hull problem 
cutting halfspace addition new point non simplicial facet 
lower bounds triangulation depend volume arguments apply new setting giving super polynomial lower bounds similar 
insertion algorithms intermediate size insertion algorithm vertex enumeration computes vertices jhj gamma intermediate polytopes input set halfspaces 
initially simplex constructed elements succeeding step halfspace chosen insertion order vertices gamma computed 
final output vertices order algorithm polynomial size size intermediate polytopes polynomial size 
section give examples polytope family insertion orders case 
general outline construction follows 
input size construct hard polytope size follows 
start polytope vertex complexity exponential facet complexity polynomial construct polytope 
constraint redundant 
vertex complexity polynomial hard polytope lower bounds result forcing certain insertion orders build entire polytope inserting constraints section derive general conditions true 
section give examples polytope families general conditions hold 
pairs piercing polytopes subsection define set general conditions pair polytopes pair polytopes satisfies conditions size polynomial jv jh 
edges vertices polytope define undirected graph obvious way 
denote graph 
subset vertices polytope denotes subgraph induced lemma polytope vertices halfspace description halfspace 
vh denote int 
graph vh connected 
proof define linear program constraints objective function inward normal vertex vh contained bounding hyperplane correctness simplex method pivot rule see path vertex vh unique optimum vertex simplex method monotonically increases value objective function distance bounding hyperplane path intersect bounding hyperplane entirely contained vh 
polytopes connected component respect maximal subset vertices connected edge vertices intersects connected component properly facet aff strictly separates aff ae relint 
proper intersection polytopes denotes relint relint 
theorem polytopes 
conditions equivalent 
connected component properly facet 
ridge intersects 
point vertex iff proper intersection edge facet proof suppose holds 
facet properly connected component definition ridge contained intersects subset strictly lemma connected 
convexity edge endpoints int gamma intersect follows contained connected component properly facet distinct denote intersection edges affine hull know aff conv ext aff conv argue aff strict separating hyperplane point contained relative interior line segment endpoint endpoint relint 
hyperplane aff strictly separates vertex connectedness edge connecting subset strictly aff subset containing edge intersect relint contradicting fact connected component lemma point relative interior line segment endpoint aff strictly aff strictly aff 
follows aff strictly separates 
suppose holds 
connected component point vertex facet intersected segment vz uniqueness follows 
argue properly argue aff strictly separates lemma vertex strictly aff suppose vertex denote vz convexity relint 
connectedness edge intersects aff intersect denote aff 
convexity xy ae affine hull relative interior completely outside segment xy intersect ridge contradiction vertex strictly vertex strictly vertex strictly aff properly separates argue ae relint 
consider edge exactly endpoint intersects edge intersect aff aff separating hyperplane intersect relint line segment xy ae relint aff relint contradicting 
vertex intersection supporting hyperplanes intersection supporting hyperplanes part ridge contribute hyperplane vertex intersection supporting hyperplanes vertex contribute hyperplane vertex follows vertex proper intersection edge facet suppose edge facet relint relint relint relint vertex order case infeasible impossible ae ae 
prove contrapositive 
suppose ridge non empty intersection vertices vertices proper intersections edges facets conditions theorem hold polytopes say corollary polytope polytope corollary polytope polytope connected component precisely vertex technical lemma useful establishing constraint redundant polytope defined lemma polytope facet convex set 
relint relint aff relint int 
proof point relint relint 
point strictly satisfies constraint follows positive ffl ffl radius ball centered point strictly satisfies constraint point aff strictly beneath seen follows 
point aff strictly beneath case done strictly aff 
suppose lemma exists point proper convex combination implies strictly beneath intersection line segment xz boundary point xz distance ffl 
lemma relint 
convexity strictly beneath aff definition strictly beneath 
follows relint int 
polytope completely polytope facet properly component say completely theorem polytope completely polytope connected component exactly vertex proof facet vertex theorem exists facet aff separates aff ae relint 
facet vertices intersect aff 
denote aff 
suppose relint follows aff supporting hyperplane contradiction 
follows relint relint 
lemma relative interior intersects interior means point strictly satisfies constraint satisfies equality implies redundant 
facet properly connected component argument implies redundant 
truncated cubes give examples polytope families satisfy conditions established section 
start scaled cube construct simplicial polytope vertices gamma facets face final construction intersection show facets gamma vertices 
lower bound argument showing insertion orders insertion algorithm compute vertices wish construct class polytope facet vertex complexity small terms dimension cuts vertices scaled cube class stacked polytopes proof lower bound theorem 
polytope called stacked simplex stacked polytope 
stacked polytope vertices 
denote number dimensional faces polytope known face complexity stacked polytope see 
gamma gammaj delta gamma gamma gammaj delta gamma gamma gamma gamma gamma define polytope convex hull simplex vertices coordinates ij gamma gamma gamma gamma gamma gamma pyramid vertices coordinates ij ae gamma 
rest section order simplify analysis assume 
show stacked polytope 
dimension define simplex vertices points affinely independent simplex lemma vertices define facet 
simplex facet contain kinds facets contain contain 
analogy dimensional case call vertices spine vertices faces contain spine vertices vertical faces 
observe coordinate coordinate sums coordinate sums gamma 
follows centroid vertical facet coordinate equal gammad gamma coordinate 
similarly centroid origin 
centroid proper convex combination origin interior polytope origin interior halfspace representation wx supporting halfspace facet vertices wx solution aw matrix row equal supporting halfspace simplex facet matrix form gamma gamma gammad gamma delta delta delta gammad gamma gammad gamma gamma gamma delta delta delta gammad gamma 
gamma 
gammad gamma gamma gamma gammad gamma gammad gamma gammad gamma gamma gamma gammad gamma gammad gamma gammad gamma gammad gamma gammad gamma gammad gamma gamma computing particular facets general observations linear combinations simplex vertices 
refer row containing vertex row ffl vertical facet contains spine vertices subtract row row obtain ffl vertical facet add row row obtain gamma gammad ffl consider rows corresponding non spine vertices subtracting row row get consider vertical facet contains simplex vertex entry column gammad gamma column sums zero gammad combining fact int get gamma consider facet goes non spine simplex vertex contained combining row gamma gamma gamma similarly facet goes gammaw gammad gamma gamma gamma stack vertices centroid vertical face 
lift vertices distance facet normal facet 
pyramid vertices th coordinate ij ae gamma 
define sequence polytopes gamma defined convex hull gamma gamma 
lemma facet facet convex hull pyramid vertex gamma face vertical face call pyramid facets 
gamma face gamma simplex pyramid facet adjacent contains vertices 
ki denote pyramid facet adjacent containing solve equations pyramid facets solving ki ki equal matrix formed vertices ki rows 
consider cases vertical pyramid faces contain non vertical pyramid faces contain solve immediately coordinate pyramid vertices zero 
pyramid facet ki gamma vertical pyramid facets combining get kj gamma non vertical pyramid facets combining get gamma gamma theta yields gamma similar argument yields kd gamma gamma lemma stacked polytope vertices gamma facets halfspace description kj gamma kd gamma gamma gamma gamma gamma gamma gamma proof consider sequence polytopes gamma defined 
order gamma stacked polytope gamma gamma 
pyramid vertex definition vertical facet facet gamma facet pyramid facet ij pyramid vertex beneath ij kj ki ae gamma 
vertex beneath kd kj gamma ki 
similar substitutions show beneath simplex facet consider intersection stacked polytope scaled cube 
denote dimensional parallelepiped defined constraints 
gamma gamma gamma gamma denote shows theorem gamma gamma gamma gamma order prove theorem establish lemmas show completely connected component consists precisely vertex part theorem follow corollary part follow theorem 
lemma vertex exists facet facet exists vertex aff strictly separates proof consider classes vertices show vertices type strictly separated rest vertices affine hull facet pyramid vertex violates constraint pyramid vertex coordinate equal strictly satisfies smallest value simplex vertex coordinate gammad gamma strictly satisfies simplex vertex violates constraint pyramid vertex simplex vertex negative th coordinate strictly satisfies vertex violates vertex non positive th coordinate strictly satisfies vertex violates vertex nonnegative th coordinate strictly satisfies observe constraint occurred cases facet separates vertex lemma facet aff ae relint 
facet consider gamma polytope aff show constraint corresponding valid constraint strictly dominates point satisfies strictly satisfies fact positive linear combination constraints convex polyhedron valid constraint furthermore ae positive combination constraints valid constraint facet scaled gamma cube 
facets adjacent facet orthogonal may take projected constraints facet precisely constraints adjacent 
adjacent constraints facet induced facet induced cases type facet 
consider facet separates single pyramid vertex vertices lemma 
projecting pyramid constraint kj hyperplane gamma obtain gamma strictly dominates positive summing projecting bounding obtain gamma strictly dominates constraint positive combining gamma gamma gamma strictly dominates symmetric argument gamma strictly dominates 
consider facet separates single simplex vertex vertices show strictly dominated summing valid constraint valid constraint facet summing constraint gamma substituting value gamma obtain bound gamma strictly dominates positive obtain bounds substitute bounding 
gamma gamma gamma strictly dominate positive remains show dominated 
summing ji gamma gamma mean jd substituting obtain gamma gamma gamma gamma gamma gamma bound dominates 
consider facets cut single spine vertex symmetry need consider cutting summing vertical pyramid constraints kj adjacent obtain gamma gamma substituting obtain gamma dx recalling facet created cutting gamma gamma dx gamma strictly dominates positive obtain corresponding upper bound substitute obtain gamma bounding value gamma tighter positive values known insertion orders insertion algorithms 
insert halfspaces reverse order 
insert halfspaces reverse lexicographic order coefficient vector 
variations reasonably reduce constraint matrix canonical form question treat right hand side vector 
assume input constraints taken right hand side entry treated significant digit coefficient vector modelled program cdd 
random insert halfspaces random order 
insert halfspace causes maximum minimum number vertices extreme rays infeasible 
previous experiments see shown unique orders works problems 
theorem polytope size insertion algorithm enumerate vertices creates intermediate polytopes size omega gammaz worst case halfspaces inserted order independent input lexicographic order 
proof case order ignores input trivial adversary force insertion algorithm construct entire cube 
fool lexicographic ordering adversary merely scale constraints appropriately 
just klee examples apply particular pivoting order theorem applies particular insertion orders 
empirically polynomial insertion order truncated cubes see section 
interesting open question polytope polynomial insertion order 
experimental results convex hull vertex enumeration programs cdd qhull qrs 
cdd version fukuda implementation double description method local modifications add timing facilities optimize set operations 
qhull barber implementation beneath algorithm version :10.1.1.117.405
qrs avis implementation reverse search edmonds pivoting version 
compiled qhull double precision 
cdd uses double precision default qrs uses arbitrary precision rational arithmetic 
option force qhull merge generated simplicial facets 
times measured user cpu seconds 
products simplices table shows results computing convex hull theta products simplices described section 
column simplices contains number simplices necessary triangulate facets polytope 
qhull exhaustive search starting simplex 
cdd default insertion order 
shows times cdd shows times qrs qhull 
truncated cubes qhull tested insertion orders cdd random 
simulate random insertion order permuted input times combined random number generator reported average time 
data files cube constraints come results section tell expect exponential performance 
scaled order scales cube constraints lexicographically larger stacked polytope constraints uses 
table gives summary results 
shows timings builds stacked polytope dimensions 
shows timing results insertion orders cdd qhull 
cpu time input size products simplices cdd products simplices cdd 
cpu time input size products simplices simplices qhull qrs products simplices qrs qhull 
vertices facets size simplices times cpu seconds perturbed cdd qhull qrs bases qrs virtual memory usage exceeded available megabytes 
table running times convex hull theta product simplices 
timings dec alpha memory running osf 
note insertion orders monotonically increasing bounded experiments theta gamma theta size insertion orders tested 
order away dependence timing experiments particular machine considered machine dependant measures performance 
number basic high level operations performed cdd second size intermediate polytopes generated 
cdd represents face polytope set facets containing checking vertices adjacency involves intersections facet sets representing vertices 
table report number set intersections performed measure cdd performs updating edges 
measure done double description method maximum size intermediate polytope 
table shows maximum number extreme rays intermediate polytope cdd lifts polytope homogeneous cone higher dimension 
measure approximation cdd reports rays generated 
authors minnesota geometry center software packages qhull fukuda cdd 
gunter rote bernd sturmfels suggesting examples section luc devroye pointers random number generators jesus useful discussions 
times cpu seconds size scaled random qhull virtual memory usage exceeded available megabytes 
experiment progress 
table timing results truncated cubes 
timings sgi indigo xs memory swap running irix 
scaled progress table set intersection operations performed cdd truncated cubes scaled ray counts printed 
experiment progress 
table measured maximum intermediate sizes number extreme rays cdd truncated cubes 
input size truncated cubes cpu time truncated cubes insertion order 
cpu time input size truncated cubes random qhull truncated cubes qhull cdd host internet address directory files cdd ftp epfl ch incoming dma cdd tar gz qhull geom umn edu pub software qhull tar qrs mutt cs mcgill ca pub qrs products simplices mutt cs mcgill ca pub ext prod ver ver truncated cubes mutt cs mcgill ca pub ine trunc trunc ine table availability software data anonymous ftp 
availability software data software data files described available anonymous ftp 
see table details 
avis fukuda 
pivoting algorithm convex hulls vertex enumeration arrangements polyhedra 
discrete comput 
geom 
bradford barber david dobkin hannu :10.1.1.117.405
quickhull algorithm convex hull 
technical report geometry center university minnesota july 

convex polytopes 
springer verlag 
avis fukuda 
ground states ternary lattice model nearest nearest neighbor interactions 
physical review 
kapur 
algorithm convex polytopes 
acm 
chazelle 
optimal convex hull algorithm fixed dimension 
discrete comput 
geom 
chv atal 
linear programming 
freeman new york ny 
clarkson shor 
algorithms pairs convex hulls optimal randomized incremental 
proc 
th annu 
acm sympos 
comput 
geom pages 
fukuda 
cdd manual version 
epfl lausanne switzerland 
gel fand kapranov 
discriminants multidimensional determinants 
mathematics theory applications 
birkhauser boston 

convex polytopes 
wiley new york ny 

simple relatively efficient triangulation cube 
discrete comput 
geom pages 
klee 
simplex method 
editor pages 
academic press 

efficient portable combined random number generators 
communications acm 

structural properties classes combined random number generators 
mathematics computation 
carl lee 
regular convex polytopes 
victor klee festschrift volume dimacs series discrete mathematics theoretical computer science pages 

motzkin raiffa thompson 
double description method 
kuhn tucker editors contributions theory games ii volume annals math 
studies pages 
princeton university press 
seidel 
convex hull algorithm optimal point sets dimensions 
technical report university british columbia dept computer science 
seidel 
constructing higher dimensional convex hulls logarithmic cost face 
proc 
th annu 
acm sympos 
theory comput pages 
yap 
symbolic treatment geometric 
symbolic computation 

