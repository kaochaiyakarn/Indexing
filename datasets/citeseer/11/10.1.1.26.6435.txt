amalthaea information filtering discovery multiagent evolving system moukas bachelor science business administration american college greece athens greece master science artificial intelligence university edinburgh edinburgh scotland submitted program media arts sciences school architecture planning partial fulfillment requirements degree master science media technology massachusetts institute technology june massachusetts institute technology rights reserved moukas program media arts sciences november pattie maes associate professor program media arts sciences thesis advisor stephen benton chair departmental committee graduate students program media arts sciences author certified accepted amalthaea information filtering discovery multiagent evolving system moukas submitted program media arts sciences school architecture planning may partial fulfillment requirements degree master science media technology massachusetts institute technology agents semi intelligent programs assist user performing repetitive time consuming tasks 
information discovery information filtering suitable domains applying agent technology 
amalthaea evolving multiagent ecosystem personalized filtering discovery monitoring information sites 
amalthaea primary application domain worldwide web main purpose assist users finding interesting information 
ideas drawn field autonomous agents artificial life combined creation evolving ecosystem composed competing cooperating agents 
evolution model information filtering agents adapt various user interests information discovery agents monitor adapt various line information sources analyzed 
market ecosystem agents evolve compete collaborate agents useful user agents reproduce low performing agents destroyed 
thesis advisor pattie maes associate professor program media arts sciences amalthaea information filtering discovery multiagent evolving system moukas richard belew associate professor computer science engineering university california san diego dellarocas assistant professor information technology mit sloan school management katia sycara associate professor robotics robotics institute carnegie mellon university thesis reader thesis reader thesis reader amalthaea information filtering discovery evolving multiagent system thesis dedicated am grateful getting interested science important teaching think 
family supported decisions helped life 
academic advisor research supervisor 
pattie maes assistance guidance 
pattie great motivator steered feasible interesting research questions supported idea 
thesis readers rik belew katia sycara chris dellarocas providing valuable feedback able cope somewhat strict deadlines direct result procrastination 
hard working ronald demon java graphics interface design server scripts projects possible 
members current past agents group usually 
fun persons bruce blumberg anthony chavez christie davidson foner rob guttman mike johnson akira henry lieberman david nelson minar karen brad rhodes juan alan wexelblat 
friends members kb underground cam pus organizations making sure take semester necessary complete research 
needed coping write thesis 
acknowledgments amalthaea information filtering discovery evolving multiagent system amalthaea information filtering discovery evolving multiagent system chapter thesis overview 

problem domain 
techniques 
user experience 
research contributions results 
thesis outline 
chapter motivation issues related 
motivation 
key issues terms definitions 
information filtering 
information retrieval 
user modeling 
software agents 
evolutionary techniques 
multiagent systems 
related software agent systems 
chapter functionality amalthaea 

configuration 
monitoring sites 
digest 
bootstrapping amalthaea 
visualization user profile 
client server communication 
chapter architecture 
overview 
www documents representation 
evolution multiagent system 
table contents amalthaea information filtering discovery evolving multiagent system information filtering agents ifas 
information discovery agents idas 
ecosystem 
interaction ifas idas 
chapter implementation issues 
overview 
www server java cgi scripts design 
typical operation cycle 
file formats 
vectorized html files 
web discovery files 
results files 
user interface related files 
issues security privacy 
sockets encryption layer 
way encryption ifas 
place ifas user side 
chapter testing evaluation 
testing evaluation techniques 
experiments virtual users 
virtual profile evolution time 
ratio filtering agents user interests 
experiments real users 
evaluation criteria 
results 
chapter concluding remarks 

amalthaea information filtering discovery evolving multiagent system expert configuration mode 
monitoring sites window 
user digest recommended sites 
overview architecture 
information filtering agent genotype phenotype 
information discovery agent genotype phenotype 
typical user 
gray directories created processed modules white ones java modules 
system converging user interests change smoothly 
changing suddenly user interests evaluation amalthaea performance user profile 
changing suddenly user interests evaluation amalthaea performance user profile 
evaluation system performance user providing feedback random time intervals mean generations 
filtering agents user interests 
system fitness vs number user interest clusters vs number agents 
distribution rating values user feedback data set 
error distribution data set 
plot mean absolute error time 
precision rate time 
list figures amalthaea information filtering discovery evolving multiagent system chapter thesis overview section chapter problem domain techniques analyzed 
research contribution section outline thesis 
problem domain domain focus personalized information filtering information discovery 
introduce amalthaea personalized system proactively tries discover information various distributed sources may interest user presents form digest 
amalthaea learns user interests examining hotlist browsing history getting feedback form ratings documents usually universal resource location strings urls 
system autonomously collects related documents urls 
considers domains parallel world wide web documents data discovery 
amalthaea search www launches multiple agents utilize existing indexing engines perform meta search order discover information broadly interest user 
system analyzes retrieved documents weighted keyword vectors techniques order select closer user preferences 
continuous flow information environments information filtering 
multiple agents analyzing articles select proper ones 
case pro actively searching web amalthaea filters stream incoming documents clarinet news reuters 
monitoring frequently changing information resources 
user wants monitor certain urls updated fixed random intervals 
instance wants know new formula motor chapter thesis overview races results updated sunday 
user wants track new articles line journal new cds artist 
urls monitored regular intervals changes 
changes exist significant user notified 
amalthaea operation require presence attention user 
information user form digest new urls interesting news personalized notification new material certain sites 
user browses digest able follow links gives feedback bad item rates relevance item keyword idea system adapts user follows interests evolve time 
techniques implemented amalthaea creating artificial ecosystem evolving agents cooperate compete limited resources environment 
general species agents exist information filtering agents information discovery id agents 
information filtering agents responsible personalization system keeping track adapting interests user 
information discovery agents responsible handling information resources adapting information sources finding fetching actual information user interested 
trained discovery agents better specifying search engines returning kind documents 
evolving multiagent solution particularly suited domain provides way utilizing best possible existing solution problem case best possible match user interests ability quickly adapt new situations instance new user interest adapting changes domain 
time system continues explore search space better solutions evolution techniques mutation crossover refreshing specializing agents population 
significant done applying artificial intelligence techniques information filtering 
contrast inspired artificial life approach resulting fully distributed learning representation mechanisms 
order understand system global behavior filtering think information filtering agent specialized filter applied narrow sector domain 
user changes interests filters assigned old interests eventually destroyed new ones created directed new interests evolution natural selection 
intriguing issue multiagent systems find ways 
evolution obviously method adaptation multiagent system 
techniques agents learn life time 
example techniques induction case reasoning name yield promising results 
chapter thesis overview allowing system reach self imposed equilibria continuously adapting new user interests 
order evaluate performance agent established notion ecosystem operates basis simple economic model agents useful user agents get positive credit bad performers get negative credit 
credit agent better stands chances destroyed 
amalthaea uses agent evolutionary architecture 
system adapting evolving number agents trying bring closer user interests individual learning single agent level 
major components system include user interface browser java enables communication user application information filtering agents request broad categories documents similar user profile information discovery agents mentioned requests query various search engine get relevant sites fetch contents sites 
evolution mechanisms applied populations spiders retrieve actual documents sites returned search engines text processing vectorization mechanisms retrieved document produce keyword vector credit allocation mechanisms convert rating user give system recommendations credit 
consequently mechanisms distribute credit filtering discovery agents responsible presenting digest item database urls retrieved articles stored order duplicate recommendations user 
terms filtering discovery difficult coexist single system literature tends see opposites 
documents discovered retrieved amalthaea population agents perform filtering 
system functioning edges scale time 
agent pro activeness vs user querying user initiating action axis amalthaea positioned close pro activeness side system bootstrapped user autonomously collects interesting articles running background 
system presents information user explicitly asking formulating query 
user experience chapter thesis overview user experience amalthaea tool pin points interesting sites presents users digest documents interest 
amalthaea acquires user interests different ways 
users submit bookmark list favorite sites documents provide starting point system 
submit browser history files system identify patterns behavior visiting web site regular time intervals select pre trained packages agents package focuses particular topic instance european soccer greece agents research speed amalthaea learning 
specify specific interests training system relevant documents 
information system search engines find similar documents 
amalthaea recommend documents user keep improving receiving forms feedback direct user rates specific document indirect system sees time user spends inside web page computes factor page 
users monitor amalthaea operation visualization system state visited urls adjust behavior accordingly 
research contributions results research goals investigate artificial life techniques application information discovery filtering introduce evolution agents ecosystem explore relationships populations 
explore learning mechanisms individual agents emerging property system 
apply evolutionary techniques information filtering discovery 
provide ways expressing user state multi agent systems visualization project produced prototype called amalthaea 
order validate effectiveness amalthaea show system evolutionary algorithms converging ecosystem properly designed able reach equilibria points users system provided useful suggestions 
initial set experiments performed focused setting initial set primitives parameters evolution economic model 
thesis outline chapter thesis overview stable platform experimentations established focused fine tuning properties evolutionary algorithms mutation crossover cloning credit distribution flow different components system information filtering agents information discovery agents 
consequently performed real time iterative experiments building external system extracted profiles different users giving automatic feedback amalthaea 
experiments allowed understand system dealing real user profiles deduce optimal ratio information filtering agents discovery agents 
final experiments involved actual user interaction system measured effectiveness system perceived users terms measuring error system recommendations rate error decreased system adapted user precision system recommending relevant documents 
significant parts published international conferences journals moukas moukas moukas 
thesis outline chapter contains overview thesis 
chapter begins discussion motivation introduces key research issues terms definitions 
describes main research topics amalthaea information filtering discovery user modeling agent evolutionary architectures 
focus chapter state art technology project discuss similar agent systems 
chapter discusses functionality amalthaea user interface user builds profile configures fine tunes uses system 
different aspects user interface details various subcomponents digest presentation new filtering agents generation monitoring sites browser control 
description bootstrapping procedure followed discussions ways visualizing multiagent systems secure client server communication schemes 
chapter extensively describes system relationships sub components document discovery engine information filtering agents information discovery agents interactions economic model methods 
chapter concludes synopsis credit assignment information flow amalthaea 
chapter explains detail implementation techniques 
introduces different components amalthaea input output mechanisms software engineering point view 
furthermore discusses thesis outline chapter thesis overview certain security privacy considerations design system 
try reveal possible privacy attack methods offer suggestions different encryption architecture solutions 
chapter devoted testing evaluation 
introduce main categories evaluation techniques virtual users real users 
virtual users utilize profiles real users interests evolve time 
allow perform iterations data set 
real user experiments set people system certain time period 
chapter contains concluding remarks 
introduces limitations drawbacks amalthaea identifies possible areas 
thesis wraps drawn progress research summary 
chapter motivation issues related chapter begins discussion motivation introduces key research issues terms definitions 
describes main research topics amalthaea information filtering discovery user modeling agent architectures 
goal chapter state art technology project discuss similar agent systems 
motivation exponential increase computer systems interconnected line networks resulted corresponding exponential increase amount information available line 
information distributed heterogeneous sources unstructured continuously changing case world wide web 
difficult users cope amounts information new tools software agents need devised assist dealing information overload 
agents semi intelligent computer programs increasingly assist handling repetitive time consuming tasks 
order agents real help user learn user interests habits machine learning techniques maintain competence adapting changing interests user time exploring new domains may interest user 
witnessing paradigm shift human computer interaction direct manipulation computer systems indirect management agents play key role maes 
search engines sites indices available people interested finding information particular topic 
order formulate query search engine needs know searching 
furthermore search engines usually return tons information query formulated carefully 
indices yahoo contain links interesting pages rated humans usually familiar categorization ontology index order easily find information needs 
top hundreds sites getting added day average user time inclination find contain interest 
key issues terms definitions chapter motivation issues related see need pro active query driven system operate background user digest sites agent thinks interest user 
want system usable majority users require permanent internet connection 
response system called amalthaea 
system user interface html java 
system pro active non intrusive 
runs continuously remote server user presents results possible time 
key issues terms definitions spans different research fields information filtering information discovery retrieval user modeling evolution multi agent systems 
researchers fields different terms refer concepts 
chapter try identify key issues define key terms information filtering retrieval systems appear similar try return useful relevant information users 
filtering systems try fulfill long term user goals retrieval systems usually focus time queries 
user modeling describes effort create profiles define interests individual users profiles variety tasks 
agents semi intelligent proactive computer programs help users cope repetitive tasks deal information overload 
terminology influenced bottom artificial life approach build amalthaea 
members scientific community disagree terminology 
take instance relationships information filtering discovery agents may disagree terms cooperation collaboration implies active desire cooperate formal exchange information kqml labrou finin instance 
bottom biologically inspired approach term collaboration refer form symbiosis 
general interpreting terms depends lot field approaches agents 
information filtering information filtering systems usually share characteristics belkin croft involve large incoming streams data primarily deal unstructured semi structured textual data sort predefined filter information filtering chapter motivation issues related objective prune data match filter locate data information filtering systems categorized different axes technology architecture filtering data location operation relative information source user way find information sources way represent different user profiles 
different architectures proposed building effective efficient filtering systems 
classified broad categories content filtering system processes document tries extract useful information content 
techniques content filtering vary greatly complexity 
keyword search simplest techniques involves matching different combinations keywords boolean form 
newsweeder system lang designed filtering usenet newsgroups 
system developed media lab early system 
statistical keyword analysis represents advanced form filtering words removed document rest words stemmed vectorized weight significance 
introduced smart system late early salton form representation popular 
advanced form filtering extract ing semantic information documents contents 
achieved techniques associative networks keywords sentence riordan sorensen directed graphs words form sentences exploration semantic meaning words tools wordnet lexical system miller 
social collaborative economic filtering system utilizes feedback ratings different users filter irrelevant infor mation 
systems attempt analyze understand contents documents impressions users reading create index document 
index global computed user fly users similar interests documents liked people priority documents disliked 
economic filtering augments idea cost benefit analysis behalf user 
takes consideration parameters price document cost transmission source user case intranets making decisions filter 
systems approaches include lens malone grouplens resnik lashkari ringo shardanand maes :10.1.1.30.6583
location operate relative user data source information filtering systems divided broad categories systems located source information systems located user information retrieval chapter motivation issues related machine assume systems filtering information point inbetween user source belong category 
approaches advantages disadvantages 
server side filtering approaches main advantage minimization network traffic non relevant articles filtered reaching user 
hand server system requires users send profiles centralized place update limitations privacy considerations design decision carries 
filtering systems described active passive methods employ finding information 
passive systems filter information stream active ones stream try find relevant information external database www 
mentioned user profile representation methods different systems vary 
smart keyword vector representations keyword search rules neural networks genetic algorithms popular 
information retrieval appear similar filtering systems information retrieval ir systems inherently different characteristics belkin croft information retrieval usually deals static databases information opposed dynamic streams filtering 
information retrieval systems usually query opposed driven filtering systems 
information retrieval focuses single interactions user system assumes query system reached goal short term goals 
information filtering assumes different approach interaction user system tries identify long term goals span multiple interactions 
information retrieval mainly focuses static organized structured databases information retrieval systems divided major categories systems vector space systems probabilistic systems salton buckley salton 
boolean systems keywords phrases combined boolean operators form queries 
systems called exact match systems exact match needed textual elements query contents database elements retrieved 
vector space model uses multi dimensional vectors composed keywords weights represent queries retrieved text 
advan user modeling chapter motivation issues related vector space models boolean systems retrieved documents ranked relevance 
probabilistic models try analyze statistical distribution terms database identify relevant non relevant items inference network models bayesian networks 
user modeling user modeling defined effort create profile user habits employ profile order improve human computer interaction 
user modeling systems differ ways acquire represent user profile 
profiles acquired generated variety ways direct user interviews knowledge engineers user stereotypes collection interests shared users belong specific group 
instance stereotype computer science users include subcategory programming profile 
machine learning techniques inference induction modeler tries identify certain patterns user behavior 
profile building example user provides examples behavior modeling software records 
rule profiles user specify rules profile rules control behavior model certain trigger conditions 
mentioned methods advantages disadvantages general successful try analyze information just keyword level contextual semantic level 
user profiles represented wide range techniques simple keyword files artificial intelligence representations 
representational formats include keyword profiles rule profiles vector representations collections keywords weights neural networkbased representations usually associative backpropagation networks 
useful note typical user multiple overlapping interests 
categories interests stereotype user profiles fine grained user select categories order build profile 
user interviews time consuming users fail properly identify categories interests cost profile maintenance high 
machine learning techniques generating maintaining user profiles information filtering applications therefor compelling 
software agents chapter motivation issues related software agents presently computer science artificial intelligence literature term agent overwhelming 
system performs function described black box labeled agent 
getting increasingly difficult draw line different systems clearly define agent 
agent systems best viewed direction software headed 
opinion agent systems set different characteristics pro active act direct command behalf user personalized acquire user interests adapt evolve time persistent run continuously save state user see agent stable entity develop trust relationship agent 
general agent multi agent systems amalthaea trying solve old ai problem just tools assist human capabilities lead world augmented intelligence maes 
evolutionary techniques adaptation computer systems evolution proposed john holland limited framework holland full blown form holland 
evolutionary techniques evolve program code search optimal solution programming problem koza 
evolve collections parameters code uses instance neural network evolution general optimization problems evolutionary systems draw paradigms biology apply computer science usually refer populations computational entities compete 
optimization adaptation result macroscopic behavior system individual learning members population 
evolution coexist systems individual entities exhibit sort learning belew mitchell 
amalthaea falls category 
multiagent systems multi agent systems provide collaborative way solving complex problems multiple agents 
multiagent systems differ axes complexity ranging completely reactive cellular automata agents complex ones homogeneity agents identical terms programming related software agent systems chapter motivation issues related process different data similar simd massive parallel architecture programming paradigm completely different agents communication actively communicating changes environments communication means learning individual agents plastic learning component static 
multiagent systems telecommunication network switching load balancing chavez robotic communication group behavior mataric moukas hayes industrial process management electronic marketplaces chavez maes 
related software agent systems metacrawler etzioni agent operates higher abstraction level utilizing existing www index search engines 
metacrawler example parasite agent index documents provides common interface number search engines 
user posts query metacrawler forwards search engines collects results returns unified list 
easy extend approach higher level abstraction agents filter information consult agents discover information turn consult search engines index information 
creating processing levels actual information user allow greater flexibility utilizing novel forms filtering forms discovery 
etzioni referring information food chain advocating metacrawler information carnivore high information food source etzioni 
www product 
directed line search indexing 
enables user generate queries search www line presents results time 
multiagent system decker lesser developed umass amherst built top cig uses centralized planner generate sub goals pursued group cooperating agents kqml labrou finin standardized language inter agent communication negotiation 
comparable system raise grosof developed ibm 
raise rule system provides framework knowledge reuse different domains electronic mail newsgroups riordan sorensen developed university cork introduces idea associative networks keywords information retrieval 
cmu retsina project sycara sycara decker defines framework distributed intelligent agents 
framework applied organizational decision making system sycara financial investment management warren system 
introduces task specific information specific agents deployed different levels collaborate provide information requested user 
category www agents includes carnegie mellon university webwatcher armstrong mit media laboratory letizia related software agent systems chapter motivation issues related lieberman 
agents designed assist user provide personalization user browses www 
perform breadth search links ahead provide navigation recommendations 
similar terms application domain representation system built stanford balabanovic shoham 
introduced system www document filtering utilized weighted keyword vector representation 
terms evolutionary filtering systems newt sheth maes developed media lab multiagent system uses evolution relevance feedback information filtering 
newt application domain structured newsgroups documents clarinet system able adapt successfully dynamic environment 
main difference newt amalthaea apart application domain newt employed kind agents specialized information filters system introduces different types agents base relationships simple market model 
arachnid project menczer university california san diego combine evolutionary techniques idea endogenous fitness create scalable distributed information retrieval system 
analysis text fitness internet ecological framework done mit media lab lsi techniques best 
chapter functionality amalthaea chapter discusses functionality amalthaea user interface user builds profile configures fine tunes uses system 
different aspects user interface details various digest presentation new filtering agents generation monitoring sites browser control 
description bootstrapping procedure followed discussions ways visualizing multi agent systems secure client server communication schemes 
core system operations runs centralized amalthaea server 
server contains various filtering discovery agents user preferences information sites user visited 
user point view amalthaea controlled graphical interface amalthaea user interface aui runs computer 
aui built sun java language 
user connects amalthaea server aui brought screen java window separate browser 
amalthaea interface continuously running user connected system 
aui user receive lists www sites interest give feedback configure visualize state system 
aui composed different parts correspond different functions system 
configuration user able alter basic parameters amalthaea visualize state 
basic parameters configured modes 
low level mode expert allows manipulation variables evolution mutation crossover rates number filtering discovery agents system way collaborate 
higher level mode suitable users provides higher level abstractions mentioned lowlevel parameters 
abstractions include configuration settings quick learning vs slow learning fast adaptation vs stable inter configuration chapter functionality amalthaea ests tune low level variables way enable system learn faster accuracy breadth slower accurate 
instance evolution rate system lower slow learning setting quick learning setting 
default values mentioned configuration settings assigned system performing set small scale experiments evolution parameters 
configuration part aui user able view current state system terms fitness agents evolution time form plot 
user tailor amalthaea need modifying parameters number documents system retrieve ifas filtering amount documents ifa user 
snapshot aui configuration window 
expert configuration mode monitoring sites chapter functionality amalthaea monitoring sites user specify certain sites updated certain time intervals monitored amalthaea 
user enter information site checked wants monitoring include urls contained site depth 
configurable options include parameters user notified notify site changed 
new url added deleted site 
site changed cer tain percentage 
way function amalthaea acts active bookmarks 
monitoring sites window digest part aui system presents recommendations user gives feedback 
recommended urls organized sections section contains documents retrieved certain cluster information filtering agents displayed digest chapter functionality amalthaea small part actual contents site confidence level system url 
user click urls aui opens browser specific url 
check site select rating suggestion aui running separate window outside browser 
rating going user feedback system 
user digest recommended sites 
lower left hand side rating window higher number interesting recommendation lower right hand side visualization information filtering agents 
entry digest contains url recommended site title bytes contents ifa ida suggesting item confidence suggestion 
right half browser system displays sites www pages recommended ifa previous digests 
bootstrapping amalthaea chapter functionality amalthaea user feedback system allocate credit information filtering agents responsible selecting document 
scale feedback mechanism available user 
rating means suggested site bad rating means site excellent 
user chooses explicit form feedback system tries infer page indirect way 
javascript process running browser checks time user spends link big contents link time user machine idle time browser window focus computes indirect feedback rating 
basic idea mechanism user doesn specific site won stay long rest parameters instance idle time computer way check possible caveats user going lunch directly entered bad web page 
user pick number keywords document vector best describe document weights keywords reinforced 
user option get information specific recommendation clicking details button digest 
provides additional data previous suggestions information filtering agent suggestions lower scores didn digest bootstrapping amalthaea amalthaea bootstrapped generation number information filtering agents equal number discovery agents 
generation information filtering agents somewhat relevant user interests 
done ways user submits list favorite bookmarks documents 
usually bookmarks list 
sites list examined site information filtering agent created information process refer section 
amalthaea checks user browser history files 
browsers netscape instance keep history file mbytes large contains urls user visited system analyses information tries infer certain patterns order decide monitor sites 
users point amalthaea specific page possibly browsing request generation agents find similar information 
case contents page retrieved new information filtering agent created 

history file helpful case amalthaea recommends sites user specific site amalthaea recommends site changed user visit 
system crc check files ensure 
visualization user profile chapter functionality amalthaea users select pre trained packages agents package focuses particular topic instance european soccer greece agents research method speeds learning curve system significantly 
methods explain generation information filtering agents 
information discovery agents generated random assignment www indexing engines agent 
information discovery agent contains information amount keywords provided discovery agents filtering agents queries queries formulated terms logical operators keywords instance query formed computers computers different search engines different ways formulating queries allow different operators 
depending engine assigned discovery agent correct set operators 
visualization user profile order user develop sense trust system understand agent system initiatives important performed certain action 
usually accomplished having user inspect state system set conditions action 
quite easy centralized top system rule system memory reasoning system task difficult system amalthaea 
common problem multiagent systems bottom complex systems instance neural networks lack ability easily express state users 
mainly case behavior result set rules outcome dynamic interaction different agents 
amalthaea dealing problem visualizing populations agents space 
coordinates agent calculated formulae denotes information filtering agent keywords vector number keywords 
variable defined cos sin client server communication chapter functionality amalthaea ji weight th keyword th information filtering agent 
user able browse personal information landscape see system thinks interests 
visualization window initially brought basic clusters agents seen labeled prevailing word shared elements agents 
instance landscape contain clusters labeled greece agents motor racing 
user close particular cluster sees details cluster including individual cluster elements information filtering agents 
system amalthaea trust developed different system levels micro single agent macro system cluster level 
aim users develop trust cluster level user able identify distinct clusters behavior understand clusters relevant consistent recommendations 
believe developing sense trust single agent level difficult sufficient thought user see links specific agent retrieved rated agent system identification single id number helpful 
trust system level developed easier user trusts individual clusters necessary sufficient condition dynamics system important snap shot state time 
component visualization applet enables user see system perception changed time 
amalthaea saves snapshots state certain time intervals 
user play back user interests space snapshots form movie observe initial bootstrap conditions systems clusters grew larger times shrunk trends 
efforts visualize information retrieval results include method introduced bartell organizes retrieval term phrase weights perimeter circle 
client server communication aui standard socket communication amalthaea server 
java aui starts running creates socket connection server sends encrypted form id password user 
server responds sending back information collected user time logged aui presents accordingly 
amalthaea supports users continuous dial connections network 
modules system aware distinction act accordingly 
instance site monitored changes user logged system information popup window 
logged information stored time client server communication chapter functionality amalthaea connects system sent email 
true presentation suggested sites 
updated continuously form digests user time logs system 
users direct continuous connection internet amalthaea follows background running approach 
aui running corner user screen continuously displaying updating information 
user interested information acts accordingly just ignores system 
chapter architecture chapter describes system detail relationships sub components document discovery engine information filtering agents information discovery agents interactions economic model methods 
chapter concludes synopsis credit assignment information flow amalthaea 
overview amalthaea architecture assigns user information filtering information discovery agents generates closed ecosystem 
persons system files separate interaction different users place system 
components system discussed chapter operate single user 
handling multiple users system just uses multiple instances components 
mentioned section amalthaea composed parts illustrated user interface described previous chapter user retrieved information gives feedback relevance 
distinct types agents information filtering agents information discovery agents mechanisms support credit allocation evolution engine retrieving documents www 
engine processes documents performs stemming weighting operations order generate keyword vectors 
database retrieved documents urls 
www documents representation chapter architecture overview architecture user digest sites amalthaea 
provides feed back rating sites included digest 
user ratings credit assigned related filtering discovery agents 
www documents representation sources information system accessed world wide web ftp news gopher connections 
initial engine document retrieval www organization library frystyk lie 
amalthaea latest version engine java application 
slight performance loss java language handling outside connections efficient portable 
top engine library built normalizing urls stored retrieved database 

information mean documents various sources www pages gopher sites ftp sites www information services newsgroups information discovery agents distributed information sources www java interface user interests clusters discover monitor flow information filtering agents feedback credit documents information filtered closed economy digest credit keyword extractor database www documents representation chapter architecture retrieved urls kept database form weighted keyword vectors 
accompanied html checksum enables discovery agents know specific url changed visited case monitored site 
separate list links contained url generated user defined depth currently assist monitoring certain sites act starting points internet exploration instance list agents related sites 
database keeping track urls included previous digests prevent presentation duplicate information user 
amalthaea internal representation documents standard information retrieval technique called weighted vector representation salton buckley 
basic representation information filtering agents parsed html files weighted keyword vector 
html files processed clear text version generated text decomposed keywords weighted compose keyword vector explained 
document similarity ifa selection documents weighted keyword vector operation 
html source code url retrieved parser application removes markup language tags title document hypertext links contains saves data processing 
original text consequently processed order identify rank important words contains 
example evolution sentence different parts vector generator original text agents running objects attitude words common english language removed text 
word removal sentence agents running objects attitude remaining words stemmed suffixes removed leaving just roots 
stemmer algorithm modified version introduced porter see porter agent run object keywords survive stemming process recorded form mx matrix number keywords 
column matrix stores keywords alphabetical order second column stores frequency document 
keywords title submitted www page url page assigned weight equal urls html document weight equal half frequency document 

set iterated experiments revealed optimal value processing pool html documents evolution multiagent system chapter architecture keyword weighted producing tfidf measure 
tfidf acronym stands term frequency times inverse document frequency standard information retrieval weighting mechanism frequency keyword current document term frequency header constant idf formally defined total number documents retrieved system df document frequency term idf frequency keyword collection documents document frequency 
case collection documents set weighted keyword vectors internal representation retrieved documents 
header constant equals keyword document body text 
hand keyword part title weight multiplied constant greater 
way title keywords weight plain body keywords process creation vector completed augmenting weighted vector additional fields canonical url document server author 
method www documents represented space 
evolution multiagent system evolution agents controlled elements individual fitness fitness system 
fitness measures agents described section 
variable number top ranked best performers population allowed produce offspring 
rank agent solely fitness 
number agents allowed produce offspring linearly related number agents purged poor performance low fitness 
numbers constant related fitness system 
fitness diminishing evolution rate increased search quicker adaptation user new interests 
fitness increasing evolution kept lower rate allow system slowly explore search space better solutions 
new agents created copying cloning crossover mutation see mitchell 
operators applied evolvable part agents genotype 
part agents phenotype contains information evolved usually instructions handle evolvable part 
copying operator takes best performing agents creates idf idf df log information filtering agents ifas chapter architecture agents 
point crossover operator agents returns new agents inherit part keyword vectors parents 
operator randomly selects points keyword vector exchanges fields parents lie points creating new agents 
sake project distinction genotypes phenotypes discussed sections quite narrow 
usually complex development process occurs deriving phenotype genotype belew 
case individual learning adaptation individual agents resulting point phenotypic search space 
genotypes point crossover operator formally defined algorithm returns crossover points works follows new genotypes inherit part keyword vectors parents lies numbers 
variable represents weighted keyword 
mutation operator conjunction cloning crossover 
mutation operator takes genotype agent argument creates new agent randomly modified version parent 
weights mutated keywords modified randomly new mutated keyword randomly selected keyword agent belongs cluster retrieved highly rated document 
information filtering agents ifas information filtering agent augmented keyword vector major part genotype 
keyword vectors assess similarity documents match information filtering agent particular document 
vectors augmented information author document possible rand sizeof rand sizeof andp sizeof andp sizeof information filtering agents ifas chapter architecture created user explicitly 
long term interest field boolean parameter activated indicating documents proposed agent treated favorably 
genotype information filtering agents essentially weighted keyword vector 
phenotype agents contains non evolvable part agent fitness long term interest field course commands enable agents exchange information system essentially phenotype resembles fixed template filled genotype information executed 
visualizes relation genotype phenotype information filtering agents information filtering agent genotype phenotype information filtering agents documents information discovery agents described 
act masks allow documents close weighted keyword vectors pass 
filtering agent selects document closest vector calculates confident specific document interest user 
decentralized approach agent believes perfect model part user interests document matches vector completely agent confidence 
order information filtering agent assess similarity www page compare genotype vector representation text inside page 
mentioned document represented multi dimensional vector vector different dimension 
order document comparison clustering feasible project vector multidimensional space includes keywords collection information filtering agents 
dimensionality expanded adding additional keywords setting weight zero 

exchange information simple considered communication agent entities higher cognitive level 
weight keyword weight keyword weight keyword genotype fitness creation execution code phenotype date user created 
information filtering agents ifas chapter architecture documents compared similarity evaluate cosine angle vectors representing information filtering agents 
done evaluating dot product vectors dividing product magnitudes 
formula returns distance keyword weighed vectors mentioned previous section documents introduced filtering agents digest 
system decides agent going user ranking proposed documents formula confidence level document number fitness filtering agent proposed document 
top documents selected ranked list user definable number indicates amount items user interested including digest 
file format information filtering agents text 
ifa unique id creation date fitness genotype contains weighted keywords coordinates agent space discussed chapter number times agent invoked user user gave feedback 
format files amalthaea ifa ifa creation date march est ifa fitness ifa keywords bear ifa coords ifa invoked ifa ifa ifa ifa ak bk ak bk ifa information discovery agents idas chapter architecture information discovery agents idas information filtering agent issues requests standing orders long term commands information discovery agents type documents interested finding 
discovery agents select contract want take 
information discovery agent genotype phenotype information discovery agent genotype contains information keywords utilize querying www indexing engines canonical url engine information source contacts 
aim create diverse body agents allow different types documents discovered different search engines 
information discovery agents monitoring sites operate bit differently discovery agents specializing www specializing steady information flow 
search engine mediator visit directly site interest analyze document discover changed database urls stored 
distinct characteristics information discovery agents include search alternative information sources remote computers parasitic sense utilizing existing www search engines find information dig type meta search idas receive credits directly user indirectly information filtering agents employ 
information discovery agents responsible spawning spiders post queries various internet search engines collect results information filtering agents requested 
number spiders concurrently post process queries configurable user 
current implementation running spiders time 
depending search engine uses spider uses different query types 
case means ing keywords genotype fitness creation execution code phenotype date transact 
history search engine number keywords hits maximum hits minimum information discovery agents idas chapter architecture ing engines keyword combination abilities instance altavista near query operator lycos spider forms query parameters appends engine stemmed words 
number hits returned query greater parameter spider re posts query fewer keywords reaches level hits requested discovery agent 
link visited user proposed considered 
remaining links spider fetches html contents processes saves separate files consideration related ifa 
information discovery agents unique id number 
parameters part genotype evolved search engine searching relevant information number keywords submit initial query method boolean near range urls expect answer variable greater 
variables history transactions information filtering agents fitness evolved 
format idas table amalthaea ida ida creation date march est amalthaea ida ida fitness ida ida ida ida ida history ida history transactions table finite size record form ifa id total credit number transactions 
ifa id int credit float transactions int information discovery agents select information filtering agents requests fulfill 
implementation point view happening way information filtering agents requests placed table 
information discovery agent selects request request erased table 
information discovery agents refer history logs check information filtering agents profitable doing business posted requests 
proceeds preferred filtering agent checks 
request selected 
system proceeds information discovery agent ecosystem chapter architecture information filtering agents requests fulfilled usually ida serves ifa 
information discovery agents abovementioned method time 
time selection random order system explore search space identify potential new interesting matches 
information discovery agent gets pick information filtering agent selected different ways randomly best fitness worst fitness 
methods advantages disadvantages 
ecosystem interactions filtering agents discovery agents control global behavior system 
technique inspired approach called market control 
clearwater put market control paradigm controlling complex systems difficult control maintain expand clearwater 
form control views system miniature economy 
trying yield desirable global behavior complex system basis agents acting local information 
agents compose ecosystem operate penalty reward strategy supported notion credit assigned indirectly user system performance 
user giving feedback suitability item digest 
system relates feedback filtering agent proposed item discovery agent retrieved assigns credit 
credit serves fitness function populations evolved separately 
higher fitness agent chances gets survive produce offspring 
user feedback positive information filtering agent proposed item awarded amount credit directly related proposal confidence level 
agent confident user item proposes receives positive credit confident 
hand confident document interest user feedback negative receives lot negative credit bad fitness 
information filtering agents pay fixed percentage amount credits receive information discovery agents outputs 
evident filtering agents able digest 
documents proposed agents ranked confidence level top selected user 
agents items usually represent top population fitness wise 
rest population diversity purposes 
notice information filtering agent doesn user credit remain constant 
order accelerate destruction non competent agents evolution new ones introduced linear decay function seen type rent interaction ifas idas chapter architecture 
order agents inhabit ecosystem pay 
credits gain exceed rent live 
removed new ones created 
agents propose document receive penalty order discourage increase diversity population 
information filtering agents receive ratings directly user depending performance 
turn assign credit information discovery agents helped locate retrieve information rated user 
information filtering agents evolution particularity population evolved filtering agents compete inside cluster 
ifas belong cluster greece evolved computer science ifas yielded better performance terms user feedback merely interest system create niches agents inside niches keep best ifas 
size clusters result feedback user members 
number agents purged system cycle fixed amount positive feedback user giving system 
negative feedback current digest higher average past digests user definable parameter percentage purged agents increases 
hand positive feedback number decreases 
best case scenario positive feedback percentage population purged order explore search space possible new user interests 
sample requests information flow amalthaea goes follows filtering agents send requests documents discovery agents form keyword vector 
discovery agents select filtering agent request phenotype try retrieve relevant documents utilizing www indexing engine assigned 
discovery agent presents filtering agent set retrieved documents filtering agent selects ones best match keyword vector 
number filtering agents include selected documents user digest fitness confidence documents 
user rates documents digest giving feedback system 
interaction ifas idas system behavior depends lot way filtering discovery agents interact 
mentioned filtering agents impose commands discovery agents 
post requests population discovery agents 
individual discovery agents choose interaction ifas idas chapter architecture requests experience 
phenotype discovery agents includes history transactions different filtering agents filtering agents performed transactions user gave positive feedback items discovered filtered result transaction cooperation 
depending history ida creates credit sorted ranked list filtering agents worked try get contracts highest ranked ones maximize fitness 
way discovery agents filtering agents best serve www indexing engine combination keywords query 
number discovery agents smaller number filtering agents discovery agent fulfills request filtering agent goes selects request available 
order achieve better exploration vs exploitation ratio match different filtering discovery agents filtering agents requests served discovery agent 
filtering agents closer user interests tend gather credit typical document presentation 
interest discovery agents select filtering agent bring credit 
interesting issue order discovery agents pick filtering agent request 
different methods exist try selection 
discovery agent credit selects request filtering agent choice 
second method random selection random discovery agent picked allowed select request process continues discovery agents selected restarts 
third method inverse rank selection enforce diversity keep balance population discovery agent credit selected allowed pick request favorite filtering agent 
chapter implementation issues chapter explains implementation techniques detail 
introduces different sections amalthaea input output mecha nisms software engineering point view 
furthermore discusses certain security privacy considerations design system 
try reveal possible privacy attack methods offer suggestions different encryption architecture solutions 
overview amalthaea written ansi java 
versions code running standard unix boxes gnu compiler sunsoft java software development kit sdk 
latest implementation compiled microsoft visual microsoft visual windows nt system 
decided switch windows environment better multithreaded support java virtual machine multi processor system dual server 
part amalthaea deals primarily handling various parts agent ecosystem information filtering discovery agents generated populations evolved credit distribution mechanisms management simple economy ecosystem vector generation routines 
general code needed fast efficient written 
java segment java stand application applet code deals chiefly network access related tasks multithreaded spiders open url connections fetch information parasite spiders pose queries major search engines html parsing routines extract title information internal external links 
second java segment applet fetched user browser reads digest re configures system 
main advantage java applets design amalthaea portability language offers virtual machine 
www server java cgi scripts design chapter implementation issues www server java cgi scripts design amalthaea html server backbone microsoft iis server combination java script files handle user interaction 
user opens main amalthaea homepage create account log system 
scripts authenticates user password comparing provided data stored amalthaea database 
provided correct user select course action variety options digest presentation new agent creation system configuration scripts provide services user real time 
scripts generate overview descriptions filtering discovery agents operations user view slow connectivity situations 
instance scripts summarizes actions contents information filtering discovery agents single compressed file downloaded applet running remote computer user slow network connection 
file contains compact version information filtering discovery agents landscape 
typical operation cycle amalthaea saves various user specific files information filtering discovery agents incoming html files text vectors text format easily integrated different agent applications british telecom currently integrating amalthaea prototypes radar crabtree 
description different modules system interact files uses typical operation cycle system follows typical user 
gray directories created processed modules white ones java modules 
file formats chapter implementation issues check interface user requests create new agents bootstrapping system explicitly asking 
get list urls fetch files place directory new ifa 
check directory new ifa box see files box 
create keyword vector generate new agents directory ifas box 
new agent filenames form ifa ifa box create array contains top keywords weights selected ifas 
history idas select appropriate ida ifa 
note idas fewer ifas ida gets select ifa request 
save results file txt box 
read file txt idas directory 
entry get keywords ida id create thread goes related search engine enters query fetches urls returned documents 
url create thread fetch contents 
create ida output directory agent id number called store documents ida output file txt 
box read ida output directories create vector files documents store vector directory ida output vector file vec 
box compare vectors related ifas get top matches file called results dat box 
read file results txt box construct digest appropriate directory 
digest contains lines document 
user feedback generate feedback file feedback dat contains user reactions suggestions read file feedback dat update weights agents 
file formats amalthaea uses different file templates store state 
section gives overview important possible bootstrapping variable values 
vectorized html files fetched spider processed content url saved format amalthaea url www media mit edu amalthaea title mit media laboratory amalthaea body file formats chapter implementation issues click people sponsors research academic programs information amalthaea urls agents www media mit edu ftp 
amalthaea fitness amalthaea eof web discovery files information discovery agents choose information filtering agents requests fulfill generate file amalthaea spiders fetching information 
file contains ifa ida ids keywords need searched 
data needed spawn actual spiders query search engines provided ida files instance engine keywords 
amalthaea ifa id ida id keyword keyword keyword amalthaea results files information filtering agent spiders save number files instructed retrieve information discovery agents 
information filtering agent selects prominent site new file created contains information needed generation new user digest 
top files best match vector respective agent selected 
urls saved file similarity quantity ifa document 
resulting file called results txt amalthaea results ifa id ida id url title similarity confidence ifa id ida id url title similarity confidence amalthaea results user interface related files html code digest created final results file described previous subsection 
user digest html code generated way contains information actual user details suggested items proper credit assigned information filtering discovery agents 
summary file information filtering agents generated user file updated 
file collection basic information ifa visualization purposes 
user requests visual map state system difficult raw data ifas mainly size 
summary file contains just agent id creation date fitness keywords coordinates representation agent 
dat file generated way read ifa files user ifas directory 
issues security privacy chapter implementation issues file create object stores information agent 
store objects vector 
enumerate objects generate summary file 
entry summary file format creation date fitness keywords coord coord issues security privacy general order agent serve user better know aspects interests user willing share people interests user aware 
situation brings forward privacy issues design agents assist users 
discuss privacy issues relate current implementation amalthaea 
amalthaea designed way allow maximum design flexibility terms components run 
right java environment imposes certain limitations capabilities user interface runs user machine 
limitations directly affect amalthaea java security java applet downloaded remote machine write data local machine communicate originator machine network 
implementation chose aui communicate amalthaea server store information 
second speed language lack thereof java interpreted consequently quite slow 
number improvements worked designers compilation virtual machine code machine native code right running amalthaea system java run aui user side infeasible speed wise 
current security provisions java lower security standards amalthaea current implementation system user profiles information filtering agents stored centralized place amalthaea server 
method encompasses security problems affect privacy user 
different categories security problems arise network security sensitive information user may passed network easily obtained third party 
server security case compromised security server part malicious administrator outside attack rarer consequences happens severe 
ways address problems amalthaea range simple additions communication protocol support encryption issues security privacy chapter implementation issues complete re distribution components system server user side 
sockets encryption layer simple modification add encryption layer socket communication model client server 
way clear text information going transmitted open channel 
way encryption ifas new filtering agents generated encrypt genotypes oneway encryption techniques 
case vectors encrypted compared filtering agents 
security system compromised filtering agents difficult 
place ifas user side change architecture system 
moving ifas centralized server completely distributed system user run ifa agents machine system doesn single point attack security failure 
evident modifications mutually exclusive parallel provide maximum security 
moving distributed version system placing ifas java applet running user machine 
apart enhancement security system change assist scalability amalthaea computational requirements server great centralized version 
amalthaea design completely modular minimal changes code needed implement move 
addition implementing encryption methods mentioned security amalthaea server local machines 
chapter testing evaluation chapter devoted testing evaluation 
introduce main categories evaluation techniques virtual users real users 
virtual users utilize profiles real users interests evolve time 
allow perform iterations data set 
real user experiments set people system certain time period 
testing evaluation techniques experiments conducted validate hypotheses thesis developed axes 
group experiments focused testing ability system evolve stabilize equilibria positions optimal distribution agents 
experiments notion virtual users profiles created real user interests automatically tested provided feedback system 
virtual users enabled perform big scale experiments people 
second axis worked testing performance system real users 
tested system find useful information www users 
group people data interaction system measure quantities mean absolute error agent suggestions user feedback standard deviation correlation coefficient amalthaea predictions actual user ratings 
important aspect testing phase select set metrics evaluating performance system 
metrics combine user satisfaction system reported users experiments virtual users chapter testing evaluation experiments system recorded user feedback recommendations 
experiments virtual users order provide objective consistent evaluation system performance fixed points external factors influencing system performance user interests results queries posted www indexing engines 
compiled different user profiles different interests collected number html pages 
user profiles form number different keyword weighted vectors 
compared items created filtering agents digest profiles provided positive negative feedback similarity 
depending feedback agents received amount credit added existing credit 
items agents presenting user profiles selected fixed collection html documents arranged different directories resemble different search engines 
local documents provided quick response time importantly constant frame evaluating system 
virtual profile evolution time purpose set experiments evaluate ability system reach stable equilibria conditions adapt slowly changing user interests 
experiments random set user interests created 
interests static changing rate system iteration 
performed different sets runs consisting trials averaging randomness genetic operators 
visualizes mean value fitness credit agents set 
difference sets initial user profiles 
curve lowest fitness credit indicates average fitness agents system second curve represents average fitness agents documents user digest 
curves exhibit general behavior expected curve represents fitness agents smoother 
number generations high initial user profiles random regular users bookmark list bootstrap system 
results demonstrate system able converge starting different random initial populations 
experiments virtual users chapter testing evaluation system converging user interests change smoothly 
top group lines represents average fitness ifas digest items user bottom group represents average fitness ifas 
system able increase fitness regardless different starting points user profiles 
second set experiments introduced sudden changes interests virtual users 
random time intervals bin change user profile 
configured system way alter user profile mean standard deviation average change half user profile interests randomly 
random changes necessary order test system able adapt abrupt changes equilibrium position 
shows system able follow abrupt changes user interests sudden decrease fitness negative feedback receiving big percentage user interests changed able quickly adapt changes retrieving documents interest user 
shows technique applied different user profile 
generations system performance constant user interests experiments virtual users chapter testing evaluation changing suddenly user interests evaluation amalthaea performance user profile 
top group lines represents average fitness ifas digest items user bottom group represents average fitness ifas 
third set experiments involving virtual users evalua tion system performance user giving feedback system iteration sporadic fashion 
tried evolving system number steps user feedback 
result random interval mean steps seen 
fitness curves agents smooth previous figures result irregular user feedback 
results show user system evolve frequently background direct feedback 
sets experiments show amalthaea learn user interests adapt time evolve set different user scenarios different agents configurations 
vs presenters fitness generations fitness experiments virtual users chapter testing evaluation changing suddenly user interests evaluation amalthaea performance user profile 
top group lines represents average fitness ifas digest items user bottom group represents average fitness ifas 
vs presenters fitness generations fitness experiments virtual users chapter testing evaluation evaluation system performance user providing feedback random time intervals mean generations 
top group lines represents average fitness ifas digest items user bottom group represents average fitness ifas 
ratio filtering agents user interests extensive experiments performed relations number filtering agents number user interests fitness presenting filtering agents system 
tried identify different behaviors system ratio user interests filtering agents varies 
compiled different user profiles data actual users clustered generated filtering agents groups keyword vector similarity 
defini tion interest varies narrow focused radius defines cluster centroid cluster quite small resulting interest cluster contains agents wide spread radius greater contains large number agents 
set radius equal value gave best results number preliminary test runs 
system performance occasional user feedback user feedback generations experiments virtual users chapter testing evaluation shows different number user interest clusters effects performance system 
notice non linear increase performance system number interest clusters dropping 
notice bookmark list method works interests clusters 
clusters system reaches performance just total generations 
filtering agents user interests number filtering agents system remains constant number user interest clusters varying 
lines top bottom represent interest clusters respectively 
performance system number interest clusters equal 
deterioration performance interests number cases 
experiment conducted order assess performance system number interests users increased corresponding increase number agents 
varying interests 
agents generations fitness experiments virtual users chapter testing evaluation illustrates overview experiments 
results verify facts agents better performance system ii number interest clusters affect fitness expects case greater user interest clusters iii flattening performance curve agents 
probably diversity population need enforced large numbers agents 
system fitness vs number user interest clusters vs number agents 
value displayed data point maximum generations 
number user interest vectors cluster totaling vectors 
quite user interests time 
note number agents small number interest clusters large greater results satisfactory 
number agents increases fitness rises significantly 
interest clusters filtering agents fitness varying interests agents experiments real users chapter testing evaluation experiments real users validating assumption multiagent system reach equilibria points adapt user interests regardless degree changing performed set experiments involved set users 
experimentation methods closely follow introduced newt research projects sheth maes lashkari media lab 
goals research project produce useful system utilized frequently internet users 
experiments assess positive negative feedback users important part evaluation process 
group people test system 
testers set instructions submit bookmark lists system manually generate agents instructions interact system 
parameter tuning space amalthaea big number agents mutation rates crossover rates cloning rates tests conducted fixed set parameters time computational resources limitations 
evaluation criteria evaluation criteria set experiments similar lashkari 
assuming set 
represents dence rating agents recommendations set 
user feedback system suggestions define error set 


measured quantities mean absolute error 
smaller error better performance system 
standard deviation error 
quantity measures consistency algorithm performance data set 
smaller standard deviation better algorithm 
standard deviation error defined experiments real users chapter testing evaluation correlation coefficient 
higher correlation agent confidence prediction user rating better algorithm hill extreme values 
lashkari shardanand maes assert confidence agents extreme values weighted values indicate strong user preferences probably important values :10.1.1.30.6583
ability system maintain low absolute mean error standard deviation high correlation coefficient regular extreme confidence values important 
precision percentage articles user relevant 
precision standard performance measuring quantity information retrieval community 
distribution rating values user feedback data set 
axis denotes number documents users participated experiment rated axis denotes sum ratings user gave document 
covariance rating distribution user feedback experiments real users chapter testing evaluation results testing period logging behavior system users feedback order perform analysis experiments 
shows distribution user feedback scale bad excellent 
axis measures feedback scale axis number occurrences 
general users gave positive feedback system negative 
users disliked recommendation preferred give absolute negative rating somewhat negative response 
error distribution data set 
axis expresses number errors range 
distribution gaussian form 
shows distribution error data set 
error distribution gaussian form couple high peaks 
feature error distribution usually high peak negative error error distribution experiments real users chapter testing evaluation axis 
shows system error distribution concentrated 
depicts evolution feedback users provided system time 
scatter plot axis represents number times users provided feedback system axis represents error 
line represents squares fit data set 
experiments absolute error quite high 
time passed users provided feedback system evolved error dropped nearly 
experiments users provided positive negative feedback response system performance lot variations 
system performance increased user ratings improved lot positive 
plot mean absolute error time 
number feedback instances users increases system providing better recommendations 
user feedback instances mean error evolution time experiments real users chapter testing evaluation table summarizes performance system metrics introduced section 
mean absolute error users experi ment roughly scale 
average agent recommendation rating points user actual interest percentage scale translated error 
standard deviation absolute error correlation agents recommendations user interests expressed feedback 
mean error extreme values ratings slightly higher approximately 
standard deviation exhibits increasing behavior 
correlation mean error user interests increases case extreme values 
precision rate time 
table mean absolute error values extreme values mean absolute error standard deviation correlation coeff 
precision amalthaea time user feedback instances experiments real users chapter testing evaluation set standard performance measures information retrieval system precision recall 
precision defined percentage retrieved articles relevant recall percentage relevant articles retrieved 
case world wide web constitutes document collection compute recall performance system 
order compute progress precision rate system time counted relevant documents users gave rating 
results displayed show precision system increasing time passes amalthaea modelling users better 
precision useful measurement comparison pur poses draw system performance compute recall quantity 
information retrieval systems precision improves expense recall 
case recall computed believe mean error better quantitative method evaluating ability system perform better time takes consideration agents confidence proposing document 
experiments performed real users suggest amalthaea useful tool serves everyday information needs users 
performance system improving time 
compared www filtering systems different filtering techniques performance amalthaea proved 
media laboratory project lashkari www filtering system uses automated collaborative filtering techniques 
underlying technology different similar assessment methods amalthaea enable compare performance systems 
mean absolute error ranged algorithms correlation coefficient ranged algorithms 
performance amalthaea evolutionary content filtering system comparable collaborative filtering system uses users intelligence provide recommendations 
experiments concluded distribution set questionnaires users system fill experiments 
questionnaire users interaction system divided categories 
general performance evaluation evaluation agents issues adaptation system interface issues communication system ease trust issues privacy concerns authority delegation experiments real users chapter testing evaluation testers choose different options answering questions fair bad don know 
duration experiment quite small majority testers felt general sense performance system recommended articles relevancy 
feelings mixed tester asked adaptation system people responded don know 
far ui concerned reviewers agreed 
furthermore testers agreed privacy model claimed easily delegate authority agents system 
surprising relatively low risk terms damage occur user task amalthaea 
critical application agent manages personal automatic payments users reluctant delegate authority agents 
experiments real users chapter testing evaluation chapter concluding remarks chapter contains concluding remarks 
identifies possible areas 
thesis wraps drawn progress research summary 
thesis discussed idea evolving populations agents personalized information filtering discovery 
particular introduced idea integrating different populations agents information filtering agents information discovery agents ecosystem 
different populations competed cooperated ecosystem worked way equilibria points 
shown evolving multiagent system converge loci stable useful users 
architecture built working system amalthaea provides users personalized information world wide web 
amalthaea agents service users agents run reproduce survive agents removed population 
experiments conducted suggested ecosystem amalthaea reach stable equilibria states varying suddenly changing user interests real users testing phase showed system useful users error rate predictions goes precision rate predictions goes receiving user feedback 
progress project touched interesting research questions need investigation 
system equilibria issue central success amalthaea different types equilibria defined overnight equilibrium refers balanced system state system presents digest articles user 
longer term equilibrium refers re adaptation system user interests sudden change interests 
types equilibria chapter concluding remarks emerge user learns subject area speed area interests changing reflected changing documents 
belew issue trust user agent important quite difficult multiagent setting express state system user able show system performed certain action 
enhancements user interface order support capabilities described 
visualization solution offering greatly enhanced variety ways self organizing topographical maps kohonen 
idea network composed nodes store multi dimensional weight vectors 
multidimensional vector network node weight vector closest vector updated gets bit closer vector 
certain node areas attract similar vectors sections map labelled vector type attract providing way expressing state system 
ui enhancement evolution users interests time 
user interests playback mechanism described chapter augmented graphs flow information segmented country domain 
type visualization enable user see drawing information information flow patterns forming changing compared interests 
discussed privacy concerns centralized storage users profiles briefly mentioned ways deploying distributed version system placing ifas user side 
distributed version advantages keeping user profiles trusted machine reducing load server require minimal communication user machine server form dat file 
distributed version implemented requirement non continuous internet connection user dials opens digest browser new commands uploaded server 
way amalthaea accesses search engines right quite indirect formulates queries keywords search engines return related sites keywords 
search engines provided api directly querying databases amalthaea able pinpoint documents greater accuracy utilize term weights eigenvectors engines opaque outside observer 
case engines term weights assess similarity need fetch document network comparison done directly data search engine 
information discovery systems exhibit called serendipity problem reading newspaper people read articles interest think asking read 
amalthaea architecture problem partly addressed inherent randomness evolution process 
amalthaea content chapter concluding remarks system combined collaborative filtering system lashkari system offer recommendations novel subjects part original ifas repertoire 
chapter concluding remarks amalthaea information filtering discovery evolving multiagent system armstrong freitag joachims mitchell 

webwatcher learning apprentice world wide web 
proceedings symposium information gathering heterogeneous distributed environments 
aaai press 


competitive agents information filtering 
communications acm 
balabanovic shoham 

learning information retrieval agents experiments automated web browsing 
aaai technical report ss proceedings aaai spring symposium series 
bartell cottrell belew 

automatic combination multiple ranked retrieval systems 
proceedings sigir conference 
belew 

evolution learning culture computational metaphors adaptive algorithms 
uc san diego technical report cs 
belew 

personal communication 
belew mitchell 

adaptive individuals evolving populations 
addison wesley 
belkin croft 

information filtering retrieval 
communications acm 
best 

ecologies population fitness net 
submitted journal artificial life 
chavez maes 

kasbah agent marketplace buying selling goods 
proceedings international conference practical application intelligent agents multiagent technology paam london 
chavez moukas maes 

challenger multiagent system distributed resource allocation 
proceedings international conference autonomous agents los angeles 


personalized news system 
proceedings nd international workshop community net 
ieee press 
clearwater 

comparative developmental approach understanding imitation 
clearwater editor market control paradigm distributed resource allocation 
amalthaea information filtering discovery evolving multiagent system crabtree 

personal communication 
decker lesser 

architecture multi agent cooperative information gathering 
cikm conference workshop intelligent information agents 
decker sycara williamson 

designing behaviors information agents 
proceedings international conference autonomous agents los angeles 
etzioni 

results metacrawler 
varela bourgine editors proceedings fourth www conference 
mit press 
etzioni 

moving information food chain deploying softbots www 
proceedings aaai 
aaai press 
frystyk lie 

uniform library common code 
proceedings second www conference 
grosof 

reusable architecture embedding rule intelligence 
cikm conference workshop intelligent information agents 
hill stead furnas 

recommending evaluating choices virtual community 
proceedings chi denver holland 

outline logical theory adaptive systems 
jacm 
holland 

adaption natural artificial systems 
university michigan press 
kohonen 

self organization associative memory 
springer verlag berlin 
koza 

genetic programming 
mit press 
labrou finin 

semantics approach kqml general purpose communication language software agents 
proceedings conference information knowledge management 
acm press 
lang 

newsweeder 
proceedings th international conference machine learning 
lashkari 


master thesis mit media laboratory 
lieberman 

letizia agent assists web browsing 
proceedings ijcai 
aaai press 
amalthaea information filtering discovery evolving multiagent system maes 

agents reduce information overload 
communications acm 
maes 

personal communication 
malone turbak cohen 

intelligent information sharing sytems 
communications acm 
mataric 

designing emergent behaviors local interactions collective intelligence 
animals animats ii 
mit press 
menczer belew 

artificial life applied adaptive information agents 
working notes aaai symposium information gathering distributed heterogeneous databases 
aaai press 
miller 

wordnet dictionary browser 
proceedings conference uw centre new oxford dictionary 
waterloo canada 
mitchell 

genetic algorithms 
mit press 
moukas 

amalthaea information discovery filtering multiagent evolving ecosystem 
proceedings international conference practical application intelligent agents multiagent technology paam london 
moukas 

amalthaea intelligent agent information overload 
appear international journal applied artificial intelligence 
moukas hayes 

synthetic robotic language acquisition observation 
animals animats 
mit press 
moukas 

evolving multiagent filtering solutions amalthaea 
proceedings international conference autonomous agents los angeles 
porter 

algorithm suffix stripping 
program 
resnik iacovou bergstrom riedl 

grouplens open architecture collaborative filtering netnews 
proceedings cscw 
riordan sorensen 

intelligent agent high precision information filtering 
proceedings cikm conference 
amalthaea information filtering discovery evolving multiagent system salton 

smart retrieval system 
experiments automatic document processing 
englewood nj 
salton 

modern information retrieval 
mcgraw hill 
salton buckley 

text weighting approaches automatic text retrieval 
cornell university technical report 
shardanand maes 

social information filtering algorithms automating word mouth 
proceedings chi conference acm press 
sheth maes 

evolving agents personalized information filtering 
proceedings ninth conference artificial intelligence applications 
ieee computer society press 
sycara 

intelligent agents information revolution 
seminar intelligent agents business applications 
november london 
sycara 

coordination multiple intelligent software agents 
international journal intelligent cooperative information systems 
sycara decker williamson 

distributed intelligent agents 
ieee expert 
