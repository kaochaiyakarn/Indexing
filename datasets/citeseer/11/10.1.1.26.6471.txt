kleisli gus experiments integrated access genomic data sources susan davidson jonathan crabtree brian brunk jonathan val tannen chris overton chris center bioinformatics dept computer information science university philadelphia pa crabtree upenn edu val cis upenn edu appear ibm systems journal 
december integration heterogeneous data sources software systems major issue biomedical community approaches explored linking databases integration views integration warehousing 
report experiences systems developed university integration system called primarily provide views multiple external data sources software systems data warehouse called gus downloads cleans integrates annotates data multiple external data sources 
view warehouse approaches advantages clear winner 
users consider data performance guarantees programmer time expertise available choose best strategy particular application 
completion rough draft human genome nished sequence drosophila elegans yeast numerous sequencing projects progress vast amount genomic data available re nement analysis 
moving past dna sequences researchers interested corresponding protein sequences structure function 
moving past sequences entirely researchers wish understand space time dimensions genes example genes expressed tissues stages development 
questions answered exactly direct experimentation insights gained accessing tremendous amount genomic information available online 
research supported part doe de fg er sub nsf dbi nsf iis aro daag 
example suppose researcher seeks discover genes involved multi neurological disorder bipolar schizophrenia 
high throughput analysis gene expression patterns yields expression pro les tens thousands potentially involved genes 
analysis pro les reveals hundreds genes represent candidate genes disorder 
experimentally analyzing candidates prohibitively expensive 
researcher prioritize candidates start search promising 
accesses databases genbank swiss prot determine genes located human chromosomal regions associated schizophrenia genetic mapping located human chromosomal regions model organisms mouse rat related non human neurological diseases mapped 
note genbank embl databases exchange data regularly forming consortium databases query 
unfortunately genomic information researchers wish access available online reside database location 
spread multiple data sources variety data models data formats presenting variety languages interfaces data retrieval 
data sources implemented conventional database management systems relational databases formatted les specialized guis retrieval packages srs acedb 
formats adopted preference database management systems dbms reasons 
data complex easy represent relational dbms 
typical structures include sequential data lists deeply nested record structures 
complexity argue object oriented database systems met success constant need database restructuring 
example new experimental techniques discovered new data structures needed record details peculiar technique 
second formatted les easily accessed languages number useful software programs exist les 
third les associated retrieval packages available variety platforms 
example type genomic data available online consider swiss prot entry shown 
line begins character code indicates type data contained line 
example entry identi ed accession number ac timestamped dates dt create date mandatory sequence update annotation update dates appear sequence annotation modi ed entry created 
sequence sq list amino acids appears entry rest core data includes citation information bibliographical lines taxonomic data oc description biological source protein database dr explicit links entries databases embl annotated nucleotide sequence database homology derived secondary structure proteins predicted proteins elegans genome sequencing project interpro prints prosite databases protein families domains things 
annotation information obtained publications reporting new sequence data review articles external experts mainly feature table ft keyword lines kw comment lines cc appear example due lack 
note bibliographical nested structures rp rc ra rl elds repeated 
similarly feature table thought nested structure line contains start position atype feature np bind 
entry designed easily read structured machine parsed 
lines contain certain amount structure separated parsing 
example author list string parsed list strings able index individual authors 
similarly taxonomic data string spread lines parsed list 
heterogeneity data sources frequently unconventional implementation accessing genomic data multiple data sources extremely di cult 
researchers example studying bipolar schizophrenia faced dilemma software gain access data 
complicated software relative frequently limited id ef standard prt aa 
ac dt oct rel 
created dt oct rel 
sequence update dt dec rel 
annotation update de elongation factor alpha ef alpha 
gn eft 
os elegans 
oc oc 
rn rp sequence 
eft 
rc strain bristol ra rl submitted nov embl genbank databases 
rn rp sequence 

rc strain bristol ra rl submitted mar embl genbank databases 
dr embl aaa 
dr embl aaa 
dr aip 
dr ce 
dr ce 
dr interpro ipr 
dr pf gtp 
dr prints pr 
dr prosite ps gtp 
kw elongation factor protein gtp binding kw family 
ft np bind gtp similarity 
ft np bind gtp similarity 
ft np bind gtp similarity 
sq sequence aa mw af crc kkk sample swiss prot entry data mining legacy systems indexed files olap decision support guis data warehouse views relational obj oriented dbmss dbmss odbc views data transformation integration structured text xml hypertext web forms scientific data formats queries oql cpl visual spreadsheets ole odbc view warehouse integration corba java rmi servers house computer expertise 
leave data create specialized database 
tradeo approaches 
link driven federation versus integration 
past years variety techniques developed genomic community integrated access multiple heterogeneous data sources 
link driven federations created users start extracting entries interest hop related data sources web links explicitly created developers system 
srs examples approach 
systems develop view integrations emerged community kleisli system opm 
approach schemas collection underlying data sources merged form global schema common model relational complex value object oriented model 
users query global schema high level query language sql oql cpl system determines portion global query answered underlying data source ships local queries underlying data sources combines answers underlying data sources produce answer global query 
view integration systems create instantiation global schema commonly referred warehouse 
contrast view integration strategy global query answered information warehouse shipping queries underlying data sources 
illustrates connection view warehouse integration strategies 
bottom gure lie multiple heterogeneous data sources interest 
sits software layer provides ability extract integrate underlying data sources 
dotted lines show integration layer querying basis creating data warehouse 
view warehouse strategy global query underlying data sources embedded variety application programs interface shown top gure 
obviously tradeo link driven federation view warehouse approaches 
link driven federation approach useful non expert user relies entirely point click interface 
federation approaches er limited retrieval language quickly learned non technical users example srs allows users specify logical combinations regular expressions index elds interest 
tremendous value linked connections 
approach helpful labs little house computer expertise 
approach see srs ebi ac uk 
see www genome ad jp 
see nci nih gov cards 
scale 
new data source added federation connections entries entries existing federation data sources added commonly referred problem 
furthermore case user interested join data sources federation manually perform join clicking entry rst data source connections second data source 
contrast join expressed single highlevel query view warehouse integration strategies 
general query languages supporting view warehouse integration approaches powerful languages allow arbitrary restructuring retrieved data 
view warehouse strategy user sees global schema underlying data 
useful schema give user ability connect various pieces information 
done explicitly providing linking tables link driven federation approach form identi ers hot links providing software compute matches information homology similarity threshold sequence entries 
schema thought set integration queries union schemas underlying data sources additional linking tables provided integrator 
remainder start describing kleisli integration system implement view integration strategy bioinformatics applications penn center bioinformatics tambis system university manchester 
discuss various practical issues associated warehousing approach describing particular warehouse called gus genomics uni ed schema 
gus forms basis organism tissue speci research projects university collaborating institutions particular view applications developed support database mouse human gene index database genes expressed developing 
kleisli latest incarnation distributed query system developing past years university 
principles guided design kleisli conceptual predecessor 
kleisli system uses complex value model data 
model collection types sets lists multisets bags may nested record variant tagged union types 
kleisli uses language collection programming language cpl developed speci cally querying transforming complex value data 
equivalent expressive power sql restricted querying producing relational data cpl uses comprehension style syntax quite di erent sql 
departure de facto query language standard apparently cpl accessible database professionals 
consequently decision support industry standard query language oql 
oql uses select style syntax sql semantics comprehensions just cpl supports full oql extended variant disjoint union types 
complex value data model incorporates new data type dictionaries 
dictionary function explicit nite de nition domain 
allows representation object oriented classes dictionaries domains model class extents sets object identities 
dictionaries allow representation web data sources provide information answer lling eld structured query forms 
di ers kleisli implementation language kleisli written standard ml implemented primarily java counterexample srs linking operator provided retrieve linked entries set entries 
simplified pubmed entry null string uid null long null long cit title unit name string iso string isbn string journal book proc authors names std 
ml string str string 
mesh null mp bool term string qual null mp bool string substance null type null cas null ec null cit null string name string 
record list fg set variant tagged union null string variant represents optional string value 
type omitted brevity sample type represents simpli ed pubmed entry standard protocols apis part java platform including rmi jdbc architecture similar number view integration systems 
relies set data drivers handles low level details communicating single class underlying data sources sybase relational databases perl shell scripts blast family similarity search programs 
data driver accepts queries expressed query language underlying data source 
transmits query source evaluation converts query result internal complex value representation 
data sources support done tuple tuple object object basis analogous demand driven tuple processing paradigm relational databases 
data drivers responsible providing data source metadata types schemas type check queries 
user oql query type checked decompose subqueries answered underlying data sources 
furthermore rewrite oql query fragments necessary queries data sources understand support oql directly 
tasks handled system query optimization module extensible rule optimizer 
optimizer performs query deforestation elimination intermediate collection results 
performs rewrites group operations data source biggest subquery possible sent data source 
cost optimization investigating alternative commonly commercial 
distributed environment system run lend accurate cost estimation 
note part query optimizer unable ship underlying data sources executed runtime system 
illustrate consider scenario gus queried combination ncbi pubmed database 
gus discussed greater detail section things contains est assemblies represent genes 
see www javasoft com se 
see www javasoft com products rmi iiop 
see java sun com products jdbc 
mapping expression data integrated gus scientist identi ed set est assemblies represent candidate genes inherited disorder 
assemblies correspond known genes 
order gain insight function unknown genes investigator wants nd publications known genes mention speci protein substance known ected disorder 
annotated bibliographic data kind part gus ncbi pubmed database shows simpli ed version type describes entry pubmed provided ncbi network entrez service 
network entrez provides language api pubmed databases including genbank uses asn represent data types 
asn complex value data model translation straightforward 
data driver network entrez developed asn api 
data driver appears oql interface user de ned function passed commands written ad hoc syntax 
example oql statement retrieves substances proteins enzymes associated single pubmed entrez entrez back data substance name result executing query echoed back list complement complement optimized query seconds 
total elapsed time request seconds 
preceding query entrez oql function represents entrez data driver speci es entrez id pubmed speci es pubmed medline section entrez ag gives optional path expression speci es part asn entry returned 
syntax di cult remember oql de ne directive create function represents simple view pubmed 
oql string concatenation operator define get medline substances entrez entrez back data substance name combining functions data genes gus data warehouse list substances associated est assembly predicted gene oql view functions 
rst gus transcript seqs takes input gus est assembly id returns accession numbers individual sequences ests assembly define gus transcript seqs select source id gus rs gus naf see www ncbi nlm nih gov entrez query static overview html 
gus gus rs rna id variant rs na feature id naf na feature id naf na sequence id assembly na sequence id na sequence id na sequence id second function gus transcript pubmed refs joins relevant tables gus pubmed functions just de ned 
calls get medline substances sequence est assembly returns collection records oql struct clause contains pubmed id list substances 
function uses additional mapping function ids takes input accession number sequence returns pubmed ids publications sequence 
function implemented script 
note oql atten command transform nested collection set sets non nested collection define gus transcript pubmed refs select struct substances get medline substances flatten select ids gus transcript seqs call gus transcript pubmed refs assembly id get associated pubmed ids substances gus transcript pubmed refs bag substances list peptide fragments preceding example trivially modi ed retrieve medline abstracts list est assemblies linked publications mention example 
generally incorporate data ofthe sources wehave data drivers 
include metabolic signaling pathway information kegg ecocyc dna sequence related data genbank organism speci data gdb sequence similarity searches blast data databases indexed srs 
example data sources may include scripts application programs blast long appropriate data driver available 
far mentioned object oriented capabilities 
interesting aspect system integrated views may de ned oql functions simple example user de ned object oriented classes 
new language mdl lets users describe new classes specifying extents attributes computed underlying data sources 
view classes de ned queried oql compose oql queries mdl views producing multisource queries internal language resulting queries normalized decomposed optimizer 
de ne views user range options 
highest level abstraction may de ne virtual classes span underlying databases 
lowest possible access underlying data sources directly call entrez driver 
way user system administrator free provide integrated views selected parts underlying data sources best understood frequently 
parts underlying data sources integrated view may queried joined directly 
mdl combines odl object de nition language oql syntax 
de nes schema class view odl de nes extent class attributes object computed oql 
approach related views 
implemented multi threaded server handle multiple client connections 
clients communicate server rmi iiop ad hoc socket protocol 
implemented client provides interactive command line access system shown examples addition set client libraries simplify accessing web application uses java servlets additional information system examples parameterized queries obtained web site issues warehousing view warehouse strategies share need common data model relational object oriented complex object represent underlying data sources appropriate query language sql oql cpl express integrating queries 
di erence approaches exists separate physical copy integrated database integration describes translate queries global view queries underlying data sources 
warehouse approach integration queries executed advance build precomputed physical copy integrated database 
view approach set search parameters supplied user particular time integration queries specialized search parameters executed build hopefully smaller relevant part integrated database needed satisfy information request 
points obvious advantages view approach low initial cost little maintenance cost query result date 
main advantage warehouse approach system performance tends better illustrated section 
query optimization performed locally assuming underlying database management system second inter data source communication latency eliminated 
system reliability better fewer dependencies network connectivity furthermore problem determining underlying data sources available avoided 
data sources may overloaded temporarily unable answer queries 
easier enforce inter database constraints determined integration 
important advantage underlying data sources may contain errors feasible way integrated database correct data keep separate copy 
furthermore researcher mayhave additional information annotations add integrated information done entered result analysis packages guided 
added value corrections annotations stored integrated data gives tremendous advantage 
warehouse maintained underlying data sources change raises number practical problems 
detect underlying data sources changed 

automate refresh process 

track origins provenance data 
detecting change data source 
part problem change detection deciding push pull technology 
push technology users register queries underlying data see www javasoft com products servlet 
see www upenn edu 
source request explicit noti cation change occurs matches query known database literature continuous continual queries 
pull technology user periodically polls underlying data source see interest occurred 
note push technology requires underlying data source capable processing form triggers willing able send noti cation 
genomic data sources just er push capabilities 
example swiss prot ers service called swiss shop allows keyword sequence pattern requests 
new sequence entries entered relevant request requesting user 
occurs weekly intervals new update les generated 
major genomic data sources er push services 
warehouse developers genomics community probably rely pull technologies cases 
part problem change detection nding exactly underlying data source changed 
context genomic databases complicated fact updates typically propagated ways 
producing periodic new versions downloaded user community 
timestamping data entries users infer changes occurred accessed data 
keeping list additions corrections element list complete entry 
list additions downloaded user community 
methods precisely describes minimal changes data 
example suppose warehouse stores portion swiss prot normalized relational database requires elds table single valued facts key table 
resulting relational schema entry split fteen tables 
pointed bibliographic eld rn single valued fact key entry ac may entry 
split separate table 
furthermore related di erent entries include ac foreign key publication table referencing tuple entry table separate table denoting relationship publications entries created order appears entry maintained attribute 
reasoning applied authors keywords features 
suppose update swiss prot entry occurs 
warehouse maintainer detect update occurred swiss prot publishes list entries modi ed release 
say exactly entry changed 
actual change may small example adding extra author consumes characters new entry 
entry relevant warehouse selected integration query addition author ect tables warehouse fteen tables represent swiss prot 
old new entry possible various diff algorithms calculate minimal changes 
example utility ace databases 
data sources export data xml believe soon happen major data sources algorithms ordered trees 
clear order elds important xml representation swissprot genbank entry easy represent updates positional information 
advocate model value keys level nesting case diff algorithm simple cient top algorithm 
push capabilities may common private sector 
example www com software agents notify users relevant entries added database 
package ibm see www alphaworks ibm com formula 
updates view maintenance problem automating refresh process 
automate refresh process portions warehouse de ned integrating queries updated commonly called view maintenance derived data annotations integrating query data recomputed 
problem view maintenance received lot attention database community illustrated 
gure represents integration query takes input underlying data source instances producing warehouse 
underlying data source instances updated producing new underlying data source instances note may combination insertions deletions denote incorporation insertions deletions data source instance ii furthermore common represent modi cation value deletion old value followed insertion new value 
expression ii represents insertions deletions modi cations th data source 
produce updated warehouse possible re execute integration query 
expensive problem nd query takes input updates possibly original instances existing warehouse updates warehouse produce new state 
written requiring original instances takes input view said self maintainable 
example suppose input relational data sources view de ned updates occur base relations 
updated calculating assuming large small cient recalculating entire view 
view self maintainable need access calculate changes hand view self maintainable update occurs updated view calculated simply inserting ltered update fa view 
complex view de nitions self maintainable reasoning functional dependencies foreign key constraints storing auxiliary information warehouse see details 
view maintenance extensively studied context relational databases see survey extensively studied context object oriented databases nested relational databases models allowing multisets semistructured databases 
problem recomputing corrections annotations studied 
data provenance 
data provenance addresses problem tracking origins piece data 
data may produced query components data come similar expression denote 
di erent underlying data sources 
alternatively data may derived data warehouse various data mining algorithms 
example suppose form annotation warehouse assign function sequences similarity blast searches 
annotation transitively inherited sequences 
original annotation determined incorrect experimentation subsequent annotations undone 
important track origins annotation keeping detailed information information annotation 
discussed detail section 
note data provenance related problem recomputing annotations 
example sequence annotation changed subsequent annotations need redone 
knowing provenance data determine annotations need recomputed 
data warehousing gus take advantage bene ts data cleansing annotation available data warehousing developed schema called genomics uni ed schema gus integrate add value data obtained major sequence databases 
databases included gus far genbank embl swiss prot contain annotated nucleotide dna rna amino acid protein sequences 
gus uses relational data model tables hold nucleotide amino acid sequences associated annotation 
gus uses central dogma biology dna 
rna 
protein organizational principle 
sequence centric entries external databases mirrored gus transformed gene centric entities 
gus tables hold conceptual entities sequences annotation ultimately represent genes rna derived genes proteins derived rnas 
incoming sequence annotation may experimentally determined predicted variety algorithms stored gus features localized spans intervals points underlying sequence see ft elds 
transformation gene centric database data cleansing occurs identify erroneous annotation mis identi ed sequences 
ontologies structure annotations particular referring organisms see oc eld 
additional computational annotation generated newly integrated sequences gene protein function 
just process manual annotation curation increasingly important time goes 
data provenance gus 
ability track data came extremely important gus 
addition common data warehouse concerns tracking origins data external sources concerned tracking history computationally manually derived data generated course warehouse construction 
genome sequencing orts human genome project led availability large amounts nucleotide sequence little annotation experimentally veri ed 
predictions gene content gene identity gene function variety computational approaches algorithms train data sets contain predictions 
prediction dependent earlier predictions errors easily spread compounded 
similar situation exists est expressed sequence tag sequencing projects identify genes expressed various types cells organisms 
genes represented ests identi ed computational analysis individual case gus assemblies ests 
predictions may con rmed altered discarded new information available form experimental results literature searches new sequence data 
annotate genomic sequences gene content genes gene identity function record information allow users professional annotators evaluate annotation justi ed available evidence 
information gus tracks computationally derived annotation algorithm algorithm implementation software version algorithm invocation runtime information algorithm parameters values passed program runtime 
table types information gus 
algorithm tables tracking annotation history tracking data integration 
algorithm tables tables describing external data sources record loading data external sources allowing precisely track source tuple including script load 
addition algorithm tables evidence table relate speci annotations facts 
fact tables hold data generated algorithms run gus entries 
example fact table similarity stores results similarity searches sets sequences database 
similarities evidence allows predict cellular role particular protein 
algorithm information associated tuple similarity fact table includes database index search providing ability identify version sequence database searched 
noted algorithm evidence tables track manual annotation 
case evidence table point tuple gus annotator decision assignment con dence prediction controlled vocabulary term change relationship merge genes split est assembly 
algorithm tables capture annotation software importantly performed annotation 
updates database result annotation process tracked version tables record altered tuple algorithm caused tuple altered database transaction time itwas versioned 
history annotation generally tuple gus retrieved 
complete annotation history useful reconstructing past database states archival purposes aid identifying rectifying potential problems automated annotation process 
allows system respond gracefully user requests entries longer database simply saying entry system tell user exactly itwas retired active service 
surprisingly gus schema quite large tables versioned 
mentioned section compact representation swiss prot entry shown translated relational model results entry split fteen tables holds true embl format genbank entries 
result just mirroring external databases gus takes fty tables 
various tables related integration annotation remainder 
schema large fairly unintuitive perl object layer added top relational implementation 
note similar strategy opm users view query database object oriented database actual implementation relational 
example object layer user view entry structured swiss prot stored relational form features entry listed simple perl method invocation object layer translates join requisite tables 
object layer crucial tracking data provenance transparently handles anumber versioning book keeping tasks need direct user intervention 
update management 
gus schema instantiated create comprehensive public resource human mouse genome annotation new sequences relevant database appear daily external data sources goal complete cycle annotation current information available months 
ideally gus completely date see www org cgi bin pl complete schema 
approach gdb see gizmo lbl gov opm html 
see www org 
respect external data sources currently acceptable provide resource lags months example swiss prot highly curated version protein portion genbank completely date extensively due high quality data annotations 
update database latest versions external databases downloaded subsequent updates new entries including new entries modi cations existing entries 
entries external databases classi ed unmodi ed new modi ed date version information associated entries 
unmodi ed entries ignored new entries simply inserted gus 
modi ed entries detected examining appropriate entry eld dt line swiss prot annotation update increment version genbank accession problematic 
complete entry minimal updates actual di erences identi ed entry loading process 
note mirroring relevant portions source databases essentially selecting entries interest calculating gus updated merely entails ltering updates selection criterion complex function recall discussion automating refresh process section 
detect exactly components modi ed entry changed object layer implement simple di algorithm recall discussion change detection section 
accession number entry assumed key entry object layer retrieves top level tuple entry 
navigates nested structure entry traversing relationships 
note table representing component entry uses internal identi er index level relationship tables 
change value determined change database 
noted earlier version tables track changes 
new modi ed entries put annotation pipeline integrates protein dna sequences annotations transforms sequence entries gene entries 
annotation integrated sequences performed including functional role prediction 
updates annotation produced pipeline need managed way updates external databases 
updates entries external databases may course impact old integrated sequences validity annotation 
annotation cycle latest entries annotation computational analysis freshly generated old integrated sequences annotation kept 
important maintain stable identi ers genes rnas proteins data analyses compared di erent update cycles gus 
compare integrated sequences generated update cycles pass identi ers possible high level genes rnas proteins 
manual annotation tied identi ers reapplied 
ensure consistent version database seen public current working model lock production version database public consumption doing updates development database 
entries development database complete new version released public 
paradigm need change near manual annotation gus entries entry selection manual annotation guided user interest computational analyses driven new updated entries 
result collisions may occur computational manual annotations di erent schedules 
changes schema external data sources occurs 
relational views represent annotation associated sequence entries providing ability easily incorporate certain kinds schema changes addition renaming attribute 
new version released quarterly di cult determine lag sequences rst appear genbank 
annotation pipeline mean series computational analyses output analysis input analysis series 
see example 
early days experience 
initial revisions gus schema stabilized swiss prot protein est loaded loading newest version genbank progress 
currently working integration protocols fully integrate dna genbank protein swiss prot entries 
data genbank est create gene index attempts assign mrna sequences literal computed assembly ests single genes genomic sequences gene predictions 
database queried viewed www org 
anumber signi cant gains realized building gus warehouse 
structure data ontologies biological terms entry database query data powerful ways possible individual source databases 
second structure new sequences representing mrna molecules readily reliably identi ed inclusion gene index 
third gain ease predict cellular roles particular track evidence roles presence proteins swiss prot genbank non redundant protein databases gus 
gus warehouse ective vehicle delivering specialized databases 
prior developing gus maintaining di erent databases variety database management systems data models designed speci function covered gus 
functions include genome annotation gaia gene integration generation gene index dots addition involved maintaining organism speci information mouse human gene index database database genes expressed developing databases function organism speci view gus 
issue update annotation management completely solved research continue better integrate annotation cycles ow approaches 
especially important order maintain personnel intensive manual annotation aided ability track history annotations described previously 
performance state section performance overriding concern choosing warehouse solution view 
exactly faster warehouse query run compared equivalent query view integration system depends factors including nature query number types source databases accessed 
table presents relevant performance data gathered mid earlier version kleisli system discussed section 
example illustrates performance gains realized relational warehouse rst row 
demonstrates performance view system vary widely depending join evaluation strategies available system semijoin versus nested loop join rows 
join evaluation strategies available depend turn capabilities underlying data sources version query gdb entrez row semijoin entrez data driver system non relational support operation 
note queries failed complete case due network timeouts entrez driver susceptible highlighting point quality service considered addition performance 
way comparison data set gus system supports similar query return est assemblies localized chromosome radiation hybrid mapping 
current descriptions databases see www upenn edu 
see www org 
see www upenn edu chromosome lj gdb sj kleisli gdb nl kleisli gdb entrez nl kleisli lj local join warehouse approach 
sj semijoin relational sources 
nl nested loop iteration 
query failed complete 
table running times seconds implementations query retrieve cial hugo human gene organization names accession numbers amino acid sequences known human genes mapped chromosome 
query requires mapping data gdb sequence data entrez genbank 
time experiments conducted contained identical copies relevant tables gdb allowing treat warehouse respect type query 
shown rst row table sybase command line interface run requisite sql queries 
remaining rows represent di erent view evaluation strategies exactly source databases kleisli view system 
note data rst chromosomes shown times row averages repetitions 
development system oracle database running processor linux machine query takes average seconds 
note query translates table join tables contain rows original gdb query involved substantially data 
frequently queries created materialized views gus improve performance 
appropriate materialized view query reduces table join allows run second expect performance improvements system properly tuned oracle kleisli view gus warehouse strategies proven useful genomic applications center bioinformatics 
kleisli time implement web parameterized queries written speci user groups 
users query views integrated important line data sources genbank gdb srs indexed databases kegg ecocyc application programs blast supplying values parameters data sources application programs accessed demand provide answers parameterized queries 
set available web queries grew users mailed requests people wrote cpl queries 
kleisli web site list queries somewhat modi ed 
kleisli extremely successful formed basis tambis system university manchester 
kleisli view strategies useful curiosity driven browsing network delays data source tolerated 
gus hand vital projects involving production strength support function organism speci applications particular involving annotation 
production strength system need control data guarantee correctness 
furthermore added annotation tied state input data sources easier mirror state warehouse reconstruct timestamps version information 
current production gus database runs sybase process adding support oracle 
noted populate gus 
main reasons felt oql excellent query language suited task large scale data restructuring 
better rely high level declarative transformation language tsl wol aside ability execute resulting transformations ciently rely general purpose programming scripting language 
second sql oql explicit insert update syntax oql updates performed method calls ect state database side ect 
third data highly restructured integrated initially mirrored gus integration performed subsequent annotation pipeline 
manner gus populated understood relatively straightforward cient write perl scripts perform task 
incorporate databases wish warehouse locally example pubmed illustrated section specialized database mouse plan integrate near 
implicit problems encountered creating maintaining view databases lack operation underlying data sources 
kinds problems largely motivated standardization approach common object request broker architecture corba proposed object management group omg see www omg org 
omg consortium mission foster interoperability portability application integration operative creation object oriented standards 
underlying omg standards corba describes network component systems behave order interoperate distributed environment 
life sciences research task force lsr formed omg address requirements speci cations software components life sciences corba 
currently lsr reached consensus speci cations biomolecular sequence analyses genome maps individual data source owners third parties modify data sources provide wrappers data sources conform speci cations 
believe standardization genomic data sources unrealistic goal diversity autonomy rapid schema changes 
evidenced fact interest corba past year xml see www org 
universal data exchange format xml may supplant existing formats embl asn biological data simplify lower level driver technology part kleisli view integration systems 
abundance freely available parsers software xml heavy industry backing xml 
question function exchange format 
may fact basis view integration systems query languages developed semistructured data xml 
basis integration system believe things happen 
kind schema technology developed xml 
dtds function rough schema xml 
example base types pcdata integer distinguished string ability specify keys constraints schema reliance order representing tuples order attributes unimportant tricky 
xmlschema proposal addresses problems providing means de ning structure content semantics xml documents 

agreement reached terms mechanism map terms 
discussions di cult parts data software integration semantic integration 
semantic integration focuses development shared ontologies domains users resolution naming con icts synonyms homonyms 
tambis project kleisli low level syntactic integration major project develop ontology researchers navigate nd information see www omg org homepages lsr mg html 
see example www ebi ac uk microarray 
interest 
view layer layer mdl aids semantic integration providing means mapping concepts di erent databases proven extremely useful integration projects 
xml useful data integration usage tag labels uniform community semantic layer available 

standard xml storage adopted 
storage techniques currently explored relational object oriented technologies new technologies considered 
agreement best 
warehouse developers currently provide mapping layer store result integration query 
issues current interest database research community near expect see preliminary solutions 
warehouses gus continue developed believe number practical steps taken producers primary data developers warehouses 
develop keyed xml data interchange formats 
currently ways identifying node xml tree rst id attributes globally unique pcdata strings 
second ordering subnodes identify position 
example dom tree representation xml document address node element position node path root node 
element positions change new data added example inserting new element third element changes position element list 
positions may change updates occur desirable value position identi ers 
example relational model tuples identi ed keys sets attributes values uniquely identify tuple modi ed 
hierarchically structured model kleisli xml analog require keys speci ed level nesting node tree described unique path keys root node 
note di erent ids globally unique document locally unique 
xmlschema addressing proposals may impact 

publish minimal changes 
intuitively just publishing entry modi ed useful know modi ed feature added entry value feature added 
keyed hierarchical data changes entry simply represented set paths represent insertions set paths represent deletions set paths represent modi cations values old entry 
want detailed information users probably continue choice obtaining newest version database obtaining entries modi ed 

keep track data came 
data secondary databases derived primary sources important track came 
minimum implies detailed information maintained version primary data source data extracted date information extracted information query extracted data 
data obtained analysis packages data primary sources information maintained analysis performed input parameters name person performing analysis additional problem mentioned implications creating warehouses ownership data 
past years data originally public domain variety reasons increasingly restrictive licenses placed 
databases genbank pubmed public domain databases swiss prot secondary database placing restrictions data 
case swiss prot restrictions intended funding mechanism aimed commercial uses non pro uses non pro user integrates part swiss prot specialized database commercial users non pro user provide list commercial users licensing checked 
restrictions quite reasonable high cost producing high quality data may signi cant barrier instantiating portions warehouse integration draw data primary sources restrictive licenses 
acknowledgments 
jonathan crabtree scott val tannen 
gus designed developed brian brunk jonathan crabtree chris overton jonathan chris entire computational biology informatics laboratory 
thankful peter buneman members database bioinformatics group department computer information science members center bioinformatics input various aspects 
understanding new sql complete guide 
morgan kaufmann 
stonebraker 
supporting ne grained data lineage database visualization environment 
icde pages 
serge abiteboul jason mc hugh michael vassilis vassalos janet wiener 
incremental maintenance materialized views semistructured data 
int conference onvery large databases vldb pages new york city ny august 
altschul gish miller myers lipman 
basic local alignment search tool 
journal molecular biology 
bairoch 
swiss prot protein sequence database supplement trembl 
nucleic acids research 
wendy baker alexandra van den evelyn pascal peter mary ann 
embl nucleotide sequence database 
nucleic acids research 
benson lipman rapp wheeler 
genbank 
nucleic acids research 
judith blake joel richardson davisson mouse genome database group 
mouse genome database expanding genetic genomic resources laboratory mouse 
nucleic acids research 
larson 
updating derived relations detecting irrelevant autonomously computable updates 
acm transactions database systems september 

larson 
ciently updating materialized views 
proceedings acm sigmod international conference management data pages 
see www isb sib ch announce 
swiss prot copyright notice states non pro users restrictions non pro institutions long content modi ed 
boguski lowe 
database expressed sequence tags 
nature genetics august 
buneman crabtree davidson overton tannen wong 

letovsky editor bioinformatics 
kluwer academic publishers 
buneman davidson hart overton wong 
data transformation system biological data sources 
proceedings vldb pages sept 
peter buneman susan davidson fan hara tan 
keys xml 
draft manuscript 
peter buneman leonid libkin dan suciu val tannen limsoon wong 
comprehension syntax 
sigmod record march 
cattell douglas barry dirk bartels mark je eastman sophie david jordan adam springer henry drew wade 
object database standard odmg 
morgan kaufmann 
ceri widom 
deriving production rules incremental view maintenance 
th int conference large data bases vldb pages barcelona spain september 
morgan kaufmann 
chawathe garcia 
meaningful change detection structured data 
proceedings acm sigmod conference management data pages may 
min chen victor markowitz 
overview object protocol model opm opm data management tools 
information systems 
chen dewitt tian wang 
niagaracq scalable continuous query system internet databases 
sigmod pages houston tx may 
cui widom wiener 
tracing lineage view data data warehousing environment 
tods june 
appear 
davidson 
wol language database transformations constraints 
proceedings international conference data engineering pages april 
davidson overton buneman 
challenges integrating biological data sources 
journal computational biology winter 
susan davidson christian overton val tannen limsoon wong 
digital library biomedical researchers 
journal digital libraries november 
deutsch fernandez florescu levy suciu 
query language xml 
proceedings international world wide web conference www toronto 
souza dos santos abiteboul delobel 
virtual schemas bases 
extending database technology 
patrick argos 
srs indexing retrieval tool le data libraries 
computer applications biosciences 
goto 
integrated database retrieval system 
paci symp 
biocomputing pages 
scholl 
incremental updates materialized oql views 
lecture notes computer science lncs pages december 
goodman stein 
requirements deductive query language genome mapping database 
proceedings workshop programming logic databases vancouver bc october 
gri libkin 
incremental maintenance views duplicates 
acm sigmod conference pages san jose california may 
gri libkin 
improved algorithm incremental recomputation active relational expressions 
ieee transactions knowledge data engineering 
gupta harinarayan quass 
generalized projections approach aggregation 
proceedings international onvery large databases vldb pages zurich switzerland september 
gupta mumick subrahmanian 
maintaining views incrementally 
acm sigmod conference pages washington dc may 
gupta mumick 
maintenance materialized views problems techniques applications 
ieee data engineering bulletin june 
chen farmer huang inman 
genome sequence database 
nucleic acids research 
kyle hart limsoon wong chris overton peter buneman 
query language integrate biological data 
abstracts st meeting interconnection molecular biology databases stanford august 

multiple view self maintenance data warehousing environments 
intl 
conference large databases vldb pages athens greece 
iso 
standard 
information processing systems 
open systems interconnection 
speci cation abstraction syntax notation asn 
lc bailey jr fischer crabtree gibson gc overton 
gaia framework annotation genomic sequence 
genome research 
goto 
kegg kyoto encyclopedia genes genomes 
nucleic acids research 
peter karp monica riley milton ian suzanne paley pellegrini toole 
ecocyc databases 
nucleic acids research 
mumick ross 
implementing incremental view maintenance nested data models 
proceedings international workshop database programming languages pages estes park colorado august 
kuno rundensteiner 
incremental maintenance materialized object oriented views multiview strategies performance evaluation 
ieee transactions knowledge data engineering 
davidson 
view maintenance hierarchical semistructured data 
london england september 
liu pu zhou 
continuous queries append databases 
acm sigmod conference pages 
liu pu zhou 
di erential evaluation continual queries 
icdcs pages 
liu pu tang 
continual queries internet scale event driven information delivery 
tkde 
mckusick 
inheritance man catalogs human genes genetic disorders 
johns hopkins university press th edition 
robin milner mads tofte robert harper 
de nition standard ml 
mit press 
bernstein 
meta data support data transformations microsoft repository 
ieee data engineering bulletin pages 
paige 
applications nite di erencing database integrity query transaction optimization 
proceedings advances database theory pages new york 
paton stevens baker goble bechhofer brass 
query processing tambis bioinformatics source integration system 
proc 
th int 
conf 
scienti statistical databases pages 
ieee press 
pearson matheson robbins 
gdb human genome data base anno 
nucleic acids research 
qian wiederhold 
incremental recomputation active relational expressions 
ieee transactions knowledge data engineering september 
quass 
maintenance expressions views aggregation 
workshop materialized views techniques applications pages montreal canada june 
quass gupta mumick widom 
making views self maintainable data warehousing 
conference distributed information systems pdis pages miami beach usa december 
cattell editor 
object database standard odmg 
morgan kaufmann san mateo california 
caspi lancet 
encyclopedia genes proteins diseases 
technical report weizmann institute science bioinformatics unit genome center rehovot israel 
robie lapp schach 
xml query language xql 
query languages workshop ql boston december 
ross srivastava sudarshan 
materialized view maintenance integrity constraint checking trading space time 
proceedings acm sigmod international conference management data pages montreal canada june 
rusinkiewicz sheth 
specifying dependencies multidatabase environment 
ieee computer december 
selkow 
tree tree editing problem 
information processing letters 
shmueli itai 
maintenance views 
proceedings acm sigmod international conference management data pages boston june 
suciu 
query decomposition view maintenance query languages unstructured data 
proceedings international conference large databases vldb pages bombay india september 
tai 
tree tree correction problem 
journal association computing machinery 
satoru miyazaki ota sugawara takashi 
dna data bank japan collaboration mass sequencing teams 
nucleic acids research 
jean thierry richard durbin 
acedb ac elegans database syntactic de nitions acedb data base manager 
je rey ullman 
principles database knowledgebase systems computer science press rockville md 
gio wiederhold 
mediators architecture information systems 
ieee computer pages march 
wong 
kleisli functional query system 
functional programming 
world wide web consortium 
document object model dom level speci cation 
www org tr wd dom 
world wide web consortium 
xml schema part primer 
www org tr xmlschema zhang shasha 
simple fast algorithms editing distance trees related problems 
siam comput 
zhang statman shasha 
editing distance unordered labeled trees 
information processing letters 
zhuge garcia molina 
graph structured views incremental maintenance 
th int conference data engineering icde pages orlando florida february 

