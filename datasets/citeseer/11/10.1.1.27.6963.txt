relating casl speci cation languages institution level till mossakowski bremen institute safe systems department computer science universit bremen germany 
investigate various speci cation languages relation casl developed common algebraic speci cation language 
particular consider languages larch obj cafeobj act asf hep theories various sublanguages casl directly correspond 
languages translated appropriate sublanguage casl 
translation mainly concerns level speci cation small logics underlying languages formalized institutions representations institutions developed 
considered translations interact speci cation large 
obtain hand translations abovementioned speci cation languages appropriate sublanguage casl 
allows take libraries case studies developed languages re casl 
hand set institution representations going casl institution subinstitutions simpler subinstitutions 
theorem proving tool simpler subinstitution help representation complex institution 
rst order theorem provers conditional term rewriting tools usable casl 
key words speci cation languages institutions logics translations logics 
contents institutions institution representations research supported esprit funded cofi working group dfg project multiple 
preprint submitted elsevier preprint november institutions speci cations arbitrary institution free extensions liberality institution representations intersections subinstitutions translating language constructs casl partial order logic subsorted partial order logic casl language constructs subinstitutions casl representations subinstitutions casl order level positive conditional level theorem proving liberality larch shared language lsl institution translation translating lsl language constructs casl constructs act asf hep theories obj cafeobj institution order sorted algebra institutions underlying obj translating cosasc translating cosasc translating obj cafeobj constructs casl constructs boolean functions empty carriers translating boolean functions predicates empty carrier problem preservation freeness casl speci cation language designed cofi international common framework initiative algebraic speci cation development goal subsume previous algebraic speci cation languages provide standard language speci cation development modular software systems 
design casl explained volume see casl summary 
casl central language family languages 
casl concentrates speci cation data types rst order functional requirements currently prototypical extensions casl als consider speci cation higher order functions reactive object oriented behaviour 
restrictions casl sublanguages possible specialized tool support 
aim substantiate claim casl subsumes existing speci cation languages 
consider relation speci cation languages larch obj cafeobj act asf hep theories common tool supported logics rst order logic conditional equational logic casl 
rst step deal speci cation small unstructured speci cations individual software modules formulated speci logic 
study translations interact casl concepts speci cation large study translations di erent concepts speci cation large 
clean separation speci cation small speci cation large possible casl levels treated separately 
semantics casl large orthogonal underlying logic speci cation small 
practical usable speci cation language distinction underlying mathematical concepts hand language constructs hand 
typically language constructs provide concise user friendly syntax writing speci cations semantics interprets constructs terms concepts 
level speci cation small essential mathematical concept logic underlying language 
mainly address problem relating underlying logics speci cation languages 
formalize logics institutions sense goguen burstall 
cases recognition underlying logic obvious formalization institution non trivial task 
done institutions related institution representations 
cases obvious subinstitution casl institution closely corresponds institution underlying speci cation language question 
single number subinstitutions casl develop uniform naming scheme 
cases relation obvious choices institution representation 
address translation subinstitutions casl simpler subinstitutions 
typically target translation institution tool support translation property tool support lifted translation 
new results concerning lifting properties 
concerning level languages constructs discuss language constructs formally require detailed language de nitions lengthy apart diculty languages precisely de ned static semantic conditions 
informally discuss institution representation lifts translation corresponding language constructs 
cases straightforward cases advisable rst expand construct theory underlying institution translate theory 
better direct translation constructs 
structure follows section recall notions institution institution representation 
study various properties institution representations lead interaction speci cation small speci cation large institution representations 
context develop new results concerning free speci cations 
section introduce institution underlying casl number subinstitutions develop uniform naming scheme 
section discusses representations casl subinstitutions rst order logic representations subinstitutions casl 
obtain graphs institutions representations rst order level sort generation constraints rst order level sort generation constraints positive conditional level 
graphs contain di erent kinds edges corresponding di erent properties institution representations introduced section 
combining results graphs results interaction institution representations speci cation small speci cation large obtain number results re theorem provers existence free objects liberality 
particular show theorem prover rst order logic plus induction suces prove theorems casl institution level structured speci cations including certain free speci cations theorem 
conditional term rewriting paramodulation applied positive conditional fragment casl 
show liberal 
sections devoted de nition translation institutions underlying larch act asf hep theories obj cafeobj respectively 
case separate subsection devoted informal discussion level constructs 
section contains general remarks boolean valued functions versus predicates empty carrier problem 
little knowledge category theory assumed sections 
sections rely purely category theoretic results relegated appendix 
institutions institution representations section introduce notion institution di erent types institution representations known literature 
summarize known properties prove new results concerning interaction speci cation large 
institutions speci cation formalism usually notion signature model sentence satisfaction 
usual ingredients barwise model theory 
contrary barwise notions institutions goguen burstall assume signatures algebraic signatures cover larger variety logics 
theory institutions assumes signatures expect form class signature morphisms composed way 
amounts stating signatures form category 
special assumed form sentences models 
signature sentences form just set models form category account may model morphisms signature morphisms lead translations sentences models sentences models signatures functors 
contravariance sentence model translation sentences translated signature morphisms models translated signature morphisms 
informally motivated follows 
forget moment generality think signatures sets certain symbols 
think sentences signature derivation trees grammar decorated nodes symbols 
sentence translation signature morphism keeps structure derivation tree replaces symbols decorating nodes 
explains sentences translated signature morphisms 
concerning models signature interpret symbols signature 
model seen map going symbols semantical domain 
model signature morphism composing interpretation map get new interpretation map call model 
called reduct explains models translated signature morphisms 
course explanations just motivating purpose institutions completely di erent view signatures models sentences 
shed light typical institutions 
institutions satisfaction relation models sentences invariant simultaneous translation sentences models signature morphism 
leads formal de nition 
cat category categories functors 
de nition institution sign sen mod consists category sign signatures functor sen sign set giving signature set sen explanation formalized called parchments 
strictly speaking cat category called category lives higher set theoretic universe 
tences sen signature morphism sentence translation map sen sen sen sen written functor mod sign op cat giving signature category models mod signature morphism reduct functor mod mod mod mod written satisfaction relation sen sign sign satisfaction condition holds mod sen 
omit index clear context 
informally examples 
formally introduced section 
example institution eq equational logic 
signatures algebraic signatures consisting sort operation symbols 
signature morphisms map sorts operation symbols compatible way 
models just sorted algebras reducts constructed sketched 
sentences equations sentence translation means replacement translated symbols 
satisfaction usual satisfaction equation algebra 
example institution fol sorted rst order logic equality 
signatures sorted rst order signatures sorted algebraic signatures enriched predicate symbols 
models sorted rst order structures 
sentences rst order formulas sentence translation means replacement translated symbols 
satisfaction usual satisfaction rst order sentence rst order structure 
example institution pfol partial rst order logic equality 
signatures sorted rst order signatures enriched partial operation symbols 
models sorted partial rst order structures 
sentences rst order formulas containing existential equations strong equations de nedness statements predicate applications atomic formulas 
satisfaction de ned total valuations variables valuation terms partial due existence partial functions 
existential equation holds sides de ned equal strong equation holds sides unde ned 
de nedness statement holds term de ned 
predicate application de ned terms contained de ned corresponding tuple values interpretation predicate 
extended rst order formulas usual 
arbitrary xed institution easily de ne usual notion logical consequence semantical entailment set sentences sentence say follows models implies means speci cations arbitrary institution mainly concentrates translating speci cation languages level speci cation small 
translating underlying logics speci cation languages question arises interacts speci cation large xed set structuring operations speci cation large 
section recall popular set institution independent structuring operations quite universal seen kernel language casl structuring constructs 
question relate sets structuring operations scope 
sequel arbitrary institution sign sen mod 
simplest speci cations arbitrary institution just theories sign sen set sig ax 
theory morphisms th signature morphisms axioms mapped logical consequences 
inheriting composition identities sign obtain category th theories 
easy extend sen mod start th putting sen sen letting mod full subcategory mod induced class models satisfying category pres presentations called speci cations just full subcategory theories having nite sets axioms 
concerning complex speci cations kernel language speci cations arbitrary institution proposed presentations signature jsignj nite set sen sentences presentation speci cation sig mod fm mod union signature jsignj speci cations sp sp union sp sp speci cation sig sp sp mod sp sp mod sp mod sp translation signature morphism speci cation sp translate sp speci cation sig translate sp mod translate sp fm mod mod sp hiding signature morphism speci cation sp derive sp speci cation sig derive sp mod derive sp fm mod sp structured speci cations sp sp speci cation morphism sp sp signature morphism sig sp sig sp mod sp mod sp 
speci cation sp said consistent mod sp empty 
speci cation building operations extremely simple provide exible mechanisms expressing basic ways putting speci cations building speci cations structured manner 
considered kernel language structured speci cation 
speci cation language casl provides sophisticated structuring constructs possible translate casl constructs free construct examined section kernel language see 
free extensions liberality institution independent structuring construct free extensions 
treat separately structuring languages included 
preserved institution representations see section 
free extensions de ned arbitrary functor categories functor object called free unit object morphism unique morphism zz case unit called universal 
omit speci cation unit 
object called persistently free free unit isomorphism 
called strongly persistently free free unit id id denotes identity 
proposition functor object persistently free strongly persistently free 
id proof 
direction clear 
direction universal isomorphism 
morphism unique morphism id id universal 
extend kernel language previous section follows 
signature morphism speci cation sp free sp speci cation sig free sp mod free sp fm mod sp strongly persistently mod mod sp mod free speci cations called data sp 
proposition equally just persistent freeness strongly persistent freeness 
unit identity freeness condition means model mod sp model morphism unique morphism free extensions allow express certain inductive properties con cise way 
example transitive closure arbitrary relation speci ed free construct casl follows example spec sort elem pred elem elem spec free pred elem elem forall elem corresponding structured speci cation constructed follows presentation consisting sorts predicates axioms declared signature 
denotation speci cation get free obvious inclusion 
free construct generation datatypes 
examples consider speci cation nite sets arbitrary elements casl example spec sort elem free type finset elem fg elem finset elem finset elem op finset elem finset elem finset elem assoc comm idem unit fg expands spec sort elem free sort finset elem ops fg finset elem elem finset elem finset elem finset elem finset elem forall elem fg question free models exist leads notion liberality de nition institution sign sen mod theory morphism said liberal model model mod free called strongly persistently liberal strongly persistently mod free institution called liberal theory morphisms liberal class theory morphisms called liberal theory morphism liberal 
guess liberal institution free sp consistent sp case counterexample shows example institution eq equational logic know liberal see theorem 
consist sort plus unary operation inclusion 
clearly consistent 
free inconsistent model freely extended adding chain elements 
model allow empty carrier sets restrict oneself strict theory morphisms get result see section 
free reduct 
show consistency free sp need strongly persistent liberality proposition strongly persistently liberal consistent free consistent 
proof 
mod consistency mod free strongly persistently mod free 
mod free free consistent 
introduce subclasses speci cations formed speci cation building operations introduced far 
classes important study preservation properties institution representations 
sign sen mod institution classes signature morphisms sign 
class structured speci cations smallest class containing jsignj sen sp sp structured speci cations sp sp translate sp structured speci cation sp derive sp structured speci cation sp free sp structured speci cation sp class structured speci cations smallest class structured speci cations sp sp structured speci cations sp sp translate sp sign structured speci cation sp derive sp structured speci cation sp institution representations order relate sublanguages casl relate underlying institutions 
notion institution representation called simple map institution 
idea institution representation encode institution institution simple institution representation institution institution consists components translation signatures presentations 
signature task nd encoding way 
particular model category approximate model category 
consider example translation pfol fol cf 
examples 
partial function symbol encoded total function symbol assuming unde nedness encoded extra error values models 
need de nedness predicates sort distinguish de ned values unde ned values 
assume partial logic strict 
assume encoding total functions deliver de ned de ned arguments 
expressed axiom included 
explains presentation just signature 
translation sentences sentences 
reason sentence translation goes signature translation similar reason sentence translation institution goes signature morphism 
signature encoded theory expected symbol translated corresponding symbol 
assume sentence derivation tree decorated symbols translation just keeps structure tree translates symbols correspondence symbols 
example just replace partial function symbols total function symbols 
translation models models giving mentioned relation models models contravariance model translation de nition institution 
example extract model strict partial functions model total functions re ecting de ned values sketched just take carriers partial model interpretations de nedness predicates total model total functions restricted new carriers yielding partial functions 
happens model translation opposite direction 
example partial model adding element carrier representing unde ned 
formalized natural transformation natural see counterexample 
naturality essential want translate structured speci cations institution representation see propositions 
explains direction model translation 
condition condition require translated model satis es sentence original model satis es translated sentence 
called representation condition 
formally institutions simple institution representation called simple map institutions consists functor sign pres natural transformation sen sen natural transformation mod op mod representation condition satis ed sign mod sen sig detail means signature sign translated presentation pres signature morphism sign translated presentation morphism pres signature sign sentence translation map sen sen model translation functor mod mod 
naturality means signature morphism sign sen sen sen sen sen sen meseguer requires th th simple formulations equivalent meseguer extension fact presentations theories 
mod mod oo mod mod oo mod mod oo oo commute 
illustrate de nition informal examples 
formally introduced section 
example simple institution representation going equational logic rst order logic equality 
algebraic signature translated rst order signature just set predicates empty 
sentence translation just inclusion equations rst order sentences 
rst order model empty set predicates translated just considering algebra 
example institution representations capture encoding richer institution poorer example sketched shows de ne simple institution representation going partial rst order logic equality rst order logic equality de ned follows partial rst order signature translated total encoding partial function symbol total plus new unary predicate de nedness new operation symbol 
unde ned sort means heavily overloaded 
furthermore add axioms stating hold encoded total functions preserve totality re ect strictness partial functions re ect holding predicates implies hold arguments 
sentence translation done replacing partial function symbols total functions symbols encoding replacing strong equations equations existence equations conjunctions equation de nedness sides equation replacing de nedness leaving predicate symbols 
total model translated signature just take carriers partial model interpretations de nedness predicates total model total functions restricted new carriers yielding partial functions 
de nition simple institution representation extend translation structured speci cations extending de nition sp speci cation form sp ax sp speci cation form sp sp sp sp sp sp speci cation form translate sp sp translate sp sp speci cation form derive sp sp derive sp sp speci cation form free sp sp free sp note axioms ax added presentations translations lead extension signature union derive free extend signature 
crucial interaction institution representations proposition 
occasionally need notion conjunctive institution representation 
fin set set covariant nite powerset functor mapping set set nite subsets function function nite subset image institutions conjunctive institution representation consists functor sign pres natural transformation mod op mod natural transformation sen fin sen representation condition satis ed sign mod sen sig possible combine sentence theoretic property conjunctive model theoretic properties representations going introduce 
arbitrary simple institution representations weak preservation properties 
practical purposes needs stronger preservation properties preservation semantical consequence model classes 
strengthen notion simple institution representation various ways 
faithful institution representations rst notion faithful representations important re proof calculi theorem provers 
usually proof calculi theorem provers generate entailment relation sets sentences sentences institution entailment relation said sound complete de nition simple institution representation called faithful institution representation pointwise surjective objects surjective objects 
example institution representations examples faithful 
partial model completed total model adding element carrier interpretation representing unde ned xpoint functions predicates hold 
point completion just generates original model model translation 
faithful representations known borrowing theorem holds proposition institutions faithful institution representation 
semantical entailment preserved signature set sentences sentence ax sig sound complete theorem prover speci cations target institution faithful institution representation re sound complete theorem prover speci cations source institution 
word theorem provers speci cations lifted faithful institution representations 
point concerns theorem proving structured speci cations 
want re theorem provers structured speci cations excluding free studied section assume additional property de nition simple institution representation class signature morphisms said weak amalgamation property signature morphism diagram mod mod mod mod oo mod mod oo admits weak amalgamation models mod mod mod example institution representation example trivially satis es weak amalgamation property class signature morphisms eq model translations isomorphisms 
example class injective signature morphisms pfol weak amalgamation institution representation example seen follows model model 
extend model follows sort image carrier sort just dm hold 
interpreted function symbol outside image interpreted interpretation delivered argument outside result de ned due partiality function 
predicate symbol outside image interpreted false argument outside showing weak amalgamation 
proposition proved proposition institutions institution representation 
signature structured speci cation sp mod sp mod sp includes de ned mod sp 
weak amalgamation property mod sp mod sp sp contain free derives morphisms faithful weak amalgamation property mod sp mod sp faithful weak amalgamation property sentence sp sp sig tools theorem proving structured speci cations target institution re theorem proving structured speci cations source institution 
means theorem provers structured speci cations free hiding morphisms lifted faithful institution representations weak amalgamation 
shown faithfulness weak amalgamation necessary get result 
discrete subinstitution representations de nition simple institution representation said discrete subinstitution representation embedding categories pointwise injection bijection objects 
natural isomorphism said subinstitution representation 
said discrete subinstitution discrete subinstitution representation example institution representation example subinstitution representation example discrete subinstitution representation partial model possible add number unde ned elements model representing 
model translation bijective 
crucial point discrete subinstitution representations model classes loose semantics preserved bijective objects 
especially important casl speci cation languages model theoretic semantics speci cation denotes signature class category models 
discrete subinstitution representation faithfully lifts model theoretic semantics source target institution 
word loose semantics lifted discrete subinstitution representations 
loose semantics context means just class models speci cation semantics 
course rst order models just nitely generated ones depends model functor institution 
persistently liberal institution representations needed institution representation exhibit interaction liberality free construct 
answer notion introduced name categorical retractive simulation de nition simple institution representation called persistently liberal sign left adjoint simultaneously right inverse id write want chose particular additionally sign right adjoint called persistently bi liberal write want chose particular proposition persistently bi liberal representation id proof 
proposition 
term liberal accordance stresses connection liberality institutions 
example institution representation examples persistently bi liberal just inverse isomorphism example institution representation example bi liberal partial model adding unde ned values freely free completion partial model adding just unde ned value point completion 
study persistently liberal institution representations interact liberality strengthening result drop assumption existence mod free models 
proposition persistently liberal institution representation 
free constructions lifted sense theory morphism mod mod mod free mod free 
theory morphism liberal liberal 
liberal liberal 
liberal liberal 
word free constructions lifted persistently liberal institution representations 
proof 
mod mod mod mod oo mod mod oo apply proposition mod mod 
directly follow 
example shows assumption persistent liberality needed get result 
consider persistently bi liberal representations interact structured speci cations 
de nition institutions class signature morphisms persistently bi liberal representation called natural mod mod mod mod mod mod commutes 
similarly proposition persistently bi liberal representation natural sp structured speci cation sentence 
mod sp mod sp mod sp mod sp mod sp mod sp sp sp sig 
proof 
prove simultaneously induction sp sp mod sp representation condition sig mod sp 
follows inductive argument proof lemma cf 
proposition 
sp sp sp mod sp mod sp mod sp induction hypothesis rinv mod sp mod sp mod sp 
follows way 
sp translate sp mod sp mod sp induction hypothesis rinv mod sp natural mod sp mod sp 
follows way 
sp derive sp mod sp implies mod sp induction hypothesis mod sp natural 
mod sp 
conversely assume mod sp 
mod sp 
mod sp 
follows way 
sp free sp induction hypothesis mod sp mod sp implies mod sp mod sp mod sp mod sp 
restrict mod sp mod sp mod sp mod sp mod sp mod mod sp mod mod mod oo concerning mod sp strongly persistently mod free 
natural apply proposition mod mod get holds strongly persistently mod free 
turn holds mod sp 
concerning mod sp 
strongly persistently mod free 
proposition id id natural apply proposition mod mod get strongly persistently mod free 
mod sp 
direction 
direction mod sp 
mod sp 
get mod sp 
sp de nition mod sp implies mod sp implies representation condition mod sp implies sig de nition sp sig 
proposition persistently bi liberal representation having weak amalgamation property natural sp structured speci cation sentence 
mod sp mod sp 
sp sp sig 
proof 
induction sp base case structured speci cations covered proposition 
induction steps proof lemma cf 
proposition 
follows way proof proposition 
meseguer weakened notion persistently liberal representations called extensions 
de ned persistently liberal representations requirement id replaced id 
meseguer additionally requires isomorphism unit adjunction light proposition requirement super uous 
adding requirement existence right adjoint get bi extensions generalization strongly persistently bi liberal representations 
category theoretic perspective generalization quite natural 
example pointwise equivalence categories representation bi extension 
loose holding proposition example shows example id id eq eq carriers fsg sort operations uniquely determined requirement obvious bijections fsg isomorphism 
bi extension take just identity 
contrary proposition mod sp mod sp just mod sp mod sp just identity consist sorts consists sort unique signature morphism 
mod mod derive di erent mod derive 
problem image reduct functor mod closed isomorphism reason behaviour functor transportable 
sense close model classes speci cations isomorphism 
need done presentations structuring operations preserve closedness isomorphism 
proposition hold general bi extensions persistently bi liberal representations 
refrained closing model classes isomorphism standard literature structured speci cations 
comparison brie compare di erent notions representations introduced far 
proposition persistently liberal institution representation faithful 
discrete subinstitution representation faithful admits weak amalgamation arbitrary subinstitution representation discrete subinstitution representation persistently bi liberal natural arbitrary natural subinstitution px 
ks persistently bi liberal 
discrete subinstitution px faithful weak amalgamation number counterexamples showing diagram implications optimal 
example institution representation examples faithful persistently bi liberal discrete subinstitution representation partial model possible add number unde ned elements model representing 
model translation bijective 
example modify institution representation examples omitting operations axioms involving 
resulting institution representation bi liberal admit weak amalgamation class signature morphisms adding partial function symbol signature 
take model containing truly partial function functions total 
represented model unde ned elements 
possible represent extension require presence unde ned element carrier 
example modify institution representation example follows add sentence sort 
unique unde ned element 
sided inverse model translation constructed partial structure form point completion just adding element interpretation carriers functions map behave unde nedness partial functions mapped 
predicates false 
interpretation predicates xed de ning axioms 
shows representation discrete subinstitution faithful representation 
de ned inverse model translation de nes bijection model classes isomorphism model categories 
homomorphism need preserve de nedness partial functions homomorphism preserve re ect de nedness representations partial functions 
inverse construction unique inverse construction models extended functor 
shows institution representation subinstitution representation persistently liberal 
consider pfol signature sort partial operation symbol inclusion signature consisting just sort 
set free model just interpreted unde ned function 
unique representation unde ned element yielding unde ned element 
free homomorphism starting preserve unde ned element homomorphism model de ned point 
shows assumption persistent liberality really needed proposition 
contains example persistently liberal representation fdg natural signature morphism diagrams denote di erent types representation di erent arrows 
faithful lifting theorem provers speci cations 
persistently liberal lifting free constructions implies 

persistently bi liberal lifting theorem provers certain structured speci cations including free implies 

discrete subinstitution lifting loose semantics theorem provers structured speci cations excluding free implies 

subinstitution implies 



intersections subinstitutions section want de ne subinstitutions casl institution removing di erent features 
need intersections subinstitutions 
family subinstitutions sign sen mod intersection de ned follows signatures sign sign 
category embeddings categories closed image embeddings intersection 
models mod mod 
sentences sen sen sen sen sen domain codomain restriction sen exists naturality injection sen sen appropriate restriction denoted satisfaction satisfaction condition inherited 
note intersection limit category institutions simple representations limit projections injections better name inject intersection 
translating language constructs said speci cation language institution semantics language constructs de ned mapping language constructs mathematical concepts de ned terms institution 
mainly concentrate translation basic speci cations correspond presentations level concepts 
speci cation languages underlying institutions institution representation translation obtained follows basic speci cation sp written apply semantics obtain presentation obtain presentation nd basic speci cation sp having semantics languages step quite straightforward 
structured speci cations extend translation inductively de nition 
note assumes structuring mechanisms 
translation di erent structuring mechanisms scope 
mapping basic speci cations presentations underlying institution formally de ned speci cation languages quite complex informally discuss institution representation lifts translation corresponding language constructs 
cases indicate better translation obtained going way sp sp underlying theories direct translation sp sp advisable similar language constructs expressing complex presentations concise way constructs lengthy expansions terms underlying institution 
casl casl expressive language combining subsorts partiality rst order logic induction expressed called sort generation constraints institution underlying casl introduced steps rst introduce sorted partial rst order logic sort generation constraints equality subsorted partial rst order logic sort generation constraints equality subpcfol described terms partial order logic de nition institution signatures sorted signature tf pf consists set sorts sorted families tf tf pf pf total function symbols partial function symbols respectively tf pf constants treated functions arguments family pw predicate symbols 
note function predicate symbols may overloaded occurring sets 
ensure ambiguity sentences symbols quali ed pro les 
casl language constructs see section quali cations may omitted unambiguously determined context 
introduce notation 
write tf tf including special case empty 
pf pf including special case 
empty pw function symbol tf pf call 
resp pro le argument sorts result sort 
predicate symbols call pro le argument sorts 
function extension nite strings 
nite string sets sn write mw cartesian product sn signatures tf pf tf pf signature morphism consists map map tf pf tf pf preserving totality map pw identities composition de ned obvious way 
gives category signatures 
models sorted signature tf pf sorted model consists non empty carrier set sort partial function written just mw function symbol tf pf function total tf predicate written just mw predicate symbol pw sorted homomorphism consists family functions property tf pf mw de ned sn pw mw implies sn identities composition de ned obvious way 
concerning reducts signature morphism tf pf model model tf pf pw de ned preserves totality 
homomorphism reduct homomorphism de ned sentences sorted signature tf pf 
variable system sorted pairwise disjoint family variables variable system 
sets sorted terms sort variables sets satisfying rules tf pf note term unique sort 
sorted algebra putting tf pf pw variable assignments total value term variable assignment may unde ned due application partial function evaluation term 
evaluation term variable assignment de ned follows see variable valuation term evaluation inductively de ned sn de ned sn de ned unde ned tf pf term say interpretable dom case call value valuation 
sorted atomic formula variables application quali ed predicate symbol terms appropriate sorts existential equation terms sort strong equation terms sort assertion de nedness term set af sorted atomic formulas variables set satisfying rules af pw af existential equations af strong equations def af de nedness assertions 
set fo sorted rst order formulas variables set satisfying rules af fo fo read false fo fo fo fo fo fx sg omit brackets unambiguous usual abbreviations 
sort generation constraint states set sorts generated set operations 
technically sort generation constraints contain signature morphism component needed able translate signature morphisms satisfaction condition 
formally sort generation constraint signature triple tf pf tf pf sentence closed sorted rst order formula sorted rst order formula empty set variables sort generation constraint 
signature morphism variable system get variable system putting term algebra total inclusion construed variable valuation extension total 
translating rst order formula term translated inductively extended atomic formulas mapping predicate symbols rst order formulas translating sorts quanti ed variables variables remain 
translation constraint constraint 
satisfaction relation evaluation term variable assignment may unde ned evaluation formula de ned true false 
valued logic 
application predicate symbol sequence argument terms holds valuation values terms de ned give tuple belonging de nedness assertion concerning term holds value term de ned 
existential equation holds values terms de ned identical strong equation holds values terms unde ned notions equation coincide de ned terms 
formally satisfaction formula fo variable valuation de ned inductively structure de ned de ned equal de ned equal unde ned def de ned implies valuations fx sg extend fx sg fx sg 
formula satis ed model satis ed variable valuations model 
constraint satis ed model carriers sorts generated function symbols sort value term containing function symbols variables sorts assignment sort generation constraint assume loss generality result sorts function symbols occur just leave function symbols satisfying requirement 
satisfaction sort generation constraint model ected term witnessing satisfaction constraint application function symbol result sort outside just replaced variable sort gets assigned value evaluation function application 
concerning satisfaction condition need lemma lemma signature morphism model variable system 
valuation valuation correspondence 
jt jm jt proof 
put inverse unique property follows induction 
lemma signature morphism model variable system formula fo proof 
induction 
strong equations sides unde ned lemma sides unde ned de nition sides unde ned 
quanti cations fx sg extending fx sg induction hypothesis fx sg extending fx sg fx sg extending fx 
cases treated similarly 
satisfaction condition rst order formulas follows easily lemma noting lemma surjective valuations 
satisfaction condition sort generation constraints obvious extra signature morphism component sort generation constraints introduced 
subsorted partial order logic subsorted partial rst order logic de ned terms partial rst order logic 
basic idea reduce subsorting injections sorts 
subsorted institution injections occur explicitly sentences casl language may left implicit 
apart injections partial projection functions sided inverses injections membership predicates 
de nition institution subpcfol signatures notion subsorted signatures extends notion signatures goguen meseguer allowing total function symbols partial function symbols predicate symbols subsorted signature tf pf consists sorted signature tf pf re exive transitive subsort relation set sorts 
note required antisymmetric allows declare isomorphic sorts injections correspond change representations 
relation extends pointwise sequences sorts 
drop subscript obvious context 
subsorted signature tf pf de ne overloading relations called monotonicity orderings function predicate symbols respectively tf pf exist exists signature morphism sorted signature morphism preserves subsort relation overloading relations 
note due preservation subsorting preservation overloading relations simpli ed implies implies subsorted signature tf pf associate sorted signature extension underlying signature tf pf total injection function symbol inj pair sorts partial projection function symbol pr 
pair sorts unary membership predicate symbol pair sorts assume symbols injection projection membership 
formulas write 
signature morphism extend signature morphism just mapping injections projections memberships corresponding injections projections memberships turns functor sign subpcfol sign models subsorted models ordinary sorted models satisfying set axioms variables universally quanti ed inj identity inj inj embedding injectivity inj inj inj transitivity pr inj projection pr pr projection injectivity def pr membership inj inj inj sn inj inj inj sn function monotonicity inj inj sn inj inj sn predicate monotonicity homomorphisms homomorphisms 
lemma subsorted signature morphism 
sen proof 
preserves subsorting injections projections membership overloading relations sentences just correspond 
obtain reduct subsorted model subsorted signature morphism take sorted reduct mod lemma sen 
satisfaction condition mod 
mod subsorted model de ne mod subpcfol mod 
sentences subsorted sentences ordinary sorted sentences 
sentence translation subsorted signature morphism just sentence translation sorted signature morphism 
satisfaction models sentences taken satisfaction satisfaction condition inherited casl language constructs level constructs treated informally just give brief overview constructs writing basic speci cations speci cations small casl 
detailed description casl language summary casl semantics 
casl language provides constructs writing sort subsort operation predicate declarations contribute signature obvious way 
operations predicates subsorts de ned leads corresponding declaration plus de ning axiom 
operation predicate symbols may overloaded may lead ambiguities formulas 
formula formed unique fully quali ed expansion equivalence overloading relations operations predicates mix syntax provided 
precedence associativity annotations serve disambiguate terms containing mix symbols 
syntax literals numbers strings allows speci cation usual datatypes purely casl need magic built modules 
binary operations declared associative commutative idempotent unit 
leads corresponding axiom case associativity associativity annotation 
list nil prec spec list sort elem free type list elem nil head 
elem tail 
list elem sort nelist elem fl list elem op list elem list elem list elem forall elem list elem nil concat nil concat cons fig 

speci cation lists arbitrary element sort casl 
type free type generated type constructs allow concise description datatypes 
expanded declaration corresponding constructor selector operations axioms relating selectors constructors 
case generated free datatypes sort generation constraint produced 
free datatypes additionally lead axioms state injectivity constructors disjointness images 
typical casl speci cation shown fig 

translation theory subpcfol institution underlying casl shown fig 

translation generated casl tool set uses notation slightly di erent de nition subpcfol 
notations close easy understand fig 

translation casl constructs underlying mathematical concepts formally de ned casl semantics 
formal semantics missing languages discuss language constructs informally 
subinstitutions casl despite rst order casl quite rich complex language 
relating casl languages quite useful single sublanguages casl 
de ne number subinstitutions casl institution subpcfol corresponding restriction casl language straightforward see 
de ne subinstitutions subpcfol just imposing restrictions sorts subsorts elem elem list elem list elem nelist elem nelist elem nelist elem operations list elem list elem list elem elem list elem list elem head list elem elem nil list elem tail list elem list elem predicates axioms generated list elem list elem elem list elem list elem nil list elem selector head forall elem list elem elem head list elem elem elem list elem list elem elem list elem selector tail forall elem list elem list elem tail list elem list elem elem list elem list elem elem list elem disjoint nil forall elem list elem nil list elem elem list elem list elem elem list elem injective forall elem list elem elem list elem elem list elem list elem elem list elem elem list elem list elem elem list elem elem elem list elem list elem nelist elem forall list elem list elem nil list elem list elem nelist elem concat nil forall elem list elem list elem list elem list elem nil list elem list elem list elem concat cons forall elem list elem list elem list elem list elem elem list elem list elem elem list elem list elem elem list elem list elem elem list elem list elem list elem list elem list elem fig 

translation speci cation list theory subpcfol 
smaller signatures axioms 
implicitly means take full subcategory signatures satisfying restriction restrict model sentence functors satisfaction relation signature subcategory 
restriction sentences leads replacement sentence functor 
case quite obvious construct corresponding subinstitution representation subpcfol number features casl section describe number casl features negatively specifying feature subinstitution casl leaves exactly feature 
possible casl combination features 
combination casl features obtained intersecting subinstitutions exclude exactly undesired features 
note combination features scratch far complicated 
partiality institution restriction subpcfol signatures empty set partial function symbols sentences involve partial projection symbols 
note de ned reduction involves signatures containing partial projection symbols 
symbols sentences redundant models meaning leaving leads isomorphic model categories 
justi ed call institution total algebras 
predicates institution restriction subpcfol signatures empty set predicate symbols 
note signatures sentences involve membership predicate symbols 
obj community called sort constraints 
involves subsorting sort constraints 
section consider subsorting sort constraints 
note sort constraints confused sort generation constraints 
subsorting institution de ned 
subinstitution subpcfol extending signature trivial subsort relation subsort relation identity relation set sorts 
sort generation constraints institution subpfol restriction subpcfol sentences sort generation constraints 
equality institution subpcfol restriction subpcfol sentences involve strong existential equality 
number levels axiom expressiveness sequel introduce number subinstitutions subpcfol correspond di erent levels expressiveness axioms 
contrast previous subsection orthogonal features get hierarchy expressiveness 
order logic subpcfol trivially subinstitution 
positive conditional logic positive conditional logic precisely means universally quanti ed positive conditional logic 
usually means formulas restricted universally quanti ed implications consist premise conjunction atoms atom positive conditional means implicitly contain negative parts 
usually condition satis ed atomic formulas 
strong equations implicit implications sides de ned equal sides unde ned premise implication negative part formula 
strong equations may occur premises positive conditional axioms harmless implicit premise thought additional premise implication 
main motivation want proof techniques conditional term rewriting paramodulation semantical constructions initial models 
strong equations allowed premises see 
restriction subpcfol sentences form atomic formulas strong equation 
generalized positive conditional logic generalize form positive conditional formulas 
formula general kind equivalent set formulas standard conditional kind 
easy transformation generalized positive conditional logic plain positive conditional logic 
generalized positive conditional formulas allow conjunctions atoms removed writing conjunct implication original premise conjunct equivalences implications equivalence equivalent implications 
restriction subpcfol sentences form atomic formulas strong equation form atomic formulas strong equations 
atomic logic restriction subpcfol sentences form atomic formula strong equation 
restriction conditional logic unconditional universally quanti ed atomic formulas 
strong equations removed due conditional nature proved strong equations simulate positive conditional formulas 
terminology naming casl subinstitutions give component name various subinstitutions obtained combining casl features 
rst component vector tokens 
presence absence token denotes presence absence corresponding feature cf 
section 
second component determines level expressiveness due section 
assign tokens features sub stands subsorting stands partiality stands sort generation constraints equality symbol stands equality 
naming problem predicate feature 
firstly letter stands partiality 
secondly fol rst order logic horn horn clause logic quite standard contain token corresponding predicates 
deal predicate feature levels expressiveness section predicates endings fol stands unrestricted form axioms rst order logic stands restriction generalized positive conditional logic horn stands restriction positive conditional logic atom stands restriction atomic logic predicates endings stands unrestricted form axioms rst order logic stands restriction generalized positive conditional logic cond stands restriction positive conditional logic eq stands restriction atomic logic subset set tokens sub followed introduced endings denotes subinstitution obtained intersecting subinstitution subpcfol corresponding intersection subinstitutions subpcfol associated letters occurring set 
adopt convention equality sign put superscript 
interesting subinstitutions casl section shall help understand naming scheme means practice 
subpcfol read subsorted partial constraint rst order logic equality logic casl 
subpfol read subsorted partial rst order logic equality 
casl sort generation constraints 
described 
fol standard sorted rst order logic equality 
pfol partial sorted rst order logic equality 
order algebra predicates 
positive conditional fragment casl 
important properties initial models exists 
modulo empty carrier problem see section 
suitable encoding subsorting partiality conditional term rewriting paramodulation theorem proving 
positive conditional fragment plus sort generation constraints 
compared add induction techniques theorem proving tools 
burmeister partial quasi varieties modulo fact burmeister total function symbols 
total function symbols easily simulated partial ones totality axioms att algebras 
suitable restriction leads reichel 
meseguer rewriting logic embedded 
horn 
restricting get membership algebra equational type logic uni ed algebras 
course membership algebra equational type logic uni ed algebras just restrictions horn invented order represent complex logics subset horn horn logic programming pure prolog 
subsorted conditional logic 
similar equal obj see section 
cond sorted conditional equational logic atomic subset casl 
unconditional term rewriting applicable 
atomic subset plus sort generation constraints 
eq classical equational logic 
ceq equational logic plus sort generation constraints 
literature institutions typically de ned way allowing empty carrier sets casl excludes empty carriers 
problem discussed section 
representations subinstitutions casl order relate subinstitutions casl relate underlying institutions 
notion institution representations called simple maps institutions introduced section 
fol bool section xx sol fol oo dd oo oo cosasc bool section oo pfol ks oo subpfol oo ks oo cosasc bool section oo index arrow types 
faithful lifting theorem provers speci cations 
persistently liberal lifting free constructions implies 

persistently bi liberal lifting theorem provers certain structured speci cations including free implies 

discrete subinstitution lifting loose semantics theorem provers structured speci cations excluding free implies 

subinstitution implies 



fig 

rst order level order level diagram fig 
shows rst order subinstitutions casl expressiveness fol bit weaker fol represented fol faithfully subinstitution 
arrows labeled numbers brackets refers subsections corresponding representations described detail 
obvious subinstitution representations labeled 
diagram shown fig 
obtained adding institution fig 

added institution sol second order logic equality fol strong express sort generation constraints directly 
institution fig 
strictly expressive fig 
sort generation constraints expressed rst order logic sort generation constraints specify natural numbers isomorphism follows odel incompleteness theorem 
institution sol second order logic described follows lsl larch section oo lsl bool section tt sol oo oo oo oo subpcfol oo oo index arrow types 
faithful lifting theorem provers speci cations 
persistently liberal lifting free constructions implies 

persistently bi liberal lifting theorem provers certain structured speci cations including free implies 

discrete subinstitution lifting loose semantics theorem provers structured speci cations excluding free implies 

subinstitution implies 



fig 

rst order level sort generation constraints 
arrow hooks signatures signatures signature morphisms fol models models model homomorphisms reducts fol sentences sentences may contain variables may typed sorts function types predicate types pred quanti cations sentences variables higher types allowed 
variables function predicate types may applied arguments function predicate symbols fol satisfaction satisfaction de ned fol exception valuations map variables function type functions type variables predicate type predicates type 
mapping fol fol idea simply replace equality congruence relation 
signatures fol signature mapped fol theory extends adding predicate symbols overloaded sort axiomatized congruence predicates 
models model translated factoring carriers 
func tions predicates act equivalence classes congruence 
homomorphism translated congruence class 
de ned implies predicates preserved homomorphisms 
sentences sentence translation done replacing 
satisfaction prove representation condition de ne mapping valuations follows model valuation de ne easily proved induction congruence axioms 
induction sen show concerning strong equations concerning predicate applications pm congruence axiom 
concerning quanti cation fx sg extending fx sg induction hypothesis fx sg extending fx sg fx sg extending fx sg 
cases treated similarly 
representation condition follows noting surjective valuations 
representation seen faithful follows model fol turn model letting interpreted identity relation 
model pre image model translation 
representation persistently liberal example consist just sort model consisting points model consisting equivalent points 
just homomorphism 
representation persistently liberal just homomorphism impossible empty empty carriers allowed contradict requirement 
note representation generalized level sort generation constraints straightforward way preserved quotients nat signature consisting sort nat total operations nat suc nat nat 
nat model consisting copies natural numbers identi ed congruence relation 
operation yields zero copy naturals term generated 
consist just copy naturals term generated 
mapping fol idea replace predicates boolean valued functions 
note booleans axiomatized signatures signature mapped adding theory bool replacing predicate symbol total function symbol bool spec bool sort bool ops true false bool var bool true false true false strictly speaking bool renamed order disjoint signature 
models model translated replacing bool valued function corresponding predicate 
sentences sentence translation done replacing atomic formulas bool rue bool sort generation constraints left unchanged 
satisfaction representation condition proved straightforward way 
straightforward show gives discrete subinstitution representation 
note get subinstitution representation 
homomorphisms fol need preserve just truth falsehood predicates homomorphisms representation need preserve truth falsehood represented predicates 
conjecture subinstitution representation fol fol strictly expressive construct exploits homomorphism free construct possible express transitive closure arbitrary parameter relation conjecture possible mapping subp fol fol translation subp fol fol trivial subpcfol de ned terms signatures signature mapped theory 
models model translation identity 
sentences sentence translation identity 
satisfaction representation condition follows immediately 
trivially gives subinstitution representation 
mapping pfol fol translation pfol fol described 
re ne translation 
main idea de nedness predicate divide carrier de ned unde ned elements 
de ned elements represent ordinary values unde ned elements represent unde ned 
partial functions possibly yield unde ned element 
specify unde ned element may 
signatures pfol signature tf pf translated fol theory having signature sig tf pf 
sg set axioms ax 
tf 
pf plays role de nedness predicate elements inside called de ned outside called unde ned 
axioms signature translation state de ned element unde ned element total operations total operations predicates strict 
signature morphism translated theory morphism acts parts included maps added structure signature component added structure mapped component 
models structure fol translated partial structure pfol restricted tf total function unde ned 
pf homomorphisms translated restricting carriers de ned predicates preserved homomorphisms 
sentences sentence translation keeps structure sentences maps strong existential equality appropriate de nedness predicate de nedness mapped quanti ers relativized set de ned elements 
formally sentence pfol translated sentence def satisfaction prove representation condition need talk partial variable valuations 
necessary valuation model map assign unde ned element variable 
model correspond truly unde ned variable 
consider partial variable valuations evaluation terms satisfaction formulas de ned see section exceptions de ned unde ned valuations fx sg extend fx sg de ned 
note new de nitions coincide old ones total valuations 
achieve crucial require extended valuation de ned clause satisfaction quanti ed formulas 
lemma lemma formula total valuation model de ne partial valuation unde ned de ned terms sort case sides 
holds pfol fol sig proof 

induction structure variables need just de nition 
applications total partial operation symbols axioms 
induction structure 
considering existence equations pfol de ned equal fol sig fol sig considering universally quanti ed formulas pfol fx sg extending fx sg de ned fx sg pfol fx sg extending fx sg fol sig fol sig fol sig cases treated similarly 
representation condition shown follows 
sentence unique empty valuations 
pfol pfol fol sig fol sig model translation easily shown surjective partial structure form point completion just adding element carriers interpretation 
functions map behave unde nedness partial functions mapped 
predicates false 
predicate true 
institution representation faithful 
shown persistently bi liberal way example 
argument example representation weak amalgamation property class injective signature morphisms 
adding sentences 
unique unde ned element 
representation discrete subinstitution representation translation strong equations simpli ed translating just ordinary equations 
representation longer persistently liberal 
mapping representation extends discrete subinstitution representation described previous section 
due need translate sort generation constraints able generate unde ned elements models 
order able correctly model partial functions ensure unde ned elements 
done adding axioms 

just unde ned element unde ned elements term generated 
method leads loss persistent liberality representation 
signatures signature translated addition axioms 

unique unde ned element 
models models translated exactly 
sentences order sentences translated 
sort generation constraint translated sjs sg extension de ned mapping added symbols corresponding added symbols 
satisfaction representation condition formulas proved 
concerning sort generation constraints note model translation just removes interpretation carriers 
occur functions strict model interpretations removed sjs sg model interpretations removed 
wants persistently bi liberal representation translating sort generation constraints restrict sort generation constraints including total function symbols case unique unde ned element necessary 
naturality mapping subpfol idea add new elements represent unde ned retain old sorts unde ned elements 
sort set doubled sort gets companion supersort contains values plus unde ned elements 
keep old sorts de nedness predicate just membership old sorts 
add companion supersort sorts necessary term involving partial operation symbols exists 
signature translation introduce versions function predicate symbol original overloaded strict extension just propagates unde ned element 
strict extension necessary want apply function predicate symbol term involving partial operation symbols term translated term sort partial functions result sort functions result sort partial projections 
introduce new special function symbols proj 
need axiom subsorts interpreted non empty carriers anyway 
signatures tf pf subpfol signature 
fs exists variable system term sort built partial function symbol projection fs translated signature sig consisting sort set ordered augmented total function symbols tf 

pf 
tf pf fs proj 
proj 
predicate symbols fs axioms ax 
proj proj inj inj proj proj tf 
pf signature morphisms translated way section 
models structure translated partial structure subpfol having carriers sets total functions predicates inherited partial functions result sort 
straightforward inverse structure extended adding new carriers fg interpreting adding assume contain sorts form higher order extension type constructor behaving 
strict extensions map 
faithful institution representation 
sentences sentence subpfol translated sentence inductively follows tf hs sort sn 
pf sort sn sort sn pr proj def sort sort sort easily extended atomic formulas 
apart mapping de nedness projection special symbols introduced translation mainly checks original version function predicate symbol strict extension propagates unde ned element 
strict extension necessary argument term involves partial operation symbol 
satisfaction representation condition proved way similar proof 
case show representation persistently bi liberal point free completion example 
argument example representation weak amalgamation property class injective signature morphisms 
modifying described get representation discrete subinstitution representation 
example naturality 
mapping subpcfol translation similar previous section 
due need translate sort generation constraints able generate unde ned elements models 
think sorts question mark translation sort generation constraints 
sort generation constraints involving partial function symbols partial function symbols translated function symbol result sort form projection symbols help get back result sort forces consider generation sorts 
order able restrict models exactly unde ned element 
leads loss persistent liberality representation 
signatures signature translated addition sentences 
added theory 
unique unde ned element 
models models translated exactly 
sentences order sentences translated 
sort generation constraint translated sjs sg function symbols form pr replaced proj extension de ned mapping added symbols corresponding added symbols 
satisfaction representation condition formulas proved 
restore persistent liberality restriction sort generation constraints involving partial operation symbols case extra axioms operations needed 
mapping sub fol fol restriction translation sub pfol fol described section leaves partial projection symbols axioms involving 
problem connected membership predicate originally axiomatized partial projections de nedness def pr just leave axioms membership predicates interpreted unintended way 
axioms replaced inj comparison comparing ways encoding subpfol fol see way disadvantage new sorts introduced advantage original sort system interpretation kept 
sorted total speci cations left unchanged encoding pfol may adapted property 
mapping sol adds sort generation constraints fol expressed fol translated induction schemes expressed second order logic equality sol second order quanti cation predicates 
signatures signatures signature morphisms translated identically 
models models model homomorphisms reducts translated identically 
sentences order sentences translated identically 
sort generation constraint assume loss generality result sorts function symbols occur see corresponding section sort generation constraints introduced 
fs ff sort generation constraint translated sol sentence pred sn pred 
xm xm satisfaction prove representation condition model sort generation constraint 
call sorted set jm closed closed application operations lling arbitrary values lemma variable system fp pred sn pred assignment consider sorted set consisting 
closed 
proof 
directly follows form note lling arbitrary values captured condition conjunction premise required 
satis es sort generation constraint smallest closed set jm closed implies jm 
implies satis es translation sort generation constraint 
positive conditional level positive conditional level see fig 
generalized conditional logic 
reason want able equivalences just implications translations sentences possible ordinary conditional logic cond horn 
note conjunctive subinstitution representation generalized conditional logics corresponding ordinary conditional logic 
note cases diagram remains deleted arrows conjunctive representations 
denotes meseguer membership equational logic see arrows membership algebra described 
equational type logic uni ed algebras similar frameworks eq cosa section cosasc obj cafeobj section act asf vv oo uu prolog oo oo vv oo ks uu oo conditional casl ks hep section oo cosasc obj cafeobj section ks index arrow types 
faithful lifting theorem provers speci cations 
persistently liberal lifting free constructions implies 

persistently bi liberal lifting theorem provers certain structured speci cations including free implies 

discrete subinstitution lifting loose semantics theorem provers structured speci cations excluding free implies 

subinstitution implies 



fig 

positive conditional level added corner diagram arrow persistently liberal cases 
mapping directly idea representation rst order level replacing predicates boolean functions set booleans axiomatized positive conditional logic 
axiomatize single valued set bool truth values positive conditional logic closed products wellknown mal theorem theory having model valued boolean carrier sets models boolean carrier set cardinality 
map predicates partial functions bool 
signatures signature translated adding theory spec bool sort bool ops true bool axioms bool replacing predicate symbol partial function symbol bool 
models model translated replacing partial function bool domain considered predicate 
note model homomorphisms translated identically behave way domains partial functions predicates 
sentences sentence translated replacing occurence predicate symbol application equation bool rue 
satisfaction representation condition straightforward show 
easy show representation subinstitution representation 
mapping representation just restricted signatures trivial subsort relation 
mapping representation similar 
di erence predicate symbols translated total function symbol bool 
note represent predicates subsorts predicates may empty subsorts may 
leads loss subinstitution property persistently liberal representation seen follows tf signature model extends interpreting bool ftrueg fp mw rue interpreted true true clearly homomorphism 
uniquely extended homomorphism putting bool true rue bool representation bi liberal 
natural choice interpret bool ftrue falseg 
models may junk truth values destroying uniqueness homomorphisms 
mapping representation just restricted signatures trivial subsort relation 
representation persistently liberal 
mapping persistently bi liberal representation works exactly representation rst order level axioms horn form 
mapping representation works similar representation rstorder level 
axioms horn form axiom 
axiom replaced new constant 
new constant essentially ect existential axiom homomorphisms preserve leads loss persistent liberality faithfulness 
mapping works persistently bi liberal representation rstorder level 
mapping restrict rst order level need eliminate de nedness predicates 
composition faithful representation 
mapping subinstitution representation works exactly representation rst order level axioms horn form 
mapping representation works similar 
di erence membership predicates deleted looking axioms see membership predicates just domains partial projections 
occurences sentences translated def pr mapping setting representation encounter diculty axiomatize membership predicates 
axiomatized domains partial projections 
partial functions hand 
representation rst order level problem solved axiomatization inj axiom horn form 
best moment just composition faithful representation 
mapping reasons composition faithful representation 
theorem proving liberality combine results previous subsections general results institution representations section obtain speci results theorem provers liberality 
fact allows conditional term rewriting paramodulation sound complete proof systems 
proof 
see 
theorem institutions shown fig 
allows re conditional term rewriting paramodulation sound complete proof systems speci cations 
proof 
chasing diagram fig 
section representation see institutions fig 
represented faithfully result follows fact corollary 
theorem institutions shown fig 
sol allows re rst order theorem prover speci cations 
proof 
chasing diagram fig 
see institutions fig 
sol represented faithfully fol 
result follows corollary 
theorem institutions shown fig 
allows re second order higher order theorem prover speci cations 
proof 
chasing diagram fig 
see institutions fig 
represented faithfully sol result follows corollary 
theorem institutions shown fig 
sol cosasc bool cosasc bool allows re rst order logic theorem prover structured speci cations free 
proof 
chasing diagram fig 
see mentioned institutions discrete subinstitutions fol result follows propositions 
theorem institutions shown fig 
lsl bool allows re second order higher order rst order wih induction theorem prover structured speci cations free 
proof 
chasing diagram fig 
see mentioned institutions discrete subinstitution sol result follows proposition 
theorem institutions shown fig 
lsl bool sol take subinstitution obtained forbidding sort generation constraints partial function symbols 
obtained institution allows re second order higher order rst order wih induction theorem prover injective structured speci cations 
proof 
chasing diagram fig 
see mentioned institutions subinstitution subpcfol sort generation constraints restricted total functions 
representation rst order level describes persistently bi liberal institution representation restricted subpcfol representation weak injective amalgamation property natural 
result follows proposition 
de nition institutions introduced far signature called strict sort ground term sort 
theory called strict signature theory morphism called target theory fact strict theory morphism liberal strict liberal 
proof 
modi cation empty carriers models allowed quite standard follows general results 
restriction strict theory morphisms ensures free model non empty carriers contained full subcategory models empty carriers 
free objects full subcategory free result follows 
theorem institutions shown fig 
strict liberal 
proof 
chasing diagram fig 
section representation see institutions fig 
represented persistently liberally fact strict liberal proposition lifted persistently liberal institution representations noting representations fig 
map strict theory morphisms strict theory morphisms 
larch shared language larch consists family languages supporting tiered approach speci cation 
speci cation consists programming language independent parts formulated larch language lsl programming language speci parts formulated larch interface languages 
relation casl programming languages worked treat larch shared language 
lsl institution translation explicit logic larch report 
introduce institution lsl ts interpret lsl constructs 
lsl inherited eq signatures lsl signatures signature morphisms eq models lsl models reducts eq sentences tf lsl signature 
sentence sentence eq sentence generated tf tf tf sentence partitioned tf tf tf operation symbol tf occurs exactly argument sort 
satisfaction satisfaction equation eq de ned eq satisfaction generated tf satisfaction fsg tf id ceq satisfaction partitioned tf satisfaction tf fop op lsl logical connectives standard sense sort boolean usual connectives built equations boolean simulate logical connectives 
introduce built boolean institution think better dealt level structured speci cation think lsl speci cation boolean automatically included user de ned speci cation 
obvious institution representation lsl signatures signatures translated identically 
models models translated identically 
sentences equations translated identically 
sentences form generated tf partitioned tf translated corresponding sentences de nition satisfaction 
satisfaction representation condition obvious 
translating lsl language constructs casl constructs overloading disambiguation terms operation symbols mix operation symbols treated way lsl casl 
diculty translation 
lsl built precedences speci ed casl precedence annotations note necessary override standard casl precedence scheme pre operations 
enumeration types expanded lsl theories larch report 
translating lsl casl advisable translate directly casl free types 
enumeration translated free type op succ axioms succ succ lsl union type union translated generated type translations directly correspond lsl expansion scheme 
note selectors successor operation succ total generally leads unwanted error elements 
want strange behaviour lsl partial operations 
lead translations free type op succ 
axioms succ succ def succ generated type require extend target institution act act originally equational logic extended conditional equational logic 
underlying institution cond modulo problem empty carriers treated section 
act languages constructs translated easily casl 
overloading act special case overloading casl 
act de nitions translated casl operation de nitions 
note strictly speaking hide locally de ned operation require large construct casl 
act distinguishes constructor function declarations 
lead declarations operations casl 
constructors additionally lead special axioms concerning equality predicate eq 
axioms included casl translation course 
alternative way dealing constructors described section 
asf language asf conditional equational logic 
underlying institution cond modulo problem empty carriers treated section 
asf initial semantics modules 
initial semantics chosen casl writing free 
speci cation 
concerning language constructs asf pre syntax special case casl mix syntax 
syntax de nition formalism called sdf built top asf exible 
sdf de nitions context free syntax translated mix syntax declarations casl 
sdf priorities associativity attributes available annotations casl fact casl design followed sdf design point 
concerning lexical syntax casl exible sdf possible rede ne lexical syntax casl xed built lexical syntax 
casl provides means de ne special literal syntaxes numbers strings list structures 
cover applications rede nition lexical syntax sdf 
asf allows product types result types functions provides tupling notation terms 
translation extra product sorts explicit tupling functions described translation applied translating asf casl 
overloading asf special case overloading casl 
asf function translated casl expansion constructs formulas underlying institution essentially asf casl 
informal comparison casl asf 
hep theories hep theories hierarchical equationally partial theories introduced reichel 
idea introduce domains partial operations structured way 
signatures hep signatures form tf pf def tf pf signature pfol founded partial order tf def mapping assigns tf nite set existence equations variables partial operation symbols occurring def strictly 
signature morphisms tf pf additional requirement def def models models tf pf models pfol dom equals aw def pf reducts de ned pfol sentences sentences tf pf sentences pfol satisfaction satisfaction de ned pfol note reichel theory morphisms de ned slightly general theory morphisms hep reichel de ne institution 
de nitions extract speci cation frame category theories th contravariant model functor mod th op cat categories 
signatures sentences separated slight restriction 
easy institution hep signatures hep signature tf pf def sent theory consisting signature tf pf axiom def def partial operation tf models model translation just identity 
sentences sentence translation identity 
satisfaction representation condition obvious 
set called weak institution representation direction hep uses encoding partial operation sorts axioms partial operations 
leads complex translated theories 
go details 
reichel de nes restrict subtheories theory initial interpretation 
easily translated free construct casl 
show translation free construct belongs level speci cation large scope 
obj cafeobj obj speci cation high level programming language supporting subsorting 
logic similar di erences 
apart empty carrier problem obj di erent way overload resolution 
furthermore casts supersort subsort partial functions casl total functions called retracts obj 
membership formulas obj attempts extend obj sort constraints casl membership formulas confuse casl sort generation constraints 
cafeobj successor obj extending obj hidden algebra modeling object orientation rewriting logic modeling concurrency comparison features corresponding objectoriented resp 
concurrent extension casl scope 
concentrate functional part cafeobj 
respect subsorting cafeobj report leaves open details states general constraints logic 
general constraints sucient de ne useful subsorted logic practical usefulness essential logic kind interaction subsorting overloading addition natural numbers restriction addition integers 
interaction obj missing general constraints cafeobj report 
restrictions obj signatures regularity dropped cafeobj case casl 
case substitute obj term disambiguation algorithm regular signatures supplied done casl 
worked cafeobj report assume cafeobj underlying logic obj 
distinguishing feature cafeobj sort comes equipped error supersort 
feature need treated level logic right place introduce error level language constructs function extracts signature institution speci cation introduce error 
institution order sorted algebra obj manual claims obj order sorted algebra developed 
describe institution cosasc coherent order sorted algebra enriched sort constraints introduced goguen meseguer detail appears complete detailed description literature de nition institution cosasc 
signatures order signatures triples tf partial order tf sorted signature conditions satis ed tf tf imply signature monotonicity tf arity greater equal regularity 
condition implies rank arity arity greater equal see 
connected component ltered elements connected component common upper bound local ltration 
conjunction regularity local ltration called coherence 
assume signature strongly locally ltered means elements connected component upper bound 
assumption needed setting institution representations omitted translating language constructs 
signatures tf tf osa signature morphism consists map han yan comes closest describing institution publicly available 
family maps tf tf morphism monotonicity tf tf preservation overloading tf applied arity yields arity preservation regularity 
assume upper bounds connected sorts preserved signature morphisms 
models tf order sorted algebra sorted tf algebra implies subsort inclusion tf tf imply mw equals mw mw algebra monotonicity 
homomorphisms sorted homomorphisms imply 
reducts de ned sorted algebras 
sorted reducts preserve inclusions signature morphisms preserve overloading resulting sorted algebra order sorted algebra 
sentences variable system tf family sets pairwise disjoint 
variable system set terms sort inductively de ned tf 
straightforward order sorted algebra 
lemma holding regular signatures 
lemma valuation unique homomorphic extension proof 
variable valuation sorted map algebra homomorphism de ned sn tf regularity de ned unique homomorphism extending 
equation omit sort index write just 
condition needed ensure reduct functors preserve monotonicity models cf 
lemma 
condition missing condition weak 
condition needed ensure sort parse algorithm described compatible signature morphisms 
sentence osa conditional formula variable system atomic formulas kinds equations connected component sort constraints sort connected component signature morphism variable system get variable system putting inclusion unique homomorphic extension atomic formula translated atomic formula translated 
easily extends conditional formulas 
satisfaction algebra satis es conditional axiom valuations satisfy premises satisfy 
valuation satis es equation satis es sort constraint satisfaction condition proved noting similarly lemma valuations correspondence valuations property satisfaction condition sort constraints proved 
need reduction theorem translates sorted algebra 
cosasc terms disambiguated di erent sorts 
contrast terms subpfol fully quali ed 
recall section sorted signature obtained subsorted signature adding injection projection membership symbols 
goguen meseguer subsignature projection membership symbols subset consisting identity embedding injectivity transitivity axioms function monotonicity axioms condition 
inclusion 
write clear context 
theorem reduction order sorted sorted algebra formalized simple institution representation cosa coherent algebra introduced sort constraints cond sorted algebra follows 
signatures cosa signature mapped cond theory ji 
signature morphism cosa mapped obvious extension models theorem equivalence categories mod cond ji mod cosa 
basically ji model subsort injections replaced set inclusions colimits ltered diagrams built injections 
vice versa algebra mapped ji algebra just inclusions injections 
viewing inclusions injections going back injections identity representation persistently liberal 
equivalence categories bi liberal 
sentences cosa term sort ls sort parse lp 
de ned inductively follows variable unique sort ls due disjointness condition variable systems lp induction hypothesis sort take term formation rules tf regularity rank desired sort inj inj lp inj sn lp sort parse equation ls ls lub upper bound exists strong local ltration 
lp inj lp inj lp easily extended conditional equations giving translations lp sen cosa sen cond 
signature morphisms preserve regularity upper bounds construction natural 
satisfaction representation condition follows theorem 
institution cosasc right institution give precise meaning constructs obj 
importantly retracts missing 
obj system automatically extends osa theory tf osa theory extended operations axioms fx sg connected component 
inclusion signature morphisms extended signature morphisms lemma important semantics retracts lemma mod mod free construction left adjoint mod 
unit injective 
proof 
lemma follows theorem diagram method free extensions 
institutions underlying obj joseph goguen claims semantics theory mod mod id mod mod considers initial semantics straightforward generalization loose semantics 
explicit description institution uses semantics literature 
obj community feel need institution 
translating obj cafeobj languages need precise semantics underlying concepts 
section introduce institutions serve underlying institutions obj cafeobj 
institution captures obj retracts allows deal error recovery treating error values rst class citizens 
de nition institution cosasc signatures cosasc signature resp 
signature morphism just signature resp 
signature morphism cosasc 
models algebra cosasc algebra cosasc 
reducts inherited way 
notice need assumption carriers non empty implies faithfulness sense 
discussed section 
sentences sentence cosasc sentence cosasc 
sentence translation inherited way 
satisfaction algebra satis es sentence cosasc cosasc algebra satis es sentence 
satisfaction condition cosasc follows cosasc 
treating error values rst class citizens cosasc main disadvantage equations involving retracts may lead confusion ordinary values generally undesirable 
prove retract equations interfere ordinary values 
importantly cosasc entirely lose distinction ordinary error values ordinary functions retracts map ordinary values error values vice versa 
cafeobj error help separating error values ordinary values 
retract functions go ordinary sorts serve purpose coercing value ordinary subsort sort 
justi es complex institution keeps error values ordinary values distinct 
comes close joseph goguen claim injection semantics meaning new error elements reside distinctly set bright central region pure elements injection dark outer region error terms subsort relation 
best approximation institution cosasc introduced 
presence cafeobj error satisfaction institution closely related existential super satisfaction 
de nition institution cosasc signatures cosasc signature resp 
signature morphism just signature resp 
signature morphism cosasc 
models algebra cosasc algebra cosasc 
sentences sentence cosasc sentence cosasc 
satisfaction valuation satis es equation lub ls ls considered valuation 
valuation satis es sort constraint extended sentences way cosasc 
order prove satisfaction condition consider signature morphism algebra universal property free extension homomorphism unique extension making right triangle diagram commutative 
fact stated satisfaction part de nition valuations correspondence valuations property remaining diagram commute freeness respective term algebras outer square commutes 
jt jf jt ii jm jt uu jt jf takes image exactly image image injective injective lemma 
exists exists sentence translation satisfaction condition follows easily 
cosasc error values generated retracts virtual existence retracts interpreted freely 
means equations involving retracts false models follow built retract equations case user de ned retract equations involve retract retract occurs position term works ne cosasc corresponds operational semantics obj 
cosasc error recovery error values treated rst class values functions compute 
case cosasc loose distinction ordinary error values 
illustrate example 
consider obj speci cation paths arbitrary graph instantiated particular graph nodes edges speci cation cafeobj speci cation di erence cafeobj generates supersort path err automatically th graph sorts nodes edges ops source target edges nodes endo obj path graph sorts edges sorts path ops source target path nodes op path path path err assoc vars path ceq source path source path ceq target path target path ceq target source path ceq path target source endo obj graph graph ops nodes ops edges eq source eq target eq source eq target eq source eq target endo obj path fig 

graph model path model 
protecting path graph endo cosasc path model contains sort path values values path err path 
sort path err contains error elements path err path sort path contains 
cosasc speci cation behaves expected sort path path model just interpreted change representation set sort path err additionally contains error elements path err path 
translating cosasc subsection describe translations institutions underlying obj fragments casl institution serving di erent methodological purposes 
section describes translation cosasc subsorted conditional equational logic 
translates retracts total functions retracts usually generate new values carrier sets called error values 
theorem describes persistently bi liberal simple institution representation cosasc signatures cosasc signature mapped considered theory means retracts retract equations explicitly quali ed pro les 
signature morphism mapped signature morphism monotone remains show preserves overloading relation exist common supersort regularity preserves overloading 
models cosasc signature model translation composite introduced theorem mod cosa mod mod cosa mod cond oo mod cond mod oo concerning persistent bi liberality left adjoint right inverse right adjoint due theorem 
mod just forgets membership predicates fully determined axioms isomorphism 
additional function overloading axioms follow argument similar argument showing preservation overloading signature morphisms 
sentences cosasc signature sentences sort constraints sentence translation composite lp introduced theorem sen cosa sen sen cosa lp sen cond sen sen cond sort constraints sentences translated follows atomic constituent sentence sen cosasc lub ls translate inj ls sen lp atomic constituent sen 
satisfaction representation condition follows representation theorem 
sort constraints need axioms membership translate obj speci cation path get casl speci cation spec graph total framework leave partial projections said paragraph partiality section 
target translation sorts nodes edges ops source target edges nodes nodes edges axioms source target source target source target spec path graph sorts edges path path path err ops path err path path err path source target path nodes path path path err assoc vars path path source path err path source path target path err path target path target source spec graph graph ops nodes edges axioms source target source target source target spec path path graph translating cosasc translation cosasc maps retracts partial projections 
means retracts generate new values carrier sets 
theorem describes persistently bi liberal simple institution representation cosasc signatures cosasc signature signature letting set partial function symbols empty 
models cosasc signature model translation composite mod cosasc mod mod cosasc mod cosasc ji oo mod ji mod oo concerning persistent bi liberality left adjoint right inverse right adjoint due theorem 
mod just forgets membership predicates partial projections fully determined axioms similar argument proof theorem isomorphism 
sentences cosasc signature sentences sort constraints translated composite sen cosa sen sen cosa lp sen cond sen de ned inductively follows inj inj pr sort constraint occurring sentence translated inj ls lp lub ls 
satisfaction mod theorem loss generality assume consists inclusions injections note 
key prove representation condition lemma lemma mod valuations valuations 

properties hold lp de ned case lp proof 
proof proceeds induction structure critical case retracts 
lp de ned pr lp de ned lp de ned retracts interpreted freely outside 
proposition model translation representation cosasc natural equivalence 
proof 
shown natural equivalence mod natural equivalence ji de nitional extension ji 
translation speci cation path translated casl follows spec graph sorts nodes edges ops source target edges nodes nodes edges axioms source target source target source target spec path graph sorts edges path path path err ops source target path nodes path path path err vars path path source path source path target path target path target source translating obj cafeobj constructs casl constructs brie describe institution representations de ned previous section lifted translation language constructs 
rst point concerns subsorting cafeobj 
said section subsorting cafeobj clearly speci ed report assume obj 
holds translation language constructs exception sort cafeobj comes equipped error supersort 
translation construct level add error way similar section 
come sort disambiguation terms 
sort disambiguation obj inserts subsort inclusions retracts casl subsort injections inserted 
note casl disambiguation corresponds sort parse regular signatures 
construct level translation obj casl just insert retracts 
matter concepts level casl terms disambiguated obj terms 
cafeobj allow general regular signatures probably solution similar casl chosen 
mix declaration facilities essentially obj cafeobj casl 
precedences mix operations expressed numeric priorities obj casl allows arbitrary pre orders asf sdf 
obj numeric priorities translated pre order induced 
concerning associativity mix operations obj allows general gathering patterns 
available casl 
casl allows declare binary operations left right associative corresponds special gathering patterns obj 
gathering patterns translated casl 
parse formulas terms obj parser gathering patterns explicit bracketing disambiguation necessary translation casl 
explicit sort disambiguation written obj cafeobj available casl written 
sort constraints written extensions obj cafeobj written membership formulas casl 
associativity commutativity identity idempotence attributes slightly general obj cafeobj casl casl argument result sorts operations attributes 
case condition hold attribute translated axiom 
obj cafeobj subsort declarations allow chains subsorts declared 
split declarations casl 
obj cafeobj de nitions translated casl operation de nitions 
see comparison casl cafeobj large level examples 
boolean functions empty carriers section problems common speci ation languages translations discussed treatment boolean functions empty carriers 
translating boolean functions predicates larch act obj cafeobj built sort bool boolean boolean values 
translations previous sections treat bool sort 
means implicit inclusion bool speci cation handled level structured speci cations translating larch act obj cafeobj speci cation casl implicit import bool possibly equality functions depending language explicit result translation 
translating act obj cafeobj casl speci cation bool surrounded free 
interpreted initially languages 
declared constructor functions act generates special equations sort bool included translation 
may desirable treat bool special sort translate larch act obj cafeobj bool valued functions casl predicates 
works theories bool argument sort function 
modify translations sections mapping bool valued functions predicates signature level 
sentence level applications bool valued functions translated applications predicates standard bool functions translated logical connectives 
model level predicates translated bool valued functions 
example concerning obj cafeobj restrict cosasc cosasc signatures including standard signature bool xed meaning bool argument bool getting institution cosasc bool cosasc bool 
persistently liberal institution representation cosasc bool argument functions cosasc bool argument functions subpfol 
bi liberal 
similar holds lsl get representation lsl bool concerning act bool fol constructed way 
representation asf asf implicitly imported bool 
setting translating bool valued functions casl predicates special axioms sort bool generated constructors act stating injectivity constructors disjointness images generated free type 
available construct concept casl 
translation casl constructs concepts translation 
construct casl generates exactly axioms rst order formulas 
empty carrier problem institutions order sorted partial algebras de ned admit empty carriers 
reader may surprised sorted subsorted algebras usually de ned way allowing empty carriers 
main reason disallow empty carriers casl allowing empty carriers satisfaction sentence depend equality interpretations question carrier sort empty 
may lead confusion especially variable introduced locally global variable declaration 
surprisingly reason forbid empty carriers lies framework order sorted algebra developed advocates empty carriers lemma crucial proving satisfaction condition cosasc hold forbid models mix empty nonempty carriers 
additionally forbid models consisting empty carriers additional restriction essential respect 
forbidding empty carriers great loss datatype contains data 
advantage standard de nitions rst order higher order logic forbid empty carriers straightforward bridge casl fol hol theorem proving tools usually assume non empty carriers 
empty carrier complicate tools casl 
argued allowing empty carriers necessary get initial models free extensions 
corollary shows initial models free extensions exist restrict strict signatures 
argued useful theories strict theory pre ordered sets 
theories parameter theory free extensions corollary requires target theory strict 
hardly case wants initial free semantics non strict theories 
holds restrict con uent sets axioms help de ning institution 
rare cases example speci cation really empty carriers re tools supporting empty carriers examine relation institutions empty carriers set representations institutions 
composing representations shift representations fig 
representations institutions di er behaviour empty carriers 
institution introduced previous sections mt denote slightly modi ed model functor allows possibility empty carriers model 
consider representation mt vice versa rstorder level 
easy representations fol fol mt representation fol mt fol simply representation rst order level section delete axiom stating non set de ned elements 
gives representation pfol mt fol composed inclusion fol mt pfol mt get persistently bi liberal representation weak injective amalgamation property 
fol represented fol mt adding signature axiom true sort axioms models translated identically 
gives subinstitution representation 
fol institution rst order level get results 
positive conditional level strong relations 
representations subp horn subp horn mt horn mt represented horn way fol mt represented fol 
delete axioms form operations axioms involving order get theories horn form 
gives persistently representation due deletion weak injective amalgamation lost 
note formulations rst order logic exclude empty carriers anyway representations needed rarely 
note positive conditional level frameworks allowing empty carriers rst order case 
thing works horn de ned positive conditional level 
concerning representing cond mt cond representation positive conditional level delete newly introduced constants guarantee existence de ned elements 
horn represented horn mt adding signature overloaded constant sort axioms models translated identically 
gives discrete subinstitution representation 
thing works sub horn de ned positive conditional level 
considered relation casl speci cation languages level speci cation small 
de ned number subinstitutions institution subpcfol underlying speci cation language casl 
subinstitutions subpcfol de ned number institution representations 
altogether graphs institutions representations arise rst order level sort generation positive conditional level 
classi ed institution representations di erent properties 
properties allow lifting theorem provers structured speci cations free structured speci cations including free lifting loose semantics 
consequence get institutions positive conditional level liberal socalled strict theory morphisms proved lifting free constructions known institutions subinstitutions casl 
order theorem provers level positive conditional speci cations conditional term paramodulation lifted theorem proving basic speci cations casl 
rst order level result holds structured speci cations 
composition translations rst order level going casl logic subpcfol second order logic sol basis encoding casl isabelle hol see details 
experience institution representation serve semantical basis re theorem provers practice requires 
important point question partial inverse representation possible display intermediate formulas proof syntax represented institution 
described translation number known speci cation languages larch obj cafeobj act asf casl 
set formally precise translations level underlying logics formalized institutions informally discussed lifts level language constructs 
speci cation libraries case studies developed languages translated casl 
speci cation languages examined de ned subinstitution casl institution 
exception obj cafeobj 
attempting translate obj casl rst clarify institution underlying obj institutions obj serving di erent methodological purposes 
institution cosasc treats error values generated retracts rst class citizens allowing error recovery cosasc treats error values virtual values allowing clean separation ordinary error values 
addressed level language constructs informally shown constructs writing speci cations small languages translated casl 
formal treatment need formal de nition languages obtainable 

shown problem existing algebraic speci cation languages di er casl semantics allowing models empty carriers solved 
important extension translations consider translation di erent concepts speci cations large 
main diculty di erent philosophies module systems obj cafeobj act colimit approach name di erent meanings depending origin module casl follows name thing philosophy 
cerioli joseph goguen anne hans org kreowski bernd krieg br jose meseguer peter mosses markus rosu don sannella lutz schr oder andrzej tarlecki intensive controversial productive discussions participants cofi 
special lutz schr oder help appendix 
preservation freeness proposition important proving properties persistently bi liberal institution representations 
terminology functor left adjoint just confusion arise denote unit counit corresponding adjoint situation 
proposition left adjoint right adjoint id id proof 
proof due peter johnstone composability adjoints left adjoint identity functor left adjoint left adjoints unique natural isomorphism 
id proposition left adjoint rl id isomorphisms 
id chosen identities 
proof 
proof id natural isomorphism object rla rla la rla id rla la rla rla rla rla id adjunction la rla rla rla id upper triangle commutes 
naturality square commutes 
lower triangle commutes 
shows rla isomorphism 
isomorphism rla isomorphism 
implies core exive embedding assumption full 
rla rla rla rla commutes 
isomorphism 
id id adjunction isomorphisms 
proof object proposition get id rla rla universal 
assumption just id choose id id id id id 
proposition diagram categories functors 
oo oo assume left adjoint left adjoint free la free 
assume id free rb free 
free la free 
assume id id strongly persistently free la strongly persistently free 
assume id id strongly persistently free la strongly persistently free 
proof 
proof ua universal rla universal 
ua id la la la universal arrow vb morphism 
universality unique ur universality unique la ur commutativity square diagram due naturality unique morphism la ua la la ur la proof assume free universal arrow composition universal arrow get universal arrow universality morphism proposition assume id ur id universality get id universality get id isomorphism 
shown universal arrow follows ua la morphism universality unique morphism la satisfying morphism rb ur ur ur ur isomorphism uniqueness follows proof just 
follows la rla proof follows ua assumption ua la proposition applied ensures unit constructed proof identity 
proof dual proposition isomorphisms 
ensures unit constructed proof isomorphism 
proposition suces ensure strongly persistent freeness 
ad amek herrlich strecker 
concrete categories 
wiley new york 
ancona cerioli zucca 
extending casl late binding 
choppy bert mosses editors trends algebraic development techniques th international workshop wadt bonas france volume lecture notes computer science 
springer verlag 
astesiano bidoit kirchner krieg br mosses sannella tarlecki 
casl common algebraic speci cation language 
theoretical computer science volume 
astesiano cerioli 
free objects equational deduction partial conditional speci cations 
theoretical computer science 
barwise 
axioms model theory 
annals mathematical logic 

state extension casl 
submitted publication 
bergstra heering klint editors 
algebraic speci cation 
addison wesley 

logical systems structured speci cations 
theoretical computer science 
volume 
burmeister 
model theoretic approach partial algebras 
akademie verlag berlin 
burmeister es pushout complements attributed algebras 
mathematical structures computer science appear 
cerioli 
relationships logical formalisms 
phd thesis td universit di pisa genova udine 
cerioli krieg br mossakowski 
permissive subsorted partial logic casl 
johnson editor algebraic methodology software technology th international conference amast volume lecture notes computer science pages 
springer verlag 
cerioli meseguer 
may borrow logic 
transporting logical structures maps 
theoretical computer science 
cerioli mossakowski reichel 
total equational partial rst order logic 
astesiano 
kreowski krieg br editors algebraic foundations systems speci cations pages 
springer verlag 
ehrig 
algebraic speci cation techniques tools software development act approach 
world scienti singapore 
cofi 
common framework initiative algebraic speci cation development electronic archives 
notes documents accessible www brics dk projects cofi 
cofi language design task group 
casl cofi algebraic speci cation language summary 
documents casl summary oct 
cofi semantics task group 
casl cofi algebraic speci cation language semantics 
note version mar 
diaconescu 
extra theory morphisms institutions logical semantics multi paradigm languages 
applied categorical structures 
diaconescu futatsugi 
cafeobj report 
world scienti singapore 
ehrig mahr 
fundamentals algebraic speci cation 
springer verlag heidelberg 
goguen 
jouannaud meseguer 
operational semantics order sorted algebra 
brauer editor proceedings international conference automata languages programming volume lecture notes computer science pages 
springer 
goguen meseguer winkler futatsugi lincoln 
jouannaud 
introducing obj 
technical report sri csl computer science lab sri international august revised version th october 
goguen 
stretching rst order equational logic proofs partiality subsorts retracts 
unpublished draft 
available www cse ucsd edu users goguen pubs 
earlier version appeared proceedings international workshop order theorem proving edited maria paola ulrich furbach risc linz report pages 
goguen burstall 
institutions model theory speci cation programming 
journal association computing machinery 
predecessor lncs 
goguen meseguer 
equality types generic modules logic programming 
degroot lindstrom editors logic programming 
functions relations equations pages 
prenticehall englewood cli new jersey 
goguen meseguer 
remarks remarks sorted equational logic 
eatcs bulletin 
goguen meseguer 
order sorted algebra equational deduction multiple inheritance overloading exceptions partial operations 
theoretical computer science 
goguen thatcher wagner 
initial algebra approach speci cation correctness implementation data types 
yeh editor current trends programming methodology volume pages 
prentice hall 
goguen winkler 
introducing obj 
research report sri csl sri international 
guttag horning 
report larch shared language 
science computer programming 
guttag horning garland jones wing 
larch languages tools formal speci cation 
springer verlag new york 

pushouts order sorted algebraic speci cations 
proceedings amast volume lecture notes computer science pages 
springer verlag 
hussmann cerioli 
uml casl static part 
technical report disi universit di genova disi tr italy 

kreowski mossakowski 
equivalence di erence institutions simulating horn clause logic algebras 
mathematical structures computer science 
lloyd 
foundations logic programming 
springer verlag 
scollo 
equational type logic 
theoretical computer science 
meseguer 
general logics 
logic colloquium pages 
north holland 
meseguer 
conditional rewriting uni ed model concurrency 
theoretical computer science 
meseguer 
membership algebra logical framework equational speci cation 
parisi presicce editor trends algebraic development techniques 
proc 
th international workshop volume lecture notes computer science pages 
springer 
meseguer goguen 
order sorted algebra solves constructor selector multiple representation coercion problems 
information computation march 
mossakowski 
casl tool set 
available www tzi de cofi cats 
mossakowski 
equivalences various logical frameworks partial algebras 
editor computer science logic 
th workshop csl 
paderborn germany september selected papers volume lecture notes computer science pages 
springer verlag 
mossakowski 
representations hierarchies graphs institutions 
phd thesis bremen university 
mossakowski 
limits parchments systematically construct institutions partial algebras 
haveraaen owe 
dahl editors trends data type speci cations 
th workshop speci cation data types volume lecture notes computer science pages 
springer verlag 
mossakowski 
sublanguages casl 
note dec 
mossakowski 
colimits order sorted speci cations 
parisi presicce editor trends algebraic development techniques 
proc 
th international workshop volume lecture notes computer science pages 
springer 
mossakowski 
casl semantics tools 
graf schwartzbach editors tacas volume lecture notes computer science pages 
springer verlag 
mossakowski 
speci cation arbitrary institution symbols 
choppy bert mosses editors trends algebraic development techniques th international workshop wadt bonas france volume lecture notes computer science pages 
springer verlag 
mossakowski krieg br 
subsorted partial higher order logic extension casl 
choppy bert mosses editors trends algebraic development techniques th international workshop wadt bonas france volume lecture notes computer science pages 
springer verlag 
mossakowski krieg br 
static semantic analysis theorem proving casl 
parisi presicce editor trends algebraic development techniques 
proc 
th international workshop volume lecture notes computer science pages 
springer 
mossakowski tarlecki paw 
combining representing logical systems model theoretic parchments 
parisi presicce editor trends algebraic development techniques 
proc 
th international workshop volume lecture notes computer science pages 
springer 
mosses 
casl cafeobj users 
editor cafe networks industrial strength algebraic formal method 
elsevier 
appear 
mosses 
uni ed algebras institutions 
proceedings th annual ieee symposium logic computer science pages 

mosses 
casl asf sdf users 
asf sdf proc 
nd intl 
workshop theory practice algebraic speci cations volume www springer uk workshops electronic workshops computing 
springer verlag 

computing horn clause theories 
springer verlag heidelberg 
reggio astesiano choppy 
casl ltl casl extension dynamic reactive systems summary 
technical report disi universit di genova disi tr italy 
reggio 
casl chart combination statecharts algebraic speci cation language casl 
proc 
amast volume lecture notes computer science 
springer verlag 
reichel 
initial computability algebraic speci cations partial algebras 
oxford science publications 
sannella tarlecki 
speci cations arbitrary institution 
information computation 
tarlecki 
existence free models algebraic institutions 
theoretical computer science 
tarlecki 
moving logical systems 
haveraaen owe dahl editors trends data type speci cations 
th workshop speci cation data types volume lecture notes computer science pages 
springer verlag 
thatcher wagner wright 
speci cation data types conditional axioms 
technical report rc ibm yorktown heights 
yan 
theory implementation sort constraints order sorted algebra 
phd thesis oxford university 

