university minnesota certify examined copy doctoral thesis ed hsin chi complete satisfactory respects revisions required final examining committee 
john riedl name faculty advisor signature faculty advisor march date graduate school framework information visualization spreadsheets submitted faculty graduate school university minnesota ed hsin chi partial fulfillment requirements degree doctor philosophy march copyright ed hsin chi declaration 
ideas described dissertation patent pending patent application entitled visualization spreadsheet university minnesota number merchant gould law firm number 
portion thesis previous published ieee conference proceedings magazines 
ieee copyright policy www computer org htm retained right reuse portion copyrighted works fee works 
am required give notice portion ieee reprinted proceedings symposium information visualization july issue ieee computer graphics applications pro ceedings symposium information visualization permission 
acknowledgments specially advisor john riedl support advice guidance encouragement friendship 
choosing sor best choices life 
years fortunate received great mentor ship dr stuart card xerox palo alto research center xerox parc belief abilities 
workers james pitkow rich peter pirolli jock mackinlay xerox parc contribution education web visualization analysis 
professors john joseph konstan phillip barry computer science department ernest computational biology centers contributed interesting ideas discussions 
dr gordon psychology department introduced visual perceptual psychology 
family continual support 
strength complete love support big sister susan friends chad brook kate 
completing ph 
running 
ups downs various stages impossible endure support family friends 
am forever grateful belief family friends dedication mother sophia chen father charles chiu lang chi sister su shan susan chi brother tim ssu yuan chi soul brothers chad potter brook winston caring friends 
journey see distorted lens 
purple iris longer purple 
torn lens distortion 
corner straight ahead carved 
carved path kept tired soul road 
phase blends find comfort silence heartbeat 
holding arms rests 
unfolding charm rest 
ii information interactive 
information visualization design cre ation interactive graphic depictions information combining principles dis graphic design cognitive science interactive computer graphics 
volume complexity data increases users require powerful visualization tools allow effectively explore large datasets 
thesis seeks information visualization accessible potential users creating visualization spreadsheet cell contain entire set data represented interactive graphics 
just numeric spreadsheet enables exploration numbers visualization spreadsheet enables exploration visual forms informa tion 
numeric spreadsheets store simple data elements formulas cell cell visualization spreadsheet hold entire data set selection criteria viewing specifications information needed full fledged information visualization 
similarly intra cell inter cell operations far com plex stretching simple arithmetic string operations encompass range domain specific operators 
complexity operations interactions requires visualization framework easily understandable users visualization designers 
thesis devel ops discusses general utility novel visualization framework validates framework applying various visualization techniques showing systems illustrate research issues 
show spreadsheet approach certain visual user tasks difficult approaches 
underlying approach allows domain experts define new data types data operations enables visualization experts incorporate new visualizations viewing parameters view operations 
iii keywords information visualization visualization spreadsheet interactive graphics visualization systems user interface user interactions visualization framework visu alization model operators view value data state model date flow model tion design application extensibility sensemaking biological sequence analysis gorithm visualization world wide web content usage structure analysis information ecologies 
iv table contents list figures ix list tables xi chapter motivation 


visual information processing 
sensemaking information ecology foraging theory 
levels knowledge 
advantages visual sensemaking visualization spreadsheet 

overview 
chapter related 
spreadsheet 
summary 
chapter illustrated principles scenarios detailed case study original data domain genetic sequence similarity 

time series matrices 
algorithm visualization 

derive comparison data sets 
apply operators parallel 
extract multiple visual features simultaneously 
create analysis templates 
update automatically dependency links 
mapping value structure custom layouts 
direct manipulation command languages 
detailed case study web analysis visualization spreadsheet 
visualization web space 
real world analysis scenarios 
summary 
chapter information visualization operator framework 
problems users perspective 
problems designers perspective 
operator framework helps users designers 
fundamental properties operators 
view versus value 
operational versus functional similarity 

visualization pipeline 
data state model 
vi example web analysis visualization framework 

example web analysis visualization operators 

view versus value 
applicability operators 
operator centric approach 
direct manipulation 
implementation choices 
discussion 
classes users framework 
user advantages framework 
visual sensemaking visualization operators 
summary chapter duality data flow data state models analysis data flow model data flow visualization systems 
data state model spreadsheet systems 
summary chapter validation applying framework visualization techniques chapter implementation prototype system spreadsheet similarity reports general system spreadsheet information visualization 
vii discussion summary chapter contributions summary bibliography viii list figures 

chuah roth basic visualization interaction taxonomy 
molecular biology seeks determine interaction gene pro protein structure protein function 
similarity algorithms provide shortcut finding possible protein functions unknown sequence 
alignments represented axis position input sequence axis similarity score axis 
visualization random point generation delaunay triangulation resulting point set 
generating cells delaunay triangulation example 
screen snapshot spreadsheet similarity reports visualization system 
example parallel application direct manipulation operations multiple cells simultaneously 
visualization time series matrices spreadsheet information 
discovering novel patterns multiple visualization representations time series matrices example 
ix delaunay triangulation algorithm visualization dependency flow chart 
drop menus spreadsheet similarity reports ssr easy 
commands scripts siv spreadsheet 
web analysis visualization spreadsheet showing xerox com web site 
information xerox com web site 
web analysis visualization spreadsheet disk trees 
creation new web content product families xerox com 
visual usage pattern subtraction shows differences usage quickly 
straight mapping usage pattern show difference usage 
spreading activation visualization enable visualization related contents document similarity 
information visualization pipeline modified stuart card model 
delaunay triangulation algorithm visualization pipeline 

multiple level semantics addition operator 

example duality transformation interactions control flow spreadsheet information visual architecture spreadsheet information visualization system 
list tables 



various visualization techniques analyzed data state model 
continued continued continued continued continued xi chapter graphic drawn constructed reconstructed reveals relationships constituted interplay data 
graphic moment process decision making 
motivation jacques bertin live exciting time 
great discoveries science come monthly due part proliferation technology helps scientists observe explore easily 
realistic believe lifetimes scientists may unlock genetic code better understand working brain cure diseases plague 
powerful computer systems contribute rapid advance 
progression computer technology dramatic seemingly 
progression computing tools helical feedback generation tools motivate specify generation 
embarked new cycle helix leading powerful tool call visualization spreadsheet 
computer scientists working users different fields build tools help see learn 
problem solving decision making essential components complex tasks increasingly supported novel user information 
volume complexity information increases users need powerful exploratory tools effectively analyze available information 
research techniques developed field visualization put simply visual representations data sets support understanding analysis 
visualization techniques capable visually communicating vast amounts information quickly supports scientists information analysts find meaning large data sets 
interest visualization user interfaces past years systems developed applications computa tional fluid dynamics geology molecular biology architectural plans animal behaviors 
traditional scientific visualizations derive graphical views spatial representations inherent data 
example earth geological information spatial dimensions part data set 
scientific visualization spatial dimensions usually basis visual map 
field information visualization emerged researchers seek ways sup port understanding analysis data interactive computer graphics visualization techniques 
data data inherently geometric 
daily lives newspapers magazines employ graph ical design principles communicate simple statistical information stock mar ket financial data 
wealth information physical spatial properties document linkage structures document similarity data 
information challenges visualization researchers casting data effective visual forms non obvious 
research shows approach graphic presentation hinder promote accurate effective processing infor mation 
reason researchers information visualization concentrated semiology symbols signs communicate information 
decision making sensemaking useful information derived interacting operating information variety processing mechanisms 
particular advances information visualization interfaces shown visual analyses benefit just visual representation methods interactions representations :10.1.1.123.805
interfaces allow users perform data analysis operations directly visual representation order see effects 
visualization system set designed interactions answer wide variety questions 
design set visualization interactions requires domain specific knowledge problems information analysis grounded needs discipline 
wide variety data domains challenge design single environment enables users perform variety difficult visu alization tasks intuitive manner 
fortunately different domain applications require different visual representations domains share similar view manipulations data transformation operations 
developing employing conceptual model visualization analyze categorize similarities data domains 
model dif ferences domains threaten prohibit sharing similar operations 
visualization spreadsheet model take advantage similarities operations different data domains 
doing enable users perform wide variety information analysis tasks 
example useful visualizations related data sets displayed simultaneously side side 
furthermore num ber operations want apply visualizations simultaneously comparing filtering multiple data sets simultaneously 
enabling users perform tasks conceptual model analysis tasks accomplished visualization interface 
challenge develop system intuitive user interface accomodate task requirements wide variety visualization domains enable users easily operate related data sets system coordinated way 
idea build visualization spreadsheet spreadsheet interactive program enabling user lay data screen rows columns cells cells contain datasets viewed visualization 
visualization spread sheet supports complex data exploration parameters dataset group datasets explored coordinated way 
spreadsheet metaphor provides structured intuitive powerful interface exploratory data analysis 
spreadsheets proven highly successful environments interacting numeric data providing environment easily affords ap plication variety data analysis operations 
computer users spreadsheet metaphor expect user skills numerical spreadsheets transfer easily visualization spreadsheet 
wide variety operators complexity may thwart transfer 
challenge design intuitive interface wide array operators 
research seeks create visualization spreadsheet intuitive numeric spreadsheet microsoft excel numbers cell display entire set data represented interactive graphics 
visualization spreadsheet defined concept visualization spreadsheet characteristics visualization cells grid layout operators dependency 
properties gives visualization spreadsheet characteristics 
characteristics shares traditional nu spreadsheets 
visualization cells 
visualization spreadsheet displays visualization arbitrarily large data set cell 
cells adapted handle large datasets numbers 
handle visual representations complex data types text strings hierarchical structures regular irregular shapes 
spreadsheets contain groups large datasets users see just single dataset established context 
grid layout 
grid layout lets users view collections visualizations 
tabular layout proven useful numeric spreadsheets number advantages 
enables users enter data cells various con 
second easy comprehend structure cells easy navigate 
third affords easy grouping operations defined rows columns portions spreadsheet 
operators 
operators available generating modifying cell contents 
datasets longer just simple numbers operations consist variety operators different types datasets 
results difficulties design user interface operations 
operators applied specified range operand cells entire column row 
certain operators may take columns rows subgroup cells operands 
dependency 
just traditional numeric spreadsheets data cell computed data cells cells may contain datasets cells 
spreadsheet keeps track dependencies cells automatically updates cells appropriately manipulated 
cell data recalculated automatically data depends changes 
cognitive advantages visualization spreadsheet section establish background cognitive science 
particular review visual information processing cognitive science analysis task structures called sense making 
explain visualization spreadsheet supports visual sensemaking 
visual information processing past knowledge workers utilized various technologies reduce cost accessing processing understanding large data sets 
vision vannevar bush memex enable workers sense information employing tech nology allow real record extracting relationships pieces information 
people inherently drawn elegant graphics sym statistical graphics represent information develop late th century 
william single invented improved nearly fundamental graphical designs statistical graphics length area show quantity scatterplots bar charts line plots 
statistical graphics show num bers communicating information daily lives printed forms newspapers magazines 
information visualization technology extended capability communicating immense amounts real information 
visual information processing visual perceptual cognitive abilities enhance problem solving skills 
visual metaphors information understand ing gaining understanding concept called seeing reducing prob lem essentials called focusing uncovering problem called bringing light 
clearly ability see decipher relies heavily perceptual tive abilities 
sensemaking information ecology foraging theory cognitive psychologists developed frameworks model perceptual cognitive abilities absorb information 
popular model called sensemaking model 
sensemaking term describes cognitive process bringing new light knowledge 
extensive analysis sensemaking tasks cyclic iterative 
example consider task conducting literature survey factors physical library 
trained librarians set processing tools provides information choice step author keyword book searches citation indices encyclopedias dictionaries bibliographies 
tools ans accomplish tasks 
continuing example overview article selected 
bibliography consulted pick list related articles fits user interest profile 
user returns stacks library collect papers cycle repeats user satisfied literature survey 
library example type information environment pri mary source information centuries 
new types information environment developing invention digital computer 
world wide web quickly acquiring large user community primary source information information tasks 
cognitive psychologists described rich relation ship users information environment information ecology 
word ecology describe task information changes evolves time 
people seek information consume information gies form strategies acquiring important pieces information 
psychologists observed information access environments needs support sensemaking process offering tools enable cyclic task structures 
cycle sensemaking gains new knowledge information 
levels knowledge aim sensemaking cycle successively discover new higher level knowledge information 
requires uncovering new relationships tween information elements subsets 
means support ways constructing new groupings data defined interplay relationships elements 

elementary local level equivalent finding specific entry data model 
important visualization tools provide access precise values level detail demand access frequency www xerox com index html 

intermediate comparison level information level consists relationships exist subsets information access patterns may com year ago 

global level highest level attainable data 
knowledge obtained level condensed correlation vari able data variable usage trends governed time data set 
mathematical analysis problem provide glimpse higher level infor mation requires visualization sense patterns 
simple example computation averages confidence intervals groups numeric data 
scatter plot error bars sense statistical analysis 
sophisticated example spreading activation algorithm computing relevance items 
spreading activation computed vari ous pieces information structure links frequency usage citation strength documents word vector similarity :10.1.1.101.43
spreading activation provides information intermediate level condensing relationship node relevance documents set 
advantages visual sensemaking visualization spreadsheet cognitive point view success spreadsheet interaction eliminates stumbling blocks information analysis data processing visualization spreadsheet forms external cognition device 
spreadsheet user constructs required information step analysis 
step step user forms understanding relationship pieces information 
ing cognition process sensemaking showing intermediate results operation visualization spreadsheet externalized cognition device 
reduces cost structure analysis 
visualization spreadsheet allows new ad hoc analyses defined quickly 
cost programming new analyses spreadsheet allows wide range new analyses defined combination cells 
structuring simple rules applying operations user readily apply processing mechanisms quickly 
enables continuous iterative exploratory data analysis 
users find new knowledge data quickly formulate new directions data discoveries re tailoring spreadsheet 
creative insights analysis cycle continue uninterrupted 
analysis visualization spreadsheet enables users operate system pace users cognitive deductions 
identifies new operators add analysis repertoire 
spreadsheet frame gives domain experts ability analyze structure data associated analytical abstractions 
process new operators identified 
research vision building visualization spreadsheet poses large set research questions 
project addresses types key research questions 
show overview issues studied building spreadsheet framework visualization 
high level high level challenges thesis explores properties applications tasks data visualization techniques suited spreadsheet paradigm 
mid dle level model questions thesis investigates models needed support types high level challenges model questions core objectives way spreadsheet paradigm valuable visualization applications 
spreadsheet visualization general spreadsheet paradigm visualization 
range data visualization spreadsheet paradigm apply 
effective effective user models 
programmer models 
views values view value separation view value propagation way multi way constraints visualization defining visualization data vis mapping high performance computation parallel computation distributed computation computational steering domain data collaborative uses spreadsheets asynchronous collaboration synchronous collaboration defining data domains data import default view coercion type hierarchies operators manipulations view manipulations value operators comparison cells search sort screen real estate wall sized displays multiple displays value editing properties visualization tasks suitable spreadsheet interaction 
spreadsheet extensible new data types domains time stack cells implementation strategies extension facility tcl tk user interface issues affordances learning time users time dimension framework model user scripting implementation substrate vtk animation avs compatible techniques magic lenses layout grand vision visualization spreadsheet research 
shows overview issues involved building spreadsheet visualization 
implementation core objectives enables answer model questions turn help meet high level challenges 
creating framework high level challenges govern formation model questions core objectives 
bottom box show potential research enabled examination core objectives 
users users working spreadsheet applications application builders assemble applications defined components domain add support new data types visualizations operators framework 
lowest level core objectives thesis examine core design implementation issues includ ing key notions data domains cell values views operations temporal mappings extensibility 
bottom box shows related issues performance collaborative spreadsheets screen space user interface visualization techniques 
research approach section give overview research plan shown 
take prototype driven research approach studying spreadsheet environments employed visualization 
plan encompasses phases project domain studies design implementation evaluation 
phase perform domain specific studies gather user requirements 
new domain perform initial interface design 
compare design existing spreadsheets gain insight modularity required 
put experiences back construction general spreadsheet tool visualization dynamic data 
second phase perform analysis requirements gathered phase design implement spreadsheet framework 
gathering require ments domain studies ensure plausibility design multiple data domains visualization methods high level challenges 
design ing interface domain specific tasks helps discover properties tasks suitable spreadsheet interaction 
implement tion spreadsheet framework tcl tk user interface building language visualization toolkit vtk 
chose tcl tk suited building exploratory interfaces 
vtk provide functionality existing visualization domain studies design implementation evaluation new domain specific studies biological sequence analysis time series matrices algorithm visualization web site usage content structure analysis requirement analysis requirement analysis requirement analysis usability analysis scenario walk throughs research plan interface design interface design interface design analysis spreadsheet architecture design spreadsheet implementation implementation selected applications evaluation requirement analysis requirement analysis requirement analysis validate framework applying vis techniques existing spreadsheets see related spreadsheets user interface specification spreadsheets images visual languages research plan spreadsheet visualization system 
phase perform domain specific studies gather requirements 
new domain perform interface design capture interface requirements 
second phase perform analysis requirements gathered phase design implement framework 
final phase evaluate framework specific applications evaluation methods 
vtk tcl tk systems 
final phase evaluate framework specific applications evaluation methods 
implement applications domain specific studies 
implementations reveal ease generality constructed tool 
implementing domain studies reveal spreadsheet designed implemented phase handle domains 
perform scenario walk throughs specific domain tasks see tool helps users data ration goals 
validate visualization system framework examining wide variety visualization techniques visualization model 
overview thesis show visualization spreadsheet powerful environment enables users effectively explore available information 
computer users care tool help interpret information enable exploration tasks previously impossible 
designed implemented evaluated general visualization spreadsheet frame applicable kinds data 
contribution project un visualization spreadsheet applied understand ing user tasks particularly suitable spreadsheet understanding general visualization conceptual model tailored multiple data domains data analysis situations 
developed novel information visualization conceptual model called data state model helps users visualization analysts designers 
extensions existing information visualization models needed build visualization spreadsheet apply general information visualization problems 
show model describes wide variety information visualization techniques 
model taken project allows domain experts define new data types data operations enables visualization experts incorporate new visualizations viewing parameters view operations 
remainder thesis structured follows 
chapter describe past research fields related visualization spreadsheets 
chapter dis case studies task scenarios 
analyze advantages visualization spreadsheet concept set principles 
case studies include interesting data domains molecular biology sequence analysis time series matrices algorithm visualization 
include detailed case study analysis content usage structure large world wide web site 
chapter define describe data state model visualization framework implementation 
describe interesting properties framework classify visualization operators 
chapter describe relationship data state model framework data flow model traditional data flow visualization systems 
particular show equivalent expressive power describing visualizations merits 
chapter validate framework classifying operators large number visualization techniques data state model 
chapter mention systems implemented describe architectures 
discuss implementation issued lessons learned implementation 
chapter contains concluding remarks 
chapter related construct useful graphic know come going follow 
jacques bertin chapter related concepts visualization spreadsheets visualization systems general 
model information visualization visualization viewed transformation process converts data values graphical views 
scientific visualization researchers practitioners exam ined data flow network constructing visualizations 
schroeder described conceptual data flow model context scientific visualization applying operations generate visualization 
model consists visualization network contain multiple sources sinks 
step middle net consists filters inputs outputs 
traditional data flow model scientific visualization insufficient de information visualizations 
information visualizations different set requirements scientific visualizations 
information visualization sys tems confront questions represent data visually types ex interaction include structure interaction 
information visualization deals data inherent spatial mappings rela value view complex 
certain capabilities critical exploring different views data interactively applying operations rotation data filtering view group views comparing related datasets 
information observed intricate relationship view value associated view 
early observation becker interactive brushing technique group scatterplots effect operation data point appears simultaneously scatter plots views 
termed coordinated interaction 
data set different views 
simple powerful notion view value views tied underlying value 
binding broken 
advantage coordinated interactions user concise clear model system works 
disadvantage opposing intention impossible user may just want temporarily change view 
example user may simply want select group data points particular view highlight discuss outside context scatter plots 
works explored view value relationship examining view dependent value 
example lee grinstein conceptual model database visual exploration describes analysis process series value value value view view value view view transformations 
describe concept generating metadata database queries aid process 
chuah roth extended foley user interaction framework incor basic visualization interactions detailed characterization data filters context information visualization 
basic clas taxonomy shown 
tweedie data transformation model similar interactivity model classifies interactions amount control user information visualization brushing term describe moving cursor interactively specifies area focus current user interaction 
basic visualization tasks graphical operations set operations data operations add encode data manipulate objects delete create set delete set summarize set derived attributes create mapping transform mapping constant graphical transform copy delete enumerate object attribute shift scale express membership continuous non continuous chuah roth basic visualization interaction taxonomy process state model similar 
developed visualization spreadsheet past models sufficiently detailed describing operators interactions visualization spread sheet 
becker coordinated method tight coupling view value completely disallows view operate independently value need capability visualization spreadsheet 
lee grinstein describes database interactions general detailed visualization interactions 
motivated chuah framework explored extent taxonomy suits needs 
model tied interaction model state model state model lacks detail help capture domain specific designs 
exam ple appear handle operations multiple semantics 
filter example section suggests interpret dynamic query filters value operation view operation 
architecture dy namic querying classified graphical operation affect underlying data 
discovered relationship set operations data operations unclear semantics view value filtering shift defined confusing model 
graphical operations subtree de tailed areas tree developed 
class visual mapping operators needs examination 
tweedie framework data transformation model state model high level abstraction 
high level abstraction model deal domain specific interactions detailed way 
example model evaluate information visualization systems multiple data sources views 
importantly past models failed unify interaction model visu alization process 
example visualization pipeline described stuart card rich design space unified complete interaction model :10.1.1.25.1642
example chuah roth unified low level keyboard mouse interactions incorporate visualization pipeline 
need model describes graphical data control states affected operators 
trying extend past unifying taxonomy oper visualization pipeline uniquely solves problems 
spreadsheet spreadsheets true success stories systems user pro gramming systems designed allow non programming users create compu tations design 
scott hudson people long tables organize information 
invention numerical spreadsheet fueled adoption personal comput ers 
spreadsheet naturally extends tabular organization information allowing user specify interact contents interconnections cells 
spreadsheet paradigm suggested earlier domains images volume visualization financial data 
review literature related spreadsheet visualization systems 
tabular organizations mathematicians statisticians tables sine cosine confidence probabilities 
statisticians examined visualizing higher dimensional point sets table projections 
example multivariate analysis tool scatter matrix table scatter plots see 
visualization researchers applied similar ideas different ways produce table views single dataset 
scatter matrix statistics researcher may mark datum scatter plot program highlight corresponding point scatter plots 
approaches represent largely static tabular approach data interactivity rotations translation zooming 
spreadsheets visual programming system uses constraints spreadsheet interface logic programming 
spreadsheet cells fixed grids prolog variables constrained prolog predicates 
earlier suggestions logic programming community 
visual programming data flow language systems forms 
forms implemented garnet constraint system uses cells free floating attached graphical objects line boxes buttons 
textual formulas programming statements entered cell values dialog box 
called spreadsheet similarity spreadsheets limited data propagation textual formulas accurately termed form page 
spreadsheets user interface design notable systems designed user inter face specification system spreadsheet garnet toolkit 
purpose systems enable user interface programmers specify complex constraints user interface elements equations cells 
system strictly conform grid organizes cells related stacks 
systems spreadsheet specify user interface display result appears separate window 
user interface information visualization techniques distortion presentation techniques tabular layout document lens fish eye views stretching rubber sheets 
techniques applied directly tabular organization provide global context viewing detailed focused zooming table lens 
example dataspace lattices cone trees lay images space 
addition magic lenses see tools relevant provide zooming interactive filtering capabilities 
example debugging lens may placed spreadsheet reveal dependencies cells 
examples relevant user interface techniques include pad organize spreadsheets different depths 
spreadsheets related area constraint languages systems 
constraints relationships declared maintained system 
constraints relevant spreadsheets values cells constrained equations 
spreadsheets single direction data propagation viewed way constraint systems 
common spreadsheets built multi way constraints data propagation occurs directions 
spreadsheets images past spreadsheet focused data readily visualized straight mapping numbers images 
spread sheet allows display images cell asp contains advanced capabilities 
spreadsheets images si system interactive im age spreadsheet system examine ways profitably extend spreadsheet paradigm images 
example levoy shows spreadsheet examine image processing pipeline shows image processing tasks efficiently organized spreadsheet system 
spreadsheet images mentions importance data flow spreadsheet 
levoy briefly men tions volume visualization context tool 
interactions tool implemented tcl commands certain geometric operations implemented direct manipulation 
systems illustrate capabilities possible extending spreadsheet paradigm domains 
visualization systems interest visualization user interfaces past years systems developed application areas hypertext informa tion geology molecular biology file system structure animal behavior patterns 
large visualization systems contain modules users hook data flow network create visualizations 
systems offer advantages rapidly build ing applications 
success systems attests utility modular easy extensible tools visualization tasks 
examples systems include avs iris explorer ibm data explorer visualization toolkit vtk 
general existing visualization systems designed visualizing single dataset time 
visual interactive spreadsheets past visualization community produced interactive tables specific applications include systems focus graphical financial spreadsheet called finesse 
system designed browsing tabular numerical information looks con spreadsheet bar graphs 
focus interactive table modeled table lens allows sophisticated navigation sorting hiding information contained table lacks editing capabilities 
focus similar main difference interaction methods 
uses fish eye layout strategy display focus uses dynamic querying mechanism primary interaction method 
finesse prototype system designed financial data cells fixed grids contain representation primitives line plots surface plots heat maps bar graphs 
prototype system abandons fixed tabular grid conventional spreadsheets cells free floating 
allows specification line plots sliders attached variable values 
compared spreadsheet data dependency capabilities 
analysis related spreadsheet research visualization spreadsheet natural extension ideas 
focuses area information visualization issues arise prominently domain 
build experiences spreadsheets mentioned include variety different visual representations operations useful interacting visualizations 
build experience numeric spreadsheets 
explicitly keep nu spreadsheet features tabular grid layout operators specify operations relationships cells automatic recomputation dependent data sets 
ap ply concepts visualization cell contain entire visualization includes underlying data sets sequence data transformations associated viewing parameters 
image spreadsheets si focused images associated image operations 
images straight forward mapping value view 
sense view value little discernible differences 
operator model image spreadsheet limited image processing operations comparison full blown visualization system 
take similar approach si system tcl command language focus tasks operation associated information visualization 
finesse differs finesse sys tem allows animation dynamic visual filtering dynamic mapping variables representation :10.1.1.123.805
finesse limited number cell primitives system allows wide variety geometric primitives system built top visu alization toolkit vtk 
command language system allows users construct visual representations data 
finesse focuses financial data system tailored information visualization tasks 
lastly contrast visualization spreadsheet existing large visualization systems designed viewing single visualization time 
contrast spreadsheet systems data flow systems large amount screen space devoted operators operands 
believe applications spreadsheets provide better interaction 
summary reviewed prior related information visualization systems general particular applications spreadsheet concept visualization related areas 
typ ically information visualization accomplished carefully examining task require ments designing application fits needs user 
needs anticipated ahead time 
exploratory nature tasks suggests need construct environment provides set data graphic processing primitives users employ needed 
visualization spreadsheet geared achieve version environment 
number researchers applied spreadsheet concept selectively data mains images mentioned possible wide applicability visualization tasks 
review indicates needed define visualization spreadsheet advan uncover frameworks implementing spreadsheet concept 
examining structure sensemaking seek show inherent capacity spreadsheet metaphor supporting user tasks 
chapter illustrated principles scenarios detailed case study basic trick user interface design find starting place somewhat recognizable help user grow strongest set tools possible 
alan kay chapter show principles underlying power spreadsheet paradigm presenting set scenarios case studies usage visualization spread sheet system 
show visualization spreadsheet afford construction scenarios applying different operations cells 
illustrate spreadsheet data domains 
show spreadsheets enable users compare vi cells tabular layout 
users spreadsheet display manipulate explore multiple visual representations data 
just numerical spreadsheet enables exploration numbers visualization spreadsheet provides frame exploring large complex visual information 
structuring user interactions spreadsheet paradigm creates powerful tool information visualization 
section describe original molecular biology data domain motivated research 
section describe data domains examples thesis 
section examples illustrate set principles spreadsheets powerful paradigm 
section detailed case study spreadsheet analyze data set content usage structure large web site 
show principles apply specific data domain 
sections detailed descriptions data domains needed understand details section necessary understanding rest thesis 
section extended example principles valuable essential understanding rest thesis 
readers may choose skip detailed description data domains detailed case study web analysis read essential section illustrated principles 
original data domain genetic sequence similarity biological sequence analysis modern biology evolved point un mechanisms biological organisms understood digging genes control cells function 
mechanisms play important role lives 
existence depends genes passed generation inherited genes encode proteins necessary survival 
proteins fold complex physical structures help define functions complex chemical reactions occur body 
generations functions proteins turn affect encoding genes evolutionary mecha nisms mutation natural selection 
way interaction depicted upper part 
organisms related evolution genetic material different organisms share common functions 
molecular biologists seek determine understand connections evolutionary relationships 
traditionally painfully detailed lab experiments designed carried de termine function proteins 
relatively slow process 
method improve protein function determination sequence similarity analysis computers comparison single sequence databases known sequences 
sequence similarity algorithms developed aspect computational molecular biology research employ dynamic programming heuristic search tech niques 
algorithms identify similar regions called alignments se quences 
alignments provide clues possible protein functions unknown dna sequence 
protein structure gene similarity algorithm function textual multivariate reports molecular biology seeks determine interaction gene protein protein structure protein function 
similarity algorithms provide shortcut finding possible protein functions unknown sequence 
input sequences reducing need painstaking lab 
information computer provides hours take months lab 
ironically information sequences available potentially reduc ing need laborious laboratory task analyzing sequences comput ers increasingly difficult 
blast popular similarity search algorithms today running time approximately proportional size database 
past decades molecular biologists conduct large scale genetic sequencing projects adding databases automated dna sequencing ma chines 
molecular biologists discover new genes various organisms functions corresponding proteins information cataloged form nucleic acid sequence databases genes amino acid sequence databases proteins 
genbank primary repository dna sequence data contains roughly nucleotides sequences april doubling years 
rate increase accelerate large projects human genome project arabidopsis genome project gain momentum 
computers keeping pace analysis data difficult task biologists 
data domain number properties similar datasets encounter information visualization similarity reports highly textual similar ity relationships items important visualization problem 
began working visualization spreadsheet col molecular biologists interested exploring plant dna sequences 
biologists compare sequence database known sequences ing similarity search algorithms produce reports indicating regions similarity 
regions similarity called alignments 
reports hundreds pages long single sequence 
help biologists reports developed system visualizes prominent data 
concise description features 
basic visual representation data consists comb glyphs shown show different regions similarity degree similarity regions occur input sequence 
alignment associated twelve variables listed position 
position input sequence alignment starts 
frame number 
frame number defines dna sequence translated protein sequence 
dna sequences composed letter alphabet 
dna bases encode protein residue called amino acid 
dna sequence encode protein sequence starting second third position 
starting point determines bases grouped residues 
comparing dna sequence protein sequence encoding tried separately 
similarity scores residue pair scores 
similarity algorithms blast compute similarity score alignment 
pair residues alignment blast looks entry substitution matrix gets residue alignments represented axis position input sequence axis similarity score axis frame number alignment 
pair score measure match strength 
positive entry corresponds match negative entry corresponds bad match 
blast sums residue pair scores alignment obtain similarity score 
alignment includes matching vector 
vector represented array integers contains residue pair scores matches starting matching position 
alignment described twelve variables plus matching vector 
uses spatial axes temporal axis 
twelve variables mapped axes 
temporal axis allows user construct animations respect temporal variable 
dimensional spatial image matching vector represented comb glyph 
lengths teeth comb correspond integers comprising matching vector 
user explore data means interactively rotating translating scaling representation hyperlink textual report mapping data different geometric representation animating information variable filtering data 
report data variables small number appear single visualization 
mitigates problem enabling user selectively map data dimensions space allowing dynamic filtering data 
addition dynamic query capabilities support types animation dimensions enhancing display 
motivation multiple visualizations biologists visualization technique ex useful discovery biological artifacts 
allowed find solutions questions hard answer questions thought asking 
large number questions involved relationship similarity reports 
visual representation en biologists compare visualizations related sequences biologists ability useful 
noticed biologists put visualizations side side screen compare contrast visual features 
frequently applied operation visualizations simultaneously rotating similar ori applying animations time 
trying simultaneously applications screen difficult cumbersome 
information visualization techniques provided biologists tool view genome data new novel ways new paradigm clearly necessary take level exploration 
ability compare visualizations related sequences useful specifically requested ability apply number different operations visualizations simultaneously 
experience biol motivated think support behavior general environment users perform tasks efficiently productively 
spreadsheet spreadsheet similarity report spreadsheet system called spreadsheet similarity reports ssr built visualizing genetic se quence similarity reports grew system mentioned 
collaborated closely molecular biologists interact frequently 
allows directly support information analysis tasks 
close collaboration allowed directly capture requirements building visualization spread sheet data 
example spreadsheet uses direct manipulation controls menus buttons specifies particular operations performed data sets 
includes similarity processing engine generate similarity data fly 
discuss details system section data domains system built general visualization spreadsheet system called spread sheet information visualization siv pronounced sieve 
siv built top multi platform interpreted development system combining tcl tk vtk provides object oriented architecture pre built visualization objects 
section briefly describe information domains test studies 
domains illustrate specific problems research group encountered information visualization analysis tasks 
section fur ther demonstrate usage systems domains time illustrate principles spreadsheet paradigm facilitates information visualization tasks 
task centered approach illustrate concretely principles lie siv visualization spreadsheet enables users solve problems information visualization 
time series matrices similarity data time series matrices type data presents chal type commonly encountered information visualization 
major ties arise dealing time series matrices 
difficulty identify differences matrix values successive matrices 
second difficulty visual representations applied 
example representa tion shows matrix values bars representation show values colored tiles 
different representations extract different features easy way view explore representations simultaneously needed 
spreadsheet environment deals difficulties 
encountered matrix series trying solve problems molecular biologists interested studying effect mutation natural selections genetic sequences 
natural selection accepts certain mutations result substitutions protein residue residue 
mutation accepted protein usually function similar way old presumably due chemical physical similarities 
pam point accepted mutations blosum blocks substitution matrix matrix series matrix representing substitution probabilities evolutionary distance 
matrix series calculated different sets information sources 
element ij matrix specifies relative probability amino acids substituted evolutionary interval 
positive entry specifies accepted mutation random negative entry specifies random 
detailed nature series matrices results large amount informa tion 
example biologists matrices calculation similarity tween sequences 
unfortunately computational molecular biology community applied visualization techniques matrices 
sure biologists want stand nature matrices mathematical biological complexity 
computational molecular biology community seeks understand matrices cause choice matrix employ dependent situation 
siv system try gain better understanding matrices 
algorithm visualization third domain examined algorithm visualization 
past algorithm tions animation techniques sequential layouts show successive steps 
section show spreadsheet easily construct animations tabular layouts steps delaunay triangulation 
show multiple visual representations enhance comprehensibility visualization 
algorithm example algorithm visualization supported siv visualization spreadsheet 
algorithm generates random points random number generators forms tetrahedra points delaunay triangulation 
delaunay triangulation scientific information visualization domains generate structures points 
delaunay triangulation optimal triangulation number interesting properties maximizing minimum angles 
delaunay triangulation complicated complex algorithm 
problem triangulation studied non intuitive people 
visualization techniques help gaining better insights algorithm 
illustrated principles section derive define principles visualization spreadsheet concept demonstrating ssr siv context data domains described genetic sequence similarity time series matrix visualization algorithm visu alization 
derive comparison data sets data exploration process user interaction involves applying operators data sets 
visualization spreadsheet facilitates interactions letting users explore scenarios structured environment 
example users copy modify contents cell perform operation cells put result third cell 
application operators largely viewed sequential process environments spreadsheet environment capable supporting non sequential spontaneous explorations 
spreadsheet paradigm provides simple interface performing value operators derive new data sets subtraction addition 
illustrate algo rithm visualization example 
shows algorithm visualization delaunay triangulation forms tetrahedra set random points generated ran dom number generators 
columns show results algorithm steps left right respectively 
row shows point set scatter plots 
row shows transparent tetrahedra performing delaunay triangulation 
row represents tetrahedra edges vertices 
example show visualization spreadsheet quickly form operations successive steps delaunay triangulation 
example adding geometric contents cells user aggregate representations create new representations show differences steps algo rithm 
instance user wishes examine intricate relationships different results successive steps 
adds cells form new visualization command adds geometric contents cells columns visualize outcome algorithm steps respectively 
row shows result addition operations formula syntax command result operands generating cells delaunay triangulation example 
put result cell 
commands follow pattern generates results cells 
result operations shown 
user sees difference successive step generation random points produces larger polyhedron 
prompts user issue additional command add triangulations form new visualization see cell result command 
command adds geo metric contents cells row produces single content puts bottom right cell 
cells shows differences steps algorithm 
cell shows difference step shows difference step 
see new points added point set structural changes convex hulls steps 
cell hull steps completely embedded inside convex hull obtained steps 
see blue surfaces vertices convex hull changed 
cell shows aggregate adding stick models row 
representations arise iterations trying different combinations points sticks surface representations data row 
see successive step generates larger larger polyhedron 
discovery observation delaunay triangulation algorithm additional point added set increase size resulting triangulation decrease 
known result computational geometry 
interestingly algebraic operations take different semantics multiple levels 
low level capture cell images perform image subtractions subtracting corresponding pixels 
mid level shown algorithm visualization example perform geometric object algebraic operations 
define objects algebraically add subtract scene 
high level perform algebraic operations particular data domain semantics 
encountered need examine domain semantics operators domain study molecular biologists exploring dna sequences 
genetic sequence simi larity data domain spreadsheet paradigm provides simple interface perform ing operations data set subtraction addition 
molecular biologists want locate differences algorithm runs different algorithmic parameters 
example values sets alignments define alignments equal share region 
shows snapshot example session result step analysis step load column data sets generated input sequence vary ing parameter specify sensitivity algorithm respect distantly related versus closely related sequences 
decrease distance far near columns respectively 
screen snapshot ssr system performing operations 
step initially loaded column slightly different related dataset 
step selected row subtracted cell 
cell contains empty set expected 
step changed row show different views row views show different sets variables different representation increasing ability see dimensions multivariate datasets simultaneously 
step select row subtract cell cell row 

cell contains empty set expected 
cell values alignment sets define alignments equal share region 
cells show alignments far evolutionary distance parameters near 
step point cells row contain data sets correspond ing cells row change variables represented axis variable axis mapping resulting different views datasets 
example visual subtraction allows user see difference datasets 
domain specific semantic level possible definitions exists operator 
example difference operator possible interpretations 
define different types equality alignments resulting difference operators 
equalities name overlap exact 
name equality alignments considered equal occur database sequence 
overlap equality alignments share overlapping region 
exact equality alignments share exact region 
likewise high level algebraic operations domains rely specific semantics domains 
data domains comparison operations set algebraic nu 
example having negative numbers existence set membership 
additional operator set intersection 
instance creates new set items numeric spreadsheet negativity represented negative sign coloring item red putting number inside parentheses 
task specific operation visualization spreadsheet define visibility colors special icons represent different set memberships 
ability generate comparison data sets proves important exploring dif ferences related data sets 
know domain semantics apply spreadsheet principle enable users algebraically explore differences data sets 
addition subtraction operation shown typify case comparing sim ilar identical data sets interest researchers fields 
spreadsheet approach algebraic manipulations straightforward 
spreadsheet principle applying algebraic operators cells derives comparison data sets enable comparison tasks carried precisely visualization spreadsheet 
apply operators parallel common equally important interaction applies direct manipulation operations rotation translation zooming 
spreadsheet environment want able apply operation multiple cells simultaneously 
feature extremely useful comparison tasks 
instance user select row perform rotations simultaneously cells row giving rotationally coordinated view data 
scatter plots tion provide correspondence points different cells 
illustrates example parallel application operators 
feature useful situation cause want pictures similar orientations provide correspondence points different cells 
general user parallel application operators cells extremely useful 
example time series matrices example understanding differences tween matrices requires visually comparing number different matrices ously 
second third fourth rows cells visualize pam pam pam blosum matrix respectively 
propagating view changes parallel multiple cells proved highly valuable data analysis situation 
selecting row compare various visual representations orientation 
alter example parallel application direct manipulation operations multiple cells simultaneously 
screen snapshot shows visualizations protein residue substitution probability matrices various evolutionary distances 
second third rows visualize matrix pam matrix series 
fourth row visualizes matrix blosum matrix series 
column uses cube representation maps positive matrix values volume height color attributes cubes 
second column uses carpet plot maps values height color surface 
third column uses bar representation maps values length height color attributes bars 
fourth column shows various representations different rotational configurations 
natively select column compare different matrices visual representation 
algebraic operators simple scene operations op erations loading data set animating variable dynamic query filtering useful principle 
example selecting column cells user apply animation operation cells simultaneously 
animation tool provides accumulative sliced animation variable 
synchronized animation performed group cells simultaneously 
example suppose interested distributions lengths alignments animate cells length variable 
animation shows extra alignments cell short alignments compared alignments 
example user apply data filtering operator row data cut unwanted data points 
concrete example step sequence sim ilarity example load data sets selecting column clicking column button applying load dataset operator cells column 
step subtract cell row selecting row applying subtraction operator cells row 
filtering tool enables user explore subsets data 
user interactively adjusts sliders controlling variable view updated real time 
filtering tool closer inspection reveals short alignments residues long 
distributing single operation group data sets common interaction data exploration 
speed users tasks automating chore applying operations large number cells 
spreadsheet principle visualization spreadsheet easily af applying operators parallel large group cells data sets 
extract multiple visual features simultaneously users spreadsheet spreadsheet compare different visual represen tations 
data type choose different visual representa tion techniques 
technique contributes finding visual feature visually extracts different visual feature 
fortunately spreadsheet environ ment assists organization display various visual representations 
system easily extended handle new techniques command modules allows quickly experiment compare representation techniques 
illustrate flexibility data domains 
algorithm visualization shows different visual representations delaunay triangulation 
row represents point set scatter plots showing spread points quite 
row shows data transparent tetrahedra delaunay triangulating point sets 
interactive rotation represen tation gives better view relative placement points 
shows convex hulls point sets hulls change steps algorithm 
row represents delaunay triangulation edges tetrahedra giving better view interior structure triangulation 
ssr sequence similarity spreadsheet allows changing visual representation mapping tool 
cells row contain data sets corresponding cells row changed mapping row show different variables similarity report 
organization cells column represent value row offers different view data 
ability map different variables different axes different cells improves user ability see variables simultaneously 
spreadsheet click point interface controls operations 
user loads columns data column time changes mapping data row mapping tool dialog box 
implemented mapping tool pull menu axis 
exploring multiple features important domain time series matrices 
constructing modules different visual representations matrices spreadsheet answer specific scientific questions amino acid substitution time series matrices 
tabular layout shows different visual representations different columns 
values cells row varied visual representation bring different features data set 
discovering novel patterns multiple visualization representations time series matrices example 
discovered novel patterns matrices 
column uses cube representation maps positive matrix values volume height color attributes cubes 
representation shows interesting variation diagonal entries clearly representation methods 
entry represented orange cube varies entry 
second column uses carpet plot maps values height color surface rainbow colormap negative entry mapped red 
carpet plot technique shows matrices different ranges values colors get brighter brighter top bottom 
third column uses bar plot representation maps values length height color attributes bars 
bar plot technique comparing specific entry matrix matrix easy shows decreasing trend diagonal entries 
experience shows elegant organization spreadsheet allows interesting combinations different visual representations underlying data 
users compare visually extract different features different representations 
spreadsheet environment users necessary tools explore representation space 
spreadsheet principle users represent data sets different visualization representation techniques enable extract multiple visual features simultaneously 
create analysis templates spreadsheet enables users create templates reliably repeat needed computa tions effort re development coding 
advantage evident numerical spreadsheets translates easily visualization spreadsheets 
users construct layouts situations programmers foresee re 
allowing users enter data cells various configurations spreadsheet supports variety different tasks 
single easily understood easily configured tool handle multiple situations 
users familiar tables immediately start organizing data spreadsheet metaphor 
example easy comparison numerical spreadsheets users put numbers load sets numbers adjacent columns 
similarly visualization spreadsheet users layout data sets compare groups data adjacent columns 
flexibility contributed numeric spreadsheets success 
example user set particular organization enables im mediate detection differences different related data sets 
vertical col umn contains different dataset generated changing parameter algorithm sensitivity algorithm respect distantly related versus closely related se quences 
example viewers molecular biology training see simi larity data sets general structures alignments cells appear 
example shows tabular organization spreadsheet enables user detect differences visualizations datasets 
users take advantage visual comparison abilities detect differ ences data sets 
example columns rows table increase number dimen sions see simultaneously 
columns show snapshots steps delaunay algorithm 
columns show results algorithm steps left right respectively 
case columns represent time dimension 
analysis template user analyze different runs algorithm examining different random point generator time 
demonstrates analysis template different visual representations set visualizing series matrices 
simply applying matrix values cells enables multiple analysis 
configuring spreadsheet lets see templates adapted wide variety tasks showing time dimension different data sets different visual representations 
examples show tabular layout flexibility lets users construct different analysis templates different tasks contributes power spreadsheet environments 
spreadsheets familiar flexible easily configurable excellent interactive comparison tasks 
coupled capability simple direct manipulation operations applied parallel see users tailor spreadsheet individual situations fly 
spreadsheet principle visualization spreadsheet enables users perform repetitive analysis tasks creating analysis tem plates applied 
update automatically dependency links spreadsheet advantages automatically updates contents cells data dependencies 
cells store complex data sets may composed different data sets different types dependency cells complicated numeric spreadsheet 
siv objects results application operator application operators specifies dependency relationships objects cells 
consistent way numeric spreadsheets derive dependencies cells 
operator input data ports output data ports 
specification application operator output data dependent input data 
delaunay triangulation example dependency graph shown flow chart 
summarizes dependency relationships cells example 
point addition operator specifies relationships cells row 
corresponding cells row related cells second third row delaunay triangulation operator 
cells fourth row related cells third row geometric addition operator 
example cell related cells third row addition operator 
operation spreadsheet system keeps declaration dependency relationships memory 
system notices change cell affects cells system executes corresponding commands formed dependency rela keep relationship date 
instance shows adding single point cell cause cell obtain extra point data set 
cells content depend row cell delaunay triangulation cell cell add cell add point cell delaunay triangulation cell cell cell add points cell delaunay triangulation cell cell cell add points cell cell add add add cell cell delaunay triangulation delaunay triangulation algorithm visualization dependency flow chart recomputed 
enabling system automatically keep data sets date take away burden user enables focus analysis data sets 
spreadsheet principle visualization spreadsheet updates auto matically dependency links cells 
automatic tation dependencies cells reduces burden com putation user 
mapping value structure custom layouts advantages tabular layout familiar flexible easily configurable excellent interactive comparison tasks 
tailored multiple situations single tool easy understand easy configure 
siv system compare matrix series pam blosum 
understand differences matrices important able visually com pare number different matrices simultaneously 
able quickly bring data lay different ways extremely useful 
example lines commands row shows blosum matrix 
second third fourth rows cells visualize pam pam pam blosum matrix respectively 
horizontal dimension spreadsheet columns show matrices various visualization techniques 
vertically scanning spreadsheet user detect differences matrices quickly 
spreadsheet allows way comparing somewhat similar entries 
data complicated spreadsheet furnishes ways organize compare matrix values different matrices 
see columns diagonals matrices strong values sense identity substitution mutation favored evolution 
second column see matrices quite different colors get brighter brighter top bottom 
row shows blosum matrix see values clearly different pam matrices shown 
tabular layout reasons spreadsheet environments powerful 
organization familiar users simple direct manipulation operations rotate contents cells 
custom tailored individual situations fly 
important lesson learned example importance able map values structure spreadsheet 
vertical dimension spreadsheet time horizontal dimension various representation methods externalize variability variables interested correlating 
spreadsheet correlating features visually difficult 
call process value structure mapping 
employing external cognition reduce cognitive load user speed sensemaking analysis 
spreadsheet principle visualization spreadsheet map value structure custom layouts externalize vari ability variables horizontal vertical dimensions visualization spreadsheet 
direct manipulation command languages access apply operations important aspect visualization spreadsheet 
examined different methods performing spreadsheet operations 
method direct manipulation interface corresponding noun verb model user selects group cells noun applies op eration verb cells 
operation specified combination menus dialog boxes 
example set similarity data user se column cells performs single import operation large dataset cells 
example menus dialog boxes ssr system shown 
main popup menu mapping dialog box animation dialog box spreadsheet similarity reports ssr visualization spreadsheet uses direct manipulation interface menus dialog boxes system easy 
second method command script language interface 
user enter commands entry box similar traditional numerical spreadsheet 
alternatively write script file load script 
example define layout writing script specifies datasets representation method cell 
script file contain non layout commands animation define new commands 
see history window user just loaded script pre defined layout 
example commands scripts shown 
textual commands allow users specify operations siv spreadsheet simple macro languages 
scripts specified file loaded 
command language define modules extend spread sheet file input modules modules define visual representation data type 
module user simply loads module new commands module available 
example user programmed new modules implement new visual representations matrices command language 
command language defined visualization spread sheet includes operators scatterplot 
operators follow language convention command result arguments command operates arguments puts outcome 
experience systems believe combination ap proaches appropriate visualization spreadsheet 
advantages menu interface relatively intuitive time users training time new users short 
features visualization spreadsheet system danger creating large number menus structure 
menu systems tend slow expert users 
advantages command language interface flexibility appeals power users 
command languages construct macros complex tasks performed rapidly 
command languages difficult master require substantial training memorization 
spreadsheet principle visualization spreadsheet direct manipulation command languages 
certain operations technique may appropriate 
detailed case study web analysis visualization spreadsheet section detailed case study spreadsheet analyze large data set content usage structure large web site 
demonstrate visualization principles apply specific data domain 
visualization web space site administrators want know patterns web sites improvements 
mine information users prod uct interest 
users need tools navigate locate information faster 
support sensemaking tasks visualization large hypertext spaces done various re searchers 
systems designed fixed priori limited set tasks mind 
system provide set primitives conducting iterative cyclic anal ysis tasks web ecologies 
provide system handling large web sites files associated evolving attributes 
develop spreadsheet paradigm visualization sensemaking web sites 
visualization application called web analysis tion spreadsheet spreadsheet paradigm enables processing subsequent understanding evolving web content usage topology cut 
developed visualization techniques disk tree cone tree re duce cost doing cyclic analysis tasks hypertext document collections 
purpose examine application evolving xerox web site year period 
targeted users include web analysts marketers advertisers web masters administrators need reduce cost accessing millions pieces related web cut information 
reduction cost comprehending immense amount dynamic web data enables sensemaking tasks done orders magnitude faster previous applications 
web sites associated usage data change daily cost structure reduction critical maintaining timely web sites 
shows system step analysis 
real world analysis scenarios motivated need site administrators content providers users able form exploratory sensemaking web sites 
section show web analysis visualization spreadsheet able engage user visual sensemaking cy cle successively gather higher levels information 
ability operate web site analysis data permute different operators graphically process data supporting visual sensemaking cycle 
information previous showed importance finding various patterns information 
problem encountered time tubes visualization choice color scale mapping frequency usage 
color scale advantage disadvantages 
result typically experimenting different color scales finding perfect scale 
visualization spreadsheet provided appropriate tools experimenting problem 
simply applying change color scale entire row column simultaneously view effect frequency usage different contexts 
principle applying operators parallel enables interaction ease 
sensemaking cycle cone tree vertical dimension choose threshold color scale maps values row row row 
horizontal dimension columns show st nd rd th week april 
th column rd week august 
cone trees show hierarchy color scale rainbow heat scale red correspond high levels usage blue correspond low levels usage 
value structure mapping principle correlate color scale time 
shows particular features emerged row color scale 
feature marked yellow square corresponds sub tree rooted www xerox com investor content html feature marked yellow circle correspond www xerox com news html 
fea tures show information rose usage st week rd week lowered th week 
important note feature visible row 
web analysis visualization spreadsheet showing xerox com web site cone trees 
columns show st nd rd th week april 
th column rd week august 
cone trees show hierarchy color scale rainbow heat scale red correspond high levels usage blue correspond low levels usage 
choose threshold color scale maps values row row row 
information xerox com web site 
area marked yellow increases usage decreases th week 
second cycle disk tree doing interpretation step sensemaking cycle decided try different visual mapping transformation disk tree 
shows data disk trees cone trees 
notice features visible third row harder eye pick disk tree layout algorithm exaggerate levels tree cone tree layout algorithm exaggerate levels 
hand easier comprehend structure usage pattern disk tree disk tree technique occlusion problems 
example shows different visualization techniques contribute different senses sensemaking process 
disk trees value structure mapping principle correlate color scales time 
create analysis template principle reusing spreadsheet format cycle 
correct creation new content continuing case study wanted find reason usage increase areas web site 
looking details area examining content april xerox announced new digital product family basis xerox office products century www xerox com pr nr html 
new product series new approach network printing scan ning 
press release xerox introduced products series document centre digital copier 
looking press release new page linked root node web site primary product page product series www xerox com products content html 
details area shown 
immediately obvious pattern age structure changed th week obvious visual features noticeable careful examination 
feature marked long rectangle corre sponds new product page related pages 
red coloring entire area shows high usage 
area new extensively means web analysis visualization spreadsheet disk trees 
information visible harder eye pick 
area shows correct creation new content highly desirable web users 
importance content validated amount attention received 
creation new web content product families xerox com 
parallel application navigation operations enables examination area details different slices disk trees time 
lesson learned example usefulness parallel application operators 
selecting cells row user simultaneously zoom rotate translate area disk trees 
spreadsheet affords parallel operation natural manner making interaction easy fast 
terms visual sensemaking cycle imperative provide fast easy interactions 
reducing cost interaction reduce users cognitive load view manipulation concentrate task hand minute details interface 
lesson learned example importance allowing quick access detailed information 
detail demand tool provides picking amount detail displayed programmable spreadsheet interpretive command line 
surprising increases decreases usage interpretation visualizations uncovered interesting story important product affected usage web site 
interested mining changes usage matter small changes may 
order accomplish task realized new analytical abstraction computed subtraction usage pattern usage pattern 
third cycle visual usage pattern subtraction shows result con new spreadsheet 
column shows result subtracting week week column week subtracted week column week subtracted week 
words showing order difference weekly usage patterns 
row show negative values blue color scale positive values red row 
row shows negative positive values time 
visual usage subtraction shows rise information tm tm home pages marked yellow oval 
hand copier home page increasing usage marked yellow rectangle second week third fourth week 
visual subtraction trends noticeable see straight usage color mappings 
principle derive comparison data sets enable users extract potentially interesting differences data 
validation web site design fourth cycle relevance spreading activation step visual sense making cycle wish validate web site design spreading activation 
document similarity metric perform spreading activation web site 
fig ure shows result performing operation week may 
left right show web site day intervals 
disk tree spread supplies html page red vector glyphs show move relevant documents sub tree marked yellow 
middle disk tree visual usage pattern subtraction shows differences usage quickly 
column week week column week week column week week 
row shows negative values blue row shows positive values red 
row shows negative positive values time 
visual subtraction straight usage color mapping usage pattern show difference usage 
visualization shows clusters documents different parts hierarchy relevance workgroup html node 
third disk tree shows relevant documents services html node cluster 
example shows documents parts web placed relatively accessible positions document similarity 
principle applying operators par apply spreading activation mathematical analysis operator rows parallel 
summary examples illustrated principles spreadsheet paradigm facilitates information visualization tasks 
system called spreadsheet formation visualization siv pronounced sieve 
specific examples noting number issues capabilities system 
list visualization spreadsheet principles table 
principle illustrated visual spreadsheet paradigm facilitates data exploration enabling researchers derive comparison data sets operators set addition sub traction 
principle illustrated spreadsheet paradigm enables parallel application operators range cells facilitating visual comparison values spreading activation visualization enable visualization related contents document similarity 
clusters localized sub trees means web site designed relative areas 
cells 
principle discussed spreadsheet paradigm enable ex multiple visual features spreadsheet simultaneously 
especially useful information visualization different visualization represen tation techniques available user disposal data type 
principle constructing layout configuration showed user set analysis templates apply data sets 
principle showed automatic recomputation cell dependency reduces computation burden user 
principle equip ping users set operations show visualization spreadsheet lets explore data sets unique situations mapping values structures 
principle show direct manipulation command languages visualization spreadsheet 
web analysis visualization spreadsheet example series techniques web ecology evolution visualization 
showed supports visual sensemaking cycle presenting real world scenarios context analyzing entire xerox web site 
picked visual cues show pat terns trends relationships content usage topology time 
iden applying visualization operators web ecology analysis opened door answers interesting web site design questions 
provides web analysis workbench provides users set tools applied various analysis tasks 
case studies show spreadsheet expand user ability interact multiple data sets simultaneously 
principle applying algebraic operators cells derives compar ison data sets enable comparison tasks carried precisely visualization spreadsheet 
principle visualization spreadsheet easily affords applying oper parallel large group cells data sets 
principle users represent data sets different visual ization representation techniques enable ex tract multiple visual features simultaneously 
principle visualization spreadsheet enables users perform repetitive analysis tasks creating analysis templates applied 
principle visualization spreadsheet updates automatically depen dency links cells 
automatic recomputation dependencies cells reduces burden compu tation user 
principle visualization spreadsheet map value structure ing custom layouts externalize variability vari ables horizontal vertical dimensions vi spreadsheet 
principle visualization spreadsheet direct tion command languages 
certain operations technique may appropriate 
table visualization spreadsheet principles chapter information visualization operator framework larger study table depends data especially hypotheses available means reducing data 
means mathematical graphical methods information processing 
jacques bertin information visualization encounters wide variety different data domains 
visualization community developed different representation methods inter active techniques 
community realized requirements domain dramatically different 
order understand classify easily apply exist ing graphical representation methods separate domains researchers developed taxonomy semiology graphic representations methods :10.1.1.25.1642
major dif ference current information visualization past graphic design development interactivity 
dialog human computer enriches communication information 
seek develop framework visualization operators visualization systems 
framework visualization spreadsheet 
discuss properties framework characterize operations spanning variety different visualization techniques 
framework developed enables new way exploring evaluating design space visualization operators helps users analysis tasks 
need operator framework imagine visualization application views source dataset say home finder application 
application user find potential home purchase number criteria number bedrooms geographical location price user seeks potential homes filtering homes satisfy list desirable features 
imagine view dataset visualized scatter plot display dynamic query sliders view shows values sorted numeric table 
sliders filter data points 
scatter plot view changes accordingly 
question semantics arises table view 
possible interpretation action table view totally independent view original dataset change view 
possible interpretation original data source modified interaction means table view change accordingly 
possibilities correct interpretation 
try solve problem contradictory semantics examining applica tion domain 
assume user interested selecting homes relatively expensive neighborhood fall price range 
say user interested seeing distribution homes geographical locations manipulates price slider include highly priced homes 
user merely interested plot view changes manipulating price sliders argue table view change task semantics require original data source modified 
user interested creating new dataset contains homes price range argue original dataset modified table view change accordingly 
interpretations interaction valid task scenario 
user needs mean key requests behavior intends 
problems users perspective example shows users difficulty interacting visualization systems wide gulf execution difference intentions allowable possible actions 
semantics operations imprecise worse impossible achieve 
user left way predicting result actions may incapable selecting operation desires alternatives 
gulf execution evidence operation interaction model visual ization system hampers analysis process fulfill needs analysis 
construct similar scenarios examining data domains visualizing hierarchical structures file systems organizational charts slices human brain world wide web linkage structures 
fundamentally data domains data associated visualized view filtering actions data domains exact ambiguous meanings 
problem exists careful consideration application task domain 
example emphasizes difference view value 
value visualization raw data set visualized 
view controls way raw data represented screen 
information visualization data represented abstractly screen distinct separation value data view data especially useful represent data different ways 
different areas visualization fluid dynamics volume visualization tighter coupling value data visual representation 
user needs ability decouple view value specified changed independently 
call view value separation 
existing visualization operation models take view value separation ac count leaving users difficult task figuring operate view value separately possible 
new visualization models needed bridge gulf execution presenting consistent visualization model valid application domain valid application domains 
consis tency especially important visualization systems tailor multiple data domains users able transfer knowledge usage visualization appli cations domains consistent user mental model 
problems designers perspective visualization designers face problems similar ones users face 
need provide user model deal view value separation semantic issues 
additional issue faced designers daily flexibly extend visualization system include new data domains 
providing user model approach solving view value separation issue think value turned view 
scientific visualization past data flow networks visualization pipeline helped users focus visualization process 
models designed goal providing processing model enabled designers users better understand operators interact 
seek develop model concepts visualization pipeline help designers user models consistent possible user intentions 
model help eliminate errors caused imprecise incorrect conceptual models potentially bridge gulf evaluation feedback system directly interpretable terms intentions expectations person 
words model help users evaluating performing actions appropriate task 
issue user models different problem solving situations users pre fer focus variously operations achieve single desired result operands various stages computation 
example operation focus model tra ditional visualization pipeline model focuses process visualization state data 
user interface system generally consist diagram editor allows users drag drop processing modules canvas connect data pipes 
example data state focus commercial nu spreadsheets microsoft excel showing explicit relationships variables numeric equations system hides relationships favor showing operands formulas 
enables user focus intermediate computational results 
reason commercial numeric spreadsheets emphasize operands 
focusing process user concerned state data 
mode interaction especially useful situations anal ysis step immediately apparent 
showing state data user gets visual feedback helps bridge gulf evaluation 
user evaluate result action choose step results computation 
addition describing analysis process seek user model allows cap ture data states accurately provide feedback support exploratory interactions 
call data state focus 
need model describes data transformation process visualization pipeline models data states 
extensibility new data domains designing generalized visualization system encounter new data domains 
extending visualization system include new data domain step re analysis 
result requirements analysis user study specifies groupings user tasks operations visualization designers framework take advantage analyses 
requirements analysis designers idea start designing classifying specifying influences set operators interactions 
information visualization great strides development semiology graphical representation methods lacks comprehensive framework studying visualization operations :10.1.1.25.1642
consider spreadsheet information visualization system siv exam ple 
spreadsheet environments powerful rich set operators 
challenges applying spreadsheet information visualization wide variety data domains dealt information visualization 
flexibility generalizability spreadsheet hinge application programmers ability extend spreadsheet additional operators needed application domain 
operator framework helps users designers viewpoint users designers see need construct general operator framework conceptual model enables clearly classify organize different operators 
operator framework conceptual model possible visualization operations 
operation mean user interactions direct manipulation interaction 
motivation distilled major goals 
need develop framework sufficiently clean simple enables users choose operator apply desired result 
second need model help user predict results interactions visualization system 
biggest bene fit achieving goals establishing user conceptual model allows bridge conceptual gulf execution evaluation user 
thirdly need develop general interaction model information visualization helps visualization designers classify understand relationships operators composition interactions 
model enable organize operators classifying tax space possible operations 
herb simon said understanding phenomenon step develop taxonomy 
inherent value classifi cation understanding enables isolate important artifacts design 
information visualization operator framework allow build interaction models new data domains 
motivated research visualization spreadsheet general questions utility visualization systems unclear domain specific operators integrated visualization systems 
ability incorporate domain specific operators visualization toolkit system useless 
furthermore operators domain specific effectively reused different applications 
framework enable better understand interaction data view operators 
need effective operator framework order better understand issues 
summary operator framework enable users designers better understand situations operators applied operators applied operators applied 
fundamental properties operators order develop operator framework start observing fundamental properties operators visualization spreadsheet point view 
property operator view value operator modifies underlying data set 
property degree functional similarity operators 
properties important functional similarity deals operator degree applicability degree view value separation deep implications regarding semantics operator 
view versus value dimension operators view oriented value oriented 
value mean raw data view visualization product 
value operator changes data source processes adding deleting subsets data filtering modifying raw data performing fourier transform image 
value operator fundamentally generates new data set 
view operator hand changes visualization content 
examples operators include rotation translation zooming horizontal vertical flip image changing transparency values surface order see underlying structures better 
view operator fundamentally change underlying data set 
distinction view value operator clear 
instance image value image pixel values modification colormap repre sents raw pixel value modification classified value operator 
surface heat map modification heat color scale appears view change fundamentally change underlying surface values 
example application section 
apply filtering generate data set 
times just temporarily cer tain data points invisible affecting underlying data source 
filtering operation appears change property depending user intentions 
unify seemingly contradictory classification operators important property 
view value appear black white property operators 
operational versus functional similarity developing model observation operators operationally similar applications operations underlying implementations exactly application application 
examples operations include rota tions scaling translation camera position manipulation geometric object manipulation lighting 
entire class geometric scene operators operationally similar applications fundamental assumption obtain view dealing graphic primitives lines polygons 
operate lines polygons regard original data sources 
opera tors belong class duplicating deleting view value renaming data source 
observed operators functionally similar operations semantically similar applications underlying code implementations different different types data sets 
example filtering data set common extremely useful operation different application domains different ways filtering data set domain different data structures 
example class algebraic operators adding subtracting data sets domain specific 
way add sale real estate property lists combining web linkage structures different crawls web 
operators completely application task dependent 
operations specially designed specific task particular application domain 
example class operations triggering heart pulse inserting elec probe heart electrical pulse visualization 
specify positioning probe mouse 
electrical simulation process domain task specific op eration 
example specific implementation hypertext document parsing operation multi dimensional scaling compute similarity documents 
concepts functional operational similarity related concepts view value operators 
hand view operations tend operationally similar application domains 
hand value operators tend appear functionally similar implemented differently data domain 
classes value operators combining data sets value operator operate specific data structures application domain 
view operators scene geometric pixel operations operates displayed visualization product assume graphic primitives points lines polygons voxels 
need model fits observation 
data state model visualization operators visualization pipeline discovery solution dilemma comes non intuitive source visualization pipeline 
developed visualization operator framework places operators context information visualization pipeline 
visu alization operators operate data views 
pipeline raw data value visualization view 
propose view value property operators fundamental classification stage operator visualization pipeline 
spectrum full view operators interpreted view operators rotation 
extreme full value operators interpreted value operators expanding existing data set adding new data set 
operators full view full value operators lie extremes 
example multi dimensional scaling information processing technique reduces di data sets 
examples types operators include operators related textual word frequency vectors produced set documents 
example keyword clustering techniques applied wide variety different types documents shared data domains related textual documents 
framework value converted transformed major stages value analytical abstraction visualization abstraction view see table 
stages major processing steps data transformation visualization transformation visual mapping transformation see table 
stage description value raw data 
analytical abstraction processed data visualization abstraction include information raw data visualized 
information screen visualization technique 
view product visualization mapping user sees interprets picture pre sented 
table information visualization pipeline stages processing steps description data transformation generates form analytical abstraction value usually extraction 
visualization transformation takes analytical abstraction re duce form visualization tion content 
visual mapping transformation takes information format presents graphical view user 
table transformation steps infovis pipeline information visualization data domains usually contain complicated pipelines 
example model shown slightly expanded stuart card information visualization pipeline 
raw data processed form ana abstraction processed data contain information visu data transformation process 
analytical abstraction reduced visualization transformation form visualization abstraction information content 
usually process contains dimen sion reduction step data sets information visualization complex multi dimensional dimensions projected displayed screen time 
example visualization transformation multi dimensional scaling clustering 
visualization abstraction step visual mapping transformation brings view presentable user computer display data state model order accurately emphasize user analysis process intermediate results constructed new model called data state model see visualization pipeline 
modifications fold 
visualization pipeline handles large variety operators pipeline model take multiple values multiple views account 
separate data sets go different pipelines contribute single visualization model breaks 
order ameliorate problem expand pipeline network allows values views needed 
extent model similar data flow networks 
second visualization pipeline uses nodes represent operators edges rep resent flow data 
nodes represent operators emphasizes processing visual mapping transformations preserve precision data visualization abstraction 
furthermore computer graphics bitmapped display inherently discrete mapping finite amount pixels screen finite number colors available 
effects occlusions shadows lighting affect perception values 
data space system control view space user control pipeline data analytical abstraction visualization abstraction view data transformation visualization transformation visual mapping transformation example collection text documents create text vector text vectors multi dimensional scaling surface hills valley information visualization pipeline modified stuart card model documents create text vector vector multidimensional scaling surface hills valley value filter subset difference clustering subset get user ratings rating tuple network correlate users scatter plot create similarity relationship subset edges depth traversal hyperbolic tree cone tree focus node collection web pages create web pages linkage graph network breadth traversal disk tree rotate data data transformation analytical abstraction visualization transformation visualization abstraction visual mapping transformation view visualization operator model data state model stages pipeline data states 
causes visualization pipeline models omit details individual data sets processed 
state model node represents certain data state edge operator transforming data state 
stages node network state describing status data 
directed edge state state describes operator applied modify data 
source data states raw values sinks views data sets 
example visualization data state model construct delaunay tri angulation visualization shown 
example simple data state model generating visualization 
example applies framework show visualization pipeline takes data sets generates intermediate results creates visualized view data set 
example consists random number generator takes seed number start operation 
random number generator operator creates point sets 
delaunay operator creates tetrahedra collection transparently rendered visualization 
diagram shows tetrahedra collection edge rendered different visualization shows edges 
apply differ ent view operators visualizations create new views 
different algorithm applied point set generate voronoi diagram rendered create different visualized view 
example web analysis visualization framework examine example applying framework specific application domain visualization web sites 
pipeline operators classified 
raw data set collection web pages generated crawling web site 
perform value filtering operator search documents contain voronoi diagram edge render focus random number generator seed create random point set delaunay triangulation edge render point set tetrahedra collection transparent render visualization rotate value data transformation analytical representation transformation representation visual mapping transformation view delaunay triangulation algorithm visualization pipeline filter value depth traversal disk tree focus cone tree web page collection create web page graph breadth traversal hierarchy disk tree visualization rotate value data transformation analytical abs traction visualization transformation visualization abs traction visual mapping transformation view web analysis visualization pipeline word hewlett packard hp 
example data stage operator raw data exactly data format simply specific reduction data set size 
collection web pages generate graph network analytical abstraction linkages pages 
data transformation operation data format changed processing step 
network select subsets edges choosing levels documents root node 
subset operation example analytical abstraction stage operator 
create tree doing breadth traversal visualization transformation operation 
breadth traversal generates visualization abstraction hierarchical tree web pages easily visualized 
visual mapping techniques applied visualization abstraction cone tree disk tree treemap hyperbolic tree :10.1.1.20.1530
view stage operators focusing brushing nodes rotating cone tree applied visualized content 
validating framework web analysis applied framework xe com web site value exploration web ecologies chose xerox com web site year period april may 
xerox web site contains roughly html pages non html items 
hyperlink topology usage information recorded daily basis 
analytical abstraction content words page clusters items usage file frequency page requests aggregated week intervals 
transition matrix hop count node computed topology hyperlink structure site extracted html pages 
rating file compute similarity files spreading activation 
information show relevance files file 
visualization abstraction tree result breadth traversal hierarchy items back links 
item attribute item stores associated access frequency hop counts item contains information life cycle newly created deleted moved modified 
item vector item set vectors specify pre computed spreading activation patterns 
spreading activation computed evolving document collection enables comparison results dif ferent time periods 
classification operators framework model classify variety operators stage pipeline operator involved 
classification visualization operators shows operator performs transformation takes information stages generates information set stage 
operators single stage operators different stages 
example value filtering operator selects subset data produces new data set new data format 
value filtering operator stage operator 
described stage operators ta ble data transformation operators visualization transformation operators mapping transformation operators 
types stage operators correspond stages information visualization pipeline 
data stage operators analytical ab number times particular link children traveled stage operators visualization abstraction stage operators stage op 
examples types operators 
left hand side shows domain associated example operators 
right hand side shows various example operators came data domain 
data stage operators dso general value filtering subsetting domain algebraic difference addition data sets image flip rotate crop fourier transform point set value filter web collection web pages generated crawling web site data transformation operators textual computing textual vectors obtain ratings create similarity relationships grid iso surface extraction point set triangulation web hypertext document network analytical abstraction stage operators vector select subset vectors surface divide region web select subset nodes network visualization transformation operators dimension reduction multi dimensional scaling principal component analysis clustering association rule multi modal clustering spreading activation network breadth traversal depth traversal visualization abstraction stage operators grid simplify reducing number regions network simplify consolidating nodes hierarchy cut depth tree visual mapping transformation operators point set scatter plot multi dimensional surfaces world world hierarchy cone trees hyperbolic trees treemaps disk trees network gv view stage operators object manipulation rotation translation scale zoom camera position orientation general view filter simple data domains visualization pipeline contains stages get full view value stage operators 
instance domain graphical im ages straight forward mapping value floating point values view pixels 
view value stages succinct way viewing visualization pipeline 
complex data domains operators entire pipeline 
different choices generate different analytical visualization abstractions 
example textual analysis different kinds textual analysis algorithms clustering multi dimensional scaling principal component analysis collaborative filtering algorithms may require different ical abstractions textual vectors similarity scoring user ratings 
example web analysis visualization operators extensive classification single complex data domain 
heart web analysis visualization spreadsheet set web analysis visualization operators 
details web analysis operators context framework table 
data extraction data transformation operators near top table hypertext specific require certain file formats extraction operators correctly 
web sites composed html files operators re usable different web sites matter complex large 
operators developed part analysis suite analyze visualize hierarchical data sets 
example breadth traversal visualization transformation operator hierarchical display techniques visual mapping transformation operator category 
set operators developed significant provides frame web analysis visualizations 
framework allows users understand tools provided enable choose execute operators 
words formulation operators enables fly analysis 
properties framework framework powerful 
data state model provides classification powerful properties operators explicitly clear 
earlier described operator model needed encompasses view value operational similarity properties operators 
addition examining properties detail discuss data state model describes operator centric approach 
discuss classification operators data state model describes amount direct manipulation possible operator choices hypertext markup type operator description value filter value create subset data 
example create subset data containing files reachable clicks root node 
data extract linkage create linkage graph hypertext files 
transformation information extract usage produce daily summarization file access frequency usage information flow file hop count 
analytical cluster nodes produce classes items identify groups users abstraction different clustering algorithms 
visualization breadth traversal generate hierarchy visualized various tree visualization transformation techniques 
xerox web site highly hierarchical nature generates useful view entire site 
usage frequency generates frequency pattern web site visualization pattern algebra subtracted added averaged patterns weeks 
abstraction spreading activation compare aggregate spreading activation patterns subtracting adding pattern algebra 
visual mapping display disk tree layout hierarchy planar circle 
primary transformation visualization technique visualize large hierarchies 
technique embed additional attributes glyphs third dimension 
display cone tree layout hierarchy cone 
hierarchy visualization technique shows various levels tree extremely 
apply coloring pattern map color displayed tree numeric item attributes 
display pattern glyph show spreading activation pattern top disk tree glyphs 
pattern consists pairs item activation strength 
table web analysis visualization operators geometric operators rotate translate zoom scale detail demand fly directly selected item close examination 
zoom animation show disk trees succession 
view implementing operators 
view versus value closer operator view pipeline takes view operator properties 
similarly closer operator value pipeline takes value operator properties 
illustrates addition operator different levels data state model 
shows visualization addition operator operates view level pixel values determined 
system takes data sets generates visu alization representations turn determines views bitmaps 
bitmaps added pixel pixel generate new bitmap 
example view stage operator 
shows example visualization representation operator takes polygon visualization representations adds polygon lists form new polygon visualization representation turn rendered bitmap view 
example shows operator processes information poly gon level user rotate geometric content 
shows example data stage operator takes raw data sets adds form new data set 
data set processed new set polygons new bitmap view generated 
example shows underlying data set changed dramatically visualization algorithm may produce view significantly different views generated original raw data sets 
data state model differences explicitly clear making users designers implementors aware issues 
realizing choices imple mentors examine application requirements decide different oper implemented 
framework ensure application raw data polygons raw data polygons bitmap bitmap raw data polygons raw data polygons bitmap bitmap raw data polygons raw data polygons bitmap bitmap bitmap polygons bitmap raw data polygons bitmap multiple level semantics addition operator different stages visualization pipeline 
independent operators pixel oriented operators described imple mented architecture software system making re implementation essary 
applicability operators breadth applicability operator dependent similar operationally operators system 
earlier described issue operational similarity operators 
operators operationally similar actual code share 
code sharing means possible create templates operators reducing amount re implementation 
data state model helps describing phenomenon 
breadth operator dependent late comes visualization pipeline 
moving pipeline gets closer closer generalized data type applicable wider range data domains 
example rotation scaling scene operators tend broad applicability view operators operate geometric primitives 
order decreasing breadth applicability list examples different levels applicability mentioned section view stage operators rotation applica ble large set data domains operate computer graphic geometric primitives lines polygons 
visual mapping transformation operators usually applicable wide variety data types 
example glyphs icons streamlines employed show multi dimensional data particular spatial point 
worlds worlds visualize high dimensional surfaces 
cone trees hyperbolic trees treemaps disk trees visualize wide variety hierar data :10.1.1.20.1530
visualization transformation operators applied data domains similar goals 
example multi dimensional clustering reduce dimen problem formulated feature space 
breadth traversal produce hierarchy graph network 
data transformation operators specific particular data structure application domain take data structure input output ana abstraction 
examples include creating text vectors list documents creating graph network web site 
value stage operators specific associated data type 
operator centric approach data state model explicitly operator centric approach 
oper ator appears able operate multiple types data separate single operator idea different operator implementations 
example filter viewed value operator view operator separate meanings value filter view filter operator 
approach opposite data centric approach favors overloading operators function multiple data types 
data centric approach advantage simplifying space different operators 
presents simpler user model cost complexity part designer 
data centric approach creates semantic ambiguities confusing user saw view value filtering example chapter 
added simplification operator space data centric approach represent significant complexity savings 
visualization system needs deal different data types operator space systems complex anyway 
operator centric approach significant departure past visualization models gives data state model ability classify different operators finer grain detail 
approach classifying space operators finer detail easily reuse operator definitions actual code implementations 
turn benefit user little ambiguity semantics operator operator precisely defined inputs outputs 
direct manipulation amount direct manipulation possible operator lies tion pipeline scale 
closer operator view higher amount interactivity possible operation visualization manipulate 
example ge position orientation operators easily directly manipulated 
described section variable axis mapping ssr system visualization transfor mation operator easily specified point click approach dialogs menus 
move pipeline value operators amount domain dependency increases making specification operations difficult near raw value pipeline operators directly perform visualization 
example parsing file data extraction data transformation operator extremely hard design interface allows user specify file mat 
interestingly ms excel certain amount automatic parsing capabilities import wizard 
need import data especially important users 
capabilities hard design information visualization wide variety data domains different data information structures 
visualization systems hardest part visualization process importing data 
implementation choices model help choose implementation methods operators 
classification operators tell implemented 
specif ically multiple pieces software modules putting visualization application particular operator implemented 
basic choices implementation inside visualization system 
examples operators appropriate choice scene operators camera operators color scale operators 
queries inside data management engine database management system dbms 
example full power relational algebra organize online analytical processing olap analyze generate meta data 
analytical engine outside data tion system 
examples differential equation solvers fluid flow simulations web crawlers numerical analysis mathematica maple matlab business compu tation numeric spreadsheet ms excel image sound video processing 
operator model helps choosing implementation choices 
example operator closer view stage pipeline efficient easily implemented visualization system 
data flow systems avs data explorer visualization spreadsheet implement visual mapping transformation operators view operators visualization 
data source visualization comes data analytical engine relational database 
cases operator closer value stage pipeline efficient implement database management system 
example merge data set operation simple join command relational database 
discussion classes users framework kinds people benefit framework 
visualization system devel framework system extensible application programmer 
example applied framework siv visualization spreadsheet system extending multiple data domains chapter 
second visualization system built application programmers model extend system new data domains 
framework enables program mers identify operators domain specific easily reuse 
framework provides clean concise model users understand operate system visualization spreadsheet predict results applying operators 
user advantages framework types users user matters visualization model help users achieve goals faster easier 
data state model help user visualization spreadsheet 
empirically user experiences framework siv system 
experience development framework enhances usability spreadsheet solving problems 
framework provides user interaction model users understand get visualization 
accomplished incorporating visualization pipeline process model 
steps pipeline user perform actions required create desired visualization correct order 
second framework establishes users expectation flow changes data 
enables users understand system works data flow manipulated perform correct analysis action 
example create set textual feature vectors set documents see left side 
analysis choose multi dimensional scaling analysis choose create subset textual vectors applying clustering algorithm 
states dependent data source set documents change states change 
explicit data state model 
third framework cleanly solves operator semantics problem models separation view value 
view versus value filtering example mentioned excellent example framework forces interaction de signers realize potential ambiguity semantics operators 
forcing designers think operators exist pipeline operator semantics ex plicit 
having cleaner model user choose operational semantics correspond correct action desires 
user interact accurately understands operators different stages pipeline fit 
visual sensemaking visualization operators information reply question 
jacques bertin visual information processing instantaneous thing au analysis machine 
visualization systems siv provide tools reduce cost structure obtaining information step analysis 
care fully analyzing particular domain web site analysis task described chapter total time spent study significantly reduced 
cognitive task structure called sensemaking developed describe user tasks mentioned chapter 
bertin mentions major stages decision making 
thinking visualization operator framework major stages define finer grain visual sensemaking cycle 
shows visual sensemaking cycle various stages 
gray boxes denote bertin stages decision making 
defining problem defining data choosing analytical abstraction choosing visualization abstractions adopting processing language transcribe value view processing value view interpret deciding iterate stages visual sensemaking cycle show visualization operators framework implemented siv system helps users carry various stages sensemaking cycle 
apply sensemaking cycle web site analysis task scenario 

defining problem analyst faced problem defines prob lem asking certain questions 
questions formed context hypothesis 
example certain areas web site accessed areas 
access pattern areas change time 

defining data problem framed context hypotheses analyst gather raw data necessary analysis 

choosing analytical abstraction raw data organized data struc tures easy access query 
extract linkage information graph specified adjacency lists 

choosing various visualization abstractions visualization researchers know certain information abstractions 
depending structure cal abstractions visualization techniques available task devel choose variety visualization abstractions new techniques invented visualize new analytical abstractions 
example visualization researchers know visualizing graph network order nodes dif 
unfortunately graph xerox web site order nodes 
system solve problem order take advantage hi nature xerox web site choose hierarchical representation visualization abstraction 
preserve back links part detail demand information 

adopting processing language step visual sensemaking determine operators appropriate task 

transcribe value view stage essentially execution visu alization pipeline generate new visualization state 
user sees visualizations try shed light hypothesis posed earlier stage 
processing value view stage analyst perform certain interactive operators results rotation scaling detail demand zooming value filtering 

interpret deciding analyst cognitively process visualization order understand features brought forth specific views 

iterate specific features grab attention visualized results 
hypotheses formed new visualizations need constructed answer questions 
process repeats analyst satisfied completely sense data 
power visual sensemaking comes combinatorics visualization oper 
exists variety ways operators combined answer new questions 
combination operators covers large conceptual space concepts conceived ahead time 
reducing amount time spent steps hypotheses sensemaking cycles accomplished matter hours minutes days weeks 
summary past years researchers great advances information tion 
graphic representation methods developed various re searchers gain understanding visualization design space :10.1.1.25.1642
chapter extended research include framework visualization interactions operators 
contributed new way thinking operator model ap plies range data domains specific discussion applied visualization spreadsheets 
establishing new operator centric framework designers explore follow ing properties operators visualization systems view vs value domain depen dence independence breadth applicability amount direct manipulation possi ble implementation choices 

developing new user interaction model establishes user expectation enabling users apply predict result operators relationships establish views values 
form analysis process model users apply task scenario particular data domain 

focusing users need viewing intermediate results determining subse quent analysis steps 
visualization data state model multiple data values views bridge gulf execution 

applying framework past visualization systems techniques including vi spreadsheets 
demonstrate framework enumerating inter action techniques past visualization projects 
examined visualization interaction frameworks developed novel operator user interaction model 
data state model unifies data analysis process complex relationship view value characterize interactive non interactive operations visualization system 
visualization pipeline basis developed way classify operators 
examined just view value data abstractions meta data generated analysis process 
discuss properties framework 
example suggested possible ways implementing operators involved visualization pipeline 
framework facilitates new way exploring space visualization operators 
data state model method forms basis evaluation technique operators visualizations 
applying operator analysis various visualizations point researchers areas particular operators missing system technique 
model compare different interaction models visualizations 
enable researchers characterize various interaction techniques capture design requirements new application domains develop new novel operators 
chapter duality data flow data state models graphics simple language 
laws self evident recognize image reordered transformations represent visual form information processing 
jacques bertin visualization transforms data information graphical forms represented computer display 
visualization deals transformations rep 
transformation process converts data graphical primitives 
representation data structures handle store various outputs processes 
traditional visualization data flow networks concentrated various transformations necessary generate computer display 
data flow networks typically depicted graphically drawing network nodes representing data transformation processes directional edges representing data flows process 
experience visualization field shown data flow model effective visual programming model lets users build application integrating modular components 
introduced data state model chapter 
glance similar characteristics data flow model 
instance models nodes edges transcribe visualization process 
models graphs describe data sets travel processing mechanism 
important difference 
data state model captures distinct data states data flow model captures order distinct processes comprise visualization 
difference reflected data flow model uses nodes denote processes edges denote data flow directions data state model uses nodes denote data states edges denote processes 
research question chapter relationship function ality data state model data flow model model expressive 
data flow model build data state model produces output 
example certain visualization constructions possible data state model 
user experiences commercial success established capability data flow visualization systems expressiveness data flow model 
comparing data state model learn merits model 
chapter show data state model expressive data flow model vice versa 
duality transformation models 
duality transformation show models equally expressive 
expressiveness part picture 
difference emphasis model creates user interfaces results differences user experience 
discuss advantages disadvantages models variety user tasks 
expanding data flow model states vs stages data flow model uses nodes represent processes model focuses data transformations 
edges represent flow data process stage 
edge exists process transforms data new form 
data flow networks data state explicitly represented distinct edges 
words edges represent data stages states 
example consider single data flow chart constructs scatter plot raw data set extract point set create scatter plot view 
consider applying different data sets flow chart 
model capture data states different data set flow pipes difference data set clearly represents different data state 
data flow model format data change new edges new nodes represent 
order data flow model capture amount detail data state model define canonical form data flow model insists having edge representing single distinct data state 
implication force data flow model capture details visualization process 
syntax semantics model remain 
change fundamentally change data flow model shows data flows system processes algorithms transform data 
model shows functional dependencies processes 
definition simply expands data flow model data set instances 
definition canonical form data flow model restricts edge repre sent single data state 
show canonical form data flow model just expres sive data state model 
expanding notion data flow network way show equivalence data flow model data state model 
visualization equivalence section introduce notion equivalence visualization mod els defining idea expressiveness visualization model 
duality transformation show model transformed generate correct output 
start ask question visualization model visualization model describes visualization process transformation process 
transfor mation process composed series transformation steps 
define visualization transformation 
mathematical functional description definition visualization transformation visualization operator processes formation domain maps information different domain domain specifies structure information 
domain may simple set natural numbers complex database records user transactions hypertext system 
example genetic sequence similarity alignment record computed blast program single element genetic sequence similarity domain 
domain may visualization domain means elements domain mapped easily display screen 
domain may data domain means elements domain raw data mapped display screen 
definition visualization function visualization transformation maps data domain visualization domain typically composed series visualization transformations set transformations 
transformation series maps domain domain transformation series example applying gives 
output visualization transformation may compatible input visualization transformation 
visualization transformation takes specific kind data domain input 
visualization trans formations composed simply construct composition arbitrary series visualization transformations 
input domain transformation output domain transformation transforma tions connected series 
definition visualization model set visualization functions 
instance visualization model particular application case example visualization model 
act constructing case called instantiation 
definition definition instance instantiation model series transformations viewed mapping function data view 
instance particular defined series transformation designed particular type data 
define relation expressive definition say visualization model expressive model instance find model inputs gives exactly output 
inputs 
notice expressiveness symmetric relation expressive mean expressive 
define pre order relation reflexive expressive transitive expressive expressive implies expressive 
prove transitivity know input 
know input 
means input instantiate 
expressive concept antisymmetric relation define meaning equivalence visualization models 
relation antisymmetric xry implies definition say visualization models equivalent visualization ex expressive expressive expressive relation antisymmetric relation 
reflexive transitive expressive partial ordering 
definition wish show theorem data state model equivalent visualization expressiveness data flow model 
proof prove construction 
principle call duality show instance data flow model construct data state model gives exactly output vice versa 
prove directions directed graph expression models duality transformation 
data flow model notations instance expressed path directed graph nodes transformation steps data states edges 
data state model notation instance expressed di ni dj nj dk nk nodes data states di dj dk edges transformation steps 
duality transformation perform duality transformation simply take edge model convert node convert node edges 
mathematically model duality transformation constructs edge construct vertex dual graph graph theory 
dual graph dual graph constructs node enclosed region 
regions share edge construct edge corresponding vertices dual 
node pair edges goes exits construct edge corresponding vertices respectively note transformation single node may corresponding dual edges 
shows example transformation 
example duality transformation duality transformation switches role nodes edges 
example direction application state model uses nodes repre sent data states set data states edges represent distinct processes set transformation processes 
duality transformation obtain set transformation processes set data states 
finish proof duality transformation need show path produces output say ei vi equivalent path 
crucial realization vertex vj corresponding edge ej 
example path transformed 
assuming data state model data flow model functional notation gives ei vi andp gives vs ing states correspond sing see inputs vi paths gives output 
reverse case data flow model data state model obtain output principal 
transformation shows order processes data states visits exact equivalents duality trans formation construct data flow model expressive data state model vice versa 
models equivalent visualization expressive ness 
qed 
analysis described visualization models related visualization expressiveness 
different emphasis expression visualization models resulted different visualization user interfaces 
data flow model systems create modules correspond process nodes data transferring mechanisms created connect modules 
hand data state model system create data stores correspond data states data pro cessing procedures created connect data states 
models expressive power describing visualizations discuss different characteristics utilized implement visualization system 
data flow model data flow visualization systems construct flow chart process information 
jacques bertin examples visualization systems manifest data flow network model 
avs iris explorer ibm data explorer examples systems 
user interface systems large canvas area palette modules nodes placed 
users connect modules signal various connections 
focus systems enable user easily construct scientific visualization process visualizes large data set 
construction describes data flows system describes dependency various modules 
module execute correctly corresponding inputs date 
means system remember state module correct output generated 
addition visualization systems allow association interface widgets sliders module input parameters 
strength strength systems focused getting user data set visualization see discussion 
user particular kind visualization mind data set constructs mental model process data visualized form 
data flow network model directly supports user goal 
model bridges gulf execution modeling mental transformation user performs data 
extremely powerful user accurately quickly construct visualization conforms mental image 
weakness strength data flow systems weakness 
user pre existing notion visualization requires model sup ports construction visualization pipeline provides limited support rations pipeline 
systems generally focus generation single visualization multiple visualizations different data sets 
narrower focus pro cesses allows easy construction visualization model causes screen spaces concentrated modules interconnections leaves little screen space resultant visualization 
data state model spreadsheet systems instantiation data state model spreadsheet information visualization system 
similar spreadsheet systems levoy spreadsheet images sys tem similar data transformation models 
systems data state model grid layout forms 
data state model systems emphasize operands operators system user accurately gauge intermediate results adjustments operation execution 
visible separate data states stead data stages 
operations generally specified command macro script language dialog boxes 
interaction operations manipulated directly mouse 
application operators automatically creates dependency tion objects 
software system executive keeps track state visualization object inputs outputs 
ensure correct output system executes operators correct order ensure dependencies keep date 
strength strength spreadsheet systems utilize data state model handle multiple data sets data states extremely focus model represent data states 
processing step transformation specified user visualized view intermediate results 
state model advan visualization tasks intermediate results explicit user enables user view intermediate results planning operations 
enables user monitor progress task visualization questions posed study 
exploratory tasks intermediate results important help user applying intuition experiences analysis data sets 
spreadsheet systems tasks deal multiple visualizations easier 
example chapter show user select entire row related tions apply single operator simultaneously 
parallel application operators natural spreadsheet system awkward data flow sys tem 
equivalent process data flow system requires dependency connections modules manually 
spreadsheet system user selects entire row temporary dependency formed visualizations 
soon selection ends dependency broken 
weakness strength spreadsheet system weakness 
poor choice tasks require multiple visualizations screen time 
single view data suffices particular application domain tailored task specific visualization program 
construction single complex visualization difficult spreadsheet paradigm data flow systems 
traditional data flow system works better ability specify complex operations point click interface important 
data flow systems tend emphasize operators needed achieve desired result spreadsheet systems tend emphasize ration operands 
summary chapter showed data state model equivalent visualization expres data flow model means model visualizations model 
models equivalent expressiveness showed instantiation user interface gives model different strengths weaknesses 
spreadsheet system uses data state model naturally models data states cells shows intermediate results im portant exploratory tasks 
data flow visualization systems avs uses data flow model suitable construction visualization process 
chapter validation applying framework visualization techniques scientific research 
research reduces priori justifying answers jacques bertin chapter validate generality data state model visualization frame showing applied wide range visualization techniques 
example data domains technique describe operators possible 
doing illustrate power data state model applying design known visualization techniques 
chose various visualization techniques familiarity infor mation visualization community relevance information visualization systems 
set techniques spans large area information visualization design space previous taxonomy information visualization design space 
included categories included examples 
looking visualization techniques determine raw data obtained system 
construct visualization pipeline description techniques literature 
analysis shows visualization techniques implemented data state model visualization spreadsheet 
visualization techniques framework applies result analysis helps classify choose implement different operators large visualization system siv visualization spreadsheet 
visualization pipeline implicitly specifies dependencies induced 
example hierarchical techniques category included major tion techniques viewing trees cone tree disk tree hyperbolic browser treemap :10.1.1.20.1530
techniques share similar data domains operators vi pipelines technique different visual mapping transfor mation operator operate visualization abstractions 
operators listed operator siv spreadsheet 
operators inputs outputs specifies dependencies data 
regardless tech nique chosen visualize tree visualization operators operate hierarchical data 
explore differ ent representation techniques wish operators visualization pipeline carefully categorized 
data state model helps categorization exposes similarities differences tree visualization techniques 
view visual mapping transformation visualization abstraction visualization transformation analytical abstraction value data transformation visualization technique rotate scale animate change colormap map quantitative variables longitude latitude height map ozone level color direct spatial mapping quantitative values longitude latitude height earth normalize samples quantitative values extract geographical information samples quantitative variables scientific visualization ozone layer data ozone layer visualization geographical information time rotate scale animate change colormap map variables geographical map map profit variable glyph size lines normalize sample direct spatial mapping variables extract quantitative variables geographical visualization profit landscape data profit statistics linked visible decisions geographical regions dynamic map scatter plot choosing variables axes mappings dynamic apply unmapped variable filtering create multidimensional point sets parse feature records multi dimensional plots dynamic example data querying home movies sales data ahlberg dynamic sorting axis interactive permutation axis plot point set parallel coordinates visualization abstraction point set create point set records choosing subset records dynamic extract corresponding yield parameter feature set example data sets production run vlsi chip yield defect parameters parallel coordinates inselberg dynamic rotate scale focus map high dimensional surface local area data highdimensional point set surfaces table various visualization techniques analyzed data state model normalize samples world world feiner dynamic view visual mapping transformation visualization abstraction visualization transformation analytical abstraction value data transformation visualization technique change distortion focus represent number bars focus context distortion table visualization abstraction constructed numeric table construct numeric table records analytical abstraction numeric records parse statistics numeric records multi dimensional tables table lens data baseball player statistics rao rao sort records focus particular wall focus item dynamic choose different levels detail create wall panels glyphs focus context distortion display visualization abstraction linear list item features create linear list records analytical abstraction parsed record set parse information records information landscapes spaces perspective wall example data schedule file mackinlay system dynamic records focus node hide subtree change orientation position tree apply dynamic level filtering layout cones layout hyperbolic tree layout disk tree layout space filling approaches treemap visualization abstraction tree hierarchy breadth traversal extract graph analytical abstraction graph data file system organization charts hypertext web linkage structure trees hierarchical techniques apply dynamic value filtering nodes edges cone tree robertson hyperbolic browser lamping treemap johnson table various visualization techniques continued chi view visual mapping transformation visualization abstraction visualization transformation analytical abstraction value data transformation visualization technique node link views sound feedback unmapped variable called conditioning display graph matrix geographical visualization abstraction graphs networks analytical abstraction parsed records source destination associated feature sets example data sets phone calls internet packet flows email communication patterns becker matrix display threshold time view slider permute rows columns unmapped variable choose variables displayed statistics aggregate records comment added view value filtering semantics aggregation mentioned implemented data management software different views data sets 
change size color zoom parameter focusing identification brushing change animation speed change line thickness line length dynamic query threshold view slider change symbol size color sensitivity table various visualization techniques continued view visual mapping transformation visualization abstraction visualization transformation analytical abstraction value data transformation visualization technique text rotation translate zoom focus single alignment demand animation iterator map visualization abstraction feature point set vector extracting information records analytical abstraction alignment records data structure representing parsed information parsing textual reports addition subtraction different reports unmapped variable data similarity reports comparing single sequence database sequences chi zoom rotate focus detail spot map surfaces hills valleys multi dimensional scaling principal component analysis analytical abstraction text vectors create textual word frequency vector choose item perform weighted query data cnn news stories galaxies wise create slices galaxies animate scatter plot focus book focus page flip pages book view book document lens put history pile create books multiple pages view document lens create bookshelf table piles visualization abstraction linear page lists collection page lists 
create linear list pages aggregate book pile place pile book shelf creating list lists crawl url create book collection analytical abstraction images html pages generated getting web pages retrieve web pages generate images web page data urls web pages card merge page lists merge collections page lists table various visualization techniques continued view visual mapping transformation visualization abstraction visualization transformation analytical abstraction value data transformation visualization technique web visualization time tube recognize gestures focus slice bring slices back time tube zooming focus connectivity node rotate slices brushing pages highlight url slices animate slices create time tube represented aggregation disk trees invisible shelf visualization abstraction evolving tree ordered list trees breadth traversal global node position time analytical abstraction evolving graph represented ordered collection graph create graph web structure crawling web site data web structure evolving time associated usage statistics content usage topology web site chi view images pixels volumes voxels direct mapping data view data analytical visualization abstraction pixels voxels spreadsheets spreadsheet images levoy rotate image filter change color scale image processing operations rocking volume visualization rotate image filter change color scale image processing mechanisms table various visualization techniques continued view visual mapping transformation visualization visualization transformation analytical abstraction value data transformation visualization technique change orientation geometric objects change common colormap font view geometric orientation show cell dependency relationships picking data item input math create heat map create surfaces plot bar charts line plots create text filenames represent variables value sliders abstraction visualization abstraction matrix computed curves compute curves math function models analytical abstraction matrix records mathematical functions compute call put option prices data financial data finesse varshney change parameter functions change arithmetic relationships function dynamic change object position orientation pixel image addition cells geometric object addition cells animation coordinated direct manipulation create heat map matrix cube visualization matrix bar visualization cone tree disk tree glyphs scatter plot choosing variable axes mapping change cells share visual mapping visualization abstraction point set matrix triangulated surface point set feature vector hierarchy list trees perform delaunay triangulation extract data features records breadth traversal global node position time analytical abstraction normalized matrix point sets value tuples evolving graph represented ordered collection graph normalize matrices parse textual reports create random point sets create graph web structure crawling web site example data sets point sets matrix sequence similarity reports web structure web usage pattern spreadsheet information visualization chi infovis comment allows value view dependencies cells dynamic algebraic data set operators apply geometric operators demand zoom animation transformation display disk tree display cone tree apply coloring pattern display pattern glyph perform usage frequency pattern algebra apply spreading activation pattern algebra cluster nodes breadth traversal extract linkage information extract usage information date web site usage analysis filter value web analysis visualization spreadsheet table various visualization techniques continued chi ology 
chapter implementation graphics progressing farther giving visible form research method jacques bertin chapter document experiences building visualization spreadsheet systems 
experience enhanced collaborating potential users specific data domains 
documenting experience hope benefit im plementation knowledge 
experiences spreadsheet paradigm consisted stages 
stage took prototype driven research approach studying spreadsheet environ ments employed visualization 
constructed prototype visual ization spreadsheet system molecular biology 
started complete visualization application built studying genetic sequence similarity single vi time screen call single cell application 
second stage visualization toolkit build general visualization spreadsheet called spreadsheet information visualization 
chapter describe system built prototype stage describe general visualization spreadsheet system 
prototype system spreadsheet similarity reports system domain specific study spreadsheets structured performing specific tasks analyzing genetic sequence similarity reports called spreadsheet similarity reports ssr 
system designed biologists task comparing similarity reports chapter 
flexibility layout spreadsheet enables user compare contents cell representations related data cell 
ssr built opengl graphics rendering library motif interface toolkit programming language 
ssr spreadsheet version non spreadsheet system call 
includes computational steer ing environment rapidly executing similarity algorithm multi processor comput ers different algorithm parameters 
analysis provides animation filtering variable axis mapping capabilities 
ssr uses noun verb interaction techniques explore suitability spreadsheet information visualization 
spreadsheet cell contains data geo metrically represented 
user selects cells noun selects operation performed cells verb 
user specify cell map higher dimensional data geometric representations 
user construct geometric mappings data apply rotation translation scaling zooming cells filter data animate data variable cell 
system single cell application packaged inter actions necessary analysis task molecular biologists perform 
need compare contrast visualizations time lead transform single cell application spreadsheet system 
analyzed task structure comparison analysis determined current single cell application model fulfill need support tasks 
experience moving application spreadsheet model underlying rendering routines program data struc tures reimplemented 
single cell application typically rendering routines hardwired single graphic context 
true graphic rendering libraries including opengl 
conversion process triv ial easy 
shown chapter resulting system supported comparison task provided necessary interactions users 
experience custom tailored spreadsheet system proved special purpose spreadsheets tailored provide support tasks difficult sible perform single cell application 
question general purpose spreadsheet visualization system feasible useful 
general system spreadsheet information visualization second system prototype stage experience ssr gen eral visualization spreadsheet called spreadsheet information visualization siv pro sieve 
show diagram control flow system 
user interacts system input devices mouse keyboard 
command parser decodes input feeds result command interpreter 
com mand interpreter instructs executor execute instructions correspond user command issued 
carry instructions executor modifies memory consists parts grid memory dependency information command workspace 
grid memory holds cells spreadsheet 
cell holds entire raw data set 
dependency information specifies relationships cells spreadsheet 
command workspace holds temporary data generated computation 
graphical processing routines render contents memory graphical dis play 
user input input device gets immediate feedback actions formula entry box status window 
user gets feedback graphical display understand discoveries data sets cells 
cell view occupy window finer detail dependency relationships appear formula entry box 
input devices input devices command command parser parser command command interpreter interpreter executor executor user raw data raw data files files graphical graphical display display graphical rendering graphical rendering processing processing dependency information command workspace file file system system grid memory storing cells interactions control flow spreadsheet information visualization system shows architecture siv system 
top windowing sys tem graphic rendering library opengl 
programming language 
top visualization toolkit provides various tion rendering techniques 
scripting language tcl tk enable users programmers interact system higher level programming constructs complex lower level language 
commands procedures written scripting language 
user interacts entire system user interface display user directly 
system built top visualization toolkit vtk 
chose vtk provides object oriented architecture pre built objects exploring spreadsheet paradigm 
advantages existing visualization toolkit 
example vtk conjunction tcl command language tk widget toolkit facilitates rapid development interpreted environment 
system run multiple platforms vtk tcl tk available unix windows nt 
siv scalable handle data sets vtk 
siv capable handling sixteen megabytes terrain data points volume visualization size voxels larger 
example molecular biologists users initial design evaluation siv sequence similarity data sets large pages long 
discussion task tailored vs general purpose ssr prototype system custom tailored molecular biologists task comparing multiple sequence similarity reports 
advantage know data domain extremely due long time collaboration operations needed tasks custom programmed supported drop menus 
operations performed noun verb interaction tech nique 
facilitates ease system 
architecture spreadsheet information visualization graphical graphical user user interface interface tcl scripts implementing modules tcl scripts implementing modules tool command language toolkit tool command language toolkit tcl tk tcl tk visualization visualization toolkit toolkit vtk vtk graphic rendering library opengl window window system system operating system architecture spreadsheet information visualization system general purpose siv system tailored task requires application programmer achieve kind user friendliness available ssr system 
scripting language general purpose siv system customizable tcl scripting language facilitates easy prototyping encounter new tion domain 
fast experiment different visualization techniques available visualization toolkit 
new visualization technique needed possible construct new visualization operators directly scripting language visualization toolkit 
scripting language greatly enhanced programmability spreadsheet system 
visualization toolkit programmability enabled pre built tion objects available vtk visualization toolkit 
techniques include graphic primitives texture mapping lighting surface rendering scalar tion contouring dividing cubes marching cubes vector visualization glyphs streamlines tensor visualization image processing volume visualization visualization modeling decimation implicit surfaces 
wide variety pre built modules en fast efficient prototyping shift spreadsheet programmer attention away reinventing wheel focuses tasks hand operators needed 
programmer pay attention operators fit data state model 
particular pre built modules help programmers creating appropri ate task specific operators thinking operators interface spreadsheet 
operator reuse advantage scripting language visualization toolkit operators easy program easy reuse 
operators siv system implemented scripts spreadsheet programmer easily change operators modifying scripts 
operators useful par ticular application domain unmodified slightly modified application domain 
example disk tree layout algorithm ful visualizing different hierarchical data different application domains 
implemented visualization spreadsheet need re implemented 
described chapter operationally similar operators similar procedural patterns 
case operators directly reused procedural template 
implementing operators iterators design pattern occurs im plementation visualization operators need iterate particular variable 
implementation operators simplified object oriented tech nique called iterators object provides access traversal interfaces collection objects 
spreadsheet level operators described iterators 
instance copying entire row column simply requires single iteration range cells 
iterators implement operators powerful technique 
example data sets represented linked lists addition performed iterators iterate lists merge 
subtraction performed iterating list looking existence element list 
describe implement animation iterators 
application domains contain variables nominal ordinal quantitative types 
iterator generate sequences ordered sets values ordinal quantitative types 
iterators specify animations 
variables know order simply provide default animation iterator 
variable nominal perform action asking user specify order named values 
valid order named values matter particular application domain 
interestingly parameterizing iterator get different step sizes 
iterator applied variable currently mapped dis play 
instance dynamically query sales price homes variable shown axes 
advantage iterators implement operators build iterators tying underlying data type 
implementation operators independent data type data structure 
enables iterator reuse operator reuse 
operator reuse cuts programmers costs enabling rapid im plementation 
summary developed system supports visualizations spreadsheet metaphor 
system supports data state model described chapter lev els visualization abstraction described model 
described architecture general purpose spreadsheet information visualization system 
chapter shown implementations described chapter successful fulfilling task scenarios users encounter trying sense large data sets 
chapter mid nineteenth century statistical graphics show numbers communicating information daily lives newspapers 
early seen explosion scientific visualization computational analysis complex problems 
late information visual ization techniques emerged push visualization frontier information inherent spatial representation 
information longer simply pas sive graphics 
visualization promises change way people interact information making information come alive computer screen 
visualization research spans remarkable range scientific non scientific disciplines corresponding visualization techniques 
visualization researchers dis covered certain operations needed entire range 
operations clude comparing visualizations different datasets performing algebraic operations visualizations visualizing difference datasets 
challenge organize complex visualization interactions framework 
thesis idea inspired observing success powerful concept spreadsheet 
invention numerical spreadsheet enabled nary computer users handle complex mathematical statistical analysis fueled adoption personal computers 
spreadsheets proven highly successful tools interacting numerical data numerous advantages 
users easily organize large groups numbers cells arranged tabular form apply algebraic operations cells manipulating rows columns data simultaneously 
users directly manipulate numbers 
spreadsheets useful user programming tool especially enabling user define data dependencies kept date automatically 
advantages en able users explore scenarios rapidly 
extending concept novel idea traditional spreadsheets cell spreadsheet hold entire visualization large complex data set associ ated data selection criteria viewing specifications needed create full fledged infor mation visualization 
similarly inter cell operations far complex stretching simple arithmetic string operations encompass range domain specific operators 
advantages spreadsheet metaphor translate easily analogous tasks visualization 
spreadsheet metaphor applied wide variety user tasks primary data sets represented cells visualization techniques 
vi spreadsheet supports cells containing complex datasets viewed pow visualizations constraints cells linking data view attributes 
visualization spreadsheet supports tasks difficult accomplish previously 
lessons learned answers high level challenges evidences success 
past years learned spreadsheet approach powerful intuitive technique interacting information visualizations 
answer high level challenges chapter questions answer address success project 
question visualization spreadsheet valuable user tasks visualization applications visualization spreadsheet idea valuable visualization tasks 
informa tion visualization systems confront questions represent data visu ally types exploratory interaction include structure interaction 
certain capabilities critical exploring different views data applying operations rotation data filtering view group views comparing related datasets 
need explore multiple visual represen tations simultaneously arises especially information visualization 
example time series matrix visualization different visualization techniques extract different visual features represent distinct data patterns 
visualization spreadsheet excel lent way address issues involve multiple data sets visualizations 
operations natural spreadsheet environment 
value visualization spreadsheet lies enabling users build multiple visual representations data sets perform operations visual representations compare contrast results visually 
delaunay algorithm visualization example operations comparing different steps algorithm easier user see operands results simultaneously 
spreadsheet paradigm helpful structuring certain interactions cases change needs applied propagated datasets 
biological sequence similarity visualization par application rotation operator entire row data sets enabled users view similarities data sets orientation 
spreadsheet provides structured environment perform tasks significantly reduce amount time takes analyze data 
second question kinds user tasks supported tion spreadsheet environment properties tasks suitable spreadsheet interaction ones large number tasks particularly suitable 
intuitive 
tasks explore scenarios 
example different color scale 
look usage pattern web site different time ranges 

tasks involve exploring similar features different data sets 
example look similar usage patterns different time periods 

tasks study interaction different variables 
example look interaction color scales different time intervals web analysis example 

tasks involve applying single operation multiple visualizations applying similar selection filtering highlighting different data sets 
ex ample select entire row biological sequence similarity visualizations rotate 
third question general visualization spreadsheet paradigm idea general 
visualization spreadsheet paradigm applicable visual ization domains situations 
single view application sufficient task 
data flow visualization system appropriate focus translate raw data visualization 
visualization spreadsheet paradigm supports variety tasks situations involving multiple data sets tion techniques parallel application operations multiple visualizations derivation comparison data sets re computation dependencies data sets re application analysis templates advantages visualization spreadsheet situations evident variety data domains 
thesis selected variety different types data scientific disciplines information fields genetic sequence similarity molecular biology time series matrices algorithm visualization statistical data set patterns world wide web site content usage structure 
visualization spreadsheet principles discussed apply wide range visu alization applications helping spreadsheet users understand take advantage power paradigm assisting spreadsheet developers understand structure tools 
various example domains visualization spreadsheet principles arose users applied operations data 
particular visual sensemaking task large web site visualization spreadsheet principles applied directly help users extract data patterns 
developing visualization spreadsheet paradigm visualization operator framework called data state model arose 
model general applicable variety information visualization techniques 
model expres sive data flow model emphasizes state data flow data 
modeling data set operations data moves various stages visualization pipeline data state model categorizes operations different basic types 
categorization numerous information visualization techniques associated operations chapter shows generality data state model 
answering high level challenges shed light gen eral utility visualization spreadsheet paradigm 
visualization spreadsheet valuable data analysis tasks especially information visualization users con front various ways viewing interacting data 
abstraction tion spreadsheet principles value spreadsheet interaction especially clear 
second gaining knowledge properties suitable tasks spreadsheet interaction enables researchers identify situations visualization spread sheet useful 
lastly visualization spreadsheet data state model general frameworks applicable variety data domains 
particular data state model enables researchers space visualization interactions 
discover benefits visualization spreadsheet paradigm 
contributions contribution thesis include 
providing structured intuitive powerful interface concept called visual ization spreadsheet investigating information visualizations datasets 

specifying constructing evaluating visualization spreadsheet novel infor mation visualization framework 
design collaborating domain experts fields 
research carefully studied existing new applications domains identify requirements 
requirements ideas existing systems design implement visualization spreadsheet framework 
evaluated framework real world scenarios 

confronting challenge visualizing variety different types data il visualization spreadsheet principles various data domains 
showed important capabilities offered visualization spreadsheet 

consolidating visualization interactions operations operator frame called data state model studying building current interaction models 

proving visualization equivalence data state model data flow model 

illustrating usage data state model characterizing categorizing numerous visualization techniques associated operations 

answering set key research questions challenges effectiveness framework evaluating visualization spreadsheet concept meets needs users 
summary describing visualization spreadsheet enables users interact pro cess visualizations showed advantages analytical process making sense complex data sets evolving document collection large entire xe web site 
mapping data values structures visualization spreadsheet user engaged sensemaking cycle mapping perceiving cognitively processing informational graphics 
variety visualization techniques showed interactions visualization spreadsheet help users draw relationships entire information set 
key success information analysis assembly new visualizations proceed rate analysis 
providing operator framework concise easy understand data state model visualization spreadsheet framework achieve goal quickly adapting tool various analysis situations 
enabling key analysis tasks shown spreadsheet approach pow intuitive technique interacting information visualizations struc tured way 
conceivable day visualization spreadsheet available desktop computer just computers numeric spreadsheets today 
bibliography greg lloyd 
extended data flow architecture data analysis visualization 
computer graphics may 
christopher ahlberg ben shneiderman 
visual information seeking tight coupling dynamic query filters starfield displays 
proceedings acm chi conference human factors computing systems volume pages 
color plates pages 
stephen altschul warren gish webb miller eugene myers david lipman 
basic local alignment search tool 
journal molecular biology 
anderson peter pirolli 
spread activation 
journal experimental psychology learning memory cognition 
keith andrews 
visualizing cyberspace information visualization harmony internet browser 
proceedings symposium information visualization 
ieee cs 
atlanta georgia 
anupam dar petajan 
dataspace visualizations large databases 
proceedings symposium information visualization pages 

www int com 
advanced visualization system home page 
www avs com february 
becker eick wilks 
visualizing network data 
ieee transaction visualization computer graphics 
ronald becker william cleveland 
brushing scatterplots 
technometrics 
benjamin bederson james hollan 
pad zooming graphical interface exploring alternate interface physics 
proceedings acm symposium user interface software technology pages 
benjamin bederson larry stead james hollan 
pad advances multiscale interfaces 
proceedings acm chi conference human factors computing systems volume pages 
dennis benson mark boguski david lipman james 
genbank 
nucleic acids research 
jacques bertin 
semiology graphics diagrams networks maps 
university wisconsin press madison wi 
jacques bertin 
graphics graphic information processing 
walter de gruyter 
eric bier maureen stone ken fishkin william buxton thomas baudel 
taxonomy see tools 
proceedings acm chi conference human factors computing systems volume pages 
eric bier maureen stone ken pier william buxton tony derose 
toolglass magic lenses see interface 
james kajiya editor computer graphics siggraph proceedings volume pages august 
borning 
constraint tools building user interfaces 
acm transactions graphics october 
alan borning 
defining constraints graphically 
proceedings acm chi conference human factors computing systems pages 
alan borning 
progamming language aspects constraint oriented simulation laboratory 
acm transactions programming systems october 
polly brown john gould 
experimental study people creating spreadsheets 
acm transactions office information systems july 
vannevar bush 
may think 
atlantic monthly 
stuart card steve eick gershon editors 
proceedings symposium information visualization 
ieee cs 
san francisco california 
stuart card jock mackinlay 
structure information visualization design space 
proceedings symposium information visualization pages 
ieee cs 
phoenix arizona 
stuart card jock mackinlay ben shneiderman 
readings information visualization vision think 
morgan kaufmann 
stuart card george robertson william york 
web forager information workspace world wide web 
proceedings acm chi conference human factors computing systems volume pages 
ed chi 
visualization 
www geom umn edu docs 
geometry center university minnesota appeared www conference chicago il 
november 
ed chi james pitkow jock mackinlay peter pirolli rich stuart card 
visualizing evolution web ecologies 
proceedings acm chi conference human factors computing systems volume pages 
color plate pp 

ed chi john riedl 
operator interaction framework visualization systems 
proceedings symposium information visualization pages 
ieee cs october 
research triangle park north carolina 
ed hsin chi phillip barry john riedl joseph konstan 
spreadsheet approach information visualization 
proceedings symposium information visualization pages 
ieee cs 
phoenix arizona 
ed hsin chi phillip barry elizabeth john ernest john riedl 
visualization biological sequence similarity search results 
proc 
ieee visualization pages 
ieee cs 
atlanta georgia 
ed hsin chi john riedl elizabeth john ernest phillip barry 
flexible information visualization multivariate data biological sequence similarity searches 
proc 
ieee visualization pages 
ieee cs 
san francisco california 
mei chuah steven roth 
semantics interactive visualization 
proceedings symposium information visualization pages 
ieee cs 
san francisco california 
cleveland mcgill editors 
dynamic graphics statistics 
wadsworth brooks cole belmont ca 
schwartz 
model evolutionary change proteins 
editor atlas protein sequence structure vol 
suppl 
chapter pages 
national biomedical research foundation 
john dill gershon editors 
proceedings symposium information visualization 
ieee cs 
phoenix arizona 
feiner 
visualizing dimensional virtual worlds vision 
computer graphics 
james foley feiner hughes 
computer graphics principles practice 
addison wesley 
george furnas 
generalized fisheye views 
proceedings acm chi conference human factors computing systems pages 
gershon steve eick editors 
proceedings symposium information visualization 
ieee cs 
atlanta georgia 
warren gish david states 
identification protein coding regions database similarity search 
nature genetics 
graph visualizer 
www omg ca hci projects gv march 
paul haeberli 
visual programming language interactive graphics 
john dill editor computer graphics siggraph proceedings volume pages august 

high performance interactive image spreadsheet 
computers physics may june 
judith hays margaret burnett 
guided tour forms 
technical report tr oregon state university computer science department june 
revised 
drew wood beale 
visualizing information 
proceedings symposium information visualization 
ieee cs 
atlanta georgia 
steven henikoff henikoff 
performance evaluation amino acid substitution matrices 
proteins structure function genetics 
scott hudson 
user interface specification enhanced spreadsheet model 
acm transactions graphics july 
scott hudson mohamed 
interactive specification flexible user interface displays 
acm transactions information systems 
ibm visualization data explorer dx 
www almaden ibm com dx february 
current date 
ingalls wallace 
chow doyle 
visual programming environment 
proc 
oopsla pages september 
alfred inselberg 
multidimensional detective 
proceedings symposium information visualization pages 
ieee cs 
phoenix arizona 
iris explorer home page 
www nag uk welcome iec html february 
brian johnson ben shneiderman 
tree maps space filling approach visualization hierarchical information structures 
proc 
ieee visualization pages 
ieee cs 
james pitkow 
emerging trends www user population 
communications acm 
frank 
prolog spreadsheet 
bob kowalski frank editors logic programming pages 
addison wesley 
john lamping ramana rao peter pirolli :10.1.1.20.1530
focus context technique hyperbolic geometry visualizing large hierarchies 
proceedings acm chi conference human factors computing systems volume pages 
john peter lee georges grinstein 
architecture retaining analyzing visual explorations databases 
proc 
ieee visualization pages 
ieee cs 
atlanta georgia 
lee 
interactive computer graphics architecture 
environmental design research center boston 
leung apperley 
review taxonomy distortion oriented presentation techniques 
acm transactions computer human interaction 
marc levoy 
spreadsheets images 
andrew glassner editor proceedings siggraph orlando florida july computer graphics proceedings annual conference series pages 
acm siggraph acm press july 
isbn 
wheeler andrew 
affine transformations digitized spatial data geology 
comput 
pages 
jock mackinlay 
automating design graphical presentation relational information 
acm transaction graphics april 
jock mackinlay george robertson stuart card 
perspective wall detail context smoothly integrated 
proceedings acm chi conference human factors computing systems pages 
mccormick visualization scientific computing 
computer graphics volume 
acm press november 
mukherjea james foley scott hudson 
visualizing complex hypermedia networks multiple hierarchical views 
proceedings acm chi conference human factors computing systems volume pages 
brad myers 
graphical techniques spreadsheet specifying user interfaces 
proceedings acm chi conference human factors computing systems pages 
brad myers dario roger dannenberg brad vander zanden david ed andrew philippe marchal 
comprehensive support graphical highly interactive user interfaces garnet user interface development environment 
ieee computer november 
david nation plaisant 
visualizing websites hierarchical table contents browser 
proceedings rd conference human factors web 
www com proceedings nation html 
national center biotechnology information 
www ncbi nlm nih gov 
greg nelson 
constraint graphics system 
barsky editor computer graphics siggraph proceedings volume pages july 
donald norman 
design everyday things 
doubleday 
olson 
human genome project 
proc natl acad sci 
john ousterhout 
tcl tk toolkit 
addison wesley 

object oriented spreadsheets analytic spreadsheet package 
norman meyrowitz editor proceedings conference object oriented programming systems languages applications oopsla pages portland usa november 
acm press 
published sigplan notices volume number 
peter pirolli stuart card 
information foraging information access environments 
proceedings acm chi conference human factors computing systems volume pages 
peter pirolli james pitkow ramana rao :10.1.1.101.43
silk sow ear extracting usable structure web 
proceedings acm chi conference human factors computing systems volume pages 
james pitkow krishna bharat 
tool world wide web access log visualization 
proceedings international world wide web conference may 
geneva switzerland 
porter 
shaded surface display large molecules 
computer graphics siggraph proceedings volume pages august 
david potter 
computational physics 
john wiley sons 
ramana rao stuart card 
table lens merging graphical symbolic representations interactive focus context visualization tabular information 
proceedings acm chi conference human factors computing systems volume pages 
color plates pages 
ramana rao stuart card 
exploring large tables table lens 
proceedings acm chi conference human factors computing systems volume pages 
craig reynolds 
flocks herds schools distributed behavioral model 
maureen stone editor computer graphics siggraph proceedings volume pages july 
george robertson jock mackinlay 
document lens 
proceedings acm siggraph symposium user interface software technology pages 
george robertson jock mackinlay stuart card 
cone trees animated visualizations hierarchical information 
proceedings acm chi conference human factors computing systems pages 
daniel russell mark stefik peter pirolli stuart card 
cost structure sensemaking 
proceedings acm interchi conference human factors computing systems pages 
sarkar marc brown 
graphical fisheye views graphs 
proceedings acm chi conference human factors computing systems pages 
sarkar scott oren tversky steven reiss 
stretching rubber sheet visualizing large layouts small screens 
proceedings acm siggraph symposium user interface software technology pages 
william schroeder kenneth martin william lorensen 
design implementation object oriented toolkit graphics visualization 
roni yagel gregory nielson editors proc 
ieee visualization pages 
ieee cs press 
san francisco california 
william schroeder kenneth martin william lorensen 
visualization toolkit object oriented approach graphics 
prentice hall 
herbert simon 
sciences artificial 
mit press 
michael christian 
spreadsheet interface logic programming 
proceedings acm chi conference human factors computing systems pages 
michael christian thomas 
focus interactive table product comparison selection 
proceedings acm symposium user interface software technology pages 
marc 
spreadsheet constraints 
proceedings acm siggraph symposium user interface software technology pages 
maureen stone ken fishkin eric bier 
movable filter user interface tool 
proceedings acm chi conference human factors computing systems volume pages 
silicon graphics computer systems 
iris explorer user guide 
silicon graphics computer systems mountain view ca 
tom newman summary methods accessing results large scale partial sequencing anonymous arabidopsis cdna clones 
plant physiology 
lloyd 
visualization ozone depletion polar vortex 
technical report ibm thomas watson research center 
edward tufte 
visual display quantitative information 
graphics press cheshire connecticut 
lisa tweedie 
characterizing interactive 
proceedings acm chi conference human factors computing systems volume pages 
craig upson jr thomas david david david schlegel jeffery robert andries van dam 
application visualization system computational environment scientific visualization 
ieee computer graphics applications pages july 
van emden takeuchi 
spreadsheets incremental queries user interface logic programming 
technical report tr icot 
van van liere 
hyperslice visualization scalar functions variable 
proc 
ieee visualization pages los ca 
ieee cs 
amitabh varshney arie kaufman 
finesse financial information spreadsheet 
proceedings symposium information visualization pages 
ieee cs 
san francisco california 
visible decisions 
visible decisions www vdi com january 
wilcox atwood burnett cook 
continuous visual feedback aid debugging direct manipulation programming systems 
acm proceedings chi human factors computing systems pages march 
nicholas wilde clayton lewis 
spreadsheet interactive graphics prototype tool 
proceedings acm chi conference human factors computing systems pages 
graham wills john dill editors 
proceedings symposium information visualization 
ieee cs 
research triangle park north carolina 
james wise james thomas kelly pennock david marc pottier anne schur vern crow 
visualizing non visual spatial analysis interaction information text documents 
proceedings symposium information visualization pages 
ieee cs 
atlanta georgia 
brad vander zanden brad myers dario pedro szekely 
importance pointer variables constraint models 
proceedings acm sig graph symposium user interface software technology pages 
