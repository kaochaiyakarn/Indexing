simulating visualizing natural flocking behavior olaf josef institute scientific computing tu braunschweig braunschweig flight flock symbol harmony peace 
large number birds coordinate flight patterns act unison 
lot communication involved 
birds flock decide leader follow bird mass flock 

single bird decides course velocity perceived environment 
information needed create natural flocking 
models create flock motion come years 
susan uses force field 
point space certain force applied 
birds travel phase portrait force field 
rejecting forces bird static objects 
interesting obstacle avoidance scheme implemented uses force fields obstacles flight model completely different see section 
technique follow leader 
model path bird scripted birds just follow 
allow natural flock movement splits obstacles stray birds 
craig reynolds rey ct lev suggested model uses set simple urges wanting keep center flock colliding flock mates 
model simulate behavior flocks herds schools 
flocks complex implementation focuses flocks birds 
schools fish essentially herds simulated restricting movement third dimension 
reynolds introduced obstacle avoidance schemes force fields obstacles active steer avoid 
model base methods 
describes design implementation model simulate flocks flight visualisation 
bird acts independently computes direction velocity perception environment contains birds number obstacles 
designated leader flocks behavior combination birds independent flight 
emphasis compare types obstacle avoidance schemes 
uses set force fields obstacle 
raytracing 
allows bird realistically look ahead navigate flight path obstacles 
mpi gls pvm cray parallel computer computation flock 
rsh pvm computer connected visualization module running sgi 
visualization module vtk sml visualization toolkit view data computed real time render store frames creating videos 
scripted camera movement supported setup 
connecting pvm influence computation performed 
example user interactively alter camera angle position 
modeling flock reynolds suggested straightforward algorithm bird compute influence bird course 
model takes account set simple urges bird follows information current environment 
urges tu bs de tu bs de obstacle avoidance avoid flying obstacles bird find means alter course steer clear 
different models implemented explained section 
bird avoidance sure birds collide birds 
avoidance vector computes weighted sum repelling forces asserted flock mate gamma gamma gamma gamma gamma gamma 
avoidance 
bird const theta gamma gamma gamma gamma gamma gamma gamma 
sensitivity gamma gamma gamma 
delta distance mark vectors 
gamma 
gamma 
scalar product vectors 
gamma gamma 
delta normalized vector current birds position birds position 
perfect vision lead reasonable results 
bird see bird flock split distance matter 
gamma gamma gamma gamma gamma gamma gamma 
sensitivity limits view bird 
details see section 
gamma gamma gamma gamma gamma gamma gamma 
sensitivity const distance theta const theta ii gamma gamma 
delta gamma gamma gamma gamma gamma gamma 
direction gamma gamma gamma gamma gamma gamma 
direction current course vector normalized 
flock centering bird desire steer middle flock keep flock 
center determined birds perception environment absolute center flock considering bird 
gamma gamma gamma gamma gamma gamma 
centering 
bird gamma gamma 
delta gamma gamma gamma gamma gamma gamma gamma 
sensitivity theta const gamma gamma 
delta gamma gamma gamma gamma gamma gamma gamma 
sensitivity 
velocity matching urge fly match course velocity flock 
computes gamma gamma gamma gamma gamma gamma 
matching 
bird gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma gamma 
gamma gamma gamma gamma gamma gamma gamma gamma gamma 
direction bird gamma gamma gamma gamma gamma gamma gamma 
direction gamma gamma gamma gamma gamma gamma gamma 
sensitivity theta const gamma gamma gamma gamma gamma gamma gamma 
sensitivity direction course vector bird velocity 
fly goal time step vector pointing goal added keep flock moving certain point 
gives flock push direction want fly dynamics flock motion permit 
actual flight path flock diverge greatly direction especially encountering obstacles 
sensitivity function sensitivity function const distance const suggested reynolds results decrease influence birds distance uniformly directions 
models birds spherical symmetric perception 
results inadequate 
influence birds identical centering avoidance equations lead stable spherical flock 
necessary refine simulation natural vision 
vision decrease distance angle limited 
sensitivity function adapted take account equation 
resulting visual range plotted 
birds oblivious going get sensitive objects front 
performance formula improved uniform direction formula 

range factor birds vision depending angle urges priority queue real world imposes limits considered 
beings limited amount energy available velocity acceleration change direction time step limited 
just adding forces adding gamma gamma gamma gamma gamma gamma 
direction inadequate create movement looks natural 
urges create force valid suggestion alter course speed sum urges idea 
example flock flying manhattan course north course west suggestion northwest results crash skyscraper 
solution dilemma deciding priorities 
bird maximum acceleration time step 
queue set important urges processed allowing acceleration 
queue exit acceleration 
queue called priority queue 
gamma gamma gamma gamma gamma gamma 
avoidance gamma gamma gamma gamma gamma gamma 
centering gamma gamma gamma gamma gamma gamma 
matching computed priority queue entered 
flight area limits obstacle avoidance bird avoidance flock centering limit direction change limit velocity change limit velocity velocity change max velocity change max velocity change max velocity change max velocity matching fly goal velocity change max 
computing acceleration vector priority urge queue step queue test acceleration far allowed maximum 
add vector gamma gamma gamma gamma gamma gamma 
direction 
technique allow important urges maximum acceleration disregard important urges moment 
close crashing obstacle want force steer away forget staying close flock 
requested acceleration step queue greater maximum acceleration queue exit direction velocity passed module imposing limits certain values cut back excess acceleration produced step allowable maximum 
effect procedure step queue allowed influence direction influence acceleration limit 
queue exit action created excess acceleration cut back situation arise large amount available acceleration example urge queue request allowable maximum acceleration 
computed acceleration modify current velocity exceed defined maximum velocity 
necessary limit changes direction time step 
accomplish angle new course vector gamma 
velocity gamma 
old course vector limited 
looking obstacles reynolds algorithm section birds see obstacles 
flocks split obstacle try stay single flock stick lateral faces obstacle aware separated 
improve ray bird bird traced 
ray intersects obstacle reaching bird bird currently invisible influences ignored see section description raytracing routines 
adds lot extra computation check bird see bird influenced vital quality model 
obstacle avoidance methods different approaches taken include obstacles 
model prevent birds crashing obstacles allow flock alter course enable flocks approach obstacle 
force fields suggested obstacles modeled emitters force fields 
discrete time step bird influenced field pushing birds course away obstacle 
obviously important force decreases distance obstacle birds flying parallel away obstacle affected 
radial symmetric force field point obstacle easily created 
force field box complicated 
model implemented single force field pushing straight away lateral face 
works cases fails bird approaches face directly bird slowed 
superimposing second force field splits face zones pushes birds course closest edge 
computation forces costly relative position bird box appropriate zone face 
forces calculated taken account force push bird big obstacle bird close middle face greater small obstacle 
quality model poor 
dependence obstacles size difficult find parameters allow flock clear obstacle 
addition birds see pathway neighboring boxes overlapping force fields 

computing new direction collision course box combined force fields looking ahead raytracing reynolds rey suggested model calls steer avoid birds actively looking ahead finding collision course obstacle 
case bird find closest way 
utilize methods raytracing look ahead find tangent obstacle steering bird clear obstacle 
algorithm find intersection ray sphere gla 
tangent sphere closest intersection point computed directly slightly altering intersection algorithm 
calculate tangent box obstacle direction birds flight basic cases distinguished 
computing new direction collision course cube look ahead length face box intersect 
theta face split direction theta case face nearly quadratic splits face zones diagonals 
determined zone intersection tangent zone computed 
tangent new desired course bird gradually tries change current course match 
strength course change scaled const distance obstacle avoidance scheme computationally expensive results improved behavior 
birds look ahead alter course lead obstacles 
tend surprise creators things refusing fly maze bars deciding simply take detour 
flocks realistically handle variety obstacles built basic sphere box shapes 
raytracing avoid obstacles computing closest tangent allows consider realistic obstacles created bezier patches 
significantly slow obstacle avoidance intersection algorithm expensive 
trying compute force fields bezier patches difficult 
implementation system consists visualization front vtk sml renders picture scene set data compute module creates data 
modules connected variety ways standard unix way stdin stdout rsh pvm 
compute module multiple processors utilizing mpi pvm 
visualization module vtk visualization toolkit powerful library visualize data 
available free source compiled unix systems 
utilize variety graphics libraries opengl 
sgi running irix visualization front 
vtk provides efficient high level routines visualization 
module consists lines code required parsing data pvm connectivity 
basic principle vtk connect set data sources renderer pipeline filters mappers transform data achieve desired result 
case data sources primitives depict obstacles birds filters read position data place primitives positions described data 
connecting objects pipeline rendering method render object invoked reading data pipeline creating picture 
render object provides methods save images reused create movies 
data describing frame flight fed visualization module stdin asked spawn compute module pvm receive data pvm connection 
advantage possibility send information compute module computation interactively influence flock flight 
scenes described specifying general data various constants influence flock behavior obstacle position shapes goals flocks fly camera position certain frame numbers 
camera attached bird allow viewer fly inside flock 
possible watch computation done save rendered frames disk 
compute module compute module implements model described 
provide classes birds flocks point box obstacles 
flock moved discrete time steps resulting data output visualization module 
algorithm computational expensive gamma delta behavior number birds necessary parallelize get realistic real time visual output 
parallelization implemented mpi pvm cray compute server 
nature algorithm allows easy way split load pes 
master connected visual device stdin stdout rsh mpi pvm socket 
broadcasts flocks state pes 
pe simply selects equal portion flock irrespective location sensitivity computes new course velocity bird portion influence flock 
master collects information birds sends necessary information visualizer 
steps repeated 
effort undertaken implement effective algorithms particle cell reduce asymptotic running time turns quadratic term asymptotic expansion quite small pre factor compare equation 
discussion sections performance measurements 
number benchmark runs done determine behavior system 
time compute single frame measured different numbers pes birds flock 
aspect compare mpi pvm performance section finding equation describe behavior model section allow approximation runtime number birds pes discuss influence sequential parallel parts algorithm 
interesting topic influence network connection section visualizer section obstacle avoidance scheme force field raytracing section 
second may important class results section visible results flock movement obstacle avoidance need specify path flock bird 
usable computer animation combined engine place photo realistic birds positions determined compute module 
obstacles enhanced obstacle raytracer compute 
strong advantage algorithms tools create compute scenes readily available 
comparing pvm mpi compare core pvm daemon mpi performance computation module run visualizer connected dummy program external network delays disk slow computation 
show result small number birds 
larger numbers birds result straight parallel lines 
expected mpi outperformed pvm constant factor depending number birds 
graphs show computation inherently sequential part const pes birds mpi birds pvm birds mpi birds pvm birds mpi birds pvm 
execution time flock sizes pes comparing mpi pvm cray behavior system data results larger number birds find formula describe execution time depending number pes birds 
graphs extrapolated measured points 
equation close approximation system behavior measured results differ gamma seconds 
theta gamma number birds number pes expected execution time milliseconds frame 
equation allows compute expected time compute scene arbitrary number pes birds 
influence visualization module discussed section 
expected computation dependency number birds sequential part communicating results master process visualization module higher rendering saving frames time pe spends communicating setting fraction data time gamma delta part algorithm doing core flocking computation 
pre factor term small algorithmic effort undertaken reduce complexity term 
network influence network connection visualization module bottleneck master process send current set positions frame 
bottleneck appear time needed send data network significant 
time frame microseconds pes birds sgi birds birds sgi birds birds sgi birds 
execution time flock sizes pes comparing pvm cray connected dummy program connected visualizer sgi 
shows case 
bandwidth mbit ethernet connect sgi transport little positional data 
significantly increase time spent sequential operations time needed local connection 
results birds omitted measurable difference communication happened locally network link 
influence visualizer data sent compute module visualizer buffered instantly rendered requested images saved disk 
sequential time consuming operation limit achievable speedup 
rendering time depends number birds marginally 
image size saving disk significant factors 
tests run saving resolution pixels shows measured results 
pes birds rendering birds rendering birds rendering birds rendering birds rendering birds rendering birds rendering birds rendering 
execution time pes rendering results visualizer flock sizes employing pvm daemon 
birds maximum speedup reached pes sequential rendering limiting factor 
birds time spent gamma delta flocking algorithm large visualization module finishes new frame computed pes maximum number available benchmark 
measured times birds differ renderer active results plotted 
influence obstacle avoidance scheme raytracing time consuming algorithm 
look ahead obstacle avoidance scheme section uses raytracing force field scheme section just geometry lot case switching expected force field faster 
case 
measured situations look ahead slightly outperformed force field 
explained compact fairly optimized raytracing algorithms understood computer graphics world 
finding new direction bird collision course easy 
tangent obstacle closest intersection computed efficiently 
box sphere obstacles fast intersection algorithms obstacles created bezier patches significantly slow obstacle avoidance 
time frame microseconds birds pes look ahead pes force field pes look ahead pes force field pes look ahead pes force field pes look ahead pes force field 
comparing speed look ahead force field obstacle avoidance schemes employing mpi rsh coupling visualizer 
watching flocks fly frames flocks depicted video available 
mpg videos frames flocks extended detailed topic available www sc cs tu bs de olaf 

susan michael girard george karl 
motion studies progress entitled 
siggraph video review second item volume 
produced computer graphics research group ohio state university columbus ohio 
ct 
alan chalmers jonathan 
practical parallel processing pages 
international thomson computer press 

geist beguelin dongarra jiang manchek sunderam 
pvm parallel virtual machine users guide tutorial networked parallel computing 
mit press cambridge massachusetts 
gla 
andrew glassner 
raytracing 
academic press 
gls 
william gropp ewing lusk anthony skjellum 
mpi 
mit press edition 
lev 
steven levy 
kl aus dem computer pages 

rey 
craig reynolds 
flocks herds schools distributed behavioral model 
acm computer graphics volume pages july 
sml 
schroeder ken martin bill lorensen 
visualization toolkit object oriented approach graphics 
prentice hall ptr 
www com 

splitting quadratic face box obstacle look ahead side frontal view 
finding way obstacles splitting flock way 
flocks having split obstacles 
