extensible framework repairing constraint violations gertz institut ur informatik universit hannover lange hannover germany phone fax informatik uni hannover de describe new approach repairing violations integrity constraints relational databases null values 
adopting basic concepts model diagnosis show simultaneous reasons violations di erent constraints determined 
reasons represented sets facts directly indicate possible repair actions guarantee remove observed violations 
interleaving diagnosis constraint violations execution repair actions draw enumeration schema possible minimal repair transactions sequences repair actions 
transaction applied inconsistent database guarantees result database consistent constraints 
order enumerate possible repair transactions repair actions performed hypothetically auxiliary relations 
enables user query intermediate result states obtained di erent repairs advance 
order provide suitable front general enumeration schema describe various repair strategies imposed user 
strategies follow individually speci ed repair goals easily integrated enumeration schema repair transactions 
proposed strategies range aspects minimal change priorities stored facts user interaction repair process 
keywords constraint enforcement inconsistent information model diagnosis repairing inconsistencies repair strategies numerous papers written specifying maintaining integrity constraints databases rst large database conference eswaran chamberlin hammer mcleod overview see grefen apers widom 
aim develop ifip 
published chapman hall extensible framework repairing constraint violations methods eciently check integrity constraints violations 
proposals integrity maintenance relational deductive object oriented databases grefen apers widom jeusfeld jarke 
nearly approaches passive case constraint violations rollback complete transaction performed 
applications drastic action insucient 
holds particular nowadays emerging database applications engineering design databases morgenstern buchmann transactions containing multitude operations undone lot get lost 
furthermore case constraint violations designer identify reasons violations possible repairs violating transaction 
course trivial task respective applications typically contain numerous complex semantic integrity constraints describe interdependencies various relations 
overcome problems called active constraint enforcement methods performing repairing actions developed 
topic repairing constraint violations new discipline database area 
proposals topic context active databases urban ceri gertz schewe thalheim deductive databases moerkotte see fraternali paraboschi extensive overview 
drawback approaches general realize autonomous repair constraint violations 
user choose automatically derived repairing triggers compile time triggers kept xed run time 
repair triggered inconsistent database way interact repair process 
furthermore repair violations may introduce new violations automatically repaired 
dicult user identify happened 
interesting questions happens result state re ect user intention application requirements 
choose possible alternative repairs 
respect application domains mentioned think properties listed important method performing repair constraint violations determination facts stored tuples positive facts missing tuples negative facts contribute di erent constraint violations exposition common reasons di erent violations possibility user choose repair strategy repair goal enumeration possible repair transactions user chooses executing repair transaction inconsistent database comparison ect di erent possible repair transactions 
describe general framework tries ful ll requirements extensible concerning demands repair constraint violations 
propose sound complete enumeration schema possible minimal repair transactions inconsistent database 
employ basic concepts model diagnosis reiter hamscher 
reason close relationship repairing constraint violations databases diagnosis repair malfunctioning components technical systems gertz 
concepts provide diagnostic means determine minimal sets facts contribute violations inconsistent database 
sets minimal repair actions derived guarantee remove observed violations may possibly introduce new violations 
iterating diagnosis repair constraint violations nally minimal repair transactions inconsistent database computed 
iterations performed auxiliary relations allowing user query di erent computations result states repair transactions 
contrast approaches additionally consider marked null values 
rationale missing facts reasons constraint violations attribute values facts known 
null values provide suitable means represent missing information order satisfy referential integrity constraints 
enumeration minimal repair transactions course suited practical usage provides suitable framework application independent application dependent extensions 
propose various repair strategies individually imposed user computation possible repairs 
aside ect strategies reduce number possible repairs suitable means integrate semantic aspects repair process 
proposed repair strategies range minimal change semantics minimal undo consistent completion violating transaction user interaction repair process 
structured follows section shortly introduce basic relational concepts sketch main idea model diagnosis connection repair constraint violations 
section describes collect information constraint violations violations diagnosed simultaneous reasons techniques model diagnosis 
section algorithm enumerate alternative possible minimal repair transactions inconsistent database 
section presents repair strategies imposed enumeration schema 
complete discussion formalization approach gertz 
extensible framework repairing constraint violations integrity constraints model diagnosis constraint speci cation checking approach assume extended relational model marked null values reiter imielinski 
extended relational database schema essentially ordinary relational databases null values contains set fp pn base relations collection domains set integrity constraints 
di erence domain may contain aside ordinary constants nite set marked null values special constants 
marked null values di er ordinary constants 
denote constants incompletely identi ed database denote ordinary constant completely new ones 
occurrences marked null value relations denote unknown value 
sequel denote database state database short determined tuples relation instances point time integrity constraints formulated relational language associated database schema 
concentrate integrity constraints normal form 
de nition integrity constraint integrity constraint normal form inf closed range restricted formula pattern pn pn qm qm qm base predicate corresponding base relation comparison operator notations denote domain respecting vectors variables constants arguments predicates 
class constraints general includes foreign key constraints functional dependencies classes complex constraints called semantic integrity constraints transformed constraints inf means transformation rules similar lloyd topor 
prevailing logical approach databases null values model theoretic approach 
database null values model theoretic approach succeeds choosing herbrand model 
case presence null values models database may exist model describing database complete information compatible roughly speaking models characterized possible mappings hb part interpretation assign ordinary constants herbrand base hb null values clear integrity constraints model diagnosis case formula true models false 
satisfaction constraint database adopt optimistic view suggested vardi requiring constraint true models database null values restrictive 
de nition constraint satisfaction integrity constraint said satis ed database exists model corresponding assignment null values model constraint satis ed denoted exist model unsatis able said violated database constraint checked evaluating associated violation query fx pn pn qm qm qm qm query evaluates empty set said satis ed violated tuple determined called violation query evaluation algorithm presence null values see reiter 
issues problems connected querying incomplete information see abiteboul 
model diagnosis decade model diagnosis prominent research area arti cial intelligence describing techniques identify malfunctioning components system hamscher 
fundamental approach diagnostic reasoning called model diagnosis consistency diagnosis reiter 
starting point approach description model real world system 
model represents structure system components interrelations 
actual behavior system con icts expected behavior system diagnostic task performed 
task comprises identifying components system assumed function abnormally account di erence expected observed behavior 
model diagnosis system de ned pair sd comp sd system description set rst order sentences de ning system components interrelated normally behave 
comp nite set constants denoting system components 
system description distinguished predicate ab components de ned intended meaning abnormal 
literal ab holds component comp behaving abnormally 
typically system descriptions specify system behavior condition components abnormal 
extensible framework repairing constraint violations observation obs system components nite set rst order sentences 
ab predicate reiter reiter characterizes diagnosis follows de nition diagnosis diagnosis 
sd comp obs subset 
comp sd obs fab 
ab comp 
consistent 
diagnosis minimal proper subset diagnosis 
words diagnosis 
assumption components abnormal ab 
holds assumption components behaving normal consistent system description sd observations obs 
reiter subsequent characterization diagnosis computation exploits notion con ict sets 
de nition con ict set con ict set sd comp obs set fc comp sd obs ab ab cn inconsistent 
con ict set minimal proper subset con ict set 
con ict set set components altogether assumed abnormal leading inconsistency system description observations 
de nition characterizes hitting set collection sets de nition hitting set hitting set set hitting set minimal proper subset hitting set 
words hitting set collection critical sets contains component de nitions diagnosis characterized way builds basis ecient computation diagnoses 
theorem reiter set 
comp diagnosis sd comp obs 
minimal hitting set collection con ict sets sd comp obs 
computation minimal diagnoses reiter follows directly theorem 
minimal hitting sets corresponding minimal diagnoses computed constructing hitting set tree hs tree 
due space limitations refer reader respective article reiter detailed description examples algorithm 
turns close relationship task diagnosing repairing malfunctioning components systems repairing constraint violations databases 
relationships drawn diagnosing constraint violations speci ed integrity constraints seen system description specifying correct system instances facts database describe components actual system instance constraint violations indicate misbehavior database contents ultimate goal repairing constraint violations satisfy integrity constraints performing repair actions inconsistent database essential di erence model diagnosis repairing constraint violations reason facts stored inconsistent database facts stored database 
consider existing components positive facts missing components negative facts necessary inserted database order satisfy referential integrity constraint 
repairing constraint violations set system components simple model diagnosis 
diagnostic task inconsistent database described identifying sets positive negative facts account observed constraint violations 
diagnosing constraint violations objective section describe approach allows determine reasons constraint violations inconsistent database computing possible minimal sets positive negative facts account violations characterize schemas possible repair actions sets modi cations associated sets facts 
reacting separately constraint violation inconsistent database rst require result violation query stored auxiliary violation relation denoted viol schema violation relation determined relation schemas base predicates occurring context active databases storing violations done means triggers evaluate violation queries 
violation viol want determine facts positive negative ground literals contribute violation 
de nition critical facts denote lists base predicates occur positively respectively negatively violation violation relation viol corresponding set positive negative critical facts de ned extensible framework repairing constraint violations hv fp attr attr denotes vector marked null values 
fact said critical fact 
negative facts missing tuples derived viol rightmost union equation 
depending number quanti ed variables base predicate marked null values introduced build respective critical fact 
necessary introduce new domain respecting null value quanti ed variable violation instance 
reason distinguish critical negative facts participating di erent violations 
choosing null value di erent critical facts imply unknown attribute value course restrictive equality di erent existentially quanti ed variables remain undetermined 
sequel denote collection sets critical facts constraints database worth mentioning particular negative facts interest 
describe possibly incompletely missing facts database needed order satisfy referential integrity constraint 
obvious critical fact possible reason violation critical facts directly suggest respective repairing modi cations 
hv deleting tuple denoted del removes violation analogously inserting tuple denoted ins removes violation 
objective determine possible minimal sets modi cations remove determined violations 
naive approach course take critical fact perform associated repair modi cation removing violation associated procedure structured necessarily result minimal set modi cations 
contrast approaches active constraint enforcement particular interested possible simultaneous reasons single facts contribute violation 
facts associated repairing modi cations remove violation 
call minimal set positive negative facts corresponding modi cations remove violations inconsistent database state diagnosis 
set modi cations corresponding state diagnosis called repair action 
collection sets critical facts inconsistent database minimal state diagnoses corresponding repair actions determined adopting concepts model diagnosis computation hitting sets reiter 
give main idea refer interested reader gertz complete formalization model theoretic approach particular emphasis null values 
diagnosing constraint violations shown set critical facts determines con ict set cf 
de nition 
obvious issue fact needs modi ed inserted deleted order remove violation basis computation hitting sets minimal state diagnoses respectively exactly sets critical facts contained adopt hitting set algorithm model diagnosis 
due possible null values negative facts computed hitting sets need checked negative literals contain null values null uni able 
main idea check null values reasonably replaced ordinary constants resulting instance provides complete information negative literals consideration 
due space limitations give example re ects state diagnoses repair actions chosen violations di erent constraints database negative literals containing null values uni ed 
example suppose constraints relation instances database computation violation queries evaluates violations viol viol cjb applying computation rule critical facts violations results inter alia minimal state diagnoses 
associated repair actions 
determined fh hv hv 
fp 

fp 
del del 

fins ins extensible framework repairing constraint violations example diagnosis 
indicates single fact simultaneous reason violations deleting tuple relation guarantees remove violations 
please note state diagnoses repair actions minimal exists proper subset determined repair action removes observed violations 
additionally negative literals containing null values arguments reasonably combined single literals complete information diagnosis 
order ful ll minimality property repair action 
due underlying notion constraint satisfaction cf 
de nition example inserting tuple relation aside removing violation associated hv remove violation associated uni cation respective negative literals suitably integrated hitting set algorithm shown gertz 
important note inconsistent database minimal diagnosis exists worst case corresponds undo violating transaction 
obvious execution repair action 
inconsistent database necessarily result consistent state 
course drawback repair actions may require subsequent repairs 
respective considerations approaches repairing constraint violations 
section show possible determine consistency preserving transactions simulating step computation 
repairing constraint violations describe general enumeration schema minimal repair transactions inconsistent database 
schema serves basis repair strategies discussed section 
contrast repair action repair transaction guarantees result consistent database applying repair transaction inconsistent database denoted result database condition holds 
proposed method tries enumerate possible repair transactions inconsistent database illustrated 
denotes initial inconsistent database obtained violating user transaction 
performing diagnosis violations results example di erent minimal state diagnoses 
executing associated repair actions result di erent databases database pre subscripts level number database level number pre database previous level led pre executing repair action associated diagnosis 


assume level constraints violated 
minimal state diagnoses determined 
repairing constraint violations initial inconsistent state 
level level level 


enumerating possible repair transactions iterating procedure database diagnosis builds tree possible repair actions databases reachable leaves tree denote databases consistent constraints 
example state obtained sequence repair actions associated 

consistent database 
union repair actions associated 

builds repair transaction execution results executing repair actions inconsistent database respectively base relations directly store ect auxiliary relations called di erential relations 
base relation introduce relations follows 
de nition di erential relations base relation pha di erential relations ha level num pre dbi ha level num pre dbi added database schema attributes level num pre db range domain integer 
relations represent di erent hypothetical databases di erent repair actions states 
additional attributes re ect node labelling enumeration tree 
hypothetical database pre relations easy determine facts inserted deleted base relations order obtain state initial inconsistent database de nition hypothetical extension base relation hypothetical extension database pre computed extensible framework repairing constraint violations original extension database database level pre state pre uniquely determined fa pre fa pre pre get number previous state level words possible database pre determine tuples need inserted respectively need deleted base relation repair actions leading state 
hypothetical possible database pre collection hypothetical extensions base relations particular database 
obvious original integrity constraints check violations hypothetical databases 
constraint corresponding hypothetical state constraint 
de nition hypothetical state constraint hypothetical state constraint integrity constraint pattern hyp bp pn pn bq qm qm predicates denoting base relations replaced corresponding predicates denoting hypothetical extensions base relation 
sequel denote set hypothetical state constraints corresponding hyp constraints computation violations associated sets critical facts occurs way original constraints described sections 
central algorithm describing sound complete enumeration schema possible minimal repair transactions inconsistent database 
algorithm applied database obtained user transaction 
performs breadth rst search minimal repair transactions hypothetical databases 
algorithm variables initial inconsistent database level hyp dbs hypoth 
database level violation false violation hypothetical database new dbs number hypothetical databases level diagnoses number state diagnoses hypoth 
database collection determined repair transactions collection sets critical facts repairing constraint violations main loop repeat violation false hyp dbs consider hypoth 
database pre pre determined determine hypothetical extension pre def 
check hypoth 
database constraints pre hyp hyp viol insert result evaluation violation query hyp viol violation relations empty user transaction led consistent database exit repair transaction leading pre determined add repair transaction pre violation true determine sets critical facts database pre non empty violation relation viol sets critical facts determined violations viol compute number minimal state diagnoses pre diagnoses hitting sets new dbs increase number hypoth 
states considered level new dbs new dbs diagnoses hyp dbs new dbs new dbs violation false structure main loop simple hypothetical database level checked violations hypothetical state constraints 
extensions hypothetical relations evaluated database 
case hypothetical state constraint violated pre hyp holds repair transaction determined 
picture situation leaf tree possible hypothetical databases reached see 
procedure add repair transaction checks sequence repair actions leading consistent database consideration builds minimal repair transaction 
extensible framework repairing constraint violations procedure add repair transaction pre sequence repair actions leading pre determines repair transaction determine tuples deleted pre del determine tuples inserted pre ins fins bq ft ins del exists repair transaction minimal repair transaction exists repair transaction drop store computed minimal repair transaction 
case exists non empty violation relation database pre consideration diagnostic task performed collection sets critical facts determined pre collection information current hypothetical database passed function 
function hitting sets invoke hitting set algorithm determine set minimal state diagnoses number diagnoses state diagnosis 
exists positive literal 
exists negative literal 
repair action 
undoes previous repair leading store repair action associated 
di erential relations positive literal 
insert negative literal 
insert increase number admissible state diagnoses return number diagnoses determined database 
repairing constraint violations current number diagnoses hypothetical databases level passed function hitting sets order suitably enumerate diagnoses associated repair actions stored di erential relations 
number admissible diagnoses performing undo previous repairs returned main loop order increase total number hypothetical databases need considered level 
order guarantee termination algorithm function hitting sets diagnoses excluded associated repairs undo previous repair leading state consideration number admissible diagnoses returned 
algorithm avoiding undo repair essential termination algorithm soundness completeness 
allow function symbols constraint speci cation language possibility non termination algorithm repair action undone possibly non terminating cycles introduced 
repair cycles critical points active constraint enforcement methods investigated aiken 
storing previous repairs approach check repair action path hypothetical database undone repair derived state diagnosis 
roughly speaking case path need considered net ect resulting repair transaction containing undo guaranteed computed path 
result due completeness hitting set algorithm minimal state diagnoses shown sucient soundness completeness enumerating minimal repair transactions gertz 
approach enumerating possible repair transactions advantages 
provides structured method compute minimal repair transactions 
second changes base relations necessary operations performed auxiliary relations re ecting changes hypothetical databases 
third possible inspect derived repair transactions check speci repair transaction re ects user intentions applications requirements 
process checking constraint violations determining reasons possible repair actions violations subsequent ects new constraint violations visible 
drawback approach course computational complexity depending number state diagnoses determined possible database exponential 
complexity reduced imposing restrictions admissible state diagnoses repair transactions 
repair strategies discussed section 
extensible framework repairing constraint violations repair strategies previous section general enumeration schema forms lowest level repairing system determines possible repair transactions inconsistent database 
nearly applications additional semantic knowledge application domain requirements repair 
repairing system applicable practice information utilized order reduce search space possible repair transactions 
objective section outline enumeration schema extended repair strategies allow achieve speci ed repair goals ecient way 
strategies general possible independent speci application domain 
aspects minimal change enumeration possible repair transactions exclusively utilizes concept minimality set oriented manner 
repair strategies discussed common goal keep information possible database determining possible repair transactions 
goal analogously formulated perform changes minimal possible 
context meaning information possible subject interpretation repair transaction interpretation information 
typically natural questions user want know case constraint violation transaction possible maximal subsets operations transaction consistent integrity constraints 
possible minimal sets operations perform addition violating transaction order obtain consistent state keeping original transaction 
notion repair transaction exploits knowledge state violating transaction contents violating transaction associated operations 
sequel assume transaction performed user represented set insertions base relations deletions base relations respectively 
transaction considered set positive negative literals denoting insertions deletions respectively 
de nition minimal undo violating user transaction resulting inconsistent database repair transaction said repair strategies undo operation ins exists operation del operation del exists operation ins minimal undo proper subset undo 
words minimal undo violating transaction identi es minimal necessarily unique subset operations need undone order obtain consistent state 
sets identify minimal subsets operations caused violations minimal undo operations violating transaction undone rest database contents kept get restriction computation possible repair transactions positive negative facts associated modi cations represented contribute critical facts basis state diagnosis 
computational point view fact contained set critical facts removed set fact appear property easily checked function hitting sets 
obvious strategy reduces search space possible repair transactions sets critical facts elements need considered computation minimal state diagnoses branching factor hypothetical database reduced 
contrary minimal undo worst case complete rollback violating transaction consistent completion violating transaction completely keeps ect violating transaction 
de nition consistent completion violating transaction 
repair transaction said consistent completion exists operation undoes operation contrast minimal undo consistent completion facts inserted deleted violating transaction contribute sets critical facts 
consequently facts sets critical facts introduced violating transaction removed sets advance 
violating transaction consistent completion exists 
assume instance constraint transaction ins constraint violated corresponding set critical facts regard consistent completion fact critical fact 
removing results empty set repair action completion exists performed order restore consistency 
computation minimal undo consistent completion easily integrated algorithm computing minimal state diagnoses gertz 
presuming user transaction suitably represented set positive negative facts function hitting sets respective facts removed set critical facts applying computation hitting sets respectively state diagnoses extensible framework repairing constraint violations repair goal keep information possible interpreted terms counting semantics repair transaction 
jt denote number deletions insertions contained repair transaction de nition repair transaction said counting minimal exists repair transaction jt jt performs modi cations order obtain consistent state 
adopting counting semantics criteria enumerating possible repair transactions drastically reduces number possible transactions 
resembles uniform cost search path costs determined number operations leading hypothetical database 
repair transaction determined level hypothetical database level need considered number modi cations performed repair actions leading state greater jt important note counting semantics combination minimal undo minimal completion violating transaction 
respective cardinality checks need integrated procedure add repair transaction 
gure illustrates restrictiveness repair transactions obtained possible combinations repair strategies means restrictive 
counting minimal set minimal counting minimal minimal undo minimal consistent counting minimal consistent completion completion undo restrictiveness repair strategies set minimality permissive strategy utilized enumeration repair transactions 
counting minimal undoes counting minimal consistent completions restrictive strategies minimal change adopted determine possible repair transactions inconsistent database 
repair strategies priorities section shortly sketch priorities preferences utilized repairing process 
consideration needed typically information database important 
aspect course suitably respected repairing inconsistencies allows describe partial order consistent databases obtained di erent repair transactions 
main idea priority repair tag facts inconsistent database xed number assigned positive negative fact tagging database way done tuple level practical point view reasonable tag facts belonging relation priority 
database obtained way called database tagged lowest priority fact 
repair transaction operations contained grouped priorities ected facts de nition inconsistent database tagged repair transaction denote subset de ned fins ins bg del bg 
de nition priority repair inconsistent database tagged minimal repair transactions said accomplish better priority repair denoted jt jt jt jt said equal respect priority repair denoted jt jt ng 
example consider repair transactions del facts relation priority facts relation priority 
intuitively means facts contained relation important contained de nition transaction accomplishes better priority repair important information kept 
gertz furthermore introduced notion weighted priorities weights assigned priorities 
allows numerically compare transactions evaluating weighted counts facts 
transaction tagging furthermore introduced allows user assign priorities operations violating transaction 
possible distinguish important operations important operations 
extensible framework repairing constraint violations assuming facts inconsistent database suitably tagged assumptions priorities facts contained database checks better priority repair easily included procedure add repair transaction 
interaction repair process proposed repair strategies rely issue user speci es desired repair goal advance enumeration possible repair transactions 
presuming suitable environment possible user interact repair process 
trivial way interaction user inspects determined state diagnoses repair actions level level 
selects repair actions re ect intention considered 
lead drastic pruning enumeration tree repair transactions 
repair transactions contain insertions deletions tuples facts inserted may contain null values cf 
section 
repair action user replace null values ordinary constants obtaining repair transactions complete information 
deleting facts part repair actions possible perform updates attribute values tuples delete replaced marked null values 
gertz call weak deletion approach 
user add insertions deletions derived repair action 
course leads fact computed repair transactions minimal anymore 
cases user interaction repair process proposed algorithm enumerating repair actions transactions guiding tool user 
summary new approach repairing constraint violations relational databases 
approach allows enumerate possible minimal repair transactions inconsistent database 
techniques model diagnosis shown state diagnoses associated minimal repair actions determined 
advantage diagnostic approach simultaneous reasons facts violations di erent constraints computed important aspect considered approaches constraint enforcement 
particular usage marked null values provides suitable means handle missing tuples attribute values known 
diagnostic task sound complete algorithm enumerating possible minimal repair transactions inconsistent database 
algorithm performs iteration diagnosis repair summary constraint violations breadth rst search manner hypothetical databases 
hypothetical databases eciently represented means di erential relations algorithm permits query alternative possible repairs alternative consistent result states 
algorithm provides formal basis various repair strategies individually imposed user previous enumeration possible repair transactions 
strategies considered related xed chosen combined user di erent inconsistent databases 
important feature strategies enumeration schema easily integrated algorithm 
extensions useful repair strategies repair goals course need discussed 
implemented rst prototype proposed system top oracle rdbms 
diagnostic task performed prolog system coupled database system 
applications domain electrical engineering domain rail trac management implemented repair system 
enumerating repair actions particular usage repair strategies led reasonable means handling constraint violations 
gertz shown approach extended temporal databases deductive databases 
includes investigations repair violations dynamic integrity constraints application approach object oriented databases 
abiteboul kanellakis grahne representation querying sets possible worlds 
theoretical computer science 
aiken widom hellerstein behavior database production rules termination con uence observable determinism 
stonebraker ed proc 
acm sigmod international conference management data acm press new york 
buchmann handling constraints exceptions attached constraint handler object oriented cad databases 
dittrich dayal buchmann eds object oriented database systems topics information systems 
springer verlag berlin 
ceri widom better termination analysis active databases 
paton williams eds rules database systems proceedings st int 
workshop edinburgh workshops computing springer verlag london 
ceri fraternali paraboschi tanca automatic generation production rules integrity maintenance 
acm transactions extensible framework repairing constraint violations database systems september 
garcia decker comparing synthesizing integrity checking methods deductive databases 
rusinkiewicz ed proc 
th ieee cs international conference data engineering ieee computer society press 
eswaran chamberlin functional speci cations subsystem data base integrity 
kerr ed proc 
st international conference large data bases morgan kaufmann publishers los altos ca 
eds 
engineering databases 
springer berlin 
fraternali paraboschi review repairing techniques integrity maintenance 
paton williams eds rules database systems proc 
st int 
workshop edinburgh workshops computing springer verlag london 
grefen apers integrity control relational database systems overview 
data knowledge engineering march 
gertz specifying reactive integrity control active databases 
widom chakravarthy eds ride fourth international workshop research issues data engineering ieee computer society press los alamitos ca 
gertz diagnosis repair constraint violations database systems phd thesis university hannover hannover july 
table contents available ftp informatik uni hannover de papers ger ps gz gertz diagnostic approach repairing constraint violations databases 
nejdl ed sixth international workshop principles diagnosis dx working papers october germany university hannover hannover 
hamscher console de kleer readings model diagnosis 
morgan kaufmann publishers san mateo ca 
hammer mcleod semantic integrity relational database system 
kerr ed proc 
st international conference large data bases morgan kaufmann publishers los altos ca 
imielinski incomplete information relational databases 
journal acm october 
jeusfeld jarke relational object oriented integrity simpli cation 
delobel kifer eds deductive object oriented databases proceedings dood lecture notes computer science springer verlag berlin 
lloyd topor making prolog expressive 
journal logic programming 
biography morgenstern borgida lassez maier wiederhold constraint systems knowledge data 
kerschberg ed expert database systems proc 
international conference benjamin cummings menlo park ca 
moerkotte reactive consistency control deductive databases 
acm transactions database systems december 
reiter logical reconstruction relational database theory 
brodie mylopoulos schmidt eds conceptual modelling 
springer verlag new york 
reiter sound complete query evaluation algorithm relational databases null values 
journal acm april 
reiter theory diagnosis principles 
arti cial intelligence 
hamscher 

schewe thalheim achieving consistency active databases 
widom chakravarthy eds ride fourth international workshop research issues data engineering ieee computer society press los alamitos ca 
urban context constraint explanation tool 
data knowledge engineering may 
vardi integrity databases incomplete information 
proc 
th acm sigact sigmod sigart symposium principles database systems acm press new york 
widom database constraint management data engineering june special issue 
biography michael gertz teaching research assistant database information systems group institute informatics university hannover 
research interests include temporal active databases multidatabase systems logical physical database design database integrity database models languages development database administration tools 
udo professor databases informations systems university hannover 
research interests include formal system speci cations algebraic logic object oriented approaches non standard logics particular temporal default logics conceptual database design database integrity deductive databases tools database design administration 
