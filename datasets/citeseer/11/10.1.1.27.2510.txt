particles sample control implicit surfaces andrew witkin paul heckbert department computer science carnegie mellon university new particle approach sampling controlling implicit surfaces 
simple constraint locks set particles surface particles surface move 
constraint surfaces follow particles particles follow surfaces 
implement control points direct manipulation specifying particle motions solving surface motion maintains constraint 
sampling rendering run constraint direction creating floater particles roam freely surface 
local repulsion spread evenly surface 
varying radius repulsion adaptively killing particles local density achieve sampling distributions rapidly maintain face rapid extreme deformations changes surface topology 
cr categories computer graphics computational geometry object modeling curve surface solid object representations physically modeling computer graphics methodologies techniques interaction techniques numerical analysis optimization constrained optimization 
general terms algorithms design 
additional key words phrases physically modeling constrained optimization adaptive sampling interaction 
implicit surfaces proven useful modeling animation visualization 
appeal implicit models new surfaces created adding combining functions define producing variety subtle interesting shape effects 
role visualization volume data 
addition implicit representation lends calculations ray surface intersection inside outside test 
implicit surfaces suffer serious drawbacks suited ray tracing easily rendered interactive speeds reflecting underlying problem difficult sample systematically 
particularly problem wish render time varying surfaces real time vital interactive sculpting 
second shapes implicit surfaces proven difficult specify control parametric counterparts 
mail authors addressed department computer science carnegie pittsburgh pa usa 
email addressed andrew witkin aw cs cmu edu paul heckbert ph cs cmu edu 
acm 
reprinted computer graphics proc 

new particle approach sampling shape control implicit surfaces addresses problems 
heart approach simple constraint locks collection particles implicit surface particles surface move 
constraint surface follow particles particles follow surface 
formulation differential specify solve velocities positions behavior system governed differential equations integrate velocities time 
control surface shape moving particles interactively solving surface motion keeps particles surface 
technique lets pin surface points interactively dragging 
particles act control points direct manipulation surface 
sampling rendering run constraint direction creating particles may roam freely surface compelled follow moves 
call particles 
starting point idea uniform sampling density achieved making particles repel 
approach turk resample polygon meshes figueiredo sample implicit surfaces 
simple repulsion quite stationary surfaces reasonably initial sampling available 
largescale non uniformities exist convergence extremely slow moderate sampling densities 
eliminate need starting point dramatically accelerate convergence employing iterative approach start small number particles large radius repulsion allow split particle reducing radius repulsion 
repeat process desired sampling density reached 
level inherits distribution uniform large scale requiring just iterations iron local irregularities 
global fails handle surfaces move deform irregularities arise density high 
introduce local adaptive repulsion algorithm repulsion radius particle birth death regulated local density 
method fast maintain sampling face rapid extreme surface motion deformation 
remainder organized follows discussing previous related 
introduce basic constraint mechanism attaches particles surfaces 
describe particles surface shape control 
explain adaptive repulsion sampling algorithm 
describing implementation results conclude discussion 
previous related divided categories sampling methods control methods 
sampling methods related research surface sampling includes particle sampling techniques polygonization techniques implicit surfaces 
turk repelling particles surfaces uniformly resample static surface simplify polygonization reducing number polygons 
hoppe explored mesh simplification framing optimization problem penalties geometric error number samples edge length 
method restrict points surface turk 
szeliski oriented particles model surfaces 
technique allowed user move particles interactively employing short range repulsion long range attraction keep particles clumping flying apart 
system generated surface connecting neighboring particles appropriately manipulate high level representation surface parametric patch implicit function 
output system triangulation 
system bears superficial resemblance disks visualize surface respects techniques quite different 
implicit surface called iso surface set points satisfy 
implicit surfaces typically defined starting simple building block functions creating new implicit functions sum min max simpler functions 
building blocks polynomials resulting surfaces called algebraic surfaces building blocks spherical gaussian functions surfaces called soft objects 
sums implicit functions allows blend surfaces created min max yields union intersection solid objects 
rendering implicit surface difficult 
ray tracer intersecting ray implicit surface reduces onedimensional root finding slow complex implicit function 
exploit speed graphics hardware prefer render buffer algorithm 
requires converting implicit surface polygons parametric surfaces 
existing methods implicit surfaces subdivide space uniform grid cubical tetrahedral voxels sample function vertices voxels voxel vertices generate polygon approximating surface 
approach called marching cubes algorithm 
improvements algorithm adaptive subdivision curvature :10.1.1.23.7264
unfortunately algorithms small surface features initial sampling grid coarse snyder uses interval arithmetic guarantee topology polygonization matches topology real surface 
polygonization algorithms designed static surfaces changing surface require scratch time 
algorithm exception 
re voxels change 
physically approaches polygonization implicit surfaces pioneered figueiredo 
methods describe starts particles randomly scattered space subjects forces pull surface idea proposed uses repulsion particles distribute uniformly surface 
technique uses penalty methods lead stiff differential equations solution generally slow repel nice pattern inaccurate staying surface 
particles reached equilibrium polygonization delaunay triangulation 
resembles closely simulation method differs theirs technique supports interactive control surfaces incremental sampling changing surfaces theirs 
control methods principal disadvantages implicit modeling relative parametric modeling difficulty controlling shape implicit surface 
effect parameters implicit surface non intuitive 
algebraic surfaces instance hard predict surface shape coefficients 
modeling complicated global nature algebraic surface polynomial basis functions prevent local shape control 
reasons piecewise algebraic surfaces popular 
piecewise algebraic surfaces typically defined weighted sum bernstein polynomials lattice tetrahedra 
squares methods fitting surfaces set points available standard algebraic surfaces piecewise algebraic surfaces 
pratt algorithm fit surface parameters points time 
methods limited algebraic surfaces 
blobby models employ local basis functions intuitive algebraic surfaces 
interactive blobby modeling system user dials sliders adjust position radius blobby center arriving desired surface matter guesswork real time display typically just wireframe higher quality rendering requiring line ray tracing polygonization 
fit blobby models set surface points method quite slow example requiring days computer time fit control points parameters 
direct manipulation blobby surface interactive speeds remained open problem 
differential methods constrain motion particles surfaces rooted classical mechanics see discussion mechanical constraints constraint forces closely related constraint methods physically modeling computer graphics :10.1.1.37.9588
allied methods interactive geometric modeling :10.1.1.34.215
particle surface constraint section derive basic machinery allows attach moving particles moving surfaces 
derive basic constraint particle surface velocities establishes maintains contact system evolves time 
pose related problems solve particle velocities time derivatives surface parameters solve surface derivatives particle velocities 
problem generally underconstrained express constrained optimization 
notation boldface denote vectors italics scalars 
subscripts denote partial differentiation 
superscript denote th th member collection objects 
th collection vectors derivative scalar respect vector vector 
superscripts usual meaning exponents dot denotes derivative respect time 
acm computer graphics proc 

basic constraint represent moving implicit surface position space vector time varying shape parameters 
example implicit sphere defined center radius parameter vector vector 
condition collection moving particles lie surface trajectory th particle 
order condition met initial time onward suffices equation satisfied time derivative 
want manipulate velocities positions obtain expression chain rule denote fq evaluated setting zero equation obtain linear constraints principle began valid state ensured conditions met instant guaranteed particles remained surface 
practice valid initial conditions numerical integration errors cause drift time 
cure problems feedback term setting feedback constant 
yields set linear constraint equations constrained optimization employ constraints ways order particles move surface solve 
second mutually repelling particles sample surface solve case generally wish solve underconstrained systems 
minimize quadratic function subject constraints 
objective function known desired values respectively 
desired values variety ways 
setting zero minimizes particle velocities 
setting zero minimizes surface parametric time derivative 
unconstrained optimization require gradient objective function vanish 
constrained minimum require gradient objective function linear combination gradients constraint functions 
condition ensures local improvement violating constraints 
case point constrained surface condition easily visualized gradient objective function lie normal surface orthogonal projection tangent plane vanishes 
harder visualize idea higher dimensions 
give derivation straightforward useful generalization allow error measured arbitrary symmetric positive definite metric tensor 

particular possible automatically compute sensitivity matrix analogous mass matrix mechanics compensates scale differences components fq see :10.1.1.37.9588:10.1.1.37.9588
classical method lagrange multipliers solves constrained optimization problems adding gradient objective linear combination constraint gradients unknown coefficients 
solves simultaneously original unknowns coefficients 
case linear constraints quadratic objective linear problem 
problems wish solve obtaining seek minimize objective subject constraints differing regard unknowns 
solutions turn quite different structure dependencies consider problem turn 
solving requirement gradient objective linear combination constraint gradients expressed value unknown coefficients summation drops addition require constraints met equation allows express terms unknown 
substituting equation gives fq 
may solve independently 
doing yields fq substituting equation yields fq particle velocity solves constrained optimization problem 
notice case surface moving constraints met reduces just orthogonal projection surface tangent plane control points follow procedure solving derivatives taken respect condition gradient objective linear combination constraint gradients 
time sum vanish generally depends acm computer graphics proc 

equation substitute equation 
rearranging gives matrix equation solved 
note element matrix just dot product having solved solve equation 
summary section solutions closely related problems instantaneous surface motion solve particle velocities minimize deviation desired velocities subject constraint particles stay surface 
particle constrained velocity may computed independently 
particle velocities solve implicit function time derivative minimizes deviation desired time derivative subject constraint particles remain surface 
calculating entails solution linear system number particles 
combine methods maintaining populations particles control points 
control points moved explicitly user calculated surface follow 
contrast velocities calculated follow surface computed 
adaptive sampling section address problem sampling implicit surfaces building floater mechanism previous section 
sampling requirement quick rendering evaluation integrals surface area volume 
primary goal obtain sampling distributions uniform user specified density non uniform density local criteria surface curvature 
wish reach specified distribution quickly seed points ideally connected component maintain distribution surface moves deforms 
support interactive sculpting able update sample points hz better 
additional goals particles move little possible response surface motion basic generic information function required 
necessary supply surface parameterization 
starting point approach idea introduced turk figueiredo particles spread uniform density local repulsion relying finiteness surface limit growth 
simple repulsion job local irregularities reasonably initial sampling turk application resampling polygon mesh extremely slow converge initial sampling irregular large scale fails completely track surface motions deformations 
describing basic repulsion scheme introduce idea global start sampling process small number particles large radius interaction coming close equilibrium just iterations 
fission particle imposing random displacements smaller interaction radius 
time scale interaction radius smaller value 
new starting point locally irregular nearly uniform large scale structure 
iterations suffice smooth small irregularities reach new equilibrium 
scaling process repeated target sampling density reached 
global fails handle surface motion new introduced process terminates system suffers shortcomings simple repulsion 
example sudden bulge surface create hole sampling pattern repaired extremely slowly 
intuitively particles edge voids feel reduction density expand radii interaction quickly fill hole restore full density 
hand density high particles die desired density restored 
conclude section describing fast robust adaptive repulsion scheme provides just behavior meeting goals 
simple repulsion windowed density measure employ simple gaussian energy function distances particles 
define energy particle due particle exp vector particles global repulsion amplitude parameter called global repulsion radius standard deviation gaussian 
repulsion radius controls range repulsion force 
note energy particle current position defined ultimately reach global minimum varying particle positions surface 
finding global minimum impractical find local minimum gradient descent particle moves direction reduces energy fastest 
choose particle desired velocity negatively proportional gradient energy respect position formulas energy desired velocity carefully chosen energy desired velocity proportional distance 
guarantees sampling pattern computed simple repulsion method scales surface 
desired particle velocities set way constrained particle velocities computed equation particles repel behavior highly dependent parameter slope acm computer graphics proc 

gaussian peaks distances near zero smaller greater distances 
distance particles instance repulsion peak 
chosen small particles nearly spreading separation chosen big distant particles repel nearby ones resulting sampling pattern poor 
best value surface area number particles 
global surface seeded floater particles initial value causes particles disperse sampling repeatedly refined allowing particles reach equilibrium simultaneously particle giving new particles small random displacement simultaneously dividing 
particles considered equilibrium net forces speeds get low 
global scheme early generations spread sparsely succeeding generations fill densely 
simple repulsion global acceptable maintaining distribution slowly changing surface population power particles redistribute quickly response rapid surface changes 
global fails adapt changes surface adequately mentioned earlier 
adaptive repulsion develop adaptive repulsion scheme employ analogy population organisms distributing uniformly area 
specifically imagine population pioneers spreading west america 
order settle entire country quickly possible rule male female pair spread possible away neighbors roughly equal directions children 
neighbors low pair claim land neighbors pressing pair relinquish land 
early pioneers travel great distances claim huge tracts land generations move divide successively smaller shares desired density achieved 
ideas applied particle behavior 
achieve uniform densities quickly maintain surface moves deforms allow particle repulsion radius decide independently fission die 
particle radius grow forces small shrink forces big 
particle near equilibrium birth death occur density low high respectively 
quantify principles 
similar simple repulsion scheme define energy particle due particle exp note global parameter replaced local parameter general 
energy particle defined repulsion force desired velocity proportional gradient energy respect position time varying repulsion radii controlled differentially 
want radius grow energy low shrink energy high 
done indirectly controlling energies 
stated earlier energy measure scale invariant 
surfaces samples scaled remain constant 
ensure neighboring particles repel simply drive energies global desired energy level arrive value consider ideal hexagonal close packing best uniform sampling pattern planar surface 
configuration equal distance nearest neighbors roughly guarantee strong repulsion forces 
particle nearest neighbors configuration desired energy roughly exp 
portion particle repulsion energy directly affected change repulsion radius keep near desired value linear feedback equation feedback constant 
change repulsion radius particle yield change energy derived chain rule neglecting terms rule fine particles exerting force neighbors causes infinite radius change particle sparsely sampled region surface particle 
cases want radius grow modify equation 
change energy respect change radius equations control particle positions repulsion radii job moving particles sparse regions quickly radii large density remain low 
adaptive fission death achieve uniform density necessary large radius particles fission 
likewise particles considered death 
criteria control birth death particles particle iff acm computer graphics proc 

sequence illustrates adaptive repulsion mechanism 
topmost image shows deliberately poor sampling blobby cylinder produced simple repulsion cylinder rapidly stretched leaving sample points 
remaining images top bottom show recovery sampling adaptive repulsion enabled 
particles frontier increase radii repulsion rapidly filling voids 
particles slow fission restoring desired sampling density 
process takes seconds sgi 
particle near equilibrium particle repulsion radius huge max adequately radius desired radius 
fission splits single particle 
particles initial radii desired velocity random direction scaled fraction particle dies iff particle near equilibrium particle repulsion radius small biased randomized test succeeds uniform random number 
death criteria stochastic prevent mass suicide regions 
combination adaptive repulsion death responsive changes surface shape simple repulsion scheme 
implementation results techniques described implemented lines code 
particular implicit function classes derived generic implicit function base class 
adding new implicit function system easy requiring implementation functions fq bounding box 
fq standard system employing implicit functions 
example define blobby sphere implicit function sum gaussians distance center points 
parameter vector consists parameters bias plus parameters sphere center vector standard deviation 

define exp functions needed system fq 
assume radius conservative bounding box blobby spheres bounding box non blobby spheres centers radii implemented spheres blobby cylinders 
blobby cylinder function defined sum gaussians distance line segments 
system blobby cylinders parameters bias plus parameters cylinder endpoints standard deviation 
useful freeze parameters fixed value modified interaction 
acm computer graphics proc 

done simply leaving fq vectors 
get blobs equal radii instance omit system starts single floater positioned arbitrarily bounding box surface begins physical simulation repeating differential step user interface sets desired control point velocities stationary control points course zero desired velocity control points dragged user desired velocities calculated function cursor position 
set desired values time derivatives surface parameters 
typically set zero minimize parametric change surface calculated attract surface default shape 
compute actual surface parameter changes constrained control point velocities equations 
compute repulsion forces set desired velocities equation 
compute actual floater velocities constrained computed surface time derivatives equation 
gradient near zero surface locally ill defined best leave motionless 
compute change floater repulsion radii equations 
update positions control points euler method similar formulas update surface parameters floater repulsion radii test floater possible fission death 
redisplay control points disks tangent surface normal radius proportional mouse user pick control point move plane perpendicular view direction 
pulling control point sets desired control point velocity velocities feed constrained optimization solution turn feeds numerical differential equation solver care taken ensure control point motions reasonably smooth behaved positions set directly polling pointing device 
simple solution works velocity dragged particle proportional vector point cursor position 
effect provides spring coupling cursor control point 
control point lag cursor result performance lag barely noticeable 
similar dragging schemes described :10.1.1.37.9588
user create delete control points adjust desired repulsion radius slider 
matrix equation symmetric general positive definite 
lends solution cholesky decomposition easy implement robust efficient 
matrix singular inconsistent redundant constraints applied number constraints exceeds linear combinations 
condition easy detect counting 
problem singularities circumvented leastsquares technique singular value decomposition 
system fast run interactive rates 
number degrees freedom implicit surface number control points number 
expensive parts algorithm computation matrix equation cost mn solution linear system cost computation repulsion forces pairs currently cost display cost large constant 
current system handle overconstrained surfaces total asymptotic cost algorithm mn iteration 
run simulations complex 
repulsion cost dominated easily optimized spatial data structures 
smaller numbers system runs interactive rates hz faster silicon graphics workstation mhz processor 
parameter settings recommended surface diameter parameter meaning time step feedback coefficients keep particles drifting surface keep particles respectively repulsion amplitude desired energy prevent divide zero desired repulsion radius max max maximum repulsion radius note changes time equilibrium speed multiple fraction fraction death parameters set forgotten 
parameter user typically need control desired repulsion radius method meets goals fast proven robust 
recovered violent user interaction causing rapid shape change 
adaptive sampling fission death techniques tuned seen system oscillate diverge die current parameter settings 
interaction parameter needs varied 
result discovered implicit surfaces slippery attempt move control points slip grasp 
new particle method sampling control implicit surfaces 
capable supporting real time rendering direct manipulation surfaces 
control method limited algebraic surfaces previous techniques allows fast control general procedural implicit functions control points surface 
dynamic sampling rendering method implicit surfaces samples changing surface quickly existing methods 
constraint methods allows particles follow surface changes rapidly accurately penalty methods 
algorithms adaptive repulsion fission death particles capable generating sampling patterns quickly earlier repulsion schemes sample surface rapid shape changes 
acm computer graphics proc 

sequence illustrates construction shape composed blobby cylinders 
shape created direct manipulation control points mouse 
topmost image cylinder primitives superimposed 
subsequent image represents result single mouse motion 
number directions research 
intend investigate uses samplings obtain 
calculation surface integrals area volume surface fairness measures described 
creation polygon meshes 
surface framework necessary infer topology sample points 
difficult finding polygonization set samples grid marching cubes algorithms approximate topology suggested signs samples topology grid 
delaunay triangulation possible way extract topology 
robust alternative employ lipschitz conditions interval arithmetic 
preserve basic advantages method require polygonization algorithm allows efficient dynamic updates surface changes 
developed sample implicit surfaces adaptive repulsion scheme applied meshing sampling parametric surfaces floater defined position surface parameter space position space 
performance numerical issues remain addressed 
tackle complex models exploit sparsity dependence notably local bases blobby models dependence faraway elements negligible 
additional numerical issue handling singular constraint matrices due overdetermined dependent constraints 
excellent results obtained squares techniques 
additional area investigation local criteria notably surface curvature control sampling density 
surface curvature measured directly cost additional derivatives places considerable extra burden implementor implicit primitives alternative estimate curvature floater positions normals nearby points 
having established desired density point curvature criterion relatively simple modifications adaptive repulsion scheme yield desired nonuniform density 
possible density criterion user focus interest neighborhood control point dragged 
room considerable interactive sculpting implicit surfaces 
dragging control point time somewhat limiting slippery behavior surface 
basic control point machinery developed build complex sculpting tools influence multiple surface points coordinated ways 
authors wish scott draves sebastian contributions 
research supported part science center national science foundation bir nsf high performance computing communications bir engineering design research center nsf engineering research center carnegie mellon university apple computer equipment silicon graphics second author supported nsf young investigator award ccr 
bajaj ihm joe warren 
higher order interpolation squares approximation implicit acm computer graphics proc 

algebraic surfaces 
acm trans 
graphics oct 
david baraff 
analytical methods dynamic simulation non penetrating rigid bodies 
computer graphics july 
david baraff 
curved surfaces coherence rigid body simulation 
computer graphics august 
david baraff andrew witkin 
dynamic simulation flexible bodies 
computer graphics 
proc 
siggraph 
ronen barzel alan barr 
modeling system dynamic 
computer graphics 

stabilization constraints integrals motion dynamical systems 
computer methods applied mechanics 

practical uses implicit surfaces animation 
modeling visualizing animating implicit surfaces siggraph course notes pages 

james blinn 
generalization algebraic surface drawing 
acm trans 
graphics july 
jules bloomenthal :10.1.1.23.7264
polygonization implicit surfaces 
computer aided geometric design 
jules bloomenthal 
implicit surface 
paul heckbert editor graphics gems iv pages 
academic press boston 
jules bloomenthal brian wyvill 
interactive techniques implicit modeling 
computer graphics symp 
interactive graphics 
luiz de figueiredo jonas de miranda gomes demetri terzopoulos luiz 
physically methods polygonization implicit surfaces 
graphics interface pages may 
phillip gill walter murray wright 
practical optimization 
academic press new york ny 
michael gleicher andrew witkin 
lens camera control 
computer graphics 
proc 
siggraph 
herbert goldstein 
classical mechanics 
wesley reading ma 
hoppe tony derose tom duchamp john mcdonald werner stuetzle 
mesh optimization 
siggraph proceedings pages july 
david brian wyvill geoff wyvill 
speeding animation simulation 
proc 
iv multi array processors pages jan 
william lorensen harvey cline 
marching cubes high resolution surface reconstruction algorithm 
computer graphics siggraph proceedings july 
henry carlo 
functional minimization fair surface design 
computer graphics 
proc 
siggraph 
shigeru 
volumetric shape description range data blobby model 
computer graphics siggraph proceedings july 
paul ning jules bloomenthal 
evaluation implicit surface 
computer graphics applications pages nov 
vaughan pratt 
direct squares fitting algebraic surfaces 
computer graphics siggraph proceedings july 
press flannery teukolsky vetterling 
numerical recipes cambridge university press cambridge england 
ricci 
constructive geometry computer graphics 
computer journal may 
sederberg 
piecewise algebraic surface patches 
computer aided geometric design 
john snyder 
generative modeling computer graphics cad 
academic press boston 
richard szeliski david 
surface modeling oriented particle systems 
computer graphics siggraph proceedings july 
greg turk 
generating textures arbitrary surfaces reaction diffusion 
computer graphics siggraph proceedings july 
greg turk 
re tiling polygonal surfaces 
computer graphics siggraph proceedings july 
william welch andrew witkin 
variational surface modeling 
computer graphics 
proc 
siggraph 
andrew witkin michael gleicher william welch :10.1.1.37.9588
interactive dynamics 
computer graphics march 
proc 
symposium interactive graphics 
william welch 
fast animation control non rigid structures 
computer graphics july 
proc 
siggraph 
brian wyvill craig geoff wyvill 
data structure soft objects 
visual computer 
acm computer graphics proc 

