learning program behavior profiles intrusion detection ghosh aaron michael schatz reliable software technologies circle sterling va phone fax email ghosh computer org www com profiling behavior programs useful detecting potential intrusions systems 
presents anomaly detection techniques profiling program behavior evolve memorization generalization 
goal monitoring program behavior able detect potential intrusions noting irregularities program behavior 
techniques start simple equality matching algorithm determining anomalous behavior evolve feed forward backpropagation neural network learning program behavior elman network recognizing recurrent features program execution traces 
order detect attacks systems intrusion detection systems able generalize past observed behavior 
goal research employ machine learning techniques generalize past observed behavior problem intrusion detection 
performance systems compared testing data provided darpa intrusion detection evaluation program 
intrusion detection tools seek detect attacks computer systems monitoring behavior users networks computer systems 
sponsored defense advanced research projects agency darpa contract daah cr 
views contained document authors interpreted representing official policies expressed implied defense advanced research projects agency government 
detection techniques line defense computer attacks secure network architecture design secure program design carefully configured network services firewalls penetration audits personnel screening 
attacks computer systems largely successful despite plethora intrusion prevention techniques available 
instance insider attacks malicious mobile code able penetrate security defenses 
largely computer security attacks possible poorly configured software buggy software 
intrusion detection activities performed system administrators examined audit logs user system events recorded computer hosts 
activities super user login attempts ftp transfers sensitive files failed file accesses flags potential intrusive activity 
soon expert systems automatically detect potential attacks scanning audit logs signs intrusive behavior departures normal behavior 
intrusion detection expert system ides developed sri performed intrusion detection creating statistical profiles users noting unusual departures normal profiles 
ides keeps statistics user specific intrusion detection measures number files created deleted day 
statistics form statistical profile user 
profiles periodically updated include changes user profile 
technique adaptive changing user profiles 
susceptible user slowly changing profile include possibly intrusive activities 
network intrusion detection tools gained popularity researchers commercial tools 
network intrusion detection tools typically search network data signatures known computer attacks 
example network probing attacks map network topology site detected characteristic pings range network services machines 
today generally types intrusion detection systems anomaly detection misuse detection 
anomaly detection approaches attempt detect intrusions noting significant departures normal behavior :10.1.1.114.4122:10.1.1.39.5901:10.1.1.53.9010
misuse detection techniques attempt model attacks system specific patterns systematically scan system occurrences patterns :10.1.1.40.1452
process involves specific encoding previous behaviors actions deemed intrusive malicious 
important establish key differences anomaly detection misuse detection approaches 
significant advantage misuse detection approaches known attacks detected fairly reliably low false positive rate 
key drawback misuse detection approaches detect novel attacks systems leave different signatures 
false positive rate extremely low rate missed attacks false negatives extremely high depending ingenuity attackers 
result misuse detection approaches provide little defense novel attacks learn generalize known signatures attacks 
anomaly detection techniques hand directly address problem detecting novel attacks systems 
possible anomaly detection techniques scan specific patterns compare current activities models past behavior 
clear drawback anomaly detection inability identify specific type attack occurring 
probably significant disadvantage anomaly detection approaches high rates false alarm 
significant deviation baseline flagged intrusion non intrusive behavior falls outside normal range labeled intrusion resulting false positive 
drawback anomaly detection approaches attack occurs training period establishing baseline data intrusive behavior established part normal baseline 
spite potential drawbacks anomaly detection having ability detect novel attacks anomaly detection requisite unknown novel attacks computer systems detected 
consider techniques intrusion detection anomaly detection 
primary goal able detect novel attacks systems attacks seen intrusion detection system 
secondary goal reduce false positive rate rate system classifies normal behavior intrusions 
approach learn normal behavior programs different techniques flag significant departures normal behavior possible intrusions 
approach designed achieve primary goal detecting novel attacks 
achieve secondary goal reducing false positive rate approach generalize past observed behavior inputs system encounter training 
developed algorithms range ability able simply memorize past events able classify inputs previously unseen similarity measure able recognize recurrent patterns 
developing algorithms related intrusion detection 
analyzing program behavior anomaly detection analyzing program behavior profiles intrusion detection emerged viable alternative user approaches intrusion detection see program approaches :10.1.1.39.5901:10.1.1.53.9010:10.1.1.40.1452
program behavior profiles built capturing system calls program analysis normal operational conditions 
captured behavior represents compact adequate signature normal behavior profile detect deviations normal behavior occur program misused intrusion 
groups develop program intrusion detection stephanie forrest research group university new mexico 
established analogy human immune system intrusion detection :10.1.1.53.9010
approach consisted short sequences system calls called string gram target program operating system form signature normal behavior 
database system calls built monitored program capturing system calls program normal usage conditions 
linux program capture system calls 
constructed database essentially serves repository self behavior subsequent online behavior judged 
string formed online operation program match string normal database mismatch recorded 
number mismatches detected significant percentage strings captured online session intrusion registered 
application technique shown viable unix programs sendmail lpr ftpd 
recognized research group columbia university research project unm program anomalies temporally located clusters :10.1.1.40.1452
averaging number anomalies entire execution trace performed unm earlier potentially wash intrusive behavior normal variation program behavior 
notion fixed length frames anomalies counted groups subsequent 
columbia group applied rule learning program ripper data extract rules predicting sequence system calls normal abnormal 
rules ripper erroneous post processing algorithm scan predictions ripper determine intrusion occurred 
post processing algorithm uses notion temporal locality filter spurious prediction errors intrusions leave temporally located abnormal predictions 
results verified system calls detect intrusions different intrusion detection algorithms :10.1.1.40.1452
subsequent performed unm group reported applied fixed length frames equality matching approach developed earlier 
distinguished analysis structure system calls program 
empirical analysis recurrent patterns system calls execution traces program 
instance programs prefix main portion suffix 
portions system calls tended repeated regular fashion 
result hypothesized deterministic finite automaton dfa constructed represent behavior macro language 
program manually selected macros matched pattern believed represent normal behavior 
anomalies detected applying macros observed behavior noting mismatches 
technique involves creating dfas heuristically hand technique scale real systems 
furthermore exact dfa representation program behavior lead state explosion problem 
similar vein creating finite state automata group iowa state implementing program intrusion detection approach analyzes system calls state machine models program behavior 
approach concerned detecting anomalies detecting violations specified behavior 
result approach iowa state group requires development specification models acceptable program behavior models program behavior derived empirical training :10.1.1.53.9010:10.1.1.40.1452
auditing specification language asl develop representation expected allowed program behavior specification models programs violations model detect potential intrusions isolate program question privileged resources 
approach similar sandbox models programs constrain program behavior policies models acceptable program behavior 
build unm group creating normal program behavior profiles system calls performing anomaly detection profiles 
evolution techniques table lookup equality matching approach similar unm machine learning approaches generalize past observed behavior :10.1.1.53.9010
goal applying equality matching technique verify feasibility performance technique larger scale previously performed 
approach simply improve equality matching technique obvious improvements 
equality matching approach frames capture temporally located events similar 
approach technique automatically builds profiles programs performs anomaly detection 
heuristics hand coding macros necessary anomaly detection 
able scale program anomaly detection approach significantly previous studies monitor programs part darpa intrusion detection evaluation program results represent significant study applying equality matching technique system calls realistic system comprehensive intrusion detection study 
key drawbacks equality matching approach current form inability generalize past observed behavior 
normal program behavior adequately captured unseen normal behavior classified anomalous contributing false positive rate 
desiring ability reduce false positive rate providing ability detect novel attacks consistently investigated machine learning approaches learning program behavior 
neural networks best fit learning associations observed inputs desired outputs 
implemented standard backpropagation neural network feedforward network able generalize previously seen inputs map unseen inputs normal anomalous outputs 
tested backpropagation networks corpus data provided darpa evaluation program 
results show benefits pitfalls backpropagation networks purpose 
working neural networks re visited input domain networks order develop proper encoding function network 
noticed recurrent patterns system calls execution traces programs similar noted 
approach developed interested automatically learning behavior program able exploit recurrent features data 
furthermore desired see www ll mit edu ist ideval index html summary program 
learning algorithm able generalize recognize previously unseen behavior equality matching algorithm 
requirements led development elman networks 
elman networks sequential characteristics input data learn recognize sequentially related case temporally located features variable length 
applied elman networks darpa evaluation data anomaly detection 
study rest able provide side side comparison different algorithms anomaly detection represent evolutions pure memorization generalization recurrent characteristics system calls programs 
results significant data algorithms evaluated represents significant corpus scientifically controlled data false positive rate intrusion detection algorithm simultaneously measured correct detection rate 
able scientifically validate approaches set data 
rest describe algorithms results implementation 
equality matching simple anomaly detection approach approach implemented built forrest 
program linux capturing system calls sun microsystem basic security module bsm auditing facility solaris 
approach practical special software need written capture system calls 
bsm events serve adequate representation behavior program purposes privileged calls program captured bsm 
furthermore program abuse system resources making system calls 
study finds approximately different bsm events recorded programs typically different bsm events 
capturing bsm events serves compact representation program behavior leaving ample room detect deviant behavior odd bsm events odd sequences bsm events 
bsm events recorded program executions showed regular patterns behavior common sequence recurrent strings system calls 
anomaly detection algorithm perform better entity monitoring defined regular patterns behavior 
reasons addition simplicity algorithm early success unm group applied algorithm improvements large set data benchmark success 
equality matching algorithm simple effective 
sequences bsm events captured online usage compared stored database built normal program behavior profile 
sequence bsm events captured online usage database anomaly counter incremented 
technique predicated ability capture normal behavior program database 
normal behavior program adequately captured false alarm rate high 
hand normal behavior profile built program includes intrusive behavior instances intrusive behavior go undetected 
data partitioned fixed size windows order exploit property attacks tends leave signature temporally located events 
attacks tend cause anomalous behavior recorded clusters 
averaging number anomalous events recorded entire execution trace wash attack noise smaller size window events counting anomalous events 
counters kept varying levels granularity ranging counter fixed window system calls counter number windows anomalous 
thresholds applied level determine point anomalous behavior propagated level 
ultimately windows system calls program deemed anomalous program behavior particular session deemed anomalous intrusion detection flag raised 
equality matching algorithm evaluated mit lincoln laboratory darpa intrusion detection evaluation program 
unlabeled sessions sent lincoln labs processed intrusion detection algorithm 
sessions unspecified number attacks types denial service dos probe user root remote local 
user root attack defined attack privilege user local account privileges 
remote local attacks remote user account privileges local user account privileges 
approach mainly suited types attacks statistically insignificant amount dos probe attacks bsm data results attacks 
attack instances detections percent type detected total table performance table look intrusion detection algorithm user root remote local attacks 
table shows performance equality matching algorithm detecting attacks particular threshold sensitivity 
threshold set low false alarm rate low detection rate low 
similarly threshold set high may detecting intrusions suffer high false alarm rate 
false alarm rates shown attacks algorithm label particular attack notes attack attack occurring 
result false positives tracked particular attack types 
table useful quickly determining attacks particular type detected useful measure performance method obtained receiver operating characteristic roc curves 
measure effectiveness intrusion detection system provided roc curve 
roc curve parametric curve generated varying threshold intrusive measure tunable parameter computing probability detection probability false alarm operating point 
curve plot likelihood intrusion detected likelihood misclassified false positive particular parameter tunable threshold 
roc curve determine performance system different operating points false positive probability probability detection performance equality matching technique function false positive percentage horizontal axis correct detection percentage vertical axis 
graph shows worst possible roc curve roc curve generated actual data equality matching algorithm 
configurable thresholds comparing performance different intrusion detection algorithms operating points 
shows performance equality matching algorithm roc curve 
better understand performance measure consider intrusion detection oracle scores session value intrusion value zero 
resulting roc curve curve single point location detect intrusions likelihood misclassify non intrusions likelihood 
threshold varied zero exclusive change way sessions classified parametric value remain point 
called oracle point 
thresholds inclusive points remain fixed 
connecting points computing area curve gives area power 
spectrum consider curve defines worst possible intrusion detection system 
roc curve worst case scenario line shown 
assume system randomly assigns value zero session 
starting threshold zero derive point sessions classified intrusions 
session threshold increases likelihood correctly classifying intrusion incorrectly classifying non intrusion decrease rate session threshold corresponding point 
power system corresponding area curve 
intrusion detection system perform worse curve simply invert classification better 
plot represents benchmark intrusion detection systems better 
results equality matching algorithm represent optimal tuning window frame size gram size 
parameter values optimal experimental analysis 
curve shown benchmark worst case scenario 
equality matching method able detect intrusions false positive rate 
higher detection rates achieved expense false positives 
detection rate false positive rate rose 
similar curves generated compared intrusion detection approaches 
backpropagation network goal neural networks intrusion detection able generalize incomplete data able classify online data normal anomalous 
applying machine learning intrusion detection developed 
lane brodley uses machine learning distinguish normal anomalous behavior 
different build user profiles sequences individual normal user commands attempt detect intruders deviations established user profile 
similarly neural networks learn behavior users bsm events recorded user actions 
building profiles user basis builds profiles software behavior attempts distinguish normal software behavior malicious software behavior 
advantages approach vagaries individual behavior abstracted program behavior individual usage studied 
benefit defeating user slowly changes behavior foil user profiling system 
protect privacy interests users surveillance system monitors user move 
goal artificial neural networks anns intrusion detection able generalize incomplete data able classify online data normal intrusive 
artificial neural network composed simple processing units nodes connections 
connection units weight determine unit affect 
subset units network acts input nodes subset acts output nodes 
assigning value activation input node allowing activations propagate network neural network performs functional mapping set values assigned input nodes set values retrieved output nodes 
mapping stored weights network 
classical feed forward multi layer perceptron network implemented backpropagation neural network 
backpropagation network successfully intrusion detection studies :10.1.1.39.5901
backpropagation network backprop standard feed forward network 
input submitted network activations level neurons cascaded forward 
order train networks necessary expose normal data anomalous data 
randomly generated data train network distinguish normal anomalous data 
randomly generated data spread input space caused network generalize data anomalous default 
normal data tended localized input space caused network recognize particular area input space 
training networks trained program network performed best selected 
remaining networks discarded 
training involved exposing networks weeks labeled data performing backprop algorithm adjust weights 
epoch training consisted pass training data 
network training proceeded total error epoch stopped decreasing epochs reached 
optimal number hidden nodes program known training program networks trained hidden nodes 
training network weights initialized randomly 
initial weights large unpredictable effect performance trained network 
order avoid poor performance due bad initial weights program number hidden nodes networks initialized differently trained 
program networks trained 
select keep tested weeks data part weeks data training 
network classified data accurately kept 
training selection set neural networks ready 
neural network classify single string sequence bsm events anomalous normal intention classify entire sessions usually composed executions multiple programs anomalous normal 
furthermore previous experiments showed important capture temporal locality anomalous events order recognize intrusive behavior 
result desired algorithm provides memory false positive probability probability detection performance backpropagation network expressed roc curve 
horizontal axis represents percentage false positives vertical axis represents percentage correct detections different operating thresholds technique 
events 
leaky bucket algorithm fit purpose 
leaky bucket algorithm keeps memory events accumulating neural network output slowly leaking value 
network computes closely related anomalies leaky bucket algorithm quickly accumulate large value counter 
similarly network computes normal output bucket leak away anomaly counter back zero 
result leaky bucket emphasizes anomalies closely temporally located diminishes values sparsely located 
strings bsm events passed neural network order occurred program execution 
output neural network classification input string placed leaky bucket 
timestep level bucket decreased fixed amount 
level bucket rises threshold point execution program program flagged anomalous 
advantage leaky bucket algorithm allows occasional anomalous behavior expected normal system operation quite sensitive large numbers temporally located anomalies expect program really misused 
session contains single anomalous program session flagged anomalous 
performance ids judged terms ability detect intrusions false positives incorrect classification normal behavior intrusions 
roc curves compare intrusion detection ability backpropagation network false positives 
results backpropagation network shown 
test data consisted non intrusive sessions intrusive sessions 
different leak rates leaky bucket algorithm produce different roc curves 
leak rate results prior timesteps retained memory 
leak rate results timesteps current forgotten 
varied leak rate 
roc curve shown leak rate 
curve performance similar equality matching algorithm results shown 
detection rate achieved false positive rate 
purely feed forward network topologies possess major limiting characteristic 
characteristic output produced input independent prior inputs 
characteristic appropriate tasks require processing independent inputs optimal inputs sequential elements stream data 
section discuss alternative network recognize recurrent features input 
elman networks section motivate reasons recurrent networks describe elman recurrent network anomaly detection 
results applying elman network darpa data comparison previous techniques 
bsm events produced single program single execution considered stream events 
event part ordered series 
portion program typically generate similar sequences bsm events different executions 
limited number ways transition branch portion program occur possible determine sequence events follow current sequence events 
feed forward topology backpropagation learning rules described preceding section train anns recognize small fixed sized sequences events characteristic programs occur 
sequence ann produces output value represents anomalous sequence training data 
addition leaky bucket algorithm classify program behavior ensures highly anomalous sequences larger impact classification program close far apart 
determined investigation raw bsm data large scale structure stream bsm data features captured individual sequences lengths experiments 
order accommodate large scale structure bsm features execution trace options apparent increase size individual sequences large scale structures stream represented individual strings system maintains degree state inputs 
option fail order capture large scale structures individual sequences necessarily large 
sequence sizes grow network difficulty accurate classification 
second alternative maintain state information sequences appealing 
allows system retain generality small sequences 
simply adds information concerning prior sequences 
possible way maintain state information deterministic finite automaton dfa 
approach applied manually unm group 
dfas drawbacks 
primary drawback lack flexibility 
bsm stream briefly enters state represented dfa dfa recover recognize state slight aberration sort expect encounter normal runs program 
dfa need completely specified represent possible allowable sequences bsm events heuristic approach similar unm approach need adopted 
dfa completely specified represents states normal execution program produces states outside machine machine represented target program possible states recognizing anomalous behavior may difficult 
lack flexibility dfas recognized determining constitutes state program represented dfa difficult task 
issues insurmountable anns address quite naturally 
originally employed anns ability learn generalize 
learning process develop ability classify inputs exposure set training inputs application defined learning rules explicit human supplied enumeration classification rules 
ability generalize anns produce reasonable classifications novel inputs assuming network trained 
inputs node ann realvalued number sequence bsm events produce encoding fall outside domain representable ann 
order maintain state information inputs required recurrent ann topology 
recurrent topology opposed purely feedforward topology cycles formed connections 
cycles act delay loops causing information retained indefinitely 
new examples nodes anns labeled input nodes hidden nodes output nodes context nodes 
arc unidirectional direction indicated arrow arc standard feed forward topology 
elman network 
input interacts cycles activations propagating network activations cycle affected 
input affect state state affect classification input 
known recurrent topology elman network developed jeffrey elman 
elman network illustrated 
elman topology feed forward topology input layer output layer hidden layers 
additionally elman network set context nodes 
context node receives input single hidden node sends output node layer corresponding hidden node 
context nodes depend activations hidden nodes previous input context nodes retain state information inputs 
elman network retains information concerning previous inputs method train purely feed forward anns perform anomaly detection see section suffice 
employ elman nets perform classification short sequences events occur larger stream events 
train elman networks predict sequence occur point time 
nth input network produce output output compared difference sum absolute values differences corresponding elements measure anomaly sequence events 
continue leaky bucket algorithm causes anomalies larger effect occur closer occur farther apart 
classification sequence events affected events prior earliest event occurring sequence 
implemented elman net applied anomaly detection set darpa evaluation data 
despite extensively tuned methods employed elman nets produced best results 
performance elman nets comparison equality matching table lookup technique backpropagation network shown 
elman roc curve left curve quickly reaches detection 
leak rate elman networks able detect intrusions false positives significant improvement algorithms 
elman nets able detect intrusions significantly fewer false positives systems 
elman nets backprop table lookup false positive probability probability detection performance anomaly detection algorithms expressed roc curves darpa evaluation data 
horizontal axis represents percentage false positives vertical axis represents percentage correct detections different operating thresholds technique elman network performs best 
different anomaly detection algorithms detecting potential intrusions program behavior profiles 
algorithms range pure memorization equality matching approach ability generalize ability recognize recurrent features input 
results show equality matching approach worked fairly performance significantly improved particularly reducing false positive rate elman networks 

artificial neural networks misuse detection 
proceedings national information systems security conference pages october 
arlington va cohen 
fast effective rule induction 
machine learning proceedings twelfth international conference 
morgan kaufmann 
haeseleer forrest helman 
immunological approach change detection algorithms analysis implications 
ieee symposium security privacy 

intrusion detection applying machine learning solaris audit data 
proceedings annual computer security applications conference acsac pages los alamitos ca december 
ieee computer society ieee computer society press 
scottsdale az 
forrest hofmeyr somayaji :10.1.1.53.9010
computer immunology 
communications acm october 
forrest hofmeyr somayaji longstaff 
sense self unix processes 
proceedings ieee symposium security privacy pages 
ieee may 
ghosh charron 
detecting anomalous unknown intrusions programs 
proceedings annual computer security applications conference acsac december 
goldberg wagner thomas brewer 
secure environment untrusted helper applications confining wiley hacker 
proceedings usenix security symposium 
usenix july 
ilgun 
ustat real time intrusion detection system unix 
master thesis computer science dept ucsb july 
ilgun kemmerer porras 
state transition analysis rule intrusion detection system 
ieee transactions software engineering march 
ko fink levitt 
automated detection vulnerabilities privileged programs execution monitoring 
th annual computer security application conference pages december 
orlando fl 
hofmeyr 
intrusion detection system call traces 
software september october 
ieee computer society 
lane brodley 
application machine learning anomaly detection 
proceedings th national information systems security conference pages october 
lee stolfo chan :10.1.1.40.1452
learning patterns unix process execution traces intrusion detection 
proceedings aaai workshop ai methods fraud risk management 
lunt 
ides intelligent system detecting intruders 
proceedings symposium computer security threat countermeasures november 
rome italy 
lunt 
survey intrusion detection techniques 
computers security 
lunt jagannathan 
prototype real time intrusion detection system 
proceedings ieee symposium security privacy april 
lunt javitz neumann garvey 
real time intrusion detection expert system ides 
technical report computer science laboratory sri february 
porras kemmerer 
penetration state transition analysis rule intrusion detection approach 
eighth annual computer security applications conference pages 
ieee computer society press november 
porras neumann 
emerald event monitoring enabling responses anomalous live disturbances 
proceedings th national information systems security conference pages october 
sekar cai segal 
approach building survivable systems 
proceedings national information systems security conference pages october 
vigna kemmerer 
netstat network intrusion detection approach 
proceedings annual computer security applications conference acsac pages los alamitos ca december 
ieee computer society ieee computer society press 
scottsdale az 
