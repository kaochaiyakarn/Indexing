formal model business process modeling design manolis koubarakis dimitris plexousakis dept electronic computer engineering technical university crete crete greece manolis ced gr dept computer science university crete heraklion crete greece dp csd uch gr 
formal framework representing enterprise knowledge 
concepts framework objectives goals roles actors actions processes responsibilities constraints allow business analysts capture enterprise knowledge way intuitive mathematically formal 
outline basic steps methodology allows business analysts produce detailed formal specifications business processes high level enterprise objectives 
formal language permits verify specifications possess certain correctness properties responsibilities assigned roles fulfilled constraints maintained 
problem representing analysing managing knowledge organisation processes important 
management computer science researchers debated information technology tackling complex problem 
ultimately community interested improving understanding organisations processes facilitating process design analysis supporting process management 
topic great practical importance industry aid designing organisational structures processes infrastructure achieve business goals efficient flexible way 
specific area interest deriving checking improving business process definitions input systems 
formalism represent knowledge organisations business processes 
motivated author partially supported bt labs short term research fellowship 
carried author lecturer dept computation umist second author partially supported univ south florida research creative scholarship 
develop enterprise model consists interconnected submodels organisational submodel objectives goals submodel process submodel concepts submodel constraints submodel describe formally different aspects organisation 
projects framework emphasises formality advocates situation calculus concurrent logic programming language congolog representing knowledge organisations processes 
respect continue suggested formal tools model organisations 
early steps development model 
creating enterprise model instructive revealing anomalies inconsistencies inefficiencies opportunities improvement 
exists valuable means sharing knowledge enterprise 
formulate evaluate changes 
knowledge sharing role extends enterprise infrastructure 
principle possible example extract process definitions input workflow management system 
furthermore possible business process support software query enterprise model find fulfilling role process 
formal enterprise models ones concepts defined rigorously precisely mathematics analyze extract knowledge reason 
advantage formal models self consistent certain properties 
instance prove formally responsibilities assigned roles fulfilled constraints maintained result process execution 
words representational framework order 
represent enterprise knowledge extension formalism situation calculus 
formalism designed especially knowledge representation reasoning dynamically evolving domains 
technically basic tool sorted order language defined way 
logical symbols include parentheses countably infinite set variables equality symbol standard sentential connectives 
remaining machinery sort predicate function symbols defined sections intuitive modeling concepts need formalised 
rest structured follows 
sections enterprise model 
sketch methodology enables business analysts go high level enterprise objectives detailed formal specifications business processes realizing objectives 
section discusses related presents 
organisational goal modeling section initiate presentation submodels making enterprise modeling framework 
demonstrate features proposal considering imaginary computer science department dept enterprise 
assume department far postgraduate program considering development processes admission education postgraduate students 
submodel organisational submodel main concepts actor role 
actor person software hardware system context organisation modeling employee customer printer 
actors distinguished human automated ones 
actors capable executing certain activities capable executing 
organisational role involves set responsibilities actions carried actor group actors organisation organisational roles take forms unique functional group systems department unique functional position managing director rank job title lecturer grade replicated functional group department replicated functional position director class persons customer abstraction progress chasing 
role instances acted actors 
different actors play different roles different moments time today managing director john smith tomorrow tony bates 
instances role active moment time 
concepts introduced defined formally introducing appropriate constructs unary predicates actor role binary predicate writing axioms capture semantics 
second component enterprise model objectives goals submodel 
central concept submodel enterprise goal 
enterprise goal desired state affairs 
examples enterprise goals customers enquiries answered day profits maximised 
framework goals associated components submodels roles actors organisational submodel 
goals assigned roles matter policy organisation 
organisational goals responsibilities roles actors playing roles 
processes process submodel 
purpose process achievement goals 
example process managing project purpose achieving goal project completed successfully 
entities concepts submodel 
goal refers certain enterprise entities 
example goal programmers hired systems department refers entities systems department programmer 
explicit capturing enterprise goals important allows study organisations processes intentional point view 
example enables represent information sub processes form process standard process representations information specific activity done 
goals combined intentional concepts actors roles enabled represent information responsible bringing state affairs 
enterprise goals organisational goals reduced alternative combinations subgoals goal graphs originally introduced area problem solving 
example goal sales targets achieved reduced goals sales targets product achieved sales targets product achieved 
utilise notion goal reduction define concept objective 
organisational objective goal goal reduction 
words objective top level goal desired means serving higher level 
goals conflict 
framework goals gn conflict satisfied simultaneously knowledge enterprise 
goals influence positively negatively goals :10.1.1.29.2587
interactions goals noted explicitly facilitate goal reasoning see section 
defining goals formally organizational goals described formally informally 
organisational objectives high level goals usually difficult formalise 
goals described informally reduced step step concrete formal goals 
appropriate formal concepts tools assisting goal reduction context requirements modeling discussed 
goal desired state affairs concrete formal goals formalised sentences demonstrated example 
example 
operational goal enquiries answered member staff soon received formalised sentence staff enquiry action situation situation received oe answered sentence predicates obvious meaning means situation state resulting execution action situation sentence read situation member staff receives enquiry gives rise action causes enquiry answered member staff 
note formal language forces precise dispense informal concepts soon 
process submodel complete process model allow representation going done going done done dependent done 
process model allows answer questions 
include spatial attribute processes consider dependencies explicitly 
main concepts process submodel action process role actor goal 
process submodel connected organisational submodel concepts actor role 
actions carried part process executed context organisational role actor playing role 
respect inspired role activity diagrams 
process submodel closely related objectives goals submodel processes organisational goals 
primitive complex actions process submodel built concepts situation calculus concurrent logic programming language congolog 
situation calculus order language representing dynamically evolving domains 
situation state affairs world modeling 
changes brought situations results actions performed actors 
actions distinguished primitive complex 
usually action considered primitive decomposition reveal information interest 
deal new concepts enrich language sort action actions sort situation situations 
actions denoted order terms act app 
action ff situation term ff denotes situation results execution action ff situation relations truth values may differ situation called fluents 
denoted predicate symbols having situation term argument 
primitive actions introduced formally expressions form action ff precondition oe effect oe ff action oe oe formulas example 
expression defines action forwarding application app actor act actor act action act act app precondition act app effect act app act app framework permits recursive definition complex actions simply actions adopting syntax semantics congolog primitive actions actions 
special action doing action denoted noop 
sequencing 
ff ff actions ff ff action consists ff followed ff waiting condition 
oe formula oe 
action waiting condition oe true 
non deterministic choice actions 
ff ff actions ff jff action consisting non deterministically choosing ff ff non deterministic choice action parameters 
ff ff actions pi ff denotes non deterministic choice parameter ff non deterministic iteration 
ff action ff denotes performing ff sequentially zero times 
conditionals iteration 
ff ff actions oe ff ff defines conditional oe ff defines iteration 
concurrency 
ff ff actions ff ff action executing ff ff concurrently 
concurrency different priorities 
ff ff actions ff ae ff denotes ff higher priority ff ff may execute ff done blocked 
non deterministic concurrent iteration 
ff action ff denotes performing ff concurrently zero times 
interrupts 
list variables oe formula ff action hx oe ffi interrupt 
control arrives interrupt condition oe true binding variables interrupt triggers ff executed binding variables 
interrupts useful writing reactive processes 
procedures 
procedures introduced construct proc fi endproc 
call procedure denoted fi 
examples complex actions figures see section 
categories actions distinguish actions causal knowledge producing 
causal actions change state affairs enterprise modeling action forwarding application form 
knowledge producing actions change state enterprise mental state enterprise actors perceptual communicative action 
known knowledge producing actions defined situation calculus formalism 
actions exogenous 
concept corresponds notion external event process frameworks 
exogenous actions necessary enterprise modeling framework allow scope modeling consider certain parts enterprise environment outside area modeling 
exogenous actions handled situation calculus formalism 
business processes business process informally defined network actions performed context organisational roles pursuit goal 
formally business process defined expression form process id purpose goals id process identifier goals list goals separated commas sequence statements defining roles local congolog procedures 
purpose statement process definition introduces purpose process organisational goals achieved process 
concept purpose captures process done 
processes distributed organisational roles congolog procedures capture details process 
roles procedures defined expressions form role id responsibility resps id role identifier resps list goals separated commas set congolog procedures 
responsibility statement declares role id responsible achieving goals list resps 
examples role definitions figures see section 
formal framework permits detection conflicts may arise due presence multiple roles association multiple procedures single role 
cases incomplete incorrect process specifications detected machinery section 
concepts constraints submodels concepts submodel contains information enterprise entities relationships attributes 
information submodel formally expressed sentences appropriate predicate function symbols dept enterprise predicate act app denote actor act application app 
enterprise data part submodel 
constraints submodel encode restrictions imposed enterprise 
constraints formally expressed sentences machinery situation calculus symbols defined rest submodels 
constraints static referring single situation dynamic referring situation 
example static constraint example section 
goal oriented methodology business process design section outlines methodology enterprise wishes develop new business process 
methodology starts objectives enterprise concerning new development produces detailed formal specification business process achieves objectives 
formal specification developed set submodels concepts discussed previous sections capture new process various viewpoints 
steps proposed methodology identify organisational objectives goals 
initiate goal reduction 
identify roles responsibilities 
match goals role responsibilities 
role specify primitive actions conditions noticed interaction roles 
develop congolog procedures local role discharging role responsibilities 
verify formally congolog procedures local role sufficient discharging responsibilities 
steps methodology strictly ordered practice need run concurrently 
backtracking previous step useful practice 
final product application methodology complete enterprise model study analyse proposed business process 
specification serve guide development information system implementing process 
section intend methodology application detail interested reader go 
discuss issues involved steps attention steps approach significantly improves related methodologies gem 
goal reduction responsibility assignment step proposed methodology elicitation initial statement enterprise objectives goals concerning new process 
involve brainstorming sessions enterprise stakeholders studying documents mission statement outlining strategy enterprise modelled possibly enterprises industry sector 
activity analyst methodology try uncover prescriptive goals descriptive ones 
preliminary statement natural language enterprise objectives goals process constructing corresponding goal graph asking questions 
process involves reducing goals identifying conflicts detecting positive negative interactions goals 
process goal reduction lead better understanding organisational goals reformulation informal definition 
step methodology identical goal reduction steps goal oriented requirements modeling frameworks related goal oriented enterprise modeling frameworks :10.1.1.56.8810:10.1.1.29.2587
important issue needs addressed stage distinction achievable unachievable ideal goals 
ideal goals need considered process reduction need substituted weaker goals achievable 
graph corresponding informal goals sufficiently developed stable process goal formalisation start 
example goals postgraduate program example goal enquiries answered member staff soon received 
goal formalized shown example 
parallel process goal reduction business analyst engage identification roles responsibilities step methodology 
role identification achieved interacting enterprise stakeholders considering goals lowest level developed goal hierarchy 
goals roles currently existing organization analyst decide roles new designated responsible achieving goal 
possible goal role responsibility needs refined 
sound simple role identification responsibility assignment difficult task business analysts benefit provision guidelines dealing 
guidelines discussed 
example assume roles introduced postgraduate tutor notation tutor postgraduate secretary notation secretary member academic staff notation staff 
purposes discussion necessary consider role students applying program 
students considered outside process interaction captured concept exogenous actions 
assume responsibility assignments 
postgraduate secretary responsible correspondence applicants forwarding applications postgraduate tutor responsible doing initial evaluation applications forwarding applications appropriate members academic staff 
evaluating promptly applications receive 
roles identified assigned goal hierarchy revisited 
goal statements precise account introduced roles formal definitions goals rewritten 
example goal rephrased enquiries answered postgraduate secretary soon received 
formalized follows actor enquiry action situation situation secretary received oe answered defining roles congolog step specifying role identify primitive actions available role conditions monitored interactions roles 
detailed specification dynamics role syntax section 
role business analyst specify congolog procedure called main gives details behaviour role 
course main invoke local procedures 
process modelled far congolog natural easy 
cases straightforward write piece congolog role tutor responsibility proc main happ self app app act act secretary sendmsg self act unacceptable app endfor act act lecturer self act app endfor endif endproc fig 

role postgraduate tutor code responsibility role combine pieces form complete specification dynamics role 
expect come precise guidelines language experience increases 
example consider role 
role perform causal action defined example knowledge producing action sendmsg sender recipient msg means actor sender sends message msg actor recipient 
precise specification sendmsg useful communicative actions situation calculus 
role needs watch condition actor app actor actor playing role app application 
complete specification roles tutor secretary faculty shown figures respectively 
congolog code easy understand comments order 
notice interest brevity omitted unary predicates actor application type variables 
omitted specifying explicitly assigned role specified got role tutor 
symbol self pseudo variable denoting actor playing role inside variable appears 
reader notice natural specify congolog reactive processes interrupts concurrency 
specification role secretary involved message queue spirit 
case members academic staff want supervise applicant omitted 
omit specification exogenous actions capture interaction role secretary applicants part outside environment 
specifications roles secretary tutor faculty specification complete business process straightforward syntax section 
role secretary responsibility proc main received self ae happ self app act act tutor forward self act app ae true empty self irst self lect lect app self app irst self tut unacceptable app self app endif endif endwhile endproc role faculty responsibility proc eval self app univ app app self self self act act secretary sendmsg self act self app endfor endif endproc proc main happ self app eval self app endproc fig 

roles post graduate secretary faculty formal verification step verify formally role responsibility fulfilled constraint maintained congolog procedures defined role 
perform verification utilize techniques reported systematic solution frame ramification problems 
specifically interested determining responsibilities roles fulfilled ii constraints preserved violated result process execution 
case proof possible process specification time strengthenings specifications actions relevant responsibilities constraints proposed process implementation meeting strengthened specifications provably guarantees responsibilities constraints satisfied state resulting action execution 
method derives ramifications constraints action preconditions effects uses strengthen action specifications 
example 
consider specification action shown 
predicate accepted app denotes application app accepted dept similarly lect app means academic lect supervise student application app 
action app precondition lect lect app effect accepted app assume wish enforce policy applicant accepted rejected 
constraint may expressed sentence belongs constraints submodel accepted oe rejected evident action specification exclude situation accepted app rejected app satisfied 
easily see constraint preserved situation resulting performing action rejected logical implication constraint ramification constraint action specification 
ramification generator proposes term rejected strengthen action specification conjoining term action precondition effect 
strengthened specification guaranteed violate constraint possible execution action 
albeit short simple example conveys idea derivation ramifications strengthening action specifications 
complex examples details 
ideas verify formally roles fulfill assigned responsibilities 
aforementioned provides results verifying properties primitive actions processes including sequencing actions constraints intentionally omitted presenting steps generation process due lack space 
refer distinct states 
derivation similar results processes synthesized remaining congolog constructs including concurrency non determinism general dynamic constraints topic current research 
previous accommodate actions single agent environment 
theoretical basis congolog extended include exogenous knowledge producing actions multi agent environment 
adaptation ideas analysis verification techniques ongoing effort 
argue ability verify properties processes essential business process design re engineering 
process specifier realizes implications actions far goal achievement concerned implementor saved burden having find ways meet postconditions maintain invariants 
furthermore optimized forms conditions verified incorporated process specifications consistency guaranteed soundness verification process 
discussion propose situation calculus congolog precisely earlier version golog business process modeling 
similar ideas appeared 
far congolog conjunction general framework offers intentional concepts actors roles goals 
situation calculus formalism choice tove enterprise modeling project 
tove concentrates enterprise ontologies process design verification 
concepts goals actors roles appear prominently framework need intentional concepts enterprise modeling emphasized 
clear connection goal oriented methodologies requirements engineering especially kaos 
connection explained detail previous sections elaborate 
related inspired enterprise modeling frameworks successor 
lee goal process analysis gpa related research 
gpa goal oriented method analyse existing processes order identify missing goals ensure implementation goals identify non functional parts process explore alternatives process 
common ideas gem models methodology 
detailed comparisons related efforts appears extended version available authors 
vast majority business process modeling efforts lack formal methods verifying properties processes 
exceptions rule efforts congolog advocated 
share similar long term research goals researchers demonstrate formal languages methods offer significant advantages design analysis business processes 

anton mccracken potts 
goal decomposition scenario analysis business process reengineering 
proceedings caise pages 

bubenko 
user guide 
available ftp ftp dsv su se users js user guide pdf 

curtis kellner 
process modelling 
communications acm 

dardenne van lamsweerde fickas 
goal directed requirements acquisition 
science computer programming 

de giacomo lesperance levesque 
reasoning concurrent execution prioritised interrupts exogenous actions situation calculus 
proceedings ijcai pages august 

dobson 
approach organisational requirements 
goguen editors requirements engineering social technical issues pages 
academic press 

fikes nilsson 
strips new approach application theorem proving problem solving 
artificial intelligence 

fox gruninger 
enterprise modelling 
ai magazine pages fall 

georgakopoulos hornick sheth 
overview management process modelling workflow automation infrastructure 
distributed parallel databases 

hammer 
reengineering manifesto business revolution 
harper collins 

jennings faratin johnson brien wiegand 
intelligent agents manage business processes 
proceedings international conference practical application intelligent agents multi agent technology paam 

loucopoulos 
goal driven business process analysis application electricity 
proceedings caise 

koubarakis plexousakis 
business process modeling design ai models methodology 
proceedings ijcai workshop intelligent workflow process management new frontier ai business 

lee 
goal process analysis method systematic process redesign 
proceedings conference organizational computing systems 

lesperance kelley mylopoulos yu 
modeling dynamic domains congolog 
proceedings caise 

lesperance levesque reiter 
situation calculus approach modeling programming agents 
available www cs toronto edu 

lesperance levesque lin marcu reiter scherl 
foundations logical approach agent programming 
wooldridge muller tambe editors intelligent agents volume ii proceedings atal lecture notes artificial intelligence 
springer verlag 

loucopoulos 
system requirements engineering 
mcgraw hill 

loucopoulos 
enterprise modelling teleological approach requirements engineering 
international journal intelligent cooperative information systems 

john mccarthy patrick hayes 
philosophical problems standpoint artificial intelligence 
meltzer editors machine intelligence pages 
university press 

mylopoulos chung nixon representing non functional requirements process oriented approach 
ieee transactions software engineering 


modelling business processes understanding improvement enactment 
tutorial notes th international conference entity relationship approach er manchester 


business processes modeling analysis re engineering improvement 
wiley 

plexousakis 
simulation analysis business processes golog 
proceedings conference organizational computing systems pages 

plexousakis 
efficient maintenance temporal integrity knowledge bases 
phd thesis dept computer science university toronto 

rao 
modeling service assurance process gem 
technical report technical note australian artificial intelligence institute 

reiter 
frame problem situation calculus simple solution completeness result goal regression 
artificial intelligence mathematical theory computation papers honor john mccarthy pages 
academic press 

scherl levesque 
frame problem knowledge producing actions 
proceedings aaai 

van lamsweerde darimont letier 
managing conflicts requirements engineering 
ieee transactions software engineering november 
special issue managing inconsistency software development 

van lamsweerde darimont massonet goal directed elaboration requirements meeting scheduler problems lessons learned 
proceedings re 

yu mylopoulos 
understanding software process modelling 
proceedings th international conference software engineering pages sorrento italy 

yu mylopoulos 
goals rules methods support reasoning business process reengineering 
proceedings th annual hawaii international conference systems sciences pages hawaii 

yu mylopoulos lesperance 
ai models business process reengineering 
ieee expert 
