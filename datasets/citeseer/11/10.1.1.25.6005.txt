facile description ne system muc william black fabio rinaldi david department language engineering umist po box street manchester qd united kingdom bill ccl umist ac uk describe system umist team members facile consortium undertake ne task muc 
main characteristics system employed follows ffl rule ffl rule formalism supports context sensitive partial parsing ffl rules may pattern matching style iteration operators ffl notation readable classic pattern matching languages ffl rules assigned explicit weight choosing competing analyses 
ffl method identifying name strings longer variants text ffl system employ learning techniques development system began months ago previous comparable trials 
looked forward slightly higher scores obtained formal run dry run stage obtained identical scores best results training data 
rest give background context system muc ne task developed 
outline internal structure concentrating rule notation salient feature 
evaluation performance task follows concluding speculation extent approach adopted susceptible improvement 
background umist participation muc ne task conducted constructed module larger system main purpose text categorization 
facile project black funded european community language engineering programme industry academic collaborative project 
main task filtering news fine grained knowledge categorization 
version facile system deployed months news filtering service offered italian news agency 
clear earlier experience project modules benefit component identify complex proper names occur frequently financial news texts 
externally sourced name finder english ideal solution facile system categorizes texts languages english german italian spanish 
required name finding done languages standard interface morphological analyser tagger languages 
rule texts basic preprocessor oe database lookup database oe named entity analyser ne rules oe categorizer deep analyser knowledge base oe oe oe muc ne output filtered texts oe filled templates system architecture component constructed reflected approach coates stevens software framework adopted facile 
component tested muc ne task 
addition categorization task facile system functionality includes information extraction understood muc context linguistically motivated system developed partners ciravegna ciravegna satta successfully applied analysis italian texts 
umist put effort completing revising ne analyser expense far english resources information extraction component 
meant possible participate muc extent originally envisaged component adaptation english available 
system architecture facile preprocessor accepts input system normalizes text recognizes special formatting tags looks single multi word tokens database carries proper name recognition classification 
output forms input facile modules shallow analyzer deep analyzer muc ne task 
basic preprocessor database lookup component subjected highly experimental trial te task results obtained reflect ne analyser ability unaided extract name category entities mentioned text 
preprocessor utilizes inxight tools third party component 
functional interface preprocessor able utilize tools tagging morphological analysis 
proven finite state technology tools employ ensures necessary speed reliability coverage portability 
modules developed project carry text zoning tokenisation database lookup named entity rule application 
facile treats tokens feature vectors 
follow modules derive information token exclusively corresponding feature vector 
feature vector stores information token begins ends character offsets separates predecessor white space hyphen text zone comes orthographic pattern capitalised capitalised mixed lower case token normalised forms syntax category features semantic class obtained database morphological analyser morphological analyses partitioned consistent tagger choice possible modules 
example lisp notation 

prop title civ title abbr nil example separator octal text comes main body token capitalised literally normalised syntactically prop title semantically database prefix female civilian person 
second line results morphological analysis 
preprocessor fills feature vector various sources 
fields shown obtained text text tokenisation modules 
normalised form field comes morphological analysis see algorithmic procedures handling numeric tokens 
syntax field comes morphosyntactic tagger morphological analysis morphological analyser 
typically offers alternative analyses full list results partitioned consistent tagger decision 
semantics field comes lookup database information words phrases belonging categories named entities categories occur prefixes suffixes names 
exist database entries multi word tokens single words replaced single token vector compound 
structure table differs data structure chart parsing initial edge token 
alternative analyses packed sem morph fields 
rule named entity recognition mentioned earlier approach named entity recognition described coates stevens interesting system coded prolog agreed languages implementation facile project 
thoughts pattern matching language flex perl starting tagger output word tag pairs 
attempts perl led unreadable patterns full lines extent number features take account 
need handle coreferences scores slowness perl pointed complex interpreter came specify notation 
pattern constituent need refer properties chose attribute value notation readability powerful want full syntactic semantic analysis 
rule notation versions rule language interpreter defined current version having proposed implemented evaluation performance dry run 
description refers current version 
rules general form bnc set attribute operator value expressions values atomic expressions disjunctions operator negated atomic expressions disjunctions level attribute value matrix avm 
individual attribute operator value expression left hand side may specified columns input token vector additional attribute matching token rule 
sequences level avms possibly empty constitute left right context 
avm optionally followed iteration specification 
avms may grouped parentheses allow iteration sequence constituents current implementation recursive grouping parentheses permitted 
left hand side rule may score range defaults 
comment character 
comparison operators include equal 
value chart edge disjunction list operator satisfied members list identical value expression values disjunction 
negation operator satisfied null intersection values edge expression 
substring comparisons permitted inclusion wildcards value expression 
variable symbol print name begins occurs right hand side expression unified occurrences variable rule 
transfer specific information left hand side enforce constraints 
example rule satisfied token normalised form modulo capitalization university literal location city name 
string matching description assigned syntactic tag pn semantic tag org 
syn np sem org norm university token sem region country city example shows right context may suggestive tag assign relatively low certainty factor take account 
target pattern single upper case token tagger guesses pn pn applying rule 
example right context expressed literally sem syn values 
pattern matched arbitrary additional attribute receives value token constituent unification instances variable 
syn np sem org syn np orth token source rule token said announced token token coreferent names purpose variable rule may immediately apparent 
variables introduced need treat coreferences instances name 
whilst extended form name may mention text typically text 
referent phrase foreign secretary robin cook normally mentioned subsequently cook example 
robin possible households old family firm 
variable allows repeatable part name identified matching subsequent mentions clear rule 
syn np sem title surname sem token orth sem firstn orth orth token rule illustrates coreference operator stipulates antecedent constituent matching avm operator satisfy variable bindings established rest rule 
case surname title identical antecedents 
syn np sem sem token orth token orth sem surname title coreference type addition explicit assignment syn sem fields title surname attributes ante field newly constituent assigned unique identifier matching antecedent 
variables way principle deal coreference relationships explicit syntactically name description apposition 
explored possibility limited extent experimental application system te task 
comparison pattern matching languages standard pattern matching languages perl flex snobol designed process surface patterns text 
tagged text pattern matched possible pair tags words cat nn sat vbd define patterns sequences 
pointed just literal token syntactic tag relevant ne recognition problem 
properties facets token structure statement rules raw perl hopelessly long error prone 
important effort producing higher level language perl mother perl mop see doran 
enables pattern writer focus single attributes time separate layers rules 
language contrast allows conditions refer attributes arising multiple levels analysis single ruleset 
view significant advantage rule language readability accessibility rule writer 
comparison far fewer symbolic operators variant attribute value matrix notation individual rules self documenting 
rule interpreter current implementation rule interpreter adapted left corner chart parser considered compiling finite state machinery proved inefficient 
basic rule invocation strategy bottom partial parsing way lead runaway recursion rules single constituent left right context 
arise rule pattern indicated rhs underspecified accept constituent sem cat 
sem cat 
sem cat 
reason rule interpreter depth limited 
right hand side rules including context phrase matched rule invocation complex left corner algorithm scanner moved time needed inactive edge added 
data structures working data structures interpreter include active chart comprising sets active inactive edges vertex index 
addition property value table stores values attributes standard table simplified chart extract token sem john firstn smith john smith table property value table property value surname smith title chart columns 
table simple hash table illustrated follows table shows simplified chart initial edges added inactive edge produced application rule 
values title surname fields stored property value table table 
indexed edge number property avoiding need search antecedents 
main algorithm active chart mechanism extended deal optional constituents 
optional constituent match current token gives rise new edges active iterations cursor advances constituent concludes rule 
process efficient active edges contain copies right hand side rule merely pointers rules state vector referencing current constituent group constituent group bindings variables rule 
advanced rule invocation strategy working set ne recognition rules may easily number 
rule rule set tested edge document document take far longer process form selection algorithm takes place 
role advanced rule invocation strategy computing edge document rules definitely fire rules chance firing 
algorithm works assigning properties rules document edges rules document read 
consider rule completed cardinal numbers edges subsume 
similarly rule completed interesting properties semantic field edges 
syn nn sem norm syn cd norm token norm washington officials syn np sem loc place sem loc city airport token norm official rule read assigned requirement value indicates edges rule require cardinal number capitalised capitals token interesting semantic property org loc civ null sgml edges document read assigned property value properties edge 
edge contains capitalised word tagged organisation sem org property value indicate 
requirement property values stored binary arrays 
main loop initiated properties current edge edges added 
rule fired property value checked requirements rule sure rule chance completing 
tests done preselection rules fire reduces total run time approximately half loss accuracy 
preference mechanism noted rules default certainty assigned certainty range 
rules give competing descriptions span text sem value highest score preferred 
rules come sem value evidence combination comes play 
combine scores shortliffe buchanan certainty theory formula 
bf represents initial certainty proposition accumulated evidence far 
cx certainty value proposition attributable basis new rule previously considered 
cf represents cumulative certainty assimilating cx bf 
shows formula applies combining positive 
reasons space omit cases 
cf cx bf gamma cx evaluation text span preference applied prefers longer spans shorter cases overlap 
resulting analysis single semantic property description identified name expression text 
integrated system categorization template filling components interspersed expressions text tags morphological analyses 
purposes muc evaluation reports generated appropriate format 
walkthrough ne task walkthrough document representative performance formal run 
missing entities 
murdoch missing times capture main text 
missing occurences article 
didn surname database way identified person name coreference instances body text 
unfortunately current implementation finds backward 
adequate main text normally new name explained descriptive phrase time mentioned 
possible mentions name title preamble explanation 
way intended cope problem example muc systems process preamble main text 
version ne analyzer final run approach properly implemented 
occurrences 
explained fact don db suffix sa designator 
heuristic rules pick partial descriptions apposition name crucial clue words phrases broadcaster publisher media conglomerate database 
certainly sufficient clues nature sentence 
sa mexican broadcaster publisher giant brazilian media conglomerate spokesman person spokesman organization person name easily captured 
sentence possible identify pattern 
require separate rules 
rule captures organization simply forgot insert corresponding rule capture person 
syn prop sem org zone token zone token spoke token orth norm orth zone location identified launch site domain specific clue words launch site inserted db 
missing entries hughes electronics months explained missing clue word electronics second fact consider identifier rules time expressions 
get occurrences new york times news service occurrences times news service 
easily explained error rule identifies see example 
possible values orth flag capital letter capital letters 
specific case assumes value contains letters dots 
simply altering value feature solve problem 
error causes spurious occurrence single location 
syn prop sem org zone orth sem loc zone sem org norm news norm service zone occurrences march long march referring chinese rocket appear incorrectly tagged date 
initially tagged date inserted system rules capture artifacts initial semantic value 
specific case probably undetected error 

est identify correctly 
suffix est inserted db 
instance cnn correctly 
tag organization tagged keys annotator error 
hughes twice tagged location organization 
haven tracked 
time warner managed identify time difficult say done having expression db identified probably don db name 
organizations tagged persons home box office turner broadcasting system appear sentence time warner home box office turner broadcasting system companies leased space picked low score rule meant capture conjunctions people names 
occurrences tele communications tagged persons caused rule considers said tele communications sentence evidence classifying person right said fred 
ms said tele communications partners te task discuss detail results te task walkthrough article noted footnote scores indicate little contribution ne analysis finding strings categories 
respect locations value recall slot country particularly low relied quite small table lieu full scale geographical db towns regions order find country belong 
furthermore entities type country locale value country slot 
significantly increased recall slot couple percentage points 
entities recall descriptors extremely low didn information extraction module available extensive linguistic coverage 
entity names categories affected problem managed capture cent respectively assignments properties variables 
attempted adapt approach taken ne task instance having refined set semantic tags civ mil simply rules 
perform porting entirely lack time case responses generic ne task 
instance china great wall industry classified simply organization org analysis best efforts ne task training data achieved recall precision just prior formal run data rules 
dry run previous best performance training data disappointed fall percentage points precision points recall 
general category worst organizations partly explained domain dependent rules inadequate database designators clue words 
judging results walkthrough text errors omissions easily traceable lack entries database lack rules conditions rules 
software development probably dedicated person month resource development testing able considerable improvements coming months 
feel approach 
look forward able facile component carry proper tests muc data near 
acknowledgments facile fast accurate categorisation information language engineering collaborative project european union contract le 
participating sites spa italy sema group 
spain irst italy smart information services gmbh germany umist uh austria italy de spain 
various individuals mentioned sites participated development facile system luca paola silvia fabio ciravegna alberto nadia jose luis maria jesus kai schirmer johannes harald 
black rinaldi 
integrated text categorisation information extraction pattern matching linguistic processing 
proceedings th riao conference mcgill university montreal canada th th june ciravegna understanding messages diagnostic domain information processing management vol 
pp 
fabio ciravegna alberto giorgio satta efficient full parsing information extraction dell dei di dell italian ai ia di aa nl torino december coates stevens 
analysis acquisition proper names robust text understanding 
phd thesis city university london 
doran niv baldwin reynar 
mother perl multi tier pattern description language 
proceedings international workshop lexically driven information extraction frascati italy july 
rocca di news categorisation system traders analysts third international conference artificial intelligence applications wall street new york june 
