contract types satisficing task allocation theoretical results tuomas sandholm sandholm cs wustl edu department computer science washington university brookings drive st louis mo analyze task reallocation individually rational ir agents re contract tasks marginal costs 
task allocation graph introduced tool analyzing contract types 
traditional single task contracts short path sequence contracts optimal task allocation ir path may exist may short 
analyze algorithm finding shortest ir path 
introduce cluster contracts swaps multiagent contracts 
contract types avoids local optima 
protocol equipped types local optima exist 
attack problem introduce combine ideas earlier types atomic contract type 
protocol equipped ocsm contracts sequence ir contracts leads optimal task allocation finite number steps oracle speculation needed choosing path subset suffices oracle 
means multiagent search need backtrack 
powerful result small problem instances 
large ones anytime feature type algorithm provably monotonic improvement agent solution important 
multiagent systems increasingly important due strong technology push application pull 
capability re allocating tasks agents key feature systems 
domains significant savings achieved tasks agents 
tasks inherently handled supported nsf career award iri nsf iri 
page poster published sandholm 
experimental analysis contract types andersson sandholm 
agent 
hand tasks negative interactions case better allocate different agents 
furthermore different agents may different resources leads different capabilities costs handling tasks 
studies task allocation self interested agents model captures considerations 
definition task allocation problem defined set tasks set agents cost function 
states cost agent incurs handling particular subset tasks initial allocation tasks agents ht init init jaj init init init variant contract net approach distributed method mutual selection contractors smith satisficing task re allocation 
section presents marginal costs basis making individually rational ir contracts 
classic contracts task time studied 
new contract types cluster contracts swaps multiagent contracts introduced analyzed 
combinations contracts types discussed 
marginal cost contracting original contract net smith lacked formal model making bidding awarding decisions 
definition generalizes called task oriented domains rosenschein zlotkin 
specifically allow asymmetric cost functions agents due different resources 
allow possibility agent may unable handle sets tasks 
represented cost infinity 
analyze static version problem contracting scheme works tasks resources resources affect cost functions added removed dynamically 
model allow develop methods provably lead desirable task allocations agents 
follow approach sandholm contracting decisions marginal cost calculations 
doing invoke concept individual rationality contract basis 
contract individually rational ir agent agent better contract 
implies individual rationality sequences contracts 
specifically contractee accepts contract gets paid marginal cost mc add contract jt contract gamma handling tasks contract contract 
marginal cost dynamic sense depends tasks contractee 
similarly contractor willing allocate tasks contract current task set contractee pay contractee saves handling tasks contract mc remove contract jt gamma gamma contract protocol agents suggest contracts accepting rejecting decisions marginal cost calculations 
agent take contractor contractee roles 
tasks received earlier contract 
scheme assume agents know tasks cost functions 
domain independent contracting scheme task allocation improve step 
corresponds hill climbing space task allocations height metric hill social welfare gamma 
fact contractor pays contractee amount marginal costs half way causes benefit improved task allocation divided agent worse contract 
differs payoff maximizing agents game theory mas colell whinston green fudenberg tirole 
agent may reject ir contract believes better waiting beneficial contract accepted contract accepted due limited resources 
similarly agent may accept non ir contract anticipation contract combination beneficial 
approach practical contract evaluating just single contract contract party evaluating new task set doing exponential lookahead 
deviation game theory comes cost able guarantee self interested agent best strategy accepting ir contracts propose 
scheme anytime algorithm contracting terminated time worth payments received minus cost handling tasks agent solution increases monotonically 
follows social welfare increases monotonically 
details asynchronous distributed contract net implementation marginal costs sandholm 
classic contracts task time contracts contract net implementations contract regards task smith sen gu ishida 
formalize contract type definition contract defined pair ht ae jt 
task set including task agent gives agent ae contract price pays handling task set 
tasks tasks tasks task allocation graph 
vertices represent task allocations edges represent contracts 
problem instance optimal task allocation reached contracts proposition path path contracts exists task allocation optimal 
length shortest path jt proof 
path constructed moving task time agent initially agent globally optimal task allocation 
means agents carry full lookahead impossible smallest problem instances contracts suffice reach optimal task allocation agents willing temporarily move worse task allocations order reach optimal 
agents individual rationality criterion contracting accept temporary decrease social welfare 
turns leads local optima oracle choosing sequence ir contracts proposition ir path instances task allocation problem path ir contracts exists initial allocation optimal 
length shortest ir path exists may greater jt shortest ir path longer jaj jt gamma jaj gamma jt number task allocations jaj jt means task allocations visited shortest ir path optimum 
computing shortest ir path mainly task allocation graph analyze contract types 
problem instance large graph constructed choose sequence contracts 
avoid unnecessary negotiations desirable minimize number contracts reaching optimal task allocation 
approach determine optimal task allocation linear pass vertices 
breadth search run graph starting initial task allocation 
difference inserting children open list algorithm omits children lower social welfare parent contracts ir 
search reaches optimal task allocation time shortest ir path 
search terminates reaching optimal vertex ir path exists 
known breadth search runs time number vertices number edges graph cormen leiserson rivest 
vertex task allocation jaj jt number edges vertex jt jaj gamma 
contract task transferred agent current holder 
jt jaj gamma 
total running time jaj jt jaj jt jt jaj gamma ae jt jt ae 
sparseness contracts get intuition search space contracting occurs show task allocation graph arbitrarily sparse problem size increases proposition jaj jt 
edges fully connected graph jt jaj 
proofs omitted brevity 
assumes graph uses adjacency list representation 
building representation distance matrix requires theta time 
proof 
edges fully connected graph jaj jtj jt jaj gamma gammav jt jaj gamma jaj jt gamma approaches jaj jt 
approaches jt jaj 
cluster contracts contracts task contract insufficient agents may get stuck local optimum cost feasibility carrying task depends carrying tasks agents asymmetric cost functions 
formalize contract type addresses problem definition cluster contract contract defined pair ht ae jt 
task set agent gives agent ae contract price pays handling task set 
agent tasks agent tasks example cluster contract 
contracts induce set edges task allocation graph disjoint set edges induced contracts 
leads contracts avoiding local optima contracts contract avoid local optima contracts 
issue formalized 
need larger transfers known centralized iterative refinement optimization lin kernighan waters historically ignored automated negotiation 
traconet system extended contract net handle task interactions having announcer cluster tasks sets negotiated atomically sandholm 
alternatively bidder done clustering 
protocol generalizes allowing party clustering stage protocol sandholm lesser 
non automated allocation settings need clusters realized 
example federal communications commission fcc auctions bandwidth restricted geographical areas bidders valuations auctioned items depend items awarded mcafee mcmillan 
example bidders want receive cluster awards allows establish nationwide coverage 
fcc auctions explicit clustering agents construct clusters individually auctioned items 
simultaneous ascending auction agent sees agents bids 
agents see clusters get bid accordingly 
auction carried stages stage quantitative activity rule 
disables bidder staying bidding moment knows bids 
possible agents want bid front 
auction terminated agent wanted raise bids 
auction designers supported profitable clustering allowing agents withdraw bid agent get cluster 
agent item opened 
new highest bid lower old withdrawing agent pay difference 
alternatively decommitting penalties fixed item auctioned 
decommitting strategies protocols game theoretically analyzed sandholm lesser 
general cluster encompass number tasks 
task allocation called optimal beneficial cluster contract tasks agents 
optimality imply optimality surprisingly optimality imply optimality 
global optimality implies optimality reverse true 
turns contracts may lead optimal task allocation oracle choosing path contracts cluster size proposition path instances task allocation problem path ir contracts leads initial task allocation optimal 
proof 
say agents task 
task contract possible 
allocation optimal agent higher cost handling task task costs handling tasks zero 
problem oracle contracting may get stuck local optimum ir path initial allocation optimal exists path may chosen 
traconet clusters tasks announcement 
heuristic methods choosing tasks cluster sequencing different cluster sizes studied 
swap contracts contracts task set size transferring set agent contract contract enhances task allocation 
may beneficial swap tasks agent task second second task sandholm lesser 
formalize concept definition swap contract contract defined tuple ht ae ae jt jt 
task set including task agent gives agent task set including task agent gives agent ae amount pays ae amount pays agent tasks agent tasks example swap contract 
contracts induce set edges task allocation graph disjoint sets edges induced contracts 
leads contracts avoiding local optima resolve contracts turn avoid local optima contracts 
issue formalized 
protocols needed cooperative agents needed self interested agents differ 
cooperative agents assumed take care tasks compensation beneficial society agents 
self interested agents need compensation take care agent task 
compensation organized barter trade agent takes care agent tasks agent takes care agent tasks 
barter trades benefit agents ir deals exist profitable move task agent 
secondly identifying beneficial barter exchanges complex identifying way transfers tasks especially distributed setting 
finer resolution cooperation self motivated agents achieved monetary compensation mechanism agent pays agent take care tasks 
need swaps shows payment exchanges replace barter exchanges 
needed monetary exchange method allows infinitely divisible side payments linking mechanism allows swapping tasks atomically agents contracts 
contracts necessary sufficient reaching global optimum proposition path instances task allocation problem path ir contracts leads initial task allocation optimal 
proof 
agent different number tasks initial task allocation agent optimal allocation optimal allocation reached 
preserve number tasks agent 
ir path exists contracting agents may path ir contracts get stuck local optimum 
furthermore preserve number tasks agent reach small subset task allocations proposition jaj jt 
jt jaj fraction task allocations reachable ir contracts initial vertex approaches zero 
implies chance reaching optimal task allocation oracle picking path hill climbing contracting algorithm vanishes 
multiagent contracts contracts negotiations reached local respect mutual contracts size solution enhancements may possible tasks transferred agents 
fox studied role grouping buy sell bids cascades may involve multiple agents fox 
setting simpler value contract agent depend ones agent bids get accepted 
setting agent valuation contract depends significantly ones agent bids get accepted marginal cost depends tasks agent 
algorithms differ allow contract 
heuristic algorithms choosing order execute possible contracts 
order important contract preclude involve allocation resource 
contract undone allow beneficial 
heuristics focus handling constrained requests 
guarantee optimal solution reached 
algorithms distributed involve centralized matching bids 
definition multiagent contract contract defined pair ht aei jaj theta jaj matrices elements non empty just agent contract jt 
element set tasks agent gives agent element ae amount pays agent tasks agent tasks agent tasks example multiagent contract 
decentralized multiagent contracts implemented example circulating contract message parties agreeing contract valid agent signs 
contracts induce set edges task allocation graph disjoint sets edges induced contracts 
leads contracts avoiding local optima contracts resolve contracts turn avoid local optima contracts 
issue formalized 
contracts necessary sufficient proposition path instances task allocation problem path ir contracts leads initial task allocation optimal 
proof 
say agents task 
agents contract possible 
allocation optimal agent higher cost handling task task costs handling tasks zero 
problem contracting may get stuck local ir path initial allocation optimal exists agents may choose path ir contracts 
merging types ocsm contracts contract types sufficient reaching global optimum ir contracts oracle choosing path contracts ir path need exist optimal task allocation 
contract types avoids local optima proposition contract types exist task allocations ir contract contract types possible ir contract fourth type proof 
example shows 
task agents 
current task allocation ft 
task handling costs ft ft 
contract moving decrease global cost 
time contract possible 
example shows contracts 
tasks agents fig 

current task allocation ft 
task handling costs ft ft ft ft ft ft 
current global cost 
moving increase global cost 
moving 
contract ir 
contract possible 
contract moving decrease global cost 
example shows contracts 
tasks agents fig 

current task allocation ft ft task handling costs ft ft ft ft ft ft 
current global cost 
agent task contract possible 
agents contract possible 
moving increase global cost 
moving 
contract ir 
contract moving simultaneously decrease global cost 
example shows contracts 
tasks agents fig 

current task allocation ft ft ft say task handling costs ft ft ft ft ft ft ft ft ft ft ft ft ft ft ft ft ft ft ft ft ft 
current global cost 
contracts impossible agent task 
possible contracts increase global cost 
possible swaps increase global cost 
contract ir 
contract moving decrease global cost 
unfortunately contracting protocol equipped contract types optimal task allocation may reached ir contracts oracle proposition ir path instances task allocation problem ir path initial task allocation optimal exists contracts contracts contracts 
proof 
think deal agent gives task agent agent gives tasks agent 
welfare increasing deal picking cost functions appropriately 
deal possible contract 
clearly subset contract types suffices corollary ir path instances task allocation problem ir path initial task allocation optimal exists pair triple contract types contracts contracts contracts 
proof 
proposition shows ir path may exist contract types 
removing contract types remove edges task allocation graph 
removing contract types introduce new paths 
problem oracle contracting may get stuck local optimum ir path exists agents may choose ir path 
address shortcomings define new contract type ocsm contract combines characteristics contracts contract type ideas earlier contract types applied simultaneously atomically 
definition ocsm contract defined pair ht aei jaj theta jaj matrices 
element set tasks agent gives agent element ae amount pays ocsm contracts induce fully connected task allocation graph 
hand fig 
contracts induce disjoint sets edges strict subsets edges fully connected graph 
union edge sets induced contracts strict subset edges fully connected graph 
proceed show path ir path exist task allocation optimal task allocation reached contract types allows non ir path 
contracts suffice prop 

optimal contracting protocol incorporates ocsm contracts 
show stronger 
proposition states sufficient reaching global task allocation optimum finite number contracts 
result holds sequence ir ocsm contracts hill climbing algorithm uses oracle needed choosing path 
means perspectives social welfare maximization individual rationality agents accept ir contracts offered 
need wait profitable ones need worry current contract may profitable contract unprofitable 
need accept contracts ir anticipation contracts combination beneficial 
furthermore hill climbing algorithms need backtrack 
proposition jaj jt finite 
contracting protocol allows ocsm contracts hillclimbing algorithm path ir contracts finds globally optimal task allocation finite number steps backtracking 
proof 
ocsm contract move current task allocation single step 
optimal task allocation reached task allocation local optima 
clearly move optimal task allocation ir optimal task allocation higher welfare 
hill climbing algorithm need backtrack order reach optimum 
agents ir contracts contract strictly improves social welfare 
task allocation visited 
finite number tasks agents number task allocations jaj jt finite 
follows global optimum reached finite number steps 
ocsm contracts necessary weaker set contract types suffices oracle choose order apply proposition ocsm contract protocol allow instances task allocation problem ir path exists initial allocation optimal 
proof 
ocsm contract missing task allocation graph contains vertices share edge 
initial optimal allocations 
social chosen vertices adjacent initial welfare lower initial 
ir path lead away initial task allocation 
proposition gives powerful tool problem instances number possible task allocations relatively small 
hand large problem instances number contracts optimal task allocation reached may impractically large albeit finite 
example large scale realworld distributed vehicle routing problem instance traconet sandholm reached local optimum just contracts multiple hours negotiation time unix machines 
problem ocsm contract represented jaj jt space identification welfare increasing contracts may complex especially distributed setting gammav jaj jtj jtj possible ocsm contracts evaluation just contract requires contract party compute cost handling current tasks tasks allocated contract 
large problem instances expect reach global optimum 
contracting occur long time solution ready anytime character contracting scheme important 
marginal cost re contracting method guarantees algorithm feasible solution terminated time assuming initial solution feasible 
furthermore guarantees worth agent solution payoffs received minus cost handling tasks increases monotonically 
follows agent worse negotiation initial solution handled tasks 
follows social welfare increases monotonically negotiation 
task allocation graph useful tool analyzing contracts ir agents 
showed traditional contracts short path optimal task allocation ir path may exist may short 
analyzed algorithm finding shortest ir path showed graph arbitrarily sparse problem size increases 
introduced cluster contracts swaps multiagent contracts 
contracts guarantee non ir path optimum exists 
contract types avoids local optima 
contracting protocol equipped types local optima exist 
attack problem introduced ocsm contracts combine ideas earlier types atomic contract type 
protocol equipped sequence ir contracts leads globally optimal task allocation finite number steps oracle speculation needed choosing path subset ocsm contracts suffices oracle 
powerful result small problem instances 
large ones number contracts optimum reached may impractically large 
identifying profitable ocsm contracts may complex 
settings anytime feature multi contract type algorithm provably monotonic improvement agent solution important finding satisficing solutions reasonable time 
practical way sequencing contract types apply simpler contracts complex ones local optimum reached negotiation time available 
research includes studying restricted domains cost functions special structure 
settings necessity results contract types apply weaker set contract types suffice 
equivalent complex contract ocsm contract accomplished sequence contracts agents willing take risks 
contract ir agents sequentially contracts sum complex beneficial contract 
early sequence global solution degrade contracts enhance 
making early commitments agents risk permanent loss case agent agree contracts needed sequence contracts profitable 
risk reduced desired leveled commitment contracting protocol agents back contracts paying penalties sandholm lesser 
contracts sequence happen agent decommit earlier ones 
closely analyze best combine ocsm contracts leveled commitment contracts 
andersson sandholm 
contract types optimal task allocation ii experimental results 
technical report wucs washington university department computer science 
appear 
andersson sandholm 
contract types satisficing task allocation ii experimental results 
aaai spring symposium series satisficing models 
cormen leiserson rivest 
algorithms 
mit press 
fudenberg tirole 
game theory 
mit press 
gu ishida 
quantitative analysis contract net protocol 
proceedings international conference multi agent systems icmas 
poster collection 
lin kernighan 
effective heuristic procedure traveling salesman problem 
operations research 
mas colell whinston green 
microeconomic theory 
oxford university press 
mcafee mcmillan 
analyzing auction 
journal economic perspectives 
rosenschein zlotkin 
rules encounter 
mit press 
sandholm lesser 
issues automated negotiation electronic commerce extending contract net framework 
proceedings international conference multi agent systems icmas 
reprinted readings agents huhns singh eds pp 

sandholm lesser 
advantages leveled commitment contracting protocol 
proceedings national conference artificial intelligence 
sandholm 
implementation contract net protocol marginal cost calculations 
proceedings national conference artificial intelligence 
sandholm 
necessary sufficient contract types optimal task allocation 
proceedings fifteenth international joint conference artificial intelligence 
poster session abstracts 
fox 
constraint directed negotiation resource 
huhns gasser eds distributed artificial intelligence volume research notes artificial intelligence 
pitman 
chapter 
sen 
tradeoffs contract distributed scheduling 
ph dissertation univ michigan 
smith 
contract net protocol highlevel communication control distributed problem solver 
ieee transactions computers 
waters 
solution procedure problem iterative route improvement 
journal operational research society 
