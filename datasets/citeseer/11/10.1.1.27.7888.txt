intelligent camera control virtual environment steven drucker david zeltzer mit media lab mit rle cambridge ma 
usa media mit edu dz mit edu problematic forces human participant describes framework exploring intelligent camera controls virtual environment 
presents methodology designing underlying camera controls analysis tasks required specific environment 
underlying camera framework built variety interfaces connected framework 
virtual museum prototypical virtual environment 
identifies tasks need performed virtual museum presents paradigm encapsulating tasks camera modules describes detail underlying mechanisms camera module navigating environment 
keywords virtual environments camera control path planning task level interfaces 

current interest called immersive interfaces large scale virtual worlds serves highlight difficulties orientation navigation synthetic environments including data spaces hypermedia familiar modeled exterior interior spaces 
ware osborne point equivalent manipulating viewpoint synthetic camera environment number articles discussed camera control problem detail 
nearly focused techniques directly manipulating camera 
view source difficulty 
direct control degrees freedom dofs camera field view included supported part arpa rome laboratories japan broadcasting office naval research equipment gifts apple computer hewlett packard silicon graphics 
tend interface control knobs addition goals constraints task hand 
intention human participant observe object allowing simply tell system show object direct productive interface 
instance task level interaction 
earlier characterized levels abstraction interact virtual objects processes described varying access panels obtains 
describe system specifying behaviors virtual cameras terms task level goals constraints 
earlier camera control task level control available enabling various direct manipulation metaphors :10.1.1.28.1511
share view user interface community steps interface design task analysis application 
may difficult exercise allows identify reasonable confidence objects operations provide interface specify necessary software abstractions 
impossible completely describe human behavior visual interface applications analysis suggests generic visual operations need support involve orientation visual comparison egocentric exocentric coordinate frames navigation point point exploration unknown areas presentation external observers 
describe applications chosen implement ideas feel visually rich domain art museum 
museum contains threedimensional objects spatially arranged different rooms 
chose museum application kind spatial information space formulate task level description fairly easily 
chosen task domain interviewed architects museum designers interactive exhibit designers find basic tasks want assistance 
formed basis task analysis underlies framework virtual museum system 
section discuss related 
sections describe basic design virtual museum including camera modules encapsulate various behaviors synthetic camera 
section algorithms developed enable intelligent camera actively assist guide human participant explores virtual museum 

related current research draws mainly areas computer graphic camera specification environments robotics research 
miller created virtual museum multimedia database 
video segments create feeling choosing path museum selecting objects museum 
video clips preexisting paths museum selected video permit real time display high quality virtual environment general purpose hardware 
emphasis performing multiple tasks synthetic dimensional environment 
ware osborne described different metaphors exploring environments including scene hand eyeball hand flying vehicle control metaphors 
dof input device control camera position virtual environment 
discovered flying vehicle control useful dealing enclosed spaces scene hand metaphor useful looking single object 
metaphors easily implemented system 
mackinlay describe techniques scaling camera motion moving virtual spaces example users maintain precise control camera approaching objects interest 
possible implement techniques camera modules 
brooks discusses methods instrumented mechanical devices stationary bicycles enable human participants move virtual worlds natural body motions gestures 
chapel hill course focused time architectural walkthrough argue direct manipulation devices sense application 
may said virtual museum easy think circumstances reviewing list paintings appropriate require human participant physically walk ride bicycle 
times may wish interact topological temporal abstractions spatial 
camera modules accept data arbitrary input devices appropriate 
blinn suggested modes camera specification description placed frame just describing camera looking 
philips suggest methods automatic viewing control 
primarily camera hand metaphor viewing human figures jack system provide automatic features maintaining smooth visual transitions avoiding viewing obstructions 
deal problems navigation exploration presentation 
karp feiner describe system generating automatic presentations consider interactive control camera 
gleicher witkin describe system controlling movement camera screen space projection object system works primarily manipulation tasks 
prior attempted establish procedural framework controlling cameras 
problems constructing generalizable procedures led current constraint framework described 
concentrate methods satisfying multiple constraints camera position important part camera framework outline 
complete see 
problem finding collision free path complicated environment examined great deal context robot motion planning 
attempts incorporating systems graphical environment special capabilities graphics hardware assist path planning :10.1.1.44.4144
general problem thought vector approaches bitmap approaches somewhat akin hidden surface removal computer graphics 
vector approaches involve decomposing problem equivalent graph searching problem constructing visibility graphs connected regions 
bitmap approaches involve discretizing space regular occupied free cells traveling bitmap adjacent cell :10.1.1.44.4144
schr der zeltzer implemented algorithm introduced lozano perez virtual environment system called 
visibility graph constructed projection objects environment floor plane 
actor position destination position connected visibility graph algorithm run search visibility graph 
entire algorithm needed rerun object moved 
visibility graph method tends produce paths graze objects closely possible paths straight lines connected straight lines may unnatural way move camera 
algorithm take advantage graphics hardware capabilities graphics workstation 
path planning scheme described uses room room visibility graph determine path camera uses appropriate techniques negotiating room 
local path planning technique somewhat scene rendered overhead view bitmap constructed pixel representing free space obstacle 
bitmap turned configuration space growing obstacle region size moving object different orientations 
system assume spherical size camera configuration space need concern rotation 
numerical function propagated bitmap destination location current location appropriate path configuration space downward gradient numerical function 
goal camera motion planning graphics animations graphic workstation assist robot motion planning 
paths necessarily suitable camera movements due distance metric chose propagate configurations space 
propagated numerical function reached starting point 
contrast algorithm designed building environment precomputing possible specifically tailored structure virtual museum system framework specifying controlling placement movement virtual cameras 
framework proposed formal specification different types camera control 
central notion framework camera placement movement usually done particular reasons reasons expressed formally number constraints camera parameters 
identity constraints analysis tasks required museum 
entire framework involves network camera modules encapsulate user control constraints branching conditions modules 
cover entire framework concentrates components individual camera modules types constraints camera different interfaces built system 
complete description entire framework available 
concept camera module similar concept shot cinematography 
shot represents portion time starting stopping filming particular scene 
shot represents continuity camera parameters period time 
unit single camera module requires additional level continuity continuity control camera 
requirement added ability computer graphics identically match camera parameters side cut blurring distinction separate shots 
imagine camera initially pointing character moves environment 
camera pans character follows period time 
camera pans back character cinematic terms single shot continuity camera parameters entire period 
terms broken separate modules 
module task follow character second module task pan specified amount time 
third module task follow modules task pan back notion breaking cinematic shot modules specify implementation formal description goals constraints camera period time 
controlling camera natural fashion 
modules 
system design virtual museum fairly straightforward implemented different fashions 
complicated modules handle moving computer generated constructed path show utility framework combine complex movements multiple constraints 
virtual museum system system virtual museum shown 
system extension virtual environment software testbed developed mit 
virtual museum system structured way emphasize division virtual environment database camera framework interface provides access 
system contains elements 
general interpreter run prespecified scripts manage user input 
interpreter important part developing entire runtime system 
currently interpreter tcl interface widgets created tk 
commands embedded system including ability dynamic simulation visibility calculations finite element simulation matrix computations various database inquiries 
embedded interpreter rapid prototyping virtual environment sacrificing performance great deal system written low level language addition tk provides convenient creation interface widgets interprocess communication 
especially important processes need perform computation intensive parts algorithms offloaded separate machines 
built renderer 
subsystem hardware graphics workstation currently hps supported software create high quality image 
object database particular environment 
case database virtual museum precalculated colors radiosity computations system supports 
database contains information placement descriptions artwork museum 
camera modules 
described detail section 
essentially encapsulate behavior camera different styles interaction 
prespecified user associated various interface widgets 
widgets connected camera modules 
currently active camera module handles user inputs attempts satisfy constraints contained module order compute camera parameters passed renderer creating final image 
currently camera module active time multiple assigned unique camera 
diagram shows different types interface widgets control camera museum 
different widgets illustrate different styles interaction task level goals user 

camera modules shown generic module contain components generic camera module containing controller initializer constraint list local state local state vector 
contain camera position camera view normal camera vector field view 
state contain values camera parameter derivatives value time local information specific operation module 
module active state camera parameters output renderer 
initializer 
routine run activation module 
typical initial conditions set map view 
module controller maps position user mouse click directly current state camera 
view module retrieves current view saves part local state retrieves saved view local state information sets camera parameters 
camera state previous module state 
joystick module controller maps controller 
component translates user inputs directly camera state constraints controller module 
constraints satisfied time period module active 
examples constraints follows maintain camera vector align world 
maintain height relative floor maintain camera gaze view normal specified object maintain camera position path world 
system constraint viewed simply black box produces values dofs camera 
constraint solver combines constraints come final camera parameters particular module 
constraints desired values degree freedom example specifying vector camera height camera 
involve calculations produce multiple dofs adjusting view normal camera look particular object 
path planning constraint quite complicated construct path environment initial final position 
allows user see objects museum spatial context sequence 
time step path planning constraint produces dofs camera position world space 
virtual museum system modules activated selecting corresponding interface widget 
selected widget passes information controller module 
description occurs user clicks map view widget 
corresponding map view module activated means module state rendering 
initializer module retrieves camera state previous module 
allows user control camera single set controls making possible adjust position location viewer mouse click motion environment 
constraint joystick module prevents movement wall 
essentially constraint draws line old position camera new position camera 
line intersect walls environment position placed camera state 
line intersect wall old state kept changes 
painting list connected different modules 
module controller paint module responds double click middle mouse button sets state painting position environment 
addition constraint added dof controller module constrains camera point specified painting 
double clicking left button constraint added dof controller module source information destination information added local state path module 
source information current state camera destination position painting environment 
path module contains constraint uses local information construct collision free path environment initial state specified final position 
schematic view path camera module path module complicated module see 
contains constraint calculates path start position destination position set clicking painting list 
uses local state time modified time widget indicate current position camera plane 
time widget set particular time continuously update time order move forwards backwards path 
path camera module uses additional constraints calculating final camera parameters 
height constrained desired height ground adjustable height constraint 
camera vector constrained point direction world vector 
gaze direction adjusted look destination object visible look straight ahead current derivatives camera parameters destination object visible 
furthermore gaze direction constrained change rate greater specified maximum pan velocity 
single painting multiple paintings selected path module path planning constraint generates guided tour selected paintings 
immediate destination kept track controller placed local state destination slot 
constraints act manner 

complicated constraint current framework achieve automatic navigation environment 
section describes process detail 
process decomposed precomputed order speed calculation possible 
general description process detailed descriptions follow 
problem traveling point museum point decomposed finding doors travel 
node node connectivity graph pre computed accessibility adjacent rooms environment 
accessibility indicated hand automatic process uses rendered image building floor clipped door level simple visibility test points side door 
accessibility requirements handicapped access rooms 
traversing graph done known graph searching technique called 
process described section produces list straight line node node paths 
paths need computed node avoid obstacles room 
process finding path doorway point room finding path point room doorway discussed section 
algorithm optimized finding paths originate terminate doorway algorithm navigate point point room 
second algorithm described section deal partially dynamic environment opposed strictly static environment discussed algorithm 
method generating guided tour environment discussed part section 
algorithm 
guaranteed return path minimum cost path exists indicate failure path exist 
discussed robot motion planning algorithm iteratively explores node graph paths originate particular node 
iteration nodes visited unvisited 
node visited path minimum cost node memorized 
eventually destination node reached node reachable minimum cost path reconstructed 
common algorithm readers referred hart latombe description implementation 
visibility graph updated special room connectivity graph museum path room room planning algorithm produced list node node connectivities rooms negotiated doorway turn 
method somewhat similar different distant metric suited natural motion pre compute store navigation function door room fit results spline final representation path 
avoid obstacles room plan path dimensional projection obstacles room plane floor 
done preprocessing stage actual computation path room extremely rapid 
projection room rendered hardware rendering graphic workstation resolution appropriate path planning 
subsequently global numerical navigation function calculated wavefront expansion doorways 
separate navigation map stored doorway room 
demonstrate manhattan distance metric example manhattan distance metric implies cells surrounding cell considered neighbors 
navigation function calculated manhattan metric starting 
path planned upper right gradient downwards 
navigation function computed room possible travel room simply gradient distance function goal point back origin navigation function 
problems exist algorithm paths generated algorithm tend graze objects closely possible unacceptable camera motion 
fix objects increased size fixed amount directions 
prevents navigation function passing close object environment 
paths generated manhattan metric produce paths unacceptably aligned major axes 
different distance metric able generate paths movement axes possible 
see 
distance metrics resulting paths 
allows distinct directions movement 
allows allows 
allows directions 
paths produced discretized space rendered image converted continuous paths space room 
transform points proper space affine transformation fit spline curve points squares curve fitting method find best path 
control points chosen evenly spaced possible minimizing difference spline sample points 
apply additional tangency constraints starting points sure path goes doorways perpendicular fashion 
eventual path left middle middle bottom rooms museum 
navigation function room pictured 
usually navigation chosen room generated leads exit door room 
final room algorithm run backwards calculates path destination location entry room 
resultant path reversed combined paths 
travel room path planning global navigation function described section extremely convenient computation intensive performed preprocessing stage renderings scene propagation distance function image doorway 
final path planning process extremely rapid typical workstation secs sgi 
drawbacks algorithm deal planning path point room point room 
navigation function calculated doorways room conveniently find path point room doorway doorway point room 
easily find path points room doorway 
deal dynamically changing environments 
entire computation intensive parts algorithm rerun obstacle environment moves 
address problems described alternate path planning algorithm loosely 
computation needs done algorithm necessary 
preprocessing possible performed algorithm interactive possible 
static part scene projected plane graphics hardware 
wavefront expansion propagate penalty distance function outwards object 
wavefront expansion stopped soon wave meets wave coming object place object 
manhattan distance metric keep track origin pixel wavefront 
pixel calculate euclidean distance nearest object 
preprocess generates distance map turned repulsive gradient field function dn distance constants chosen task 
absolute cutoff value repulsion effects ignored desired 
runtime attractive potential created goal destination function form dn distance chosen task summed repulsive potential 
moving obstacles generate repulsive potential 
sum potentials produces gradient 
precalculated repulsive potential added run time attractive potential produce final navigation function right 
guide breadth search potential space find resultant path 
simple gradient tends get trapped local minima 
gradient gradient information discrete grid breadth guide search entire grid space 
algorithm heads local minima algorithm essentially backs minima way finding appropriate path goal 
algorithm produces discretized paths fit splines produce continuous path 
tour planning developed algorithm generate shortest path view artwork specified user 
similar fashion point point navigation tour planner divides problem stages 
algorithm locates rooms visited 
exhaustive search paths connect room 
exponential time algorithm relatively low branching factor room fairly small number rooms algorithm rapid interactively 
rooms ordered paintings room need ordered entry exit doors visit painting closest door room entered visit painting exit door 
point list paintings visited order specified 
algorithms discussed previous sections plan paths paintings results combined global tour 

summary framework exploring camera controls virtual environment 
special constraints analysis task requirements designed combined host constraints camera placement 
interfaces connected system explore human factors issues maintaining consistent underlying structure 
feel important separate underlying framework incorporate task level requirements user interface 
different directions 
efficient path planning algorithms substituted camera module framework implemented 
particular algorithms deal totally dynamic environments useful 
common task virtual environments presentation information third party observer 
path planning constraint goes convenient automatic presentation number considerations including difficult problem editing single move smaller cuts 
incorporating variety constraints cinematography camera framework current progressing techniques combine constraints meaningful fashion 

ware osborn 
exploration virtual camera control virtual dimensional environments proc 
proc 
symposium interactive graphics snowbird utah march pp 


chapman ware 
manipulating predictor feedback velocity control virtual environment navigation proc 
symposium interactive graphics cambridge ma acm press march april pp 


phillips badler 
automatic viewing control direct manipulation proc 
symposium interactive graphics cambridge ma acm press march april pp 


miller virtual museum interactive navigation multimedia database 
journal visualization computer animation pp 


brooks jr grasping reality illusion interactive graphics serving science proc 
proc 
chi may pp 


brooks jr walkthrough dynamic graphics system simulating virtual buildings proc 
proc 
acm workshop interactive graphics chapel hill nc october pp 

blinn am 
am looking 
ieee computer graphics applications july 

karp feiner 
issues automated generation animated presentations proc 
graphics interface halifax nova pp 

drucker intelligent camera control graphical environments phd thesis massachusetts institute technology cambridge ma 

reichert donald greenberg 
real time robot motion planning computer graphics hardware proc 
acm siggraph dallas tx august pp 


lozano perez wesley algorithm planning collision free paths polyhedral obstacles 
communications acm october pp 


brooks solving find path problem representation free space ieee trans 
systems man cybernetics smc march april pp 


latombe 
numerical potential field techniques robot path planning stan cs stanford university 
mackinlay card robertson rapid 
latombe robot motion planning 
kluwer controlled movement virtual workspace 
academic publishers 
computer graphics pp 


schr der zeltzer 
path planning 
zeltzer task level graphical simulation abstraction course notes synthetic actors impact artificial representation control making move intelligence robotics animation atlanta ga mechanics control animation articulated figures august 
badler barsky andd 
zeltzer eds morgan kaufmann san mateo ca pp 


zeltzer pieper sturman 
integrated graphical simulation platform proc 
graphics interface 
drucker galyean zeltzer 
cinema london ontario canada june pp 

system procedural camera movements proc 
symposium interactive graphics cambridge ma acm press march april pp 


chen zeltzer 
virtual environment dynamic simulation system computer graphics animation group august mit media lab cambridge 
zeltzer drucker 
virtual environment system ma 
mission planning proc 
image vi conference phoenix az june pp 


ousterhout tcl embeddable command language proc 
proc 
winter usenix conference 

brooks comparative task analysis alternative direction human computer interaction science designing interaction psychology human computer interface carroll ed cambridge university press cambridge england pp 


bass developing software user interface 
reading ma addison wesley 

hart nilsson raphael formal basis heuristic determination minimum cost paths 
ieee transactions systems man cybernetics pp 


gleicher witkin lens camera control computer graphics pp 

