qualitative simulation temporally extended constraint satisfaction problem daniel clancy nasa ames research center ms moffett field ca usa clancy ptolemy arc nasa gov benjamin kuipers computer science department university texas austin austin texas kuipers cs utexas edu traditionally constraint satisfaction problems csps characterized finite set constraints expressed common shared constraint language 
reasoning time possible express temporal state constraints represented multiple constraint languages 
qualitative simulation provides instance class csp traditionally solutions csp computed 
formally describe class temporally extended csps situate qualitative simulation description 
followed description decsim algorithm incrementally generate possible solutions temporally extended csp 
decsim combines problem decomposition tree clustering algorithm ideas similar directed arc consistency exploit structure causality qualitative model resulting exponential speed simulation time compared existing techniques 
traditionally constraint satisfaction problems csps characterized finite set constraints expressed common shared constraint language tsang 
reasoning time possible express temporal state constraints represented multiple constraint languages 
state constraint specifies restrictions variables hold point time temporal constraint specifies restrictions occur time 
qualitative simulation provides instance class temporally extended constraint satisfaction problems 
taken place qualitative reasoning group artificial intelligence laboratory university texas austin supported part nsf iri cda nasa nag nag texas advanced research program 
copyright fl american association artificial intelligence www aaai org 
rights reserved 
qualitative simulation forbus kuipers reasons behavior class dynamical systems branching time description alternating time point time interval states 
model specifies finite set variables constraints 
constraint specifies valid combinations variable values point time state constraints continuity constraints restrict valid transitions states 
example time point state variable increasing value immediately greater increasing 
continuity constraints correspond temporal restrictions 
temporal constraints qualitative simulation generalized algorithm brajnik clancy allow specification arbitrary temporal constraint 
uses propositional lineartime temporal logic pltl emerson combines propositional state formulae specifying qualitative quantitative information state temporal operators eventually 
qualitative behavior generated simulation corresponds solution csp defined composition state constraints temporal constraints 
viewing qualitative simulation temporally extended csp beneficial allows explore advances csp literature improve techniques applied simulation 
addition describes new class constraint satisfaction problems extensively explored csp literature 
decsim qualitative simulation algorithm efficiently computes possible solutions class csps building extending existing research constraint satisfaction literature 
decsim provides sound earlier version decsim algorithm published clancy kuipers preliminary results 
potentially incomplete algorithm solves instances class csps exponentially faster techniques currently qualitative reasoning literature 
speed facilitates application qualitative simulation techniques larger realistic problems 
qualitative simulation explicitly computes possible solutions temporally extended csp defined model 
variables completely unconstrained respect set possible solutions contains cross product possible values variable 
qsim results combinatoric branching temporal ordering set events unconstrained model 
decsim uses divide conquer approach reduce complexity simulation exploiting structure qualitative model 
decsim decomposes state csp pm defined qualitative model set smaller sub problems 
sub problem contains subset variables pm shared variables represent constraints sub problems 
decsim explicitly computes solutions sub problem 
decsim ensure partial solution participates solution original csp defining separate global csp 
decsim required compute single solution global csp partial solution opposed explicitly enumerating possible solutions effectively done qsim 
furthermore causality tree clustering algorithm simplify task identifying solution 
primary technical innovation provided decsim algorithm application basic concepts temporally extended csp ensuring state temporal continuity constraints satisfied 
describe decsim algorithm theoretical empirical results demonstrating benefits provided decsim compared techniques currently perform simulation 
addition provide formal characterization temporally extended csp laying ground research explore fields qualitative reasoning planning constraint satisfaction reasoning action potentially integrated 
definitions concepts qualitative simulation uses imprecise structural model describing class dynamical systems de publication algorithm significantly generalized resulting stronger theoretical claims experimental results 
description qualitatively distinct behaviors consistent model 
basic form model called qualitative differential equation qde defined tuple 
set variables discrete set values variable initial state set state constraints variables constraints abstractions mathematical relationships restricting valid combinations values variables constraint 
behavior system described tree qualitative states path consists alternating time point time interval states 
qualitative state provides value variables model value special variable representing time 
qualitative model defines traditional state csp 
simulation csp extended time variable assigned value successive time point time interval states 
variable assignments satisfy state constraints implicit explicit temporal constraints 
temporally extended csp defined extending definitions commonly define traditional csp 
definition temporally extended csp temporally extended csp defined tuple closed 
ffl set variables ffl defines domain variable ffl set state constraints ffl set temporal constraints ffl closed domain specific boolean predicate determine temporal sequence extended 
label assignment value variable particular point temporal sequence 
label defined tuple 
variable value variable non negative integer corresponding location value assignment temporal sequence 
label value corresponds initial state temporal sequence 
extended presentation focus representation qsim qualitative simulation algorithm 
concepts applied alternative representations forbus de kleer brown proposed literature 
definition temporally extended csp restrict semantic interpretation point sequence 
qualitative simulation temporal progression alternate time point time interval states interpretations different domains 
label called variable history corresponds sequence consecutive labels rooted extended label extended label 
compound label set labels vn vn 
providing values multiple variables extended compound label simply set extended labels multiple variables 
solution temporally extended csp corresponds extended compound label satisfies state temporal constraints 
formal definition solution needs account potentially infinite nature temporal sequence 
address issue domain specific boolean predicate closed 
definition partial full solutions fully extended solution extended compound label satisfies constraints closed predicate 
conversely partially extended solution extended compound label satisfies constraints fails satisfy closed predicate 
closed predicate defined depends domain 
qualitative simulation solution fully extended cycle detected transition condition occurs state quiescent steady state 
hand planning viewed temporally extended csp solution fully extended final state satisfies goal condition 
reasons important define closed predicate qualitative simulation partially extended solution eliminated solution set determined exist consistent extension solution 
qualitative model initial state qualitative simulation mapped temporally extended csp straight forward manner mapping variables domains state constraints directly problem deriving temporal constraints continuity constraints applied performing simulation 
qualitative simulation attempts find possible solutions temporally extended csp limit length temporal sequence set compound labels solution set 
complexity problem completely determined size solution space 
larger models tend loosely constrained simulation models results describe problem addressed set temporal constraints extended include temporal logic expressions contained model 
currently decsim handle arbitrary temporal constraints expressed 
intractable branching exponential number solutions 
state representation inherently limited ability represent reason behavior imprecisely defined dynamical system 
decsim algorithm decsim modifies representation describe solution space generated qualitative simulation providing compact representation efficient simulation algorithm 
decsim exploits fact larger systems decomposed number loosely connected subsystems due inherent structure exists model 
decomposing model decsim able address primary sources complexity combinatoric branching due complete temporal ordering behaviors unrelated variables 
component generation model set variables initial state decsim uses partitioning fv vn variables model generate component partition 
currently partitioning variables provided input decsim algorithm 
separate behavioral description set solutions explicitly generated component 
interaction components represented shared variables called boundary variables 
partition decsim generates component containing types variables variables variables specified boundary variables variables contained partitions direct causal influence partition variables 
decsim identifies boundary variables extension iwasaki causal ordering algorithm transform model hybrid directed undirected hypergraph called causal graph 
variable said direct causal influence variable exists undirected hyperedge causal graph relating exists directed hyperedge extending terminating various techniques automating process considered point focused simulation algorithm partitioning variables fairly straight forward extension model building process 
algorithm generate causal graph potentially incomplete case causal relationship variables may incomplete resulting undirected hyperedge causal graph 
component defines qualitative model variables correspond union partition boundary variables component constraints correspond set constraints original model relating variables contained component 
furthermore relationship components defined shared boundary variables defines labeled directed graph called component graph defined follows 
definition component graph set related components fc cn component graph labeled directed graph node corresponding component 
edges defined follows ffl edge exists component node exists variable partition variable boundary variable ffl edge labeled set boundary variables classified partition variables local global consistency core qsim algorithm derive separate behavioral description called component tree component 
terms component behavior component state refer behavior state component tree respectively 
definition local consistency component behavior component locally consistent solution csp defined addition component behavior consistent respect rest model determine component behavior participates complete solution original csp decsim solve separate global csp variables correspond components variable values component behaviors constraints restrictions represented variables shared components 
component behavior globally consistent exists set component behaviors fb cn containing solution global csp 
decsim determine set component behaviors compatible respect variables shared components 
definition compatible behaviors set component behaviors fb cn subscripts identify component state behavior set variables belong 
compatible behaviors combined form composite behavior describing variables component behavior 
conceptually behavior composition equivalent multi way join relational database literature 
definition behavior composition set component behaviors fb cn composite behavior describes variables vc pi vc pi vc projection behavior variables vc set composite behaviors essentially cross product component behaviors minus combinations filtered global consistency constraints 
components weakly connected set quite large 
behavior temporal sequence determining set component behaviors compatible simply straight forward comparison variable values 
decsim addresses issue maintaining mapping states components related component graph 
states mapped behaviors terminating states compatible 
mapping allows decsim evaluate global consistency set behaviors comparing final states behaviors respect mapping 
mapping incrementally generated component behavior extended 
components related shared variables state sa maps component state sb sa sb equivalent respect shared variables sa sb initial states predecessor sa maps predecessor sb predecessor sa maps sb sa maps predecessor sb maintaining mapping compatible states related components decsim translates global csp variable values correspond component behaviors csp called component graph csp variable values correspond qualitative states 
translation enables decsim evaluate global consistency state local inferences respect temporal progression behaviors 
definition component graph csp component graph csp defined tuple please refer clancy formal definition projection operator applies qualitative behavior 
ffl variables correspond components ffl domain variable set qualitative states defined component tree corresponding component set domains variable ffl constraints defined mapping maintained related components 
components related component graph constraint exists corresponding variables component graph csp satisfied states linked mapping relating components 
specification global csp qualitative states allows define global consistency respect qualitative state opposed entire behavior 
definition globally consistent component state globally consistent state locally consistent participates solution component graph csp 
performing simulation performing simulation decsim iterates components incrementally simulating leaf states component tree 
decsim uses qsim generate successors component state ensuring state locally consistent 
addition decsim ensure state globally consistent 
determining component state globally consistent fully simulated set component behaviors straight forward constraint satisfaction problem characterization provided 
decsim incrementally generates component behavior 
possible component behaviors extended solution component graph generated containing state component tree previously globally consistent 
words state globally consistent point simulation imply globally inconsistent 
decsim addresses issue techniques successors component state computed determined globally consistent identification state globally consistent propagated component graph csp identifying solutions component graph contain state status respect global consistency previously undetermined 
condition ensures globally inconsistent states simulated second condition ensures globally consistent solutions computed restriction 
algorithm test state global consistency exploits causality structure component graph csp reduce complexity finding solution 
tree clustering algorithm dechter pearl transform component graph csp acyclic cluster graph grouping components included cycle single node cluster graph 
transformation significantly reduces time required find solution component graph allowing decsim constraint propagation clusters opposed computing complete solution csp 
second causality reduce complexity process asserting independence causally upstream components components strictly downstream respect causal ordering 
primary benefits provided decsim respect standard qsim simulation 
transforming component graph acyclic cluster graph worst case complexity required find solution component graph csp exponential size largest cluster opposed size component graph 
second decsim required find single solution component graph component behavior opposed computing possible solutions required standard qsim simulation 
example benefits provided decsim demonstrated simple model sequence cascaded tanks 
versions model discussion 
simpler version simple cascade complex version feedback loop exists inflow top tank controlled level bottom tank see 
performing standard qsim simulation simple tank cascade total gamma behaviors generated enumerating possible solutions csp 
solutions simply provide different temporal orderings unrelated events 
decsim eliminates distinctions generating separate behavioral description containing total behaviors tank 
causality able reason behavior upstream tanks independently downstream tanks 
complexity simulation linear number tanks 
controlled version tank cascade feedback loop connects upstream downstream tanks 
decsim able provide significant improvements simulation time due ability controller tank level control signal tank controlled tank cascade causal graph variable partitioning qualitative model controlled tank cascade partitioned components controller 
decsim generates causal graph model identify boundary variables 
variable partitioning identified solid boxes causal graph 
boundary variables variables partitions causally upstream 
boundary variable component included component boundary variable component controlled tank cascade partition problem smaller sub problems reason interaction sub problems independently 
tank cascade decsim generates average behaviors component qsim generates total behaviors 
table displays simulation time number variations example 
theoretical results traditional techniques qualitative simulation sound complete respect csp defined model unable scale larger problems 
decsim hand trades completeness efficiency 
results established clancy kuipers 
theorem decsim soundness guarantee consistent qualitative model decomposition model components fc cm solutions temporally extended csp defined decsim generates set partial solutions fb note incompleteness qualitative simulation respect set real valued trajectories described behavioral description csp 
pi theorem decsim completeness guarantee consistent model decomposition model components fc cm exist cycle size greater component graph csp partial solutions generated decsim describing subset variables exists corresponding solution temporally extended csp defined pi 
note completeness theorem includes restriction maximum cycle size component graph csp 
limitation temporal ordering behaviors separate components behavioral description generated decsim identical description generated qsim 
temporal ordering information intentionally omitted available decsim implicitly represents information constraints represented mapping maintained component states 
incompleteness source incompleteness comes characterization component graph csp csp qualitative states opposed qualitative behaviors 
translation allows decsim evaluate global consistency state local information respect temporal progression behavior 
translation essential decsim efficiently determine component state globally consistent 
possible set component behaviors incompatible exist single composite behavior describing behaviors terminal states behaviors provide solution component graph csp 
problem encountered analogous distinction constraint propagation constraint satisfaction respect temporal continuity constraints 
allowing state sa participate solution component graph csp decsim requires predecessor participate solution 
check ensure solution containing sa satisfies continuity constraints respect solution containing predecessor sa clancy kuipers provides detailed discussion problem hypothetical example 
decsim required maintain record solutions component graph csp ensure proposed solution continuous solution identified preceding time step 
pi projection solution subset variables component assumed describe set variables models may require decsim compute solutions cluster component graph eliminating computational efficiency benefits provided decsim behavior system cluster 
practice incompleteness algorithm problem number reasons 
conditions incompleteness algorithm encountered quite restricted occurs components closely related 
fact encounter problem models tested 
addition developed algorithm identify problem occurs run completion simulation 
qualitative simulation encounters problem behaviors generated correspond real valued trajectory dynamical system described model 
techniques qualitative simulation account possible spurious behaviors 
case trade exists completeness computational complexity algorithm 
computational complexity complexity standard qsim simulation determined size representation computed 
worst case size behavioral description exponential number variables model 
decsim reduces size solution space decomposing model 
decsim worst case size simply exponential number variables largest component 
decsim reason global consistency component state solving component graph csp 
benefits provided decsim depend topology model degree lends decomposition variable partitioning selected modeler 
clancy define relationship decsim qsim respect complexity simulation model decomposed partitions degree overlap components approaches zero size total solution space reduced exponential factor number components decomposed model degree overlap approaches fully connected constraint graph component graph csp size decsim solution currently process developing proof establish trade inherent limitation computing possible solutions temporally extended csp 
space factor practice savings provided decsim simulation quite pronounced demonstrated empirical results 
primary source savings fact decsim required compute single solution component graph csp ensure component behavior consistent global solution opposed computing solutions qsim non decomposed model 
empirical evaluation empirical evaluation measure benefits provided decsim simulation respect standard qsim simulation 
decsim qsim tested set extendible models 
extendible model model composed sequence identical components enabling incremental extension model facilitate evaluation asymptotic behavior algorithm 
models variations cascaded tanks example described 
different versions different topology component graph csp 
simple cascade topology loop topology top tank controlled bottom tank chain topology outflow tank controlled level tank 
models decsim performed exponentially better qsim 
table shows simulation time results number tanks varied plots results loop configuration comparing qsim decsim 
benefits provided decsim pronounced topologies 
provides comparison results decsim simulation topologies 
note dependence computational complexity topology model 
loop configuration component graph csp composed single large cycle 
encounter backtracking determining component state globally consistent 
complexity simulation exponential number tanks 
decsim performs significantly better qsim 
conversely simple tank cascade complexity linear number tanks 
decsim algorithm initially designed provide efficient mechanism performing qualitative simulation 
decomposing model components decsim avoids combinatoric branching due complete temporal ordering behaviors unrelated variables contained separate components 
complexity simulation determined cascade chained loop tanks qsim decs qsim decs qsim decs nc nt nt nt nt nc nt nt nt nt nt tested nc resource limitation prevented completion table simulation time results decsim vs qsim number components standard qsim decsim decsim vs qsim loop configuration number components loop configuration chained configuration cascade configuration decsim different versions tank cascade decsim results inherent complexity problem specification opposed artifact inference mechanism perform simulation 
furthermore characterizing qualitative simulation temporally extended csp provided framework compare contrast research performed field qualitative reasoning communities planning allen hendler tate constraint satisfaction formal reasoning action community davis 
primary distinction task qualitative simulation versus planning tasks addressed reasoning action community general planning task concerned identifying single path search space 
reason distinction world changes deterministic fashion 
planning begun focus nondeterministic uncertain worlds 
weld smith similar problem addressed qualitative simulation inference procedure reason results plan possible refinements world multiple potential outcomes action 
general ideas decsim algorithm inference procedure explicitly enumerate exponentially large solution space solution corresponds temporal sequence 
hopefully ideas support integration fields providing unified representation reason abstractly autonomous non autonomous change physical world 
allen hendler tate eds 

readings planning 
san mateo ca morgan kaufmann 
brajnik clancy 
temporal constraints trajectories qualitative simulation 
clancey weld eds proc 
thirteenth national conference artificial intelligence 
aaai press 
appear 
brajnik clancy 
focusing qualitative simulation temporal logic theoretical foundations 
annals mathematics artificial intelligence 
appear 
clancy kuipers 
model decomposition simulation component qualitative simulation algorithm 
kuipers webber eds proc 
fourteenth national conference artificial intelligence 
aaai press 
due space constraints unable provide detailed analysis comparisons existing research fields 
please refer clancy kuipers detailed discussion 
clancy kuipers 
divide conquer component qualitative simulation algorithm 
technical report forthcoming artificial intelligence laboratory university texas austin 
clancy 
solving complexity ambiguity problems qualitative simulation 
technical report artificial intelligence laboratory university texas austin 
davis 
representations commonsense knowledge 
morgan kaufmann publishers de kleer brown 
qualitative physics 
hobbs moore eds formal theories commonsense world 
norwood new jersey ablex 
chapter 
dechter pearl 
tree clustering schemes constraint processing 
proceedings seventh national conference artificial intelligence 
los altos ca morgan kaufman 
dechter pearl 
tree clustering constraint networks 
artificial intelligence 
emerson 
temporal modal logic 
van leeuwen ed handbook theoretical computer science 
elsevier science publishers mit press 

chap 

forbus 
qualitative process theory 
artificial intelligence 
iwasaki 
causal ordering mixed 
proc 
seventh national conference artificial intelligence 
aaai press mit press 
kuipers 
qualitative reasoning modeling simulation incomplete knowledge 
cambridge massachusetts mit press 
tsang 
foundations constraint satisfaction 
san diego ca academic press 
weld smith 
conformant graphplan 
proc 
fifteenth national conference artificial intelligence 
aaai press mit press 
