resource allocation model qos management rajkumar chen lee john lehoczky dan siewiorek department computer science department statistics carnegie mellon university pittsburgh pa cs cmu edu jpl stat cmu edu quality service qos receiving wide attention years research communities including networking multimedia systems real time systems distributed systems 
large distributed systems defense systems demand service inter networked systems applications contending system resources satisfy timing reliability security constraints application speci quality requirements 
allocating su cient resources di erent applications order satisfy various requirements fundamental problem situations 
basic exible model performance driven resource allocations useful making appropriate tradeo analytical model qos management systems satisfy application needs multiple dimensions timeliness reliable delivery schemes cryptographic security data quality 
refer model ram qos resource allocation model 
model assumes system multiple concurrent applications operate di erent levels quality system resources available 
goal model able allocate resources various applications system utility maximized constraint application meet minimum needs 
identify resource pro les applications allow decisions ciently real time 
identify application utility functions di erent dimensions composable form unique application requirement pro les 
videoconferencing system illustrate model 
motivation applications provide better performance quality service larger share system resources 
example feedback control systems provide better control higher rates sampling control actuation 
multimedia systems audio video streams supported part defense advanced research projects agency agreements part ce naval research agreement 
provide better audio video quality higher resolution low latencies 
tracking applications track objects higher precision accuracy radar tracks generated processed higher frequencies better computationally intensive algorithms 
real time decision making systems receive process analyze larger amounts data resources available 
interactive systems provide excellent response times users processing resources available 
applications seek improve quality delivered services su cient resources available 
example encoding decoding times signi cant transmitted data encrypted security privacy reasons 
spare resources available modules replicated assure high availability critical functionality 
conversely resources tight applications provide lower acceptable behavior 
instance frames second video rate ideal human viewing smooth fps video rate su ces conditions 
applications operate high levels quality acceptably lower levels quality resources allocated question arises allocate resources applications run concurrently contend resource types 
question resource allocation traditional sense papers domains networking real time systems distributed systems attempted answer context 
unaware signi cant allows requirements timeliness security reliable data delivery addressed traded context 
similarly qos focuses allocating single resource network bandwidth 
real time systems applications may need simultaneous access multiple resources processing cycles memory network bandwidth disk bandwidth order satisfy needs 
propose qos resource allocation model ram initial step addressing problems satisfying simultaneous requirements multiple qos dimensions timeliness cryptography data quality reliable packet delivery having access multiple resources simultaneously 
resource allocation schemes solve rst problem dealing multiple qos dimensions 
resource allocation schemes presence multiple resources subject ongoing scope 
related signi cant amount ofwork carried making resource allocations satisfy speci applicationlevel requirements 
classi ed various categories 
problem allocating appropriate resource capacity toachieve speci level qos application studied various contexts 
example studies problem allocate network packet processing capacity assuming bursty tra nite bu ers 
problem establishment real time communication channels studied admission control problem 
spring kernel uses line admission control guarantee essential tasks arrival 
various system wide schemes studied arbitrate resource allocation contending applications 
distributed pool processors guarantee timeliness real time applications admission control load sharing techniques 
operating system presents modular os approach goal maximize user perceived utility system maximizing performance particular application 
theoretical basis provided maximize system utility 
qos manager rt mach operating system allocate resources application operate resource allocation point minimum maximum thresholds 
applications ranked semantic importance di erent adjustment policies obtain negotiate particular resource allocation 
resource allocation decision various scheduling schemes available ensure allocation decisions carried 
cpu resource reservation scheme rt mach guarantee enforce access allocated resource resource allocation decision 
large portion real time scheduling theory deals problem uses xed priority schemes dynamic priority schemes heuristic schemes 
basic requirements qos model high assurance applications 
proposes qos attributes timeliness precision accuracy system speci cation instrumentation evaluation 
ram model propose considered generalization models previously studied literature 
imprecise computation model proposed liu considered problem optimally allocating cpu cycles applications satisfy minimum cpu requirements produce better results additional cpu cycles 
frequency application remains constant computation time instance application varied 
results generally assumed improve linearly additional resources 
secondly studied problem allocating cpu cycles optimally feedback control applications control quality improves concave fashion higher frequencies operation 
computation time instance application remains constant 
proposed model viewed combination broad generalization models 
allow computation time frequency application vary 
secondly importantly seek generalize resource allocation model support multiple dimensions quality timeliness data quality reliable packet delivery security achieved cryptography application support simultaneous allocation multiple resource types cpu disk bandwidth example application 
model general form assumes application quality decrease increase resource allocation 
deal cryptographic security term security sense 
rest organized follows 
section qos resource allocation model ram illustrate concepts model actual video conferencing system 
section determine optimal resource allocation schemes single variable qos constraints 
section identify main considerations multi dimensional qos problems optimal greedy resource allocation di erent cases 
apply ram videoconferencing system consider schedulability issues 
section concluding remarks discuss problems remain unsolved 
ram qos resource allocation model ram dynamic adaptive application framework characteristics application may need satisfy requirements timeliness security data quality dependability application may require access multiple resource types cpu disk bandwidth network bandwidth memory application requires certain minimum resource allocation perform acceptably 
may improve performance larger resource allocations 
improvement performance measured utility function 
ram model resources allocated individual applications goal maximizing global objective 
model intended static line allocation schemes dynamic line allocation admission control schemes timed allocations resource allocation duration validity associated 
quality service dimensions consider application obtains transmits audio data 
application reliable encoding scheme tolerate recover bit errors transmission 
data secure encrypting transmitted packets 
application may process transmit audio data smaller chunks meet real time constraints 
application may choose improve audio quality increasing size audio sample increasing sampling rate 
application may want perform simultaneously option requires additional resources 
refer quality aspects timeliness reliability security data dimensions 
ram consider system multiple applications set requirements multiple qos dimensions contending resources 
application may minimum maximum need dimension 
resource allocation adds utility application system utility monotonically increasing resource allocation 
system resources limited maximal demands applications satis ed simultaneously 
ram speci cations resource allocation decision application system level objective called utility maximized 
de nition ram ram de ned follows 
system consists applications ng resources fr 
resource nite capacity shared temporally spatially 
cpu network bandwidth example time shared resources memory spatially shared resource 
portion resource rj allocated application denoted ri enforce ri rj 
issues need noted context real time systems particular utilization resource allocation application terms utilization resource 
certain utilization allocated application may choose execution time period achieve utilization appropriate processor sharing scheme weighted fair sharing 
schedulability constraint pn ri rj implies resource fully consumed 
known true xed priority scheduling algorithms true earliest deadline scheduling algorithm ideal conditions 
di erent maximal resource scope support xed priority schemes 
example see 
de nitions application utility ui application de ned value accrued system allocated ri ri ri ri 
words ui ui ri 
ui referred utility function utility function de nes surface application operate resources allocated 
application relative importance speci ed wi total system utility rn de ned sum weighted application utility applications rn ri 
application needs satisfy requirements qos dimensions fq 
dimensional resource utility ui ui ri application de ned value accrued system allocated ri qos dimension qk application minimal resource requirements qos dimension qk 
minimal requirements denoted mink fr mink mink mink application said feasible allocated minimum set resources qos dimension 
denote total minimum requirements rmin fr min rmin rmin min pd rmin assume single resource allocated 
assumptions assumptions 
applications independent 

available system resources su cient meet minimal resource requirements application qos dimensions min 
utility functions ui ui nondecreasing arguments 
cases assume functions concave continuous derivatives 
aspect model simpli cation relaxed 
general multiple resource tuples yield qos operating point 

application wi denoting relative importance 
observations concerning assumptions 
assumption hold resource allocation methods apply schedulability analysis needed ensure application timing requirements met complicated 
take account phenomena priority inversion occur synchronization protocols 
second assumption hold minimal resource requirements met 
requirements met applications dropped 
variety techniques determine applications dropped allow applications minimal resource allocations 
important issue scope 
third view de ne weighted utility function application wi ui solve resource allocation problem weighted utility functions 
remove weights allocation problem 
subsequent analysis weighted utilities drop weight function 
note ui necessarily equal ui words utility obtained application resource rj may additive respect utility resource 
application may need resources simultaneously achieve certain utility 
example audio conferencing application may need cpu resource networking bandwidth resource order satisfy minimal qos requirement 
objective objective ram resource allocations application total system utility maximized constraint application feasible respect qos dimension 
stated formally need determine fri mg ri pd rmin maximal possible allocations 
qos considerations video conferencing shall video conferencing system named rt phone example illustrate ram 
shall focus primarily managing resource allocations audio stream single node 
delay encountered audio stream function cpu processing rate audio sampling rate plotted 
variable axis periodic interval bu ered audio packets obtained sound hardware processed transmitted network 
plotted line corresponds di erent sampling rate 
shorter network network network network audio send audio server audio recv audio server rt phone video recv video send audio device driver video device driver rt mach audio card audio card video card frame card architecture rt phone 
periods delay shorter vice versa 
plot illustrates relatively little additional resources sampling rate increased improved audio data quality obtained 
load imposed processor data points plotted 
axis cpu load seen shorter processing periods cpu load high due higher network packet processing costs larger number smaller packets higher context switching costs 
qos dimensions system described delay representing timeliness audio sampling rate representing data quality 
processing rate audio sampling rate changed independently increase leads increases utility video conferencing system 
improvements delay ms ms generally tend perceived higher improvements ms ms return utility diminishes resources added 
applies sampling rate 
shapes utility functions corresponding qos dimensions 
resource allocation ram section derive basic properties ram de ned previous section 
start simple case making allocation decisions single resource type single qos dimension 
extend model support multiple qos dimensions 
case state property needs satis ed maximizing total system utility algorithm nd optimal near optimal allocation 
single resource single qos dimension single resource quality dimension drop subscripts associated 
utility assigned operating point application objective subjective 
feedback control applications control quality improves sampling rates utility values de ned objectively 
multimedia applications human perceptions saturate point utility values may subjective 
relative utility values applications system application semantics optionally modi able users 
delay ms cpu load timeliness audio quality khz khz khz khz khz period ms khz khz khz khz khz period ms audio delay curves function cpu processing rates audio sampling rates 
cpu load audio processing function cpu processing rates audio sampling rates 
audio utility functions timeliness data quality 
case ui amount resource allocated minimum resource allocation needed satisfy min illustrate approach assumption utility functions ui twice continuously di erentiable concave ui dr min convention assume ui min convenient transform resource allocation problem 
assume minimal application resource requests met focus allocation excess resources available 
conse quently loss generality assume min reduce resources amount 
subsequent analysis assume transformation require ri pn ri remaining quantity resources left allocate 
min max linear utility function min max requirements 
goal determine values rn total system utility pn ui ri maximized subject constraint pn ri theorem provides necessary condition allocation optimal 
theorem condition resource allocation optimal ri fi jg ri rj ri rj 
proof result standard kuhn tucker theorem see chapter 
understand intuition results suppose ri rj ri rj 
rj nitesimal amount ofr subtracted application added application ri rj total system utility increase 
contradicts assumption allocation optimal noted possible applications receive zero resource allocations application consumes available resource quantity slope utility function highest 
utility functions smooth result requires modi cation 
see suppose consists line segments slope 
suppose linear slope utility functions slopes 
amount resources available exceeds optimal allocation give rst application rest second application 
results situation unequal slopes 
hand utility functions smooth happen 
special case linear utility functions special case consider utility curve maximum 
utility curve linear min resource requirement max 
utility curve practical sense noncritical systems desktop multimedia applications gain simplicity resulting ciencies 
refer special class utility functions min functions 
corollary provides necessary condition resource allocation optimal recall resource allocations normalized application allocated su cient resources satisfy minimum requirement 
min linear max utility functions 
corollary condition resource allocation optimal min linear max utility functions ri max fi jg ri max rj max ri rj 
proof corollary follows conditions theorem fact utility gained allocating nitesimal resource applica tion max possible exists appli refer application statement corollary 
cation ri max single resource multiple qos dimensions application multiple qos dimensions 
example rt phone example qos dimensions audio data quality increases audio sampling rate delay decreases increases processing rate 
resource allocation systems multiple quality dimensions depends nature relationship dimensions 
section classify relationships qos dimensions discuss ects study resource allocation problem various conditions 
provide optimal allocations possible provide greedy algorithm case 
relationships qos dimensions inter relationship qos dimensions directly impacts nature utility functions 
study kinds relationships qos dimensions independent dimensions qos dimensions qa qb said independent quality increase qa qb doesnot increase resource demands achieve quality level previously achieved qb qa 
example di erent compression schemes audio stream scheme generates exact amount data 
result processing resources needed encrypt data remain 
encryption scheme changed consume resources audio compression demands remain 
security audio data quality considered independent qos dimensions system 
dependent dimensions qos dimension qa said dependent dimension qb change dimension qb increase resource demands achieve quality level previously achieved qa 
rt phone system audio sampling rate increased data volume increases cpu time needed process data increases qos dimensions qa qb dependent third dimension qc 
example video quality improved increasing size image processing capacity network bandwidth demands increase 
result timeliness packet loss qos dimensions ected 
algorithm determine umax algorithm determine optimal resource allocation ri application obtain umax 
assume application allocated minimum resource requirement 
assumption su cient resources available allocation 
consequently determine optimal additional allocation application ri subject pn ri 
current normalized allocation resource ri unallocated quantity available resource compute rn 

identify subcollection applications largest value ri number applications subcollection denoted application denoted second largest value quantity application exists 
largest value ri 
allocation increase system utility spare resources available 

increase ri members subcollection values ri decrease continue equal value equal second largest value ii additional resources added subcollection equal dealing independent qos dimensions suppose qos dimensions independent 
case qos dimension ers utility system varied indepen case ii resources optimally allocated 
dent dimensions 
case dimensional utilities applications additive 
ui 
case new applications added subcollection 
return step 
pd ui resource allocation problem equivalent single qos dimension problem section applications dg dg correspond dimensions dg correspond dimensions 
optimal resource allocations determined algorithm described section 
dependent qos dimensions continuous values suppose qos dimensions independent quality dimension value interval 
illustrate general approach special case approach increase cpu load linear inferred 
resource utility resource consumption surface qos dimensions 
utility surface function qos dimensions 
nal univariate utility function qos dimensions single resource 
remains 
resource demand point qos dimension point qos dimension plotted rst 
resource consumption surface example 
utility system pair fp qg points qos dimensions respectively plotted 
yields utility surface example illustrated 
contours resource consumption surface projected utility surface 
maximum contour projection nally yield single maximal utility function function example utility function surfaces figures yield shape shown 
net result multidimensional resource allocation problem gets reduced single qos dimension problem 
resulting univariate utility function twice continuously di erentiable concave min linear max algorithm section applied obtain optimal resource allocation 
dependent qos dimensions discrete options consider special cases qos dimensions dependent base qos sets ur ue aggregate ua dependent binary qos dimension 
dimension discrete nature 
sake illustration shall assume yielding independent base qos dimension qos dimension dependent 
shall rst consider binary case quality dependent dimension available available 
consider case quality dependent dimension multiple discrete values 
dependent binary qos dimensions consider application sampling microphone input transmitting audio stream 
su xes represent audio raw audio encrypted audio respectively 
increasing audio sampling rate increases audio quality amount data processed 
rr cpu resource allocated processing raw data 

assuming monotonic ur rr shape 
suppose audio data encrypted 
additional processing block audio data correspondingly cpu resource needed 
additional resource consumption scales linearly sampling rate 
reasonable assume constant utility gain added system encryption 
rr needed processing audio data encryption larger value re need allocated encrypting processing amount audio data 
re rr constant 
utility function ue form re origin ue set vertically horizontally ur 
vertical set horizontal set min slope ue smaller ur 
ur continuous concave ue continuous concave 
aggregate utility function audio application ua max ur ue 
examples provided ur thin line starting lower left ue thin line ua bold line 
noted encryption possible 
larger resource allocations min allocations encryption possible may yield higher utility 
example aggregated application utility function yields higher utility encryption initially encryption encryption 
general case ua piecewise continuous concave 
dependent ary qos dimensions scheme scheme base dimension example ary qos dimension 
section assume second qos dimension encryption applied binary function available available 
binary scheme applicable single scheme encrypting bit public key 
suppose scheme available qos dimension encrypting bit key bits key di erent cryptographic scheme 
convenience introduce notation 
notation qos dimension qk dependent discrete schemes 
convention adopt scheme represent absence dimension 
utility gain constant provided supporting scheme denoted resource scaling factor respect base dimension supporting scheme denoted 
overhead factor scheme denoted 
convention 
scheme provides correspondingly di erent increase utility consuming di erent amount cpu resource di erent result family utility curves aggregated application utility function maximum curves 
example family utility functions ary dependent dimension resulting aggregated utility function illustrated 
linear dimensional utility functions dependent ary case min linear max dimensional utility functions independent qos dimensions aggregated application utility function piecewise linear qos dimensions ary nature 
sample set individual dimensional utility functions qos dimensions independent dependent aggregated application utility function illustrated 
independent base dimension dependent dimension 
wehave rmin rmax scheme dependent ary qos dimension utility aggregate scheme base scheme scheme resource ary qos dimension min linear max 

corresponding utilities respectively 
scheme dependent dimension assume yielding 
correspondingly rmin rmax utilities 
scheme assume 
rmin rmax umin umax 
aggregate utility function application maximum previous functions 
useful note piecewise linear application utility function kinds discontinuities intersecting discontinuities dimensional utility lines intersect point vertical discontinuities maximal dimensional utility line point starts lines saturation discontinuities maximum qos point dimensional utility line utility increase 
greedy algorithm determines near optimal resource allocation conditions 
greedy algorithm obtain resource allocation ri application system linear dimensional utility functions follows 
assign application minimum resource requirement min assumption su cient resources available allocation 

normalize utility function application left shifting shifting utility curve starts origin 
total quantity resource remaining 
current normalized allocation resource ri 
unallocated quantity available resource 
application compute slopes application utility curve ri current allocation ri discontinuity region ri vertical discontinuity pick higher point 
set slopes represented 
size set slopes 

index application highest value element bep 
applications pick random 
largest slope element max additional resource amount needs allocated reach discontinuity point corresponding max 
unallocated resources 
max increase system utility 

allocate additional increasing rp amount 
reduce amount 


go step 
utility utility functions applications app app resource counter example non optimality greedy algorithm section 
note algorithm expected practice lead optimal resource allocation wenow provide counterexample illustrated show case 
suppose applications 
total amount resource allocated 
linear slope vertical discontinuity occurs 
slope continues 
slope higher point vertical discontinuity 
linear slope saturation discontinuity atr 
greedy algorithm rst allocate units resource slope highest value 
remaining units allocated yielding 
total system utility achieved 
optimal algorithm allocate yielding total system utility higher utility achieved greedy algorithm 
currently developing algorithm nd optimal allocation replace greedy sub optimal algorithm 
load vs delay load resource utility utility function delay khz khz khz khz khz delay khz khz khz khz khz delay resource consumption function rt phone 
utility function timeliness linear model value timeliness 
ram rt phone example section apply ram rt phone system sake illustration show real time constraints satis ed 
rst generate resource consumption surface qos dimensions delay represented delay audio quality represented sampling rate 
figures obtain surface assume utility timeliness qos dimension delay 
suppose audio quality dimension ers constant utility gain sampling rate 
ug represent utility gain particular sampling rate assume ug khz ug khz ug khz ug khz ug khz yielding tapering ect 
total utility sampling rate ug 
variation total utility delay plotted curves obtain univariate utility function 
resource allocation schedulability suppose cpu resource allocated applications utility curves similar 
applications allocated min utility utility function cpu load resource khz khz khz khz khz load resource rt phone utility function recommends khz sampling rate audio 
imum resource requirements 
additional resource allocations application highest utility slope 
cpu cycles remain application reaches maximum requirement allocated application higher slope 
repeated cpu cycles available 
nal cpu allocation application ri 
corresponding cpu load processing rate figures yield computation time period pair 
pairs scheduled earliest deadline scheduling algorithm 
concluding remarks qos resource allocation model ram allows utility derived system maximized making resource allocations di erent needs concurrently running applications satis ed 
application minimal resource requirement adapt behavior resources provide additional utility 
application needs satisfy qos metrics multiple dimensions timeliness cryptographic security reliable packet delivery data quality 
application may need obtain access multiple resource types order meet qos constraints 
provided optimal near optimal resource allocation schemes applications need single resource need satisfy qos dimensions 
video conferencing system timeliness audio quality encryption constraints example motivate apply ram 
pursuing avenues 
optimal schemes needed applications multiple qos dimensions see section allocation multiple resources 
second underlying os kernel ram support exible resource management schemes provide feedback ram manager available resources resource consumption various application threads 
run time overhead actions studied detail 
ram single node systems needs extended distributed systems 
acknowledgments authors project members carnegie mellon university including carol hoover pradeep khosla phil koopman lui sha 
project de ning comprehensive framework qos management multiple quality dimensions goals include construction system prototypes applications 
authors john wilkes hewlett packard tom lawrence rome air force laboratories insightful discussions resource allocation 
baker 
stack scheduling realtime processes 
journal real time systems march 
shin kandlur ferrari 
real time communication multi hop networks 
ieee transactions parallel distributed systems pages oct 
guerin naghshineh 
equivalent capacity application bandwidth allocation high speed networks 
ieee journal selected areas communications september 
je ay 
scheduling sporadic tasks shared resources hard real time systems 
technical report tr department computer science university north carolina chapel hill november 
jones leach 
modular real time resource management operating system 
technical report msr tr microsoft research advanced technology division may 
klein pollak harbour 
practitioner handbook real time analysis guide rate monotonic analysis real time systems 
kluwer academic publishers 
isbn 
lee rajkumar mercer 
experiences processor reservation dynamic qos real time mach 
proceedings multimedia japan april 
lehoczky sha 
enhancing aperiodic responsiveness hard real time environment 
ieee real time system symposium 
liu layland scheduling algorithms multiprogramming hard real time environment 
jacm 
liu lin hull yu 
imprecise computation enhance dependability real time systems 
kluwer academic publishers 
mercer savage tokuda 
processor capacity reserves multimedia operating systems 
proceedings ieee international conference multimedia computing systems may 
sullivan jr uhl 
convex programming kuhn tucker conditions chapter 
springer verlag 
rajkumar 
synchronization real time systems priority inheritance approach 
kluwer academic publishers 
isbn 
lehoczky sha shin 
task schedulability real time control systems 
ieee real time system symposium december 
stankovic ramamritham 
design spring kernel 
proceedings real time systems symposium dec 
atkins abdelzaher kang shin 
qos negotiation real time systems application automated ight control 
proceedings ieee real time technology applications symposium june 
zhao ramamritham stankovic 
preemptive scheduling time resource constraints 
ieee transactions computers aug 
lawrence 
quality service model high assurance 
workshop high assurance systems july 
