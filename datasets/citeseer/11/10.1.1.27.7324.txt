centrum voor wiskunde en informatica bisimilarity term graph rewriting ariola klop plump software engineering sen sen january report sen issn cwi box gb amsterdam netherlands cwi national research institute mathematics computer science 
cwi part stichting mathematisch centrum smc dutch foundation promotion mathematics computer science applications 
smc sponsored netherlands organization scientific research nwo 
cwi member ercim european research consortium informatics mathematics 
copyright stichting mathematisch centrum box gb amsterdam nl kruislaan sj amsterdam nl telephone telefax bisimilarity term graph rewriting ariola computer information science department university oregon eugene usa ariola cs uoregon edu jan willem klop cwi box gb amsterdam netherlands cwi nl detlef plump fachbereich mathematik und informatik universitat bremen postfach bremen germany det informatik uni bremen de survey confluence properties acyclic term graph rewriting 
results counterexamples different kinds term graph rewriting plain applications rewrite rules extensions operations collapsing copying operations considered 
collapsing copying constitute bisimilarity term graphs 
establish sufficient conditions counterexamples confluence confluence modulo bisimilarity church rosser property modulo bisimilarity 
address rewriting modulo bisimilarity rewriting bisimilarity classes term graphs 
computing reviews classification system keywords phrases term graph rewriting bisimilarity confluence church rosser property note carried project sen data manipulation 
part research third author performed leave cwi hcm network express 
revised extended version 

computations term rewrite rules play important role areas functional programming symbolic computation theorem proving 
computations commonly implemented graph data structures expressions 
possible share common subexpressions avoiding repeated evaluations subexpression 
term graph rewriting originates demand computational model allows reason implementations sharing 
model rewrite rules operate graphs trees 
term graph rewriting closely related term rewriting models differ respect important properties termination confluence 
consider acyclic term graph rewriting approach plu plu :10.1.1.27.8770
definition rewrite steps setting far acyclic term 
term graphs bisimilarity graphs concerned equivalent corresponding definitions ak 
equivalence fails cyclic graphs 
particular collapsing term rewrite rule id yields applied certain cyclic graphs different results mentioned approaches see cd 
mainly interested confluence properties term graph rewriting 
address rewriting applications term rewrite rules extensions operations collapsing copying operations 
operations important completeness reasons collapsing allows cope term rewrite rules having repeated variables left hand sides copying allows simulate certain term rewriting derivations prevented sharing 
collapsing increases degree sharing certain cases considerably speed evaluation processes 
collapsing copying reflexive transitive closure term graph rewrite relation contains bisimilarity term graphs 
call term graphs bisimilar represent term 
equivalently graphs collapse common term graph yield common term graph copying 
investigate addition confluence conditions term graph rewriting confluent modulo bisimilarity church rosser modulo bisimilarity 
characterize confluence termination term graph rewriting modulo bisimilarity rewriting bisimilarity classes 
rest organized follows 
section introduce term graphs collapsing copying bisimilarity 
section contains review term graph rewriting motivates collapsing copying 
relation confluence confluence modulo bisimilarity church rosser property modulo bisimilarity clarified section 
section recall confluence results non overlapping rewrite rules show full substitution strategy cofinal 
examples demonstrate addition collapsing copying causes non confluence 
orthogonal rewrite systems treated section 
shown collapsing may result non confluence plain term graph rewriting shown confluent modulo bisimilarity 
section devoted general systems possibly overlapping rules 
conditions confluence term rewriting induces confluence term graph rewriting church rosser property modulo bisimilarity 
section rewriting bisimilarity classes addressed 
section summarize positive negative results tables 

term graphs bisimilarity sigma set function symbols sigma comes natural number arity 
function symbols arity called constants 
assume infinite set variables sigma set arity variable hypergraph sigma system lab att consisting finite sets vg nodes hyperedges labelling function lab sigma attachment function att assigns string nodes hyperedge length att arity lab 
call hypergraphs hyperedges simply graphs edges 
graph edge att node result node argument nodes 
result node denoted res 
node subgraph consisting nodes reachable edges 
term graphs bisimilarity having nodes result nodes 
definition term graph graph term graph node root node reachable acyclic node result node unique edge 
shows term graphs binary function symbols constant edges depicted boxes inscribed labels bullets represent nodes 
line connects edge result node arrows point argument nodes 
order argument string left right order arrows leaving box 
hypergraphs term graphs alternatively defined directed acyclic graphs consisting set labelled nodes successor function nodes tuples nodes see example 
kind definition equivalent term graph defined way easily transformed hypergraph conforming definition vice versa 
hypergraph framework order consistent plu plu :10.1.1.27.8770
term sigma variable constant string function symbol arity terms 
definition term representation node term graph unique edge result node att ae lab lab term term term represented write term root 
graph morphism graphs consists functions vg vh eh preserve labels attachment nodes lab ffi lab att ffi ffi att maps string 
morphism injective surjective 
injective surjective isomorphism 
case isomorphic denoted definition collapsing copying term graphs collapses graph morphism mapping root root denoted morphism non injective kind collapsing said proper 
inverse relation collapsing called copying denoted proper copying denoted oe inverse relation proper collapsing 
examples collapsing copying 
easy see collapse morphisms surjective graph morphisms term graphs fact holds 

term graphs bisimilarity oe collapsing copying fact term graphs implies term term 
frequently term graphs minimal maximal sharing 
definition tree fully collapsed term graph term graph tree fully collapsed example middle graph fully collapsed 
shown plu :10.1.1.27.8770
lemma term graph tree mg fully collapsed term graph og mg og mg og unique isomorphism 
definition bisimilarity term graphs bisimilar denoted term term 
graphs instance bisimilar 
note outer graphs related collapsing copying 
originally notion bisimilarity bisimulation formulated theory concurrent communicating systems called process algebra 
turned notion applies directly elegantly term graphs order give equivalent formulation tree equivalence identity possibly infinite trees arising unwinding possibly cyclic term graph see ak 
bisimilarity bisimulations term graph setting simpler process algebra sum operator processes idempotent associative commutative objects edge labelled trees order subtrees irrelevant case term graphs 
setting acyclic term graphs simple enables define bisimilarity directly mentioning notion bisimulation 
uniqueness isomorphism trees fully collapsed term graphs characterizes bisimilarity follows 

term graph rewriting lemma term graphs equivalent 
mg mh 
og oh 
consider term graphs graphs isomorphism classes graphs partial order equivalence class term graph respect bisimilarity class fact complete lattice top element mg bottom element og 
shown ak different technical framework possibly cyclic term graphs 

term graph rewriting section review term graphs transformed applications term rewrite rules motivate collapsing copying term graph rewriting 
term rewrite rule consists terms sigma variable variables occur set term rewrite rules term rewriting system 
assume reader familiar basic concepts term rewriting see dj klo overviews 
fix arbitrary term system term rewrite relation associated denoted transitive closure reflexive transitive closure 
term write mt tree representing denotes term graph representing variables shared node indegree greater satisfies term variable unique node term graph resulting removing edges labelled variables denoted 
example shows graphs mf sigmaf sigmaf 
graphs mf sigmaf sigmaf definition instance redex term graph instance term graph morphism sending root root node term graph rule pair hv ri redex instance definition term graph rewriting term graphs hv ri redex proper rewrite step isomorphic term graph constructed follows 
term graph rewriting gamma feg graph obtained removing unique edge satisfying res 
graph obtained disjoint union ffl identifying root ffl identifying image res res pair theta lab lab 
root term graph obtained removing nodes edges reachable root garbage collection 
denote rewrite step simply write graphs term graph rewrite step node unique image removed garbage collection 
partial function tr vg vh track function assign node corresponding node definition track function proper term graph rewrite step 
construction definition injective graph morphism associated disjoint union ident surjective morphism associated identification isomorphism track function rewrite step partial function tr vg vh defined follows tr ae ident ident vg undefined 
extend track function rewrite sequences follows isomorphism tr tr tr ffi tr term graph rewriting sound respect term rewriting sense 
theorem soundness hp term graphs implies term term sequel consider term graph rewriting extensions collapsing copying 
introduce extensions 
definition coll copy bi relations coll copy bi term graphs defined follows coll copy oe bi oe 
term graph rewriting refer coll copy bi plain term graph rewriting term graph rewriting collapsing term graph rewriting copying term graph rewriting collapsing copying respectively 
term graph rewrite relation mean binary relation term graphs 
term graph rewrite relation term graphs write inverse denoted symmetric closure wv 
relation defined analogously note relation bi contains bisimilarity implies mg see lemma 
coll copy bi sound sense theorem replace 
collapse copy steps change represented term 
collapsing allows cope term rewrite rules having repeated variables lefthand sides 
instance rule eq true applied tree graph morphism see 
problem overcome collapsing subsequently rule applied 
eq eq eq true collapsing enable rule application advantage collapsing certain cases speed evaluation processes drastically 
prime example specification fibonacci function fib fib fib fib fib rules evaluating term form fib term rewriting requires number rewrite steps exponential see 
easily observes number steps needed plain term graph rewriting 
replacing coll possible evaluate fib linear number steps 
evaluation strategy described follows collapse steps priority proper rewrite steps produce fully collapsed term graphs 
fib redexes representing greater number reduced 
see illustration strategy 

notions confluence difficult verify procedure evaluates fib steps viz 
proper rewrite steps collapse steps 
fib 
fib fib 
fib fib fib 
fib fib 
collapsing speed evaluation benefit copying term graph rewriting complete respect term rewriting theorem show term rewriting sequence simulated collapsing copying 
repeated variables left hand sides rules copying guarantees completeness see theorem 

notions confluence section define confluence confluence modulo bisimilarity church rosser property modulo bisimilarity 
turns coll copy bi properties equivalent 
plain term graph rewriting church rosser property modulo bisimilarity strictly stronger confluence modulo bisimilarity confluence incomparable properties 
definition confluence properties term graph rewrite relation confluent constellation term graph confluent modulo bisimilarity term graphs 
notions confluence church rosser modulo bisimilarity term graphs transitive closure relation wv important consequence confluence rewriting yields deterministic results 
call term graph normal form respect relation weakly normalizing term graph normal form uniqueness normal forms means normal forms confluence implies uniqueness normal forms confluence modulo bisimilarity implies uniqueness normal forms bisimilarity 
definition clear church rosser modulo implies confluent modulo 
lemma specialization lemma huet hue term graph setting 
lemma weakly normalizing term graph rewrite relation church rosser modulo bisimilarity confluent modulo bisimilarity 
plain term graph rewriting church rosser property modulo bisimilarity strictly stronger confluence modulo bisimilarity 
apparent example conjunction theorem 
outer graphs related reduced bisimilar graphs 
examples show plain term graph rewriting confluence general incomparable church rosser property modulo bisimilarity confluence modulo bisimilarity 
example consider system easy check confluent shows confluence modulo bisimilarity church rosser property modulo bisimilarity fails 
confluence confluence modulo system different purpose 

notions confluence example plain term graph rewriting may church rosser modulo bisimilarity confluent modulo bisimilarity confluent 
demonstrated system theorem show church rosser modulo weakly normalizing term rewriting confluent 
term graph representing nonisomorphic normal forms see confluent 
church rosser property modulo confluence presence collapsing copying confluence properties equivalent 
particular properties equivalent relations coll copy bi theorem term graph rewrite relation oe equivalent confluent 
confluent modulo bisimilarity 
church rosser modulo bisimilarity 
proof 
suppose case oe treated analogously 
show implications 




consider term graphs term graphs gamma wv gamma lemma constellation gamma satisfies gamma mg gamma ffi induction confluence see term graph church rosser modulo 

immediate consequence definition 

assume confluence modulo term graphs og og confluent 

non overlapping systems 
non overlapping systems known plain term graph rewriting confluent left hand sides term rewrite rules overlap 
recalling related result uniqueness complete developments show reduction strategy full substitution cofinal 
counterexamples demonstrating confluence fails soon term graph rewriting extended copying collapsing 
definition non overlapping term overlaps term subterm variable substitutions oe oe 
term rewriting system non overlapping rules overlaps subterm 
theorem non overlapping term graphs term graph tr tr tr tr proof 
proof sta slightly different technical framework 
proof conforming setting plu part proof called critical pair lemma :10.1.1.27.8770
call relation term graph known implies confluence arbitrary binary relations see klo :10.1.1.35.425
corollary non overlapping 
rest section assume arbitrary non overlapping system 
property relations needed showing full substitution strategy cofinal 
corollary term graphs implies term graph proof 
induction length 
going show complete developments sets redexes yield unique results 
fact allows define full substitution strategy 
section property strategy prove confluent modulo bisimilarity orthogonal rewrite systems 
non overlapping redex hv ri uniquely determined node section treat redexes nodes 
definition residuals pi set redexes term graph set ae pi residuals pi respect rewrite sequence defined follows 
length ae pi pi unique isomorphism form ae pi set residuals tr pi gamma fvg respect substitution oe mapping set terms sigma oe constant oe tn oe oe composite term tn 

non overlapping systems assumption non overlapping residuals redex set redexes 
note different term rewriting property may fail rules repeated variables left hand sides 
definition development development set pi redexes term graph derivation length derivation form pi development residuals pi development complete pi residuals theorem uniqueness developments set pi redexes term graph complete developments pi isomorphism term graph 
proof 
consider complete developments pi 
proceed induction number redexes pi 
pi empty definition complete development 
necessarily distinct nodes pi form proof theorem steps residuals respectively residuals pi respect see plu :10.1.1.27.8770
complete development redex set pi tr pi gamma fv tr pi gamma fv 
complete developments tr pi gamma fv 
induction hypothesis analogously shows term graph denote cpl term graph results complete development redexes process repeatedly developing redexes called full substitution gross knuth strategy context term rewriting systems see klo :10.1.1.35.425
show strategy cofinal term graph rewriting non overlapping systems 
theorem term graphs implies cpl 
proof 
induction length suppose term graph induction hypothesis cpl 
corollary term graph cpl 
definition complete development cpl 
follows cpl 
confluence longer hold collapsing copying added counterexamples demonstrate 
examples show relations coll copy bi confluent modulo bisimilarity non overlapping systems general 
example consider non overlapping system huet hue result appears proof 

orthogonal systems demonstrates tree representing non isomorphic normal forms respect coll coll bi confluent confluent modulo bisimilarity 
note left hand sides rewrite rules contain variable twice 
coll coll coll coll coll non confluence coll bi example rule contains occurrences left hand side 
shows non overlapping systems copy need confluent confluent modulo bisimilarity 
see observe graph right normal form respect copy demonstrates plain term graph rewriting confluent modulo bisimilarity non overlapping systems general 
rewrite step left proper graphs middle right bisimilar 
copy copy non confluence copy 
orthogonal systems counterexamples previous section show non overlapping systems coll copy bi need confluent modulo bisimilarity relations need confluent 
section clear failure caused exception coll rewrite rules repeated variables left hand sides 
definition orthogonal term rewriting system left linear rewrite rule variable occurs system orthogonal left linear non overlapping 

orthogonal systems main result section orthogonal systems plain term graph rewriting confluent modulo bisimilarity 
far confluence concerned know previous section confluent non overlapping systems particular orthogonal systems 
section shown copy bi confluent classes systems properly include orthogonal systems 
contrast term graph rewriting collapsing need confluent orthogonal systems 
example consider single rule suppose sigma contains binary function symbol shows coll derivations starting mf resulting graphs common reduct coll graphs derivable left represent terms graphs derivable right represent 
coll non confluent 
notice church rosser modulo coll coll coll coll non confluence coll lemma orthogonal 
term graphs implies cpl cpl 
proof 
complete development cpl redexes term graph corresponding complete development term term cpl redexes term see proof slightly different technical setting 
orthogonal term rewriting systems complete developments set redexes yield result hl term term implies term cpl term cpl 
worth mentioning lemma hold non overlapping systems 
counterexample ff ag graph middle bisimilar graph right normal form respect 
theorem orthogonal confluent modulo bisimilarity 
proof 
suppose theorem cpl cpl 
choosing max obtain cpl cpl 
cpl cpl follows lemma 

general systems corollary orthogonal weakly normalizing church rosser modulo bisimilarity 
proof 
combine theorem lemma 
corollary generalized theorem orthogonality weakened conjunction confluence 

general systems section drop assumption previous sections non overlapping 
infer confluence bi copy coll confluence term rewriting 
case copy coll requires suitable conditions 
give sufficient conditions confluence term rewriting church rosser modulo bisimilarity 
show term graph rewriting collapsing copying simulate term rewriting proof called completeness theorem plu :10.1.1.27.8770
theorem term graphs bi term term proof 
soundness bi suppose term rewrite step term graphs mt mu term term implies bi lemma follows bi show rule applied associated redex position unique node mt specified collapsing mt fully collapsed image node belonging indegree 
structure step term 
fully collapsed applicable contains repeated variables unique path root simulates mu 
aware generality relation bi termination efficiency problems 
particular bi non terminating term graph representing term containing occurrences subterm 
graph admits infinite sequence alternating collapse copy steps 
contrast coll copy terminating term rewrite relation terminating 
apart non termination search space computing term normal form bi may larger coll 
see plu rao conditions coll suffices compute term normal forms :10.1.1.27.8770
binary relation set terminating strongly normalizing exist infinite sequence 
general systems corollary relation bi confluent confluent 
proof 
suppose terms mt bi mt bi mt theorem 
bi confluent term graph mt bi bi mt term theorem 
derivations bi bi theorem yields term term term 
confluent term term term 
theorem follows bi mt bi term mt order simulate term rewriting copy underlying system left linear 
theorem left linear terms mt copy mu proof 
immediate consequence soundness copy suffices show term rewrite step term graph mt mu rule applied left linear mt term graph node corresponding redex position sharing mt term mu 
corollary left linear copy confluent confluent 
proof 
easy consequence theorem soundness copy consider derivations copy copy soundness copy term term term 
confluence implies term term term 
theorem follows copy mt copy 
lemma copy mt copy corollary implies copy confluent particular orthogonal systems 
known orthogonality implies confluence term rewriting see example dj klo 
analogue corollary case coll obtained replacing condition left linearity weak normalization coll theorem plu coll weakly normalizing coll confluent confluent :10.1.1.27.8770
general weak normalization coll implies follows weak normalization 
rules left linear properties equivalent 

general systems lemma left linear coll weakly normalizing weakly normalizing 
proof 
left linearity implies normal form respect normal form respect coll hp shown derivation coll transformed minimally collapsing derivation coll left linear implies normal form respect coll term term normal form respect 
normal form respect 
conclude section giving conditions confluence guarantees church rosser modulo bisimilarity 
turns left linearity weak normalization needed 
theorem left linear confluent weakly normalizing modulo bisimilarity 
proof 
lemma suffices show confluent modulo bisimilarity 
constellation consider normal forms respectively 
term term term term soundness 
normal forms left linear term term normal forms respect 
left linearity implies tree term rewrite rule term graph graph morphism applicable term 
confluence yields term term premise theorem relaxed dropping left linearity weak normalization witnessed example respectively 
examples confluent modulo bisimilarity 
weak normalization replaced weak normalization 
demonstrate counterexample plu :10.1.1.27.8770
example suppose consists rules structural induction terms easy verify term unique normal form 
weakly normalizing confluent 
shows confluent confluent modulo bisimilarity 
notice graph rewrite step og mg corresponding term rewrite step 
assumptions theorem guarantee confluent 
seen example 
terminating orthogonal overlapping term rewrite steps satisfy overlap occurs roots left hand sides applied rules 

rewriting modulo bisimilarity non confluence 
rewriting modulo bisimilarity seen relation bi behaves nicely respect confluence confluent term rewriting confluent 
drawback bi remarked previous section non terminating term graph containing different nodes representing term 
show problem disappears moving bi rewriting bisimilarity classes 
turns term graph rewriting modulo bisimilarity behaves respect confluence termination exactly term rewriting 
call equivalence class term graph respect bisimilarity class denote 
definition relation bisimilarity classes defined follows 
reflexive transitive closure denoted refer term graph rewriting modulo bisimilarity 
lemma term graphs bi proof 
straightforward induction length derivation bi induction length 
mg bi suppose term graph bi term graphs follows bi bi bi bi notice equivalence hold transitive closures bi bi collapse copy step hold general 

theorem equivalent confluent 
bi confluent 
confluent 
proof 
equivalence follows lemma equivalent corollary 
going show rewriting bisimilarity classes terminates term rewriting terminates 
lemma says term graph rewriting modulo generalizes term rewriting step corresponds non empty sequence term rewrite steps term rewrite step corresponds class rewrite step 
lemma term graphs implies term term term term implies 
proof 
holds soundness see theorem 
proof theorem shown term rewrite step term graphs mt mu 
mg mh 

result immediate consequence lemma 
theorem relation terminating 
positive negative results confluence confluence modulo bisimilarity church rosser property modulo bisimilarity summarized table 
tables means respective confluence property holds conditions gamma indicates exists counterexample 
exponents refer corresponding results counterexamples 
conditions confluence considered forbid overlaps term rewrite rules require confluence associated term rewrite relation 
tool analyzing confluence critical pairs term graph rewrite steps 
refer plu definition decide confluence coll presence termination :10.1.1.27.8770

table overview confluence coll copy bi orthogonal gamma non overlapping gamma gamma gamma gamma confluent gamma gamma gamma left linear confluent gamma gamma confluent coll weakly normalizing gamma gamma left linear confluent terminating gamma table confluence properties modulo confluent modulo church rosser modulo orthogonal gamma non overlapping confluent terminating gamma gamma left linear confluent weakly normalizing gamma gamma left linear confluent weakly normalizing ak ariola jan willem klop 
equational term graph rewriting 
fundamenta informaticae 
ariola jan willem klop detlef plump 
confluent rewriting bisimilar term graphs 
proc 
fourth workshop expressiveness concurrency volume electronic notes theoretical computer science 
elsevier 
harold abelson gerald jay sussman 
structure interpretation computer programs 
mit press 
hendrik barendregt marko van eekelen john richard kennaway rinus plasmeijer ronan sleep 
term graph rewriting 
proc 
parallel architectures languages europe volume lecture notes computer science pages 
springer verlag 
cd andrea corradini frank 
cyclic term graph rewriting adequate rational parallel term rewriting 
technical report tr universit di pisa dipartimento di informatica 
dj nachum dershowitz jean pierre jouannaud 
rewrite systems 
jan van leeuwen editor handbook theoretical computer science volume chapter 
elsevier 
hl erard huet jean jacques evy 
computations orthogonal rewrite systems ii 
jean louis lassez gordon plotkin editors computational logic essays honor alan robinson pages 
mit press 
hp berthold hoffmann detlef plump 
jungle evaluation efficient term rewriting 
proc 
algebraic logic programming 
mathematical research pages berlin 
akademie verlag 
springer lecture notes computer science 
hp habel detlef plump 
term graph narrowing 
mathematical structures computer science 
hue erard huet 
confluent reductions properties applications term rewriting systems 
journal acm 
richard kennaway jan willem klop ronan sleep fer jan de vries 
adequacy term graph rewriting simulating term rewriting 
acm transactions programming languages systems 
klo jan willem klop :10.1.1.35.425
term rewriting systems 
abramsky dov gabbay maibaum editors handbook logic computer science volume pages 
oxford university press 
plu detlef plump :10.1.1.27.8770
graph reducible term rewriting systems 
proc 
graph grammars application computer science volume lecture notes computer science pages 
springer verlag 
plu detlef plump :10.1.1.27.8770
collapsed tree rewriting completeness confluence modularity 
proc 
conditional term rewriting systems volume lecture notes computer science pages 
springer verlag 
plu detlef plump :10.1.1.27.8770
evaluation functional expressions hypergraph rewriting 
dissertation universitat bremen fachbereich mathematik und informatik 
plu detlef plump :10.1.1.27.8770
critical pairs term graph rewriting 
proc 
mathematical foundations computer science volume lecture notes computer science pages 
springer verlag 
rao krishna rao 
graph reducibility term rewriting systems 
proc 
mathematical foundations computer science volume lecture notes computer science pages 
springer verlag 
sta john staples 
computation graph expressions 
theoretical computer science 
