adaptation genetic algorithms engineering design optimization andrew cs rutgers edu cs rutgers edu computer science department rutgers university new brunswick nj usa fax genetic algorithms extensively different domains means doing global optimization simple reliable manner 
realistic engineering design optimization domains observed simple classical implementation ga binary encoding bit mutation crossover inefficient unable reach global optimum 
floating point representation eliminate problem 
describe way augmenting ga new operators strategies take advantage structure properties engineering design domains 
empirical results initially domain conceptual design supersonic transport aircraft domain high performance supersonic missile inlet design demonstrate newly formulated ga significantly better classical ga terms efficiency reliability 
www cs rutgers edu papers html appeared fourth international conference artificial intelligence design evolutionary systems design workshop june genetic algorithms search algorithms mimic behavior natural selection 
genetic algorithms gas attempt find best solution problem maximum function generating collection population potential solutions individuals problem mutation recombination crossover operations better solutions hopefully generated current solutions 
process continues acceptably solution 
gas lot advantages search techniques ability deal different kinds domains continuous variable domains discrete quantized variable domains mixed type variable domains 
classical approach convert variables involved search domain binary integers encode individual solution population bit string 
subsequently mutation recombination operations bit manipulation operations 
representation successful solving numerous problems various domains science engineering 
problem involves continuous variables case uncommon engineering design domains effective operators floating point representations may 
design domains investigated research search space induced number continuous design parameters potential solution vector point multidimensional vector space 
value fitness point determined simulator may may able accurately produce value point 
evaluable points search space evaluable points feasible points representing physically realizable designs infeasible points 
evaluable points observed form slab evaluable regions axis parallel pointed classical crossover operator ga give results 
addition sparsity evaluable feasible region implies classical mutation operator flips bits random better random search 
reasons non standard crossover operator line crossover mutation operator shrinking window mutation 
fact evaluating fitness individual entails run numerical simulator may take seconds necessary desirable techniques ai machine learning search somewhat focused avoid evaluating fitness individual knowledge gathered search suggests better existing individuals 
guided crossover machine learning screening module introduced research experimental results indicate tremendously improved performance ga domains 
ga modifications ga adapted design optimization domain selecting existing methods policies suitable problem proposing new techniques 
adaptations applied ga suitable search spaces consideration ffl representation individual ga population represented list design parameters aircraft missile 
parameter continuous interval range 
binary floating point representation individual research 
fitness individual sum takeoff mass corresponding aircraft penalty function 
ffl selection selection rank wide range fitness values caused penalty function 
rank selection prevents discovered evaluable feasible points dominating population 
ffl line crossover operator may viewed generalized version linear crossover operator introduced 
candidates crossover selected crossover done joining line candidates choosing point random line extensions side 
formal proof method works informal argument line joining points design space represents design trend increasing length decreasing length proportion line joining points represent relatively designs contain points represent designs line joining point represents bad design point represents design represents improvement design trend lead designs probably extension part 
case search spaces evaluable regions slab structure line joining evaluable points remain evaluable region uncover better points search space 
ffl shrinking window mutation operator may viewed simplified version dynamic mutation operator introduced 
crossover done line crossover operator described point resulting crossover directly introduced ga population new individual 
mutation operation done parameters composing point perturbed random amount amplitude function value parameter stage optimization 
early stages optimization perturbation allowed relatively large amplitude decreases number iterations elapsed 
idea intended add flavor simulated annealing search helps exploring search space preventing premature clustering 
ffl machine learning screening operation may useful point evaluation expensive 
screening module decides point correspond design invoking simulator module relies history current search decision 
currently module uses simple machine learning approach module keeps relatively large random sample points encountered search far typically sample times size ga population large total number points encountered search far 
size sample selected speed simulator domain knowledge available 
candidate point generated crossover mutation evaluated module finds nearest neighbor candidate point sample 
nearest neighbor fitness better threshold point evaluated added ga population point just discarded 
choice threshold important success search fitness worst member current ga population threshold gave results 
ffl guided crossover late stages search operator starts take part 
guided crossover operation works follows 
candidate point selected ga population normal selection rule selection rank research called candidate 
second candidate point selected ga population different way point ga population candidate quantity candidate computed 
fitness gamma fitness distance value maximizes candidate taken candidate 
candidate candidate swapped necessary candidate point higher fitness 

result crossover point line joining candidate candidate selected random small region candidate better point 
words result candidate gamma candidate interval guided crossover operator greedy consequently line crossover small percentage time late stages search current implementation time second half search 
mutation guided crossover operator 
guided crossover operator believed contribute lot task improving steady state behavior search defined close final solution global optimum 
main reason introducing operator desire endow ga way get close optimum advantage gradient methods usually ga having compute gradients may expensive compute domains high dimensions expensive simulation evaluations 
ffl replacement strategy replacement strategy takes consideration fitness proximity points ga population goal select replacement point 
relatively low fitness 
relatively close point introduced percent deviation global optimum number iterations new ga results classical ga results performance comparison classical adapted ga aircraft design domain experimental results experiment aircraft design domain experiment test effect adaptations previous section eleven dimensional design space optimizer varied eleven aircraft conceptual design parameters continuous range values 
domain described detail 
experiment done random populations points generated 
population ga allowed proceed iterations iteration denotes call simulator takes seconds average time floating point representation line crossover operator shrinking window mutation operator guided crossover operator machine learning screening module 
time binary bit string representation classical bit string crossover operator bit mutation operator machine learning screening module 
times selection replacement strategies 
results shown 
clearly demonstrates introduced modifications strongly improved ga performance 
important note evaluation function output numerical simulator refer best design optimization attempts global optimum fact formal proof global 
global optimum ga run iterations 
runs classical implementation ga failed get deviation global optimum note minimization problem average deviation runs 
hand runs adapted implementation ga got deviation global optimum average deviation runs 
steady state deviation global optimum improved factor 
superiority adapted ga surprise 
line crossover operator produce child points stay slab evaluable feasible region provided parent points evaluable feasible region classical crossover operator produce child points outside evaluable feasible region domain 
machine learning screening module plays important role pruning search saving time lost examining bad points guided crossover operator job fine tuning optima 
important note collection conventional optimization techniques representative categories optimization paradigms applied minimization problem adapted ga successful methods aircraft design optimization domain 
best conventional method multistart state art implementation sequential quadratic programming method total cost iterations failed reach global optimum iterations adapted ga got deviation global optimum 
second experiment supersonic missile inlet design domain experiment conducted supersonic missile inlet design domain continuous design variables 
domain described detail 
main purpose experiment investigate effect machine learning screening module performance 
experiment done random populations points generated 
population ga allowed proceed iterations iteration denotes call simulator takes seconds average time fully adapted ga experiment time adaptations 
results shown 
clearly demonstrates speeded convergence runs global optimum region 
runs got global optimum iterations runs vicinity away global optimum number iterations 
sequential quadratic programming quasi newton method solves nonlinear constrained optimization problem fitting sequence quadratic programs 
percent deviation global optimum number iterations new ga results new ga ml results performance comparison classical adapted ga missile inlet design domain related great deal done area numerical optimization algorithms published particular difficulties attempting optimize functions defined large real world numerical simulators 
number research efforts combined ai techniques numerical optimization 
ga works attempt extensively adapt domain done research shelf implementation ga usually 
limitations modifications done ga increased reliability global optimizer high potential finding supreme points design search space reasonable amount time 
ga search improved ways 
ways intend investigate ffl ai agent module online adjustment ga parameters population size mutation rate way optimization progresses 
module supplement machine learning module achieving goal speeding search making reliable 
ffl may possible achieve great gain performance reformulating ga search problem continuous variable search spaces follows algorithm maintains active populations population points usual second population directions 
individuals direction population may obtained joining lines individuals points population ways 
search may proceed selecting point points population direction directions population hopefully come better points better directions add populations 
ideas researched update populations selection replacement strategies question come new points directions existing ones interesting 
idea investigated near 
important note modifications classical ga introduced machine learning screening applicable case evaluations expensive case simulator additional computational overhead introduce may justified 
adaptation ga design optimization spaces 
experimental results domain aircraft design optimization demonstrate adapted ga steady state error times better classical ga amount time 
improvement valuable design domains improvement design may translate millions dollars saving long run 
acknowledgments aircraft design expert gene lockheed invaluable assistance research 
members project especially donald smith keith miyake mark 
research partially supported nasa nag part rutgers design project supported advanced research projects agency department defense contract arpa dabt 
agogino 
techniques integrating qualitative reasoning symbolic computing 
engineering optimization 

concepts aircraft design environment 
aerospace design conference irvine ca february 
aiaa 

application artificial intelligence technology aeronautical system design 
aiaa ahs aircraft design systems operations meeting atlanta georgia september 
aiaa 

machine learning engineering techniques speed numerical optimization 
technical report oregon state university department computer science 
ph thesis 
andrew mark don smith 
modeling knowledge guide design space search 
appear fourth international conference artificial intelligence design 
philip gill walter murray margaret wright 
practical optimization 
academic press london new york 
david goldberg 
genetic algorithms search optimization machine learning 
addison wesley reading mass 

statistical machine learning cognitive selection nonlinear programming algorithms engineering design optimization 
advances design automation boston ma 
michalewicz 
experimental comparison binary floating point representations genetic algorithms 
proceedings fourth international conference genetic algorithms pages 
morgan kaufmann 
lawrence zhou 
user guide version code solving large scale constrained nonlinear minimax optimization problems generating iterates satisfying inequality constraints 
technical report tr institute systems research university maryland august 
jorge mor stephen wright 
optimization software guide 
siam philadelphia 
papalambros wilde 
principles optimal design 
cambridge university press new york ny 
anthony francis sullivan uhl jr mathematics nonlinear programming 
springer verlag new york 
powell 
inter gen hybrid approach engineering design optimization 
technical report rensselaer polytechnic institute department computer science december 
ph thesis 
powell skolnick 
genetic algorithms engineering design optimization non linear constraints 
proceedings fifth international conference genetic algorithms pages university illinois urbana champaign july 
morgan kaufmann 
sobieski james 
structural optimization multilevel decomposition 
aiaa journal november 
siu shing tong david powell sanjay goel 
integration artificial intelligence numerical optimization techniques design complex aerospace systems 
aerospace design conference irvine ca february 
aiaa 
garret 
numerical optimization techniques engineering design applications 
mcgraw hill new york 
brian williams jonathan 
activity analysis qualitative analysis stationary points optimal reasoning 
proceedings th national conference artificial intelligence pages seattle washington august 
wright 
genetic algorithms real parameter optimization 
workshop foundations genetic algorithms classifier systems pages indiana university bloomington july 
morgan kaufmann 

zha smith knight 
high performance supersonic missile inlet design automated optimization 
appear aiaa symposium multidisciplinary analysis optimization 
