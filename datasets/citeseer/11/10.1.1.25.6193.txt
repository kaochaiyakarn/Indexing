empirical software engineering journal march pp 
empirical studies control dependence graph size programs mary jean harrold james jones gregg rothermel computer information science computer information science computer science ohio state university ohio state university oregon state university lab lab hall columbus oh columbus oh corvallis harrold cis ohio state edu cis ohio state edu cs orst edu tools techniques performing software engineering tasks require control dependence information represented form control dependence graphs 
worst case analysis graphs shown size may quadratic number statements procedure represent 
despite result empirical studies suggest practice relationship control dependence graph size program size linear 
studies performed relatively small number fortran procedures derived numerical methods programs 
investigate control dependence size implemented tools constructing popular types control dependence graphs ran tools functions extracted wide range source programs 
results support earlier control dependence graph size 
software engineering techniques tools rely control dependence information 
techniques selecting test data determining test set adequacy extending data flow testing approaches generating reduced test sets programs determining retesting required program modifications integrating different versions programs performing static dynamic slicing information 
represent control dependence information techniques typically control dependence graphs 
attempts scale techniques handle large programs constrained memory disk space required construct store control dependence graphs programs 
worst case analysis cytron shows size control dependence graph procedure quadratic size control flow graph quadratic number statements study fortran routines set matrix eigensystem routines cytron practice relationship control dependence graph size program size linear 
larger study cytron ferrante sarkar fortran procedures popular numerical analysis programs showed linear relationship size control dependence graph number program statements 
study relationship control dependence graph size program size performed studies variety programs subjects 
function programs recorded number executable statements function size control dependence graphs function 
endif exit entry exit entry 
read 
sum 

read 

sum sum 
sum 
done 
endif endif 
print sum endwhile 
done procedure sums sums procedure sums control flow graph upper right control dependence graph regions lower left control dependence graph regions lower right 
performed linear regression analysis fit line data computed correlation coefficient determine regression line fit data 
results support earlier practice control dependence graph size linear number program statements suggest relationship holds general purpose scientific programs 
addition studies utilized popular varieties control dependence graphs results show linear relationship persists varieties graphs variety offers significant space savings 
control dependence graphs control dependence graph encodes control dependencies procedure monolithic program 
control dependence defined terms control flow graphs postdominance relation 
control flow graph augmented unique entry exit nodes nodes graph directed path exit including exit contains example depicts procedure sums upper left control flow graph upper right labels control flow graph correspond statement numbers program 
control flow graph postdominates nodes postdominates postdominates postdominates 
statements nodes control flow graph control dependent exists directed path excluding control dependence graph encodes control dependencies program 
nodes control dependence graph represent single statements 
control dependence graph sums shown lower right 
control dependence graph contains types nodes 
statement nodes shown ellipses represent simple statements 
predicate nodes depicted squares correspond statements edges may originate 
node numbers labeling statement predicate nodes correspond statement numbers program 
ferrante ottenstein warren give method inserting region nodes summarize nodes identical control dependencies 
control dependence graph sums region nodes inserted shown lower left 
region nodes shown circles group nodes share control dependencies 
example nodes control dependent true region node represents control dependency 
empirical results objective study investigate relationship program size control dependence graph size popular varieties control dependence graphs sample population functions various sizes drawn variety programs 
hypothesis functions demonstrate linear relationship program control dependence graph size irrespective variety programs involved 
evaluation hypothesis required tools constructing control dependence graphs sample population functions 
construct control dependence graphs gather data graphs subjects aristotle analysis system 
aristotle processes source code computes various types information code analysis tools 
code analysis tools uses function control flow graph construct control dependence graph region nodes function algorithm 
implemented tool takes control dependence graph region nodes input creates corresponding control dependence graph region nodes 
definition postdominance include initial node path node postdominates 
number avg 
number program name functions analyzed exec 
stmts description agrep fast grep unix utility aristotle aristotle analysis system bash unix bourne shell finger unix finger utility gcc gnu compiler gdb gnu debugger unix utility miscellaneous collection functions player player module empire internet game mcc modular extensible compiler unix shell compiler graph visualizer sample population subjects studies collected functions variety programs 
table summarizes information subjects 
program table lists program name number functions program analyzed average number lines code functions analyzed brief description program 
calculate size functions counted executable source code statements count blank lines comments preprocessor directives data declarations 
offer additional descriptions subjects 
agrep fast regular expression parser 
aristotle program analysis system system studies provides static dynamic analyses programs consists user interface parsers code various analysis tools 
bash version bourne unix shell 
finger version tool provides user information 
gcc version gnu compiler included gcc functions perform tasks register allocation target code generation 
gdb version gnu debugger 
version utility assists maintenance modification regeneration programs 
miscellaneous summarizes number small programs euclid subjects studies testing techniques 
player module internet game empire studies regression test selection techniques 
mcc experimental compiler written facilitate evaluation machine dependent code optimizations 
version unix shell 
version compiler graph visualizer 
foregoing tools functions conducted studies 
study compared number executable statements function size control dependence graph region nodes function 
second study compared number executable statements function size control dependence graph region nodes function 
sizes control dependence graphs measured terms count total nodes edges 
study yielded set ordered pairs 
pairs coordinate represents number executable statements function second coordinate represents size control dependence graph function 
plotted ordered pairs scatter graph study 
microsoft excel fit regression curves data calculate square pearson product moment correlation coefficient dimensionless index ranges zero inclusive reflects extent linearity data sets 
value indicates perfectly linear relationship noise data study available request 
value zero indicates random relationship 
contains scatter graph shows function number executable statements versus size control dependence graph region nodes 
computed regression line represented equation gamma number executable statements size control dependence graph region nodes 
square pearson product moment correlation coefficient linear regression 
contains scatter graph shows function number executable statements versus size control dependence graph region nodes 
computed regression line represented equation number executable statements size control dependence graph region nodes 
square pearson product moment correlation coefficient linear regression 
drawing data set functions analyzed studies inclusive types functions results support predictions functions types lie categorical bounds 
particular results supported confidence functions executable statements sample population contain sufficient number functions size support 
fact located small number functions size indicates functions may rare practice 
considerations results clearly demonstrate linear relationship number executable statements function size control dependence graph 
high square pearson product moment correlation coefficient reflects high linearity relationship 
results hold graphs contain region nodes graphs 
results support hypothesis practice control dependence graph size linear number executable statements program 
acknowledgments partially supported microsoft nsf ccr ohio state university 
michael gray gathered data study 
agrawal demillo spafford 
dynamic slicing presence unconstrained pointers 
proceedings symposium testing analysis verification pages october 
agrawal horgan london 
incremental regression testing 
proceedings conference software maintenance pages september 
agrawal horgan 
dynamic program slicing 
proceedings acm sigplan conference programming language design implementation pages june 
bates horwitz 
incremental program testing program dependence graphs 
proceedings th acm symposium principles programming languages pages january 
binkley 
semantic differencing reduce cost regression testing 
proceedings conference software maintenance pages november 
number executable statements scatter graph containing point function horizontal axis represents numbers executable statements vertical axis represents sizes control dependence graph region nodes 
number executable statements scatter graph containing point function horizontal axis represents numbers executable statements vertical axis represents sizes control dependence graph region nodes 
cytron ferrante rosen wegman zadeck 
efficient method computing static single assignment form 
popl pages january 
cytron ferrante sarkar 
compact representations control dependence 
proceedings acm sigplan conference programming language design implementation pages june 
duesterwald gupta soffa 
rigorous data flow testing output influences 
second irvine software symposium pages march 
ferrante ottenstein warren 
program dependence graph optimization 
acm transactions programming languages systems july 
gupta harrold soffa 
approach regression testing slicing 
proceedings conference software maintenance pages november 
gupta soffa 
employing static information generation test cases 
journal software testing verification reliability december 
harrold larsen lloyd page rothermel singh smith 
aristotle system development program analysis tools 
proceedings rd annual southeast conference pages march 
horwitz prins reps integrating non interfering versions programs 
acm transactions programming languages systems july 
korel 
program dependence graph static program testing 
information processing letters january 
rothermel harrold 
safe efficient algorithm regression test selection 
proceedings conference software maintenance pages september 
rothermel harrold 
selecting tests identifying test coverage requirements modified software 
proceedings international symposium software testing analysis pages august 
smith boyle dongarra moler 
matrix eigensystem routines guide 
springer verlag 
smith 
mcc modular extensible compiler 
master thesis clemson university august 

