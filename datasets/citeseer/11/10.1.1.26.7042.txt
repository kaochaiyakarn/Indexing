computationally private information retrieval polylogarithmic communication christian cachin silvio micali markus stadler february preliminary version appears proceedings eurocrypt stern ed lecture notes computer science springer 
single database computationally private information retrieval scheme polylogarithmic communication complexity 
construction new reasonable intractability assumption call phi hiding assumption essentially difficulty deciding small prime divides oe composite integer unknown factorization 
keywords integer factorization euler function phi hiding assumption private information retrieval 
private information retrieval 
notion private information retrieval pir short introduced chor goldreich kushilevitz sudan received lot attention 
study pir motivated growing concern user privacy querying large commercial database 
problem independently studied cooper birman cb implement anonymous messaging service mobile users 
ideally pir problem consists devising communication protocol involving just parties database user having secret input 
database secret input called data string bit string delta delta delta user secret input integer protocol enable user learn communication efficient way time hide database 
trivial inefficient solution having database send entire string user 
information theoretic pirs database replication 
surprisingly original shows pir problem solvable efficiently information theoretic setting database consist single player multiple players holding data string communicate user model ibm zurich research laboratory ch switzerland cachin acm org 
research done laboratory computer science mit 
laboratory computer science mit cambridge ma usa 
crypto ag box ch switzerland markus stadler acm org 
reminiscent multi prover proof systems 
saying model offers information theoretic solution mean individual database player learn matter computation may perform long collude database players 
solutions model chor example database information theoretic pirs communication complexity log database information theoretic pirs polylog communication complexity 
subsequent ambainis gives construction database information theoretic pirs gamma communication complexity amb 
computational pirs database replication 
notice informationtheoretic pirs achieve communication complexity require constant number database servers 
chor gilboa cg show possible achieve communication complexity minimal database replication requires computational privacy user input theoretically weaker practically sufficient notion 
give database pir scheme communication complexity 
system security parameter guarantees long individual database performs polynomial amount computation collude learns value computational pirs database replication 
possibly viable assumption database servers separated mirror database contents may practical 
fortunately surprisingly kushilevitz ostrovsky ko show replication needed 
known number theoretic assumption prove existence single database computational pir communication 
precisely quadratic residuosity assumption gm exhibit protocol user database communication complexity represents length data string 
brevity refer single database computational pir 
noted ko additional communication complexity polynomial security parameter additional amount communication de facto absorbed mentioned complexity practical purposes chosen quite small 
result raised question possible construct lower communication complexity 
main result 
provide positive answer question new plausible number theoretic assumption phi assumption short 
consists parts phi hiding assumption phi sampling assumption 
informally states computationally intractable decide small prime divides oe composite integer unknown factorization 
recall oe euler function computing oe input hard factoring 
states possible efficiently find random composite prime divides oe 
simple concrete 
finding crisp plausible assumptions important task design analysis cryptographic protocols believe prove useful contexts attract study 
prove main theorem round communication complexity polylogarithmic polynomial security parameter 
note essentially optimal ways communication complexity 
disregarding privacy user input altogether order user obtain ith bit bit data string log bits communicated user database case 
computational complexity 
efficient computational complexity point view 
user runs time polynomial log database runs time proportional times polynomial properties close optimal context 
user computational complexity close optimal mentioned scheme achieving sub linear communication user send log bits information perform log steps computation 
database computational complexity close optimal database read bit data string single database pir 
know user possibly received unread bits gain information user input 
round complexity 
round complexity essentially optimal long user choose input execution single round exists privacy model 
achieves computational privacy 
information theoretic privacy stronger scheme optimal single database pirs pirs information theoretic privacy sending entire data string 
preliminaries definitions notation integers 
denote set natural numbers 
specified natural number binary expansion input algorithm 
denote unary expansion concatenation 
denote evenly divides writing ajb 
zz ring integers modulo zz multiplicative group 
euler function integer denoted oe defined number positive integers relatively prime strings 
oe binary strings denote oe length joej oe ith bit oe concatenation oe oe ffi rule possibility single round alternative models example model user learns bit position execution data string bits 
computation models 
algorithm mean probabilistic turing machine 
saying algorithm efficient mean exponentially small fraction random tapes runs fixed polynomial time 
gate circuit mean finite function computable acyclic circuitry boolean gates gate gate input output gate binary inputs binary output 
probability spaces 
taken gmr 
delta algorithm input notation refers probability space assigns string oe probability input outputs oe 
probability space denotes algorithm assigns element randomly selected finite set notation denotes algorithm assigns element selected probability space sample space uniform probability distribution sample points 
delta delta delta delta delta predicate notation prob delta delta delta delta delta delta denotes probability delta delta delta true ordered execution algorithms delta delta delta fully polylogarithmic proposed works rounds achieves polylogarithmic communication complexity polylogarithmic user computational complexity 
sake simplicity formalize types 
definition delta delta delta delta delta delta delta delta delta delta delta efficient algorithms 
say fully polylogarithmic computationally private information retrieval scheme polylog short exist constants 
correctness bit strings prob gamma 
privacy ck gate circuits fi fi prob gamma prob fi fi call fundamental constants data string database algorithm pair user algorithm query generator response retriever query secret associated response security parameter 
intuitively query contains user input response contains database bit contents unintelligible secret 
remarks 

correctness constraint slightly generalizes ko correctness required hold probability require hold high probability 

mentioned communication complexity polylogarithmic length data string times polynomial security parameter 
independent parameter course possible choose large polynomial dependence dominates polylogarithmic dependence choosing overkill definition guarantees exponential amount privacy polylogarithmic number theory useful sets 
define sets need assumptions constructions 
definition denote primes set primes length set composite integers product primes length 
large contains hardest inputs known factoring algorithm 
say composite integer oe hides prime 
denote set bit primes oe hidden denote set primes gamma denote set products bit primes oe hide bit prime 
useful facts 
state proof basic known number theoretic facts constructing 
fact exists efficient algorithm input outputs random prime primes fact exists efficient algorithm input outputs random element fact exists efficient algorithm input bit prime integer integer factorization outputs 
fact exists efficient algorithm inputs integer factorization outputs pth root mod assumptions 
phi assumption ffl phi hiding assumption ek gate circuits prob ffl phi sampling assumption exists sampling algorithm delta bit primes outputs random bit number oe hides integer factorization 
refer second third fourth fundamental constant respectively 
remarks 

revealing large prime dividing oe may compromise factorization 
prime efficiently factor inputs cop cop cop 
consequently easy decide divides oe similar known smaller suffices deciding divides oe hard just constant fraction shorter polynomially shorter 
note complexity factoring omega gamma log constant revealing prime dividing oe possibly compromise factorization significantly log significantly smaller log represented log bits revealing contribute speed dlog pe factoring note hold 
mod tell congruent mod mod 
case obvious divides oe gamma gamma 

weaker known widely accepted extended riemann hypothesis 
consider algorithm delta inputs bit prime output bit integer oe hides integer factorization 
code repeatedly choose random gamma bit integer pq prime 
choose random bit prime 
delta return 
algorithm finds suitable expected polynomial time see exercise chapter bs 
high level design high level user query consists compact program contains user input hidden way 
database runs program data string result computation response bit specifically compact program run data string bit bit fashion 
letting data string user sends database algorithm bit value security parameter database computes sequence bit values gamma 
value response user retrieves evaluating predicate hard guess secret key user 
high level design works essentially predicate enjoys properties relative sequence values 

gamma 


follows induction 
implementation specify polylog give database algorithm user algorithms query generator response retriever 
algorithms common efficient subroutines describe 
algorithm probabilistic primality test ss rab primality prover gk ah gain advantage notation presentation expense running time 
basic inputs 
number bit sequence integer unary security parameter 
log primality prover delta 
input integer binary 
output prime composite 
code see ah 
prime sequence generator delta delta delta 
inputs integer sequence bit strings gamma output bit integer prime overwhelming probability 
deterministic fixed generates sequence probable primes code 

oe aj ffi log bit representation gamma log bit representation 
gamma oe aj strings oe aj interpreted elements gf operations gf 

gammalog return halt go step 
query generator delta delta delta 
inputs integer outputs query secret bit composite second constant zz long sequence bit strings consists prime factorization 
code 
randomly independently choose gamma gamma 



choose random bit integer oe hides integer factorization 

choose random zz 
output query secret database algorithm delta delta delta 
inputs query output output zz code 

compute 

gamma mod 
output response response retriever delta delta delta delta delta inputs output zz output output bit 
overwhelming probability code th roots mod output output 
theorem polylog 
proof theorem running time sketch 
subroutine efficient inputs intensive operation consists times evaluating degree polynomial gf running primality prover algorithm efficient subroutines efficient bit prime overwhelming probability selecting random bit composite oe hiding efficient 
notice binary runs time polylogarithmic 
algorithm efficient performs essentially exponentiation mod bit data string runs time polynomial linear 
algorithm efficient fact factorization secret available input 
runs time polynomial length polynomial 
correctness sketch 
start quick dirty analysis prime sequence generator elements randomly independently selected execution values gammalog wise independent 
probability lower bounded gamma gammak prime prime 
length data string satisfies probability exponentially close possible outputs primes 
probability exponentially close consists random distinct primes length observe bit modulus oe hide constant number primes set randomly chosen bit primes exponentially small probability 
probability exponentially close prime sequence divide oe 
sum suffices correctness hold exponentially high probability assume execution random distinct primes length divides oe 
predicate zz th root mod 
user retrieves evaluating 
easy check properties high level design hold promised 

property follows fact function mod zz relatively prime oe 
theta exponentially small probability probability random element zz th root mod exponentially small 
assume th roots mod remember correctness hold time 

gamma 
follows th roots mod th roots mod primes dividing oe th roots mod size primes show exponentially small probability divides oe 


gamma property th roots mod gamma mod th roots mod construction 


part follows fact th roots mod exists mod mod th roots 
part see proof property 
privacy sketch 
suppose contradiction privacy condition hold 
exist indices log bk gate circuit binary output jff gamma ff ff prob theta ff prob theta intuitively advantage bigger exponentially small quantity 
define probability fi prob theta zz gf notice sequence experiments defining fi defines prime prime overwhelming probability guarantee oe hides 
follows jff gamma fij jff gamma fij 
assume jff gamma fij ff gamma fi 
construct guessing circuit contradict follows 
guessing circuit delta delta 
inputs number bit prime choose random ensuring th roots mod facilitate proving privacy constraint 
output bit indicating oe hides 
code 
choose uniformly random bit numbers 
run primality prover smallest 
returns 
lagrange interpolation find coefficients gamma polynomial oe gf degree gamma oe ij gamma oe ij oe ij gf corresponds bit string ffi prime sequence generator gamma 

choose random zz run 
returns return returns return 
notice constructed number gates polynomially greater number gates defined operates primes analyze behavior input distribution required probability probability calculate probability guesses correctly distribution drawn 
prob correct delta prob delta prob delta prob jp delta prob jp distribution output depends directly construction run input distribution definition ff case finds prime step assume case moment 
examine input distribution compare input distribution definition fi 
experiment leading fi contains distinct cases 
composite 


note case called occurs overwhelming probability 
ffi probability case computed assume moment random bit prime 
probability ffi random element primes upper bounded gammak gammak 
conditional probability case prime 
implies prob jp primes prob jp ffi consider case prime detected step 
ideal primality prover probability gamma ffi gammak 
bound prob correct prob correct delta gamma ffi delta prob jp delta gamma ffi delta gamma prob jp primes gamma ffi delta delta gamma ffi delta ff delta gamma ffi delta gamma fi gamma ffi delta gamma ff gamma ffi gamma fi gamma ffi gamma ffi delta gamma ffi gamma ffi inequality follows assumption ff gamma fi 
conclude distinguishes correctly probability gamma ffi gamma ffi intuitively ffi ffi exponentially small exceeds exponentially small quantity remains advantage exponentially small clear violates 
acknowledgments authors wish mao interesting comments earlier version 
ah leonard adleman ming huang recognizing primes random polynomial time proc 
th annual acm symposium theory computing stoc pp 

amb ambainis upper bound communication complexity private information retrieval proc 
th icalp lecture notes computer science vol 
springer 
manuel blum alfredo de santis silvio micali giuseppe noninteractive zero knowledge siam journal computing 
michael ben shafi goldwasser joe kilian avi wigderson multi prover interactive proofs remove intractability proc 
th annual acm symposium theory computing stoc pp 

bs eric bach jeffrey algorithmic number theory vol 
efficient algorithms mit press cambridge 
cb david cooper kenneth birman preserving privacy network mobile computers proc 
ieee symposium security privacy pp 

cg benny chor niv gilboa computationally private information retrieval proc 
th annual acm symposium theory computing stoc pp 

benny chor oded goldreich eyal kushilevitz madhu sudan private information retrieval proc 
th ieee symposium foundations computer science focs 
cop don coppersmith finding small root bivariate integer equation factoring high bits known advances cryptology eurocrypt maurer ed lecture notes computer science vol 
springer 
cop don coppersmith finding small root univariate modular equation advances cryptology eurocrypt maurer ed lecture notes computer science vol 
springer 
cop don coppersmith personal communication 
gk shafi goldwasser joe kilian primes quickly certified proc 
th annual acm symposium theory computing stoc pp 

gm shafi goldwasser silvio micali probabilistic encryption journal computer system sciences 
gmr shafi goldwasser silvio micali ronald rivest digital signature scheme secure adaptive chosen message attacks siam journal computing 
ko eyal kushilevitz ostrovsky replication needed single database computationally private information retrieval proc 
th ieee symposium foundations computer science focs pp 

rab michael rabin exchange secrets oblivious transfer tech 
report tr harvard 
ss solovay strassen fast monte carlo test primality siam journal computing 

