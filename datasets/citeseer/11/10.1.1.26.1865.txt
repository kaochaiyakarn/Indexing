ieee transactions systems man cybernetics part vol pp ant system optimization colony cooperating agents marco dorigo member ieee maniezzo alberto colorni iridia universit libre de bruxelles avenue franklin roosevelt cp brussels belgium 
email ulb ac url iridia ulb ac dorigo dorigo html politecnico di milano artificial intelligence robotics project dipartimento di elettronica informazione politecnico di milano piazza leonardo da vinci milano italy 
dipartimento di scienze dell informazione universit di bologna italy 
email maniezzo csr unibo centro di dei sistemi del cnr dipartimento di elettronica informazione politecnico di milano piazza leonardo da vinci milano italy 
email colorni polimi analogy way ant colonies function suggested definition new computational paradigm call ant system 
propose viable new approach stochastic combinatorial optimization 
main characteristics model positive feedback distributed computation constructive greedy heuristic 
positive feedback accounts rapid discovery solutions distributed computation avoids premature convergence greedy heuristic helps find acceptable solutions early stages search process 
apply proposed methodology classical traveling salesman problem tsp report simulation results 
discuss parameter selection early setups model compare tabu search simulated annealing tsp 
demonstrate robustness approach show ant system applied optimization problems asymmetric traveling salesman quadratic assignment job shop scheduling 
discuss salient characteristics global data structure revision distributed communication probabilistic transitions 
copyright notice copyright institute electrical electronics engineers 
published ieee transactions systems man cybernetics part vol pp 
material posted permission ieee 
permission ieee way imply ieee endorsement products services 
internal personal material permitted 
permission reprint republish material advertising promotional purposes creating new collective works resale redistribution obtained ieee sending blank email message info pub permission ieee org 
choosing view document agree provisions copyright laws protecting 
dorigo ant system optimization colony cooperating agents define new general purpose heuristic algorithm solve different combinatorial optimization problems 
new heuristic desirable characteristics versatile applied similar versions problem example straightforward extension traveling salesman problem tsp asymmetric traveling salesman problem atsp 
robust 
applied minimal changes combinatorial optimization problems quadratic assignment problem qap job shop scheduling problem jsp 
population approach 
interesting allows exploitation positive feedback search mechanism explained 
system amenable parallel implementations considered 
desirable properties counterbalanced fact applications ant system outperformed specialized algorithms 
problem shared popular approaches simulated annealing sa tabu search ts compare ant system 
believe case sa ts approach meaningful view applications problems similar known studied basic problems peculiarities application standard best performing algorithm impossible 
case example atsp 
approach discussed distribute search activities called ants agents simple basic capabilities extent mimic behavior real ants 
fact research behavior real ants greatly inspired see 
problems studied understand blind animals ants manage establish shortest route paths colony feeding sources back 
medium communicate information individuals regarding paths decide go consists pheromone trails 
moving ant lays pheromone varying quantities ground marking path trail substance 
isolated ant moves essentially random ant encountering previously laid trail detect decide high probability follow reinforcing trail pheromone 
collective behavior emerges form autocatalytic behavior ants trail attractive trail followed 
process characterized positive feedback loop probability ant chooses path increases number ants previously chose path 
consider example experimental setting shown fig 

path ants walking example food source nest vice versa see fig 
suddenly obstacle appears path cut 
position ants walking position walking opposite direction decide turn right left fig 

choice influenced intensity pheromone trails left preceding ants 
higher level pheromone right path gives ant stronger stimulus higher probability turn right 
ant reaching point autocatalytic positive feedback process process reinforces way causes rapid convergence limitation mechanism exists leads explosion 
ieee transactions systems man cybernetics part vol pp probability turn right left previous pheromone alternative paths 
path bcd shorter ant reach ant path fig 

result ant returning find stronger trail path caused half ants chance decided approach obstacle arrived ones coming bcd prefer probability path path 
consequence number ants path bcd unit time higher number ants 
causes quantity pheromone shorter path grow faster longer probability single ant chooses path follow quickly biased shorter 
final result quickly ants choose shorter path 
algorithms going define sections models derived study real ant colonies 
call system ant system algorithms introduce ant algorithms 
interested simulation ant colonies artificial ant colonies optimization tool system major differences real natural artificial ants memory completely blind live environment time discrete 
obstacle obstacle fig 

example real ants 
ants follow path points obstacle interposed ants choose go different paths equal probability 
shorter path pheromone laid 
believe ant colony metaphor useful explain model 
consider graph fig 
possible interpretation situation fig 
dorigo ant system optimization colony cooperating agents fix ideas suppose distances equal positioned half way see fig 

consider happens regular discretized intervals time 
suppose new ants come time unit ant walks speed time unit walking ant lays time pheromone trail intensity example simpler evaporates completely instantaneously middle successive time interval 
trail ants choice way go completely random 
average ants node go fig 

new ants come find trail intensity path leads laid ants went way trail intensity path obtained sum trail laid ants went way ants reached coming fig 

probability choosing path biased expected number ants going double going versus respectively 
true new ants came process continues ants eventually choose shortest path 
ants ants ants ants ants ants ants ants ants ants ants ants fig 

example artificial ants 
initial graph distances 
time trail graph edges ants choose turn right left equal probability 
time trail stronger shorter edges average preferred ants 
idea point ant choose different paths heavily chosen preceding ants high trail level chosen higher probability 
furthermore high trail levels synonymous short paths 
organized follows 
section ii contains description currently implemented definition application problem algorithm structure partially reflects problem structure introduce 
section iii describes slightly different ways apply proposed algorithm 
sections iv report experiments 
section vi compare heuristics section vii ieee transactions systems man cybernetics part vol pp substantiate versatility robustness showing applied optimization problems 
section viii informally discuss paradigm functions 
section ix 
ii 
ant system section introduce 
decided known traveling salesman problem benchmark order comparison heuristic approaches easier 
model definition influenced problem structure show section vii approach solve optimization problems 
set towns tsp stated problem finding minimal length closed tour visits town 
call dij length path towns case euclidean tsp dij euclidean distance dij xi xj yi yj 
instance tsp graph set towns set edges towns fully connected graph euclidean tsp 
bi number ants town time bi total number ants 
ant simple agent characteristics chooses town go probability function town distance amount trail connecting edge force ant legal tours transitions visited towns disallowed tour completed controlled tabu list completes tour lays substance called trail edge visited 
ij intensity trail edge time ant time chooses town time 
call iteration algorithm moves carried ants interval iterations algorithm call cycle ant completed tour 
point trail intensity updated formula ij ij ij coefficient represents evaporation trail time ij ij ij quantity unit length trail substance pheromone real ants laid edge th ant time ij th ant uses edge tour time lk constant lk tour length th ant 
dorigo ant system optimization colony cooperating agents coefficient set value avoid unlimited accumulation trail see note 
experiments set intensity trail time ij small positive constant order satisfy constraint ant visits different towns associate ant data structure called tabu list saves towns visited time forbids ant visit iterations tour completed 
tour completed tabu list compute ant current solution distance path followed ant 
tabu list emptied ant free choose 
define dynamically growing vector contains tabu list kth ant set obtained elements th element list th town visited th ant current tour 
call visibility ij quantity dij 
quantity modified run opposed trail changes previous formula 
define transition probability town town th ant ij pij ij ik ik allowed parameters control relative importance trail versus visibility 
transition probability trade visibility says close towns chosen high probability implementing greedy constructive heuristic trail intensity time says edge lot traffic highly desirable implementing autocatalytic process 
iii 
algorithms definitions preceding section called ant cycle algorithm simply stated follows 
time zero initialization phase takes place ants positioned different towns initial values ij trail intensity set edges 
element ant tabu list set equal starting town 
ant moves town town choosing town move probability function parameters see formula desirability measures 
trail ij gives information ants past chosen edge second visibility ij says closer town desirable obviously setting trail level longer considered stochastic greedy algorithm multiple starting points obtained 
iterations ants completed tour tabu lists full point ant value lk computed values ij updated formula 
shortest path ants saved tabu lists emptied 
process iterated tour counter reaches maximum user name chosen recalls tabu search proposed substantial differences approach tabu search algorithms 
mention absence aspiration function ii difference elements recorded tabu list permutations case tabu search nodes algorithms constructive heuristics case tabu search 
ieee transactions systems man cybernetics part vol pp defined number cycles nc max ants tour 
call case stagnation behavior denotes situation algorithm stops searching alternative solutions 
investigate situation section iv 
formally ant cycle algorithm 
initialize set time counter set nc nc cycles counter edge set initial value ij trail intensity ij place ants nodes 
set tabu list index place starting town th ant tabu 
repeat tabu list full step repeated times set choose town move probability pij equation time th ant town move th ant town insert town 
move th ant compute length lk tour described th ant update shortest tour edge tour described ij ij ij 
edge compute ij equation ij ij ij set set nc nc edge set ij 
nc nc max stagnation behavior empty tabu lists goto step print shortest tour dorigo ant system optimization colony cooperating agents complexity ant cycle algorithm nc 
algorithm nc cycles 
fact step step step 
step 
step step 
experimentally linear relation number towns best number ants see section complexity algorithm nc 
experimented algorithms called ant density ant quantity algorithms 
differ way trail updated 
models ant lays trail step waiting tour 
ant density model quantity trail left edge time ant goes model ant going leaves quantity dij trail edge time goes ant density model ij th ant goes time ant quantity model ij th ant goes time dij definitions clear increase trail edge ant goes independent dij ant density model inversely proportional dij ant quantity model shorter edges desirable ants ant quantity model 
iv 
experimental study parameter setting basic properties implemented algorithms ant cycle ant density ant quantity investigated relative strengths weaknesses experimentation 
developed mathematical analysis models yield optimal parameter setting situation ran simulations collect statistical data purpose 
parameters considered affect directly indirectly computation probability formula relative importance trail relative importance visibility trail persistence interpreted trail evaporation constant related quantity trail laid ants see formulas 
number ants set equal number cities see section explanation 
tested values parameter held constant simulations setting order achieve statistical information average evolution 
default value parameters 
experiment values changed tested different sets values discussed section 
values tested 
preliminary results obtained small scale problems tests reported section ieee transactions systems man cybernetics part vol pp stated oliver problem cities problem described tests carried cycles averaged trials :10.1.1.52.6342
compare models experimentally determined parameters best values algorithm ran algorithm times best parameters set 
results shown table parameter shown influence negligible 
table comparison ant quantity ant density ant cycle 
averages trials 
best parameter set average result best result ant density ant quantity ant cycle ant density ant quantity models worse results obtained ant cycle 
reason kind feedback information direct search process 
ant cycle uses global information ants lay amount trail proportional solution produced 
fact ants producing shorter paths contribute higher amount trail ants tour poor 
side ant quantity ant density local information 
search directed measure final result achieved 
surprising gave worse performance results details 
optimal value ant cycle explained fact algorithm greedy heuristic guide search early stages computation starts exploiting global information contained values ij trail 
ant cycle needs possibility forget part experience gained past order better exploit new incoming global information 
ant cycle superior algorithms decided deepen understanding ant cycle 
figures traces typical run ant cycle algorithm applied oliver problem 
particular fig shows length best tour cycle fig standard deviation tour lengths population cycle run 
note early cycles identifies tours subsequently refined rest run 
standard deviation population tour lengths drops zero assured algorithm actively searches solutions differ best far gives possibility finding better ones 
search better solutions carried selected regions search space determined trail resulting preceding cycles 
observed fig vertical axis shows average node branching problem graph 
graph initially fully connected arcs trail level falls small value probability chosen ants negligible removed 
node branching node number edges exit node trail level higher 
note run ant go node tabu list constraints possible choices significantly reduced 
genetic algorithms applied solve oliver problem find tour length 
result obtained ant cycle tour length 
dorigo ant system optimization colony cooperating agents best tour length cycles fig 

evolution best tour length oliver 
typical run 
tour length standard deviation cycles fig 

evolution standard deviation population tour lengths oliver 
typical run 
average node branching cycles fig 

evolution average node branching problem graph oliver 
typical run 
ieee transactions systems man cybernetics part vol pp process observed graphs fig 
applied simple cities problem cca depict effect ant search trail distribution 
length edges proportional distances towns thickness edges proportional trail level 
initially fig 
trail uniformly distributed edge search directed visibilities 
search process fig 
trail deposited edges composing tours completely edges belonged bad tours 
edges worst tours resulted deleted problem graph causing reduction search space 
fig 

evolution trail distribution cca problem 
trail distribution search 
trail distribution cycles 
tour length investigated stagnation behavior situation ants tour 
indicates system ceased explore new possibilities better tour arise 
parameter settings observed cycles ants followed tour despite stochastic nature algorithms higher trail level edges comprising tour 
high trail level probability ant chooses edge belonging tour low 
example see oliver problem evolution average branching fig 

fact cycles circa number arcs exiting node sticks value symmetry problem means ants cycle 
led investigate behavior ant cycle algorithm different combination parameters experiment set 
results summarized fig obtained running algorithm times couple parameters averaging results ascribing averaged result different classes 
bad solutions stagnation 
high values algorithm enters stagnation behavior quickly finding solutions 
situation represented symbol fig 
bad solutions stagnation 
importance trail set low value algorithm find solutions 
situation represented symbol 
dorigo ant system optimization colony cooperating agents solutions 
solutions values central area symbol 
case different parameter combinations resulted performance level result shortest tour known oliver problem obtained approximately number cycles 
average node branching cycles fig 

average node branching run going stagnation behavior oliver 
typical run obtained setting 
fig 

ant cycle behavior different combinations parameters 
algorithm finds best known solution entering stagnation behavior 
algorithm doesn find solutions entering stagnation behavior 
algorithm doesn find solutions enters stagnation behavior 
results obtained experiment consistent understanding algorithm high value means trail important ants tend choose edges chosen ants past 
hand low values algorithm similar stochastic algorithm 
fig best tour experimentally determined optimal set parameters values ant cycle algorithm 
tour result competitive results obtained special purpose algorithms 
ieee transactions systems man cybernetics part vol pp length presents inversions respect best tour published 
fig 

best tour obtained cycles ant cycle algorithm oliver problem real length integer length 
major strengths ant cycle algorithm summarized range parameter optimality algorithm finds solutions tested problems oliver problems 
algorithm quickly finds solutions see fig comparison heuristics see section vi doesn exhibit stagnation behavior ants continue search new possibly better tours 
increasing dimensions sensitivity parameter values problem dimension low 
best tour length cycles fig 

algorithm finds values oliver quickly new optimal value nc cycles 
partially tested ant cycle algorithm problems limited number runs number cycles bounded nc max 
restrictions got best known result quick convergence satisfactory solutions maintained problems 
dorigo ant system optimization colony cooperating agents experimental study extensions advanced properties section discuss experiments deepened understanding ant cycle algorithm 
study synergy affects algorithm performance section 
compare performance ant cycle ants initially positioned unique starting point performance obtained ant starts different town section 
study effects elitist strategy increases importance ant best tour section change performance problem dimension increases section 
synergistic effects ran set experiments assess impact number ants importance communication trail efficiency solution process 
case test problem involved finding tour grid evenly spaced points problem priori known optimal solution edge length see fig 

fig 

optimal solution grid problem 
result synergistic effect ants trail communication system run ants search effective communication ants communication 
case communicating ants optimality point synergistic effects reach maximum 
results shown figs 
fig 
compare situation ants communicate situation communicate 
results show communication exploited algorithm 
fig report experiment grid problem solved 
abscissa shows total number ants set runs ordinate shows called ant cycles number cycles required reach optimum multiplied number ants order evaluate efficiency ant comparable data 
algorithm able identify optimum number ants 
tests run set grid problems substantiated hypothesis optimal number ants close number cities property assessment computational complexity section iii 
second set tests carried cities randomly distributed cities random graph 
optimal performance reached ants number comparable dimension problem solved 
ieee transactions systems man cybernetics part vol pp best tour length cycles best tour length cycles fig 

synergy communication ants improves performance 

number ant cycles number ants fig 

number ant cycles required reach optimum function total number ants grid problem 
results averaged runs 
initialization experiment run order study initial ant distribution influences performance 
tested difference case ants time city case uniformly distributed ant cycle applied cities random graph grid oliver problem 
cases distributing ants resulted better performance 
tested initial random distribution ants cities performed better uniform results show significant difference choices random distribution obtained slightly better results 
say ants uniformly distributed time integer number ants town forces multiple 
uniform distribution default starting configuration experiments previous sections 
dorigo ant system optimization colony cooperating agents elitist strategy term elitist strategy way resembles elitist strategy genetic algorithms modified algorithm cycle trail laid edges belonging best far tour reinforced standard version 
added trail arc best tour quantity number elitist ants length best tour 
idea trail best tour reinforced direct search ants probability solution composed edges best tour 
test carried oliver problem run stopped nc max cycles results indicated optimal range number elitist ants increasing number results better tours discovered best tour discovered earlier elitist ants force exploration suboptimal tours early phases search decrease performance results 
fig shows outcome test oliver problem behavior evident 
number cycles reach local optimum local optima number elitist ants fig 

number cycles required reach local optimum related number elitist ants oliver 
results averaged runs 
increasing problem dimensions algorithm complexity section iii nc says actual time required reach optimum 
experiment section devoted investigating efficiency algorithm increasing problem dimensions 
results reported table ii case similar problems increasing dimensions grids edge length set fig 

interesting note problems cities algorithm optimal solution 
case effect ant increment value trail edges belonging tour case equivalent saving individual reinforce contribution 
ieee transactions systems man cybernetics part vol pp table ii 
time required find optimum function problem dimension 
results averaged runs 
best average number time required problem dimension solution cycles find find optimum optimum seconds tests run ibm compatible pc intel processor 
vi 
comparison heuristics section compare efficacy algorithm heuristics tailored general purpose 
comparison tsp tailored heuristics section compare ant cycle heuristics contained package travel 
package represents distances cities integer matrix implemented analogous representation system results comparisons oliver shown table iii column length best tour identified heuristic second column improvement solution obtained opt heuristic opt heuristic exhaustive exploration permutations obtainable exchanging cities 
comparisons carried lin kernighan improvement column solutions able reduce length tour depending starting solution provided basic algorithms 
note ant cycle consistently outperformed opt efficacy effectiveness finding solutions compared lin kernighan 
hand algorithm requires longer computational time tested special purpose heuristic 
general comment tests point parameter setting instance algorithm consistently best known solution oliver problem converged quickly satisfactory solutions 
identified oliver best known solution length cycles took cycles reach values 
algorithm fell stagnation behavior 
fact average branching greater average length tours equal best tour remained somewhat 
indicates ants followed different tours 
case distances towns integer numbers computed standard code proposed 
dorigo ant system optimization colony cooperating agents table iii 
performance ant cycle algorithm compared approaches 
results averaged runs rounded nearest integer 
basic opt ant cycle near neighbor far insert near insert space filling curve sweep random comparison general purpose heuristics compare ant cycle general purpose heuristics 
comparison fair fact general purpose heuristic specialized algorithm tsp 
run comparisons implemented simulated annealing sa tabu search ts run times oliver data 
sa annealing function ts implemented tabu list length varying interval 
ts sa allowed run hour ibm compatible pc intel processor 
results table iv 
results show problem effective ts better sa running hardware time constraints 
table iv 
performance compared ts sa oliver problem 
results averaged runs integer distances 
best average std dev 
ts sa vii 
generality approach said section versatile robust 
versatility exemplified ease applied asymmetric tsp atsp particular kind tsp section vii 
robustness exemplified possibility algorithm appropriately adapted solve combinatorial optimization problems quadratic assignment problem qap job shop scheduling problem jsp section vii 
versatility atsp asymmetric traveling salesman problem tsp distance nodes symmetric general ij ji 
atsp difficult tsp fact symmetric tsp solved optimally graphs nodes atsp instances particularly atsp instances distance matrix symmetric solved optimum graphs dozen nodes 
name basic means basic heuristic improvement 
ieee transactions systems man cybernetics part vol pp application atsp straightforward modifications basic algorithm necessary 
computational complexity cycle algorithm remains tsp application differences distance trail matrices longer symmetric 
chose test problem ry problem difficult problem instance distance distribution hard solve tailored heuristics branch bound procedures 
ran times time cycles 
average length best tour longer optimal 
average number cycles find result 
robustness qap jsp consider robustness approach 
combinatorial problems solved 
apply autocatalytic algorithm combinatorial problem requires defining appropriate graph representation search simple agents problem autocatalytic positive feedback process heuristic allows constructive definition solutions call greedy force constraint satisfaction method tabu list 
done known combinatorial optimization problems quadratic assignment qap job shop scheduling jsp time obtaining adapted version effectively handle relative problem 
difficult ad hoc tasks face applying find appropriate graph representation problem solved greedy force heuristic 
quadratic assignment problem qap order problem arises trying assign facilities locations 
formally problem usually defined nxn symmetric matrices dij dij distance location location flow information products quantity facility facility permutation interpreted assignment facility location problem identify permutation row column indexes matrix minimizes total cost min apply qap algorithm case tsp having studied approximation qap objective function allows problem representation basis single matrix heuristic 
qap objective function expressed combination potential vectors distance flow matrices 
potential vectors row sums matrices 
consider example dorigo ant system optimization colony cooperating agents potential vectors third matrix obtained element computed di fh di fh elements potential vectors 
ants choose node move inverse values visibility data ih interpreting element heuristic value choice assigning location facility show heuristic works build solution assume simplicity ants act deterministic way probabilistically happens algorithm don consider effect trail set trails ih 
constructing solution consider columns matrix starting corresponding activity greatest flow potential assign activity location distance potential min max rule 
example activity assigned location element smallest column pair activity location coupling activity location inhibited location assigned activity continuing way obtains couplings 
compared version added non deterministic hill climbing procedure know heuristics see details 
experiments run ibm compatible pcs intel processor stopped hour time 
test problems known problems 
seen table performance 
ant system result best known local optimization problem best known solution 
application described details 
table comparison heuristic approaches 
results averaged runs 
best known results bold 
best known ant system non deterministic hill climbing simulated annealing tabu search genetic algorithm evolution strategy sampling clustering ieee transactions systems man cybernetics part vol pp job shop scheduling problem jsp described 
set machines set jobs 
th job consists ordered sequence chain operations set 
operation belongs job processed machine djm consecutive time instants 
total number operations 
problem assign operations time intervals way jobs processed time machine maximum completion times operations minimized 
apply jsp chose representation 
jsp machines jobs operation set represented directed weighted graph set arcs connect operation job completely connect nodes nodes belonging job 
nodes belonging job connected sequence node connected immediate successor see fig 
note graph graph cliques representing machines usually utilized represent jsp 
node necessary order specify job scheduled case jobs operation nn machine 
nodes arcs nodes pairwise connected connected operation job 
arc weighted pair numbers kl kl 
kl trail level second visibility kl computed desirability measure derived greedy problem specific heuristic longest processing time shortest completion time 
order nodes visited ant specifies proposed solution 
instance consider problem jobs machines represented system graph fig 

suppose machine processes operations second 
fig 

graph jobs machines jsp 
connections arrows bold intended represent pair directed arcs 
ants initially identify step feasible permutation remaining nodes 
cope problem transition probabilities slightly modified respect computed formula order feasible permutation fact necessary define set allowed nodes step tabu list problem dependent way 
ant set nodes visited set nodes allowed step 
initially 
transition probabilities computed basis formula set allowed nodes equal node chosen appended tabu list deleted chosen node job immediate successor job chain added procedure ensures dorigo ant system optimization colony cooperating agents possibility produce feasible solution possibly optimal 
process iterated gk 
order nodes permutation tabu list specifies solution proposed ant trails computed usual way laid specified ant cycle algorithm 
example suppose ant yielded solution direct order operations imposing precedences respectively 
approach implemented successfully applied jsp instances dimension jobs machines 
problems obtained solution optimum considered promising result 
viii 
discussion characteristics major issue defining distributed system definition communication protocol 
set ants communicate modifications global data structure tour trail left ant tour change probability decision taken 
heuristic guides ants early stages computational process experience accumulated problem structure 
heuristic automatically loses importance remember coefficient related evaporation experience gained ants saved problem representation increases 
way explain behavior tsp problem 
consider transition matrix pk ant element pij transition probability town town time defined equation 
time pij proportional ij closer towns chosen higher probability 
process evolves pk changes elements 
process seen space deformation path cost reduced towns connected edges high amount traffic conversely path cost incremented towns connected edges low traffic levels 
simulations observed matrix pk range optimality parameters converges state close stationary variations transition matrix pk small 
state reached behavior ants dependent kind transition matrix obtained 
observed situations rare occurring saw section iv particular parameter settings transition probabilities significantly higher zero row ants choose edge step new tour searched 
common situations rows transition probabilities significant value 
cases search stops number significant transitions highly reduced respect initial situation 
consider example fig obtained steady state transition matrix randomly generated town problem area circle proportional corresponding value transition probability 
ant town high probability go town near town near low probability choosing edge 
similar analysis holds ants town towns example destination equally probable 
stochastic process rules evolution matrix markov process infinite memory 
ieee transactions systems man cybernetics part vol pp fig 

steady state transition matrix randomly generated town problem 
way interpret algorithm works imagine having kind probabilistic superimposition effects ant isolated move local greedy rule 
greedy rule guarantees locally optimal moves practically lead bad final results 
reason rule doesn greedy local improvements lead bad final steps ant constrained closed tour choices final steps constrained early steps 
tour followed ant ruled greedy policy composed initial parts final parts 
consider effect simultaneous presence ants contributes trail distribution 
parts paths followed ants receive great amount trail 
contrary bad parts paths chosen ants obliged constraint satisfaction remember tabu list edges receive trail ants 
ix 
introduces new search methodology distributed autocatalytic process application solution classical optimization problem 
general idea underlying ant system paradigm population agents guided autocatalytic process directed greedy force 
agent autocatalytic process greedy force tend agent converge suboptimal tour exponential speed 
agents interact appears greedy force give right suggestions autocatalytic process facilitate quick convergence optimal solutions getting stuck local optima 
speculated behavior due fact information gained agents search process modify problem representation way reduce region space considered search process 
tour completely excluded bad tours highly improbable agents search neighborhood solutions 
main contributions 
employ positive feedback search optimization tool 
idea point agent ant choose different options dorigo ant system optimization colony cooperating agents chosen results choice appear desirable 
ii show synergy arise useful distributed systems 
effectiveness search carried number cooperative ants greater search carried number ants acting independently 
iii show apply different combinatorial optimization problems 
introducing application tsp show apply atsp qap jsp 
believe approach promising generality applied different problems see section vii effectiveness finding solutions difficult problems 
related classified major areas studies social animal behavior research natural heuristic algorithms stochastic optimization 
pointed research behavior social animals considered source inspiration useful metaphor explain ideas 
believe especially interested designing inherently parallel algorithms observation natural systems invaluable source inspiration 
neural networks genetic algorithms evolution strategies immune networks simulated annealing examples models natural flavor 
main characteristics partially shared members class algorithms natural metaphor inherent parallelism stochastic nature adaptivity positive feedback 
algorithm considered new member class 
natural optimization fits general research area stochastic optimization quest optimality traded computational efficiency 
acknowledgments reviewers useful comments version 
thomas ck hughes bersini jean louis deneubourg frank mauro francesco bernard giovanni manzini daniele montanari hans paul schwefel frank discussions useful comments early versions 
aarts korst simulated annealing boltzmann machines john wiley 
reinforcement nature reproduction selection mechanism evolutionary algorithms 
main difference evolutionary algorithms applied favor complete solutions build solutions 
ieee transactions systems man cybernetics part vol pp bentley fast algorithms geometric traveling salesman problems orsa journal computing 
bersini varela immune recruitment mechanism selective evolutionary strategy proceedings fourth international conference genetic algorithms morgan kaufmann 
boyd pulleyblank travel software package carleton university 
burkhard quadratic assignment problems european journal operations research 
colorni dorigo maniezzo distributed optimization ant colonies proceedings european conference artificial life paris france varela bourgine eds elsevier publishing 
colorni dorigo maniezzo investigation properties ant algorithm proceedings parallel problem solving nature conference ppsn brussels belgium nner manderick eds elsevier publishing 
colorni dorigo maniezzo trubian ant system job shop scheduling belgian journal operations research statistics computer science 
colorni dorigo maniezzo trubian heuristics nature hard combinatorial problems international transactions operational research press 
deneubourg pasteels probabilistic behaviour ants strategy errors journal theoretical biology 
deneubourg goss collective patterns decision making ethology ecology evolution vol 
dorigo optimization learning natural algorithms ph thesis dip 
elettronica informazione politecnico di milano italy 
dorigo maniezzo colorni positive feedback search strategy technical report politecnico di milano 
watson gandy christofides distribution management mathematical modeling practical analysis operational research quarterly 
hospital layout quadratic assignment problem operational research quarterly 
fischetti toth additive bounding procedure asymmetric travelling salesman problem mathematical programming 
glover tabu search part orsa journal computing 
glover tabu search part ii orsa journal computing 
goldberg genetic algorithms search optimization machine learning addison wesley reading ma 
dorigo ant system optimization colony cooperating agents golden stewart analysis heuristics travelling salesman problem lawler lenstra rinnooy kan shmoys eds new york wiley 
goss beckers deneubourg aron pasteels trail laying trail solve foraging problems ant colonies behavioural mechanisms food selection hughes ed nato asi series vol 
berlin springer verlag 
graham lawler lenstra rinnooy kan optimization approximation deterministic sequencing scheduling survey annals discrete mathematics 
holland adaptation natural artificial systems ann arbor university michigan press 
kirkpatrick gelatt vecchi optimization simulated annealing science 
computer aided layout design mathematical programming study 
lawler lenstra rinnooy kan shmoys eds travelling salesman problem new york wiley 
lin kernighan effective heuristic algorithm tsp operations research 
maniezzo colorni dorigo ant system applied quadratic assignment problem tech rep iridia universit libre de bruxelles belgium 
experimental comparison techniques assignment facilities locations operations research 
rechenberg evolutionsstrategie stuttgart germany 
reinelt tsplib institut mathematik universit augsburg germany 
rumelhart parallel distributed processing explorations microstructure cambridge ma mit press 

schwefel evolutionsstrategie und numerische optimierung ph thesis technische universit berlin 
available numerical optimization computer models wiley 
whitley starkweather scheduling problems travelling salesman genetic edge recombination operator proceedings third international conference genetic algorithms morgan kaufmann 
