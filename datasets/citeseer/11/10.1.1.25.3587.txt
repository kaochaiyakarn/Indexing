igor guskov caltech normal meshes mississippi state university wim sweldens bell laboratories peter schr der caltech left original mesh floats vertex 
middle stages algorithm 
right normal mesh float vertex 
skull dataset courtesy normal meshes new fundamental surface descriptions inspired differential geometry 
normal mesh multiresolution mesh level written normal offset coarser version 
mesh stored single float vertex 
algorithm approximate surface arbitrarily closely normal semi regular mesh 
normal meshes useful numerous applications compression filtering rendering texturing modeling 
cr categories subject descriptors computer graphics computational geometry object modeling curve surface solid object representations hierarchy geometric transformations numerical analysis approximation approximation surfaces contours wavelets fractals additional keywords meshes subdivision irregular connectivity surface parameterization multiresolution wavelets 
standard way parameterize surface involves scalar functions 
differential geometry teaches smooth surfaces locally described single scalar height function tangent plane 
loosely speaking say geometric information surface contained permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
siggraph new orleans la usa acm single dimension height plane 
observation holds infinitesimally special cases terrains star shaped surfaces globally described single function 
practice approximate surfaces triangle mesh 
describing meshes relatively easy lost structure inherent original surface 
example observation locally surface characterized scalar function reflected fact store floats vertex 
words correlation neighboring sample locations implied smoothness assumption reflected leading inherently redundant representation 
vertex locations come dimensional quantities considerations tell locally dimensions represent parametric information third captures geometric shape information 
smooth shape may choose different parameterizations geometry remains 
case mesh observe noticing infinitesimal tangential motion vertex change geometry sampling pattern parameterization 
moving normal direction hand changes geometry leaves parameter information 
goals contributions observations aim compute mesh representations require single scalar vertex 
call representations normal meshes 
main insight done multiresolution local frames 
normal mesh hierarchical representation detail coefficients expressed local frames scalar normal component 
context compression example implies parameter information perfectly predicted residual error entirely constrained normal direction contains geometric information 
note local frames normal mesh representations non linear 
course expect arbitrary input mesh possess hierarchical representation normal 
de scribe algorithm takes arbitrary topology input mesh produces semi regular normal mesh describing geometry 
aside small amount base domain information normal mesh transform converts arbitrary mesh parameter representation purely scalar representation 
demonstrate algorithm applying number models experimentally characterize properties normal meshes attractive computations 
study normal meshes interest number reasons bring computational representations back principles differential geometry storage bandwidth efficient describing surface succinctly specified base shape plus hierarchical normal map excellent representation compression variance squeezed single dimension 
related efficient representations irregular connectivity meshes pursued number researchers 
research motivated ability acquire densely sampled highly detailed scans real world objects need manipulate efficiently 
semi regular subdivision connectivity meshes offer advantages irregular setting due developed mathematical foundations data structure simplicity powerful algorithms require input semi regular form 
led development number algorithms convert existing irregular meshes semi regular form remeshing 
eck voronoi tiling harmonic maps build parameterization mesh 
levoy demonstrated user driven remeshing case bi cubic patches lee proposed algorithm feature driven mesh reduction develop smooth parameterizations meshes automatic fashion 
methods parameterization subsequently semi regular remeshing 
related approaches construct semi regular mesh arbitrary connectivity input mesh 
previous prediction residuals detail vectors optimized properties normality 
main focus establishment smooth parameterization semi regularly sampled 
discussion parameter versus geometry information originates done irregular curve surface subdivision intrinsic curvature normal flow 
shown correct parameter side information possible build irregular smooth subdivision scheme 
schemes useful editing texturing applications succinct representations parameter side information needed excessive 
case normal meshes issues entirely circumvented parameter information vanishes mesh reduced purely geometric scalar normal direction information 
mention connection displacement maps particular normal displacement maps 
popular modeling purposes extensively high rendering systems renderman 
sense solving associated inverse problem 
geometry find simpler geometry set normal displacements equivalent original geometry 
typically normal displacement maps single level aim build fully hierarchical way 
example single level displacements maps capture fine detail photography model 
cohen sampled normal fields geometry maintained texture maps simplification 
approaches differ significantly interests clear maps related nature great interest contexts 
independent lee pursue goal similar 
introduce displaced subdivision surfaces seen level normal mesh 
levels base domain typically contains triangles case 
normal offsets oversampled case normal offsets critically sampled 
normal polylines look surfaces normal meshes introduce concepts curves normal polylines 
curve plane described pair parametric functions 
describe points curve single scalar function 
practice uses polylines approximate function 
linear segment points standard way build polyline multiresolution approximation sample curve points sj sj sj define jth level approximation lj sj sj 
move lj lj need insert points sj left 
clearly requires scalars coordinates sj 
alternatively compute difference sj new point predicted point say midpoint neighboring points sj sj 
detail tangential component normal component sj 
normal component geometric information tangential component parameter information 
way build polylines described sj sj sj sj sj sj removing point sj polyline multiresolution recording difference midpoint left general polyline detail normal tangential component 
right normal polyline detail purely normal 
scalar point sure parameter information zero see right 
triangle sj sj sj isosceles parameter information 
consequently say polyline normal multiresolution structure exists removed point forms isosceles triangle neighbors 
zero parameter information polyline represented scalar point normal component associated detail 
general polyline removed triangles hardly exactly isosceles polyline normal 
describe procedure build normal polyline approximation continuous curve 
easiest start building isosceles triangles coarsest level 
start base see 
take midpoint check normal direction crosses curve 
curve continuous point 
multiple pick 
construction normal polyline 
start coarsest level time check normal midpoint crosses curve 
simplicity indices sj points shown certain segments subdivided 
polyline determined endpoints scalars heights isosceles triangles 
call point define triangle 
split curve parts repeat procedure 
time sj normal midpoint sj sj crosses portion curve sj sj 
continuous curve approximated arbitrarily closely normal polyline 
result series polylines lj normal respect midpoint prediction 
effectively level parameterized respect coarser level 
polylines normal single scalar value normal component needs recorded point 
polyline parameter information 
consider normal polylines respect predictors 
example compute base point normal estimate known point rule 
essentially predictor depends coarser level allowed 
example irregular schemes 
need follow standard way building levels downsampling point take ordering 
leads definition normal polyline definition polyline normal removal order points exists removed point lies normal direction base point normal direction base point depend remaining points 
normal polyline completely determined scalar component vertex 
normal polylines closely related certain known fractal curves koch snowflake see 
time line segment divided subsegments 
left right get normal coefficient zero middle receives normal coefficient resulting triangle equilateral 
polylines leading snowflake normal respect midpoint subdivision 
normal polylines converging koch snowflake 
niels fabian von koch sweden close connection wavelets 
normal coefficients seen piecewise linear wavelet transform original curve 
tangential components zero half wavelet coefficients original scalar coefficients 
saves memory right away 
addition course wavelets usual decorrelation properties 
functional case transform corresponds interpolating piecewise linear wavelet transform introduced donoho 
shown interpolating wavelets primal dual moments suited smooth functions 
function setting wavelets level physical scale 
scale coefficient essentially length base triangle 
normal meshes establishing terminology 
triangle mesh pair set point positions pi xi yi zi simplicial complex contains topological adjacency information 
complex set subsets 
subsets come types vertices edges faces 
vertices neighbors ring neighbors vertex form set 
derive definition normal triangle meshes inspired curve case 
consider hierarchy triangle meshes mj built mesh simplification vertex removals 
meshes nested sense pj pj 
take removed vertex pi pj pj 
mesh normal need able find base point normal direction depend pj pi lies direction leads definition 
definition mesh normal case sequence vertex removals exists removed vertex lies line defined base point normal direction depends remaining vertices 
normal mesh described small base domain scalar coefficient vertex 
curve case mesh general normal 
chance difference removed point predicted base point lies exactly direction depends remaining vertices essentially zero 
way obtain normal mesh change triangulation 
decide semi regular meshes meshes connectivity formed successive coarse base domain faces 
curve setting way build normal mesh start coarse level base domain 
new vertex compute base point normal direction check line defined base point normal intersects surface 
situation complex curve case reasons intersection point 
intersection points correct 
case intersection points strictly speaking fully normal mesh built base domain 
happens relax definition normal meshes allow small number cases new points lie normal direction 
algorithm needs find suitable non normal location new point 
case intersection points algorithm needs right 
wrong chosen normal mesh start folding leave creases 
algorithm blindly picks intersection point doomed 
parameterization order find right piercing point suggest alternate needs able easily navigate surface 
way build smooth parameterization surface region interest 
basic building block algorithm 
parameterization methods proposed method takes components mesh simplification polar maps maps relaxation specific smoothness functional similar 
algorithm local parameterizations need computed fast robustly 
temporary quickly discarded starting guess parameterization 
consider region mesh homeomorphic disc want parameterize convex planar region find bijective map map fixed boundary condition minimizes certain energy functional 
functionals leading conformal harmonic mappings 
take approach floater 
short function needs satisfy equation interior pi pk ring neighborhood vertex weights ik come shape preserving parameterization scheme 
main advantage floater weights positive combined convexity parametric region guarantees triangle flipping occur parametric domain 
crucial algorithm 
note true general harmonic maps negative weights 
iterative biconjugate gradient method obtain solution system 
starting guess converges quickly 
algorithm algorithm consists stages described shown molecule model 
molecule highly detailed curved model 
naive procedure finding normal meshes succeed 
stages algorithm prepare ground piercing procedure build net curves splitting original mesh triangular patches correspondence faces base mesh coarsest level mesh build 

mesh simplification garland heckbert simplification half edge collapses create mesh hierarchy pj kj 
coarsest level initial guess base domain 
image shows base domain molecule 

building initial net curves purpose step connect vertices base domain net non intersecting curves different levels mesh simplification hierarchy 
easily done maps parameterization 
maps uses polar maps build bijection ring center vertex removed 
concatenation maps bijective mapping different levels pj kj hierarchy 
desired curves simply image base domain edges mapping 
bijection intersection occur 
note curves start finish vertex base domain need follow edges finer triangulation cut triangles 
curves define network triangular shaped patches corresponding base domain triangles 
adjust curves intermediate level maps propagate changes levels 
top middle image shows curves intermediate level hierarchy 

fixing global vertices normal mesh completely determined base domain 
choose base domain vertices carefully reduce number nonnormal vertices minimum 
coarsest level mesh simplification guess 
section describe procedure repositioning global vertices qi 
impose constraint qi needs coincide vertex pk original mesh necessarily pi 
repositioning typically done intermediate level take base domain vertex qi 
build parameterization patches incident vertex qi disk plane see 
boundary conditions assigned arclength parameterization parameter coordinates iteratively computed level vertex inside shaded region 
easy replace point qi level point pj shaded region 
particular new point pj parameter domain closest center disk 
exact center disk general correspond vertex mesh 
new position chosen curves redrawn inverse mapping straight lines new point parameter plane 
keep iterating procedure suffices cycle base domain vertices 
provide user controlled repositioning 
user replace center vertex pj point shaded region 
algorithm uses parameterization recompute curves point 
top right shows repositioned vertices 
notice rightmost moved considerably 
base domain vertex repositioning 
left original patches qi middle parameter domain right repositioned qi new patch boundaries 
replaced vertex parameter coordinate closest center 
inverse mapping right find new position new curves 

fixing global edges image global edges finest level patch boundaries normal mesh 
reason need improve smoothness associated curves finest level 
procedure similar 
base domain edge consider region formed finest level mesh incident patches 
opposing global vertices 
compute parameter function diamond shaped region surface 
boundary condition set qi qk ql qm linear variation edges 
compute parameterization zero level set new curve 
iterate procedure till convergence practice cycle suffices 
curves top right image result curve smoothing finest level 
note similar result achieved allowing user position global vertices draw boundaries patches manually 
steps algorithm depend initial net surface curves produced 
entire procedure shown molecule model 

base domain 

initial set curves 

global vertex repositioning 
initial parameterization 
adjusting parameterization 
final normal mesh 
hiv surface model courtesy arthur olson research institute 
initial parameterization global vertices edges fixed start filling interior 
done computing parameterization patch triangle keeping boundary fixed 
parameter coordinates stage serve initial guess 
smooth global parameterization 
parameterization shown bottom left 
triangle triangular checkerboard texture illustrate parameterization 

piercing stage algorithm start building actual normal mesh 
canonical step new vertex semi regular mesh find position original mesh 
edge level generates new vertex level 
compute base point interpolating butterfly subdivision approximation normal 
defines straight line 
line may multiple intersection points case need find right case need come alternate 
suppose need produce new vertex lies halfway edge incident triangles see 
incident patches form region build straight line defined base point predicted butterfly subdivision rule direction normal computed coarser level points 
find intersection points region checking triangles inside 
intersection take point lies midway points parameter domain 
point standard parameterization 
note case detail vector non normal components need stored 
case exist intersections mesh region piercing line choose intersection point closest point parameter domain 
denote parametric coordinates piercing point 
upper left piercing butterfly point surface point parametrically suggested point lies curve separating regions mesh 
right parameter domain point falls inside aperture gets accepted 
lower left parameterization adjusted curve pass accept point valid point semi regular mesh aperture parameter specifies parameter value point allowed deviate center diamond 
piercing point rejected mesh takes point parameter value resulting non normal detail 

adjusting parameterization new piercing point need adjust parameterization reflect 
essentially adjusted parameterization piercing point parameters 
imposing isolated point constraint parameterization mathematical guarantee flipping 
draw new piecewise linear curve parameter domain 
gives new curve surface passes see 
recompute parameterization patches triangle separately 
piecewise linear boundary condition half point common edge 
new midpoints edges face level computed build faces level 
done drawing new curves inside corresponding region original mesh see 
operation happens need ensure valid parameterization available patch 
patch parameterized triangle piecewise linear boundary conditions time putting new points midpoint 
new points connected parameter domain allows draw new finer level curves original mesh 
produces similar new net curves replicates structure semi regular hierarchy surface original 
construction semi regular mesh done adaptively error driven procedure maps 
example parameterization adjustment levels adaptive subdivision shown bottom middle 
note regions compute parameterizations smaller starting guesses better solver convergence faster faster 
face split parameter plane left leads new curves triangular patch right 
aperture parameter piercing procedure provides control original parameterization preserved final mesh consequently non normal details appear 
build non normal mesh entirely original global parameterization 
attempt build purely normal mesh independent parameterization 
experience best results achieved aperture set low coarsest levels increased finer levels 
fine levels hierarchy geometry semi regular meshes closely follows original geometry simply naive piercing procedure parameter adjustment 
may wonder continuous parameterizations really necessary 
tried naive piercing procedure parameterization base domain typically fails models 
example shows levels naive piercing torus starting vertex base mesh 
clearly regions flipped self intersecting triangles 
error times larger true normal mesh 
naive piercing procedure 
clearly regions flipped triangles self intersecting 
dataset size base normal normal time mesh size error min feline molecule rabbit torus skull horse table summary normal meshing results different models 
normal mesh computed adaptively contains roughly number triangles original mesh 
relative errors computed cnr metro tool 
times reported mhz pentium iii machine 
results implemented algorithms described preceding section performed series experiments normal meshes various models built 
summary results table 
see table normal meshes high accuracy hardly non normal details 
interesting feature normal meshing procedure structure patches comes performing simplification far fewer restrictions coarse base mesh 
note example skull meshed tetrahedron base mesh 
largely due robust mesh parameterization techniques approach 
shows normal meshes rabbit torus feline skull close feline bottom left normal mesh 
note smooth meshes global edges global vertices 
smoothness comes normality parameterization 
intrinsic quantity 
interesting observations coming locally normal meshes differ nonnormal ones offering huge benefits terms efficiency representation 
example table shows aperture parameter governs construction normal meshes affects number detail coefficients non trivial tangential components model hole torus numbers typical models 
particular see modest acceptance strategy gets rid tangential components model aggressive strategies offer benefits affecting error representation 
summary introduce notion normal meshes 
normal meshes multiresolution meshes vertices normal direction starting coarse level 
scalar vertex needs stored 
robust normal error best table relation acceptance strategy piercing procedure percentage perfectly normal details hierarchy 
original model vertices normal meshes vertices levels uniformly base mesh contained vertices 
best strategy line levels afterward accepted piercing candidates 
algorithm computing normal semi regular meshes input mesh showed produces smooth triangulations variety input models 
clear normal meshes numerous applications 
briefly discuss 
compression usually wavelet transform standard mesh components need quantized encoded 
information theory tells non uniform distribution coefficients lower order entropy 
having coefficients exactly zero reduce bit budget 
implementation viewpoint directly hook normal mesh coefficients best known scalar wavelet image compression code 
filtering shown operations smoothing enhancement denoising computed suitable scaling wavelet coefficients 
normal mesh algorithm require computations 
large scaling coefficients standard mesh introduce large tangential components leading flipped triangles 
normal mesh happen 
texturing normal semi regular meshes smooth inside patches global edges global vertices base domain exceedingly coarse cf 
skull model 
implied parameterizations highly suitable types mapping applications 
rendering normal maps powerful tool decoration enhancement smooth geometry 
particular context bandwidth bottlenecks attractive able download normal map hardware send smooth coefficient updates underlying geometry 
normal mesh transform effectively solves associated inverse problem construct normal map geometry 
concept normal meshes opens new areas research 
algorithm uses interpolating subdivision find base point 
building normal meshes respect approximating subdivision straightforward 
theoretical underpinnings normal meshes need studied 
continuous variable normal descriptions surfaces exist 
stability 
connections curvature normal flow acts reduce normal information 
addressed semi regular normal meshes definition allows flexible setting progressive irregular mesh hierarchies 
purely scalar compression schemes geometry need compared existing coders 
generalize normal meshes higher dimensions 
possible represent dimensional manifold dimensions variables opposed usual current implementation works surfaces boundaries deal feature curves 
address issues research 
acknowledgments supported part nsf aci aci dms dms alias wavefront packard fellowship caltech summer undergraduate research fellowship surf 
special nathan subdivision library andrei mathieu desbrun adi levin arthur olson zo wood helpful discussions chris johnson sgi utah visual supercomputing center resources koenig production help 
datasets courtesy cyberware research institute university washington 
certain popovic derose duchamp salesin stuetzle interactive multiresolution surface viewing 
proceedings siggraph 
cohen manocha appearance preserving simplification 
proceedings siggraph 
cook shade trees 
computer graphics proceedings siggraph 
daubechies guskov sweldens regularity irregular subdivision 
constr 
approx 

desbrun meyer schr der barr implicit fairing irregular meshes diffusion curvature flow 
proceedings siggraph 
donoho interpolating wavelet transforms 
preprint department statistics stanford university 
donoho unconditional bases optimal bases data compression statistical estimation 
appl 
comput 
harmon 
anal 

dyn levin gregory butterfly subdivision scheme surface interpolation tension control 
acm transactions graphics 
eck derose duchamp hoppe lounsbery stuetzle multiresolution analysis arbitrary meshes 
proceedings siggraph 
floater parameterization smooth approximation surface triangulations 
computer aided geometric design 
garland heckbert surface simplification quadric error metrics 
proceedings siggraph 
golub loan matrix computations nd ed 
john hopkins university press baltimore 
guskov sweldens schr der multiresolution signal processing meshes 
proceedings siggraph 
schr der sweldens progressive geometry compression 
proceedings siggraph 
krishnamurthy levoy fitting smooth surfaces dense polygon meshes 
proceedings siggraph 
lee dobkin sweldens schr der multiresolution mesh morphing 
proceedings siggraph 
lee hoppe displaced subdivision surfaces 
proceedings siggraph 
lee sweldens schr der dobkin maps multiresolution adaptive parameterization surfaces 
proceedings siggraph 
levoy digital michelangelo project 
proceedings nd international conference digital imaging modeling october 
vy mallet non distorted texture mapping sheared triangulated meshes 
proceedings siggraph 
lounsbery derose warren multiresolution analysis surfaces arbitrary topological type 
acm transactions graphics 
originally available tr october department computer science engineering university washington 
schr der sweldens spherical wavelets efficiently representing functions sphere 
proceedings siggraph 
zorin schr der eds 
subdivision modeling animation 
course notes 
acm siggraph 
zorin schr der sweldens interpolating subdivision meshes arbitrary topology 
proceedings siggraph 
zorin schr der sweldens interactive multiresolution mesh editing 
proceedings siggraph 


