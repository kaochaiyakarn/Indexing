syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

group principals formalization anonymity paul syverson stuart stubblebine center high assurance computer systems naval research laboratory washington dc usa syverson itd nrl navy mil broad st suite new york ny usa stubblebine fcs columbia edu www cs columbia edu stu 
introduce concept group principal number different classes group principals including principals 
appear naturally useful concepts looking security 
provide associated epistemic language logic reason anonymity protocols anonymity services protection properties formulated intruder knowledge group principals 
language give epistemic characterization anonymity properties 
specification simple anonymizing system theory 
principals typically viewed atomic reason consider knowledge actions taken group 
basic notion group principal 
notion appears useful concept reasoning various properties electronic commerce security protocols 
principal threshold group principal 
principal allows express properties threshold cryptosystems 
pursue believe give straightforward characterization threshold cryptography including signatures confidentiality time introduced language things proactive security mobile adversaries 
group principal group principal 
useful characterising security properties relating anonymity 
demonstrate applicability theory examining issue anonymity privacy 
studies shown privacy great concern users electronic commerce 
numerous protocols emerged protecting anonymity individuals 
protocols areas protecting general internet communications commercial transactions web communications email electronic cash :10.1.1.30.3785
author supported onr 
author performed research 
syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

little done formally representing analyzing privacy protocols 
provide epistemic language logic reason anonymity protocols anonymity services 
describe associated model computation 
language give epistemic characterization various anonymity properties 
far know basic properties set previously 
develop idea looking environment single entity messages pass individual components different characteristics 
model environment principal different system principals 
send message send environment principal likewise receiving messages 
uncertainty communication represented environment principals sent message immediately received received messages sent principal 
way able specify environments particular threat model hand 
demonstrate approach simple example 
typically single intruder distributed group principal composed environment compromised system principals 
principal specified knowledge program 
compromised principals run distinct programs reliable counterparts 
possible multiple intruders separate goals examples 
address temporal features directly differentiate past :10.1.1.115.3569
timing attack anonymity system scope 
temporal reasoning expected added reason expect difficulty doing 
knowledge programs set derived knowledge programs include temporal operators default 
seminal setting properties goals mechanisms anonymity communication chaum cf 
aware give epistemic characterization anonymity properties 
anonymity properties formally defined csp 
formal notation specifying anonymity protocols notation designed specify anonymity properties formal analysis 
defined interesting rigorous informal notions security properties :10.1.1.30.3785
remainder follows 
section model including definitions various types group principals 
section formal language 
section logic 
section anonymity properties 
section knowledge programs 
section specification anonymizer protocol 
section 
syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

model system model essentially built extends model elements described 
give sketch model 
atomic principals set atomic principals fp pn similar ordinary principals associates distributed computing 
distinguish environment model 
environment may possibly disconnected principals 
environment principals atomic principals just system principals 
actions principal perform set actions time 
actions performed send receive representing sending message set messages receipt respectively 
principals may perform internal operations int action fm mn 
represents principal performing internal operation messages set fm mn example encryption concatenation decryption principals may time 
indicated performance null action particular internal actions record purge discussed presently 
follow example subsequent messages sent environment received environment 
simplifying assumption sent messages received immediately 
message loss delay modification represented actions environment 
exactly send receive environmental principal 
states principal local state 
local states assumed unique principals may able distinguish local states 
state local principal time id history log facts history sequence actions performed locally 
log sequence local actions logged 
similar local history local log complete having entry time 
log reflects local time entries recorded ha ti time local clock actual time actual time occurred 
assume real clock fine reflect occurrence events system 
advance real clock syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

need imply advance local clocks advance local clock implies advance real clock 
principals may may keep track local actions may forget log may contain null log entry time null action may occur local history local log indicates action performed time 
keep track facts may known principal public key local server 
collected set facts principal initial state fields state id facts empty sequences 
keep track actions facts means record action 
record defined knowledge 
constitution knowledge set action record effect placing ha local log 
known formula record effect placing set facts facts allow sets actions sets known formulae domain record way record works sets obvious case individual actions known formulae 
purge similarly defined entries log facts facts purge fha ha ig effect removing log entries log replacing 
purge effect removing formulae set recorded facts 
actions actions effectively performed remembered logged 
tail segment history includes record purge actions 
introduce composite group principals presently 
global state completely determined tuple local states atomic principals 
run sequence global states indexed actual times local state occurring global state time relevant principal local state actual time knowledge local state knowledge entirely determined log set facts actions 
include set formulae knowledge closure known sources 
precisely action known principal log principal knows performed action 
example receive receive log received knowledge 
facts knowledge 
derived members knowledge axioms knowledge knows represented language 
dual 
certain generic axioms adding knowledge principals oe oe 
oe knowledge knowledge axioms knowledge briefly discussed section 
syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

group principals ordinarily think principals atomically 
particular evaluating protocols dolev yao framework view communication going single environmental principal typically identified intruder 
example sent principals assumed known intruder sent principals intruder may able directly communicate intruder may able communicate honest principals intruder signal causing honest principal send certain messages 
cf 
discussion model computation hostile environment 
naturally engenders view environment distributed group principal 
similarly sets honest principals trying solve threshold computation decryption signature may thought way 
find useful various types group principals model circumstances 
kinds group principal collective group group group phig threshold group gamma 
type group principal distinguished knowledge actions principal determined knowledge actions members principal 
set group principals defined follows nonempty set atomic principals phig groups indicated type 
gamma threshold group provided jgj 
collective group principal set atomic principals distributed group viewed collectively 
group knows known combining knowledge group members 
concept distributed knowledge 
group actions taken group collectively 
example sent received member group sent received group 
may case group performs action elect leader possible successors performed members 
example member vote leader succession determined total number votes received diminishing order 
group principal written group members distributed group viewed conjunctively 
write pn group principals pn group knows member group knows 
concept knowledge 
group actions taken member group 
said received member said received group principal written phig group members distributed group viewed disjunctively 
write pn group principals pn group knows member group knows 
correlate 
group actions taken member syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

group 
phig said received member said received threshold group principal written gamma threshold group threshold group gamma knows known collective subgroup contained cardinality 
correlate 
suppose subgroups jg jg ordinarily oe conclude specific 
threshold group follows gammag 
follows oe 
way characterize threshold group group collective groups cardinality fg gm set collective subgroups jg gamma phig gm threshold group gamma done subgroup contained cardinality gamma said received said received subgroup cardinality formal language principals message formula 
assume explanation usual logical connectives formula building 
formula message vice versa 
actions 
send receive actions 
record purge send receive actions 
send receive action send receive action purging recording send receive actions 
purge action record action find useful macro eliminable definition action remember macro action record action syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

said received formula 
formulae expressing sending receiving messages formulae implicit sending receiving messages 
said received said received formula represents message sent received denoted quotation marks 
refer bit string parsing string encryption decryption example send message knew said said true said 
message extensions 
message fields may origin destination 
express extensions 
qualify certain features message common anonymity protocols 
features include indication ultimate destination message 
feature common anonymity protocols referencing prior message 
common query response request response protocols 
response encryptions key possession 
messages may encrypted 
encryption possession gamma expressed follows 
gamma runs formula 
principal running knowledge program expressed 
runs program name knowledge 
formula language principal express knows knows possibly formulae respectively 
particular meant opaque context 
values may substituted variable names 
syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

formula 
allow express action done principal formula 
example suppose performed action action 
expressed 
possible replace types formulae type appropriate temporal operator 
choose keep number modal operator types minimum 
action action done model express action logic set axioms rules 
knowledge propositional reasoning standard 
background consult 
propositional epistemic logic 
knowledge characterized axioms 
rules modus ponens necessitation knowledge generalization modus ponens oe infer 
knowledge generalization infer 
important recall knowledge generalization allow infer knows arbitrary formulae 
theorem derivable axioms assumptions theorem 
words principals expected know logical truths 
axioms 
ax 
tautologies propositional logic axioms 
mentioned duals 
means interchangeable definition formula 
formulae knowledge axioms follows 
axioms rules axiom constitute standard understood knowledge logic distributed computing 
axioms may ultimately necessary intended applications 
leave possible elimination unnecessary axioms 
ax 
distribution axiom oe oe oe ax 
truth axiom oe ax 
positive introspection axiom oe ax 
negative introspection axiom oe syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

simplifying said received formulae 
formulae may simplified obvious ways 
list simply give representative examples ax 
said oe said ax 
received oe received ax 
said mn oe said ng assume encryption key gamma corresponding decryption key symmetric case gamma 
ax 
said gamma oe said ax 
received gamma oe received note axioms reflecting authentication principles successors :10.1.1.115.3569
message extensions may removed said received formulae 
extensions set messages extensions 
extensions axioms ax 
said oe said ax 
received oe received example theorem logic said oe said said said sending receiving 
message delivery guaranteed 
sending corresponds saying exactly likewise receiving 
ax 
send receive ax 
send said ax 
receive received record implies 
axiom expresses entity recording action implies performed action 
ax 
record action oe action doing knowing done 
axioms express conditions principal knows done relation 
ax 
action remember purge action oe action ax 
action oe action ax 
action oe action syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

group axioms 
axioms relate formulae involving group principals 
mention basic ones useful rest 
fp pn formula free occurrences formula results replacing free ax 
pn ax 
phig pn anonymity properties goal system protocol examining provide type anonymity hide fact principal set principals adversary 
broken parts 
piece information protected nature protection 
section set characterization pieces 
things hidden want hide principal originator message pair principals originator intended recipient respectively message profile security may wish hide messages originating principal fact originated principal strongly originated principal 
types hiding various facts just described hidden view may hidden varying degrees 
set various types anonymity achieved respect 
principal hidden intruder exact nature intruder vary context context may include insiders outsiders system running active merely passive attacks 
matter intruder implemented able represent types anonymity respect intruder allows succinct statement properties stated respect particular principal technically formula schemata formulae 
practice specify particular principal 
allow actual principal variables attempt 
similarly consider existential quantification principals reflect hiding arbitrary profiles associated principal generally tuple principals 
set assumptions 
main assumption form 
words single formulae single principal name occurs freely 
restriction single principals just syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

simplicity uniformity presentation 
generalization hiding said hiding said straightforward 
restriction single formulae minimal 
example wish hide profiling information facts associated generally expressible single formula oe 
attempt represent hiding arbitrary formulae language involve principal names 
unclear role play anonymity protection 
may explore possibility need arise 
major assumption true principal 
formula considering anonymity provided system protocol assume oe assume true 
worried trying prevent suspicion said case say unknown current logic language basically impossible 
logically equivalent 
axiom ax true true assume 
suspect 
possibility principal unknown partitioned set principal names meaningless intruder 
consider extension 
oe pn gamma assume definitions distinct names denote distinct principals 
says suspect wrt gamma principals possibly suspects 
precisely gamma principals exact property 
similarly properties 
possible anonymity intruder rule rule 
basically knowledge 
suspected pn gamma intruder narrowed things suspects 
anonymous pn gamma intruder narrowed things fewer suspects syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

suspected implies anonymous pm gamma oe pn gamma idea intruder narrowed things fewer suspects narrow fewer case proving property saying ok assume sake argument intruder narrowed suspects 
property better 
stronger simple bound intruder knowledge bound assume degree knowledge intruder 
exposed say formula exposed intruder knows truth formula knows exactly 
characterizations anonymity means attempt characterize anonymity 
reiter rubin range degrees anonymity absolute privacy provably exposed :10.1.1.30.3785
important differences approach 
definitions formal language designed formal specification analysis 
second approach probabilistic possibilistic 
return point presently 
formal characterization anonymity terms csp 
basic idea describe system means process renaming function consider system anonymous mapping process image back yields process 
space precludes clear setting characterization 
put doubt succinctly respect characterization parameters allow vary principal formula intruder doing observation 
capture different different intruders 
appears consider 
hand advantage expressing things entirely terms csp understood formalism 
logic meant alternative replacement csp approach 
different people different tastes regarding approach comfortable alternatives 
approach succinct intuitive expression properties existing framework analysis tool 
case necessarily mutually exclusive 
conceivable process algebra semantics logic 
take step combining advantages theorem provers model checker nrl protocol analyzer 
schneider sidiropoulos characterizations anonymity possibilistic probabilistic 
hope bring probabilistic language point 
reason think contributions occur possibilistic front 
syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

difficult assign probabilities 
case concerned nonprobabilistic behaviour users system interface assignment probabilities expected behavior may altered active intruder 
assigning probabilities misleading done correctly 
example remailers forward messages client second remailer tempted think messages coming second remailer percent chance client 
moments reflection show incorrect 
second probabilities assigned adding probabilistic expressiveness formal language usually greatly adds complexity specification analysis 
points illustrated information flow security literature 
basic concept noninterference introduced possibilistic analysis system design development related properties gone possibilistic nature 
fact substantial systems built date designed noninterfering sense taken possibilistic approach 
possible give probabilistic characterization noninterference 
system satisfying probabilistic properties clearly secure 
virtually significant design analysis done area doubt due complexity 
encouraging advances volpano smith 
state affairs mirrored formal level 
possibilistic characterizations possibilistic noninterference properties variety formalisms including notably epistemic logic 
epistemic characterizations probabilistic noninterference 
development discussion complex systems terms possibilistic properties 
expectation situation analogous formally analyzing anonymity 
probabilistic characterizations may applied substantial systems example crowds unclear prove general amenable formal specification analysis 
knowledge programs systems environments discuss specified knowledge programs approach fagin 
knowledge programs form case knowledge test action knowledge test action 
case syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

knowledge tests conjunctions formulae conjunct preceded principal actions performed principal running program 
action consequent clause may series actions performed principal 
knowledge test action clause considered atomic 
time clause program fire 
properly specified knowledge program knowledge tests mutually exclusive 
time clause properly specified program fire 
execution knowledge program actions defined model section ones taken execution current clause 
noted section system environment viewed group principal smaller environments 
examine point detail 
reasons twofold environment programs set presently simple 
serve accessible knowledge programs 
environment programs set generic describe environment subsequently examples 
generic environment programs programs describe environments various principals 
recall assume message delivery guaranteed uncertainty delay reflected behavior environment 
note clauses environment principals simpler system principals 
environments set doing message content fields simply forward message receive block possibly recording events 
sophisticated environments doing selective forwarding message content timing possible 
describe 
typically assume single environment system principals 
call pairwise environment 
sense communication graph system fully connected environment principal system principals environments need hostile 
practice environment principals knowledge programs knowledge programs standard tests involving epistemic operators see need tests examples looked reason added needed 
important differences 
placed uncertainty principals including explicitly represented environment principals 
sent messages received received messages sent albeit possibly environment principal 
natural call atomic environments 
complex environment forwards messages principals traffic sees reduced atomic principals 
misnomer 
detailed discussion environments scope 
syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

simply block transmission receive 
bother specify cases obviously direct communication principals care assume 
interested environment principal distributed group pairwise environment principals just mentioned example consider distinct clients sending queries anonymizer 
give examples basic environments complex environments built 
reliable environment principals simply passes messages sent alteration delay recording reliable environment program received said send remembering environment principals just reliable environment keeps track messages passes 
remembering environment program received said record receive send remember simple blocking environment simply blocks drops messages pass 
action explicitly contrast environment give redundant description 
simple blocking environment program received said remembering blocking environment blocks drops messages pass records message receptions 
remembering blocking environment program received said record receive environment may forward messages sent selected principal possibly group principal 
selecting traffic forwards environment may reveal traffic information parts intruder system employing chained remailers forwarding mechanisms 
pairwise environment selects sender receiver trivial 
simply block forward messages direction block forward messages direction 
example environment typically describe environment group principal 
set example environment selectively forwards messages particular principal program syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

virtually identical remembering environment forwards sending principal particular principal specified 
sender selecting environment program received said record receive send remember despite fact environments reducible pairwise environments pairwise environments serve basic building blocks cases 
find useful refer succinctly 
ep denote environment system principals andp ep runs program means messages delivered program 
note meant cover messages directions 
assume ep ep theorems environment programs course analysis assess various principals done know don know 
information comes primarily program specifications assumptions running program initial messages sent facts known 
main way able formally derive things knowledge programs means program theorems 
general form runs program precondition oe postcondition purposes analysis specifically assume way postcondition obtain principal run program precondition hold 
allows strengthen form runs program precondition postcondition examples program theorems 
generated automatically corresponding knowledge programs 
ultimately useful automated analysis 
content set hand 

runs reliable environment program receive send 
runs remembering environment program receive record receive send remember 
runs simple blocking environment program receive syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 


runs remembering blocking environment program receive record receive 
runs sender selecting environment program receive record receive send remember anonymizer example space precludes presenting knowledge programs example 
describe standard analysis procedure followed space permitted 
setting knowledge programs characterize system principals operating properly uncompromised 
proceed analysis 
consists setting giving contexts setting specific system environment principals programs running specifying intruder specify compromised principals necessary giving program theorems relating pre postconditions programs run assessing anonymity protections afforded programs conditions 
anonymizer knowledge programs anonymizer web proxy service receives queries submitted client strips identifying information forwards query relevant server 
replies received server forwards back client 
give knowledge programs specify anonymizer client server 
purposes assume multiple clients possibly multiple necessary assume server 
variables principal names fairly intuitive 
assume environment anonymizer set clients environment ea anonymizer server variable represents query represents response query 
assume communication client corresponding user occurs intervening environment 
contexts true clear add relevant environment principal 
client program case received said send remember received response said said response syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

send response purge send case anonymizer program case received said ea send ea remember purge receive record receive received ea response received said response send response ea purge receive ea purge send ea case server program case received ea said ea response send response ea record receive ea case assumes server logs queries responses 
anonymizer noted space set analysis 
state anonymizer expected hide 
examples formulae hidden intruder 
operating environment nature intruder set addition demonstrations level hiding afforded specified intruders specified environments 
said received response received response said response oe said introduced basic notion group principal associated model language logic 
demonstrated utility defining syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 

anonymity properties specifying anonymity protocol 
space limitations preclude presenting analysis protocol respect anonymity 
space set assessment hand anonymity example specified tedious complex 
fact infeasible provide quantitative hand assessments anonymity envision complex systems involving principals 
theory established starting point investigating suitable automated analysis techniques incorporating model checkers 
direction analysis types security properties characterization group principals 
particular believe ultimately give characterization things threshold cryptography proactive security 
cathy meadows anonymous referees helpful comments suggestions 

anonymizer 
www anonymizer com 
michael burrows mart abadi roger needham 
logic authentication research report digital systems research center february 

bieber cuppens 
logical view secure dependencies 
journal computer security 

randy browne 
stochastic non interference temporal stochastic processes covert channels 
odyssey research associates ithaca ny november 
unpublished manuscript 

canetti gennaro herzberg naor 
proactive security long term protection break ins cryptobytes vol 
spring pp 
ff 
available www rsa com pubs cryptobytes 
chaum 
untraceable electronic mail return addresses digital pseudonyms communications acm feb pp 


chaum security identification transaction systems big brother obsolete cacm october pp 


brian chellas 
modal logic cambridge university press cambridge 

cottrell 
mixmaster remailer attacks com loki remailer remailer essay html 
dolev yao security public key protocols ieee transactions information theory march 

fagin halpern moses vardi reasoning knowledge mit press 

ronald fagin joseph halpern yoram moses moshe vardi knowledgebased programs distributed computing 

gemmell 
threshold cryptography cryptobytes vol 
winter pp 

available www rsa com pubs cryptobytes syverson stubblebine group principals formalization anonymity 
fm formal methods vol 
springer verlag lncs sept pp 


janice glasgow glenn prakash panangaden 
logic reasoning security 
acm transactions computer systems august 

goguen meseguer 
security policies security models 
proceedings ieee computer society symposium security privacy oakland ca 

robert goldblatt 
logics time computation nd edition volume csli lecture notes csli publications stanford 

james gray iii 
mathematical foundation information flow security 
journal computer security 
preliminary version appears proc 
ieee symposium research security privacy oakland ca may 

tsudik 
mixing email babel symposium network distributed system security san diego february 

ostrovsky yung 
withstand mobile virus attacks proc 
th acm symposium principles distributed computation podc acm press pp 


reed syverson goldschlag 
protocols anonymous connections mobile applications security protocols th international workshop paris france april proceedings christianson lomas roe eds lncs vol 
springer verlag pp 


reiter rubin 
crowds anonymity web transactions dimacs technical reports april revised august 

schneider sidiropoulos 
csp anonymity esorics bertino eds lncs vol 
springerverlag pp 


syverson goldschlag reed 
anonymous connections onion routing proceedings ieee symposium security privacy oakland ca ieee cs press may pp 


paul syverson james gray iii 
epistemic representation information flow security probabilistic systems 
proc 
th ieee computer security foundations workshop pages county kerry ireland june 

stuart stubblebine paul syverson david goldschlag unlinkable serial transactions protocols applications appear acm transactions information systems security 

paul syverson different look secure distributed computation th ieee computer security foundations workshop csfw ieee cs press pp 
june 

dennis volpano geoffrey smith probabilistic noninterference concurrent language th ieee computer security foundations workshop csfw ieee cs press pp 
june 

peter wayner 
digital cash commerce net ap professional hill mass 

