pseudonym systems anna lysyanskaya computer science mathematics smith college submitted department electrical engineering computer science partial ful llment requirements degree master science computer science massachusetts institute technology june anna lysyanskaya 
rights reserved 
author mit permission reproduce distribute publicly electronic copies thesis document part right 
author 
department electrical engineering computer science spring certi ed 
ronald rivest webster professor electrical engineering computer science thesis supervisor accepted 
arthur smith chairman departmental committee graduate students pseudonym systems anna lysyanskaya submitted department electrical engineering computer science spring partial ful llment requirements degree master science computer science pseudonym systems allow users interact multiple organizations anonymously pseudonyms 
pseudonyms linked formed way user prove organization statement relationship 
statement called credential 
previous area protect system dishonest users collectively pseudonyms credentials share identity 
previous practical schemes relied heavily involvement trusted center 
give formal de nition pseudonym systems users motivated share identity trusted center involvement minimal 
give theoretical constructions systems way function 
suggest ecient easy implement practical scheme 
joint ronald rivest amit sahai 
thesis supervisor ronald rivest title webster professor electrical engineering computer science acknowledgments rst place ron rivest getting interested cryptography suggesting pseudonym systems research topic working topic amit sahai nite patience helping write thesis 
amit sahai working project 
am grateful alice wang david mazi eres reading drafts thesis suggesting improvements 
acknowledge support nsf graduate fellowship opinions ndings recommendations expressed publication author necessarily re ect views national science foundation darpa dabt lucent technologies graduate program women 
contents motivating example 
discussion previous 
overview results 
discussion model 
practical scheme 
organization thesis 
pseudonym model overview 
informal de nitions 
general de nitions 
preliminaries 
procedures 
requirements 
building pseudonym system procedures 
possible features 
distributed ca organizations 
expiration date 
credentials 
times credentials 
identity escrow 
credential revocation 
credentials group organizations 
constructions pseudonym systems way function preliminaries 
damg ard construction 
construction system multiple credentials 
construction system single credentials 
variations 
distributed ca organization 
expiration date 
credentials 
identity escrow 
credential revocation 
credentials group organizations 
practical constructions preliminaries 
discrete logarithm problem 
die hellman problem 
random oracle model 
building blocks 
proving equality discrete logarithms 
non interactive proof equality dl 
blind non interactive proof equality dl 
construction 
high level description 
detailed description 
assumptions 
proof security granted assumptions 
multiple credentials 
open questions extensions model 
theoretical constructions 
new practical constructions 

chapter advantages living computerized world ease nd information looking 
just matter seconds computers search gigabytes data extract precisely answer 
hand hand convenience comes side ect information increasingly dicult keep private 
piece private information incorporated data bank control able look 
fortunately cases ects eliminated applying appropriate cryptographic tools 
world computers possible send anonymous letter 
sense call way anonymity letter delivered trace sent reply 
service available digital world mix masters services 
going step way anonymity pseudonymity letter bob delivered anonymously alice correspond bob remains anonymous alice knows pseudonym charlie 
kinds services available anonymous re 
bob wants prove relationship alice 
thesis discuss cryptographic design system achieves ability 
call systems pseudonym systems called pseudonym credential systems 
pseudonym system main features 
individuals interact di erent organizations di erent pseudonyms 
result organizations record data organizations compare records able establish pseudonyms come individuals pseudonyms belong individual 
secondly individual pseudonym system prove statement organization relationship organization remaining 
proving statement information statement revealed receiving organization 
anonymity pseudonymity fascinating challenging technically achieve socially want 
focus technical feasibility referring reader social question excellent treatments brin dyson 
illustrate notion pseudonym system examples 
motivating example main motivating example medical 
medical records constitute sensitive information desire restrict access health data understandable example primarily illustrate technical points 
health systems served motivation studies areas cryptography trust management 
consider components health care system 
person alice receives health care guarantee employer 
employer knows name social security number able certain amount alice medical insurance 
health care provider insurance paid employer process alice medical insurance claims 
doctors hospitals diagnose treat patients 
prepare medicine 
research labs study patients bene science large 
suppose organizations know patient name social security number share information patient 
obvious problems scenario 
example research lab discovers alice high risk getting cancer health care provider raise cost insurance 
employer nds alice wants baby employer try re applies leave 
see health care system main weakness allows disclosure information extremely private nature 
problem patients names secret organizations establish les refer patient 
eliminate weaknesses goals simultaneously met anonymity patients ability example get medical expenses insurance guarantee patients fact medical insurance able 
elaborate goals 
hand need patients pseudonymous organizations 
patient approaches organization establishes pseudonym 
organization access information user refers pseudonym 
hand done way patient able convince organization status relationship 
patient money withheld certainly wants prove health care provider paid health care 
visiting doctor paying bill patient want prove health care provider done appropriately 
patient may choose prove doctor research lab discovered get cancer 
important patient transactions di erent organizations system unlinkable able prove organization statement relationship 
system break guarantee users share pseudonym example cost medical insurance policy group friends covered 
patients motivated honest enable friends identity 
system may useful settings especially settings arise digital world pseudonymous access data electronic services 
discussion previous pseudonym systems introduced chaum way allowing user ectively anonymously multiple organizations 
suggests organization may know user di erent pseudonym nym 
nyms unlinkable organizations combine databases build dossier user 
user obtain credential organization nyms demonstrate possession credential organization revealing rst nym second organization 
certi cation authority ca plays important role guaranteeing users system trusted behave credentials transferred properly 
shortly notion pseudonym systems introduced chaum developed model pseudonym systems rsa implementation 
scenario propose models motivating example important di erence 
scenario trusted center conducts operation transferring user credential organization 
pseudonyms model information theoretically unlinkable 
heavy reliance trusted center main weakness 
damg ard constructed scheme implements pseudonym system rely trusted third party 
scheme multi party computations bit commitments 
advantages scheme provably protects organizations credential forgery malicious users central authority protects secrecy users identities information theoretically 
central authority role limited ensuring pseudonym belongs valid user 
drawback damg ard result meant implemented practice zeroknowledge proof constructions inecient 
describe damg ard scheme detail chapter dedicated theoretical constructions 
chen presents practical discrete logarithm scheme damg ard model 
scheme trusted center validate pseudonyms participate credential transfer 
scheme main disadvantages requires honest behavior ca malicious ca needs transfer credentials users 
thesis practical scheme problem 
aside various disadvantages mentioned schemes major common weakness little motivate prevent user sharing pseudonyms credentials users 
example user may buy line subscription obtaining credential asserting subscription validity share credential friends 
setting medical motivating example patient may share medical insurance friends 
serious examples drivers licenses easy imagine 
happens notion user de ned ca responsible making sure users enter system trusted behave 
important conceptualize constitutes user digital identity 
existing schemes question avoided 
existing schemes assume certi cation authority interacts players system privileges user judgement 
fact certi cation authority may judgement doing enable groups individuals share identity privileges identity brings overlooked 
serious problem solved thesis 
overview results contribution thesis fold 
hand pseudonym system model corresponds settings obtain real life 
model identity user de ned concept users stake behaving 
time anonymity protected times 
discuss variations extensions model suitable di erent real life scenarios 
show theoretical constructions basic model numerous extensions realizable 
hand practical easily implementable construction basic model reasonable number theoretic assumptions 
results thesis obtained joined unpublished ronald rivest amit sahai 
discussion model main distinction model predecessors notion user de ned 
base proposed scheme presumption user master public key corresponding master secret key user highly motivated keep secret 
master public key registered legal digital signature key disclosure master secret key allow forge signatures important legal nancial documents name 
proposed model requires user share credential friend sharing master secret key friend identity sharing 
model user entity possesses master secret key 
basing security user motivation preserve high value secret key goldreich study controlled self delegation 
unpublished canetti incorporate notion anonymous credential granting schemes 
organizations credentials users identity know opposed pseudonymous users 
incorporate protection identity sharing pseudonym model credentials shown anonymously granted parties unlinkable pseudonyms 
user opens accounts di erent organizations di erent unlinkable pseudonyms 
pseudonyms related user authenticate valid pseudonym possesses master secret key create pseudonym 
organization may issue credential user known pseudonym 
credential may single prescription multiple driver license 
single credentials similar electronic coins anonymous transaction 
electronic coin protocols protect double spending revealing identity double generally protect transfer coin 
credential usable user issued 
settings voting situations drug prescriptions person may entitled buy drug sell prescription 
model certi cation authority ca just organizations system 
needed enable user prove organization pseudonym corresponds master public key real user stake secrecy corresponding master secret key 
system works way user share credential issued pseudonym sharing master secret key 
long ca refuse service cheating ca harm introduce invalid users system users lose outside world 
systems thing invalid user 
cases certi cation authority needed 
cases precisely ones covered chaum damg ard chen model pseudonyms formed correct way users sharing identity user identity remains users 
techniques studied model implemented need certi cation authority altogether 
show schemes implement various avors model exist way functions exist 
extends result damg ard 
practical scheme practical scheme meets speci cations model single credentials easy implement 
assumption related decisional assumption 
secret key motivates user share identity usable existing practical encryption signature schemes 
result system integrates existing technology 
organization thesis chapter formally de ne model pseudonym system 
discuss variations model various settings consider suitable 
chapter outline damg ard theoretical construction extend suit pseudonym system model 
chapter give practical construction pseudonym system single credentials 
close discussing open problems 
chapter pseudonym model overview informal de nitions pseudonym system users organizations interact procedures 
discussion model introducing procedures 
master key generation 
procedure generates master key pairs users organizations 
crucial assumption users motivated keep master secret key secret 
assumption justi ed master public secret key pairs correspond users form signing legal documents receiving encrypted data 
user entity person group people business holds master secret key corresponds master public key 
registration certi cation authority 
certi cation authority ca special organization knows user identity master public key user 
role guarantee users master public secret key pairs compromised cheat 
user nym ca master public key 
ca issues credential states valid user 
registration organization 
user contacts organization compute nym user 
exists identity extractor user authenticate nym holder extracts user master public secret key pair 
user demonstrates organization possesses credential ca 
issue credentials 
user organization engage interactive protocol user obtains credential 
transfer credentials 
user credential prove fact organization revealing information 
operation transfer credential credential transferred user pseudonym organization pseudonym 
want protect system main types attacks credential forgery malicious users possibly coalition organizations including ca try forge credential user 
user identity compromise pseudonym linking malicious organizations form coalition try obtain information user identity getting information user master public secret key pair identifying pair pseudonyms belong user 
main di erence model pseudonym system previous models model notion user de ned 
treatment damg ard user entity happens able demonstrate validity credential certi cation authority 
credential originally issued entity di erent subsequently shared remains unclear systems liable credential forgery attack credential forgery sharing 
general de nitions preliminaries security parameter denote unary string length assume computational device parties turing machine 
interactive turing machine mean machine input computation tape tapes tape reading intermediate input tape writing intermediate output 
probabilistic turing machine mean machine input computation tape tape contains independent bits drawn uniformly random tape called machine random tape 
polynomial time turing machine mean machine runs polynomial number steps 
non uniform family turing machines fm mean device contains turing machine collection strings fa length string polynomial input length device run 
negligible function function neg neg polynomials suciently large non negligible function satis es polynomial 
hard function computable non uniform family probabilistic polynomial time turing machines valid inputs negligible fraction suciently large easy function computable probabilistic polynomial time valid inputs 
secure interactive procedure secure multi party computation de ned oded goldreich 
omit goldreich level formalism state de nition formally de nition interactive procedure communication transcript common input probabilistic polynomial time turing machine input random tape ra output probabilistic polynomial time turing machine input random tape rb output secure party interactive procedure conditions hold exists simulator sa input produces random tape transcript function nonuniform family probabilistic polynomial size turing machines produced protocol behaving arbitrarily pr ra pr neg exists simulator sb input produces transcript random tape function nonuniform family probabilistic polynomial size turing machines produced protocol behaving arbitrarily pr rb pr neg importantly de nition captures property players eciently compute result interaction compute setting trusted third party 
trusted third party setting third party takes inputs computes outputs 
run simulator input output players comes transcript random tape player 
simulated conversation player compute function player inputs outputs just ectively participated interactive protocol 
de ne notion access turing machine interactive turing machine de nition turing machine said access turing machine 
provided special tape may access orders access directly 

step computation order save state tape 
step computation order return state previously saved intuition de nition access access interactive machine see behave depending inputs give able infer information access 
procedures master key generation de nition asymmetric key generation probabilistic polynomial time procedure input generates master public secret key pair notation means generated running 
public key produced contains description possibly implicit turing machine accepts input 
non uniform family polynomial time turing machines fm suciently large pr accept neg user generates master key pair su organization generates master public secret key pair gu asymmetric key generation procedure gu organization key generation type credential issued organization generates public key secret key pair go asymmetric key generation procedure go thesis assume organization issues type credential results generalize straightforwardly handle multiple credential types organization 
nym generation user generates nym interacting organization engaging secure interactive procedure ng organization 
de nition nym generation ng secure interactive procedure parties user master key pair su organization master key pair 
common input ng private input su private input 
assume nym generation done secure anonymous communication channel conceals information user 
common output protocol nym user organization 
private output user secret information si organization secret information si denote set nyms user established organization thesis assume nym results easily generalized 
similarly denote set nyms user established organization denote set nyms organization established user 
communication user organization nym established user communicate organization secure nym authentication de ned follows de nition secure nym authentication secure interactive procedure user organization common input procedure 
organization accepts probability neg user prove knows pu su si su corresponds pu formed running ng user private input su private output si organization rejects probability neg 
credentials kinds credentials 
single credentials single credential credential user may safely may allow organizations link di erent nyms user 
user wishes credential request multiple copies credential organization 
multiple credentials multiple credential may safely transferred organizations user wishes having interact issuing organization 
credential issue issue credential nym organization rst requires user proves owner running nym authentication organization user run interactive procedure ci 
de nition credential issue procedure ci secure interactive procedure user master public secret key pair su secret nym generation information si organization master public secret key pair secret nym generation information si properties 
common input ci po 

user private input ci su si 
organization private input ci si 

user private output credential cu 
organization private output credential secret information csi note output ci cu necessarily known organization 
credential transfer verify user nym credential organization organization runs secure interactive procedure ct user de nition credential transfer procedure ct secure interactive procedure user master public secret key pair su nyms corresponding secret nym generation information si si credential cu organization master public secret key pair secret nym generation information si common input ct po 
private input ct su cu si si pseudonym 
private input ct si inputs ct valid formed running appropriate protocols accepts rejects probability neg 
note credential single ct need interactive procedure 
user needs reveal cu perform necessary computation 
credential multiple procedure need interactive 
user need compute function cu pu su hand result convince credential holder 
requirements procedures described constitute secure pseudonym system satisfy requirements 
assume interactive probabilistic polynomial time turing machine may serve adversary de nitions 
authenticated pseudonym corresponds unique user identity user owns nym remain unknown require exists canonical turing machine called identity extractor id valid nym access turing machine successfully authenticate holder non negligible probability id outputs valid master public key secret key pair high probability 
require nym pair unique 
formalize requirement identity underlying nym 
specify number users organizations corrupt users organizations 
build interactive probabilistic turing machine simulate uncorrupted organization adversary simulator initialize parties control 
user controlled registers di erent nyms speci es 
time registers new nym identity extractor extract corresponding master public key secret key pair 
set nyms successfully registers master public key secret key pairs id extracts 
organization issues credentials nym speci es 
attempts authenticate nyms id extract master public key secret key pair authenticates say succeeds non negligible probability authenticating 
system satis es unique user nym requirement interactive probabilistic polynomial time turing machines probability succeeds attack described neg probability taken coin tosses security user master secret key want sure user master secret key su revealed public key pu user interaction pseudonym system 
require computed user secret key result user interaction system computed public key 
machine adversary wants compute function user master secret key 
user public key pu known 
specify number users organizations system control users user organizations 
build interactive probabilistic turing machine control simulate life system initializes players controls running master key generation procedure user organization 
initializes generating master public secret key pair su 
user establishes nym organization 
organization issues corresponding credential transfers organizations speci ed step repeated times speci es 
outputs guess value function wants compute 
succeeds value outputs correct 
system satis es security master key requirement interactive probabilistic polynomial time turing machines exists simulator probabilistic polynomial time turing machine pr succeeds experiment pr succeeds input pu neg 
credential sharing implies master secret sharing user alice valid credential want help friend bob improperly obtain privileges credential brings 
revealing master secret key bob bob successfully impersonate regards 
prevent attack require scheme alice discloses information allows bob credentials nyms ectively disclosing master secret key 
user alice interactive probabilistic polynomial time turing machine user bob interactive probabilistic polynomial time turing machine rest system simulated interactive probabilistic turing machine initializes system initializes user alice master public key secret key pair sa 
conversation requests set alice nyms various organizations issue credentials nyms 
recall time credential issued user issued authenticate holder nym 
way identity extractor verify alice nyms id sa 
halts 
chooses organization ones alice set account credential 
chooses organization ones alice account 
point consider running current state runs ct protocol transfer credential alice alice nym succeeded accepts 
system satis es credential sharing implies master secret sharing property interactive probabilistic polynomial time turing machines probability success exists probabilistic polynomial time turing machine outputs sa probability 
unlinkability pseudonyms don want nyms user linkable time better random guessing 
adversary specify number users system number organizations corrupt organizations users 
construct interactive probabilistic turing machine control players controlled cooperate simulate life system 
machines initialize players control running master key generation procedure user key generation procedure organization 
user nym established organization user authenticates valid holder nym 
nym established id extract public key private key pair 
mentally de ne function id maps established nym corresponding master public key private key pair extracted id organization issues credential user user transfers credentials nyms organizations 
single credential users rst get corresponding number copies credential 
step may repeated number times speci ed outputs pair nyms nyms user controlled organizations controlled addition simulator chooses uniformly random pair distinct nyms nyms user controlled di erent organizations controlled system satis es unlinkability requirement interactive probabilistic polynomial time turing machines suciently large security parameter pr id id pr id id neg 
note simulator may better adversary simulator outputs pair nyms organization 
point de nition adversary negligibly better simulator 
unforgeability credentials require credential may issued user organization cooperation 
adversary specify number users number organizations corrupt users organizations 
build interactive probabilistic turing machine simulate uncorrupted organizations machines initialize parties control 
user controlled registers di erent nyms speci es 
nym established require user authenticates valid holder nym id extract corresponding master public key private key pair 
mentally de ne function id maps established nym corresponding public key private key pair extracted id organization issues credentials nym speci es 
fn set nyms registers obtains credentials 
transfers credentials users nyms running ct procedure 
succeeds accepts credential user known nu id fid system satis es unforgeability credentials requirement interactive probabilistic polynomial time turing machines suciently large probability succeeds neg probability taken coin tosses pseudonym public key signatures encryption additionally optional desirable feature nym system ability sign nym encrypt decrypt messages 
building pseudonym system procedures procedures properties building blocks nym systems various speci cations 
ensure user uses master public secret key pair external pseudonym system need certi cation authority 
certi cation authority just organization gives credential validity 
user establishes nym ca reveals true identity authenticates valid holder proves id su pu master public key ca may verify 
ca issues credential validity user may subsequently transfer organizations prove valid user 
systems need certi cation authority need digital identity correspond physical identity 
example banking system problem users account groups individuals open accounts banks merchants 
possible features distributed ca organizations real life assume organization trusted organization reasonable goal duties ca distributed way 
obvious group organizations participate ca issuing ca credential verifying identity user 
step requires extensions model 
organization master key generation distributed robust protected incorrect behavior minority 

procedure ci distributed robust 
new parameters introduced number organizations represent certi cation authority number organizations need get order issue credential threshold usual coalition players able progress issuing credential discovering master secret key organization distributively representing 
expiration date systems may need incorporate expiration date credential 
feature easily added construction pseudonym system way function incorporating practical system method clever updating public key issuing organization remains open question 
credential issue expiration date issue credential nym organization rst requires user proves owner organization user run interactive procedure ci 
common input ci date 
user private input ci su si organization private input ci si 
user private output credential cu note see output 
credential transfer verify user nym credential organization expired time date organization runs secure interactive procedure ct user common input ct po date 
private input ct su cu si si pseudonym 
private input ct si inputs ct valid formed running appropriate protocols accepts rejects probability neg 
accommodate expiration date option unforgeability requirement obvious addition 
credentials variation setting organization issuing credential wants user organization verifying credential care time credential satis ed user care linking 
model accommodate setting credential issuing procedure take public key receiving organization extra input employ techniques introduced jakobsson designated veri er signatures 
times credentials clear extension single credential credential certain number times 
achieved trivially generating copies credential 
interesting length credential times credential credential 
modify credential issue procedure takes input 
need add obvious spending limit requirement credential times instances credential transfer linked 
identity escrow optional feature system anonymity revocation ability trusted passive third party 
topic discussed kilian petrank 
party may distributed large number organization user assured anonymity trusts big number 
sure trusted third party able revoke anonymity main procedures public key trusted third party extra input 
extra procedure discovers identity pseudonym holder secret key trusted third party input 
procedure coincide identity extractor 
chapter theoretical constructions implemented 
credential revocation nice feature challenging question point view implementation credential revocation 
considering credentials pseudonyms unlinkable possible revoke credential changing public key credentials issued far 
clear issuing organizations create database revoked credentials receiving organization check credential database violate unlinkability requirement basic model 
presence trusted third party functionality may achievable 
discuss constructions chapter 
credentials group organizations number organizations may issuing credential type 
example possesses massachusetts driver license matter town issued 
fact person driver license speci town may disclose information person 
notion credentials group may useful 
notion similar group signatures 
organization member group issue credential group 
computationally credential reveal information organization group issued 
group manager secret key allow determine identity issuing organization needed 
chapter demonstrate theoretical construction implements feature 
chapter constructions pseudonym systems way function chapter focuses demonstrating model chapter feasible assumption way functions exist 
theoretical constructions zero knowledge proofs heavily suggest practical way implementing pseudonym system 
signi cance demonstrating feasibility pseudonym systems various avors 
demonstrating existence way functions necessary sucient condition existence pseudonym systems de ne 
way functions exist open problem cryptography complexity theory reason want exist need research complexity theory 
introducing basic cryptographic notions way functions bit commitments signature schemes zero knowledge proofs 
show bit commitments digital signatures zero knowledge proofs damg ard constructs credential mechanism di erent model 
show extend result suit model pseudonym system de ned preceding chapter extensions 
preliminaries preliminary de nitions standard treatments :10.1.1.41.4144
de nition function way exists probabilistic polynomial time algorithm 
non uniform family probabilistic polynomial time turing machines fa suciently large jyj jyj neg jyj probability taken random bits way de ned master key generation protocol follows existence pseudonym systems implies existence way functions 
existence way functions necessary condition building pseudonym systems 
prove fact theorem theorem existence way functions necessary condition existence pseudonym systems 
proof suppose pseudonym system de ned chapter 
show construct way function asymmetric key generation procedure required construction pseudonym system 
recall probabilistic polynomial time procedure takes input unary string random bits random tape 
denote bits polynomial maximum length random string possibly require runs polynomial time possibly longer polynomial length 
gr denote output contents random tape gr denote rst public part gr 
denote set possible values gr 
way function propose fp gr need show function way 
exists ecient algorithm computes 
second suppose existed non uniform polynomialtime adversary input non negligible probability produce string gr 
running random string obtain veri er encoded accepts 
contradicts security asymmetric key generation non uniform polynomial time adversary unable invert function 
way function 
turns way functions construct bit commitment scheme signature scheme existentially unforgeable adaptive chosen plaintext attacks :10.1.1.41.4144
just existence pseudonym system existence way function necessary condition existence constructions 
de ned 
bit commitment scheme scheme allows user demonstrate committed value disclosing right away 
analogy real world writing commitment piece depositing safe bank 
obviously contents changed person deposited access 
de nition bit commitment scheme polynomial time algorithm computes function commit properties 
commit takes inputs random string length polynomial string length 
hard invert non uniform families probabilistic polynomial time turing machines fm prr commit neg 

information hiding functions non uniform families probabilistic polynomial time turing machines fm exists simulator probabilistic polynomial time turing machine pr commit pr neg 
commitment xm event input machine pairs commit commit 
non uniform families probabilistic polynomial time turing machines fm pr neg probability taken random bits commit string compute function commit 
open commitment prove value committed sucient provide 
bit commitment scheme constructed way function 
give de nition signature scheme existentially secure adaptive chosen message attack 
say adversary obtains signatures messages adaptively picked produce single valid signature 
shown signature scheme constructed way function :10.1.1.41.4144
de nition signature scheme consists algorithms key generation probabilistic polynomial time algorithm input produces pairs public key signature scheme secret key 
notation denotes obtained running input notation denotes public key obtained running 
sign probabilistic polynomial time algorithm input message produces string notation denotes obtained way 
verify probabilistic polynomial time algorithm input message public key string accepts 
course doesn want signature scheme just de nition said security 
de nition incorporates notion de nition signature scheme existentially secure non uniform families probabilistic polynomial turing machines fm suciently large pr outputs accept neg probability taken random bits de nition tells adversary access public key forge signature 
access information 
de nition captures strongest kind security digital signatures property attacker obtained signatures messages choice come valid signature single message 
de nition consider probabilistic polynomial time interactive algorithm property input sets polynomial produce ith query input available far 
receive signing oracle 
increment produces output denoted 
consider probabilistic polynomial time algorithm input outputs pair 
event outputs accept signature scheme existentially secure adaptive chosen message attack families probabilistic polynomial time interactive turing machines fa families probabilistic polynomial time turing machines fb suciently large pr neg probability taken random bits recall de nition secure interactive procedure chapter 
assume way functions exist talk ecient zero knowledge proofs string belongs language np witness denote set strings non deterministic turing machine decides accepts guesses encoded witness 
de nition zero knowledge proof secure interactive procedure 
common input string description non deterministic turing machine decides language 
player input 
prover 

player input 
veri er 

player produces output 

player output bit pr pr neg de ne notion knowledge extractor interactive polynomialtime machine access prover prove statement de nition suppose pair interactive probabilistic polynomial time machines correctly perform zero knowledge proof knowledge extractor prover probabilistic polynomial time machine access outputs witness 
state known theorem proof 
theorem way functions exist language np exists polynomial time veri er probabilistic polynomial time knowledge extractor strings exists probabilistic polynomial time prover correctly perform zero knowledge proof access outputs witness high probability 
zero knowledge proof system knowledge extractor exists called strong zero knowledge proof system 
point refer zeroknowledge proof mean strong zero knowledge 
ready damg ard construction credential system way function 
damg ard construction damg ard model di erent focus model just sketch construction 
damg ard model notion user master secret key master public key user id string 
example user id string social security number 
organization including ca public key secret key pair obtained running key generation procedure signatures de ned 
register ca user reveals idu ca obtains cu ca ca idu 
establish pseudonym organization user computes nu commit idu ru ru random string user generates order establish pseudonym 
prove valid registered ca user proves knowledge idu ru cu ca 
nu commit idu ru 
ca idu cu ca accept credential organization just signature cu nu 
transfer credential nu user proves zero knowledge knows idu ru nu cu 
nu commit idu ru 
commit idu 
cu nu security construction follows security bit commitment scheme security signature scheme 
construction system multiple credentials theoretical construction system multiple credentials straightforward extension construction previous section 
user runs create master public key secret key pair su organization creates master public key pair similarly 
register ca user reveals public key pu ca 
ca outputs cu ca ca 
establish pseudonym organization user computes nu commit pu su ru ru random string user generated purposes computing pseudonym corresponds private output si prove pseudonym nu valid registered ca user proves knowledge pu su ru cu ca 
su corresponds pu 
nu commit pu su ru 
ca cu ca accept identity extractor id knowledge extractor zero knowledge proof knowledge outputs pu su components 
issue credential user known organization organization outputs signature cu 
user nym organization prove credential user executes zero knowledge proof knowledge pu su cu 
su corresponds pu 
commit pu su 
commit pu su 
cu accept theorem system described pseudonym system 
proof straightforward verify input output speci cations procedures described satisfy de nition pseudonym system 
things remain shown 
show nym generation credential generation credential transfer procedures secure 

show system satis es additional requirements 
security nym generation procedure nym generation procedure user generates nym hands organization security follows trivially 
security credential issue procedure credential generation round procedure security follows trivially 
security credential transfer procedure user credential cu issued organization pseudonym transfers organization knows zero knowledge proofs prove knowledge pu su cu revealed organization 
su corresponds pu 
commit pu su 
commit pu su 
cu accept statements true user known possesses credential simulator zero knowledge proof statements simulator zero knowledge proof fact possesses cu satis ed de nition secure interactive procedure 
authenticated pseudonym corresponds unique user follows de nition bit commitment scheme polynomial time user know way open commitment 
authentication proofs knowledge open commitment 
knowledge extractor proof output commitment 
identity unique 
security user master secret key follows security bit commitment secret key zero knowledge properties proofs protocols 
credential sharing implies master secret key sharing proof credential transfer proof knowledge access prover recover secret key corresponding nym credential issued 
user able credential belonging user secret key extracted unlinkability pseudonyms follows zero knowledge properties proofs protocols organization learns nym reveals 
nym bit commitment user secret key security properties bit commitment nym user distinguished nym user 
unforgeability credentials order forge credential user succeed transferring credential possess 
existential unforgeability chosen message attack signature scheme user forge signature nym 
user able give proof knowledge signature non negligible probability order transfer extract forged signature user polynomial time 
contradiction credentials forged 
construction system single credentials essentially construction 
master key pseudonym generation procedures identical 
di erences credential issue transfer procedures 
requesting credential user generated random serial number credential random string rw computes commit rw 
hands issuing organization 
issue time credential user known organization organization obtains input user outputs signature 
user nym organization prove credential user discloses executes zero knowledge proof knowledge pu su rw 
commit rw 
su corresponds pu 
commit pu su 
commit pu su 
accept security system follows security multiple credential system described security bit commitment scheme 
variations ability prove statement zero knowledge powerful tool constructing pseudonym systems various avors 
surprising addition basic pseudonym system construction come theoretical constructions implement possibly desirable features pseudonym system 
distributed ca organization system constructed results multi party computation know trapdoor permutations exist party scheme constructed replaced group parties functionality system preserved 
expiration date incorporate expiration date credential modi cation credential issue transfer protocol issue credential expiration date user known organization organization outputs signature 
user nym organization prove credential user discloses executes zero knowledge proof knowledge pu su 
current time 

su corresponds pu 
commit pu su 
commit pu su 
accept security extension follows seen 
credentials replace signature scheme credential issue designated veri er signature scheme 
require existence trapdoor permutations stronger assumption existence way functions 
identity escrow construct pseudonym systems identity escrow public key cryptosystems semantically secure adaptive chosen ciphertext attacks exist 
generate nym commit function user encrypts su public key trusted third party 
security resulting pseudonym system follows security original pseudonym system security cryptosystem 
revoke anonymity pseudonym trusted third party decrypts pseudonym question 
alternatively user just append pu commit pu su prove public key underlying 
way trusted third party obtain user secret key just revoking anonymity 
additional step compromise security pseudonym system encryption scheme secure adaptive chosen ciphertext attack 
assumption existence cryptosystem strong 
general assumption constructions cryptosystems semantically secure adaptive chosen ciphertext attack 
credential revocation previously mentioned credential revocation trusted third party 
allowed trusted third party user pseudonyms linkable result credential transfer 
want involve trusted third party con rming credential revoked credential revocation procedure may cause identity compromise 
case single credentials identity compromise threatening credential revoked user holding noti ed user prevent identity compromised 
revoking multiple credential compromise identity holder larger extent organizations credential transferred past able link user credential 
assume trusted third party exists cryptosystem semantically secure adaptive chosen ciphertext attack construct pseudonym systems credential revocation 
di erently single multiple credentials 
single credentials just user generated random serial number credential encrypts trusted third party encryption algorithm randomness rw get rw 
index randomness denote randomness secret information pertaining credential serial number 
handed issuing organization 
credential transfer protocol remains essentially 
revoke credential encrypted serial number issuing organization hands trusted third party 
trusted third party decrypts gets checks spent 
appends list revoked credentials 
multiple credentials done completely di erent fashion 
trusted third party publishes public encryption algorithm ttp user picks random serial number random public key encryption decryption functions ew dw index denote associated credential serial number 
computes ttp ew dw ew hands issuing organization 
credential issue protocol essentially 
transfer credential user produces string ew hands receiving organization performs necessary zero knowledge proofs correctness 
revoke credential issuing organization contacts trusted third party produces trusted third party decrypts ttp ew dw obtains credential decryption algorithm dw allows decrypt ew recover trusted third party publishes dw database revoked credentials 
organization receiving credential user run dw string receives user check decrypts reject credential 
problem user credential revoked pseudonyms linked 
constructions prevent drawback take input zero knowledge proof entire database revoked credentials 
credentials group organizations assume existence public key cryptosystem secure adaptive chosen ciphertext attack 
allow public key group organizations linear size number organizations group extension trivial 
group public key just list public keys organizations group fpo encryption algorithm group manager remains main construction credential transfer procedure proving cu accept user proves exists po fpo cu accept discloses proving po remains open question ecient way increase size public key issuing group organizations 
chapter practical constructions chapter describing known constructions discrete logarithm problem 
show constructions build scheme implements model pseudonym system time credentials 
preliminaries construction number theoretic assumptions certain functions hard 
discrete logarithm problem hardness computing discrete logarithms dl short group prime order widely believed conjecture 
suppose bit prime number prime number qj 
denote multiplicative group modulo order generator group order call conjecture selected uniformly random hard compute integer mod ease notation drop mod part arithmetic expressions die hellman problem setting computational die hellman problem discrete logarithm problem group generator just 
conjecture mod mod selected uniformly random hard compute xy mod standard computational die hellman conjecture conjecture hard distinguish distribution form xy distribution form chosen independently 
conjecture sequence primes fq jq non uniform families oracle turing machines fm suciently large priori probability selecting opposed oracle guesses oracle correctly neg random oracle model random oracle model widespread way arguing security cryptographic scheme :10.1.1.41.4144
suppose existed universally trusted available trusted third party 
cryptographic problems go away 
random oracle way relaxing desire trusted third party desire trusted source random function bits trusts precomputed obtained query oracle outputs random bits 
scheme secure random oracle model follows breaking implies solving computationally hard problem truly random oracle existed 
random oracle exist replaced collision resistant hash function proof security random oracle model weaker proof security traditional 
considered practice scheme sensibly designed scheme output secret key receiving low probability input 
building blocks protocols follow main building blocks construction 
proving equality discrete logarithms review protocol protocol chaum pedersen assumed zero knowledge proof equality discrete logarithms :10.1.1.41.4144
protocol proving equality discrete logarithms common inputs prover knows choose send 
choose send send cx mod check ah note obtain ni non interactive version set hash function 
protocol proves knowledge discrete logarithm fact 
theorem result executing protocol veri er accepts probability neg prover knows mod proof suppose access prover respond di erent challenges obtain solving system linear equations prover respond challenge xed commitment know suppose prover respond challenge 
probability veri er picks challenge negligible 
case veri er reject probability neg 
theorem result executing protocol veri er accepts probability neg mod mod proof suppose veri er accepts cx cx follows choice unique challenge equation satis ed 
probability veri er pick challenge negligible 
conjecture protocol reveal value secret conjecture protocol secure interactive procedure 
note knowledge extractor protocol just needs ask prover di erent challenges commitment solve corresponding system linear equations compute secret non interactive proof equality dl note non interactive denote ni suciently strong hash function example random oracle select veri er challenge prover rst message :10.1.1.41.4144
blind non interactive proof equality dl clearly obtain transcript non interactive protocol executing interactive protocol 
addition execute interactive protocol way prover view linked resulting transcript 
protocol selected random transcript produced equally come choice protocol producing blinded transcript protocol ni common inputs prover knowledge protocol veri er input veri er wants prover produce valid transcript protocol ni input note prover behavior identical protocol 
choose send 
choose ag send mod send cx mod check ah note output transcript 
protocol blind veri er runs prover times shows outputs prover prover able guess correctly conversation output refers better random guessing 
theorem veri er output protocol independent prover view conversation 
proof suppose xed conversation prover veri er 
observe choice unique choice veri er output 
choice veri er output unique choice follows picked uniformly random induce uniform distribution output veri er 
prover get information conversation output corresponds 
construction ready construction building blocks introduced 
construction due chen acknowledge construction uses building blocks consequence ideas 
high level description user master public key corresponding master secret key user nym formed random base user know log raising power result user nyms tied secret credential issued want sure valid secret credential construction non interactive proof knowledge organization secret 
user uses twice linked produce credential 
detailed description pseudonym system protocols implemented follows user master key generation user picks master secret publishes mod organization credential key generation organization picks secret exponents publishes mod mod nym generation describe protocol gure 
pseudonym generation user master public key user master secret key choose set send 
choose set send compute execute protocol show log log remember nym 
note special case ca user send 
communication user organization authenticate nym user organization execute standard secure protocol proves user knowledge log 
run prove log log 
credential issue transfer protocols described gure 
issuing credential user nym organization organization public credential key organization secret credential key send ab 
choose run show log log veri er input obtain transcript run show log aa log veri er input obtain transcript remember credential cu 
transferring credential organization organization public credential key user nym organization user credential organization cu verify correctness transcripts ni showing log log log log execute protocol show log log nym public key signatures encryption encryption signature schemes discrete logarithm problem elgamal schnorr schemes 
assumptions random oracle model 
addition hardness assumptions necessary prove security scheme pseudonym systems 
recall setting publicly known large prime number large prime divisor generator multiplicative subgroup order denote group 
rely decisional die hellman assumption 

assume protocol proving equality discrete logarithms secure 

introduce new assumption 
oracle access machine input produces xs xs assumption hard querying inputs fx produce tuple form ys ys fx assumption appears new implied standard number theoretic assumptions believe reasonable 
proof security granted assumptions assumptions proposed practical scheme satis es de nition pseudonym system chapter 
clear procedures satisfy input output speci cations 
key generation security key generation procedure follows assumption hardness computing discrete logarithms 
nym generation nym generation secure procedure assume procedure simulatable nym generation simulatable parties 
credential issue random oracle model credential issue secure procedure 
follows random oracle model security get simulator simulate party view protocol party input output 
credential transfer credential transfer secure secure 
pseudonym corresponds unique user nyms system form 
master public secret key pairs form 
id function knowledge extractor protocol produces formed 
nym exactly public key secret key pair extracted 
security user master secret key assume equality discrete logarithms proof secure 
hardness discrete logarithm problem get pseudonym generation credential issue credential transfer secure procedures 
exists simulator interaction system 
inferred user master secret key lifetime system extracted simulating lifetime system user participation 
extracted contradicts hardness discrete logarithm assumption 
credential sharing implies master secret key sharing party scheme prove knowledge secret key protocol party knows extract running knowledge extractor 
unlinkability pseudonyms show pseudonyms unlinkable induction 
show nyms linked moment linked moment 
linked time just created 
violates decisional die hellman assumption 
suppose time nyms linked rst time lifetime system 
linked mean exists function computed pseudonyms computed computed trusted third party carrying credential transfers 
suppose time just nished operation involving owner pseudonyms 
known time known time 
suppose time just nished operation involving nym holder involving pseudonyms 
result operation link pseudonyms linked pseudonyms consider nyms linked rst time 
loss generality assume time just performed operation involved pseudonyms 
suppose just nished credential transfer pseudonyms 
credential transfer secure interactive procedure 
computed result credential transfer computed just output 
link nyms result output credential transfer violate decisional assumption 
operation time credential transfer nyms linked time 
suppose time just nished credential issue pseudonyms 
credential issue secure procedure result organization receive output 
nyms linked linked time 
pseudonyms linked time just generated 
nym generation secure procedure inferring information output violate decisional die hellman assumption 
nyms linked generated contradiction 
unforgeability credentials follows new assumption zeroknowledge nature protocol particular process establishing nym organization obtaining credential organization corresponds precisely behavior oracle new assumption 
multiple credentials able construct system multiple credentials completely conform speci cations model 
slight variation model straightforward modi cation scheme described get scheme multiple credentials 
modi cation model issuing organization participate credential transfer procedure 
suppose user credential computes function hands receiving organization 
able prove corresponds nym owns unable prove credential 
receiving organization ask issuing organization help veri cation corresponds credential con rm user credential 
implement pseudonym generation credential issue procedure remain 
result user possess cu ab user nym issuing organization 
user sample tuples cu 
tuple formed way correctly formed pseudonym user able prove log log issuing organization cooperates receiving organization con rm cu valid credential corresponds nym 
secure scheme time credentials 
chapter open questions thesis poses number open problems fall main categories 
rst category open problems de nitional desirable features pseudonym system captured model 
second category coming theoretical constructions model extensions rely heavily zero knowledge proofs 
third category open problems practical constructions pseudonym systems model 
open problems avors question assumption equivalent known assumptions decisional die hellman assumption problem practical construction pseudonym system scheme multiple credentials 
extensions model considered extensions model allow incorporate features expiration dates times credentials distributed duties organization credentials group organizations anonymity credential revocation mechanisms credentials 
list possibilities means exhausted 
depending application pseudonym system may arise extensions model considered 
general believe model captures essential ingredients pseudonym system notions users organizations de ned derive unforgeability unlinkability properties pseudonym system 
result unforgeability property organizations rest assured user forge credential result unlinkability property user rest assured organization learn learn 
theoretical constructions basic theoretical constructions impractical due heavy zero knowledge proofs optimal sense complexity operations depends security parameter 
ways improve theoretical constructions 
main open question construction non interactive theoretical pseudonym system pseudonym system having interactive zero knowledge proof correctness credential non interactive zero knowledge proofs 
better able eliminate zero knowledge proofs altogether base pseudonym system general assumptions way functions trapdoor permutations 
addition nice theoretical constructions wanted extensions basic model 
example construction credentials group organization impractical public key group linear size group 
new practical constructions construction improvement previous best practical construction due chen notion user de ned organizations system protected cheating ca 
possible eliminate ca cases chen scheme requires presence ca 
hand signi cant improvement existing practical construction construction far giving main mechanism looking practical pseudonym system multiple credentials 
addition practical scheme new assumption 
open problem come practical scheme pseudonym system utilizing assumption 
contributions de ning model pseudonym systems proving feasible proposing practical scheme signi cant improvement predecessors 
live world public key secret key sign documents day 
moving 
shifting computerized world encryption digital signatures increasingly important hand hand desire protect keys 
immediately practical believe model working due time 
bibliography bellare desai pointcheval rogaway 
relations notions security public key encryption schemes 
advances cryptology crypto pages 
springer verlag 
mihir bellare phillip rogaway :10.1.1.41.4144
random oracles practical paradigm designing ecient protocols 
acm conference computer communications security pages 
blaze feigenbaum lacy 
managing trust medical information systems 
technical report 
dan boneh 
decision die hellman problem 
proceedings third algorithmic number theory symposium pages 
springer verlag 
david brin 
transparent society technology force choose privacy freedom 
perseus press 
jan camenisch markus stadler 
ecient group signature schemes large groups extended 
advances cryptology crypto pages 
springer verlag 
ran canetti moses charikar ravi kumar sridhar rajagopalan amit sahai andrew tomkins 
non transferable anonymous credentials 
manuscript 
revision submission 
ran canetti oded goldreich shai halevi 
random oracle methodology revisited 
proceedings thirtieth annual acm symposium theory computing pages 
david chaum 
security identi cation transaction systems big brother obsolete 
communications acm 
david chaum 
designated con signatures 
advances cryptology eurocrypt pages 
springer verlag 
david chaum jan hendrik 
secure privacy protecting protocol transmitting personal information organizations 
advances cryptology crypto pages 
springer verlag 
david chaum torben pedersen :10.1.1.41.4144
wallet databases observers extended 
advances cryptology crypto pages 
springer verlag 
chen 
access pseudonyms 
ed dawson editors cryptography policy algorithms pages 
springer verlag 
lecture notes computer science 
cramer shoup 
practical public key cryptosystem provably secure adaptive chosen ciphertext attack 
advances cryptology crypto 
springerverlag 
ivan damg ard 
payment systems credential mechanisms provable security abuse individuals extended 
advances cryptology crypto pages 
springer verlag 
die hellman 
new directions cryptography 
ieee transactions information theory 
dyson 
release design living digital age 
broadway 
elgamal 
public key cryptosystem signature scheme discrete logarithms 
ieee transactions information theory 
oded goldreich 
secure multi party computation 
theory lcs mit edu oded 
oded goldreich silvio micali avi wigderson 
play mental game completeness theorem protocols honest majority 
proceedings nineteenth annual acm symposium theory computing pages 
oded goldreich birgit ronald rivest 
self delegation controlled propagation lose laptop 
advances cryptology crypto pages 
springer verlag 
sha goldwasser mihir bellare :10.1.1.41.4144
lecture notes cryptography 
ftp theory lcs mit edu pub classes crypto notes ps 
sha goldwasser silvio micali 
probabilistic encryption 
journal computer system sciences april 
sha goldwasser silvio micali ronald rivest 
digital signature scheme secure adaptive chosen message attacks 
siam journal computing april 
markus jakobsson sako russell impagliazzo 
designated veri er proofs applications 
advances cryptology eurocrypt pages 
springer verlag 
ari juels michael luby ostrovsky 
security blind digital signatures 
advances cryptology crypto pages 
springer verlag 
joe kilian erez petrank 
identity escrow 
advances cryptology crypto pages 
springer verlag 
anna lysyanskaya ronald rivest amit sahai 
pseudonym systems 
manuscript 
revision submission 
david mazi eres frans kaashoek 
design implementation operation email pseudonym server 
proceedings th acm conference computer communications security 
moni naor 
bit commitment pseudorandomness 
journal cryptology 
okamoto 
designated con signatures public key encryption equivalent 
advances cryptology crypto pages 
springer verlag 
john :10.1.1.41.4144
way functions necessary sucient secure signatures 
proceedings second annual acm symposium theory computing pages 
schnorr 
ecient signature generation smart cards 
journal cryptology 
michael sipser 
theory computation 
pws publishing 
paul syverson stuart stubblebine david goldschlag 
unlinkable serial transactions 
financial cryptography international conference fc pages 
springer verlag 

