focus requirements engineering exploring alternatives requirements analysis goal oriented requirements analysis techniques focus organizational technical objectives provide means refining objectives effectively explore alternatives requirements definition 
select set alternatives achieve objectives elaborate subsequent phases precise complete 
john mylopoulos university toronto lawrence chung university texas dallas stephen liao wang city university hong kong eric yu university toronto traditionally requirements analysis consisted identifying relevant data functions software system support 
data handled system described terms entity relationship diagrams functions described terms data flows 
object oriented analysis techniques offer class case state chart sequence diagrammatic notations modeling 
techniques form foundation contemporary software engineering practices requirements analysis involve understanding modeling functions data interfaces new system 
addition requirements engineer needs explore alternatives evaluate feasibility desirability respect business goals 
instance suppose task build system schedule meetings 
want explore system scheduling record meetings 
want evaluate requirements respect technical objectives response time business objectives meeting effectiveness low costs system usability 
select alternative best meet objectives refine meaning terms meeting participant scheduling conflict define basic functions system support 
need explore alternatives evaluate respect business objectives led research goal oriented analysis 
argue goal oriented analysis complements strengthens traditional requirements analysis techniques offering means capturing evaluating alternative ways meeting business goals 
remainder article details main steps comprise goal oriented analysis 
steps include goal analysis softgoal analysis softgoal correlation analysis goal correlation analysis evaluation alter ieee software january february ieee natives 
illustrate main elements proposed analysis technique explore typical scenario involves defining requirements meeting scheduling system 
goal analysis suppose meeting scheduling task generic goal want achieve 
decompositions explore alternative solutions 
alternative reflects potential plan satisfying goal 
presents decomposition schedule meeting goal 
mark decompositions arc indicates satisfying goal accomplished satisfying subgoals 
mark decompositions hand double arc decompositions require subgoals satisfied 
goal schedule meeting decomposed subgoals collect constraints generate schedule 
generate schedule subgoal decomposed subgoals find schedule manually automatically system designed interactively 
decompositions explore alternative ways fetching necessary information including timetable information publicly available potential participant 
simple example literally dozens alternative solutions 
generally diagrams exploration alternatives space large 
diagrams possible conduct simple form analysis 
particular suppose choose leaf nodes marked checkmark requirements system 
simple known algorithm explore achieved root goal 
particular algorithm propagates check upwards subgoals goal checked subgoals goal checked 
softgoal analysis unfortunately basic goal analysis help goals defined having having meeting scheduled 
goals clearly delineated 
suppose want represent analyze clear cut requirements system highly usable system improve collect constraints collect timetables share timetables system collects person collects email means schedule meeting collect constraints initiator meeting quality requirements called qualities nonfunctional requirements defined generically clear cut criteria determine satisfied 
requirements need looser notion goal richer set relationships indicate example goal supports hinders limited strict relationships 
model looser notion goal notion softgoal detail nonfunctional requirements software engineering 
softgoals represent goals interdependencies 
distinguish softgoals hard goal cousins softgoal satisfied sufficient positive evidence little negative evidence softgoal unsatisfiable sufficient negative little positive evidence 
illustrates example focuses quality highly usable system important objective functional goals encountered earlier 
softgoal usability represents requirement 
analyzing softgoal consists iterative decompositions involve relationships loosely defined dependency relations 
shows number relationships labeled sign indicates softgoal supports positively influences 
instance user flexibility clearly enhanced system quality modularity allows module substitutions system ability allow setting changes 
factors necessarily sufficient satisfy user flexibility 
labels describe relationships labels 
provides partial decomposition softgoal 
particular generate schedule interactively manually automatically 
decomposition illustrates alternatives achieving meeting scheduling goal 
january february ieee software error avoidance allow change settings ieee software january february usability information sharing allow change allow change allow change language colors state 
partial softgoal hierarchy usability 
adopted diagram lisa jennifer prepared graduate course taught eric yu 
ease learning user components modularity user programmability softgoals error avoidance information sharing ease learning rich space alternatives elaborated refinements 
relevant knowledge identifying softgoal decompositions dependencies 
relevant knowledge generic related softgoal analyzed 
instance general software system qualities reliability performance usability generic decompositions number finer grain quality factors 
generic rules decomposing finer grain softgoals 
example speed performance softgoal decomposed softgoals minimize user interaction efficient algorithms ensure adequate cpu power certain situations project specific task specific decomposition methods agreement project stakeholders 
software development project initially set softgoals required qualities 
technical system performance refer specifically qualities system 
organizationally oriented 
instance perfectly reasonable management require new system improve meeting quality increasing average participation effectiveness measured way cut average cost meeting costs include incurred scheduling process 
softgoal analysis calls qualities analyzed terms softgoal hierarchy shown 
user defined writing tool softgoal correlation analysis build softgoal hierarchies repeatedly asking done satisfy support particular softgoal 
unfortunately quality goals frequently conflict 
consider example security user friendliness performance flexibility high quality low costs 
correlation analysis help discover positive negative lateral relationships softgoals 
analysis noting top level lateral relationships negatively labeled relationship performance flexibility 
relationship refined relationships type subgoals performance capacity speed subgoals flexibility programmability information sharing 
repeat process reach point refine relationships softgoal hierarchies 
construction softgoal hierarchies discover correlations generic rules state conditions softgoals type say performance positively negatively influence softgoals type 
example correlation rule state complete automation prevent users customizing modifying output 
rule negatively correlates certain automation related performance softgoals certain flexibility ones 
shows diagrammatically softgoal hierarchy security correlation links hierarchies developed softgoal analysis process 
goal correlation analysis need correlate goals shown softgoals identified far propose order compare evaluate 
example alternative subgoals goal schedule meeting require different amounts effort scheduling 
respect softgoal minimal effort automation desirable doing things manually 
basis set positively negatively labeled relationships subgoals choose schedule automatically manually shown 
contrary determine meeting quality criterion doing things manually desirable presumably adds personal touch scheduling process 
shows possible set correlation links simplified version schedule meeting goal terms softgoals minimal effort quality schedule 
goal tree structure lower right half shows refinement schedule meeting goal quality softgoal trees upper left represent softgoals intended serve evaluation criteria 
illustrates major advantage distinguishing goals softgoals encourages separation analysis quality sort flexibility object applied system 
distinction lets bring relevant knowledge bear analysis process generic knowledge achieve quality system try achieve components specific achieve effectiveness software review meeting stakeholders 
knowledge structuring mechanisms classification generalization aggregation organize available know supporting goal oriented analysis 
evaluation alternatives final step goal oriented analysis calls evaluation alternative functional goal decompositions terms softgoal hierarchies constructed 
evaluate alternatives selecting set leaf goals collectively satisfy goals 
single goal schedule meeting want choose leaf goals labeled 
leaf goals clearly satisfy schedule meeting goal 
addition want choose sets leaf softgoals collectively satisfy provide best support top level softgoals 
satisfying softgoals impossible conflicts 
accordingly search alternatives involve finding set leaf softgoals maximize positive support top softgoals minimizing negative support 
result softgoal evaluation lead additional design decisions passwords allowing setting changes 
usability confidentiality flexibility integrity passwords minimize redundancy minimize external communication security accuracy course generally possible solutions satisfaction goals satisfying finding best support softgoals 
alternatives need evaluated compared 
putting pieces summary goal oriented analysis amounts intertwined execution different types analysis outlined article 
steps summarize process input set functional goals schedule meeting set qualities improve meeting participation reduce meeting costs 
step decompose functional goal hierarchy 
step decompose quality softgoal hierarchy 
step identify correlations softgoals 
step identify correlations goals softgoals 
select set leaf softgoals best satisfy input qualities 
step select set goals softgoals collection effort minimal person quality schedule minimal conflicts matching effort collect timetables system recoverability modularity degree participation availability extra testing january february ieee software maintainability performance 
partial softgoal hierarchy security correlations hierarchies 
schedule meeting means email manually updated timetables collect automatically 
result goal correlation analysis schedule meeting 
choose schedule authors john mylopoulos professor computer science university toronto 
research interests include requirements engineering databases knowledge systems conceptual modeling 
received phd princeton university 
influential award international conference software engineering president vldb endowment fellow aaai 
currently serves requirements engineering journal member editorial board acm transactions software engineering methodology 
contact jm cs toronto edu 
lawrence chung associate professor computer science university texas dallas 
research interests include requirements engineering software architecture electronic business systems conceptual modelling 
received phd computer science university toronto serves editorial board requirements engineering journal 
principal author non functional requirements software engineering 
contact chung edu 
wang associate professor department information systems city university hong kong 
interests include intelligent systems web intelligent agents business applications multiagent supported financial monitoring systems intelligent agent knowledge management systems 
received phd computer science university manchester 
contact edu hk 
stephen liao assistant professor information systems department city university hong kong 
research interests include oo modeling systems technology user profiling business data mining techniques applications 
received phd information systems aix marseille iii university 
contact edu hk 
eric yu associate professor faculty information studies university toronto 
research interests include conceptual modeling requirements engineering knowledge management organizational modeling 
served workshops agent oriented information systems held conference advanced information systems engineering caise aaai conference 
contact yu fis utoronto ca 
ieee software january february satisfy functional goals best satisfy qualities 
output set functions performed system collectively meet functional goals set 
output reflect set design decisions back ups intended address particular quality requirements 
addition output set requirements system operational environment requirement owners update timetables week 
hope agree steps outlined precede augment conventional requirements analysis 
defining data functions functional requirements produced goal oriented analysis 
example select set leaf nodes satisfying schedule meet ing goal proceed define meeting scheduling done role new system 
words conventional requirements analysis assumes settled particular solution meets predefined organizational technical objectives new system 
framework essentially simplified version proposal fleshed detail 
framework sample proposals 
example kaos methodology employs rich formal notion goal identification central building block requirements acquisition 
empirical evidence goal oriented analysis leads better requirements definitions 
different conceptions meeting goal led different ways handling conflict evaluating alternatives 
addition goals important mechanism connecting requirements design 
composite systems design approach instance goals construct prune design space 
different approaches goal oriented requirements analysis believe technique proposed search solution characterize early phases software development choice particular solution relates design decisions origins organizational technical objectives 

davis software requirements objects functions states prentice hall 

dardenne van lamsweerde fickas goal directed requirements acquisition science computer programming vol 
pp 


mylopoulos chung yu object oriented goal oriented requirements analysis comm 
acm vol 
jan pp 


chung non functional requirements software engineering kluwer publishing dordrecht netherlands 

anton goal requirements analysis proc 
nd ieee int conf 
requirements engineering cs press los alamitos calif apr pp 
xx xx 

van lamsweerde darimont massonet goal directed elaboration requirements meeting scheduler problems lessons learnt proc 
nd ieee int symp 
requirements engineering cs press los alamitos calif mar pp 


feather language support specification development composite systems acm trans 
programming languages systems vol 
apr pp 

