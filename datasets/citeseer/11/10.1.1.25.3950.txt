brics basic research computer science timed automata logic back francois kim larsen carsten weise brics report series rs issn january copyright fl brics department computer science university aarhus 
rights reserved 
reproduction part permitted educational research condition copyright notice included copy 
see back inner page list publications brics report series 
copies may obtained contacting brics department computer science university aarhus ny munkegade building dk aarhus denmark telephone telefax internet brics daimi aau dk timed automata logic back francois brics aalborg univ denmark kim larsen brics aalborg univ denmark carsten weise aachen univ germany successful techniques automatic verification model checking 
finite automata exist long extremely efficient model checking algorithms years algorithms applicable verification real time automata region techniques alur dill 
continue transfer existing techniques setting finite untimed automata timed automata 
particular timed logic put forward sufficiently expressive timed automaton may construct single characteristic formula uniquely characterizing automaton timed bisimilarity 
prove decidability satisfiability problem respect bounds number clocks constants timed automata constructed 
results succesfully accounted presence time supported european communities concur bra basic research computer science centre danish national research foundation 
exception occurs alur thesis alu decidability result linear timed logic called mitl 
contents timed automata timed modal logic model checking characteristic properties model construction proof theorem proof proposition successful techniques automatic verification model checking property formula propositional temporal logic automatically compared automata representing actual behaviour system 
extremely efficient model checking algorithms obtained finite automata respect branching time temporal logics ctl ce qs ces various fragments modal calculus koz ac el cs xin 
years model checking extended real time systems time considered dense linear order 
timed extension finite automata addition finite set real valued clocks put forward ad corresponding model checking problem proven decidable number timed logics including timed extensions ctl tctl acd timed calculus hnsy 
untimed setting automata logics enjoy number important relationships absent best unaccounted setting real time automata corresponding real time logics finite automaton ctl modal calculus sufficiently expressive corresponding characteristic formulas may expressed respect number behavioural preorders equivalences bisimilarity bcg gs automaton related preorder automaton satisfies characteristic formula second 
characteristic formulas automatically constructed time linear size argument automaton yields preorder checking method outperforms known algorithms cs 
relationship far established timed automata proposed real timed logics satisfiability problems ctl modal calculus proven decidable ec eh wol kp logical property possible automatically synthesize satisfying finite automata provided exists 
contrast satisfiability problems tctl undecidable acd hnsy results establishing desired relationships presence real time timed automaton 
particular put forward timed logic establish effective characteristic formula construction timed bisimilarity transforming timed automaton formula characterizing precisely equivalence class automaton 
timed bisimilarity automata reduces model checking problem combined model checking algorithm yields alternative algorithm timed bisimulation compared cer 
addition characteristic formula constructions may time abstracted equivalence lw faster relation ft immediately yielding kripke structure decision procedures relationships second prove decidability bounded satisfiable model construction algorithm formula bounds synthesize timed automata clocks clock compared constants greater provided exits 
combining characteristic formula construction bounded model construction algorithm enables decide automaton simplified terms number clocks constants comparison 
remainder organized follows section give short presentation notion timed automata section logic section review region technique alur dill ad decidability result model checking problem section presents characteristic formula construction section presents bounded model construction algorithm 
timed automata fixed set actions ranged 
denote set natural numbers set non negative real numbers 
denotes set delay actions fffl rg denotes union set clocks denotes set formulas built boolean connectives atomic formulas form bm denotes subset constant greater definition timed automaton tuple ha ei finite set actions finite set nodes initial node finite set clocks theta theta theta theta corresponds set edges 
hj bi represents edge node node action denoting set clocks reset enabling condition clocks example consider clock automaton described left part 
automaton nodes clocks edges 
edge action fxg reset set enabling condition edge 
informally system starts node clocks initialized 
values clocks increase synchronously time 
time automaton current node change node edge hj bi provided current values clocks satisfy transition clocks get reset 
time assignment function denote set time assignments denotes time assignment maps clock value fxg ffl ffl automaton behaviour 
denotes assignment maps clock value agrees cnc condition time assignment boolean value describing satisfied 
clock automata timed automata ha ei jcj state automaton pair hj vi node time assignment initial state hj time assignment mapping clocks 
semantics labelled transition system ma sigma oe gamma 
sigma set states oe initial state hj gamma 
transition relation defined follows hj vi gamma 
hj iff hj bi hj vi ffl gamma 
hj iff may apply standard notion bisimulation mil par labelled transition systems determined automata letting range states respectively timed bisimulation defined largest symmetric relation sigma theta sigma ffl gamma 
exists gamma 
say strong timed initial states strong bisimilar 
example reconsider automaton 
coordinate systems right part indicates states point coordinate systems represents unique time assignment top resp 
bottom coordinate system representing states involving node resp 

indicated transition sequence hj ffl gamma 
hj gamma 
hj ffl gamma 
hj gamma 
addition indicated perform transition state hj timed modal logic consider dense time logic clocks recursion 
logic may seen certain fragment calculus hnsy 
definition finite set clocks id set identifiers integer 
set formulae id generated syntax ranging tt ff hai kg id meaning identifiers specified declaration assigning formula identifier 
understood write def 
clocks called formula clocks formula said closed formula clock occurring scope operator 
timed automata ha ei interpret formulas extended state hj hj vi state time assignment transitions extended states defined hj ffl gamma 
hj di hj gamma 
hj iff hj vi gamma 
hj informally holds extended state delay transition leading extended state satisfying 
denotes existential quantification arbitrary delay transitions 
similarly denotes universal quantification delay transitions hai resp 
denotes existential resp 
universal quantification transitions 
formula introduces formula clock initializes extended state satisfies formula case modified state reset satisfies 
introduced formula clocks formulas type satisfied extended state provided values named formula clocks satisfies required relationship 
extended state satisfies identifier satisfies corresponding declaration definition 
formally satisfaction relation extended states formulas defined follows allowing maximal recursion slightly different notion model definition timed automaton declaration 
satisfaction relation largest relation satisfying implications hj ui tt true hj ui ff false hj ui hj ui hj ui hj ui hj ui hj ui hj ui hj di hj ui hj di hj ui hai hj hj vi gamma 
hj hj ui hj ui hj hj vi gamma 
hj implies hj ui hj ui hj ui hj fxg hj ui hj ui relation satisfying implications called satisfiability relation 
follows standard fixpoint theory tar union satisfiability relations implications fact say satisfies closed formula write hj ui note closed hj iff hj vu real time interval modalities extended timed modal logic introduced obtainable derived operators def def satisfied extended state extended state satisfying reached delay formula called clocks formula contains formula clocks 
formulas derived modalities clearly clock formulas interval modality defined formula clock 
example consider timed automaton described 
may argued initial state hj satisfies formula hai hci tt ff hbi tt ff intuitively formula means action performed delay strictly action performed immediately positive delay action performed delay interval action performed delay 
model checking model checking problem consists deciding timed automata satisfies specification problem decidable region technique alur dill ad acd provides semantics timed automata form finite labelled transition systems truth value formulas maintained 
basic idea timed automaton states hj hj close respect clocks values say region perform actions extended states hj hj region satisfy formulas 
notion region defined equivalence class relation time assignments hnsy btc def tg denote integral part ftg def gamma btc denote fractional part 
def minfn ng 
definition set clocks 
equivalent respect denoted iff iff ii bu bu fu fu iii gamma iff gamma iv gamma bu gamma bu gamma fu gamma fu gamma equivalence classes called regions denotes region contains time assignment denotes set regions set clocks maximal constant decision point view important note finite 
note condition constant greater belong region region fl define fl truth value fl 
conversely region fl easily build formula called fi fl fi fl tt iff fl region fl fi fl fl mapped value tt precisely fl fl note fi fl viewed formula 
region define reset operator 
region define region denoted succ region ae fu fu notion region slightly refined 
obvious way building fi fl consider conjunction formulas satisfied fl denotes finite set modulo boolean reductions formulas constant greater succ fl fl succ fl fl fi fl fi fl fi fl fi fl fx yg minf gamma fu kg informally change fl succ fl correspond minimal elapse time modify enabled actions current state 
denote fl th successor region fl fl succ fl 
region fl possible reach region fl succ fl fl denote fl required number step fl fl succ fl fl 
example gives overview set regions defined clocks maximal constant 
case different regions numbered 
corresponding formulas successor regions indicated regions 
general successor regions determined lines upwards right 
timed automata ha ei ka maximal constant occurring enabling condition edges ka define symbolic semantics symbolic states fl fl follows fl gamma 
fl iff fl hj ui gamma 
hj fl fl gamma 
succ fl iff true consider respect formula clock set maximal constant kl consider timed automata ha ei disjoint 
extended symbolic state pair fl fl max ka kl 
fl region denote fl jc set time assignments fl restricted automata clock set similarly fl jk denotes projection time assignments fl formula clock set define symbolic semantics follows set empty definition largest relation satisfying implications fl tt true ii fl ff false iii fl fl fl iv fl fl fl fl succ fl vi fl succ fl vii fl hai fl fl jc gamma 
fl jc fl jk fl jk fl viii fl fl fl jc gamma 
fl jc fl jk fl jk implies fl ix fl cy fl fl fxg fl xi fl fl relation satisfying implications called symbolic satisfiability relation 
write fl fl confusion possible 
symbolic interpretation closely related standard interpretation definition stated theorem theorem formula hj ui extended state timed automaton hj ui delta follows model checking problem decidable suffices check truth value formula respect finite transition system hn theta fg oe corresponding extended symbolic semantics characteristic properties recall characteristic formula construction finite automata gs bcg see 
construction defines characteristic formula phi node terms similar characteristic formulas transition reflected phi addition conjunct ha phi 
characterize strong bisimilarity phi contains addition conjunct psi action psi disjunction transitions general definitions characteristic formulas phi constitutes simultaneous recursive definition automaton may cycles obtain desired characterization solution sought maximum 
timed automata characteristic formula construction necessarily take account time assignment addition actual node 
delta time assignment delta delta alternatively may think finite automata zero clock timed automata 
phi ha phi phi characteristic formula finite automata 
timed automaton ha ei shall define characteristic formulas form phi fl node fl region clocks construction phi fl follows closely pattern finite case 
need able determine edges enabled region fl 
edge hj bi resp 
denotes resp 

fl define fl fe fl ttg fl fe fl ag 
fl resp 
fl set enabled transitions resp 
transitions fl may characteristic formula construction timed automata definition timed automata ha ei 
region fl node introduce identifier phi fl characteristic formula associated symbolic state fl definition declaration phi fl phi fl def fl ha phi fl fl phi fl fl fi fl phi fl denote id set identifiers phi fl da corresponding declaration 
note declaration phi fl quite formula due presence implication 
easy transform equivalent formula negation fi fl expressed abbreviation fc fl denotes fl 
note da uses jcj formula clocks 
declaration phi fl contains groups conjunctions closely related characteristic formula construction finite automata 
group contains ha formula edge enabled region fl 
edge clearly takes automaton extended state fl 
second group conjuncts contains action formula type psi psi disjunction labelled edges enabled region fl 
groups exhaustively characterizes action behaviour extended state fl third conjunct formula dealing delay transitions requiring delay leading particular successor region fl satisfy corresponding characteristic formula 
example reconsider timed automata described example corresponding regions example 
give declaration characteristic formulas 
define nil def ff denote fi fl fi phi fl def nil fi phi fl fi phi fl fi phi fl fi phi fl phi fl def hai phi fl phi fl ff ff fi phi fl fi phi fl fi phi fl phi fl def hbi phi fl hci phi fl phi fl phi fl ff fi phi fl fi phi fl fi phi fl fi fi fi nil phi fl def hbi phi fl phi fl ff ff fi phi fl fi phi fl fi fi fi nil phi fl def nil phi fl def nil main theorem proof appendix theorem ha ei ha ae timed automata 
ae hae vi hj ui iff hae ui da phi da corresponds previous definition phi fl fl model checking decidable may characteristic formula construction decide timed bisimilarity timed automata decide timed automata timed bisimilar simply compare automaton characteristic formula 
corollary timed bisimilarity timed automata decidable 
state satisfies nil action performed 
model construction section address satisfiability problem want decide exists timed automaton satisfying formula 
hardness problem illustrated proposition proposition psi clock formula defined follows psi def hai delta delta delta hai ha tt ff psi satisfiable clock automata 
consequence proposition deduce number clocks automata number clocks 
fact similar results tctl conjecture satisfiability problem undecidable address restricted bounded satisfiability problem bounds placed number automaton clocks size constants clocks compared formula declaration set clocks integer want decide synthesize exists automata 
main result theorem bounded satisfiability problem decidable 
remainder section devoted proof theorem example bounded satisfiability checking 
decision procedure closely related canonical model construction modal logic hc 
formula maximal constant 
set formula clocks occurring 
set clocks integer want decide exists automaton satisfying 
set subformulae obviously finite 
problem pi subset thetal max 
problem pi said satisfiable exists automaton node fl pi fl 
call solution pi 
proof appendix due lack minimal fixed point construct lack ability express liveness properties unable adopt undecidability proofs tctl jcj clock automata maximum constant including subformula precisely satisfiable 
problem pi said maximal satisfies closure conditions fl pi fl tt pi fl pi fl pi fl pi fl pi fl pi fl pi fl pi fl pi fl pi fl pi fl pi fxg fl pi fl pi fl pi lemmas proofs trivial lemma pi pi pi satisfiable pi satisfiable 
lemma pi satisfiable exists maximal problem pi containing pi satisfiable 
suffices consider satisfiability maximal problems 
problem pi region fl action define problem pi fl set fl fl pig 
introduce new notion problems 
set maximal problems 
consistency relation pi gamma fl pi fl fl gamma fl fl ff pi gamma fl hai pi exists bm fl tt pi fl pi fl pi ii fl fl tt pi fl pi say maximal problem consistent belongs consistency relation 
key lemma lemma pi maximal problem 
pi consistent pi satisfiable 
proof easy show pi pi maximal consistency relation 
consistency relation containing pi 
construct canonical automaton ha ei ffl fj pi pi cg ffl pi ffl hj pi pi bi iff fl pi fl tt fl pi shown solves problems particular fl pi pi pi fl 
prove show relation fl defined pi fl fl iff fl pi pi symbolic satisfiability relation 
show fl satisfies eleven implications definition ffl implications iii gamma vi xi follow maximality pi ffl implications ii ix follow directly consistency ffl implications vii viii follow construction possible consistency lemma decidable maximal problem consistent 
proof pi set maximal problems theta clearly pi finite 
set relations maximal problems finite 
relation easy check consistent choices possible reset set set bm finite 
formula bounds consider finitely maximal problems pi containing fl 
follows satisfiable precisely maximal problems consistent decidable due lemma 
note proof theorem constructive consistency relation gives timed automata satisfying 
example consider formula example hai hci tt ff hbi tt ff model construction algorithm show automata satisfies 
formula clock jcj fx yg denotes automata clock formula clock 
formula hai 
consider problem pi fl hai fl refers regions example 
maximal problem including pi pi fl hai fl hai fl tt fl tt pi consistent exists relation containing maximal problem pi fxg fl tt fl pi distinguish cases depending ffl pi contains fl 
maximal contains fl hci tt fl ff 
fl ff fl ff fl ff ae pi pi consistent fl hci tt fl ff require existence maximal problem containing fl ff fl ff 
consistency relation 
modulo boolean reduction ffl fxg pi contains fl fl hci tt fl ff fl hbi tt fl ff 
fact possibilities pi depending term fl hbi tt fl hbi tt fl hbi tt term fl ff fl ff fl ff contained pi due maximality 
case fl hbi tt fl ff pi fl fl ffl fl fl exists maximal problem pi fxg fl tt fl tt pi condition fxg fl fl fl fl ff pi requires fl ff pi consistency relation 
automata satisfies 
formula example satisfiable clock automaton automata 
easily established fact timed bisimilar automata satisfy formulas follows automaton example inequivalent automata respect timed bisimilarity 
combining bounded model construction algorithm characteristic property construction previous section obtain algorithm deciding timed automaton simplified number clocks size constants clocks compared 
combined method constructively seen clock automaton obtained changing edge enabling condition example may simplified equivalent automaton 
corollary timed automaton clock set natural number decidable exists automaton timed bisimilar main contributions characteristic formula construction timed automaton give logical formula uniquely characterizing model construction algorithm logical formula possible synthesize satisfying timed automaton bounds number clocks constants 
results may pursued improved number directions notion characteristic formula construction may applied behavioural preorders order obtain corresponding preorder checking algorithms 
shown characteristic formula constructs exists faster relation ft time abstracted equivalence lw 
results solve positively decidability bounded satisfiability problem follows result satisfiability problem conjecture problem fact undecidable 
decidability satisfiability problem bounds number clocks left open interesting problem 
includes study decidability satisfiability problems extended minimal fixedpoint construction 
ac arnold 
linear algorithm solve fixed point equations transition systems 
information processing letters 
acd alur courcoubetis dill 
model checking real time systems 
proceedings logic computer science pages 
ieee computer society press 
ad alur dill 
automata modelling real time systems 
theoretical computer science april 
alu alur 
techniques automatic verification real time systems 
phd thesis stanford university 
andersen 
model checking boolean graphs 
proceedings esop volume lecture notes computer science springer verlag berlin 
springer 
bcg browne clarke grumberg 
characterizing finite kripke structures propositional temporal logic 
theoretical computer science 
ce clarke emerson 
design synthesis synchronization skeletons branching time temporal logic 
proc 
workshop logics programs volume lecture notes computer science pages berlin 
springer verlag 
cer 
decidability bisimulation equivalences parallel timer processes 
proc 
cav volume lecture notes computer science springer verlag berlin 
springer verlag 
ces clarke emerson sistla 
automatic verification finite state concurrent system temporal logic 
acm trans 
programming languages systems 
cs cleaveland steffen 
computing behavioural relations logically 
proceedings th international colloquium automata languages programming volume lecture notes computer science springer verlag berlin 
springer 
ec emerson clarke 
branching time temporal logic synthesize synchronization skeletons 
sci 
comput 
programming 
eh emerson halpern 
decision procedures expressiveness temporal logic branching time 
comput 
system sci 
el emerson lei 
efficient model checking fragments propositional mu calculus 
proceedings logic computer science pages 
ieee computer society press 
ft moller 
relating processes respect speed 
technical report ecs lfcs department computer science university edinburgh 
gs graf sifakis 
modal characterization observational congruence finite terms ccs 
information control 
hc hughes cresswell 
modal logic 
methuen 
holmer larsen yi 
decidability bisimulation equivalence regular timed processes 
proceedings cav volume lecture notes computer science springer verlag berlin 
hnsy henzinger nicollin sifakis yovine 
symbolic model checking real time systems 
logic computer science 
steffen 
characteristic formulae 
information computation 
appear 
koz kozen 
results propositional mu calculus 
proc 
international colloquium algorithms languages programming volume lecture notes computer science springer verlag berlin 
kp kozen parikh 
decision procedure propositional mu calculus 
lecture notes computer science 
lw larsen wang 
time abstracted bisimulation implicit specifications decidability 
proceedings mfps 
mil milner 
communication concurrency 
prentice englewood cliffs 
par park 
concurrency automata infinite sequences 
proceedings th gi conference volume lecture notes computer science springer verlag berlin 
springer 
qs sifakis 
specification verification concurrent programs cesar 
proc 
th internat 
symp 
programming volume lecture notes computer science pages berlin 
springer verlag 
tar tarski 
lattice theoretical fixpoint theorem applications 
pacific journal math 
wol wolper 
tableau method temporal logic overview 
logique anal 
xin liu 
specification decomposition concurrency 
phd thesis aalborg university 

proof theorem proof going show hae vi hj ui hae ui phi timed strong bisimulation 
ffl assume hj ui gamma 
hj hae ui phi hae ui hai phi 
hae ui gamma 
hae ui hae phi 
hae vi gamma 
hae 
hae hj ffl assume hae vi gamma 
hae hae ui gamma 
hae ui 
hae ui phi hae ui phi 
hae phi 
hae hj ffl complete proof show hae di hj di exists hae ui phi follows hae di fi phi 
clearly implies hae du di phi hae du di phi 
hae di hj di declaration associating fl phi fl 
define structural induction follows hae ui tt true hae ui ff false hae ui hae ui hae ui hae ui hae ui hae ui hae ui hae di hae ui hae di hae ui hai hae hae vi gamma 
hae hae ui hae ui hae hae vi gamma 
hae implies hae ui hae ui hae ui hae fxg hae ui phi hae vi hj ui going prove relation 
show sufficient demonstrate hae ui phi implies hae ui phi ffl consider hj ui ae gamma 
hj hae ui phi hj ui hae vi exists hae vi ae gamma 
hae hj hae def 
hae phi 
hae ha phi 
ffl consider hae vi gamma 
hae hj ui hae vi exists hj ui gamma 
hj hj hae hae phi hae ui phi 
ffl consider hae vi ffl gamma 
hae di know hj di hae di hae di phi 
hae di fi phi 
hae phi hae phi 
satisfiability relation included conclude hae ui phi hae vi hj ui proof proposition proof ha ei timed automata psi hj psi 
phi subformula ha tt ff psi exists state hj vi satisfying phi requires exists different reachable regions delay hj vi jcj 
easy build clock automata satisfying psi consider clock automata transitions allow reach state hj vi 
build transitions hj fg fact transitions suffices reach state 
publications brics report series rs francois 
larsen carsten weise 
logic back 
january 
pp 
rs peter bro theis 
dynamic algorithms dyck languages 
january 
pp 
rs jens chr 
kim larsen 
synthesizing distinguishing formulae real time systems 
december 
pp 
rs kim larsen bernhard steffen carsten weise 
constraint oriented proof methodology modal transition systems 
december 
pp 
rs amos anna mike paterson 
lower bounds monotone span programs 
december 
pp 
rs andersen kim larsen jesper 
automatic synthesis real time systems 
december 
pp 
rs sten 
hol basis reasoning functional programs 
december 
phd thesis 
viii pp 
rs luca aceto alan jeffrey 
complete axiomatization timed bisimulation class timed regular behaviours revised version 
december 
pp 
appear theoretical computer science 
rs 
efficient string matching coded texts 
december 
pp 
rs peter bro noam nisan shmuel safra avi wigderson 
data structures asymmetric communication complexity 
december 
pp 
