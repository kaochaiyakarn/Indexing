framework behavioural cloning michael bain claude sammut department artificial intelligence university new south wales sydney australia email mike cse unsw edu au claude cse unsw edu au july describes experiments automatically reactive agents 
method behavioural cloning logged data skilled human operators input induction program outputs control strategy complex control task 
initial studies able successfully construct behavioural clones suffered drawbacks clones brittle difficult understand 
current research aimed solving problems learning framework separation agent goals knowledge achieve 
traditional control theory requires mathematical model physical process predict behaviour appropriate control decisions determined 
unfortunately processes complicated model accurately insufficient information available process environment 
cases heuristic methods prove useful 
heuristics come 
may hand crafted knowledge experts possible control skills sub cognitive performed thinking conscious knowledge skill 
reason machine learning plays important role building knowledge control systems 
dynamic system controlled depends time scales involved 
example highly dynamic system aircraft 
suppose wish control large plane 
system large response time control decision may quite long 
say example pilot wishes lower flaps landing approach 
depending angle flaps may take quite seconds 
inertia large aircraft effect lowering flaps delayed 
fact piloting large commercial aircraft normal circumstances requires high degree conscious planning 
hand suppose piloting highly responsive aircraft fighter plane 
case aircraft responds control decisions quickly pilot decision making correspondingly fast fact fast conscious thought possible 
skills sub cognitive just fighter pilot skill 
mathematical philosopher whitehead wrote profoundly erroneous habit thinking doing 
precise opposite case 
advances extending number important operations perform thinking 
engineering knowledge systems learn human skill concerned conscious planning control pilot engage subconscious reactions fighter pilot 
focus 
skills limited exotic domains 
model dynamic system usually resort seat pants control 
example consider system container crane 
large gantry transport heavy loads swinging rope dock ship vice versa 
non linear nature traditional control theory unable provide optimal control strategies maximise throughput human operators known perform better better automated systems 
acquired skill enables perform efficiently unable articulate skill sub cognitive 
human sub cognitive skills tacit sense owner skill unaware mode operation 
skilled human operator plant usually conscious goals sub goals attempting achieve 
goals may served separate procedure 
machine executable forms sub cognitive skills simplify construction practical control systems introducing multi agent architecture low level agents may regarded expert solvers particular problem 
chairman global access problem solving environment selectively invokes members committee specialists access different limited part environment 
chairman embodies explicit knowledge easily articulated hand crafted 
specialists implement low level real time control skills human performed conscious level articulated 
create kind knowledge agent may separately derived inductive learning production rules recorded human performance skilled task 
complex control skills humans built components explicitly communicate 
sufficient sampling input output machine learning programs construct rules result behaviours similar original exemplars michie 
clones exemplar derived agents effect symbolic representations subsymbolic behaviours 
review systems employed behavioural cloning diverse application domains 
look briefly heuristic control systems behavioural cloning goal structures explicitly represented 
concludes description prototype system combining behavioural cloning explicit goal structures 
learning situation action rules behavioural cloning behavioural cloning seeks build situation action rules learning traces skilled operator behaviour 
human capable performing task ask explain task performed ask shown 
machine learning create symbolic description skill introspection human operator fails task performed thinking 
demonstration behavioural cloning michie bain hayes michie task pole balancing 
number practical applications developed 
method behavioural cloning best understood looking applications 
learning fly sammut hurst michie modified flight simulation program log actions taken human subject flies aircraft 
log file create input induction program 
quality output induction program tested running simulator autopilot mode autopilot code derived decision tree formed induction 
central control mechanism simulator loop aircraft controls updates state simulation set equations motion 
repeating loop instruments display updated 
logging flight information display update modified pilot performs control action moving control stick changing thrust flaps settings state simulation written log file 
subjects flew times 
start flight aircraft points north runway 
subject required fly defined flight plan consists 
take fly altitude feet 

level fly distance feet starting point 

turn right compass heading approximately ffi subjects told head particular point scenery corresponds heading 

north south distance feet turn left head back runway 
scenery contains grid marks ground 
starting point turn grid line reached 
corresponds feet 
turn considered complete azimuth ffi ffi 
line runway 
aircraft considered lined aircraft azimuth ffi heading runway twist sigma ffi horizontal 

descend runway keeping line 
subjects hint aiming point near runway 

land runway 
flight control actions recorded 
pilots flights complete data set consists events 
data recorded event ground boolean plane ground 
limit boolean exceeded plane limit wing stall boolean plane stalled 
twist integer ffi tenths degree see elevation integer ffi tenths degree see azimuth integer ffi tenths degree see roll speed integer ffi tenths degree second elevation speed integer ffi tenths degree second azimuth speed integer ffi tenths degree second airspeed integer knots integer feet second distance real distance centre runway feet altitude real feet distance real distance northern runway feet fuel integer pounds rollers real sigma elevator real sigma real thrust integer flaps integer ffi ffi ffi elevation aircraft angle nose relative horizon 
azimuth aircraft compass heading twist angle wings relative horizon 
elevator angle changed pushing mouse forward positive back negative 
rollers changed pushing mouse left positive right negative 
thrust flaps incremented decremented fixed steps keystrokes 
angular effects elevator rollers cumulative 
example straight level flight stick pushed left aircraft roll anti clockwise 
aircraft continue rolling stick centred 
thrust flaps settings absolute 
event recorded state simulation instant action performed output 
delay response stimulus ideally output state simulation stimulus occurred action performed time response stimulus 
know stimulus 
unfortunately way knowing 
human responses sudden piloting stimuli vary considerably take second 
example flying pilot usually anticipates aircraft near prepares response stimulus occurs 
time simulator passes main control loop current state simulation stored circular buffer 
estimate loops executed second 
control action performed action output state simulation time 
earlier determined size buffer 
data analysis quinlan quinlan program generate flight rules data 
induction programs save enormous amount human effort analysing data real applications usually necessary user spend time preparing data 
learning task simplified restricting induction set pilot data time 
autopilot constructed subjects generated training data 
reason separating pilot data pilot fly flight plan different ways 
example straight level flight maintained adjusting throttle 
airplane elevation zero climb higher speeds increase lift 
adjusting throttle maintain steady altitude preferred way achieving straight level flight 
way maintaining constant altitude regular adjustments elevators causing airplane pitch 
data flight segmented stages described previously 
flight plan described pilot achieve successive goals corresponding stage 
stage requires different manoeuvre 
having defined sub tasks told human subjects learning program advantage 
stage separate decision trees constructed elevator rollers thrust flaps 
program filters flight logs generating input files induction program 
attributes training example flight parameters described earlier 
dependent variable class value attribute describing control action 
generating decision tree flaps flaps column treated class value columns data file including settings elevator rollers thrust treated ordinary attributes 
attributes control variables subject delay described previous section 
expects class values discrete values elevator rollers thrust flaps numeric 
preprocessor breaks action settings sub ranges discrete labels 
sub ranges chosen analysing frequency occurrence action values 
analysis done pilot correctly reflect differing flying styles 
disadvantages method 
sub ranges poorly chosen rules generated controls fine coarse 
secondly concept ordered class values classes combined construction decision tree 
event recorded change control settings 
change determined keeping previous state simulation buffer 
control settings different current state change recognised 
mechanism unwanted side effect recording intermediate values control setting changed wide range values 
example effects elevator rollers cumulative 
want bank aircraft left stick pushed left short time centred keeping left cause airplane roll 
stick centred elevator roller actions 
means low elevator roller values recorded stick pushed returned centre position 
ensure records low elevator roller values swamp data filter program removes steady points extreme points stick movement 
control engineers familiar kind filtering 
terms graph control values differentiated values zero crossings derivative kept 
generating autopilot processing data described submitted summarised rules executed controller 
decision tree algorithms noise tolerant introducing pruning 
data contain noise branches decision tree created classify bad data 
effects noise reduced removing branches near leaves tree 
done growing branches insufficient data cutting back branches removal decrease classification accuracy 
flight data noisy decision trees generated conservative setting pruning tested simulator 
pruning levels gradually increased rule breaks 
longer able control plane correctly 
procedure results smallest readable rule succeeds accomplishing flight goal 
linking autopilot simulator test induced rules code autopilot 
postprocessor converts decision trees statements incorporated flight simulator easily 
hand crafted code determines stage flight reached decides change stages 
appropriate rules stage selected switch statement 
stage independent statements action 
data human pilots recorded delay account human response time included 
rules derived data effects delayed amount data recorded 
rule fires letting effect control setting directly rule output value stored circular buffer 
controls 
value control setting previous values buffer 
lag constant defines far go back buffer get control setting 
size buffer set give lag approximates lag data recorded 
rules set control values instantaneously say stick moved infinite speed position 
clearly unrealistic 
control values taken delay buffer enter circular buffer 
controls set average values buffer 
ensures controls change smoothly 
larger buffer gentle control changes 
flying autopilot example rules created cloning elevator take rule generated pilot data elevation level pitch elevation airspeed level pitch airspeed pitch states thrust applied elevation level pull back stick elevation increases 
delay final elevation usually reaches close values usually obtained pilot 
pitch indicates large elevator action pitch indicate gentle elevator action 
complex case turning 
stage flight requires large turn left 
rules quite complex 
understandable greatly simplified pruning 
illustrate important point rules tandem explicit link 
rules rollers elevator left turn 
azimuth right roll azimuth twist left roll twist roll twist level pitch twist twist pitch twist pitch sharp turn requires coordination roller elevator actions 
aircraft banks steep angle elevator pulled back 
rollers rule states compass heading reached bank left runway take outward leg return leg landing flight profile 
provided twist angle exceed 
elevator rule states long aircraft twist leave elevator level pitch 
twist exceeds pull back stick 
stick pulled back sharply greater twist 
rollers cause twist elevator rule invoked produce coordinated turn 
profile complete flight shown 
michie bain hayes michie study clean effect 
flight log trainer contains spurious actions due human inconsistency corrections required result 
appears effects inconsistent examples pruned away leaving control rule flies smoothly 
container crane control bratko behavioural cloning construct control system container crane illustrated 
task operator pick load point transport load specified goal point 
operator control speed trolley change length rope lift deposit load 
dynamics system quite complex load swing container crane 
rope causing trolley accelerate decelerate 
addition load swinging lowered ground operator dampen swing succeed 
beginners task perform slowly predict effects swing wait oscillations dampen slowing trolley 
experienced operator anticipates swing starting trolley going slowing allowing load overtake trolley speeding catch load just target location load deposited minimal swing 
non linearities involved crane control challenging problem traditional control theory 
considerable economic advantage gained cloning expert human operators 
experiments bratko volunteers trained simulator actual crane 
parameters simulator realistic possible 
measured variables position velocity trolley rope angle angular velocity rope length velocity 
control actions available operator applying horizontal force trolley applying vertical force rope 
simulator modes display 
show state system graphical reproduction crane similar show instruments indicating values state variables 
volunteers learned control crane graphical display learned instrument display 
group know system crane 
told bring state variables certain values controls unspecified nature 
interesting point experiment second group just 
indicates having physical model system gave advantage 
conforms expect sub cognitive skill time required decision shorter time required consciously reasoning physical model 
volunteers skilled task traces behaviour recorded learning fly 
classification tree method bratko experimented regression trees output decision rules numeric values discrete classes 
experiments succeeded avoided problem class variable 
learning algorithm significant difference cloning methods crane control divided different stages appear advantage creating sub goals task 
experiments crane showed clean effect clone performed trainer 
learning fly experiments created control rules brittle 
rules deal variation initial conditions disturbances performance task 
flight control showed order build robust clone training examples acquired noisy simulator includes disturbances turbulence 
example straight level flight turbulence aircraft desired altitude heading pilot need 
induction program sufficient examples recover aircraft desired state 
showed random disturbances leads production robust control rules cope variations operating conditions aircraft 
crane control rules problem common flight control rules 
correspond human intuition 
printed circuit board components automatic insertion manual assembly touch pba test final assembly packing basic stages manufacturing process 
tempting construct pure situation action rules ignored goaldirected behaviour 
example straight level flight pilot know aircraft desired altitude positive climb rate required 
order achieve pilot may increase throttle elevation aircraft 
reactive behaviour takes place strategy achieve goal 
cloning methods described far gross goal specifications rely solely reactive behaviour entire task 
discuss goal directed behaviour combined reactive behaviour keeping nilsson reactive systems 
discuss application behavioural cloning learning schedule production line 
learning schedule unbalanced production line complexity variability manufacturing systems difficult develop automated scheduling systems analytical methods 
manufacture competitively important react rapidly changes manufacturing environment current shop floor status minimise effects disruptions kerr 
kerr developed reactive scheduler telephone manufacturing plant behavioural cloning skilled human scheduler 
simulation model developed data obtained human scheduler quickly performing observations actual process 
schematic diagram plant shown 
resources shop floor organised consisting series workstations execute different operations 
assembly done automatically equipment inserts components printed circuit boards 
remaining odd shaped components inserted manually followed soldering 
printed circuit board assemblies inspected defects repaired retested 
final assembly consists adding keypad fitting assembly telephone casing 
completed telephone assembled packed box 
conveyor belt links various workstations 
workstation buffer storage area incoming boards processed 
start shift buffer 
scheduling operations consists assigning labour various workstations order account size start shift buffer desired size shift buffer volume throughput 
reactive scheduling useful process times may vary component failures lead unpredictable delays machines breakdown go due planned maintenance labour unpredictable 
task scheduler allocate labour balance line improve throughput reducing inventory levels 
general scheduling strategy predetermined shift scheduled breaks buffer level exceeds threshold buffer level falls threshold equipment breakdown repairs previously broken equipment completed sudden drop total labour capacity reallocate labour entire production line basis current buffer levels additional phones produced time shift equipment status labour capacity 
construct clones decisions human scheduler logged time labour reallocated 
sets decision trees constructed workstations automatic insertion manual assembly touch handset assembly test 
addition shift table attributes build scheduler workstation attributes automatic insertion ffl difference buffer levels manual assembly touch pba test 
ffl number phones left meet shift production target 
ffl time shift 
manual assembly ffl difference buffer levels touch pba test 
ffl number phones left meet shift production target 
ffl time shift 
touch ffl difference buffer levels pba test 
ffl number phones left meet shift production target 
ffl time shift 
handset assembly ffl difference buffer levels packing 
test ffl number phones left meet shift production target 
divided stages middle different scheduling strategies process process steady state 
attributes build sets decision trees shown table 
examples taken shifts 
clone built tested simulations shifts included random variations test robustness scheduler 
comparison automatic scheduler built traditional optimisation techniques clone gave significantly better throughput better balanced line 
kerr clone human provided training examples 
learning achieve goals interesting features behavioural cloning method develop working controllers representation goals 
rules constructed pure situation action rules reactive 
feature appears result lack robustness 
situation occurs outside range experience represented training data clone fail entirely 
extent clone robust training presence noise 
clone representation control action achieve particular goal choose actions flexible manner totally new situations 
section discuss different application machine learning goals learned explicitly second phase learning constructs rules applying actions achieve desired goals 
conclude section discussion cloning learning goal structures combined 
leech leech describes application machine learning controlling chemical process consists converting uranium gas uranium powder pressing powder cylindrical pellets 
leech process complex human expert understands integrated process behaviour 
results standard statistical analysis difficult plant operators interpret 
prior application machine learning control plant done seat pants adjustment operators 
machine learning applied stages produce simple understandable control system resulted significant improvements process yield 
stage learning concerned identifying variables determine high medium low yield 
attributes process measured normal operation plant 
time yield plant recorded 
example input decision tree learning program similar id 
output decision tree predicts yield plant values measured variables 
example tree shown 
yield low yield high yield high names variables measured plant 
decision tree converted set rules yield low yield high yield high immediate benefits analysis revealed measure variables irrelevant determining yield plant 
step correct settings control variables achieve values measured variables result high yield 
measured variables significant determining yield 
training examples collected variables 
attributes examples values eleven control variables plant class value measure variable 
decision trees built predict value measured variable control settings plant 
example decision tree shown 
low ok ok low low ok ok note values discretised ranges low ok high 
decision tree converted set rules low ok ok low low ok ok sets rules 
tells control system desired values plant outputs measured variables 
second set rules tells control system values plant inputs control variables required obtain desired outputs 
relatively straight forward build complete control system 
leech demonstrates goal directed behaviour reactive systems learned 
method chemical plant directly applied control tasks flying driving container concept yield 
section describe semi automatic method building goal directed controllers 
goals controls effector set allocations set ue se model 
example plant perceived influences control inputs output goals agent effector view system 
compressed heuristic universal reaction planners developed stirling method capturing human control knowledge 
particular emphasis placed building robust controllers tolerate actuator failures 
behavioural cloning attempts avoid questioning expert behaviour stirling approach obtain expert starting point controller generated automatically 
expert asked supply influence factors 
numbers range indicate directly control input affects output goal 
illustrated 
control action influence goal variable means main effector influences value measure variable action lesser effects variables classed main effector goal variable influence matrix control actions grouped sets goal variable unique effector ue effector influence goal variable 
maximal effector greatest influence particular goal variable 
effectors may secondary influence goal variable 
secondary effectors se effectors goal variable main effector 
ue se sets stirling control plan generator cpg algorithm generate operational control plans 
algorithm assigns appropriate effectors control various output goals order importance 
informally cpg algorithm create agenda goals consist output variables values deviate set point 
agenda may ordered importance goal variable 
agenda empty select goal deviation small attempt assign effector order ue se deviation large attempt assign effector order ue se 
examine effector invoked add agenda 
remove selected goal selection effector qualified conditions ffl controller ue goal se goal 
ffl choosing se side effects goal variables 
procedure tells control actions effect desired change goal variables 
actions may executed variety ways 
stirling gives example 
suppose variables near desired values 
wish double value maintaining current levels 
cpg algorithm 
initially appears goal agenda 

unique effector required deviation large try apply 
affects appended agenda 

current goal effector successfully assigned removed agenda 

current goal 
assume deviation small 

attempt assign se control selected assigned control selected side effect variable causing expansion agenda 

agenda empty terminates assignments fy bg read control goal desired state effector control goal desired state effector 
plan executed sequentially bring desired value bring desired value 
loop sample plant regular intervals terminating phase desired value reached 
alternatively actions executed parallel 
strategy corresponds followed novice experts tend combine practised behaviours think 
influence matrix cpg plans pd controller architecture 
model human sub cognitive skill cpg method capture notion pre planning normally carried 
skilled operator think various influences controls outputs act basis experience 
usually faster trying produce plan executing 
try simulate kind expert behaviour stirling cpg algorithm plan generator exhaustively generated combinations actions different possible situations 
large database plans compressed applying machine learning produce set heuristics controlling plant 
architecture system shown 
create input learning system quinlan goal variable considered zero small large deviation desired value 
combinations deviations initial conditions cpg algorithm 
addition stirling considered possibility control action fail 
plans produced combinations deviations combinations effector failures 
style somewhat similar leech stirling devised goal centred control strategy learning identify effectors required control particular goal variables 
deviation goal variable decision tree built identify appropriate control action including circumstances control actions may available due failure 
example tree goal variable shown control active deviation non zero control control inactive control control active control control control active control control control action selected conventional proportional controller attain desired value 
method successfully control simulated cold rolling mill steel plant 
control aircraft simulation sammut flight broken stages 
major difference required goals stage carefully specified behavioural cloning 
example original specification stage left turn north south distance feet turn left head back runway 
turn considered complete compass heading translated north south distance feet establish roll sigma maintain pitch sigma airspeed knots sigma knots climb speed ft sec sigma ft sec 
plane compass heading return roll sigma maintain variables values 
recalling influence matrix constructed hand requires help human expert behavioural cloning 
far produced smoother robust controllers 
question arises combination behavioural cloning method produce robust controllers requiring minimal advice expert 
learning effects goals behavioural cloning section discuss extending framework behavioural cloning 
original formulation technique requires learning mapping state vector 
control action 
standard machine learning algorithms classification 
reactive control implemented induced theory partition state space classifying region terms action typically applied skilled operator 
complex control tasks classical behavioural cloning presents problems bratko 
worse successful execution clone relatively simple control task result behaviour appears michie 
address shortcomings re formulated behavioural cloning framework 
controller comprises effects level goals level 
levels theories built inductive learning traces skilled operators 
sense technique behavioural cloning continued new framework 
learning tasks level slightly different classical behavioural cloning 
effects level mapping state vector 
state variable state vector required include control actions 
theories thought approximating operator model effects system applying certain control actions 
goals level mapping state vector 
state variable state variable may control action state vector may include include variables external plans background knowledge 
theories thought approximating operator model goals guiding control system time 
execution levels linked follows control system 
assume circuit semantics nilsson continuous evaluation system inputs nilsson practice experiments rely sampling sensor values fast rate 
sample state vector updated 
state vector goals theory executed update current set goal variables output variables goals theory 
value goal variable new target value compared value corresponding system variable 
variable control action target value directly assigned 
difference current target values variable computed 
difference passed effects theory searched rule output value consequent closely matches 
non control action variables antecedent consistent current state vector values control action variables assigned 
form execution call goal directed reactive abduction abducibles kowalski control action variables antecedents rules effects theory 
method summarised algorithm sketch 
called grail short stands goal directed reactive abduction inductive learning 
remainder section give examples learning effects goals flight domain discuss relations framework approaches 
learning effects level require rule model effects certain state variables control actions 
goals level controller effects rules inductively learned trace examples 
case flight system variables subdivided number distinct types 
example orientation aircraft described terms pitch roll yaw 
corresponding controls elevators ailerons 
simulator position slightly simplified disabling advice operation incorrectly simulated 
consequently changes grail framework offline stage inductive learning behavioural traces learn theories ffl goal variable ffl effects variable online execution goal directed reactive abduction time step ffl update values state variables ffl update values goal variables goal theories ffl match heads effects rules corresponding goals select action variables bodies effects rules ffl update values action variables abduction grail framework behavioural cloning 
yaw heading treated side effects changes roll pitch twist roll 
general formulation effects model set rules definite clauses 
rule form effects variable effects value action variable action value action variables abducibles sense 
desired effect rule model head matches effect control variable assigned value cause required effect 
rule body contain extra literals imposing conditions action cause effect 
example take simple theory elevation speed defined terms elevators 
induced instances trace 
note elevators rate controller effects variable chosen time steps approx 
sec elevators elevation elevation speed time elevators elevation elevation speed comparing effects elevators elevation elevation speed 
elevation speed 
linked natural goal elevation differencing target actual values 
elevation speed elevators elevation speed elevators elevation speed elevators elevation speed elevators similar effects rule relation rollers roll speed 
picture complicated comes effects domain airspeed 
airspeed mainly influenced throttle conditional elevation system variables 
additionally time delay effect throttle changes airspeed greater delay effects 
subject current learning effects 
learning goals problem learning goals seen terms variables attended values assigned variables order achieve desired outcomes system control 
clearly difficult task 
goals specified sufficient detail possession robust accurate effects model implement complex behaviours required 
flight domain begun learn goals rules determine system variables terms external environment variables 
example theory type 
distance goal elevation height goal elevation height goal elevation height goal elevation distance goal elevation goal elevation preliminary stage hope improve method learning goals number ways 
moment goal variables expressed terms external environment extended necessary include background knowledge task specific instruction relational information pertaining visual perception 
control effects goals currently grail approach behavioural cloning development 
evidence initial investigations allows machine time steps approx 
system variables takeoff time elevation airspeed flaps throttle comparing system variables takeoff 
learned rule controllers cloned trace examples induced theories compact lines code measure obtained previous behavioural cloning method 
evaluation cloning method traditional grail theory size examples traces figures comparison traditional grail behavioural cloning stage standard flight plan take climb altitude feet level theory sizes measured lines program code 
note trace required grail method compared traditional method total number examples order magnitude 
due different sampling schemes employed 
sammut example recorded pilot changed setting control variables 
contrast due requirement building effects model grail method fixed rate sampling scheme employed 
current system sampled approximately seconds 
flight clone closely tracks trace learning examples drawn 
suggest clone brittle 
results indicate performs reliably starting different initial positions 
clones built traditional method tended highly sensitive initial conditions 
new method confirmed robust respect significant improvement 
discussion reviewed research application symbolic machine learning techniques problem automatically building controllers dynamic systems 
shown capturing traces human behaviour tasks possible build controllers efficient robust 
style control characterised nilsson term reactive means controller goal directed account reacting current environment 
seen type learning applied variety domains including control chemical processes manufacturing scheduling diverse apparatus including aircraft 

michael bain supported australian research council 

effect disturbances behavioural cloning 
computer engineering thesis school computer science engineering university new south wales 
benson nilsson 

reacting planning learning autonomous agent 
furukawa michie muggleton eds machine intelligence 
oxford oxford university press 
kakas mancarella 

generalised stable models semantics abduction 
ecai proc 
european conf 
artificial intelligence pp 

kerr 

intelligent reactive scheduling human learning machine induction 
ifac conference intelligent manufacturing systems 
vienna 
michie 

phenomenon context software manufacture 
proceedings royal society london 
reproduced partridge wilks foundations artificial intelligence cambridge university press pp 
michie bain hayes michie 

cognitive models skills 
eds knowledge base systems industrial control 
peter 
michie camacho 

building symbolic representations intuitive real time skill performance data 
michie muggleton eds machine intelligence 
pp 

oxford clarendon press oup 
michie 
building symbolic representations intuitive real time skill performance data 
wrobel lavrac eds ecml 
berlin springer 
nilsson 

reactive programs agent control 
journal artificial intelligence research 
quinlan 

programs machine learning 
san mateo ca morgan kaufmann 
sammut michie 

controlling black box simulation spacecraft 
ai magazine 
sammut hurst michie 

learning fly 
sleeman edwards ed proceedings ninth international conference machine learning aberdeen morgan kaufmann 
schoppers 

universal plans reactive robots unpredictable domains 
proceedings ijcai 
san francisco morgan kaufmann 
stirling 

automated operation complex machinery plans numerical models adaptive control steel cold rolling mill 
proceedings th australian joint conference artificial intelligence stirling 
compressed heuristic universal reaction planners 
ph thesis university sydney 
bratko 

reconstructing human skill machine learning 
cohn ed proceedings th european conference artificial intelligence john wiley sons 
whitehead 

mathematics 

