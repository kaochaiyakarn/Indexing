broadcast encryption amos fiat moni naor introduce new theoretical measures qualitative quantitative assessment encryption schemes designed broadcast transmissions 
goal allow central broadcast site broadcast secure transmissions arbitrary set recipients minimizing key management related transmissions 
schemes allow center broadcast secret subset privileged users universe size coalitions users privileged set learn secret 
interesting scheme requires user store log log keys center broadcast log log messages regardless size privileged set 
scheme resilient coalition users 
scheme resilient probability random subset users 
scheme requires user store log log keys center broadcast log log messages 
preliminary version appeared advances cryptology crypto proceedings lecture notes computer science vol 
pp 

dept computer science school mathematics tel aviv university tel aviv israel algorithmic research mail fiat math tau ac il 
incumbent morris rose goldman career development chair dept applied mathematics computer science weizmann institute science rehovot israel 
research supported alon fellowship israel science foundation administered israeli academy sciences 
mail naor wisdom weizmann ac il 
deal broadcast encryption 
consider scenario center set users 
center provides users keys join system 
point center wishes broadcast message key decipher video clip dynamically changing privileged subset users way non members privileged class learn message 
naturally non members curious contents message broadcast may try learn 
obvious solution give user key transmit individually encrypted message member privileged class 
requires long transmission number members class times length message 
simple solution provide possible subset users key give user keys corresponding subsets belongs 
requires user store huge number keys 
goal provide solutions efficient measures transmission length storage user 
aim schemes computationally efficient 
achieve goal add new parameter problem 
parameter represents number users collude break scheme 
scheme considered broken user belong privileged class read transmission 
parameter schemes resilient subset users collude disjoint subset size privileged users 
consider scheme parameter random resiliency scheme refers expected number users chosen uniformly random collide break scheme 
applications suffices consider weaker random resiliency measure 
example decryption devices captured random users assigned random users random resiliency determines devices need captured break scheme 
discuss number different scenarios differing assumptions adversary strength 
show powerful adaptive adversaries incapable circumventing protection afforded schemes 
final goal broadcast encryption scheme securely transmit message members privileged subset 
cryptographic tools way functions exist problem translated problem obtaining common key 
security parameter defined length key 
definitions broadcast scheme allocates keys users subset center broadcast messages users members common key 
broadcast scheme called resilient set subset intersect eavesdropper secrets associated members obtain knowledge secret common knowledge different interpretations secret common priori distribution usually uniform distribution keys message transmitted center conditional distribution secret changed 
information theoretic definition security 
secret pseudo random computationally bounded probabilistic polynomial time eavesdropper distinguish secret truly random string eavesdropper provided keys coalition secret remains pseudorandom 
computational definition security 
information pseudorandomness see 
scheme called resilient resilient set size deal random coalitions scheme called random resilient probability scheme resilient set size chosen random ju ju interchangeably 
relevant resources attempt optimize number transmissions center create common secret 
wasted bandwidth 
number keys associated user 
user may weak smart card minimized 
computation effort involved retrieving common key members privileged class 
results function resiliency required provide large set schemes offer tradeoff relevant resources memory user transmission length 
known privileged subset broadcast scheme requires transmission sufficiently long uniquely identify privilege subset simple counting argument non identical sets manage obtain common key 
general simply representing subset requires ju bits 
schemes transmitting additional ju bits guarantees security coalitions size ju users randomly chosen coalitions ju users 
computational memory requirements schemes 
sense security available free 
fact contexts privileged set may identified sending relatively short transmission 
set computed old privileged set set representation compressed 
distinguish set identification transmission broadcast encryption transmission 
goal study broadcast encryption transmissions requirements 
general center identify user unique identification number set representation bit vector 
distinct advantages identification numbers assigned random new users discuss context random resiliency 
distinguish zero message schemes general schemes 
zero message schemes section property knowing privileged subset suffices users compute common key center transmission 
course zero message scheme transmit information implies key encrypt data transmitted 
general schemes section may require center transmit messages 
schemes describe require length center generated messages equal length security parameter 
counting messages transmitted center messages bits length 
general approach constructing schemes stage approach 
construct low resiliency zero message schemes construct higher resiliency schemes 
zero message type schemes 
low resiliency schemes describe assumption free constructions cryptographic assumption equivalent time pad 
describe efficient schemes cryptographic assumptions existence way function explicit assumption rsa secure 
results described theorems 
deal general case describe schemes high resiliency section 
clarity exposition describe constructions terms number levels involved scheme construction 
informally levels refer sets hash functions partition group users variety ways 
proofs applications probabilistic method 
obtain resiliency suffices store log log keys user number messages transmitted center log log theorem 
obtain random resiliency probability suffices store log log keys user number messages transmitted center log log corollary 
points tradeoff memory transmission length theorem 
related papers considered problem center wants broadcast group cf 

schemes time keys updated 
suppose user subscribes pay tv service receives decryption box opens duplicates 
doing tamper proof hardware may problematic 
suppose illegal box manufactured user coalition users possible trace traitor 
tracing scheme conjunction broadcast encryption illegal box traitor traced name removed privileged list 
repeated box rendered useless 
chor fiat naor designed traitor tracing schemes 
complexity schemes terms length broadcast number keys stored similar schemes 
blundo provided tight lower bound information theoretic version broadcast encryption problem discussed 
zero message schemes section schemes require center broadcast message order member privileged class generate common key 
main significance schemes section application building blocks schemes section 
basic scheme basic scheme define allows users determine common key subset resilient set size idea simple 
set jbj define key kb give kb user common key privileged set simply exclusive keys kb clearly coalition users missing key unable compute common key privileged set empty 
memory requirements scheme user assigned keys 
requirements need assumptions whatsoever 
theorem exists resilient scheme requires user store keys center need broadcast message order generate common key privileged class 
resilient schemes cryptographic assumptions see improve memory requirements scheme described cryptographic assumptions way functions exist extracting prime roots modulo composite hard 
improvements applicable dramatic 
resilient scheme way functions consider resilient version scheme described 
requires user store different keys 
reduced log ne keys user keys generated common seed explain 
assume way functions exist pseudo random generators exist see 

pseudo random generator length output twice length input 
explain key distribution done 
associate users leaves balanced binary tree nodes 
root labeled common seed vertices labeled recursively follows apply pseudo random generators root label left half bits label left subtree right half bits label right subtree 
similar construction tree generation pseudo random function 
scheme section user get keys associated singleton set fxg 
meet goal remove path leaf associated user root 
result forest dlog ne trees 
provide user labels associated roots trees 
label root subtree easy compute labels leaves subtree 
user compute leaf labels fxg additional help 
hand information fxg pseudo random user seen hybrid argument labels provided users truly random fxg indistinguishable random key recall fxg generated iterative application pseudo random generator pseudo random generator cf 

consider distributions fd dlog neg distribution labels random rest pseudo random 
assumption dlog ne distinguishable distinguishable 
impossible imply distinguisher theorem way functions exist exists resilient scheme requires user store log keys center need broadcast message order generate common key privileged class 
scheme resilient users keys kb instance associated leaf left subtree root associated leaf right subtree root labels subtrees 
resilient scheme computational number theoretic assumptions specific number theoretic scheme cryptographically equivalent problem root extraction modulo composite reduce memory requirements resilient schemes 
scheme cryptographically equivalent rsa scheme motivated key exchange mechanism original shamir cryptographically secure pseudo random sequence 

center chooses random hard factor composite 
primes 
chooses secret value high index 
user assigned key relatively prime 
users know user index refers 
common key privileged subset users taken value mod user compute evaluating mod suppose user compute common key claim implies user compute mod mod compute gcd mod performing sequence modular exponentiations divisions see sequence derived applying euclidean gcd algorithm modular log 
gcd follows computed user manner 
user compute th root knowing composite assumed hard user get key common note strong definition security computational key pseudo random 
relax requirement says computationally hard construct common key theorem extracting root modulo composites hard exists resilient relaxed definition scheme requires user store key length proportional composite center need broadcast message order generate common key privileged class 
scheme resilient user collude compute low memory resilient schemes zero message resilient schemes described proceeding section require great deal memory exponential section provide efficient constructions resilient schemes 
schemes method converting resilient schemes resilient schemes 
section assume existence resilient scheme number users 
taken assumption scheme cryptographic assumption variants 
denote number keys user required store resilient scheme 
cryptographic assumptions log assume way functions exists assume hard extract roots modulo composite 
efficiency schemes measured require 
level schemes consider family functions 
mg property subset size exists 
equivalent statement family functions ff contains perfect hash function size subsets mapped range mg 
see information perfect hash functions 
family obtain resilient scheme resilient scheme 
independent resilient scheme 
user receives keys associated schemes 
order send secret message subset center generates random strings center broadcasts message privileged subset fx jf jg scheme 
user obtain messages xoring get number keys user store times number needed resilient scheme 
length transmission 
times length transmission zero message resilient scheme equal security parameter 
claim scheme described resilient scheme proof 
coalition size schemes coalition keys single user part 
transmissions assumption gets information information theoretic definition security pseudo random computational definition security 
furthermore combined information schemes random information theoretic case remains pseudo random computational case 
seen hybrid argument 
known eavesdropper knowledge gained see values take 
turns setting log sufficient 
seen probabilistic construction 
fix size probability random probability probability subsets size conclude theorem exists resilient scheme requires user store log 
keys center broadcast log messages 
scheme constructed effectively arbitrarily high probability increasing scheme parameters appropriately 
proof implies randomly chosen subset size efficient scheme take log corollary exists random resilient scheme requires user store log 
keys center broadcast log messages 
simply choose log scheme constructed effectively 
explicit constructions family factor expensive 
possibility construction error correcting codes large relative distance say alphabet size 
simple construction consider family ff mod log satisfies requirement 
number keys stored user explicit construction log log log number messages center broadcasts log log log 
remarks having seen single level schemes wish clarify certain points discussed seeing example types schemes deal 
continue efficient multi level schemes section 
remarks section applicable single multi level schemes 
representing functions 
applications probabilistic constructions problematic representation problem storing resulting structure may prohibitively expensive 
described schemes absolutely require functions computable user simply assigned 
chosen random 
center fact generate required functions pseudo random function single seed 
alternatively completely random functions function limited independence random polynomials degree see information limited independence functions 
results regarding probabilistic construction section require pairwise independence need worry collisions section require log wise independence 
advantage succinct representation functions 
storing function representations user decryption devices expensive storing keys required schemes 
reducing storage 
suppose interested limiting number keys user store expense number keys center broadcast 
get certain tradeoff hashing range size hash range size 
results get case memory requirements smaller log factor broadcast requirements larger factor true resilient schemes random resilient schemes 
describe tradeoff may reduce storage requirements 
scheme deals subset users 
assume functions computed wise independent functions described resilient schemes devised deal true number users associated scheme depending underlying resilient scheme leads saving memory requirements described scheme expense additional computation 
adversary limitations resiliency 
resilient scheme resilient coalition size means irrespective adversary goes choosing coalition coalition size smaller adversary 
scheme resilient sets size larger adversary may capture devices random case random resiliency measure directly applicable 
randomized resilient scheme expected number devices adversary capture break scheme 
possibly legitimate assumption user decryption device know unique index users 
example user index user secrets stored relatively secure smartcard smartcard probably vulnerable casual user 
user indices assigned random set devices captured random set irrespective adversary strategy 
definition random resiliency somewhat problematic reasons 
probability absolute probability sense underlying resilient schemes broken relatively high probability guessing short secret keys 

assignment users ids index numbers users assumed random secret 
may possible learn user identification monitoring transmissions user behavior 
avoid problems define new notion resiliency say scheme immune adversary choosing adaptively subset users disjoint subset probability adversary knowing secrets associated guesses value center broadcasts larger additive probability adversary guessed knowing secrets assume functions kept secret results get immune schemes similar results random resilient schemes 
know holds general random resilient schemes 
true random constructions single level schemes multi level schemes described section analysis fixes subset evaluates probability random construction 
adversary know values hash functions single level schemes adding user choice probability bad 
completeness note attack theoretically possible may difficult practice 
adversary may attempt actively subvert system publishing solicitation dishonest users meet certain criteria 
specifically useful adversary capture pairs devices belong resilient scheme described captures pairs corrupted scheme 
case true resilient scheme prevention 
sufficiently large number traitors exceed scheme secure 
multi level schemes describe general multi level scheme converts scheme small resiliency large resiliency 
consider family functions 
mg collection sets schemes fr mg consists schemes labeled 
functions schemes obey condition subset size exists exists scheme resilient set fx sjf jg 
claim structure obtain resilient scheme generate independently chosen keys schemes 
user receives keys associated scheme 
subset secret message center generates strings chosen random 
random strings center broadcasts message privileged subset fx jf jg scheme 
user obtain messages reconstruct message user takes bitwise exclusive messages transmitted user schemes user belongs schemes number keys associated user number keys associated scheme times length broadcast equal number messages transmitted scheme times claim scheme described resilient scheme 
proof 
coalition size assumption wg schemes resilient value random pseudo random value random pseudo random implies knowledge gained describe concrete level scheme method 
set log log log log 
level consists family functions 
mg 
second level consists functions 
defines resilient scheme scheme section 
user receives keys schemes set size say 
jfx sjf jgj 
exists fx sjf jg 
claim know set size scheme resilient 
prove randomly chosen constitute scheme reasonably high probability 
fix subset size mg 
probability condition satisfied ek log log log log log suppose condition satisfied probability fx sjf jg probability condition satisfied probability conditions satisfied 
probability probability subsets size conclude theorem exists resilient scheme requires user store log log 
keys center broadcast log log messages 
scheme constructed effectively high probability 
theorem proof implies randomly chosen subset size efficient scheme corollary exists random resilient scheme property number keys user store log log 
center broadcast log log messages 
scheme constructed effectively high probability 
example implementation considerations schemes described valid possible values parameters 
random resiliency suffices seeks solution concrete example considerations creep 
say got user group subscribers 
assume goal discourage possible pirate box manufacturer expectation required capture devices seeing return investment 
basing resilient scheme number theoretic scheme randomized resilient scheme number keys stored subscriber decryption device length broadcast enabling transmission order keys 
vs keys transmitted standard schemes 
major problem set identification transmission 
subscribers listen bits set identification transmission making single error 
fact subscriber presence absence users 
users belong underlying resilient schemes belongs matter 
advantages splitting users independent broadcast encryption schemes determining user gets assigned scheme random 
appropriately labeling schemes decryption device deal set identification transmission dealing smaller scheme 
tradeoff error control issues security 
number broadcast encryption schemes gets large resiliency gets small multiple birthday paradox enters consideration 
say scheme broken component broadcast encryption schemes broken 
say split users randomly assigned broadcast encryption groups users 
non random resilient broadcast encryption scheme requires keys stored user keys transmission broadcast encryption scheme total key transmissions 
total random resiliency approximately 
adversary randomly select devices different devices broadcast encryption scheme 
transmissions times longer significantly shorter individual transmissions 
practical scheme longer serious error control problem 
advantage scheme section adversary fact successful collecting decryption devices captured adversary eavesdropping devices lost 
relatively simple matter disable adversary devices disabling group users splitting users groups adversary effort vain 
alon spencer probabilistic method wiley 
secret advances cryptology lecture notes computer science springer pp 

blundo space requirements encryption advances cryptology lecture notes computer science springer pp 

boppana pseudorandom generators complexity classes advances computing research volume randomness computation 
carter wegman universal classes hash functions journal computer system sciences pp 

chen secure broadcasting secure lock ieee trans 
software engineering vol pp 

chor fiat naor tracing traitors advances cryptology crypto lecture notes computer science springer verlag 
diffie hellman new directions cryptography ieee trans 
information theory vol 
pp 

fredman storing sparse table worst case access time journal acm vol pp 

goldreich foundations cryptography fragments book available www eccc uni trier de eccc info eccc books html 
goldreich goldwasser micali construct random functions journal acm pp 

hastad pseudo random generators uniform assumptions proc 
th symposium theory computing 
impagliazzo levin luby pseudo random generation way function proc 
th acm symp 
theory computing 
lee new threshold scheme application conference key distribution cryptosystem information processing letters vol pp 

luby pseudo applications princeton press appear 
mehlhorn data structures algorithms sorting searching springer verlag berlin heidelberg 
rivest shamir adleman method obtaining digital signature public key cryptosystems comm 
acm pp 

shamir generation cryptographically strong pseudo random number sequences acm trans 
comput 
sys pp 

wegman carter new hash functions authentication set equality journal computer system sciences pp 


