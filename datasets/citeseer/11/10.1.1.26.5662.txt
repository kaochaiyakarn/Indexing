simplification envelopes jonathan cohen amitabh varshney dinesh manocha greg turk hans weber pankaj agarwal frederick brooks william wright www cs unc edu geom envelope html propose idea simplification envelopes generating hierarchy level detail approximations polygonal model 
approach guarantees points approximation user specifiable distance original model points original model distance approximation 
provide general framework large collection existing simplification algorithms run 
demonstrate technique conjunction algorithms local global 
local algorithm provides fast method generating approximations large input meshes hundreds thousands triangles 
global algorithm provides opportunity avoid local minima possibly achieve better simplifications result 
approximation attempts minimize total number polygons required satisfy constraint 
key advantages approach general technique providing guaranteed error bounds genus preserving simplification automation simplification process selection appropriate viewing distances prevention self intersection preservation sharp features allows variation approximation distance different portions model cr categories subject descriptors computer graphics picture image generation display algorithms computer graphics computational geometry object modeling curve surface solid object representations 
additional key words phrases hierarchical approximation model simplification levels detail generation shape approximation geometric modeling offsets 
department computer science university north carolina chapel hill nc 
manocha turk brooks cs unc edu department computer science state university new york stony brook ny 
varshney cs sunysb edu department computer science duke university durham nc 
pankaj cs duke edu framework simplification envelopes computing various levels detail polygonal model 
hierarchical representations object ways computer graphics 
level detail rendering algorithm providing desired frame update rates 
sampled models generated volume datasets laser scanners satellites storage reducing cpu cycles processing relatively disadvantages 
low detail approximations objects illumination algorithms especially radiosity 
simplification envelopes generalization offset surfaces 
polygonal representation object allow generation minimal approximations guaranteed deviate original user specifiable amount preserving global topology 
surround original polygonal surface envelopes perform simplification volume 
sample application algorithms describe seen 
level detail hierarchy rotor brake assembly 
approach benefits computer graphics 
precisely quantify amount approximation tolerable circumstances 
user specified error number pixels deviation object silhouette possible choose level detail view particular distance maintain pixel error bound 
second approach allows fine control regions object approximated ones 
selectively preserving features object perceptually important 
third user specifiable tolerance approximation parameter required obtain approximations fine tweaking parameters depending object approximated required 
approach quite useful automating process topology preserving simplifications large number objects 
problem scalability important simplification algorithm 
main goals create method simplification automatic large datasets tends preserve shapes original models 
rest organized manner survey related section explain assumptions terminology section describe envelope approximation computations sections useful properties approximation algorithms section explain implementation results section 
background approximation algorithms polygonal models classified broad categories min approximations version approximation problem error bound objective minimize number vertices point approximation farther distance away input model min approximations number vertices approximation objective minimize error difference previous area min approximations done adaptively subdivide series bicubic patches polygons surface fit data tolerance levels 
second category done groups 
turk distributes number vertices surface depending curvature obtain final mesh 
schroeder hansen operate set local rules deleting edges vertices coplanar adjacent faces followed local re triangulation 
rules applied iteratively till longer applicable 
somewhat different local approach taken vertices close clustered new vertex generated represent 
mesh suitably updated reflect 
hoppe proceed iteratively optimizing energy function mesh minimize distance approximating mesh original number approximating vertices 
interesting elegant solution problem polygonal simplification wavelets arbitrary polygonal meshes subdivided patches subdivision connectivity multiresolution wavelet analysis patch 
wavelet approach preserves global topology 
computational geometry shown computing minimal facet approximation np hard convex polytopes polyhedral terrains :10.1.1.37.8292
algorithms solve problems evolved finding polynomial time approximations close optimal 
ko size min approximation 
algorithm computing approximation size log convex polytopes 
improved clarkson proposes randomized algorithm computing approximation size log expected time constant proportionality depends tends tends 
br goodrich observed variant clarkson algorithm yields polynomial time deterministic algorithm computes approximation size 
working polyhedral terrains polynomial time algorithm computes approximation size log polyhedral terrain :10.1.1.37.8292:10.1.1.37.8292
different allows adaptive genus preserving approximation arbitrary polygonal objects 
additionally simplify bordered meshes meshes holes 
terms direct comparison global approach algorithm empirically able obtain reduced simplifications smaller output size demonstrated section 
algorithm guarantees bound terms hausdorff metric 
guaranteed preserve genus original model 
terminology assumptions assume dimensional compact orientable object polygonal representation 
objective compute piecewise linear approximation piecewise linear objects say iff point distance point point distance point goal method generate envelope surfaces surrounding demonstrate envelopes solve polygonal approximation problem 
polygonal representation object approximation parameter generate genus preserving approximation minimal number polygons vertices subset vertices assume polygons triangles behaved polygonal model edge adjacent triangles triangles unintentional cracks model junctions assume vertex single normal vector lie normal surrounding triangles 
purpose rendering vertex may single normal multiple normals 
purpose generating envelope surfaces shall compute single vertex normal combination normals surrounding triangles 
dimensional offset surface parametric surface unit normal defined note offset surfaces polygonal object may contain non linear elements 
define simplification envelope respectively object polygonal surface lies point respectively opposite direction normal simplification envelopes thought approximation offset surfaces 
henceforth shall refer simplification envelope simply envelope 
refer triangles polygonal representation fundamental triangles 
lete edge normals respectively identical construct plane passes edge normal perpendicular 
normals lie plane defines half spaces edge say see fig 
general normals vertices need identical case clear define half spaces edge 
choice bilinear patch passes tangent 
call bilinear patch edge half space half spaces edge case 
edge half spaces vertices fundamental triangle 
coordinates normal vertex represented respectively 
coordinates normal offset vertex vertex vi vi vi vi 
offset vertex similarly defined opposite direction 
offset vertices fundamental triangle shown 
consider closed object defined 
defined triangles top bottom edge half spaces 
object contains fundamental triangle shown shaded henceforth refer fundamental prism 
envelope computation order preserve input topology simplification envelopes self intersect 
meet criterion reduce level approximation certain places 
words guarantee intersections envelopes occur fundamental prism content certain places distance envelope smaller simplification envelopes differ offset surfaces 
construct envelope triangles corresponds fundamental triangle 
offset vertex original surface direction normal vector transform fundamental triangles envelope 
offset vertex vi amount get offset vertices resulting envelopes may contain self intersections offset vertices closer non adjacent fundamental triangle 
words define voronoi diagram fundamental triangles model condition envelopes intersect offset vertex lying voronoi region non adjacent fundamental triangle 
shown means dimensional example 
offset vertices voronoi regions edges causing self intersection envelope 
original surface offset offset surfaces voronoi edge observation solution avoid quite simple just allow offset vertex go voronoi regions adjacent fundamental triangles 
words determine positive negative vertex vi vertices determined new lie voronoi regions non adjacent fundamental triangles 
works theory efficient robust computation dimensional voronoi diagram fundamental triangles non trivial 
methods computing reduced vertex method analytical second numerical 
analytical computation adopt conservative approach recomputing vertex 
approach underestimates values positive negative words guarantees envelope surfaces intersect guarantee vertex largest permissible discuss approach case computing positive vertex 
computation negative follows similarly 
consider fundamental triangle conceptually fundamental prism uses value defining envelope vertices 
consider triangles share vertex intersects tp directions determined direction normal direction normal find point lies closest point vertex intersection point edges sides prism find point closest approach compute distance point shown 
computation done compute new value positive triangle new mini vertices triangle value positive positive envelope surface self intersect 
new values computed new vertex set minimum new values adjacent triangles 
octree implementation speed identification triangles intersect prism 
numerical computation compute envelope surface numerically take iterative approach 
envelope surface initially identical input model surface 
iteration sequentially attempt move envelope vertex fraction distance direction normal vector opposite direction inner envelope 
effectively stretches contracts triangles adjacent vertex 
test adjacent triangles intersection rest model 
intersections accept step leaving vertex new position 
reject moving vertex back previous position 
iteration terminates vertices moved longer move 
attempt guarantee vertex gets move reasonable amount potential distance adaptive step size 
encourage vertex move arbitrary constant scaled respect size object steps allowing reduce step size 
vertex moved steps move rejected divides step size half tries maximum number divides allowed particular step 
notice vertex moves steps rejected st step know moved potential distance lower bound sorts 
possible rare vertex move steps current position quite close triangle 
vertex initial step size 
choose global maximum step size global property small percentage object bounding box diagonal length whichever smaller 
vertex calculate local step size 
local step size percentage vertex shortest incident edge edges offset direction considered 
set vertex step size minimum global step size local step size 
vertex step size appropriate step initial mesh configuration 
approach computing envelope surface robust simple implement difficult explain fair vertices 
tends maximize minimum offset distance envelope vertices 
works fairly practice may room improvement generating maximal offsets thin objects 
shows internal external envelopes computed values approach 
analytical approach simple octree data structure intersection tests reasonably efficient especially models evenly sized triangles 
generation approximation generating surface approximation typically involves starting input surface iteratively making modifications ultimately reduce complexity 
process may broken main stages hole creation filling 
create hole removing connected set triangles surface mesh 
fill hole smaller set triangles resulting reduction mesh complexity 
demonstrate generality simplification envelope approach designing algorithms 
hole filling stages algorithms quite similar hole creation stages quite different 
algorithm local choices creating relatively small holes second algorithm uses global information surface create maximally sized holes 
design choices produce algorithms different properties 
describing envelope validity test triangle valid inclusion approximation surface 
proceed example simplification algorithms description relative merits 
validity test candidate triangle considering inclusion approximation input surface 
valid candidate triangles lie envelopes 
construct candidate triangles vertices original model know vertices lie envelopes 
sufficient test candidate triangle intersections envelope inner envelopes outer envelopes simplification envelopes various surfaces 
perform tests efficiently space partitioning data structure octree 
valid candidate triangle cause surface intersect triangle current approximation surface 
local algorithm handle large models efficiently framework simplification envelopes construct vertex local algorithm 
algorithm draws heavily 
main contributions envelopes provide global error bounds topology preservation non self intersection 
explored exhaustive hole filling approach previous seen 
local algorithm begins placing vertices queue removal processing 
vertex queue attempt remove creating hole removing vertex adjacent triangles attempting fill 
successfully fill hole mesh modification accepted vertex removed queue neighbors placed back queue 
vertex removed queue mesh remains unchanged 
process terminates global error bounds eventually prevent removal vertices 
vertex queue empty simplified mesh 
vertex create hole removing adjacent triangles 
hole filling process generating possible triangles formed combinations vertices hole boundary 
strictly necessary allows greedy strategy favor triangles nice aspect ratios 
fill hole choosing triangle testing validity recursively filling fewer smaller holes created adding triangle hole see 
hole filled level recursion entire hole filling attempt considered failure 
note single pass hole filling strategy backtrack undo selection triangle chosen filling hole 
approach guarantee triangulation hole exists find 
quite fast works practice 
hole filling adding triangle hole creates smaller holes compared approach exhaustive approach tried possible hole filling triangulations 
simplifications resulting removal hundreds vertices highly oversampled laser scanned models exhaustive pass yielded small improvement single pass heuristic 
sort confirmation single pass heuristic works practice 
global algorithm algorithm extends algorithm non convex surfaces 
major contribution simplification envelopes bound error non convex polygonal surface fundamental prisms provide generalized projection mechanism testing regions multiple covering overlaps 
sketch algorithm see full details 
generating possible candidate triangles approximation surface 
triangles tuples input vertices intersect offset surfaces 
determine vertices triangle covers 
rank candidate triangles order decreasing covering 
choose list candidate triangles greedy fashion 
triangle choose create large hole current approximation surface removing triangles overlap candidate triangle 
recursive hole filling process placing candidate triangle hole filling triangles possible 
restriction process candidate triangle testing overlap candidate triangles previously accepted 
algorithm comparison local simplification algorithm fast robust applied large models 
global strategy theoretically elegant 
global algorithm works small models complexity rises quadratically envelope curve envelope curve original curve approximating curve curve local minimum approximation making prohibitive larger models 
think simplification problem optimization problem 
purely local algorithm may get trapped local minimum simplification ideal global algorithm avoid minima 
shows dimensional example curve local vertex removal algorithm fail algorithm globally searches succeed finding valid approximation 
interior vertices remove cause new edge penetrate envelope curve 
remove interior vertices resulting edge perfectly acceptable 
observation motivates wide range algorithms local global examples extremes 
easily imagine algorithm chooses nearby groups vertices remove simultaneously sequentially 
potentially lead increased speed simplification performance 
choosing sets vertices remains challenging problem 
additional features envelope surfaces conjunction simplification algorithms powerful general purpose tools 
describe implicitly preserve sharp edges extended deal bordered surfaces perform adaptive approximations 
preserving sharp edges important properties approximation scheme way preserves sharp edges normal discontinuities input model 
simplification envelopes deal gracefully sharp edges small angle adjacent faces 
tolerance small room simplify sharp edges automatically preserved 
tolerance increased eventually possible simplify edges longer visible appropriate distance 
notice necessary explicitly recognize sharp edges 
bordered surfaces bordered surface containing points homeomorphic half disc 
polygonal models corresponds edges adjacent single face faces 
depending context may naturally think boundary plane piece surface hole closed surface 
algorithms described sufficient closed triangle meshes guarantee global error bound meshes borders 
envelopes constrain error respect normal direction surface bordered surfaces require additional constraints hold approximation border close original border 
constraints border approximation surface may creep possibly shrinking surface existence 
cases complexity surface border curves may limiting factor simplify surface unacceptable forgo simplifying borders 
construct set border tubes constrain error deviation border curves 
border cyclic polyline 
intuitively speaking border tube smooth non self intersecting surface polylines 
removing border vertex causes pair border edges replaced single border edge 
new border edge intersect relevant border tube may safely attempt remove border vertex 
construct tube define plane passing vertex polyline 
choose coordinate system plane define circular set vertices 
connect vertices consecutive planes construct tube 
initial tubes narrow radius minimize likelihood self intersections 
expand narrow tubes technique previously construct simplification envelopes 
difficult task define coordinate system polyline vertex encourages smooth non tubes 
obvious approach idea frames differential geometry define set coordinate systems polyline vertices 
frames meant smooth curves 
jagged polyline tube constructed self intersections 
projection method minimize twist consecutive frames 
frame method place plane vertex normal plane approximates tangent polyline 
called normal plane 
vertex choose arbitrary orthogonal pair axes coordinate system normal plane 
subsequent vertices project coordinate system previous normal plane current normal frame 
orthogonalize projected coordinate system plane 
normal plane final polyline vertex average projected coordinate systems previous normal plane initial normal plane minimize twist final tube segment 
adaptive approximation certain classes objects desirable perform adaptive approximation 
instance consider large terrain datasets models 
detail near observer detail away 
possible solution subdivide model various spatial cells different approximation cell 
problems arise boundaries cells approximation cell say value need necessarily continuous approximation neighboring cell say different value 
candidate triangles generated constrained lie envelopes manipulation envelopes provides way smoothly control level approximation 
specify vertex function distance observer larger distance greater possibility consider case certain features model important approximated certain level 
features human perception basis definition mathematical descriptions regions high curvature 
case user vary associated region increase decrease level approximation 
bunny illustrates approximation 
adaptive simplification bunny model 
varies nose tail 
implementation results implemented algorithms tried local algorithm objects 
discuss implementation issues results 
implementation issues important implementation issue sort input model accept 
chose accept manifold triangle meshes bordered manifolds 
means edge adjacent case border triangles vertex surrounded single ring triangles 
accept forms degenerate meshes 
mesh degeneracies apparent casual inspection implemented automatic degeneracy detection program 
program detects non manifold vertices non manifold edges triangles coincident triangles junctions intersecting triangles proposed input mesh 
note correcting degeneracies difficult detecting 
robustness issues important implementations geometric algorithms 
instance analytical method envelope computation involves bilinear patches computation intersection points 
computation intersection points linear elements difficult perform robustly 
numerical method envelope computation robust involves linear elements 
furthermore requires intersection test calculation intersection points 
perform intersection tests conservative manner fuzzy intersection tests may report intersections close non intersecting elements 
important issue space partitioning scheme speed intersection tests 
chose octree simplicity 
current octree implementation deals bounding boxes elements stored 
works models triangles evenly sized shaped 
cad models may contain long skinny non axis simple octree provide speedup may necessary choose appropriate space partitioning scheme 
results simplified objects auxiliary machine room amr submarine dataset pictured test validate algorithm 
reproduce timings simplifications achieved implementation amr models table 
simplifications performed hewlett packard mb main memory 
images simplifications appear figures 
interesting compare results bunny phone models 
error bound able obtain improved solutions 
automated process sets value object assigning percentage diagonal bounding box 
obtained reductions table amr figures heuristic 
rotor amr models results th level detail obtained simplifying th level detail 
causes total sum previous choosing percent results total percent 
advantages scheme allows proceed incrementally advantage done previous simplifications 
builds hierarchy detail vertices th level detail subset vertices th level detail 
advantages setting percent object size provides way automate selection switching points transition various representations 
eliminate visual artifacts switch faithful representation object projects user specified number pixels screen 
function approximation output display resolution corresponding maximum tolerable visible error pixels 
areas explored research 
believe important generation correspondences levels detail moving vertices envelope volume 
bunny phone rotor amr time time time time generating correspondences true geometric hierarchy contain representations object various levels detail correspondence information relationship adjacent levels 
relationships necessary propagating local information level 
instance information helpful hierarchical geometric representation perform radiosity calculations 
necessary performing geometric interpolation models levels detail rendering 
note envelope technique preserves silhouettes rendering candidate alpha blending geometric interpolation smooth transitions levels detail 
determine elements higher level detail surface covered element lower level detail representation noting fundamental prisms element intersects 
non trivial bilinear patches sides fundamental prism 
approximate patches triangles prism 
tetrahedralization envelope volume possible stab edge lower level detail model tetrahedrons determine ones intersect triangles covered lower detail triangle 
moving vertices output mesh generated algorithms property set vertices subset set vertices original mesh 
afford relax constraint somewhat may able reduce output size 
allow vertices slide normal vectors able simplify parts surface impossible simplify choices epsilon 
currently working goal approach moving vertices envelope volume 
vertex want remove slide neighboring vertices normals lie closely possible tangent plane original vertex 
intuitively increase likelihood successfully removing vertex 
process ensure neighboring triangles violates envelopes 
approach possible simplify surfaces smaller previously possible 
fact may enable original surface single envelope constraint surfaces envelopes 
important objects areas high maximal curvature thin cylinders 
table simplification run times minutes outlined notion simplification envelopes generation multiresolution hierarchies polygonal objects 
approach guarantees non self intersecting approximations allows user adaptive approximations simply editing simplification envelopes manually automatically regions interest 
allows global error tolerance preservation input genus object preservation sharp edges 
approach requires user specifiable parameter allowing large collections objects manual intervention desired 
elegantly handle holes bordered surfaces cylindrical tubes 
simplification envelopes general permit simplification algorithms theoretical properties global algorithm fast practical robust implementations local algorithm 
additionally envelopes permit easy generation correspondences levels detail 
greg jim ken fast electric boat submarine model rich elaine cohen alpha group university utah rotor model stanford computer graphics laboratory bunny telephone models carl mueller marc bill useful suggestions rest unc simplification group rui carl merlin hughes david luebke providing great forum discussing ideas 
funding provide link foundation fellowship alfred sloan foundation fellowship aro contract ma aro muri daah nsf ccr nsf ccr nsf career award ccr onr contract arpa contract dabt nsf arpa center computer graphics scientific visualization nih rr nyi award matching funds xerox israeli binational science foundation 
agarwal suri :10.1.1.37.8292
surface approximation geometric partitions 
proceedings fifth symposium discrete algorithms pages 
br goodrich 
optimal set covers finite vc dimension 
proceedings tenth acm symposium computational geometry pages 
clarkson 
algorithms polytope covering approximation 
proc 
rd workshop algorithms data struct lecture notes computer science 

system strategies optimize cig image content 
proceedings image ii conference scottsdale arizona june 
das joseph 
complexity minimum convex nested polyhedra 
proc 
nd canad 
conf 
comput 
geom pages 
jr zyda 
simplification objects rendered polygonal approximations 
computers graphics 
derose lounsbery warren 
multiresolution analysis surface arbitrary topological type 
report department computer science university washington seattle wa 
eck derose duchamp hoppe lounsbery stuetzle 
multiresolution analysis arbitrary meshes 
computer graphics proceedings siggraph pages 
funkhouser quin 
adaptive display algorithm interactive frame rates visualization complex virtual environments 
computer graphics siggraph proceedings volume pages august 
greene kass miller 
hierarchical buffer visibility 
computer graphics proceedings siggraph pages 
acm siggraph 
hong kaufman varshney wang 
object simplification 
nielson silver editors ieee visualization proceedings pages 
heckbert garland 
multiresolution modeling fast rendering 
proceedings graphics interface 
hansen 
geometric optimization 
gregory nielson dan bergeron editors proceedings visualization pages october 
hoppe derose duchamp mcdonald stuetzle 
mesh optimization 
james kajiya editor computer graphics siggraph proceedings volume pages august 
taylor 
polyhedral approximation bounded error 
technical report rc ibm research division watson research center yorktown heights ny 
mitchell suri 
separation approximation polyhedral surfaces 
proceedings rd acm siam symposium discrete algorithms pages 
kevin oliver 
generalized surface volume decimation unstructured tessellated domains 
proceedings sive 
rossignac borrel 
multi resolution approximations rendering 
modeling computer graphics pages 
springer verlag june july 
rushmeier patterson 
geometric simplification indirect illumination calculations 
proceedings graphics interface pages 
schmitt barsky du 
adaptive subdivision method surface fitting sampled data 
computer graphics siggraph proceedings 
schroeder lorensen 
decimation triangle meshes 
edwin catmull editor computer graphics siggraph proceedings volume pages july 
taubin 
signal processing approach fair surface design 
proc 
acm siggraph pages 
turk 
re tiling polygonal surfaces 
computer graphics sig graph proceedings volume pages july 
varshney 
hierarchical geometric approximations 
ph thesis tr department computer science university north carolina chapel hill nc 
looking auxiliary machine room amr submarine model 
model contains nearly objects total half triangles 
simplified objects total triangles 
array batteries amr 
parts red simplified representations 
full resolution array requires triangles 
distance allowing pixels error screen space reduced triangles 
bunny model triangles phone model triangles rotor model triangles triangles triangles triangles triangles triangles triangles triangles triangles triangles level detail hierarchies models 
approximation distance taken percentage bounding box diagonal 
