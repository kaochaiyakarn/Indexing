pushing envelope planning propositional logic stochastic search planning notoriously hard combinatorial search problem 
interesting domains current planning algorithms fail scale gracefully 
combining general stochastic search algorithm appropriate problem encodings propositional logic able solve hard planning problems times faster best current planning systems 
stochastic methods shown ective wide range scheduling problems rst demonstration power truly challenging classical planning instances 
provides new perspective representational issues planning 
widespread belief ai planning amenable general theorem proving techniques 
barrett weld discuss various characteristics domains 
general hardest planning domains contain intricate interactions planning operators various types goal subgoal interactions 
interactions complicate order goals subgoals established di cult select right operator establishing goal 
real world domains contain sources computational di culties 
experiments natural domains rocket domain blum furst logistics domain veloso :10.1.1.43.7263
blum furst showed graphplan outperforms prodigy ucpop rocket problems 
extended problem somewhat challenging graphplan 
logistics domain viewed extension rocket domain making harder 
considered relatively large blocks world problems small blocks world instances surprisingly hard traditional planners 
example assert pickup immediately followed write schema pickup stack 
quite hard represent kinds constraints strips 
real logic opposed strips relationships predicates stated explicitly unnecessary distinguish primitive derived predicates 
example strips style operators planning handle predicates clear separately framework simply assert clear domain axioms satis ability approach general stronger deductive framework necessary rule unintended models 
describe ways done encodings derived planning graphs graphplan blum furst ii linear encodings kautz selman iii general state encodings incorporate best features previous :10.1.1.43.7263
refer linear state encodings direct encodings 
graphplan encodings mentioned graphplan system blum furst works converting strips style speci cation planning graph :10.1.1.43.7263
ordered graph alternating layers nodes correspond grounds facts indexed time step layer fully instantiated operators indexed time step 
arcs lead fact operators contain precondition layer similarly operator ects layer 
real logic opposed strips relationships predicates stated explicitly unnecessary distinguish primitive derived predicates 
example strips style operators planning handle predicates clear separately framework simply assert clear domain axioms satis ability approach general stronger deductive framework necessary rule unintended models 
describe ways done encodings derived planning graphs graphplan blum furst ii linear encodings kautz selman iii general state encodings incorporate best features previous :10.1.1.43.7263
refer linear state encodings direct encodings 
graphplan encodings mentioned graphplan system blum furst works converting strips style speci cation planning graph :10.1.1.43.7263
ordered graph alternating layers nodes correspond grounds facts indexed time step layer fully instantiated operators indexed time step 
arcs lead fact operators contain precondition layer similarly operator ects layer 
operator layer fact op maintain operator simply fact precondition add ect 
solution subgraph planning graph contains facts initial goal layers contains operators layer operator deletes precondition ect 
finding plans table gives computational cost solving hard planning problems 
consider instance graphplan direct linear state 
sat encodings give timings systematic tableau method stochastic walksat procedure 
compare results graphplan system 
mentioned preview results considered hard instances rocket logistics domains blum furst veloso blocks world :10.1.1.43.7263
noted graphplan shown outperform prodigy ucpop rocket problems 
logistics domain strictly richer environment rocket domain 
column marked time actions give length plan terms number time steps 
allow parallel independent actions give total number actions lead initial state goal 
