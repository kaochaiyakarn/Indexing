logical foundations object oriented frame languages michael kifer georg lausen james wu propose novel formalism called frame logic abbr logic accounts clean declarative fashion structural aspects object oriented frame languages 
features include object identity complex objects inheritance polymorphic types query methods encapsulation 
sense logic stands relationship objectoriented paradigm classical predicate calculus stands relational programming 
logic model theoretic semantics sound complete resolution proof theory 
small number fundamental concepts come object oriented programming direct representation logic secondary aspects paradigm easily modeled 
discusses semantic issues pertaining programming deductive object oriented language subset logic 
problems ed logic extended accommodate typing non monotonic inheritance features 
aspect knowledge systems dealt database dynamics involves changes internal state objects 
experience shows database dynamics orthogonal structural aspects object oriented systems focus 
extensive formalizing updates logic 
reader referred transaction logic comprehensive discussion problem overview related eld solutions previously outstanding problems :10.1.1.50.5253
section brie touch issue extending logic direction transaction logic combination captures dynamic aspects object oriented languages including updates methods side ects 
important aspect logic extensibility combined broad range specialized logics 
section outline combinations hilog transaction logic :10.1.1.50.5253
possible candidate annotated predicate logic logic reasoning inconsistent uncertain information 
extensive formalizing updates logic 
reader referred transaction logic comprehensive discussion problem overview related eld solutions previously outstanding problems :10.1.1.50.5253
section brie touch issue extending logic direction transaction logic combination captures dynamic aspects object oriented languages including updates methods side ects 
important aspect logic extensibility combined broad range specialized logics 
section outline combinations hilog transaction logic :10.1.1.50.5253
possible candidate annotated predicate logic logic reasoning inconsistent uncertain information 
extensibility places logic center powerful unifying formalism reasoning data knowledge 
organized follows 
section discusses relationship object oriented paradigm relational paradigm 
resulting semantics may bit procedural taste believe captures intuition 
development declarative semantics topic 
nutshell idea decompose inheritance step pair sub steps pure inheritance step new facts output structure may longer model original program derivation step turns result previous step model 
operations repeated inheritance done 
connection mention proposes semantics inheritance language derived logic :10.1.1.55.3825
particular allows inheritance deduction interact certain ways deal negation dynamically changing hierarchies 
approach fundamentally di erent way semantics de ned 
calls canonic model program model usual sense :10.1.1.55.3825
structure certain blocked rules satis ed 
operations repeated inheritance done 
connection mention proposes semantics inheritance language derived logic :10.1.1.55.3825
particular allows inheritance deduction interact certain ways deal negation dynamically changing hierarchies 
approach fundamentally di erent way semantics de ned 
calls canonic model program model usual sense :10.1.1.55.3825
structure certain blocked rules satis ed 
aspect semantics analogous ordered logic discussed earlier :10.1.1.55.3825
contrast semantics traditional particular canonic models models usual sense 
fixpoint semantics non monotonic inheritance section limit attention case horn programs 
particular allows inheritance deduction interact certain ways deal negation dynamically changing hierarchies 
approach fundamentally di erent way semantics de ned 
calls canonic model program model usual sense :10.1.1.55.3825
structure certain blocked rules satis ed 
aspect semantics analogous ordered logic discussed earlier :10.1.1.55.3825
contrast semantics traditional particular canonic models models usual sense 
fixpoint semantics non monotonic inheritance section limit attention case horn programs 
extension semantics programs negation bodies rules appendix structure ground id terms 
de ne result application method arguments invocation type 
oid replaced simply oid uniquely determined values scalar attributes object making explicit mention id redundant 
contrast objects value 
identity object depends syntactic position occupied object inside molecule 
don care styles share cases explicit mention object identity redundant determined context object structure 
path expressions calculus object oriented languages syntactic constructs known path expressions :10.1.1.50.9598
instance select employees working cs departments path expression liation dname cs liation 
dname cs 
idea path expressions signi cantly extended build objectoriented extension sql 
syntax expression ix written liation dname cs 
ideas underlying hilog applicable wide range logical languages reader familiar hilog di culty logic providing semantics hilog style terms 
needs done change interpretation id terms 
logic dynamic behavior logic cover important aspect object oriented languages dynamic behavior 
logic de ne methods querying object internal state logic provides means de ning methods change state 
new logical theory called transaction logic proposed :10.1.1.50.5253
formulated terms classical predicate logic ideas underlying transaction logic equally applicable logic extending dynamic behavior 
elaborate transaction logic example shows way transaction logic logic combined 
example illustrates style programming possible logic 
consider power set example section 
program constructs power sets duplicating elements sets oids 
algorithm resembles usual procedural way constructing power sets time bears strong similarity set program section 
building program rst de ne new relation sets added represents fact oid denotes set obtained set denoted adding element 
re ected rule assuming rule de nes attribute self self fx yg set set added self de ne powerset attribute start empty set member power set set powerset set step de ne method transaction terminology transaction logic creates new subset set adding single element known subset set self powerset new id added ins powerset ins powerset rst rule says construct new subset set determined attribute powerset rst nd known subset say generate new id dynamic predicate new id mentioned earlier 
inserts added record fact obtained adding represented predicate added ins see :10.1.1.50.5253
represent computed subset insert fact newly computed element set actual insertions take place predicate added ins atom powerset ins evaluated 
rst insertion conditional depends validity post condition prunes away wrong choices choices computed old subsets observe de ne new set explicitly 
inserting added database attribute self gets new value rule 
anatomy logic symbol new logical connective logic called serial conjunction 
dietrich 
extension tables memo relations logic programming 
ieee symposium logic programming slp pages 
ieee september 
topor :10.1.1.55.3825
declarative procedural semantics deductive object oriented systems 
journal intelligent information systems february 

mathematical 
