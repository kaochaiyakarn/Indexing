electronic notes theoretical computer science www elsevier com locate entcs computational effects operations overview gordon plotkin john power laboratory foundations computer science school informatics university edinburgh king buildings edinburgh eh jz scotland overview programme provide unified semantics computational effects notion countable enriched lawvere theory 
define notion countable enriched lawvere theory show various leading examples computational effects continuations give rise compare definition strong monad 
outline may notion model natural ways combine computational effects sum commutative combination distributivity 
outline unified account operational semantics 
results shown partial results plans development programme 
keywords computational effects operations generic effects monads enriched lawvere theories modularity operational semantics part enterprise semantics programming languages separate analyse features 
side effects side indicating occur side polymorphically computing case commands 
side effects concern store see features similarly polymorphic effects examples various forms nondeterminism printing jumps various kinds 
polymorphism resides fact operations apply types 
computational effects form focus investigation 
supported epsrc gr 
see front matter elsevier rights reserved 
doi entcs plotkin power electronic notes theoretical computer science computational effects invariably arise operations nondeterministic choice operation operations writing reading operations looking updating state 
need unified account operations 
account need extend account modularity various ways computational effects combine account dynamics instance structural operational semantics 
need understand logic effects particularly equational logic relationship observations 
begun programme research direction outlines achievements date questions currently working 
initial unified semantic account computational effects due eugenio moggi described :10.1.1.41.840:10.1.1.26.2787
moggi primarily considered computational effects called notions computation setting call value calculus examples drawn primarily programming language ml 
central semantic construct strong monad category finite products 
ideas particularly adopted functional programming particular development language haskell 
paul levy extended ideas call name combined calling mechanism :10.1.1.30.1451
approach relates closely moggi emphasised construction object tx computations type primitive give operations primitive role tx treated derived 
central notion lawvere theories particularly countable enriched ones 
study ordinary lawvere theories equivalent study universal algebra study equational theories study finitary monads set definitions finitary endofunctor monad category theoretic account universal algebra lawvere theories appear computer scientists 
study countable enriched lawvere theories general terms strong monads category finite products equivalent demanding category locally countably presentable cartesian closed category monad countable rank 
leading examples base categories satisfy properties categories include set poset cpo presheaf categories weaken countability condition grothendieck toposes 
restricted categories domains included 
moggi leading examples monads countable rank continuations monad 
include monads exceptions side effects nondeterminism interactive input output probabilistic nondeterminism monad local state 
monads easier describe terms enriched lawvere theories concept enriched lawvere plotkin power electronic notes theoretical computer science theory lends quite directly accounts operations modularity 
ordinary lawvere theory amounts clone operations equations typically described freely generated operations equations 
generalisation countable lawvere theories allows operations countable arity correspondingly equations 
generalisation enrichment allows sophisticated arities 
instance case enrichment poset may act arity 
allows correspondingly sophisticated notions operations equations outline section 
computational effects consider easily described countable enriched lawvere theories freely generated operations equations 
cases operations computationally simple natural instance lookup update side effects read write interactive input output 
equations similarly natural yield corresponding programming language equations 
wonder consider enriched lawvere theories essentially single sorted algebraic theories multi sorted theories family primitive types 
reason refers semantic category syntactically types 
choose semantic base category set cpo presheaf category study enriched lawvere theories relative base category 
single relative chosen semantic category imply single syntax programming language refers polymorphism operations modelled strong form naturality 
correspondence yoneda embedding arrows lawvere theory algebraic operations plays subtle role 
nondeterminism typically appears programming language polymorphic syntactic nondeterministic choice construction modelled correspondingly polymorphic algebraic operation tx tx tx base category tx free algebra corresponds lawvere theory equivalently map inthe base category viz indeterminate tt ff call map generic effect corresponding operation 
examples nondeterministic ones particular infinitary examples interactive input output generic effects read ti write object inputs object outputs appear directly programming language 
underlying mathematics analysed analysis programming significance plotkin power electronic notes theoretical computer science 
give brief outline section 
notion countable enriched lawvere theory provides natural way approach modularity computational effects may combined 
typically takes disjoint union operations equations adds equations relating classes operations add equations yielding sum effects demand families operations commute yielding commutative combination effects ask distributivity family operations family 
distributivity combinations investigated outline situation section 
natural question considered provide unified treatment structural operational semantics computational effects 
fact provide unified definition structural operational semantics entirely satisfactory :10.1.1.144.1841
works nondeterminism probabilistic nondeterminism printing combinations thereof agree reasonable operational semantics side effects outline date section 
outline issues section 
consider operations handle exceptions call regarding operations constructors effects operations algebraic ones mentioned far 
grateful andrzej filinski explaining notion 
outline possible systematic way extend modelling local phenomena extension global local state 
outline ideas model observations ideas giving enriched notion equational theory 
enriched lawvere theories section recall definition countable enriched lawvere theory give examples explain relationship monads 
define notion locally countably presentable category means category locally countably presentable cartesian closed category 
take definition granted 
need recall notion cotensor 
notion cotensor natural enrichment construction object category set object category object cotensor satisfies defining plotkin power electronic notes theoretical computer science condition isomorphism natural instance poset cotensors allow describe objects locally ordered category objects possibility allows describing theories consider greater range arities countable sets incorporate inequations context elegant coherent body mathematics 
category locally countably presentable cartesian closed category instance cpo concreteness define skeleton full sub category determined countably presentable objects equivalent free category countable tensors 
definition countable lawvere theory small category countable cotensors strict countable cotensor preserving objects functor op model category countable cotensors countable cotensor preserving functor countable lawvere theory distinguished object unit acts single sort theory object canonical countable cotensor countable cotensor means cotensor countably presentable object category typically extends free addition operations subject equations 
countable lawvere theory category countable cotensors category mod maps underlying category natural transformations naturality condition implies respect countable cotensors 
usual way describe countable lawvere sketches lawvere theory freely sketch 
notion sketch implicit thorough examination precisely concept literature plan provide definition equational theory 
idea give sketch amounts giving operations equations difference ordinary sketches lying extended notion arity 
barr wells book treats ordinary sketches case set loving detail 
example countable lawvere theory li interactive input output free countable lawvere theory generated operations read write countable set inputs countable plotkin power electronic notes theoretical computer science set outputs 
model li consists set functions reada writea may equivalently expressed function writea free model li generated arbitrary set recursive type tx functions defining unfolding recursion definition tx 
give free model set equivalent giving monad set induced li see theorem 
monad exactly moggi monad interactive input output 
interactive input output directly simply modelled countable lawvere theory li corresponding monad 
observe notion enriched lawvere theory operations primary generate theory 
arrows lawvere theory induce yoneda embedding operations free models 
arrow lawvere theory induces yoneda embedding natural transformation wheret monad induced lawvere theory 
said operations model nondeterminism probabilistic nondeterminism typically appear natural transformations 
cases especially infinitary operations instance interactive input output typically infinite generic effects appear directly programming language corresponding operations free models 
instance language interactive input output typically contain types contain expressions read write form 
give arrow lawvere theory equivalent giving map generic effect tc base category tx free model programs read write semantics maps er ti ew corresponding arrows lawvere theory 
correspondence operations generic effects analysed equivalent formulations notion operation contains analysis examples especially state albeit written slightly different terms 
ordinary sketch countable lawvere theory yielding side effects monad essentially 
example countable lawvere theory ls side effects finite set loc countable set val free countable lawvere theory generated operations update loc val lookup val loc subject natural equations listed plotkin power electronic notes theoretical computer science specifying interaction equations update lookup specifying commutation equations single sorted operations equations generate lawvere theory ls speak models ls category countable products 
countable products countable coproducts 
general theory category mod ls conditions suffice particular lawvere theory forgetful functor mod ls left adjoint inducing monad monad tx canonical comparison functor mod ls alg equivalence categories 
set tx set states 
agrees moggi monad side effects sees monad arising natural operations equations associates side effects operations immediately induced free models additional structure 
enriched lawvere theory generated operations subject equations 
operations appear directly describing programming languages equations 
typically notion observation says programs equal contextually equivalent relative notion observation 
develop theory construction enriched lawvere theories operations observations operations equations implicit notion sketch 
way justify equations notion hilbert post completeness related ideas 
enriched lawvere theory may ask addition equation forces theory collapse 
theory called hilbert post complete 
examples theories non determinism side effects see explanation caveat axiom missing definition making final paragraph wrong stated 
accepts equations theory hilbert post completeness implies possible equations 
equations significant right help provide proof system reason semantics order prove complicated programs equal wants small finite number equational axioms rules equations instance side effects mentioned play role 
instance equation plotkin power electronic notes theoretical computer science side effects corresponds program assertion complications involved higher order types mean equations complete language part desired job 
analysis equations side effects appears 
shall consider examples side effects appear countable lawvere theories 
example ignoring partiality countable lawvere theory lp corresponding power domain countable lawvere theory freely generated binary operation subject equations associativity commutativity idempotence countable lawvere theory semilattice see instance 
example countable lawvere theory arise freely countable lawvere theory cpo consider countable lawvere theory partiality 
example countable lawvere cpo theory partiality theory freely generated nullary operation subject condition inequality id unlabelled map unique map determined initial object terminal object op cpo exactly cpo element 
introduced countable lawvere theory lp semilattice 
notation denote countable lawvere cpo theory semilattice generators equations cpo theory objects countably presentable cpos flat ones additional objects generate additional maps 
open problem give explicit description countably presentable objects cpo 
countable lawvere cpo theory semilattice just plotkin power electronic notes theoretical computer science free countable lawvere cpo theory countable lawvere theory semilattice 
definition allows immediate sum effects 
terminology shall define definition 
example countable lawvere cpo theory ln nondeterminism sum countable lawvere cpo theories lp semilattice partiality 
result known different terms years 
follows fact operations equations nondeterminism semilattice partiality addition operations imposition equations 
non trivial example computationally natural countable lawvere cpo theory probabilistic nondeterminism 
detail appears albeit mathematical terms 
examples compare notion countable enriched lawvere theory strong monad 
countable lawvere theory category countable cotensors canonical forgetful functor mod forgetful functor left adjoint exhibiting mod category tl alg induced monad tl conversely monad countable rank category kl op determined restricting kleisli category kl oft objects countable lawvere theory lt enriched monad equivalent giving strong monad order comparison moggi definition little direct express main result terms strong monads 
theorem locally countably presentable cartesian closed category constructions tl lt induce equivalence categories category countable lawvere theories category strong monads countable rank 
comparison functor equivalence categories mod tl alg 
combining computational effects section consider natural combinations countable enriched lawvere theories corresponding natural combinations computational effects 
combinations primary importance sum commutative combination distributive combination 
plotkin power electronic notes theoretical computer science simplest sum 
category countable enriched lawvere theories cocomplete simply consider sum category 
mentioned previous section countable lawvere cpo theory ln nondeterminism sum lp lawvere lp semilattice partiality 
typical way partiality interacts computational effects side effects 
class examples exceptions 
proposition set denotes countable lawvere theory nullary operations countable lawvere theory monad tle tl 
construction sending monad called exceptions monad transformer 
sum countable lawvere theories may characterised terms categories models similarly characterisation commutative combination 
details appear 
sum lawvere theories combining interactive input output effects 
proposition extended characterise sum lawvere theory lawvere theory freely generated operations equations case interactive input output 
second combination commutative combination theories 
elegantly described universal property terms categories models shall start giving direct description follows 
definition countable lawvere theories countable lawvere theory defined countable lawvere theory generated disjoint union andl foreach respecting composition identities suppressing canonical isomorphisms subject commutativity comp comp unlabelled maps functoriality component 
construction giving commutative combination part symmetric monoidal structure category countable lawvere theories plotkin power electronic notes theoretical computer science definable universal property 
theorem small category countable cotensors categories mod mod mod coherently equivalent 
leading class examples commutative combination computational effects corresponds side effects monad transformer follows 
theorem ls denote countable lawvere theory side effects denote countable lawvere theory 
monad tls isomorphic tl final combination primary interest distributivity 
instance requires nondeterministic choice operation model nondeterminism probabilistic choice operation modelling probabilistic nondeterminism wants distributivity 
example distributivity occurs pair nondeterministic operations internal external nondeterminism wants distributivity 
informally clear required case set reasonable account 
generally enriched setting outline treatment enriched notion 
account enriched setting definitive resolution 
operational semantics lawvere theories contrast monads operations primitive 
may hope support unified structural operational semantics calculus extending computational calculus introduced :10.1.1.26.2787
progress direction follows :10.1.1.144.1841
consider lawvere theory generated operations subject equations 
extend usual notion value computational calculus notion effect value effect value defined inductively value term form tn wheref arity ti effect value 
closed term evaluates effect value essentially carrying operations appear details collection big step semantics appear adequacy results respect usual semantics computational calculus kleisli category induced monad nondeterminism induced small step semantics essentially plotkin power electronic notes theoretical computer science usual :10.1.1.144.1841
induced big step semantics looks somewhat different owing effect values 
simply rule ti vi vi carries evaluating yielding term form vn built copies 
unified big step semantics propose equivalent usual big step semantics nondeterminism formally little different 
similar remarks hold probabilistic nondeterminism printing 
believe idea infinitary operations provided allows corresponding infinitary syntax induce operational semantics generic effects 
unified semantics extends recursion :10.1.1.144.1841
obtain reasonable semantics side effects problem equations ignored side effects require defining structural operational semantics 
investigate distributive laws help 
note systematic operational semantics 
outline current plans questions want address 
computational effects studied instance sideeffects nondeterminism interactive input output enriched lawvere theories generated interesting primitive operations subject natural equations 
said strikingly false exceptions need raise operation order generate enriched lawvere theory making non algebraic handle operation central analysis exceptions 
similar situation arises modelling prolog 
plan extend general analysis order incorporate modelled relation corresponding constructors inverses kind 
showed monad local state described terms operations equations extending enriched lawvere theory global state 
precise general nature operations equations require linear structure fully understand 
plan investigate structure particular eye general mechanism allowing extension semantics global definition local definition instance yielding semantics local plotkin power electronic notes theoretical computer science exceptions 
satisfactory accounts sum commutative combinations computational effects satisfactory account distributive combinations 
plan complete particular attention devoted specific examples 
general structural operational semantics outlined yields standard operational semantics nondeterminism sensible probabilistic nondeterminism explained section side effects :10.1.1.144.1841
plan define subtle operational semantics includes examples 
relationship ordinary lawvere theories finitary monads set universal algebra equational theories thoroughly understood decades see relevant 
enriched lawvere theories defined shown equivalent finitary enriched monads seealso defines gives equivalence enriched universal algebra 
definition enriched equational theory theorem proving equivalent notions plan provide 
agree notion single sorted finite cotensor sketch implicit 
extend setting include realisability toposes 
incorporated treatment observations analysis 
describing programming language syntax including operations notion observation yielding equations determined contextual equivalence 
believe account level generality object observations closely related answer type define continuations monad rr 
amounts defining lawvere theory free sketch mathematical formulation idea generated operations subject observational equivalence 
discussed equational logic really discussed program logic 
scott lcf extended milner workers program logic extended call name calculus nontermination recursion 
deal effects translation calculus ask uniform treatment program logic uniform signature equational theory effects 
kind done pitts evaluation logic followed moggi 
notion operation clearly view may hope improve done 
extend analysis calling mechanisms plotkin power electronic notes theoretical computer science call value focus date 
paul levy call name helpful course call need investigated :10.1.1.30.1451
ideas apply languages built bases calculus process calculi 
theory operational semantics developed process calculi hope relate theories generality 
barr wells category theory computing science prentice hall 
barr wells toposes triples theories der mathematischen wissenschaften springer verlag 
benton hughes moggi monads effects summer school lecture notes computer science 
moggi syntactic approach modularity denotational semantics cwi technical report 
freyd algebra valued functors general tensor products particular colloq 
math 

gordon milner wadsworth edinburgh lcf lecture notes computer science berlin springer verlag 
heckmann probabilistic domains proc 
caap lecture notes computer science 
hennessy algebraic theory processes cambridge massachussetts mit press 
hyland plotkin power combining computational effects commutativity sum proc 
ifip conference theoretical computer science 
hyland plotkin power combining effects sum tensor submitted 
jones probabilistic non determinism ph thesis university edinburgh report ecs lfcs 
jones plotkin probabilistic powerdomain evaluations proc lics 
kelly basic concepts enriched category theory cambridge cambridge university press 
kelly power adjunctions presentations finitary enriched monads pure appl 
algebra 
kinoshita power sketches pure appl 
algebra 
power watanabe distributivity endofunctors pointed pointed endofunctors monads comonads proc 
cmcs electronic notes 
comp 
sci 

levy call push value subsuming paradigm proc :10.1.1.30.1451
tlca lecture notes computer science 
mislove nondeterminism probabilistic choice obeying laws international conference concurrency theory url citeseer nj nec com mislove nondeterminism html 
plotkin power electronic notes theoretical computer science moggi computational lambda calculus monads proc lics :10.1.1.26.2787
moggi view programming languages university edinburgh report ecs lfcs 
moggi notions computation monads inf 
comp 

moggi representing program logics evaluation logic unpublished manuscript available electronically 
moggi semantics evaluation logic fundamenta informaticae 
pitts evaluation logic birtwistle ed higher order workshop banff workshops computing springer verlag berlin pp 
plotkin powerdomain construction siam comput 

plotkin domains www dcs ed ac uk home gdp 
plotkin power adequacy algebraic effects proc :10.1.1.144.1841
fossacs lecture notes computer science 
plotkin power semantics algebraic operations proc mfps electronic notes 
comp 
sci 

plotkin power notions computation determine monads proc 
fossacs lecture notes computer science 
power enriched lawvere theories theory applications categories 
robinson variations algebra monadicity generalisations equational theories rod burstall formal aspects computing 
scott type theoretical alternative iswim cuch tcs 
turi plotkin mathematical operational semantics proc 
lics 
powerdomain indexed valuations proc lics 
