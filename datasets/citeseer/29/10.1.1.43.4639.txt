case reasoning acquire user scheduling preferences change time katia sycara zeng robotics institute production engineering carnegie mellon university matsushita electric industrial pittsburgh pa osaka japan katia cs cmu edu zeng cs cmu edu mei jp production manufacturing scheduling typically involves acquisition user optimization preferences 
ill problem space desired objectives practical scheduling problems difficult formalize costly solve especially problem configurations user optimization preferences change time 
advocates incremental revision framework improving schedule quality incorporating user dynamically changing preferences case reasoning 
implemented system called cabins records situation dependent tradeoffs consequences result schedule revision guide schedule improvement 
preliminary experimental results show cabins able effectively capture user static dynamic preferences known system exist implicitly extensional manner case base 
scheduling deals allocation limited set resources number activities 
third equally important consideration fact problem solving environment preferences user changing time 
approaches capture preferences statically require expensive knowledge base updating extremely limiting 
hand approaches acquire knowledge continuous interaction user utilize machine learning techniques adapt behavior changing user preferences problem solving context promising 
implemented case iterative revision approach cabins system demonstrate capability acquiring user contextdependent dynamically changing optimization preferences job shop scheduling domains 
reported extends previous cabins system :10.1.1.34.4892
tests hypothesis cbr incremental revision methodology shows potential capturing user preferences domains change time reuse control knowledge solution improvement 
preliminary experimental results shown section confirmed hypothesis 
built learning capability casebased reasoning capturing user situation dependent preferences active area knowledge systems decision support systems dss research 
problem arises variety application domains office electronic secretary financial portfolio selection digital circuit design production scheduling domain 
cabins consists modules initial schedule builder interactive schedule repair case acquisition module automated schedule repair case re module 
case representation content case shown 
global features give characterization potential repair flexibility lack thereof schedule 
associated focal activity local features identified potentially predictive effectiveness applying particular repair tactic 
details case features refer :10.1.1.34.4892
global feature weighted tardiness resource utilization average resource utilization deviation value salience value salience value salience local feature window span predictive start time advance alt predictive start time advance projected tardiness gain alt projected tardiness gain left shift wip gain alt left shift wip gain swap wip gain alt swap wip gain value salience value salience value salience value salience value salience value salience value salience value salience value salience repair history tactic outcome effect value salience value salience type value salience cabins case representation order bound ripple effects repair repair tactic bounded time horizon time interval activity preceding focal activity focal job focal activity 
cabins currently repair tactics 
examples repair tactics left shift try move focal activity resource left time line possible repair time horizon minimize amount capacity allocation created move 
swap swap focal activity activity resource repair time horizon causes amount precedence constraint violations 
effect salience see assigned outcome unacceptable indicates significance effect repair outcome 
case retrieval re cases gathered cabins repairs sub optimal schedules user interaction 
cabins repairs schedules recognizing schedule finding jobs focusing focal activity repaired repair cycle invoking cbr global local features indices decide appropriate repair tactic focal activity invoking cbr repair effect features type value salience indices evaluate repair result repair result evaluated cbr unacceptable deciding give repair tactic try 
case retrieval mechanism cabins uses variation nearest neighbor method nn 
detailed formula similarity calculation see :10.1.1.34.4892
experimental evaluation capturing changing preferences extensive experiments conducted cabins 
experimentally shown cabins capable capturing diverse static user optimization preferences re guide solution quality improvement robust sense improves solution quality independent method initial solution generation produces high quality solutions 
report preliminary results set experiments aimed testing hypothesis cbr incremental modification re methodology effective capturing user preferences change time reflected selection schedule repair actions evaluation repair consequences 
hypothesis difficult verify due subjective ill defined dynamic nature user preferences 
katia sycara 
learning control knowledge cases schedule problems 

ieee 
katia sycara :10.1.1.34.4892
cabins framework knowledge acquisition iterative revision schedule improvement reactive repair 
artificial intelligence appear 

developing managing expert systems proven techniques business industry 
