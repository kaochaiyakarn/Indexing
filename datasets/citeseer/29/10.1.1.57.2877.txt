task interdependencies design time real time scheduling alan garvey marty humphrey victor lesser computer science department university massachusetts amherst ma email garvey cs umass edu design time approach real time scheduling situations multiple methods exist tasks system needs solve 
methods relationships execution method enabling execution rough approximation method affecting performance method uses result 
previous scheduling real time ai tasks ignored relationships 
presents optimal design time scheduler particular kinds relationships occur actual ai application examines performance scheduler simulation environment models tasks application 
major difficulties real time scheduling ai tasks lack predictable durations 
difficulty occurs non ai systems especially prominent ai problem solving inherent nondeterminism ai problem solving techniques due extensive search 
algorithms tradeoffs solution quality versus time 
scheduling problem approximate algorithms decide allocate processing time approximations different tasks optimize total performance system 
approaches scheduling problem described literature dean boddy liu russell zilberstein nearly approaches assume tasks totally independent hard precedence constraints 
ai applications consist independent tasks series interrelated subproblems consistent solution required acceptable answer 
importance relationships account scheduling decisions observed sensor interpretation garvey lesser lesser corkill important reason focused relationships undoubtedly difficulty scheduling related tasks efficiently :10.1.1.42.5409
don offer proof due space limitations evident scheduling problems investigating fall class np hard problems shown similar problems involving task interrelationships graham liu discuss developed scheduling algorithm specific class approximation algorithms task structures worst case exponential performance practice able schedule tasks effectively 
new scheduling algorithm exploits task interrelationships appropriate called time approach real time problem solving decker garvey lesser design time generalization previously called approximate processing lesser approach solving problems domains multiple methods available tasks satisficing solutions acceptable :10.1.1.42.5409
methods tradeoffs solution quality versus execution time may applicable particular environmental situations 
methodology known design time advocates available time generate best solutions possible 
approaches scheduling problem described literature dean boddy liu russell zilberstein nearly approaches assume tasks totally independent hard precedence constraints 
ai applications consist independent tasks series interrelated subproblems consistent solution required acceptable answer 
importance relationships account scheduling decisions observed sensor interpretation garvey lesser lesser corkill important reason focused relationships undoubtedly difficulty scheduling related tasks efficiently :10.1.1.42.5409
don offer proof due space limitations evident scheduling problems investigating fall class np hard problems shown similar problems involving task interrelationships graham liu discuss developed scheduling algorithm specific class approximation algorithms task structures worst case exponential performance practice able schedule tasks effectively 
new scheduling algorithm exploits task interrelationships appropriate called time approach real time problem solving decker garvey lesser design time generalization previously called approximate processing lesser approach solving problems domains multiple methods available tasks satisficing solutions acceptable :10.1.1.42.5409
methods tradeoffs solution quality versus execution time may applicable particular environmental situations 
methodology known design time advocates available time generate best solutions possible 
problem solving method type described ambrosio ambrosio time bound dynamically construct execute problem solving procedure probably produce reasonable answer approximately time available 
design time successful duration quality associated methods fairly predictable 
methods tradeoffs solution quality versus execution time may applicable particular environmental situations 
methodology known design time advocates available time generate best solutions possible 
problem solving method type described ambrosio ambrosio time bound dynamically construct execute problem solving procedure probably produce reasonable answer approximately time available 
design time successful duration quality associated methods fairly predictable 
predictability issue investigated detail previous garvey lesser result predictability necessary execution times complex set factors include busy agent difficult agent determine method performing expected :10.1.1.42.5409
agent tolerate uncertainty predictions ffl monitoring done quickly accurately task meet deadline time remains execute faster method ffl intermediate results shared methods necessary switch faster method intermediate results generated previous method ffl exists fall back method quickly generates minimally acceptable solution 
section presents model task structures supports satisficing real time tasks 
section describes particular class task structure presents algorithm scheduling class gives example algorithm scheduling set task groups 
followed section examines performance algorithm simulation environment 
ffl hinders relationships may exist situations enables may exist enabling subtask maximum quality accumulation function 
situation may hinders relationship lowest quality method solving subtask tasks subtask enables 
corresponds situation crude approximation task negative effects behavior tasks result approximated task 
environmental characteristics closely model characteristics seen sensor interpretation application 
particular enables relationships appear requirements low level data processed high level interpretations data hinders relationships appear situation fast imprecise approximations low level data processing increase duration decrease precision high level results garvey lesser lesser corkill algorithm briefly algorithm recursively finds methods executing task task structure pruning methods methods generate greater equal quality equal time :10.1.1.42.5409
calculating expected quality method takes enables hinders constraints account 
unpruned methods task group orders task groups deadline finds combination methods task groups generates highest total quality meeting deadlines 
schedules execution individual executable method simple algorithm ensures enables constraints violated avoids hinders constraints possible 
schedule generates quality task groups scheduler returns schedule generates quality task groups possible 
scheduler throw away fastest methods able find schedule situations find originally 
approximation thought investigated carefully schedule considering hinders relationships 
preliminary investigation suggests positive effect reducing runtime scheduler negative effect having scheduler occasionally produce schedules meet deadlines scheduler mis estimates duration executable methods 
approach problem monitor execution methods 
detailed discussion monitoring see garvey lesser intend investigate issues build schedulers take performance account scheduling :10.1.1.42.5409
result schedulers design time tasks design time character 
previously examined scheduling tasks multiple methods task interdependencies distributed vehicle monitoring testbed dvmt simulation environment garvey lesser currently working developing sophisticated scheduler efficiently schedules complex task structures include additional types relationships tasks facilitates relationship occurs dvmt environment :10.1.1.42.5409
looking scheduling distributed agents cooperating solve complex real time problems 
intend study scheduler sound understanding application lesser generally investigate issues raised experimental results section moving direction building design time schedulers control performance 
preliminary investigation suggests positive effect reducing runtime scheduler negative effect having scheduler occasionally produce schedules meet deadlines scheduler mis estimates duration executable methods 
approach problem monitor execution methods 
detailed discussion monitoring see garvey lesser intend investigate issues build schedulers take performance account scheduling :10.1.1.42.5409
result schedulers design time tasks design time character 
previously examined scheduling tasks multiple methods task interdependencies distributed vehicle monitoring testbed dvmt simulation environment garvey lesser currently working developing sophisticated scheduler efficiently schedules complex task structures include additional types relationships tasks facilitates relationship occurs dvmt environment :10.1.1.42.5409
looking scheduling distributed agents cooperating solve complex real time problems 
intend study scheduler sound understanding application lesser generally investigate issues raised experimental results section moving direction building design time schedulers control performance 
schedulers able trade quality schedules produce time takes produce 
effect creating schedulers design time tasks design time character 
