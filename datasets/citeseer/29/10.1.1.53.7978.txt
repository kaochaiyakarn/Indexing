secure object spaces coordination model agents manuel jan vitek coordination languages shared data spaces suited programming parallel applications composed cooperating software components 
secure object spaces sos extend model support composition independently developed mutually suspicious software components 
sos provides flexible efficient security facilities cryptographic re interpretation object types 
discuss implementation secure object spaces context java mobile agent system 
coordination languages shared data spaces fifteen years 
researchers advocated structuring distributed concurrent systems 
relevant facts cryptography 
symmetric schemes des shared key encode data ciphertext key decrypt data 
write denote encryption shared key note asymmetric schemes known public key cryptography key pairs 
key encrypt data decrypt 
pair denote encryption value remainder standard assumptions cryptography ffl way decrypt value know corresponding key :10.1.1.1.5724
ffl encrypted packet reveal key encrypted 
ffl sufficient redundancy messages decryption algorithm detect ciphertext encrypted key 
sos object fields label value pairs 
sos operations treat labels keys 
server job await requests compute reply key included request return answer 
client written new object pair new integer object contents pair sos new sosobject contents object template nil sosobject reply sos new sosobject template server written object template nil sosobject query sos new sosobject template object pair query select integer pair pair object contents fact sos new sosobject contents request reply objects may pass different processes able hide fake reply 
replay attacks prevented adding nonces 
related gordon abadi inspired aspects theoretical treatment sos 
spi calculus extend calculus employ cryptography messages sent named channels :10.1.1.1.5724
abadi equates security protocol pre defined message exchanges type correctness 
clearly applicable protocols see direct relation dynamic typing sos 
klaim language known takes approach security 
process requires access rights read write tuple space 
showed java implementation encryption needed sos objects leave type safe environment virtual machine instance transferred network stored disk 
abadi 
secrecy typing security protocols 
theoretical aspects computer software pages september 
abadi gordon :10.1.1.1.5724
calculus cryptographic protocols spi calculus 
proceedings fourth acm conference computer communications security zurich april 
acm press 
long version technical report university cambridge 
