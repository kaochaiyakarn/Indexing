caching multidimensional queries chunks prasad deshpande amit shukla jeffrey naughton naughton cs wisc edu computer sciences department university wisconsin madison wi number caching proposed implemented olap systems order reduce response times multidimensional queries 
previous caching considered table level caching query level caching 
table level caching suitable static schemes 
hand query level caching dynamic schemes coarse large query results 
query level caching drawback small query results effective new query subsumed cached previous query 
propose caching small regions multidimensional space called chunks 
taxonomy caching schemes caching schemes reported literature classified granularity unit caching nature caching 

nature caching category caching schemes classified static dynamic 
static caching set group bys chosen corresponding tables materialized 
reduces problem selecting aggregates precompute hru ghru amount space :10.1.1.41.1205
choice tables priori independent actual query stream 
contrary dynamic caching schemes adapt depending type query stream 
static approach specifically suited backend precompute aggregated tables views 
dynamic approach significantly beneficial middle tier 
expensive compute chunk high level aggregation requires scanning aggregating lot base level chunks 
cost incorporated cache policies 
schemes profit metric consisting size execution cost query considered ssv 
similar replacement scheme considers benefit chunk 
notion benefit groupby introduced hru :10.1.1.41.1205
aggregation middle tier group benefits group 
benefit chunk measured fraction base table represents 
example chunks group benefit chunk size base table 
number chunks higher levels aggregation benefit 
gupta 
selection views materialize data warehouse 
proc 
sixth icdt 
hru rajaraman ullman :10.1.1.41.1205
implementing data cubes efficiently proc 
acm sigmod int 
conf 
management data 
