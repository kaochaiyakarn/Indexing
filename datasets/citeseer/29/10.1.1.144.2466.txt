decoding reed solomon codes error correction bound madhu sudan lambda randomized algorithm takes input distinct points xi yi theta field integer parameters returns list univariate polynomials variable degree agree set points places yi xi values provided omega nd 
running time bounded polynomial immediately provides maximum likelihood decoding algorithm reed solomon codes works setting larger number errors previously known algorithm 
best knowledge efficient polynomial time bounded algorithm provides error recovery capability error correction bound code efficient constant polynomial rate code 
problem statement consider problem 
lambda ibm thomas watson research center box yorktown heights ny usa 
email madhu watson ibm com 
problem input field distinct pairs elements xi yi theta integers output list functions satisfying polynomial degree xi problem close variants considered context coding theory learning 
best threshold polynomial time bounded algorithm solve problem previously known notice ratio fix 
fact satisfies property unique function satisfying 
particularly simple algorithm case berlekamp welch see instance gemmell sudan 
algorithm solves problem omega nd 
notice fixed fraction agreement required algorithm approaches previous algorithms get 
algorithm algorithm ar restricted version problem 
task reconstructing polynomials describing set points relevant context coding theory describe context 
task may relevance computational complexity theory 
touch motivation briefly 
error correcting codes integers ffi collection symbols sigma ffi code sigma collection ae sigma letter words alphabet sigma jcj sigma property strings differ ffi places strings hamming distance 
code largest ffi ffi code referred distance code 
satisfies ffi ffi code error correcting code 
largest value referred error correction bound code 
terminology reflects fact string sigma string hamming distance codes relevance reed solomon codes 
finite field size parameter reed solomon code gamma code codewords strings jf gamma gp fixed primitive element ranges polynomials degree see instance page 
algorithmic tasks relevance tasks maximum likelihood decoding 
problem ffi code defined ffi follows string sigma find string hamming distance exists 
error correcting code answer exists unique 
notice problem defined values ffi may allow non unique answers 
maximum likelihood decoding problem see instance page set model larger number errors considered defined follows string sigma find codeword nearest hamming distance away 
problem referred nearest codeword problem 
previous focused mainly task error correction algorithms known error correction interesting codes 
particular reed solomon codes error correction problem error correcting code solved polynomial time 
particular earlier mentioned solution berlekamp welch works setting 
case recovering error larger error correction capacity code attracted amount attention significantly known problem 
case solution maximum likelihood decoding problem may unique clear solution reported answer unique 
clear algorithm able allowed prefer solution equally respectable solution 
possible define closely related problem offer algorithm choice solutions 
problem called reconstruction problem defined follows string find codewords hamming distance 
problem known list decoding problem 
reconstruction problem offers solution maximum likelihood decoding problem larger range allowed error correction problem 
problem tackled case reed solomon codes 
reconstruction problem universal panacea maximumlikelihood problem 
fact making task enumerative picking element large set want set complexity requirements task go 
particular running time lower bounded output size 
bounds output size reconstruction problem studied context coding theory known bound due johnson see page bounds number solutions gamma ffi gamma gamma binary codes codes alphabet provided denominator positive 
general codes simple bound shown inclusion exclusion argument see instance yields number solutions reconstruction problem ffl gamma ffl ffi provided gamma gamma ffi 
bound known due goldreich rubinfeld sudan 
describe 
inclusion exclusion bound constructive provide list ffl codewords may solution reconstruction problem 
reasonable ask solution reconstruction problem runs polynomial time output size bounded 
solve reconstruction problem reed solomon codes exactly values parameters ffi inclusion exclusion bound 
finding bounds general settings ffi finding solutions reconstruction problem settings remain open questions 
previous mentioned previous section error correcting problem describe past problem 
definition reconstruction problem definitions ar lipton rubinfeld sudan goldreich rubinfeld su dan 
best knowledge instances reconstruction problem interesting solutions errorcorrecting code 
due goldreich levin provides solution certain families hadamard codes 
kushilevitz mansour provide variant algorithm applies codes 
second instance involves generalization codes algorithm due 
codes extremely low rate codes 
fact rate ratio codes logo brute force algorithm running time sigma inefficient problems 
feature solutions interesting efficient time polynomial random access oracle describing input solution interesting learning theoretic cryptographic settings useful coding theoretic applications due low information rate 
techniques goldreich levin inherited interesting manage convert modularly non constructive bounds number outputs discussed earlier constructive ones 
technique appear generalize setting reed solomon codes high rate codes 
ar provide solutions reconstruction problem full generality 
particular restrict nature input word restricted case provide solution reconstruction problem algebraic techniques particular uses polynomial time solutions bivariate factoring problem 
solution minor modification algorithm analysis manages get restriction 
algorithm algorithm solving problem section 
definition weighted degree weights wx wy wx wy weighted degree monomial 
wx wy weighted degree polynomial ij maximum mono non zero coefficients wx wy weighted degree monomial 
algorithm inputs xn yn parameters set 
find function satisfying weighted degree ld xi yi identically zero 
factor polynomial irreducible factors 
output polynomials gamma factor xi yi values 
note step solved randomized polynomial time error 
characteristic zero running time allowed polynomial jf solution obtained deterministically 
see instance 
analysis order prove algorithm run polynomial time works correctly need prove set claims 
claims fix set pairs xn yn claim function satisfying exists time poly 
proof pl pm gamma wish find coefficients satisfying constraints pl pm gamma 
linear system unknowns solution exists polynomial time 
claim exists function satisfying 
proof observe linear system homogenous 
setting satisfies linear constraints 
satisfy identically zero 
order show non zero solution exists observe number unknowns linear system wish solve homogenous linear system variables constraints non zero solution exists 
lemma special case general class theorems known theorem 
interested tight behavior theorem version due 
proof 
claim function satisfying function satisfying ld gamma divides 
proof consider function def 
polynomial argue degree ld 
consider monomial 
weighted degree ld jd ld 
term polynomial degree jd ld 
degree ld sum polynomials degree ld 
argue identically zero 
xi xi zero yi xi xi zero strictly greater ld points 
zeroes degree identically zero implying 
consider polynomial qx coefficients ring polynomials polynomial remainder theorem qx gamma divides qx 
substituting yields lemma 
ready optimize parameters ignore fact integers fix aspect 
notice want ld value compute smallest second condition holds gamma gamma 
find gamma gamma ld dl minimize expression function unknown parameter obtain smallest value algorithm 
minimum occurs gamma gamma setting yields gamma gamma gamma ld gamma gamma gamma gamma due integrality issues lose little bit theorem 
theorem sequence distinct pairs xi yi xis elements field integer parameters dd de gamma bd exists algorithm runs time polynomial find polynomials degree number point xi yi yi xi proof algorithm section dd gamma gamma 
may verified setting satisfies condition 
claim step return function satisfying property 
furthermore setting satisfies condition ld 
claim guarantees function satisfying gamma divide polynomial returned step outputs 
bound number polynomials give new proof upper bound number polynomials degree agreeing distinct points xi yi proof uses inclusion exclusion argument different 
notice bound exactly applies exactly conditions important difference proof holds univariate polynomial case theirs applies generally 
feel new proof may interest 
furthermore justifies statement section algorithm works exactly setting inclusion exclusion bound 
lemma iq delta gamma number polynomials degree satisfying gamma gamma bound shows linear number polynomials bounded constant see table 
particular number errors error correction limit bound shown 
proof integers algorithm previous section works correctly algorithm section gives solutions implying upper bound number polynomials degree agree points places 
words integers satisfying ld upper bound number functions satisfying 
indicates pick large possible subject constraint gamma ld gamma 
set gamma ld gamma 
reduces gamma ld words require gamma gamma gamma ff def gamma gamma gamma gamma gamma ffi def gamma gamma gamma ff ff ffi roots 
ffi bff gamma ld gamma satisfy conditions provides upper bound number functions satisfying 
condition ffi satisfied gamma gamma gamma notice need integer satisfies inequality strictly forced bff just 
gamma gamma gamma satisfies condition get bound bff gamma gamma gamma gamma gamma gamma gamma yields lemma 
show final quantity upper bounded don show part 
extensions multivariate polynomials relatively simple extend algorithm analysis earlier sections directly apply multivariate polynomial fitting 
extend problem definition 
slight care take determine appropriate extension problem definition definition turns extension works easily 
consider variate polynomials 
denote variables 
shorthand denote tuple variables vector notation 
problem input field set ae function integers output list functions satisfying polynomial degree jf jf gj 
algorithm straightforward generalization algorithm section 
extend definition weighted degree obvious way 
definition integers wn wn weighted degree monomial qn di 
wn weighted degree polynomial xn maximum monomials non zero coefficients wn weighted degree monomial 
multivariate algorithm inputs ae ff gx hk parameters set 
find function satisfying weighted degree ld identically zero 
factor polynomial irreducible factors 
output degree polynomials gamma factor values usual need ensure number coefficients prove sufficiently large algorithm output solutions reconstruction problem 
claim ld exists function satisfying 
proof sketch number coefficients strictly larger ld 
bound stated gross approximation 
generic degree ld polynomial variables ld coefficients 
degree ld polynomial variables restriction degree ranges restriction taken care factor 
number lower bounded grossly ld wish large follows easily 
remains mimic lemma multivariate setting 
claim function satisfying function satisfying 
ld gamma gamma divides 
proof sketch proof similar lemma 
function def polynomial degree ld identically zero 
root polynomial def 
optimization parameters done 
theorem table function field arbitrary finite subset integers list polynomials degree agree places time poly jhj provided ffl def 
jhj proof jhj 
set ld lemma guarantees step multivariate algorithm return polynomial satisfying 
condition implies ld gamma indicating function satisfies gamma divide polynomials returned procedure 
discuss univariate reconstruction algorithm 
limit ss nd significant weakness practical usability code 
rate def error correction error tolerated reported bound algorithm algorithm table applications tend ffi codes ffi growth proof yield interesting 
low rate codes hadamard codes past suffices low rate code reconstruction algorithm advantage 
table list error reconstruction algorithm tolerate number solutions produced rates 
reconstruction problem remains open values closer distance code gamma ffl ffi ffl finding solution may theoretical practical interest 
expect running time algorithm polynomial ffl goldreich give np hardness proof case 
np hardness result degree desired polynomial 
instance defined reals rationals 
main hopes investigating problem algorithmic solution complexity theory 
area numerous application reed solomon codes occurred repeatedly 
examples include determining hardness permanent random instances fault tolerant computing distributed computing environments result involving probabilistically checkable proofs 
see survey feigenbaum detailed look connections 
particular case applications probabilistically checkable proofs useful able characterize functions close polynomials able refute claimed proofs incorrect statements 
notice algorithm proves problem recognizing apparently mariner hadamard code page 
points close polynomial decidable np showing 
witness property proof function low degree polynomial describing tiny fraction input 
arora sudan justify initial hope analysis new analysis low degree testing turn leads new constructions proof systems 
application shown impagliazzo nisan area cryptography :10.1.1.144.2466
algorithm obtain random efficient constructions predicates way functions 
defining terms scope 
moving multivariate reconstruction problem glaring open problems remain 
starters clear bound number solutions ffl def grows slower jhj 
cases ffl larger omega jhj reconstruction problem fully solved 
particular case algorithm appears solve problem efficiently 
hopefully oversight part simple modification methods may 
solution remain algebraic 
question algebraic solution variate problem general works ffl omega jhj interesting question 
lastly speculate complexity maximum likelihood problem nearest codeword problem 
problem known np hard general linear codes 
hardness problem considered due reasons maximum likelihood decoding problem error correction problem code specified part input known standard 
nice know causes responsible hardness known codes error correction problem solved 
naor code known easily show existence small size maximum likelihood decoding circuits imply collapse polynomial hierarchy result karp lipton 
codes naor large distance 
remains open maximum likelihood decoding problem hard constant distance code 
reed solomon codes formed candidate show hardness problem hard solve 
nice find candidate hardness result 
lastly possibility error correcting codes hard decode full extent error correction capacity 
alternately ask question possible construct error correction algorithm error correcting linear code specified generator matrix 
positive answer necessitate algorithm determine distance code known open problem 
acknowledgments am grateful sanjeev arora oded goldreich rubinfeld martin tompa shmuel winograd valuable comments discussions 
am especially grateful greg sorkin spending numerous hours implementing version algorithm 
ar lipton rubinfeld sudan 
reconstructing algebraic functions mixed data 
proceedings rd annual ieee symposium foundations computer science pp 

arora sudan 
manuscript august 
ben goldwasser wigderson 
completeness theorems non cryptographic fault tolerant distributed computation 
proceedings th annual acm symposium theory computing pp 

berlekamp welch 
error correction algebraic block codes 
patent number 
berlekamp mceliece van 
inherent intractability certain coding problems 
ieee transactions information theory pp 

naor 
hardness decoding linear codes preprocessing 
ieee transactions information theory pp 

feige lund 
hardness computing permanent random matrices 
proceedings th annual acm symposium theory computing pp 

feigenbaum 
coding theory computational complexity 
proceedings symposia applied mathematics calderbank ed american math society providence pp 

gemmell sudan 
highly resilient correctors polynomials 
information processing letters 
goldreich levin 
hard core predicate way function 
proceedings st annual acm symposium theory computing pp 

goldreich rubinfeld sudan 
learning polynomials queries highly noisy case 
full version preparation 
extended appears proceedings th annual ieee symposium foundations computer science pp 

impagliazzo nisan :10.1.1.144.2466
personal communication 
september 

polynomial factorization 
latin simon ed springer lncs vol 
pp 

karp lipton 
connections nonuniform uniform complexity classes 
proceedings th annual acm symposium theory computing pp 

kushilevitz mansour 
learning decision trees fourier spectrum 
proceedings th annual acm symposium theory computing pp 

lipton 
new directions testing 
distributed computing cryptography dimacs series discrete math 
th 
cs vol 
ams 
sloane 
theory error correcting codes 
north holland 
van lint 
coding theory 
springer verlag 

