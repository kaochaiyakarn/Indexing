fine grained model code mobility pietro picco roman dip 
di scienze dell informazione universit di bologna bologna italy cs unibo dip 
di informazione politecnico di milano za leonardo da vinci milano italy picco dept computer science washington university campus box drive saint louis mo usa roman cs wustl edu 
take extreme view line code potentially mobile may duplicated moved program context host network 
motivation gain better understanding range constructs issues facing designer mobile code system setting unconstrained compilation performance considerations traditionally associated programming language design 
incidental study evaluation expressive power mobile unity notation proof logic mobile computing 
code mobility viewed key element class novel design strategies longer assume resources needed accomplish task known advance available start program execution 
know resources searched networks brought bear problem needed 
program portions thereof travels network search resources 
research done past operating systems provide support process migration mobile code languages offer variety constructs supporting movement code networks 
java tcl derivatives support movement architecture independent code shipped network interpreted execution time :10.1.1.146.4670
obliq permits movement code resources needs carry functions :10.1.1.17.6050
telescript representative class languages fully encapsulated program units called agents migrate site site 
location movement unit mobility resource access concepts mobile code languages 
differentiating factors precise definitions assigned concepts constructs available 
know resources searched networks brought bear problem needed 
program portions thereof travels network search resources 
research done past operating systems provide support process migration mobile code languages offer variety constructs supporting movement code networks 
java tcl derivatives support movement architecture independent code shipped network interpreted execution time :10.1.1.146.4670
obliq permits movement code resources needs carry functions :10.1.1.17.6050
telescript representative class languages fully encapsulated program units called agents migrate site site 
location movement unit mobility resource access concepts mobile code languages 
differentiating factors precise definitions assigned concepts constructs available 
language design efforts complemented development formal models 
main purpose gain better understanding fundamental issues facing mobile computations 
course models expected play important role formulation precise semantics mobile code languages constructs serve source inspiration novel language constructs uncover theoretical limitations 
basic differences mathematical foundation underlying philosophy technical objectives led models diverse flavor 
calculus algebra treats mobility ability dynamically change structure passing names entities including communication channels 
extensions proposed provide explicit notion location :10.1.1.36.243
particular ambient calculus emphasizes manipulation access administrative domains captured notion scoping :10.1.1.147.2334
mobile unity state transition system notion location explicit component interactions defined coordination constructs external components code :10.1.1.41.3512
reported closely aligned style formal models community directed identifying opportunities novel mobility constructs language design 
particularly interested examining issue granularity movement studying consequences adopting fine grained perspective 
course models expected play important role formulation precise semantics mobile code languages constructs serve source inspiration novel language constructs uncover theoretical limitations 
basic differences mathematical foundation underlying philosophy technical objectives led models diverse flavor 
calculus algebra treats mobility ability dynamically change structure passing names entities including communication channels 
extensions proposed provide explicit notion location :10.1.1.36.243
particular ambient calculus emphasizes manipulation access administrative domains captured notion scoping :10.1.1.147.2334
mobile unity state transition system notion location explicit component interactions defined coordination constructs external components code :10.1.1.41.3512
reported closely aligned style formal models community directed identifying opportunities novel mobility constructs language design 
particularly interested examining issue granularity movement studying consequences adopting fine grained perspective 
simply put asked question smallest unit mobility extent constructs commonly encountered mobile code languages built set fine grained elements 
basic differences mathematical foundation underlying philosophy technical objectives led models diverse flavor 
calculus algebra treats mobility ability dynamically change structure passing names entities including communication channels 
extensions proposed provide explicit notion location :10.1.1.36.243
particular ambient calculus emphasizes manipulation access administrative domains captured notion scoping :10.1.1.147.2334
mobile unity state transition system notion location explicit component interactions defined coordination constructs external components code :10.1.1.41.3512
reported closely aligned style formal models community directed identifying opportunities novel mobility constructs language design 
particularly interested examining issue granularity movement studying consequences adopting fine grained perspective 
simply put asked question smallest unit mobility extent constructs commonly encountered mobile code languages built set fine grained elements 
proper choice mobility operations elegant uniform semantic specification formal verification capabilities expressive power issues closely tied answer basic question posed 
new model viewed large extent specialization mobile unity 
enables continue employ coordination constructs mobile unity proof logic 
result small set macro definitions map fine grained model proposed standard mobile unity notation specification semantics mobility constructs terms coordination language core mobile unity 
application mobile unity novel 
mobile unity previously definition high level transient interactions transiently transitively shared variables physical logical mobile setting formal specification verification mobile ip specification verification mobile code paradigms code demand remote evaluation mobile agents :10.1.1.41.3512
structure 
section contains informal overview model section introduces structure model section gives description mobility primitives model section defines formal semantics 
section draw 
model overview give informal overview model 
auxiliary definitions sharing pm pm pm pm true ffi false true fl false fig 

establishing bindings units transient variable sharing statement inhibition 
reactive statements 
transient sharing ultimately defined reactive statements outside scope :10.1.1.41.3512
statement scheduling 
mobile unity statement assumed executed infinitely infinite execution weakly fair selection statements basis scheduling process 
coordination constructs mobile unity include construct guard strengthening called inhibit 
inhibit instance statement continues selected effect skip condition met 
