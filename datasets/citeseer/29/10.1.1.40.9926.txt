querying shapes histories rakesh agrawal giuseppe edward wimmers ibm almaden research center harry road san jose ca shape definition language called sdl retrieving objects shapes contained histories associated objects 
small powerful language allows rich variety queries shapes historical time sequences 
interesting feature sdl ability perform matching 
match user cares shape care specific details 
important feature sdl efficient 
sdl operators designed greedy reduce non determinism turn substantially reduces amount back tracking implementation 
sdl operators greedy little non determinism sense multiple match possibilities inherent sdl shape turn substantially reduces amount back tracking implementation 
addition sdl provides potential rewriting shape expression efficient form potential indexes speeding implementation 
sdl benefits rich heritage languages regular expressions earlier symbol description lb ub iv fv slightly increasing transition highly increasing transition slightly decreasing transition highly decreasing transition appears transition zero value non zero value zero nonzero disappears transition non zero value zero value nonzero zero stable final value nearly equal initial value zero initial final values zero zero zero table illustrative alphabet different design focus influences expressions easy write understand optimize evaluate 
example matching sdl reminiscent approximate matching strings patterns time series sdl allows user impose arbitrary conditions match requires user specify conditions completely 
event specification languages active databases concentrate detecting endpoints events concentrating intervals sdl :10.1.1.143.6958
seq focused building framework describing constructs various existing sequence models 
organization rest organized follows 
section introduce sdl informally examples formal semantics appendix section discuss design rationale sdl 
discuss expressive power capability matching ease efficient 
discuss expressive power capability matching ease efficient 
section give transformation rules rewriting sdl expression equivalent efficient form 
section describe index structure show speed evaluation sdl queries 
conclude section summary 
expanded version see :10.1.1.40.9926
shape definition language introduce shape definition language sdl informally examples 
formal semantics appendix object database associated named histories 
history sequence real values 
behavior history described considering values assumed history unit time period considering transitions instant 
example parameterized spike shape spike concat exact exact parameterized shape definition shape parameters bound 
bound concrete values parameters example shape width ht ht width spike ht ht spike ht ht design sdl sdl provides key advantages ffl natural powerful language expressing shape queries ffl capability matching ffl reduction output clutter ffl efficient implementation expressive power sdl sdl express wide variety queries shapes history 
sequence shape type query called continuous matching finds subsequences match shape type query referred regular matching produces boolean indicating entire sequence matches shape 
sdl includes operators concat atleast sdl equivalent expressive power regular expressions regular matching 
equivalence proven :10.1.1.40.9926
sdl designed provide ease expression efficient implementation features enhance effectiveness 
atleast operator variant operator regular expressions provides efficiency gains expressiveness enhancements continuous matching 
operator required number matches allowed nondeterministically exit continue matching atleast greedy operator exit matches 
regular matching case greedy nature atleast cause loss expressive power write shape subsequent shapes affected greedy nature atleast 
sdl designed provide ease expression efficient implementation features enhance effectiveness 
atleast operator variant operator regular expressions provides efficiency gains expressiveness enhancements continuous matching 
operator required number matches allowed nondeterministically exit continue matching atleast greedy operator exit matches 
regular matching case greedy nature atleast cause loss expressive power write shape subsequent shapes affected greedy nature atleast 
details construction :10.1.1.40.9926
case continuous matching greedy semantics atleast allow sdl take advantage contextual information eliminate useless clutter 
example shape atleast sdl find maximal subsequences consecutive ups 
words sdl report non maximal subsequences eliminating useless clutter 
regular expressions able eliminate clutter unable look ahead provide contextual information 
sdl provides non recursive macro facility parameters enhances readability allowing commonly occurring shapes abstracted 
exciting features sdl inclusion operator permits matching user cares shape care specific details 
example indicate subsequence specified operator user specify limiting number downs occur subsequence 
operator simulated regular expressions easy 
details construction involve keeping track times diverse finite entered accepting states :10.1.1.40.9926
operator presents natural method expressing desired shape 
instructive give example 
assume 
disjoint elementary shapes elementary shapes disjoint match transition sequence 
assume 
disjoint elementary shapes elementary shapes disjoint match transition sequence 
consider problem finding permutation expression matches exactly sequences length precisely occurrence straightforward approach listing possible strings grows 
known permutation expression compacted bit exponential size compaction possible regular expression notation 
see details proofs :10.1.1.40.9926
exponential size required expressing permutations regular expression notation tedious error prone particularly readable 
parameterized shapes macros dramatically reduce size permutation expression 
define inductively parameterized shapes describe permutations elements follows shape shape concat concat shape concat concat concat shape 
concat gamma 

pn 
pn 

pn agrawal wimmers :10.1.1.40.9926
querying shapes histories 
ibm research report rj ibm almaden research center san jose california june 
clifford 
dynamic time warping find patterns time series 
ibm research report rj ibm almaden research center san jose california june 
clifford 
dynamic time warping find patterns time series 
kdd aaai workshop knowledge discovery databases pages seattle washington july 
chakravarthy :10.1.1.143.6958
kim 
composite events active databases semantics contexts detection 
proc 
vldb conference pages santiago chile september 
