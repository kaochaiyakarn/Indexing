appeared autonomous agents multi agent systems kluwer academic publishers july 
reflections nature multi agent coordination implications agent architecture victor lesser technical report february development enabling infrastructure generation multi agent systems consisting large numbers agents operating open environments key challenges multi agent community 
current infrastructure support assist development sophisticated agent coordination strategies 
need development high level support structure focus 
domain independent generic agent architecture proposed wraps agent problem solving component order problem solving responsive real time constraints available network resources need coordinate large small problem solving activities agents 
architecture contains components local agent scheduling multi agent coordination organizational design detection diagnosis line learning designed interact range different situation specific coordination strategies implemented adapted situation evolves 
prototype example model warren developed multi agent system doing portfolio management internet 
development enabling infrastructure mobile computing interoperability programs residing distant sites new generations distributed operating systems continue construction systems model easier 
infrastructure support mainly deals low level protocols transmission information embed deep models nature agent coordination 
simply defined agent coordination involves selection ordering communication results agent activities agent works effectively group setting 
agent coordination needs take account reasoning quantitative character interactions agent activities performance characteristics resource demands activities activities agents resource hard soft deadlines completion agent activities symbolic information beliefs desires intentions agents desirability certain joint states agents achieved :10.1.1.31.1525:10.1.1.35.9555:10.1.1.37.83:10.1.1.54.5977:10.1.1.37.7970:10.1.1.36.6876
development high level framework exploits analytic symbolic information focus coordination agent activities necessary interdependencies agent activities contention resources needed execution due activities subproblems contributing solution larger problem 
example simple situation subproblem interdependencies occurs agents intending overlapping subproblems alternative methods data generate solution 
coordination case involves making decisions agents subproblem concurrently sequentially order agent solve subproblem 
form interdependence occurs subproblems part larger problem solution larger problem requires certain constraints exist solutions subproblems included case simple situation results subproblem needed solve complex situation constraints joint states agents 
example simple situation subproblem interdependencies occurs agents intending overlapping subproblems alternative methods data generate solution 
coordination case involves making decisions agents subproblem concurrently sequentially order agent solve subproblem 
form interdependence occurs subproblems part larger problem solution larger problem requires certain constraints exist solutions subproblems included case simple situation results subproblem needed solve complex situation constraints joint states agents 
coordination second case involves making decisions agent solve subproblem intermediate results subproblem solution worthwhile transmitting 
additional interdependencies subproblems inherent problem domain arise possible decompose problem set subproblems perfect fit computational requirements effectively solving subproblem location information expertise processing communication resources agent network :10.1.1.45.4176
interdependencies system performance significantly affected choice methods solve subproblem order solving subproblems time subproblem solved aspects subproblem solutions transmitted 
usefulness coordination seen simple situation agent needs results subproblem agent solving 
arranged producing agent deliver timely fashion desired result consuming agent idle waiting results system performance improved 
surface coordination decision simple 
additionally systems consisting hundreds thousands agents need able form evolve higher order social structures teams organizations exploit collective efficiencies manage emerging situations 
ability adapt intra agent inter agent problem solving dynamics environment short long term ways differentiate types agent systems conventional distributed systems architectures adaptability especially domain problem solving level primary motivation 
fundamental issue addressed basic functions interaction patterns necessary agent architecture support construction systems allow operate efficiently robustly 
answer question necessity speculative substantial experience building multiagent systems anticipated scale complexity 
personal view experiences years thinking building wide range multiagent systems applications distributed situation assessment distributed scheduling resource allocation multi expert design concurrent engineering cooperative information gathering :10.1.1.42.237:10.1.1.14.6344:10.1.1.48.8362
systems involved agents performing significant local computation involve agents fully accurately complete local processing interacting agents :10.1.1.45.4176
systems generating solution problem straightforward assembly process combining solutions agents local subproblems 
process multi step incremental process involving dialogue agents information multiple levels abstraction 
step dialogue may require agent reason new information relation existing knowledge 
ability adapt intra agent inter agent problem solving dynamics environment short long term ways differentiate types agent systems conventional distributed systems architectures adaptability especially domain problem solving level primary motivation 
fundamental issue addressed basic functions interaction patterns necessary agent architecture support construction systems allow operate efficiently robustly 
answer question necessity speculative substantial experience building multiagent systems anticipated scale complexity 
personal view experiences years thinking building wide range multiagent systems applications distributed situation assessment distributed scheduling resource allocation multi expert design concurrent engineering cooperative information gathering :10.1.1.42.237:10.1.1.14.6344:10.1.1.48.8362
systems involved agents performing significant local computation involve agents fully accurately complete local processing interacting agents :10.1.1.45.4176
systems generating solution problem straightforward assembly process combining solutions agents local subproblems 
process multi step incremental process involving dialogue agents information multiple levels abstraction 
step dialogue may require agent reason new information relation existing knowledge 
characteristic systems attacked combinatorially explosive problems impractical explore possible solutions 
early example problem occurred distributed hearsay ii system multi agent systems constructed 
system agents interpreting overlapping fragments speech data lack effective coordination led agent problem solving distracted unreliable information partial tentative solutions local subproblems received agent 
distraction resulted agents performing unnecessary delaying generation correct solution computational resources pursuing implications incorrect information received node 
manifestations ineffective coordination system agents results produced agent transmission information agents longer timely contribute current line reasoning receiving agent 
problems ineffective coordination traced agents having limited view state network problem solving solely results received agents way compare state progress problem solving agents knowledge subproblems agents worked working intended near progress lack progress agents solving subproblems :10.1.1.45.4176
agents having perspective activities agents solving interrelated subproblems necessity level incoherence agents 
discussed section situations certain level incoherence acceptable costs acquiring processing information eliminate incoherence 
approach suggested multi agent systems constructed addressing question appropriate multi agent architecture starts basic premise agent problem solving component sophisticated possessing certain level self awareness current intended goals including current state achievement performance characteristics approaches possible solve able flexibly adapt problem solving available resources current criteria goal satisfaction 
ability agent problem solving component provide abstracted information state permits implementation complex coordination strategies turn ability agent adapt problem solving permits coordination strategy align agent activities satisfy global objectives system 
basis view agents operate complex societies open environments cope tremendous amount uncertainty due limited computational communication resources best perform local activities activities affect agent society broadly complex interactions activities agents chains interdependencies agents subproblems 
factors lead self interested agents behaving cooperative ways acquire useful information agents help agents ways eventually improve local performance turn cooperative agents behave selfinterested ways costs understanding global ramifications actions way optimizing performance society real difference self interested cooperative agents evaluation function rate importance performing specific activities 
discussed fully section coordination framework lowest level decisions quantitative perspective range higher level coordination mechanisms constructed framework support self interested cooperative agents 
valuable insight gained stage field development consider comprehensive multi agent system architecture look 
frameworks developed initial starts simplified assumptions complexity cooperative behavior agent capabilities directly deal issues large scale agent societies adaptation resource availability hard soft real time deadlines trade offs resource usage quality solution complex interdependencies agents activities domain independence :10.1.1.35.9555:10.1.1.14.3667
remainder lay view important concepts need included multi agent architecture followed proposal architecture 

important architectural concepts central feature large agent societies populated heterogeneous agents created designers 
question naturally arises effort designers expend adapt agents effectively interact agents aspects basic agent architecture generic domain independent 
approach provide set operations associated protocols locating communicating agents kqml 
approach knowledge poor decision protocol information transmit order execute tasks left designer 
high level coordination framework built top protocols proposed 
framework wraps agent problem solving component automatically coordination decisions agent described abstracted form needs capabilities interacting agents domainindependent way 
type information needs provided includes agent goals criteria successful performance performance characteristics resource requirements alternative methods possesses accomplishing goals qualitative quantitative interdependencies methods agents :10.1.1.54.5977
high level approach minimizes amount domain dependent code knowledge designer specify achieve effective coordination agents variety situations permits designer build agents significant expertise development coordination strategies 
approach drawback forcing designer add code agent problem solving component referred task assessor module necessary information appropriate form coordination framework 
better task assessor predicting goals agent performance characteristics methods available solve goal effective framework making coordination decisions introduces basic overhead agents pay domain independent approach 
am framework closed 
architecture coordination decisions separate layers operate concurrently agent organization layer small agent group coordination layer local agent scheduling layer 
layer decisions respectively involve different durations specificity 
organization layer decisions long term duration specific local agent scheduling layer decisions short term duration detailed 
control layers interact higher layers providing constraints policies lower levels modulate control decisions 
constraints indicate example level resources control decisions effort local scheduler spend finding best sequence tasks execute determine scope decisions tasks agents need coordinated type coordination necessary :10.1.1.32.8351
interaction layers just top bottom 
constraints flow layers information flows direction allows constraints modified case met lead inappropriate behavior 
type interaction provides capability control layers negotiate reconcile different perspectives actions take current situation 
architecture specific decision agents set agents implement control layer 
interaction layers just top bottom 
constraints flow layers information flows direction allows constraints modified case met lead inappropriate behavior 
type interaction provides capability control layers negotiate reconcile different perspectives actions take current situation 
architecture specific decision agents set agents implement control layer 
agent organization control warranted separable agent organization domain problem solving :10.1.1.45.4176
perspective coordination closely associated viewpoint short term coordination specified terms commitments varying duration specificity 
ability appropriately bound intentions agents create sufficiently guarantee commitments agents accomplish certain tasks heart efficient organized behavior :10.1.1.32.8351
way seeing long term commitments define agent roles responsibilities 
large agent societies organizing agents terms roles responsibilities significantly decrease computational burden coordinating activities limiting information needs acquired scope decision process 
type interaction provides capability control layers negotiate reconcile different perspectives actions take current situation 
architecture specific decision agents set agents implement control layer 
agent organization control warranted separable agent organization domain problem solving :10.1.1.45.4176
perspective coordination closely associated viewpoint short term coordination specified terms commitments varying duration specificity 
ability appropriately bound intentions agents create sufficiently guarantee commitments agents accomplish certain tasks heart efficient organized behavior :10.1.1.32.8351
way seeing long term commitments define agent roles responsibilities 
large agent societies organizing agents terms roles responsibilities significantly decrease computational burden coordinating activities limiting information needs acquired scope decision process 
assignments strict agent sufficient latitude respond unexpected circumstances necessarily fixed duration problem solving 
example efficacy assigning long term roles agent incurring computational overhead dynamically coordinating group agents determine agent appropriate provide desired result time organizational design prescribed ahead time specific agent take role providing agent desired result certain time 
feel strongly right way view decision best coordinate framed complex discrete optimization problem coordination actions way contribute high level system tasks meeting performance objectives relative importance tasks 
efficient effective coordination account benefits costs coordination current situation quantitative way 
current situation includes goals importance value agent currently pursuing pursue near term performance characteristics methods available agent achieving goals requirements goals methods impose agents requirements goals methods agents impose agent state network resources domain constraints agent activities 
purely symbolic reasoning costs benefits extremely complex particularly large systems open environments agents simultaneously pursue multiple goals 
ability reason quantitatively benefits costs coordination essential effective system operation large set situations need reasoned :10.1.1.32.8351
way saying mechanism lowest control layer arbitrate various objectives agent local processing goals pursuing various requests agents assistance 
view leads feel principled general approach coordination heuristic methods needed get approximate solutions np hard optimization problem 
discussed ability consider worth alternative courses action quantitative perspective allow evaluation function permits development framework coordination strategies support self interested cooperative agents 
example agent needs agent perform particular task particular time agent selfinterested task little value agent value associated satisfaction commitment agent slight non existent self interested agent accordingly perform task requested value provided 
footnotes part framework see agents eventually high level content languages rich succinct communication agents 
foresee generation distributed operating systems network communication support reflective able adapt changing resource availability 
sophisticated operating environment opens possibility dialogues multi agent system concerned performance adaptability application level perspective operating system concerned performance adaptability resource level goal interaction achieve appropriate configuration resources computational processing 
implications capabilities agent architecture considered discussion 
wide range subproblem interdependencies categorized facilitates relationship solution subproblem available point subproblem executed speed execution subproblem increase likelihood higher quality result produced :10.1.1.54.5977
example favor relationship solution subproblems requires resource jointly solving combined subproblems usage resource agents reduced significantly 
characterized soft relationships affect performance issues 
relationships enables denote result problemsolving activity required perform considered hard relationships indicate relationships enforced problem solving correct 
numerous examples social phenomena tragedy commons agents basing decisions totally self interested perspective eventually leads disastrous consequences agent society 
