improved algorithms optimal winner determination combinatorial auctions generalizations tuomas sandholm suri department computer science washington university st louis mo cs wustl edu combinatorial auctions reach cient resource task allocations multiagent systems items complementary 
determining winners np complete shown optimal search algorithms average 
presents sophisticated search algorithm optimal anytime winner determination including structural improvements reduce search tree size faster data structures optimizations search nodes driving identifying solving tractable special cases 
uncover general tractable special case design algorithms solving solving known tractable special cases substantially faster 
generalize combinatorial auctions multiple units item reserve prices singletons combinations combinatorial exchanges allowing substitutability 
algorithms determining winners generalizations 
assume bids concern set items sj sk multiple bids concern set items highest bid discarded preprocessing step breaking ties arbitrarily 
winner determination problem label bids winning xj losing xj maximize auctioneer revenue constraint item allocated bidder max nx sj xj xj problem intractable equivalent weighted set packing known np complete problem 
solved dynamic programming takes time independent rothkopf harstad 
approach solve problem approximately smith fujishima leyton brown shoham lehmann shoham 
shown maximum clique polynomial time algorithm guarantee solution close optimum sandholm :10.1.1.19.4350:10.1.1.172.7540
certain special cases approximated slightly better reviewed sandholm :10.1.1.19.4350:10.1.1.172.7540
second approach restrict allowable bids rothkopf harstad nisan tennenholtz 
certain restrictions severe sense small fraction combinations bid winners determined polynomial time 
restrictions bids give rise economic ine ciencies prevail auctions bidders may able bid combinations prefer 
winner determination problem label bids winning xj losing xj maximize auctioneer revenue constraint item allocated bidder max nx sj xj xj problem intractable equivalent weighted set packing known np complete problem 
solved dynamic programming takes time independent rothkopf harstad 
approach solve problem approximately smith fujishima leyton brown shoham lehmann shoham 
shown maximum clique polynomial time algorithm guarantee solution close optimum sandholm :10.1.1.19.4350:10.1.1.172.7540
certain special cases approximated slightly better reviewed sandholm :10.1.1.19.4350:10.1.1.172.7540
second approach restrict allowable bids rothkopf harstad nisan tennenholtz 
certain restrictions severe sense small fraction combinations bid winners determined polynomial time 
restrictions bids give rise economic ine ciencies prevail auctions bidders may able bid combinations prefer 
third approach solve unrestricted problem search 
second approach restrict allowable bids rothkopf harstad nisan tennenholtz 
certain restrictions severe sense small fraction combinations bid winners determined polynomial time 
restrictions bids give rise economic ine ciencies prevail auctions bidders may able bid combinations prefer 
third approach solve unrestricted problem search 
shown average scaling optimal winner determination hundreds items thousands bids depending problem instance distribution sandholm improvements algorithm developed fujishima leyton brown shoham :10.1.1.19.4350:10.1.1.172.7540
vein third approach presents sophisticated algorithm optimal winner determination 
enhancements include structural improvements reduce search tree size faster data structures optimizations search nodes driving identifying solving tractable special cases 
uncover general tractable case design algorithms solving solving known tractable cases substantially faster 
generalize cas auctions multiple units item auctions reserve prices singletons combinations combinatorial exchanges allowing substitutability 
bob sk pk 

bj bj bk sj sk ej ej 
bob 
ek return previous search algorithms winner determination de facto branch items sandholm fujishima leyton brown shoham :10.1.1.19.4350:10.1.1.172.7540
children search node bids include smallest item share items bid path far 
preprocessing step dummy bid price zero submitted individual item received bids represent fact auctioneer keep items proven leaves tree correspond feasible solutions winner determination problem sandholm :10.1.1.19.4350:10.1.1.172.7540
clearly branching factor comes dummy bids depth complexity 
hand bob branches bids winning losing xj items 
bj bj bk sj sk ej ej 
bob 
ek return previous search algorithms winner determination de facto branch items sandholm fujishima leyton brown shoham :10.1.1.19.4350:10.1.1.172.7540
children search node bids include smallest item share items bid path far 
preprocessing step dummy bid price zero submitted individual item received bids represent fact auctioneer keep items proven leaves tree correspond feasible solutions winner determination problem sandholm :10.1.1.19.4350:10.1.1.172.7540
clearly branching factor comes dummy bids depth complexity 
hand bob branches bids winning losing xj items 
branching factor depth naive analysis shows bob exponential bids 
nodes interior leaf correspond feasible solutions winner determination problem 
intuitively gives preference bids items gives preference bids items 
shown greedy algorithm simply inserts bids highest rst order bid inserted bids pj jsj share items discarded gives best worst case bound lehmann shoham necessarily possible bid ordering formulas 
greedy algorithm want construct high valued allocations 
greedy algorithm want construct allocations early increase chance high valued ones 
bids items lead deeper search bids items bids items exclude bids due overlap items sandholm preference bids items increases number allocations seen early :10.1.1.19.4350:10.1.1.172.7540
set slightly addition nding optimal solution faster pruning bid ordering improves algorithm anytime performance increases faster 
lower bounding low prune lower bound obtained greedy algorithm described node 
updated 
reduces search enhanced pruning subtree rooted current search node 
call set edges clearly jv jej jej jv depth rst search algorithm checks graph decomposed 
tree forest corresponds independent subproblem subset bids associated subset items 
winners determined calling bob subproblem separately bids subproblem marked ej 
upper lower bounding subproblems straightforward approach call bob subproblem 
decomposition check preprocessor sandholm node :10.1.1.19.4350:10.1.1.172.7540
somewhat achieve pruning compromising optimality exploiting information independent subproblems 
say subproblems current search node value ofthe subproblems solved 
fq value optimal solution subproblem hq value subproblem lq lower bound obtained greedy algorithm described lq works subproblem consider solve subproblem subproblems solved subproblems 
lz lower bound obtained greedy algorithm described value items subproblem contribute 
bid ordering variable ordering give rst preference articulation bids second preference bids articulate winning branch third preference bids articulate branch price bid ordering 
search algorithm shallow purpose bid ordering identify combinations bids disconnect bids identi ed preprocessor bids small cutset rst search identifying smallest cutset intractable 
tractable subproblems nodes techniques search node drive identify solve tractable special cases 
avoiding branching short bids bids include small number items lead signi cantly deeper search bids items exclude bids due overlap items 
previous search algorithm scaled thousands bids bids items hundreds bids bids items sandholm :10.1.1.19.4350:10.1.1.172.7540
call bids items short proofs omitted version due limited space 
bids long 
winners optimally determined short worst case time weighted maximal matching algorithm edmonds problem short bids rothkopf harstad 
solve problems long short bids ciently integrate algorithm search 
node edges ej deleted label rst removed node array 
ej inserted front neighbor list inserted front neighbor list cross pointer set cost 
bob branches xj neighbors deleted 
store search list edges ect removed edges include edges include neighbors backtracking node reinsert neighbors edges bob branches xj 
backtracking branch edges maintaining heuristic function mai heuristic function earlier winner determination algorithm sandholm :10.1.1.19.4350:10.1.1.172.7540
implementation mn time search compute 
faster approximation heuristic fujishima leyton brown shoham 
propose data structures allow compute fast exactly 
store items dynamic list supports insert delete log time 
reinsert heaps items concern cost search node updating heuristic function log summation bids got deleted 
optimization algorithm uses heap weiss 
heap worst case performance ordinary heap improves amortized complexity insert delete extract max nd max remain log 
insert delete operations bob quite frequent improves performance 
preprocessing preprocessing techniques proposed winner determination problem sandholm :10.1.1.19.4350:10.1.1.172.7540
directly conjunction algorithm 
generalizations cas section discusses generalizations cas 
auction server prototype ecommerce cs wustl edu emediator supports generalizations separately combined sandholm continuous operation december 
multiple units item auctions multiple indistinguishable units item sale 
compress bids speed winner determination treating unit separate item bidders care units item get 
de ne bid setting bj pj price 
winner determination problem nx nx max requested number units item xj ui xj ui number units item sale 
basic ca generalizations free disposal possible equality constraint place inequality 
previous winner determination algorithms multi unit setting branch items sandholm fujishima leyton brown shoham :10.1.1.19.4350:10.1.1.172.7540
unit treated separate item earlier algorithms demands real valued integer 
bob 
number units allocated search path kept item decomposition techniques dec art apply bid graph vertices share edge 
bid assigned winning removed neighbor bids removed basic ca 
lower bounding technique low applies upper lower bounding subproblems 
bid ordering bids pj descending order 
combinatorial exchanges combinatorial exchange buyers sellers submit combinatorial bids sandholm 
bids multi unit case values negative prices pj representing selling buying 
winner determination problem maximize surplus max nx nx xj xj earlier algorithms branch items sandholm fujishima leyton brown shoham bob setting :10.1.1.19.4350:10.1.1.172.7540
basic ca generalizations optimal solution occurs leaf 
contrast combinatorial exchange optimal solution occur interior node search tree 
search net number units demanded units supplied negative numbers path kept item decomposition techniques dec art apply bid graph vertices share edge item 
bid assigned winning removed neighbor bids removed basic ca 
