transformation strategies block oriented graph oriented process modelling languages jan mendling kristian lassen uwe zdun institute information systems new media vienna university economics business administration wien austria jan mendling uwe zdun wu wien ac department computer science university aarhus dk aarhus denmark lassen daimi au dk research discusses transformation different process modelling languages 
mainly focussed specific process modelling languages general reusability applied transformation concepts limited 
aim concrete transformation strategies distinguishing major paradigms representing control flow process modelling languages block oriented languages bpel bpml graph oriented languages epcs yawl 
contribution generic strategies transforming block oriented process languages graph oriented languages vice versa 
business process modelling bpm languages play important role specification workflows documentation business requirements 
years standardization efforts hol primary bpm languages heterogeneous syntax semantics 
problem mainly relates issues firstly various bpm language concepts need specified terms control flow data flow identified bpm languages introduce different sub set see mnn comparison bpm concepts 
secondly paradigm representing control flow bpm languages source heterogeneity 
issue discussed full depth far special importance transformations bpm languages need implemented 
essence control flow paradigms distinguished graph block oriented graph oriented bpm languages specify control flow arcs represent temporal logical dependencies nodes 
graph oriented language may clude different types nodes 
node types may different language language 
workflow nets distinguish places transitions similar petri nets 
epcs mn include function event connector node types 
yawl uses graph nodes represent tasks conditions 
similar xpdl wor tasks may specify join split rules 
block oriented bpm languages define control flow nesting control primitives represent concurrency alternatives loops 
xlang tha example pure block oriented language 
bpml ark bpel acd block oriented languages include graph oriented concepts links 
bpel control primitives called structured activities 
due widespread adoption bpel standard stick bpel example block oriented language 
please note concepts applicable block oriented languages definitions control flow bpel specific effort needed customize concepts block oriented languages 
transformations block oriented languages graph oriented languages useful needed number scenarios 
commercial tools support import export formats languages meaning transformations directions implemented import export filters 
instance graph oriented tools enhanced export bpel order support standard interoperability commercial reasons 
transforming bpel petri nets done purpose verification hss 
bpel formal semantics verified 
defining transformation semantics bpel terms mapping petri nets possible investigate behavioral properties dead locks live locks 
bpel process definitions transformed epcs goal communicate process behavior business analysts visual representation mz 
direction model driven development approaches start visual graph oriented bpm language uml activity diagrams generate executable bpel models gar 
example scenarios bpm transformations needed 
contribution particular graph oriented block oriented control flow representation enable generic discussion transformation strategies 
transformation strategies independent certain application scenario setting transformations graph oriented block oriented languages needed 
rest structured follows 
section defines abstractions 
particular define abstraction graph oriented bpm languages called process graph shares concepts epcs yawl 
block oriented languages abstracted language called bpel control flow 
language mentioned abstraction bpel concepts mapped concepts block oriented languages bpml 
section discuss strategies transforming bpel control flow process graph section opposite direction 
strategies specified pseudo code algorithms prerequisites advantages shortcomings discussed 
section discusses related section concludes discusses 
process graphs bpel control flow introductory example discuss transformations graph oriented block oriented bpm languages general way specific languages 
illustrate features process graphs bpel control flow 
start start sequence pick empty empty switch flow flow sequence empty flow terminate terminate process graph bpel control flow left part shows process graph 
interested syntax transformations give semantics process graphs informal manner 
process graph start event multiple events 
multiple start events represent mutually exclusive alternative start conditions 
events explicit termination semantics 
means event reached complete process terminated 
connectors represent split join rules type xor specified yawl epcs mn 
elements connected arcs may optional guard 
guards logical expressions evaluate true false 
guard arc connector node type xor yields false target branch arc executed 
true execution continues target function 
xor split logical expressions guards subsequent arcs mutually exclusive 
right part gives bpel control flow similar control flow semantics process graph 
example called structured activities possible 
structured activities define alternative start conditions pick parallel execution flow sequential execution sequence conditional repetition alternative branches switch 
structured activities nested definition complex control flow behavior 
basic activities represent atomic elements 
special basic activities represent done empty bpel control flow terminated terminate 
flow activity complex synchronization condi tions specified called links 
link transition condition activity target links include join condition type xor 
bpel control flow adopt semantics defined bpel specification acd 
definition process graphs provide precise description transformation strategies formalize syntax process graphs aspects bpel relevant transformation control flow 
define process graphs close epcs yawl epc notation 
respective syntax elements provide core graph business process modelling languages 
furthermore xor connectors easily mapped petri nets xpdl uml activity diagrams 
notation predecessor successor nodes set nodes binary relation defining arcs 
node define set predecessor nodes set successor nodes 
definition process graph pg process graph consists pairwise disjoint sets mapping xor binary relation mapping guard expr denotes set start events 

denotes set events 

denotes set functions 

denotes set connectors 
mapping specifies type connector xor 
defines flow simple directed graph 
element called arc simple graph implies reflexive arcs multiple arcs 
mapping guard specifies guard arc expr non terminal symbol represent logical expression defines guard condition 
expression yields true control propagated node subsequent guard 
guards arcs xor connector nodes mutually exclusive 
guards defined arcs expressed logical expression 
guard yields true guard split yield false function sequence executed 
definition transitive closure defined definition 
transitive closure path process graph arcs definition bpel control flow definition bpel control flow bpel control flow bcf tuple bcf seq low switch scope basic empty link de jc tc 
bcf consists pairwise disjoint sets seq low switch scope basic empty 
set str seq low switch scope called structured activities set bas basic empty called basic activities set act str bas activities 
furthermore bcf consists binary relation link act act mapping de mapping jc expr mapping tc link expr seq defines set bpel sequence activities 
low defines set bpel flow activities 
switch defines set bpel switch activities 
defines set bpel activities 
defines set bpel pick activities 
scope defines set bpel scopes 
basic defines set bpel basic activities terminate empty activities 
interested control flow distinction various basic activities neglected 
empty defines set bpel empty activities 
defines set bpel terminate activities 
link defines directed graph bpel links 
need coherent acyclic connected borders activity 
mapping de denotes decomposition relation structured activities set nested activities modelled power set 
de tree recursive decomposition 
mapping jc defines join condition activities 
mapping tc defines transition condition links 
definition join condition join condition jc activities defined jc expr operations 
activity 
yn including predecessor structured activity shorthand xor boolean expressions jc tc 
tc yn jc tc 
tc yn jc tc 
tc yn xor definition subtree fragment struct act act relation struct de 
struct transitive closure struct 
implies nested subtree fragment 
notice definition describe event fault compensation handlers 
strategies take consideration 
allow links cross scope boundaries 
purpose discussing control flow transformations bpel elements included definition neglected 
details bpel semantics refer acd 
note bpml similar syntax elements comparable semantics ark 
accordingly strategies discussed section applied define transformations bpml process graphs 
structural properties process graphs bpel control flow various transformation choices bound certain structural properties input model 
process graph structured unstructured acyclic cyclic 
define process graph structured help reduction rules 
provide formalization structuredness means define transformation strategy process graphs bpel control flow 
details explained section 
definition structured process graph process graph pg structured reduced single node reduction rules formally defined unstructured 
reduction rules describe certain component part process graph replace single function 
reduction rules sequences connector pairs xor loops start blocks 
details refer 
definition cyclic versus acyclic process graph set functions connectors process graph cyclic 
acyclic 
process graph simple graph holds reflexive arcs 
path nodes nm 
definition structured bpel control flow bpel control flow bcf structured set link 
bcf unstructured 
furthermore define point wise application mapping functions need algorithms transformation strategies 
definition point wise application functions function defined extend behavior sets xf bpel control flow process graph transformation strategies strategy flattening transformation algorithms need define mapping function transforms bpel basic activity process graph function 
definition mapping function set functions process graph basic set basic activities bcf mapping basic defines transformation bpel basic activity process graph function 
algorithm pseudo code flattening strategy procedure flattening bcf struct seq low switch scope root struct struct de root link guard tc return general idea flattening strategy map bcf structured activities respective process graph fragments 
nested bcf control flow flat process graph hierarchy 
strategy prerequisites structured unstructured bpel control flow transformed strategy 
advantage flattening behavior bpel process mapped process graph 
drawback descriptive semantics structured activities get lost 
transformation strategy useful scenario bpel process communicated business analysts 
algorithm flattening strategy takes bcf input returns recursively traverses nested structure bpel control flow top manner 
achieved identifying root activity invoking activity predecessor successor procedure see algorithm line recursively nested elements 
respective code algorithm 
parameter activity represents activity processed followed predecessor successor node output process graph nested structure hooked predecessor successor 
root activity start events parameter forward partial result transformation procedure 
lines links mapped arcs respective join split connectors activity added 
bcf transform procedure see algorithm starts checking current activity serves target source links 
respective connectors added current activity block 
sub procedures handle structured activities seq low switch 
assumed model alternative start events 
transformation scopes simply calls procedure nested activity 
mapped event 
basic activities mapped functions hooked process graph 
empty activities map arc predecessor bpel place process waits concurrent events 
distinguish message basic activities decisions captured switch bcf please note scopes play important role bpel local context variables handlers activities 
algorithm fact terminates current scope process 
furthermore fact bpel terminate leads improper termination 
successor nodes 
procedures bcf bcf bcf bcf bcf transform procedure generate process graph elements correspond respective bcf structured activities 
bcf procedure connects nested activities sequence process graph arcs 
explicitly defined transformation requires order defined nested activities 
sub activities bcf transform procedure invoked 
similar bcf 
split join connector generated 
depending label fourth parameter procedure transform switch low 
bcf replaces start event process graph start event nested sub activity 
bcf procedure generates loop xor join xor split 
strategy hierarchy preservation graph bpm languages allow define hierarchies processes 
epcs example include hierarchical functions process interfaces model sub processes 
yawl tasks decomposed sub workflows 
process graphs extended process graph schemas similar way allow decomposition 
definition process graph schema pgs process graph schema gs consists set process graphs mapping pg pg mapping called subprocess relation 
points function refining subprocess function decomposed empty set 
relation tree recursive definition sub processes 
general idea hierarchy preservation strategy map bcf structured activity process graph process graph schema 
nesting structured activities preserved functions subprocess relations 
algorithm defined top way similar flattening strategy 
changes defined transformation structured activities mapped new process graph 
prerequisite strategy bcf structured links border structured activities expressed subprocess relation 
advantage hierarchy preservation strategy descriptive semantics structured activities preserved 
furthermore transformation correctly map bpel semantics activities nested scopes 
drawback model hierarchy navigated order understand process 
strategy useful scenario process graphs mapped back bpel structured activities 
strategy hierarchy maximization disadvantage strategy bound structured bpel 
hierarchy maximization strategy aims preserving hierarchy possible applicable bpel control flow anyway structured unstructured 
general idea strategy map bcf structured activities subprocess hierarchies links nested cross border accordingly strategy subject structural prerequisites 
advantage structure possible preserved 
logic strategy strategy need implemented 
process graph bpel control flow transformation strategies strategy element preservation section describe strategy going process graphs bcf definitions annotated process graph annotated process graph node map relevant strategies 
go strategies definitions introduce notion annotated process graph ease notation strategy 
definition annotated process graph ap define annotated graph defined definition 
define flow relation nodes pg 
node pg holds annotation bcf 
think set annotated graph definition set translated parts process graph 
definition shows translate nodes annotated process graph 
general idea strategy map process graph elements low map arcs links 
particular start events mapped basic function mapped elements basic connectors mapped elements empty events translated elements 
defines identity bpel constructs 
definition annotated process graph node map define mapping basic empty defined empty basic injective translation nodes graph activities bpel 
prerequisite strategy process graph needs acyclic 

possible create activity logically precedes acd 
precedes precede advantage element preservation strategy simple implement resulting bpel similar original process graph correspondence consequence alternative start branches activated process started 
specific transition conditions defined branch activated 
algorithm issue 
nodes 
drawback resulting bpel control flow includes elements needed connectors explicitly translated empty activities bpel join condition nodes 
means bpel code lot nodes simply act synchronization points 
furthermore resulting bpel difficult understand structured activities switch chosen represent part translated graph 
bpel code scenario readability important applied small process graphs elements process graph mapped bcf algorithm pseudo code element preservation strategy procedure element preservation empty basic low flow de flow empty basic link link link jc xor 
tc guard return bcf xor algorithm element preservation strategy takes process graph input generates respective bcf output 
algorithm applies map defined definition lines 
flow element added nests activities lines 
arc process graph nodes link added bcf corresponding bcf nodes lines 
join condition activities determined corresponding node process graph 
connector get similar join condition xor xor 
nodes get join condition line 
nodes connected guarded arc guard bpel line 
strategy element minimization strategy simplifies generated bcf strategy 
general idea remove empty activities generated connectors represent splitting behavior transition conditions links joining behavior join conditions subsequent activities 
prerequisite process graph needs acyclic 
order dead path elimination bpel 
advantage resulting bcf specification greater extent strategy spirit bpel flow removes empty activities generated connectors 
drawback intuitive identify correspondences process graph generated bcf specification 
strategy scenarios resulting bpel code needs nodes possible 
case performance bpel process matters 
contrast strategy amount nodes decreased empty activities translated connector nodes skipped algorithm pseudo code element minimization strategy procedure element minimization bcf element preservation empty link link jc jc jc jc jc 
link link empty empty return bcf algorithm translates bcf algorithm line 
loop iterating empty activities generated connectors line translated connector nodes input links 
translated connector nodes removed 
empty activity nodes having link connected nodes having link 
join conditions activities subsequent need updated 
join condition activity old join condition removing conjunction join condition lines 
lines defines actual removal involves removing link relations occurs removing set empty activities 
strategy structure identification general idea transformation strategy identify structured activities process graph apply mappings similar reduction rules definition 
prerequisite process graph needs structured definition 
advantage strategy control flow translated structured activities 
understanding resulting code best strategy reveals structured components process graph 
drawback relation original process graph intuitive identify 
transformation strategy appropriate scenario bcf edited bpel modeling tool generally understanding control flow process graph important 
algorithm uses reduction rules definition substituting pattern function replaced annotated node containing bpel translation process graph fragment 
means reducing process graph generate annotated process graph includes single annotated node 
single function mapped basic resulting bcf annotated nodes mapped set annotation member switch switch annotation 
rules identifies structure equivalent representation bpel follows sequence elements translated bcf sequence activities order nodes process graph sequence 
block translated flow bcf nodes block translated nested activities flow 
block translated flow bcf nodes block translated nested activities flow additional empty activity 
points alternative branch transition conditions activate subset branches 
notice translation bcf unstructured 
xor block translated switch bcf branch xor block mapped nested activity switch including respective guard 
mixed loop direct representation bcf rule definition state graph structure 

condition leave loop cond boolean expression 
exactly arcs xor connector node true time boolean expression reduced left right part conjunction 
guards pg mapped transition conditions bf mixed loop mapped bpel pseudo code assign true switch case cond assign false case tc 
case tc loop translated activity switch inside 
mapped mixed loop difference lines omitted condition cond looping replaces line 
repeat loop direct representation bcf mapped similar way mixed loop lines pseudo code omitted 
empty loop translated empty activity 
start block mapped pick containing empty activities branch 
block translated respective xor block branch followed terminate activity 
algorithm describes structure identification transformation strategy 
line initializes annotated process graph 
loop iterated annotated process graph reduced activity 
reduction rules definition algorithm pseudo code structure identification strategy procedure structure identification ap ap match ap rules definition translate ap described translations reduce apg substituting apg rules definition return bcf substitute components process graph corresponding bcf structured activities way function fc substituted components definition 
strategy structure maximization general idea strategy apply reduction rules structure identification strategy possible identify maximum structure 
remaining annotated process graph translated element preservation element minimization strategy 
advantage strategy applied arbitrary unstructured process graphs long loops reduced reduction rules definition 
strategy able translate arbitrary cycles cycles multiple entrance multiple exit points 
drawback strategy structure identification strategy element preservation strategy needs implemented 
strategy scenarios models edited bpel modeling tool uses structured activities primal modeling paradigm 
related lot exists transformation bpel process languages 
highlight part refer complete discussion related 
branch related dedicated model driven development executable bpel process definitions 
gar bpm specific profile uml generate bpel code 
aim prove feasibility approach discussion different transformation alternatives 
clear strategy author choose 
code fragments suggest element preservation strategy taken sequences mapped bpel sequence 
element preservation strategy mapping epcs bpel zm 
bpmn specification whi comes proposal mapping bpel 
bpmn graph oriented bpm language similar process graphs strategies section applied 
subsection bpmn spec presents mapping close structure identification strategy proposed 
authors introduce called conceptual tokens identify structure 
mapping prose precise algorithm definition required structural properties missing 
structure identification strategy reported workflow nets kvm xml nets mapped bpel 
second branch research related conceptual mappings order better understand bpel behavior relation bpm languages 
hss transformation bpel petri nets order give bpel formal semantics 
authors flattening strategy generate petri net covers bpel behavior including exceptional behavior 
generated petri net formal static analysis bpel model 
addressed problem transformations graph oriented block oriented bpm languages 
order discuss transformations general way defined process graphs abstraction graph oriented bpm languages bpel control flow abstraction bpel shares concepts languages bpml 
major contribution identification different transformation strategies bpm modelling paradigms specification pseudo code algorithms 
particular identify flattening hierarchy preservation hierarchy maximization strategy transformations bpel control flow process graphs 
direction identify element preservation element minimization structure identification structure maximization strategy 
strategies provide useful generalization current bpel papers identifying design alternatives discussing design decisions 
checked applicability strategies case studies reported 
research aim conduct case studies order identify aspects captured process graphs bpel control flow addressed systematic way 
issue upcoming new version bpel expected issued standard 
interesting discuss far new version simplifies complicates mapping graph oriented bpm languages 
acd andrews curbera goland klein leymann liu roller smith thatte weerawarana 
business process execution language web services version 
specification bea systems ibm microsoft sap ag systems 
ark arkin 
business process modeling language bpml 
spec bpmi org 
gar tracy gardner 
uml modelling automated business processes mapping bpel ws 
proceedings european workshop object orientation web services ecoop 
hol hss kvm mn david hollingsworth 
workflow handbook chapter workflow model years pages 
workflow management coalition 
sebastian karsten schmidt christian stahl 
transforming bpel petri nets 
proceedings bpm lncs pages 
keller ttgens scheer 
auf der epk 
heft institut wirtschaftsinformatik saarbr cken germany 
marco von 
petri net approach process model driven deduction bpel code 
robert meersman tari editors workshops volume lecture notes computer science pages 
springer 
mendling lassen zdun 
transformation strategies block oriented graph oriented process modelling languages 
technical report jm wu vienna october 
jan mendling markus ttgens 
epc markup language xml interchange format event driven process chains epc 
technical report jm wu wien austria 
mnn jan mendling markus ttgens neumann 
comparison xml interchange formats business process modelling 
oberweis editors proceedings pages 
mz mendling 
epk von bpel ws 
proc 
workshop software reengineering germany 
nick russell ter hofstede edmond wil van der aalst 
workflow data patterns identification representation tool support 
proc 
th international conference conceptual modeling er lncs 
tha thatte 
xlang 
specification microsoft 
van der aalst 
verification workflow nets 
pierre az ma balbo editors application theory petri nets lncs pages 
wil van der aalst jens rgensen kristian lassen 
go way requirements colored workflow nets bpel implementation new bank system 
meersman tari editors proceedings coopis doa odbase napa cyprus lncs pages 
wil van der aalst arthur ter hofstede 
yawl workflow language 
information systems 
wil van der aalst arthur ter hofstede kiepuszewski alistair barros 
workflow patterns 
distributed parallel databases july 
whi white 
business process modeling notation 
specification bpmi org 
wor zm workflow management coalition 
workflow process definition interface xml process definition language 
document number wfmc tc october version workflow management coalition 
mendling 
epc modelling bpel processes pragmatic transformation approach 
proceedings italy 
