indexing semistructured data jason mchugh jennifer widom serge abiteboul luo anand rajaraman computer science department stanford university stanford ca firstname lastname cs stanford edu www db stanford edu lore describes techniques building exploiting indexes semistructured data data may fixed schema may irregular incomplete 
general framework indexing values presence automatic type coercion 
lore dbms semistructured data introduce types indexes illustrate query processing 
techniques indexing structures fully implemented integrated lore prototype 
call data irregular exhibits type structural heterogeneity semistructured may conform rigid predefined schema 
data arises frequently web integrating information heterogeneous sources 
lore includes simple full text indexing system efficiently supports information retrieval style predicates lore query language 
describe lore query optimizer pieces available indexes create efficient query plans 
structures index creation algorithms index maintenance query plans described implemented fully functional lore 
related description lore architecture query execution engine mag 
lore cost query optimizer introduced mw focus optimizer finds efficient query plans :10.1.1.23.3841
lore dataguides gw dynamic structural summaries database serve tool user simple path index :10.1.1.15.9610
preliminary version lore query language lorel introduced qrs 
details current version lorel appear aqm 
needless say significant amount indexing object oriented databases ss rk km bg xh 
describe lore query optimizer pieces available indexes create efficient query plans 
structures index creation algorithms index maintenance query plans described implemented fully functional lore 
related description lore architecture query execution engine mag 
lore cost query optimizer introduced mw focus optimizer finds efficient query plans :10.1.1.23.3841
lore dataguides gw dynamic structural summaries database serve tool user simple path index :10.1.1.15.9610
preliminary version lore query language lorel introduced qrs 
details current version lorel appear aqm 
needless say significant amount indexing object oriented databases ss rk km bg xh 
depends database having fixed schema known strongly typed class hierarchy 
lindex lookup object returns parent object lookup object returns object 
seen section higher level query plan operator lindex supports finding ancestors objects reached component general path expression may include regular expression operations 
path index pindex finding objects reachable labeled path database important part query processing 
pindex lookup path returns set objects reachable currently lore index paths named objects contain regular expressions 
doing easily store set reachable objects path lore dataguide gw :10.1.1.15.9610
dataguide dynamic structural summary possible paths database point time 
addition providing kind dynamic schema user browse dataguide stores oids statistics objects reachable path name 
algorithm compute incrementally maintain dataguide pindex appears gw :10.1.1.15.9610
example suppose query simply select db movie title applied database 
pindex lookup path returns set objects reachable currently lore index paths named objects contain regular expressions 
doing easily store set reachable objects path lore dataguide gw :10.1.1.15.9610
dataguide dynamic structural summary possible paths database point time 
addition providing kind dynamic schema user browse dataguide stores oids statistics objects reachable path name 
algorithm compute incrementally maintain dataguide pindex appears gw :10.1.1.15.9610
example suppose query simply select db movie title applied database 
exploring graph pindex directly locate objects reachable db movie title 
pindex lookup operation returns 
pindex may appear attractive queries path expressions addition limitations queries obtain objects path addition path 
example suppose query simply select db movie title applied database 
exploring graph pindex directly locate objects reachable db movie title 
pindex lookup operation returns 
pindex may appear attractive queries path expressions addition limitations queries obtain objects path addition path 
see mw details :10.1.1.23.3841
oa oa oa oa oa oa db oa movie oa title oa actor oa name exists oa 
object assignment example query plans indexes query plan lore system tree query operators describes specific sequence steps answer query 
recursive iterator approach query processing described gra 
iterators execution begins top query plan node plan requesting tuple time children performing operation tuple 
ffl operator 
string matches phrase phrase iff matches phrase phrase 
functionality simple subset offered web search engines useful practice speed large class common queries string text values 
addition index operators operators perform standard tasks necessary query processing 
complete details see mw :10.1.1.23.3841
example scan operator returns oids subobjects object specified path expression 
accepts object component path returns set objects reachable starting matching lindex operator scan operator may match path containing regular expression operators simple run time stack 
join project select operators nearly identical corresponding relational operators 
relational nested loop join join operator coordinates left right children 
aggregation operation exists operator adds true existential quantification satisfied false 
filtering oas quantification true occurs select operator appear immediately aggregation node 
note exists aggregation operator short circuits finds satisfying oa aggregation operators may need look oas 
query plans lore query plans examples 
numerous possible plans query lore includes traditional cost query optimizer plan enumeration selection select oa true aggr exists oa oa scan oa movie oa scan oa title oa select oa harrison ford project oa scan root db oa join join scan oa actor oa join scan oa name oa join select oa true aggr exists oa oa top plan query example detailed mw :10.1.1.23.3841
focus describing query plans exploit indexes 
recall query introduced example select db movie title exists actor exists name harrison ford possible oa structure query shown 
notice oa result aggregation operation 
specific oa structure created query plan 
appear proceedings fourteenth international conference data engineering orlando florida february 
gra graefe 
query evaluation techniques large databases 
acm computing surveys 
gw goldman widom :10.1.1.15.9610
dataguides enabling query formulation optimization semistructured databases 
proceedings third international conference large data bases pages athens greece august 
kim 
kim dale 
information systems 
mag mchugh abiteboul goldman quass widom 
lore database management system semistructured data 
sigmod record september 
mw mchugh widom :10.1.1.23.3841
query optimization semistructured data 
technical report stanford university database group 
available www db stanford edu pub papers ps 
pgmw papakonstantinou garcia molina widom 
