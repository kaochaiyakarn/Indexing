architecture realistic conversational systems james allen george ferguson amanda stent department computer science university rochester rochester ny james ferguson stent cs rochester edu www cs rochester edu research trips describe architecture conversational systems enables human performance important dimensions 
interpretation incremental multi level involves general task domainspecific knowledge 
second generation incremental proceeds parallel interpretation accounts phenomena turn grounding interruptions 
behavior system task hand determined incremental results interpretation persistent goals obligations system exogenous events aware 
practical matter architecture supports separation responsibilities enhances portability new tasks domains 
keywords architectures intelligent cooperative distributed multimodal interfaces conversational systems 
goal design build systems approach human performance conversational interaction 
limit study practical dialogues dialogues conversants cooperatively pursuing specific goals tasks 
applications involving practical dialogues include planning designing kitchen information retrieval finding weather customer service booking airline flight advice giving helping assemble modular furniture crisis management center 
fact class practical dialogues includes people want interact computer 
trips rochester interactive planning system system interact robustly near real time spoken language modalities 
permission digital hard copies part personal classroom granted fee provided copies distributed pro commercial advantage copies bear notice full citation rst page 
copy republish post servers redistribute lists requires prior speci permission fee 
iui january fe new mexico 
copyright acm participated successfully dialogues untrained users different simple problem solving domains 
experience building system revealed problems motivated current 
incrementality dialogue systems built trips enforces strict turn user system processes utterance sequentially stages interpretation dialogue management generation 
unfortunately restrictions interaction unnatural ultimately interfere human ability focus problem making interaction 
want architecture allows natural form interaction requires incremental understanding generation flexible 
examples human conversation illustrate problems processing stages 
examples taken corpus collected emergency management task set monroe county ny 
plus signs denote simultaneous speech denotes silence 
human human conversation participants frequently ground confirm understanding contributions utterances okay mm hm 
clearly incremental understanding generation required capture behavior 
example acknowledges item answers locations road outages 
excerpt dialogue give uh outage okay bridge okay um thurston road mm hm brooks okay mm hm inner loop okay second human human dialogues responder frequently acknowledges initiator utterance immediately completed performed tasks need fully respond 
excerpt asks problems road outages 
responds immediate acknowledgment 
evidence problem solving activity revealed user lips silence starts respond request 
excerpt dialogue um just road outages okay um brooks road electric line brooks mm hm okay sequential architecture requiring interpretation problem solving complete generation begins produce behavior principled way 
third example involves interruptions initiator starts speak responder formulated response possibly started produce 
example starts respond initial statement continues speaking 
excerpt dialogue going pull tree mm hm mm ll done um going done minutes believe effective conversational systems going able interact ways perfectly natural fact usual mode operation humans 
may machines duplicate human behavior exactly realize conversational goals communication modalities 
saying uh huh instance system ground referring expression highlighting display 
note interruption example requires barge capability 
needs interpret second utterance continuation simply abandon goal responding 
gets turn may decide respond way modify response account new information 
initiative reason trips currently support completely natural dialogue dialogue systems quite limited form mixed initiative interaction supports 
supports discourse level initiative cf 
clarifications corrections allow shifting task level initiative interaction 
reason system behavior driven dialogue manager focuses interpreting user input 
means system independent goals 
behavior conversational agent ideally determined factors just interpretation user utterance system persistent goals obligations exogenous events agent aware 
instance monroe domain person chooses ignore person utterance leads conversation discuss issue 
explicitly acknowledge request promise address excerpt dialogue go thing minute clarify 
cases simply address issue apparently think important lead example address suggestion helicopters explicit way 
excerpt dialogue uh guess decide break trips helicopter guess send ambulance straight marketplace right right portability practical note trips designed separate discourse interpretation task domain reasoning practice domain task specific knowledge ended directly dialogue manager 
difficult port system different domains hid difference general domainindependent discourse behavior task specific behavior particular domain 
address problems developed new architecture core conversational system involves asynchronous interpretation generation system planning acting processes 
design simplifies incremental development new conversational behaviors 
addition architecture clean separation discourse dialogue modeling task domain levels reasoning enhances ability handle complex domains improves portability domains allows richer forms task level initiative 
remainder describes new architecture detail 
section presents overview design detailed descriptions major components 
brief detailed example illustrates architecture action 
conclude discussion related conversational systems current status implementation 

architecture description mentioned previously developing conversational agents years part trains trips projects 
trips designed loosely coupled collection components exchange information passing messages 
components speech processing recognition synthesis language understanding dialogue management problem solving 
previous versions trips system dialogue manager component dm performed functions interpretation user input context maintenance discourse context speech speech graphics planning content form system responses parser discourse context response planner managing problem solving planning having functions performed component led disadvantages 
distinction domain planning discourse planning obscured 
difficult improve interpretation response planning closely knit 
incremental processing difficult achieve input pass dm domain reasoning going occur discourse planning 
porting system new tasks domains hampered interconnections various types knowledge dm 
new core architecture trips shown 
main processing components 
interpretation manager im interprets user input arises 
broadcasts recognized speech acts interpretation problem solving actions incrementally updates discourse context 
behavioral agent ba closely related autonomous heart agent 
plans system behavior goals obligations user utterances actions changes world state 
actions involve communication collaboration user sent generation manager gm 
gm plans specific content utterances display updates 
behavior driven discourse obligations discourse context directives receives ba 
glue layers model problem solving user system contributions collaborative task expressed 
components operate asynchronously 
instance gm generating acknowledgment ba deciding 
user starts speaking im start interpreting new actions 
discourse context maintains shared state needed coordinate interpretation generation 
remainder section describe major components detail including descriptions discourse context problem solving model task manager 
discourse context trips discourse context provides information coordinate system conversational behavior 
supplies sufficient information generate interpret anaphoric expressions interpret forms ellipsis 
real time nature interactions fact system may goals receive reports external events discourse context provide information status turn speak wait discourse obligations currently outstanding cf 

especially important system chooses pursue goal notifying user accident perform expected dialogue act answering question coherent cooperative system usually satisfy outstanding discourse obligations done interpretation task manager task interpretation requests interpretation manager behavioral agent planner scheduler monitors events task domain specific knowledge sources task execution requests problem solving acts recognized user problem solving acts perform exogenous event sources generation manager behavior new core architecture generation simply means apology 
move open mike interactive systems identify generate appropriate grounding behaviors 
support needs trips discourse context contains information 
model current salient entities discourse support interpretation generation anaphoric expressions 
structure interpretation immediately preceding utterance support ellipsis resolution clarification questions 
current status turn assigned conversant currently open 

discourse history consisting speech act interpretations utterances conversation far indication utterances grounded 
current discourse obligations typically respond conversant utterance 
obligations may act stack clarification subdialogues short term interruptions stack large 
richer discourse model systems see model similar richness 
problem solving model core modules conversational agent im ba gm general models collaborative problem solving models remain level common practical dialogues 
model formalized set actions performed problem solving objects 
problem solving objects include objectives goals pursued solutions proposed courses action structures may achieve objective resources objects solutions trucks transportation space kitchen design situations settings solutions attain objectives 
general number different actions agents perform collaboratively solve problems 
apply problem solving object 
example agents may create new objectives new solutions new situations hypothetical reasoning new resources resource planning 
actions problem solving model include select focus particular objective evaluate determine long solution take compare compare solutions objective modify change aspect solution change resources available repair fix old solution works abandon give objective throw possible solution note dealing collaborative problem solving actions accomplished agent 
agent needs propose action agent said initiate collaborative act accept agent said complete collaborative act 
explicit communication acts involved collaborative problem solving 
communicative acts acts performed single agent successful agent understands communication 
main communication acts problem solving include describe elaborate objective describe particular solution explain provide rationale solution decision identify communicate existence resource select goal 
communication acts course may accomplish problem solving goals 
instance initiate creation objective describing 
task manager behaviors im ba gm defined terms problem solving model 
details objects particular domain operations performed specified task manager tm 
tm supports operations intended assist recognition user doing respect task hand execution problem solving steps intended progress task hand 
specifically task manager able 
answer queries objects role task domain ambulance resource 
loading truck domain executable action 
city possible domain goal 

provide interface generic problem solving acts ba create solution actual task specific agents perform tasks build course action evacuate city trucks 
provide intention recognition services im going avon plausibly extension current course action 
list meant exhaustive developed experiences building systems problem solving domains 
architecture task manager maps problem solving acts capabilities knowledge agents disposal 
example planning domains task manager uses planner router scheduler temporal knowledge base answer queries create modify plans 
interpretation manager interpretation manager im interprets incoming parsed utterances generates updates discourse context 
produces turn information 
talk interface simple 
user presses button taken turn release released turn 
move open mike identifying turn behavior require sophisticated interpretation 
trips uses incremental chart parser assist process broadcasting constituents recognized 
principal task im identify intended speech act collaborative problem solving act system obligations arising interaction 
instance utterance bridge blocked interpreted circumstances problem statement intention initiate replanning 
im broadcast obligation respond statement announce user initiated collaborative problem solving act identifying problem means initiating replanning say change route currently planned 
circumstances utterance recognized new goal reopen bridge 
rules construct interpretations problem solving model specific decisions querying task manager 
instance example key questions existing plan bridge affirmative answer indicates replanning interpretation making bridge available reasonable high level goal domain affirmative answer indicates introduce goal interpretation 
generation manager generation manager gm performs content planning receives problem solving goals requiring generation behavioral agent ba discourse obligations discourse context 
gm task synthesize input sources produce plans sequences discourse acts system discourse contributions 
gm operates asynchronously im continuously planning 
instance informed user turn ends plan simple take turn keep turn acts absence information im ba timing information 
case grounding behaviors conventional interactions greetings gm uses simple rules adjacency pairs problem solving state necessary 
cases may need information ba order satisfy discourse obligation 
may receive goals behavioral agent plan satisfy absence discourse obligation instance important changes world ba wants notify user 
gm plan extensive discourse butions rhetorical relations expressed schemas instance explain fact proposal motivate proposed action 
access discourse context sources task domain level knowledge 
gm constructed discourse act set acts production sends act associated content response planner performs surface generation 
rp comprises subcomponents template tag grammar performs output selection coordination 
realize turn grounding speech acts parallel real time employing different modalities useful 
produce incremental output levels produce output speech act plan realized propositional content produce incremental output sentence 
discourse act realized produced successfully gm informed sends update discourse context 
behavioral agent described behavioral agent ba responsible problem solving behavior system 
behavior function aspects ba environment interpretation user utterances actions terms problem solving acts produced interpretation manager persistent goals obligations system terms furthering problem solving task exogenous events ba aware means agents monitoring state world performing actions ba behalf 
noted previously dialogue systems including previous versions trips respond primarily sources input user utterances 
systems including previous versions trips notion persistent goals obligations system 
implicit hard coded rules governing behavior system 
realistic conversational systems take central role 
just people system juggle various needs obligations able talk explicitly 
think crucial conversational systems get world 
simply looking answers database conducting web queries conversational system helping user real world task truly agent embedded world 
events occur exogenous control asynchronous occurring unpredictable times 
system take account events integrate conversation 
real world tasks monitoring function constitutes significant part system role 
behavioral agent operates reacting incoming events managing persistent goals obligations 
case user initiated problem solving acts ba determines cooperative initiative take solving joint problem 
example user initiates creating new objective system complete act adopting new problem solving obligation find solution 
take initiative get task manager compute solution partial tentative problem solving proposing solution user 
ba receives notification events world chooses communicate user adopt problem solving obligations 
example system receives report heart attack victim needing attention choose simply inform user fact decide 
decide done situation adopt intention solve problem get victim hospital 
system task level initiative behavior determined ba relative priorities goals obligations 
problem solving obligations determine system respond new events including interpretations user input 
infrastructure architecture described built extensive infrastructure developed support effective communication various components making conversational system 
space precludes extended discussion facilities see details 
system components communicate knowledge query manipulation language kqml provides syntax high level semantics messages exchanged agents 
kqml message traffic mediated facilitator sits hub star topology network components 
hub may bottleneck practice problem 
contrary facilitator provides variety services proven indispensable design development system 
include robust initialization kqml message validation naming lookup services broadcast facilities subscription clients subscribe order receive messages sent clients advertisement clients may advertise capabilities 
bottom line architecture conversational systems proposing impractical impossible extensive infrastructure support 
may just implementation details fact power flexibility trips infrastructure enables design architecture meet needs realistic conversation 

example example help clarify relationships various components architecture information flows necessity 
consider situation user asks ambulances speech recognition components notice user started speaking 
interpreted interpretation manager turn indicates take turn event occurred tell done take turn user generation manager information cancel delay planned response previous utterance 
generate various grounding behaviors changing facial expression capability supported 
utterance completed im interprets user having stopped speaking releasing turn tell done release turn user point gm may start planning executing appropriate response 
interpretation manager receives logical form describing surface structure request information 
performs interpretation context interacting task manager 
case asks task manager ambulances considered resources domain 
affirmative response interprets question initiating problem solving act identifying relevant resources 
note contextual interpretation critical user wants know usable ambulances known ambulances 
im generates 
message discourse context recording user utterance discourse history structural analysis parser 

message discourse context system obligation respond question tell introduce obligation id oblig system respond wh question id utt user loc set type ambulance wh term type location initiate ps message includes system obligation representation content question connection recognized problem solving act defined message described 
im specify obligation respond question discharged 

message behavioral agent user initiated collaborative problem solving act attempting identify resource tell done initiate user identify resource id ps set type ambulance message includes problem solving act recognized im user intention representation content question 
discourse context receives notification new discourse obligation fact broadcast subscribed components including generation manager 
gm answer question getting response behavioral agent 
adopts goal answering waits information ba 
waiting may plan produce acknowledgment question 
behavioral agent receives notification user initiated problem solving act things happen depending situation 
consider sequence 
right thing may decide part try complete problem solving 
case communicate components answer query location ambulances send gm message request identify resource system loc amb rochester 
complete system ps ba expects satisfy problem solving goal completing identify resources act initiated user sure hears back im user understood response 
clarification ba may try identify resource fail 
specific problem identified having caused failure decide initiate clarification obtain information needed 
instance say dialogue far concerned particular subtask involving particular type ambulances 
ba decide identify just ambulances type subtask user wants know usable ambulances 
choose tell gm request clarification 
case ba retains obligation perform identify resources act 
failure hand ba may simply fail identify resources user needs 
instance agents uses answer may responding may question answered 
case requests gm notify user failure abandons temporarily problem solving obligation 
ignoring question ba decide information important send information gm report world indicates new urgent task user system respond 
case ba retains obligation pending problem solving action return circumstances permit 
situation generation manager receives problem solving act perform 
needs reconcile act discourse obligation oblig 
course satisfy oblig answering question 
satisfy oblig generating clarification request clarification request satisfactory response question 
note obligation answer original question maintained problem solving goal discourse obligation 
case failure oblig satisfied generating apology description reason request satisfied 
ba ignores question gm apologize add promise address issue producing unrelated information 
apology satisfy oblig 
urgent message time critical warning generate warning immediately leaving discourse obligation oblig unsatisfied temporarily 
gm sends discourse acts associated content response planner produces annotated text speech synthesis multimodal display commands 
successfully partially case user interruption produced gm informed notifies discourse context discourse obligations met 
gives discourse context expected user obligations result system utterances 
interpretation manager uses knowledge expectations aid subsequent interpretation 
example answer user question successfully produced user obligation acknowledge answer 
receiving acknowledgment inferring implicit acknowledge im notifies discourse context obligation respond question truly discharged notify ba collaborative identify resource act ps completed 

implementation architecture described arose longterm effort building spoken dialogue systems 
able easily port components previous system new system wide range capabilities earlier versions 
specifically handles robust near real time spontaneous dialogue untrained users solve simple tasks trying find routes train map planning evacuation personnel island see overview different domains implemented 
system supports cooperative incremental development plans clarifications corrections modifications comparison different options unrestricted natural language long user stays focussed task hand 
new architecture extends capabilities better handle incremental nature interpretation fact interpretation generation interleaved fact realistic dialogue systems part broader outside world static 
clean separation linguistic discourse knowledge hand task domain knowledge clarifies role individual components improves portability new tasks 
produced initial demonstration new architecture august provided dialogue capabilities emergency relief planning domain simulation scheduling planning components built research groups institutions 
current involves extending capabilities individual components ba gm particular porting system trips domain 

related dialogue systems applications 
due space constraints selected comparison 
cover range domains modalities dialogue management types information seeking systems planning systems speech systems multi modal systems embodied conversational agents systems schemas frames manage dialogue ones planning ones models rational interaction ones dialogue grammars finite state models :10.1.1.44.6926:10.1.1.20.9644
systems looked standard interpretation dialogue management generation core architecture pipeline organized messagepassing hub pipeline information flow 
architecture uses fluid processing model enables differences outline 
separation domain task reasoning discourse reasoning dialogue systems information retrieval systems may fairly little task reasoning perform 
reason systems domain models databases separate dialogue manager separate task models 
contrast system designed domains planning monitoring design task level reasoning crucial just performing task interpreting user actions utterances 
separation domain knowledge task reasoning discourse reasoning task manager various world models problem solving model behavioral agent allows access information compromising portability flexibility 
thin layer standalone planner simulator little direct involvement task reasoning 
dialogue manager incorporates domain dependent task reasoning discourse states certain structured form filling dialogues 
cassell response planner performs deliberative task discourse reasoning achieve communicative task related goals 
architecture separation task discourse level planning behavioral agent handling type goal generation manager 
chu carroll carberry core complete system specification input response planner presumably come dialogue manager 
input specification allows domain problem solving belief discourse level intentions 
generation manager reasons discourse level intentions obtains information domain problem solving belief intentions modules 
cmu communicator systems dialogue manager set domain agents handle domainspecific information access interpretation goal excluding computation dialogue management component 
dialogue manager uses task domain dependent schemas determine behavior 
separation interpretation systems examined combine interpretation response planning dialogue manager 
architecture outlined cassell separates 
includes understanding module performing kinds processing performed interpretation manager response planner performing deliberative reasoning reaction module performs action coordination handles reactive behaviors 
separate component process reactive behaviors get reactive behaviors different types goals take different paths system 
cassell interactional goals turn grounding handled completely discourse components system discourse interpretation response planner handling propositional goals may involve domain task reasoning involve behavioral agent problem solving modules 
fujisaki divide discourse processing user model system model 
attempt model beliefs knowledge agents participating discourse discourse 
interpretation completed response planning begins 
furthermore models user system finite state models general conversational agents flexible models may necessary 

described architecture design implementation conversational systems participate effectively realistic practical dialogues 
emphasized fact interpretation generation interleaved fact dialogue systems realistic settings part respond broader world outside considerations led architecture interpretation generation system behavior functions autonomous components exchange information discourse task hand 
clean separation linguistic discourse knowledge hand task domain specific information hand clarifies roles individual components improves portability new tasks domains 

acknowledgments supported onr 
darpa 
nsf 
iri 

allen byron ferguson stent 
architecture generic dialogue shell 
natural language engineering 
cassell bickmore campbell chang yan 
requirements architecture embodied conversational characters 
thalmann thalmann editors proc 
computer animation simulation 
chu carroll brown 
initiative collaborative interactions cues effects 
proc 
aaai spring symposium computational models mixed initiative interaction 
chu carroll carberry 
collaborative response generation planning dialogues 
computational linguistics 
ck eriksson nsson 
architecture multi modal natural dialogue systems 
proc 
esca tutorial research workshop interactive dialogue multi modal systems 
ferguson allen 
trips integrated intelligent problem solving assistant 
proc 
aaai pages 
ferguson allen miller 
design implementation trains system prototype mixed initiative planning assistant 
trains technical note department computer science university rochester 
fujisaki kameda ohno abe suzuki 
principles design intelligent system information retrieval internet multimodal dialogue interface 
proc 
eurospeech 
gustafson lindberg 
august spoken dialogue system 
proc 
eurospeech 

incremental generation real time applications 
technical report rr deutsches nstliche intelligenz gmbh dfki saarbr cken germany 
labrou finin 
proposal new kqml specification 
technical report cs computer science electrical engineering department university maryland baltimore county 
matheson poesio traum 
modelling grounding discourse obligations update rules 
proc 
naacl 
rosset lamel 
design strategies spoken dialog systems 
proc 
eurospeech 
rudnicky thayer xu oh 
creating natural dialogs carnegie mellon communicator system 
proc 
eurospeech 

natural dialogue meets rational agency 
proc 
ijcai 
seneff polifroni 
dialogue management mercury flight reservation system 
proc 
anlp naacl workshop conversational systems pages 
stent 
monroe corpus 
technical report department computer science university rochester march 
stent dowding bratt moore 
spoken dialogue system 
proc 
acl pages 
traum allen 
discourse obligations dialogue processing 
proc 
acl pages 
