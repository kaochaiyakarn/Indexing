lore database management system semistructured data jason mchugh serge abiteboul roy goldman dallan quass jennifer widom stanford university quass db stanford edu www db stanford edu lore lore lightweight object repository dbms designed specifically managing semistructured information 
implementing lore required rethinking aspects dbms including storage management indexing query processing optimization user interfaces 
provides overview aspects lore system novel features dynamic structural summaries seamless access data external sources 
traditional database systems force data adhere explicitly specified rigid schema 
new database applications significant drawbacks approach ffl data may irregular conform rigid schema 
relational systems null values typically data irregular known 
sequence lindex operations traverses objects attempting match full path expression comparison 
note oa satisfies clause may necessary scan operations find components select expression appear clause 
consider query oql form introduced section obvious alternative full path indexes place lindex 
path indexes expensive maintain faster query time 
path indexes discussed detail gw :10.1.1.15.9610
select dbgroup member office exists age query plan indexes shown 
plan introduces new query operators vindex lindex named obj 
vindex operator appears left child second join operator iteratively finds atomic objects value incoming edge labeled age placing oids slot oa 
lindex operator appears operator iteratively places oa parents object oa age edge 
object reached path originating named object deleted garbage collector 
novel features section provides brief overviews novel features lore external data manager dataguides 
due space constraints coverage cursory give reader flavor components 
details external data manager see mw 
details dataguides gw :10.1.1.15.9610
external data lore external data manager enables dynamic retrieval information data sources queries issued lore 
externally obtained data combined resident lore data query evaluation distinction types data invisible user 
external data lore provides way query distributed information sources essentially transforming lore information integration engine 
external object stored lore database functions placeholder external data specifies lore interacts external data source 
turns certain dataguides easier keep consistent response updates underlying database 
addition dataguides support storage annotations objects properties set objects reachable path expression original database 
store annotation path expression assigning single object dataguide reachable path expression 
annotations useful storing sample atomic values reachable path expression specifying statistical chances finding outgoing edge certain label 
gw formal definitions dataguides provided algorithms build incrementally maintain dataguides support annotations :10.1.1.15.9610
discussion dataguides aid query formulation practice query optimization 
interfaces lore shown lore application programming interface api provides gateway lore user interface client application 
instance system textual interface passes user commands lore presents query results hierarchical display 
summarizing api describe web interface lore simple interactive fashion 
described section build lore link index lindex order quickly find parents object reachable label 
alternatively augment storage manager store objects inverse parent pointers addition subobject child pointers 
plan compare performance storage manager inverse pointers current approach 
plan consider path indexes place lindex 
interestingly functionality path indexes incorporated easily dataguide discussed gw :10.1.1.15.9610
currently expansions path expressions query paths done run time 
classes path expressions possible information dataguide expand regular expressions possible completions query compilation time 
plan explore compile time approach compare performance run time approach take 
new functionality process implementing transaction support concurrency control recovery 
acm transactions database systems 
gra graefe 
query evaluation techniques large databases 
acm computing surveys 
gw goldman widom :10.1.1.15.9610
dataguides enabling query formulation optimization semistructured databases 
proceedings international conference large data bases athens greece august 
kks kifer kim sagiv 
querying objectoriented databases 
