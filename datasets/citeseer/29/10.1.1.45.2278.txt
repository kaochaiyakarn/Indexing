evaluating queries generalized path expressions vassilis christophides le chesnay cedex france vassilis christophides inria fr sophie cluet le chesnay cedex france sophie cluet inria fr guido moerkotte fur informatik iii 
aachen germany informatik rwth aachen de past years query languages featuring generalized path expressions proposed 
languages allow data structure 
powerful essential number applications 
evaluation relied naive inefficient algorithm 
extend object algebra new operators interesting rewriting techniques queries featuring generalized path expressions 
realistic imagine database systems receivers huge amounts information stored locally viewed distant sites 
framework useful offer shortcuts expression query incomplete knowledge schema 
generalized path expressions point reader may interested seeing gpe 
consider example featuring clause 
language extension oql language introduced cacs :10.1.1.48.8190
select struct person wine query pairs persons appropriate birthday presents 
birthday presents taken wine 
special friends select common friend 
query data variables iterate members person wine respectively 
special friends select common friend 
query data variables iterate members person wine respectively 
attribute variables iterate possible attributes 
path variables iterate possible paths example ranges restricted attributes person wine 
semantics query thought formal semantics see cacs :10.1.1.48.8190
possible attribute binding query evaluated 
type error occurs binding result qualifying tuples 
correct bindings wrt 
typing attribute variables results instantiated queries give final result 
operator definition inst fx ffi pn xn dom xn dom pn xn stands path attribute variables note order variables irrelevant 
domain attribute variable set attributes database schema 
domain path variable set legal paths constructed database schema 
really concerned interpretation legal path 
similar cacs reasonable interpretation :10.1.1.48.8190:10.1.1.48.8190
restriction domains predicate note input set involved instantiations path attribute variables 
means see final section operator applied empty set 
illustrate operator means example inst ff person operator applied set containing tuples representing persons identifiers 
type restrictions require attribute variable applied object type person subtype thereof results integer string ff denotes start domain 
redundancy reason decision 
consider attribute variable person instances age name 
exist possibilities represent instantiations 
paths person age person name tree person gamma gamma gamma age name small example save duplication person path variables involved saving tremendous 
semantics path variables restricted acyclic instantiations schema level cacs trees perfect representation :10.1.1.48.8190
factorization adequate paths instantiation complex composition inheritance graphs 
note internal representation paths physical issue 
neglecting subtleties empty sets algebraic point view view result schema instantiation set tuples 
implementation algebraic operators annotated relations adapted 
inst pa age name age name result age name john age name mary factorization may performed avoid unnecessary redundancy 
schema instantiation captured annotated set annotate tuples inside set 
note union types required 
come surprise usually introduce union types 
avoid unnecessary problems consider marked unions cacs :10.1.1.48.8190
optimizing queries traditional optimizers perform type inference 
step type information real optimization start 
optimization decisions queries containing generalized path expressions depend type information size subschema involved type inference query optimization query execution interleaved 
explain section optimizer perform interleaving steps 
operation finds possible attributes person 
operation evaluates attributes person 
operations similar 
operation join 
remarks noteworthy join predicate involves union types details manipulation unions see cacs :10.1.1.48.8190
second join operation required rewriting translation process 
usually clauses translated join selection 
second parameter join dependent rewritten cartesian product selection join 
operation map builds final result 
management data pages 
bertino gibbs 
query processing multimedia document system 
acm transactions office information systems january 
cacs christophides abiteboul cluet scholl :10.1.1.48.8190
structured documents novel query facilities 
proc 
acm sigmod conf 
management data pages minneapolis minnesota may 
