algebraic approach static analysis active database rules baralis politecnico di torino jennifer widom stanford university rules active database systems difficult program due unstructured unpredictable nature rule processing 
provide static analysis techniques predicting rule set guaranteed terminate rule execution confluent guaranteed unique final state 
methods previous techniques analyzing rules active database systems 
improve considerably previous techniques providing analysis criteria conservative methods determine rule set terminate confluent previous methods determination 
improved analysis propagation algorithm uses extended relational algebra accurately determine action rule affect condition determine rule actions commute 
consider condition action rules action rules making approach widely applicable relational active database rule languages trigger language sql standard 
condition transition deltac deltac gamma old eca rule languages allow condition action refer explicitly database changes caused rule triggered 
definition 
rule delta relations called transition tables encapsulate changes occurred rule transition 
relation referenced triggering events self explanatory delta relations available inserted deleted old updated new updated 
changes stored delta relation reflect logical net effect hanson simon widom finkelstein sequence actual changes database rule transition :10.1.1.46.2504
example insertion subsequent update tuple considered insertion updated tuple 
consider effect conflict resolution policy selecting multiple rules true conditions widom ceri 
extension framework possible incorporate conflict resolution rule priorities see section 
examples eca rules 
condition action rule language defined states rule condition expression extended relational algebra section 
states rule action data modification operation expressed ins del upd table section 
rule evaluated condition true condition transition deltac recall definition nonempty 
condition true query produces new tuples 
identical interpretation conditions ca rules ariel hanson set oriented adaptations ops :10.1.1.46.2504:10.1.1.46.2504
observe interpretation ca rule conditions represents important difference rule conditions evaluated eca rule model described previous section 
action data modification operation executed current database state identical eca rules 
active database systems hanson rule action implicitly operates data selected condition entire database :10.1.1.46.2504
similar rule model complicate syntax semantics bearing analysis methods see section discussion 
condition true query produces new tuples 
identical interpretation conditions ca rules ariel hanson set oriented adaptations ops :10.1.1.46.2504:10.1.1.46.2504
observe interpretation ca rule conditions represents important difference rule conditions evaluated eca rule model described previous section 
action data modification operation executed current database state identical eca rules 
active database systems hanson rule action implicitly operates data selected condition entire database :10.1.1.46.2504
similar rule model complicate syntax semantics bearing analysis methods see section discussion 
similar eca rules rule processing invoked set user application modifications database chosen rule processing granularity 
basic algorithm rule processing 
analogous eca rules consider conflict resolution policy selecting multiple triggered rules see section 
discussed sections technique aiken analyzing rule interaction relies shallow comparison type modification performed rule action triggering events condition action rule event action analysis 
analysis technique computationally expensive requires detecting un satisfiability relational expressions event action analysis requires comparing sets events 
methods allow significantly improve accuracy result see sections formal algebraic model analyze interaction rules 
initial report baralis applied approach termination analysis ca rules 
subsequently baralis widom refined techniques baralis limited ca rules considered termination confluence :10.1.1.49.7452
complete framework analysis ca eca rules 
furthermore extended analysis techniques baralis explicitly take account knowledge rule condition satisfied rule action executes extended algorithm determining rule actions commute 
provided proof correctness propagation algorithm 
related van der analyzes rule behavior context object oriented active database systems 
allow translation active rules logical clauses limitations expressive power considered rule language imposed rule action contain condition 
traditional expert systems production rule systems ops brownston predicting properties termination confluence appears importance database environment consequently rule analysis traditional expert systems active database systems 
tsai cheng addresses termination analysis context real time rule systems goal guaranteeing bounded response time 
method enable rule graph proposed analyze ops rule sets 
enable rule graph analogous activation graph condition action rules baralis baralis widom :10.1.1.49.7452
tsai cheng step performed cycle detected enabling condition cycle automatically generate extra rules break execution cycles 
cycles broken rolling back deleting working memory instances causing loop 
basic analysis technique tsai cheng similar applies restricted rule language 
propagation algorithm closely related problem independence queries updates addressed elkan levy sagiv 
provided representation active rules generic extended relational algebra allows encode rules relational active database rule languages sql trigger language 
propagation algorithm analyzing interactions queries modifications discussed correctness 
shown propagation algorithm applied check termination confluence sets ca eca rules including number refinements straightforward application 
techniques improve considerably previous methods formal approach allows exploit semantics conditions actions analyze interaction rules 
note methods applicable rule languages pass data condition action hanson algorithm detects actual modifications rule conditions inserts deletes updates simply transition true false :10.1.1.46.2504
aiken analysis techniques identify responsible rules termination confluence guaranteed 
techniques kernel interactive development tool helps rule designers develop sets rules guaranteed desired properties baralis 
possible topics include extending rule model analysis techniques incorporate conflict resolution rule priorities widom ceri 
priorities restrict possible execution sequences rules making analysis complex precise 
