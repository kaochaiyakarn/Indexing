algorithmseer system extracting searching algorithms scholarly big data suppawong tuarob member ieee sumit bhatia prasenjit mitra senior member ieee c lee giles fellow ieee abstract algorithms usually published scholarly articles especially computational sciences related disciplines ability automatically nd extract algorithms increasingly vast collection scholarly digital documents enable algorithm indexing searching discovery analysis recently algorithmseer search engine algorithms investigated part citeseerx intent providing large algorithm database currently algorithms extracted million scholarly documents paper proposes novel set scalable techniques used algorithmseer identify extract algorithm representations heterogeneous pool scholarly documents speci cally hybrid machine learning approaches proposed discover algorithm representations techniques extract textual metadata algorithm discussed finally demonstration version algorithmseer built solr lucene open source indexing search system presented index terms algorithm search engine ensemble machine learning scholarly big data introduction computer science many applications developing analyzing applying algorithms ef collection algorithmic innovations systems pro vide alternative source researchers software devel cient solutions important problems various disciplines opers looking cutting edge algorithmic solutions computer science usually involve transforming problems problems algorithmic ones standard algo standard algorithms usually collected cataloged rithms applied example algorithms stock port manually algorithm textbooks e g encyclopedias folio optimization used diversifying search results especially ones available online wikipedia information retrieval systems industrial design websites provide references computer pro disciplines latent dirichlet allocation effectively grammers e g rosettacode org parsed wikipedia used identify notable product features like algorithm pages published found roughly wise bioinformatics hirschberg s algorithm standard algorithms cataloged national widely used nd maximal global alignments dna institute standards technology nist also protein sequences furthermore thorough knowledge dictionary standard algorithms state art algorithms also crucial developing ef standard algorithms already cataloged made cient software systems searchable especially online catalogs newly pub signi cant number scholarly articles computer sci lished algorithms appear new articles explosion ence related disciplines contain high quality algorithms newly developed algorithms scienti c technical developed researchers bhatia et al estimated number documents makes infeasible manually catalog algorithms published major computer science con newly developed algorithms ferences table dozens new manually searching newly published algorithms algorithms reported conferences every year nontrivial task researchers others aim dis useful automated systems ef ciently cover ef cient innovative algorithms identify extract index search ever increasing actively search monitor relevant new publications elds study keep abreast latest algorithmic develop ments problem worse algorithm searchers s tuarob faculty information communication technol ogy mahidol university salaya thailand e mail suppawong tua inexperienced document search ideally like system automatically discovers extracts algo s bhatia ibm almaden research center san jose ca rithms scholarly digital documents system e mail sumit bhatia p mitra qatar computing research institute doha qatar e mail pmitra prove facilitate algorithm indexing searching wide range potential knowledge discovery applications c l giles information sciences technology pennsylvania state university pa e mail giles de ne standard algorithm algorithm well manuscript received mar revised jan accepted feb known people eld usually recognized name date publication apr date current version may including dijkstra s shortest path algorithm bellman ford algorithm recommended acceptance y r lin h tong j tang k s candan quicksort algorithm etc information obtaining reprints article please send e mail reprintsand reference digital object identi er digital object identi er tbdata ieee personal use permitted republication redistribution requires ieee permission see information fig example pseudo code pc studies algorithm evolution presumably increase productivity scientists identifying extracting various informative entities scholarly documents active area research algorithm discovery digital documents bhatia et al described method automatic detection pseudo codes pcs computer science publications method assumes pc accompanied caption e g fig pc can identi ed using set regular expressions capture presence accompa nied caption however approach limited coverage due reliance presence pc captions wide varia tions writing styles followed different journals authors found percent pcs see section accompanied captions remain undetected proposed approach furthermore even though pcs commonly used scienti c documents represent algorithms majority algorithms also represented using algorithmic procedures aps algorithmic procedure e g fig set descriptive algorithmic instructions differs pc following ways writing style pcs usually written program ming style details omitted symbols greek let ters mathematical operators programming keywords begin end return etc usually used compose pcs hand aps usually written listing style descriptive manner step usually begins bullet point number aps lack power express complex nested loops less concise pcs easier comprehend gen eral readers programming background location documents pcs usually part running text may appear anywhere documents pcs identi ers context document can refer identi ers include captions e g figure hill climbing algorithm function names e g approxmax sat g s p algorithm names fig example algorithmic procedure ap e g algorithm buildgallednetwork con trary algorithmic procedures mostly appear part running text hence unique identi ers hence detecting aps require different set techniques since algorithms represented documents con form speci c styles written arbitrary formats becomes challenge effective identi cation extraction propose novel methodology based ensemble machine learning discover algorithm represen tations pcs aps automatically moreover observe two algorithm representations may used describe algorithms hence also pro pose simple heuristic links different algorithm repre sentations together constitute algorithm automatic discovery extraction algorithm representations will useful applications digital libraries docu ment engineering paper following key contributions propose set hybrid techniques based ensemble machine learning discover pcs aps scholarly documents speci cally three variations methodology detecting pcs include exten sion existing rule based method proposed bhatia et al one based ensemble machine learning techniques hybrid two methods discovering aps include rule based method machine learning based method fur thermore machine learning based strategy iden tify sections scholarly document detecting section headers using section bound aries also discussed finally propose heuris tic links different algorithm representations referring algorithm together case study scholarly documents selected cit x eseerrepository used validate ef cacy techniques nd textual metadata can directly extracted algorithm representation especially pcs inadequate effective retrieval propose use synopsis genera tion method automatically generates comprehensive description document element table approximate number algorithms published different computer science conferences reproduced conference algorithms sigir sigmod stoc vldb www tag based automatic metadata annotation technique automatically textually enriches metadata records extract mean ingful textual information pcs case study pcs extracted randomly sampled scholarly documents used discuss validate methods describe algorithm textual metadata indexed made searchable along demon strating test version algorithmseer background related works since literature scholarly information extraction exten sive works closely related discussed document element extraction scholarly documents identifying extracting informative entities mathematical expressions tables gures tables contents documents extensively studied kataria et al employed image processing optical character recognition ocr approaches automatic extraction data points text blocks d plots also proposed method index search extracted information sojka li sska proposed mias math indexer searcher collects interprets mathematical expressions since system handles documents mathml mathemat ical markup language format mathematical expres sions already marked approach inapplicable problem bhatia et al proposed set methods used detecting document elements accompanied captions e g tables gures pseudo codes document element identi ed detecting presence corresponding caption using set reg ular expressions paper use method baseline pc detection task search systems scholarly information aside well known web search engines google microsoft s bing various vertical search engines proposed citeseer now citeseerx developed scienti c literature digital library search engine automatically crawls indexes scienti c documents pri marily eld computer information science https www google com liu et al presented tableseer tool automatically identi es extracts tables digital documents used tailored vector space model based ranking algo rithm tablerank rank search results implementa tion tableseer extracts searches tables citeseerx document repository included citeseerx suite biotext search engine specialized search engine biology documents also offers capability extract gures tables make searchable khabsa et al described ackseer acknowledgement search engine extracts disambiguates indexes million mentioned entities acknowledgments documents citeseerx chen et al emphasized importance scienti c collaboration introduced collabseer search engine discovering potential collaborators given author researcher analyzing structure coauthor network user s research interests though useful algorithms found many spe cialized search engines e g citeseerx google scholar algorithm related discussion forums e g stack ow quora search results can contaminated irrele vant items fig illustrates example search session top ve results shortest path nding algorithms using query shortest path nding algorithm citeseerx search engine currently hosts million academic publi cations whose major proportion computer science related disciplines according gure two ve top results relevant actual papers describe https scholar google co th https www quora com shortest path algorithms three results simply documents containing search terms search engines return whole docu ments papers websites search results requiring users invest additional unnecessary effort read entire documents nd desired algorithms best knowledge rst explore possibility building search engine speci cally algorithms extracted scholarly digital documents system article prototype algorithm search engine algorithmseer presented fig illustrates high level proposed system first scholarly documents proc essed identify algorithm representations section textual metadata provides relevant informa tion detected algorithm representation extracted section extracted textual metadata indexed made searchable section note even though methods presented paper developed handle algorithms scholarly digi tal documents methods generalized information sources contain textual representations algorithms pseudo codes found web pages e g stack ow wikipedia etc algorithm extraction html different algorithm extraction free text though similarities example webpages usually composed html provides markup tags e g tr td etc can utilized detect boundaries document elements functionali ties exist free text data also possible ideas presented paper developed document elements tables diagrams long textual information entities extracted algorithm identification scholarly documents section discusses methods automatic discovery pcs aps scholarly documents fig displays high level diagram proposed system system spe ci cally handles pdf documents since majority articles modern digital libraries including citeseerx pdf format first plain text extracted pdf le inspired hassan use pdfbox extract text modify package also extract object information font location information pdf document three sub processes operate parallel including document segmentation pc detection ap detection docu ment segmentation module identi es sections docu ment pc detection module detects pcs parsed text le ap detector rst cleans extracted text repairs broken sentences since method assumes document represented sequence sentences identi es aps pcs aps identi ed nal step involves linking algorithm representations refer ring algorithms together nal output set unique algorithms detecting pseudo codes pcs scienti c documents use pcs compact concise illustrations algorithms pcs normally treated doc ument elements separated running text usu ally accompanied identi ers captions function names algorithm names since pcs can appear anywhere document identi ers usually serve purpose anchors can referred context running text three approaches detecting pcs scholarly documents presented rule based method pc rb ensemble machine learning based method pc ml combined method pc cb note though ocr based techniques page document rst converted image image processing based techniques used locate boundary pcs ocr technique used extract content within candidate region explored textual content can directly quite accu rately extracted pdf les seems convert ing documents images applying ocr algorithms just add noise extracted text rule based method pc rb recently bhatia et al proposed rule based pc detection approach utilizes grammar document element captions detect presence pc captions refer method baseline pc bl pc detection task proposed pc rb extends baseline fig example sparse regions e sparse boxes taken left gure actual pdf page right gure illustrates extracted text adding following rules improve coverage reduce false positive rate pc caption must contain least one algorithm keyword namely pseudo code algorithm procedure captions algorithm keywords appear prepositions e g figure robust envelope obtained proposed algorithm excluded likely captions pcs given document tagged line numbers pc rb locates pcs detecting presence captions machine learning based method pc ml pc rb yields high precision however still suffers low coverage resulting poor recall found percent pcs dataset accompa nied captions pcs remain undetected using pc rb method get around issue propose machine learning based pc ml method directly detects presence pc contents instead cap tions motivation originated observation pcs written sparse manner resulting sparse regions call sparse boxes documents fig shows example sparse boxes sample scienti c article page pc ml rst detects extracts sparse boxes classi es box whether pc box pc box sparse box contains least per cent content terms number lines pc fol lowing sections explain sparse boxes identi ed feature sets classi cation models output pc ml tuples hstart endiline numbers detected pc sparse box extraction de ne sparse box set least n consecutive sparse lines sparse line line meets following criteria ratio number non space characters average number characters per line less threshold m footers headers enclosed sparse lines found n m work best dataset right sub gure fig illustrates extracted text lines sparse lines highlighted yellow non sparse lines highlighted white set consecutive sparse lines composes sparse box illustrated left sub gure ef cacy sparse box extraction method evaluated two per spectives coverage accuracy given set sparse boxes b extracted document d coverage de ned following jfljl b b b l positive gj coverage jfljl b l positivegj line wise recall utilized quantify much pc content can captured within extracted sparse box sparse box extraction method yields coverage percent among sparse boxes detected ds dataset see section found percent actual pcs pc boxes accuracy evaluation quanti es precisely pc cut sparse box pc box measure upper boundary delta start line number actual pc minus start line number sparse box lower boundary delta end line number actual pc minus end line number sparse box percent pc boxes upper lower line deltas lines respectively suggesting pc boxes fully precisely extracted proposed sparse box cutting technique feature selection pc box classi cation set fea tures listed table extracted sparse box features classi ed groups font style based fs context based cx content based cn structure based st fs features capture various font styles used compose pcs cx features detect presence pc captions cn features capture pc speci c keywords coding styles st features characterize sparsity pcs symbols used classi cation models sparse box classi ed whether pc box train base machine learning clas si cation algorithms features described table algorithms include logistic model trees lmt multi nomial logistic regression mlr repeated incremental prun ing produce error reduction ripper linear logistic regression llr support vector machine svm random est rf c decision tree reptree decision table dt ran dom tree rt naive bayes nb decision stump ds addition base classi ers listed also combined using standard ensemble techniques uniform weighted majority voting vote probability averaging pavg first base classi ers tested percent held data training data ranked f scores rst ranked classi ers ranked list combined using ensemble methods note ensemble techni ques adaboost bagging rotation forest also explored overall vote pavg methods performed much better agreeing prior empirical study ensemble classi cations kittler et al found two ensemble methods outperformed others e multi staging product maximum median minimum rules identity veri cation handwrit ten digit recognition tasks table features pc box classi cation can divided four groups font style based fs context based cx content based cn structure based st grp feature description fs indentation variance variance positions rst character line first chars indentation variance variance average positions rst characters num diff fontstyles different font styles ex xxxx font styles num fontstyle changes char pairs whose font styles different ex xxxx font style changes frac num fontstyle changes fraction number font style changes number lines caption nearby caption near within three upper lower lines sparse box pc caption nearby whether pseudo code caption near sparse box pc name nearby algorithm name e g algorithm abc near sparse box cn num pc words pc keywords e g forall else iftrue endif etc frac pc words numwords fraction pseudo code keywords number words frac pc words numlines fraction pseudo code keywords number lines num algo words algorithm keywords e g algorithm pseudo code etc frac algo words numwords fraction algorithm keywords words frac num algo words numlines fraction algorithm keywords lines num lines begin pc words lines beginning pseudo code keyword frac nlines beg w pcwords nlines fraction lines beginning pc word lines num functions functions ex scan f x fraction num functions numlines fraction functions lines st num chars characters frac num chars numlines fraction characters lines num symbols symbols frac num symbols numchars fraction symbols characters num alphabets alphabets frac num alphabets numchars fraction alphabets characters num digits digits frac num digits numchars fraction digits characters num alphanumers alphanumeric characters frac num alphanumbers numchars fraction alphanumeric characters characters num non alphanumbers non alphanumeric characters frac non alphanumbers numchars fraction non alphanumeric characters characters num greekchars greek characters frac num greek numchars fraction greek characters characters num arrows arrow symbols frac num arrows numchars fraction arrow characters characters num mathops math operators e g s x etc frac num mathops numchars fraction math operators characters num char words character words e g x xx x character words frac num char words numlines fraction single char words lines frac num char lines numlines fraction character lines lines num ijk characters j k frac num ijk numlines fraction j k characters lines num coding symbols coding symbols e g frac num coding numlines fraction coding symbols lines num lines end dot number lines ending frac numlines ewdot numlines fraction lines ending lines num lines begin number lines beginning number frac lines bwnumber numlines fraction lines beginning anumber lines combined method pc cb though pc ml method can capture pcs even though accompanied captions pcs rst captured sparse box still remain unde tected mostly pcs either written descriptive manner hence result sparse regions docu ment gures text extractor extract images dataset ds see section pcs actual pcs captured using sparse box extraction however undetected pcs accom panied captions hence might still detected using pc rb method propose combined method pc cb pc rb pc ml using simple heuristic follows step given document run pc rb pc ml step pc box detected pc ml pc cap tion detected pc rb proximity pc box caption combined detecting algorithmic procedures aps ap used represent relatively simpler algorithm describe algorithm higher level since lacks power precisely express complex computational opera tions nested loops recursion functions ap usually composed order listing style descriptive wordings aps usually sentence beginning introduce algorithm enclosed within sentence referred algorithmic procedure indication sentence e g solve subproblem propose pseudopolynomial dynamic programming table features detecting ap indication sentences can divided two groups content based cn context based cx grp feature description cn match ap sentence rules wether ap indication sentence algo words wether contains algorithm keyword e g algorithm procedure etc step words wether contains stepwise indication word e g followings steps etc end colon whether ends colon e end step words whether ends stepwise keyword end listing plural whether ends plural list indicating noun e g properties results etc caption wether caption num words number words numwords lessthan t whether number words less threshold t use t cx num step sentences sentences starting bullet point listing number alphabet word step num pc keywords pseudo code keywords e g forall else iffalse iftrue endif etc frac pc words numlines fraction pseudo code keywords lines num algo words number algorithm keywords e g algorithm pseudo code procedure etc frac algo words numwords fraction number algorithm keywords words num symbols number symbols frac symbols numlines fraction number symbols number lines num greekchars number greek characters frac greekchars numchars fraction number greek characters lines num char words number single character words e g x xx x single character words frac char words numlines fraction number single char words lines num mathops number math operators e g s etc frac num mathops numchars fraction number math operators lines num non alphanumbers number non alphanumeric characters frac n alphanumbers fraction number non alphanumeric characters number lines algorithm follows ap detection approaches aim detect indication sentences use locate accompanied aps two methods developed detecting ap indication sentences rule based method ap rb machine learning based method ap ml methods rely sentences correctly extracted document however scholarly documents multi columned contain document elements tables diagrams often seen extracted text may contain garbage noisy lines broken sentences hence extracting sentences garbage text fragments removed document also develop heuristic stitches incomplete sentence broken multiple lines extracted text cleaned broken sentences mended sentences extracted using lingpipe sentence extractor rule based method ap rb often ap indication sentences exhibit certain common properties sentences usually end follows steps algo rithm follows following follows steps sentences usually contain least algorithm keyword create set regular expressions capture senten ces according rules machine learning based method ap ml unfortunately ap indication sentences con form rules described section therefore alternative approach based machine learning pro posed directly learn capture characteristics aps feature selection ap detection set features extracted sentence features can catego rized two groups content based features cn con text based features cx content based features extracted sentence designed learn characteristics ap indication sentences con text based features extracted lines line sentence appears number aver age number lines aps observed data set table lists features classi cation models use set base classi ers ensemble methods described section linking algorithm representations simple heuristic implemented link algorithm repre sentations referring algorithm together speci cally two algorithm representations linked represent algorithm example ap may used provide detail pc part algorithm example algorithm may broken sub parts rep resented using different algorithm representation assumed can one algorithm con tained document section linking algorithm rst assigns algorithm representation section algo rithm representations fall section linked aware assumption needs statis tical justi cation leave future investigation hence section focus general idea algorithm linking method rather strict assumption rst brie y discuss document segmented table notable classi cation results classi er balancing precision recall f measure att s randomforest none randomforest weight y randomforest rover y randomforest runder naivebayes none naivebayes res y svm none svm runder ripper none ripper runder att denotes average training time per fold sections explain algorithm representations assigned corresponding sections linked identifying sections scholarly documents machine learning based approach used identify sec tion boundaries detecting section headers algorithm rst proposed tuarob et al scholarly documents following common properties section section header usually sec tion number section headers usually distinct font styles surrounding content majority sections common sections abstract introduction background conclusions references properties features identi ed char acterize section headers scholarly documents fea tures can divided three groups pattern based pat style based sty structure based str pat fea tures used capturing section headers stan dard sections section headers section numbers sty features lter lines look like section headers fact fragments sentences lines tables con tents textual fragments tables diagrams str features concern locations section headers example lines occur abstract introduction references sections better candidates outside region features also lter footers headers number data balancing techniques classi cation algorithms considered including weighted balancing random sampling random sampling resam pling synthetic minority oversampling technique smote classi ers tested pdf schol arly documents randomly selected citeseerx reposi tory containing various types scholarly documents namely conference papers journals theses academic articles using document wise fold cross validation table lists notable results classi cation differ ent combinations classi ers data balancing strategies bold numbers highest among classi er gure withyrepresents best performance found random forest classi cation algorithm trees using variant weighting balancing techniques minority class instances given higher weight achieved best classi cation performance percent preci sion percent recall percent f clas si cation model used paper identify sections scholarly documents using document sections linking algorithm representations assigning ap section easy since part running text unlike aps pcs normally located sepa rately running text hence appear side sections discuss get around problem pc mapped section contains largest number reference sentences refer algorithm representation assigned section algo rithm representations mapped sec tions linked experiments algorithm identi cation experiments divided three parts pc detection ap detection algorithm representation linking experiments performed windows machine intel core cpu ghz gb ram use libsvm implementation svm weka imple mentation classi cation algorithms datasets two datasets used algorithm detection tasks ds consists scholarly documents manually selected citeseerx repository represent diverse types scholarly articles algorithm representations data set used construct rules regular expres sions rule based methods determine feature sets machine learning based methods ds consists scholarly documents randomly selected citeseerx repository data set consists pcs aps unique algorithms use data set evaluate proposed algorithm detection methods evaluation pc detection fold document wise cross validation used validate three variants pc detection approaches dataset ds standard precision recall f used evaluat ing performance let tg set pcs tr set detected pcs correctly detected pcs t tg tr metrics de ned follows jtg t trjjtg t trj precision recall precision recall f jtrjjtgj precision recall table lists notable results proposed methods pc detection baseline pc bl expected rule based method pc rb yields high precision cost low recall using machine learning techniques pc ml overall performance terms f improved combined method pc cb pc rb majority cjlin libsvm table precision recall f best classi cation models terms f used pseudo code pc algorithmic procedure ap methods method model pr re f pc bl baseline pc rb rulebased improved baseline pc ml lmt rf ripper mlr pc cb lmt rf ripper ap rb rulebased ap ml nb lmt llr mlr rt denotes majority voting vote denotes probability averaging pavg voting lmt random forest ripper base classi ers performs best terms f outperforming state art baseline percent terms f noticed base classi ers inherit rule tree based families perform well task opposed network function based families features rule extracted nature result xed feature space opposed dynamic fea tures word features grow corpus size worth noting ensemble methods result greater improvement compared using individual experts fig compares performances terms f ensemble methods best base classi ers pc ml e mlr classi er pc cb e lmt classi er x axis denotes rst k base classi ers used ensemble method note fact combination lmt random forest ripper accumula tively yields best result means individual expert learns different aspect data hence able correct making collective decisions surprisingly base classi ers inherited differ ent classes machine learning algorithms function tree rule based respectively conclude ensem ble methods useful speci c problems best base classi ers combined however perfor mance ensemble methods can decrease number base classi ers grows might bad base classi ers can impede collective decisions good ones unlike traditional document classi cation techniques feature space can grow large number documents increases handle pattern lexical diversity etc proposed methods scale well document growth feature size xed evaluation ap detection sentence dataset ds labelled whether ap indication sentence dataset ds contains ap indication sentences non indication senten ces fold document wise cross validation used eval uate ap detection methods using standard precision recall f de ned section evaluation met rics table lists notable results best performance terms f achieved ensemble machine learning based method ap ml probability averaging nb lmt llr mlr rt base classi ers yielding percent precision per cent recall percent f fig compares per formances ensemble methods best base classi er e lmt classi er x axis denotes rst k base classi ers used ensemble method similar analysis ensemble methods used pc detec tion ensemble diverse base classi ers distinct machine learning families allows individual experts learn different aspects data resulting better collective decisions classi cation performance increases ve base classi ers begins decrease addition bad base classi ers impede ensemble decisions evaluation algorithm representation linking evaluate linking strategy data set ds terms accuracy de ned algorithm representations correctly grouped accuracy algorithm representations rst identify pcs aps document link groups unique algorithms link ing algorithm achieves accuracy percent algorithm metadata extraction conventional search engine methodology usually han dles textual documents ap corresponding textual information ap however detected pcs fig sample primary textual metadata e caption text refer ence sentences associated algorithm init pda represented pseudo code little corresponding text furthermore pdf text tools designed handling mathematical like contents equations pseudo codes due complex compositions symbols font styles untypical decorations section describes set techniques generating textual metadata pcs algorithms represented pcs textual metadata include captions reference sentences fig illustrates textual metadata relevant given pc can directly extracted including pc s caption text reference sentences adequate meaningful textual metadata allows effec tive retrieval however pcs rich textual table statistics primary textual metadata extracted pseudo codes total algorithms total words caption text total words reference sentences total words primary textual metadata total sentences primary metadata avg words caption text avg words reference sentences avg words primary textual metadata avg sentences primary metadata fig distribution number words primary metadata extracted pseudo codes metadata example fig refer combination caption text reference sentences pc primary textual metadata table breaks statistics primary textual metadata collection pcs extracted randomly sampled schol arly documents refer section data set also used validate algorithm metadata extraction method ology section fig plots distribution words primary textual metadata records table average number words pc s primary textual metadata even worse according fig roughly percent extracted pcs fewer words primary textual metadata algo rithms poor textual metadata likely missed searched recently bhatia mitra proposed algorithm generating comprehensive descriptions document elements e g tables gures algorithms etc comprehensive description referred synopsis synopses shown useful retrieval document elements provide relevant tex tual information can indexed searched given document element algorithm operates supervise fashion includes three main steps retrieves caption reference sentences doc ument extracts representative features trains classi er classi es remaining sentences document whether relevant irrelevant given document element relevant sentences put together synopsis interested readers sug gested consult detail synopsis generation algorithm paper synopsis genera tion technique used generate additional textual infor mation pc however main drawback synopsis generation method requires document element caption least reference sentence dataset nd percent extracted pcs accompanied captions pcs suffer poor primary textual metadata also hav ing synopsis additional textual information recently tuarob et al proposed set methods auto matically annotates enriches metadata records poor textual information algorithm works well two criterion met metadata record must main meaningful textual content main textual component allows algorithm nd similar documents train ing collection generate annotation metadata record needs annotated must relationship collection well annotated metadata will guarantee annotation will relevant since modeled training data similar topics examine sample pcs poor primary textual meta data found associated small piece text composed technical meaningful keywords pcs without captions function names sur rounding sentences characteristic meets rst crite ria furthermore recent studies show algorithms normally composed scratch rather rele vant algorithms inherit properties existing ones likewise algorithms designed solve similar sets problems also makes algorithm metadata meets second criteria section explore possibility using syn opsis generation metadata annotation meth ods generate additional textual metadata pcs following sections rst provide brief introductions synopsis generation metadata annotation algorithms show can applied problem hand algorithm textualmetadata extraction via document element summarization bhatia mitra proposed algorithm automatic retrieval synopsis document element cap tion reference sentences explore possibility applying document summarization technique extracted algorithm metadata order provide additional meaningful textual information algorithm docu ment element de ned entity document part running text representing complementary information document examples document elements include gures tables algorithms since part running text document element usually accompanied caption content running text can used refer authors compose tai lored detailed captions document elements generally readers assumed read entire document order make sense document element within caption presented context document element search engine result may contain enough information help end user understand con tent document element consequently short synopsis information presented along document element helps end users examine docu ment element useful access synopsis allows end user quickly understand content document element without download read entire document examining synopsis takes shorter time nding information document element downloading opening reading le furthermore may allow end user examine results otherwise pseudo codes another type algorithm representation typically used scholarly documents con dense express algorithmic instructions typically pseudo codes treated document elements like document elements oftentimes captions provide much comprehensive information accompanied pseudo codes less textual information impede effec tive retrieval algorithms hence obtaining relevant textual information promote semantic relatedness user queries algorithms automatic algorithm metadata annotation via probabilistic topic modeling section describe high level concept topic modeling based metadata algorithm proposed interested readers encouraged consult original paper details fig illustrates ow score propagation algo rithm simple example example document query system will recommend tags three documents source annotated tags water seagull seagull soil bird bird air respectively algorithm proceeds follows step document similarity score computed document query document source step scores propagated tags source document scores combined tag receives multiple scores example tags sea gull bird obtain multiple scores respectively step tags ranked scores top k tags returned suggested tags use topical similarity measure docu ment similarity suggested tuarob et al use stanford topic modeling toolbox collapsed vari ational bayes approximation identify topics source documents document generate uni grams bi grams tri grams combine repre sent textual content document algorithm takes two input parameters number topics fig distribution number words primary synopsis metadata combined identi ed maximum number training itera tions finally inference method proposed used assign topic distribution given document algorithm simple algorithm transforms col lection documents auxiliary textual metadata d collection documents tag like meta data d input d fd d d ngwhere d hc ai output d fd d dngwhere d hc ei t tag library initialization t d d d hc ai d clean tokenstokenize eremoveduplicates tokens addetot add hc eito d end return d t metadata annotation algorithm originally designed recommend tags order allow algo rithm annotate textual metadata rst transform textual component tags given collection docu ments auxiliary textual metadata d fd d dn g d d hc ai cis main textual part docu ment associated auxiliary textual component like transform d d fd d dngwhere d d hc ei c remains main textual part document e associated tags can achieved using algorithm algorithm takes collection documents auxil iary textual components d input outputs corre sponding collection documents tag like metadata d along tag library t loosely speaking algorithm rst cleans auxiliary textual component removing invalid characters removing stopwords stemming treats cleaned word tag transformation allows us apply tag based document annotation algorithm documents auxiliary textual components psudo codes primary textual metadata fig sample extracted synopsis corresponding algorithm init pda fig represented pseudo code experiments algorithm metadata extraction data set used evaluating discussing synop sis generation metadata annotation comprises pcs extracted randomly sampled scholarly documents statistics dataset shown table generating pseudo code synopses synopsis generation technique applied extracted pcs average number words per generated synopsis average number words per overall textual metadata synopsis primary textual metadata become increasing percent fig plots distribution sizes combined textual meta data terms number words method fails gen erate synopsis percent pcs expected mostly pcs without captions proportion also matches proportion pcs without captions percent dataset ds see section fig shows sample generated synopsis correspond ing algorithm init pda fig represented pc can see particular synopsis provides rele vant information corresponding pc extends information provided caption reference senten ces note evaluation quality synopsis gen eration pcs omitted since already presented different pc dataset dataset pcs synopses will used evaluate metadata annotation algorithm next section automatic algorithm metadata annotation synopses provide additional meaningful textual informa tion pc however pcs whose synopses generated remain poorly annotated recently tuarob et al proposed set methods automatic anno tation tag like metadata via transferring topical knowl edge well annotated corpus including term frequency inverse document frequency tfidf based topic modeling tm based document annotation algo rithms validated proposed algorithms baseline keyphrase extraction algorithm kea pc metadata records rich synopses ran domly selected experiments using document wise fig precision recall f precision versus recall tf idf tm kea baseline algorithms algorithm textual metadata fold cross validation evaluate tfidf tm kea metadata annotation methods word prediction evalua tion protocol carried synopses removed test documents system evaluated based well can predict missing words actual synopses standard precision recall f used evaluation metrics tm algorithm trained topics iterations fig plots precision recall f precision versus recall k results apparent tm algorithm outper forms two performance precision signi cantly different across three methods kea algorithm increasing recall around k starts remain steady tfidf tm algorithms continue suggest relevant keywords hence recall rates continue increase according fig c diminishing returns e peaks f tfidf tm kea algorithms start appear k respectively suggests tfidf tm algorithms start less effective roughly rec ommended terms onwards number relatively smaller kea algorithm fig screenshot showing results query shortest path along search results associated metadata also shown user fig shows sample annotation three algorithms algorithm metadata algorithm fixed base comb method point multiplication appears top left part gure shows actual pc top right part illustrates partial actual synopsis bottom part gure shows top terms recommended three algorithms aim predict actual synopsis text note terms stemmed part preprocess ing red bold terms correctly predicted ones particular example tm algorithm seems effective since can correctly predict words kea algorithm seems recommend meaningful terms however incorrectly predicted note since tag prediction protocol used eval uation measures well annotator guesses omitted text necessary case incorrectly predicted fig sample top suggested words tfidf tm kea baseline algorithms metadata record algorithm mentioned terms relevant just appear actual synopsis tfidf algorithm performs better kea algorithm effective tm algorithm indexing searching algorithms extracted algorithms associated textual metadata indexed using solr makes algorithms searchable proposed system provides free text based query interface user user interface implemented using seersuite extends citeseerx s query interface results given query presented user ranked list algorithms along asso ciated metadata tf idf based cosine similarity used rank search results algorithms presented user decreasing order scores experiments comparing perfor mance proposed system state art search engine systems shown superiority approach terms precision ranking performance selected set popular algorithms test queries tested proposed system google scholar google web search returned result page consid ered relevant contained valid algorithm pseudo code relevance judgments provided two human evaluators associated project pro posed system achieves precision percent top ranks compared percent achieved google web search google scholar respectively fig shows screenshot result page query shortest path top algorithms query along associated metadata presented user note results returned user provide good coverage variety shortest path algorithms heuristic algo rithm shortest path berge shortest path algorithm addition standard shortest path algorithm algo rithm caption presented bold clicking directly takes user pdf page related document algorithm present illustrated fig note though indexing searching methodol ogy presented section successfully employed general text based document retrieval tasks aware searching algorithms can much sophisti cated needing specialized searching capability narrows set desired algorithms hence main purpose section illustrate initial prototype search sys tem makes use extracted textual metadata pseudo codes extracting utilizing algorithm speci c metadata will explored future works conclusions future work algorithms play important part solving research prob lems scienti c publications host tremendous amount high quality algorithms developed professional researchers digital libraries able extract cat alog algorithms introduce number exciting applications including algorithm searching discovering analyzing discussed prototype algorithmseer search system algorithms large scale scholarly docu ments along providing illustration actual demo system speci cally proposed set scalable machine learning based methods detect algorithms scholarly documents discussed using synopsis gen eration document annotation methods extract textual metadata pseudo codes nally explained algorithms indexed made searchable future work explore semantic analysis algo rithms trends algorithms uence time analyses give rise multiple applications improve algorithm search acknowledgments gratefully acknowledge partial support national science foundation suppawong tuarob cor responding author manuscript extension authors earlier work presented www suite icdar references s guha n koudas approximating data stream querying estimation algorithms performance evaluation proc th int conf data eng pp asuncion m welling p smyth y w teh smooth ing inference topic models proc th conf uncertainty artif intell pp j b baker p sexton v sorge m suzuki comparing approaches mathematical document analysis pdf proc int conf document anal recog pp s bhatia p mitra summarizing gures tables algo rithms scienti c publications augment search results acm trans inf syst vol pp mar s bhatia p mitra summarizing gures tables algo rithms scienti c publications augment search results acm trans inf syst vol pp mar s bhatia p mitra c l giles finding algorithms scienti c articles proc th int conf world wide web pp s bhatia s tuarob p mitra c l giles algorithm search engine software developers proc rd int workshop search driven develop users infrastructure tools evaluation pp d m blei y ng m jordan latent dirichlet allocation j mach learn res vol pp mar l breiman random forest mach learn vol pp n v chawla k w bowyer l o hall w p kegelmeyer smote synthetic minority sampling technique j artif int res vol pp h h chen l gou x zhang c l giles collabseer search engine collaboration discovery proc th annu int acm ieee joint conf digital libraries pp p chiu f chen l denoue picture detection document page images proc th acm symp document eng pp d hankerson s vanstone j menezes guide elliptic curve cryptography berlin germany springer t hassan object level document analysis pdf les proc th acm symp document eng pp m hearst divoli h guturu ksikes p nakov m wooldridge j ye biotext search engine beyond abstract search bioinformatics vol pp d s hirschberg linear space algorithm computing maxi mal common subsequences commun acm vol pp s kataria w browuer p mitra c l giles automatic extraction data points text blocks two dimensional plots digital documents proc rd nat conf artif intell volume pp m khabsa p treeratpituk c l giles ackseer reposi tory search engine automatically extracted acknowledg ments digital libraries proc th acm ieee cs joint conf digital libraries pp j kittler m hatef r p w duin j matas combining classi ers ieee trans pattern anal mach intell vol pp mar g w klau ljubiic p mutzel u pferschy r weiskircher fractional prize collecting steiner tree problem trees berlin germany springer j m kleinberg e tardos algorithm design volume read ing ma usa addison wesley h li councill w c lee c l giles citeseerx archi tecture web service design academic document search engine proc th int conf world wide web pp y liu k bai p mitra c l giles tableseer automatic table metadata extraction searching digital libraries proc th acm ieee cs joint conf digital libraries pp s mandal s p chowdhury k das b chanda automated detection segmentation table contents page document images proc th int conf image anal pro cess pp o medelyan h witten thesaurus based automatic key phrase indexing proc th acm ieee cs joint conf digital libraries pp p sojka m li sska art mathematics retrieval proc acm symp document eng pp j g stewart j callan genre oriented summarization phd thesis carnegie mellon univ pittsburgh pa s tuarob s bhatia p mitra c l giles automatic detec tion pseudocodes scholarly documents using machine learning proc th int conf document anal recog pp s tuarob p mitra c l giles improving algorithm search using algorithm co citation network proc th acm ieee cs joint conf digital libraries pp s tuarob p mitra c l giles classi cation scheme algorithm citation function scholarly works proc th acm ieee cs joint conf digital libraries pp s tuarob p mitra c l giles hybrid approach dis cover semantic hierarchical sections scholarly documents proc th int conf document anal recog pp s tuarob l pouchard p mitra c giles generalized topic modeling approach automatic document annotation int j digital libraries vol pp s tuarob l c pouchard c l giles automatic tag recom mendation metadata annotation using probabilistic topic mod eling proc th acm ieee cs joint conf digital libraries pp s tuarob c s tucker fad stay predicting prod uct market adoption longevity using large scale social media data proc asme int des eng technical conf comput inform eng conf available s tuarob c s tucker quantifying product favorability extracting notable product features using large scale social media data j comput inform sci eng vol available article aspx articleid s vutukury j j garcia luna aceves simple approxima tion minimum delay routing sigcomm comput commun rev vol pp aug j wang mean variance analysis new document ranking ory information retrieval proc th eur conf ir res adv inform retrieval pp z wu s das z li p mitra c l giles searching online book documents analyzing book citations proc acm symp document eng pp r zanibbi d blostein recognition retrieval mathe matical expressions int j document anal recog vol pp suppawongtuarob received bse mse degrees computer science engineering university michigan ann arbor ms degree industrial engineering pennsylvania state university phd degree computer science engineering penn state university currently faculty member faculty information communication technology mahidol university thailand research interests include data min ing large scale scholarly social media healthcare domains applying multiple cutting edge techniques machine learning topic modeling sentiment analysis etc member ieee sumit bhatia research scientist wat son group ibm almaden research centre leading development cognitive ana lytic algorithms build top watson s knowl edge graph previously postdoctoral researcher xerox parc part citeseerx project penn state developed search engine searches algorithms pseudo codes academic documents pri mary research interests include elds infor mation retrieval text analytics published papers top journals conferences organizing chair social multimedia data mining workshop col located icdm served reviewer multiple con ferences journals including www cikm tkde tois webdb jasist ijcai aaai prasenjit mitra received phd degree stanford university stanford ca electrical engineering currently principal scientist qatar computing research insti tute doha qatar professor college information sciences technology pennsylvania state university university park also serves graduate faculty department computer sciences engineering af liate faculty member department industrial manufacturing engineering research interests include text mining applied machine learning digital libraries arti cial intelligence information retrieval database systems social computing visual analytics health informatics also worked senior member tech nical staff oracle corporation dbwizards narus inc author articles leading journals peer reviewed conference proceedings also member acm aaai senior member ieee c lee giles david reese professor college information sciences technology pennsylvania state university also profes sor computer science engineering profes sor supply chain information systems director intelligent systems research lab oratory directs citeseerx project codirects chemx seer project penn state fellow ieee information computing topic please visit digital library www computer org publications dlib