jinni intelligent mobile agent programming intersection java prolog paul department computer science university north texas box texas mail cs edu 
jinni java inference engine networked interactor lightweight multi threaded logic programming language intended flexible scripting tool knowledge processing components java objects distributed applications 
jinni threads coordinated blackboards local process 
associative search term unification variant linda basic synchronization mechanism 
threads controlled tiny interpreters scripting language subset prolog 
mobile threads implemented capturing order continuations compact data structure sent network allow jinni interoperate remote high performance binprolog servers cpu intensive knowledge processing jinni components internet 
inference engines running separate threads cooperate easy flavor linda coordination protocol 
remote local dynamic database updates deterministic synchronized transactions provided top basic linda operations 
fully dynamic garbage data structures take advantage java automatic memory management 
jinni built portable java lightweight component consisting set interpreters called engines running separate thread blackboard local process efficient self contained socket client server networking layer 
jinni key features implemented compact package combining building blocks trimmed simple syntactic subset prolog multiple asynchronous inference engines running separate threads shared blackboard communicate engines simple subscribe publish linda jargon coordination protocol associative search high level networking operations allowing code mobility remote execution straightforward jinni java translator allowing packaging jinni programs java classes ability load code directly web show third party web documents text graphics multi media controlling applet contexts browsers assumptions implemented undo actions supporting assumption grammars variant prolog definite clause grammars coordination mechanism distributed components synchronized local remote thread synchronisation mechanisms built top linda style coordination framework :10.1.1.10.2201
associative search implemented unification pattern matching 
mobile code operations places scalable peer peer network layer forming web interconnected worlds fig synergy mobile code linda coordination allows elegant implementation 
blackboard operations implemented local threads shared local blackboard 
interaction remote blackboard needed thread simply moves place located proceed local interaction 
code state computation mobility oz distributed programming proposal object mobility transparent mobile entity state objects live code 
mobility live code called computation mobility 
requires interrupting execution moving state runtime system stacks instance site resuming execution 
clearly languages hard completely impossible achieve 
general magic telescript agent programming framework ibm java aglets luca cardelli oblique pioneered implementation technologies achieving computation mobility :10.1.1.10.2201
jinni live code mobility case jinni computation mobility accelerator expressiveness lifting device 
live thread migrate jinni faster remote binprolog engine cpu intensive come back results just sent back results linda coordination 
simple way ensure atomicity security complex networked transactions agent code move site computation follow existing security rules access possibly large databases come back results 
simple move return operations transport computation server back 
