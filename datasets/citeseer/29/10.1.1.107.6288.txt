kluwer academic publishers boston 
manufactured netherlands 
strategies combined learning logic programs deis unibo deis universita viale bologna italy lu moniz pereira di fct unl pt de arti cial departamento de informatica de ci universidade nova de lisboa monte da portugal editor esposito michalski saitta 
discuss adoption valued setting inductive concept learning 
distinguishing true false unknown useful situations decisions basis scarce ambiguous contradictory information 
valued setting learn de nition target concept opposite considering positive negative examples instances disjoint classes 
pointed de raedt bruynooghe de raedt typically case autonomous agent incremental way gathers information surrounding world 
agent needs distinguish true false unknown needs learn richer setting 
purpose adopt class extended logic programs elp short sequel representation language learning valued setting 
elp contains kinds negation default negation plus second form negation called explicit combination recognized expressive means knowledge representation 
adoption elp allows deal directly language incomplete contradictory knowledge exceptions default negation truly negative information means explicit negation pereira alferes alferes pereira alferes :10.1.1.50.1751
instance alferes pereira dix baral gelfond damasio pereira itis shown elp applicable diverse domains knowledge representation concept hierarchies reasoning actions belief revision counterfactuals diagnosis updates debugging :10.1.1.20.6815
show various approaches strategies adopted inductive logic programming ilp henceforth learning elp extension founded semantics 
inoue inoue answer sets semantics learning process starts set positive negative examples plus background knowledge form extended logic program 
positive negative information training set treated equally learning de nition positive concept explicitly negated concept coverage examples tested adopting slx interpreter elp founded semantics explicit negation wfsx de ned alferes pereira dix valid paraconsistent version damasio pereira 
agent needs distinguish true false unknown needs learn richer setting 
purpose adopt class extended logic programs elp short sequel representation language learning valued setting 
elp contains kinds negation default negation plus second form negation called explicit combination recognized expressive means knowledge representation 
adoption elp allows deal directly language incomplete contradictory knowledge exceptions default negation truly negative information means explicit negation pereira alferes alferes pereira alferes :10.1.1.50.1751
instance alferes pereira dix baral gelfond damasio pereira itis shown elp applicable diverse domains knowledge representation concept hierarchies reasoning actions belief revision counterfactuals diagnosis updates debugging :10.1.1.20.6815
show various approaches strategies adopted inductive logic programming ilp henceforth learning elp extension founded semantics 
inoue inoue answer sets semantics learning process starts set positive negative examples plus background knowledge form extended logic program 
positive negative information training set treated equally learning de nition positive concept explicitly negated concept coverage examples tested adopting slx interpreter elp founded semantics explicit negation wfsx de ned alferes pereira dix valid paraconsistent version damasio pereira 
default negation learning process handle exceptions general rules 
accordingly epistemological varieties occur resulting mutual combination general general solutions positive negative concepts 
possibilities expressed elp discuss factors taken account choosing level generality ofeach combination de ne speci learning strategy cope contradictions 
concentrate single predicate learning sake simplicity 
separately learned positive negative concepts may con ict order handle possible contradiction contradictory learned rules defeasible making learned de nition positive depend default negation negative concept vice versa de nition introduced exception 
way coping contradiction generalized learning disjoint classes modi ed order take account preferences multiple learning agents information sources see :10.1.1.107.6288
organized follows 
rst motivate elp target background language section introduce new ilp framework section 
examine section factors taken account choosing level generality learned theories 
section proposes learned de nitions elp order avoid inconsistencies unseen atoms mutually non deterministic rules incorporate exceptions negation default 
information normally expressed positively mental linguistic economics closed world assumption cwa absent non explicitly obtainable information usually negation positive information 
means information available cwa 
cwa indispensable contexts viz 
airports listed assumed non existent residence listed phone book may ruled exists phone 
reconciled reading classical negation complies excluded middle provision new form negation dubbed logic programming explicit negation pereira alferes ignores provision adopted elp :10.1.1.50.1751
requires need revising assumptions introducing third named unde ned framework 
fact combine instance viewpoints worlds faithfulness confused assuming married appears faithful faithful true 
evidence simply information simultaneous assumptions falsity 
assumption leads contradiction retract valued setting means making unde ned 
say example covered program pj wfsx slx procedure correct respect wfsx contradictory programs coverage examples tested verifying slx approach learning extended logic programs consists initially applying conventional ilp techniques learn positive de nition negative de nition techniques slx procedure substitutes standard logic programming proof procedure test coverage examples 
ilp techniques depend level generality de nitions look general solution general solution problem learning concept complement 
practice unique real systems usually learn theories general closely approximate 
concepts signify approximations theoretical concepts 
adopting bottom methods relative general generalization plotkin golem system muggleton feng inverse resolution muggleton buntine inverse entailment matwin :10.1.1.23.1676
conversely adopting top re ning method cf 
lavrac system quinlan progol muggleton :10.1.1.31.1630

strategies combining di erent generalizations generality concepts learned important issue learning valued setting 
practice unique real systems usually learn theories general closely approximate 
concepts signify approximations theoretical concepts 
adopting bottom methods relative general generalization plotkin golem system muggleton feng inverse resolution muggleton buntine inverse entailment matwin :10.1.1.23.1676
conversely adopting top re ning method cf 
lavrac system quinlan progol muggleton :10.1.1.31.1630

strategies combining di erent generalizations generality concepts learned important issue learning valued setting 
valued setting generality de nition chosen extension generality set false atoms automatically decided complement true atoms set 
valued setting extension set false atoms depends generality de nition learned negative concept 
consequently thinks attack better money 
words maximize minimize concept 
concepts order minimize risk carries standards lot money meets kind reasoning run lot money meets attacker run lot money give money give money meets give money meets attacker lot money may prefer run risks 
case relax attacker concept attacker relax 
run little money meets attacker attacker attacker various notions attacker learnt basis previous experience man see :10.1.1.107.6288

strategies eliminating learned contradictions learnt de nitions positive negative concepts may overlap 
case contradictory classi cation objective literals intersection 
order resolve con ict distinguish types literals intersection belong training set dubbed unseen atoms see 
unseen literals con ict resolved classifying unde ned arguments supporting classi cations equally strong 
literals training set con ict resolved giving priority classi cation stipulated training set 
words literals training set covered opposite de nition considered exceptions de nition 
interaction positive negative de nitions exceptions 
contradiction unseen literals unseen literals intersection unde ned classi cation obtained making opposite rules mutually defeasible non deterministic see baral gelfond alferes pereira :10.1.1.20.6815
target theory consequently expressed way respectively de nitions learned positive negative concept obtained renaming positive predicate explicit negation indicate superscripts de nitions learned separately positive negative concepts 
want act exception 
case contradiction introduce mutual circularity unde wfsx 
literal intersection stable models containing literal containing opposite literal 
example show possible cases literal learning valued setting 
examples consistently covered de nitions 
unseen literals contradiction 
literals contradiction classi ed unde ned considered exception positive de nition classi ed negative 
identifying contradictions unseen literals useful interactive theory revision system ask oracle classify literal leading contradiction accordingly revise general solutions theory revision system revise damasio de raedt bruynooghe de raedt bruynooghe :10.1.1.24.9625
detecting uncovered literals points theory extension 
extended logic programs represent disjoint classes pn 
learn disjoint classes training set contains number facts number predicates pn 
de nition learned positive examples literals training set classi ed belonging pi negative examples literals classes 
best clause far separately stored clause compared re nement replaced re nement better 
specialization loop stops best clause beam consistent beam empty 
system returns best clause far 
beam may empty consistent clause case system return inconsistent clause 
order nd general solutions golem muggleton feng system employed :10.1.1.23.1676
nite founded model computed slx transformed replacing literals form new predicate symbols form neg golem called computed model background knowledge 
output golem parsed order extract clauses generated post processed dropping literals 
clauses extracted belong general solution 
fact obtained randomly picking couples examples computing choosing consistent covers largest number positive examples 
multi source learner implements algorithm integrating knowledge produced separate learners 
multi strategy learning adopted instance improvement classi cation accuracy gams equip autonomous agent capabilities survive hostile environment de raedt 
approach considers separate concept learners order learn de nition concept opposite 
multiple opposite target concepts constitute part learned knowledge base learning element adopt bottom top strategy learning rules 
easily generalized learn de nitions disjoint classes concepts multiple agent learning see :10.1.1.107.6288
hypothesis general required 
second step approach devoted application strategies eliminating learned contradictions seen source learner jenkins meta level chan st learned de nitions combined obtain non contradictory extended logic program 
elps specify combinations strategies declarative way recover process consistency learned theory 

