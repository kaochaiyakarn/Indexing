development domain name system paul mockapetris usc information sciences institute marina del rey california kevin dunlap digital equipment engineering washington originally published proceedings sigcomm computer communication review vol 
august pp 

domain name system dns provides name service darpa internet 
largest name services operation today serves highly diverse community hosts users networks uses unique combination hierarchies caching datagram access 
examines ideas initial design dns discusses evolution ideas current implementations usages notes conspicuous surprises successes shortcomings attempts predict evolution 

genesis dns observation circa hosts txt system publishing mapping host names addresses encountering headed problems 
hosts txt name simple text file centrally maintained host sri network information center sri nic distributed hosts internet direct indirect file transfers 
problems file costs distribution large centralized control updating fit trend distributed management internet 
simple growth cause problems evolution community hosts txt original arpanet ip tcp internet 
research arpanet role changed single network connecting large timesharing systems long haul backbone networks linking local networks turn populated workstations 
number hosts changed number timesharing systems roughly organizations number workstations roughly users 
increase directly reflected size hosts txt rate change hosts txt number transfers file leading larger linear increase total resource distributing file 
organizations forced management local network addresses gateways technology anyway quite logical want partition database allow local control local name address spaces 
distributed naming system order 
existing distributed naming systems included darpa internet ien ien xerox grapevine birrell clearinghouse systems oppen 
ien services excessively limited host specific ien provide benefit justify costs renovation 
xerox system may sophisticated name service existence research supported defense advanced research projects agency contract mda 
views contained report authors interpreted representing official opinion policy darpa government person agency connected 
permission copy fee part material granted provided copies distributed direct commercial advantage acm copyright notice title publication date appear notice copying permission association computing machinery 
copy republish requires fee specific permission 
acm sigcomm computer communication review clear heavy replication light caching fixed number hierarchy levels appropriate heterogeneous chaotic style darpa internet 
importing xerox design meant importing supporting elements protocol architecture 
reasons new design begun 
initial design dns specified rfc rfc 
outward appearance hierarchical name space typed data nodes 
control database delegated hierarchical fashion 
intent data types extensible addition new data types continuing indefinitely new applications added 
system modified refined areas rfc rfc current specifications rfc rfc usage quite similar original definitions 
drawing exact line experimental production status difficult saw hosts dns sole means accessing naming information 
dns replaced hosts txt mechanism older hosts standard mechanism hosts particularly berkeley unix track progress network operating system design 

dns design base design assumptions dns provide information hosts txt 
allow database maintained distributed manner 
obvious size limits names name components data associated name interoperate darpa internet environments possible 
provide tolerable performance 
derivative constraints included cost implementing system justified provided extensible services 
particular system independent network topology capable encapsulating name spaces 
order universally acceptable system avoid trying force single os architecture organizational style users 
idea applied way concerns case sensitivity idea system useful large hosts isolated pcs 
general wanted avoid constraints system due outside influences permit different implementation structures possible 
hosts txt emulation requirement particularly severe cause early examination schemes storing data name address mappings 
hierarchical name space obvious minimal solution distribution size requirements 
interoperability performance constraints implied system allow database information buffered client source data access source possible timely 
initial dns design assumed necessity striking balance lean service completely general distributed database 
lean service desirable result implementation efforts early availability 
general design amortize cost applications provide greater functionality increase number environments dns eventually 
criterion led conscious decision omit functions expect state art database 
particular dynamic update database related atomicity voting backup considerations omitted 
intent add eventually believed system included features viewed complex accepted community 
architecture active components dns major types name servers resolvers 
name servers repositories information answer queries information possess 
resolvers interface client programs embody algorithms necessary find name server information sought client 
functions may combined separated suit needs environment 
cases useful centralize resolver function special name servers organization 
structure shares cached information acm sigcomm computer communication review allows capable hosts pcs rely resolving services special servers needing resolver pc 
name space dns internal name space variable depth tree node tree associated label 
domain name node concatenation labels path node root tree 
labels variable length strings octets octet label bit value 
zero length label reserved root 
name space searching operations operations defined done case insensitive manner assuming ascii 
labels paul paul paul match 
matching rule effectively prohibits creation brother nodes labels having equivalent spelling different case 
rational system allows sources information specify canonical case frees users having deal case 
labels limited octets names restricted octets total aid implementation limit easily changed need arose 
dns specification avoids defining standard printing rule internal name format order encourage dns encode existing structured names 
configuration files domain system represent names character strings separated dots applications free 
example host names internal dns rules isi edu name labels null name root usually omitted 
mailbox names stated user domain generally local part organization encode text left single label including dot delimiting dns configuration file rule part 
similar encodings developed file names dns decouples structure tree implicit semantics 
done keep names free implicit semantics leave choices implicit semantics wide open application 
name host fewer labels name user tree organized network grouping 
particular sections name space strong implicit semantics associated name particularly dns encapsulates existing name space provide inverse mappings addr arpa ip addresses host name section domain space default assumption way tell definitely name represents look data associated name 
recommended name space structure hosts users typical applications mirrors structure organization controlling local domain 
convenient dns features distributing control database efficient parallels tree structure 
administrative decision rfc top levels correspond country codes broad organization types example edu educational mil military uk great britain 
data attached names dns constrain data applications attach name fix data format completely 
dns need specify primitives data structuring replies queries limited relevant information dns services keep track servers server addresses data name dns organized set resource records rrs rr carries known type class field followed applications data 
multiple values type represented separate rrs 
types meant represent resources functions example host addresses mailboxes 
currently defined 
class field meant divide database orthogonally type specifies protocol family instance 
darpa internet class imagined classes allocated chaos iso similar protocol families 
hoped try setting function specific classes independent protocol universal mail registry 
classes allocated darpa internet chaos 
decision multiple rrs single type including multiple values single rr differed xerox system clear choice 
space efficiency single rr multiple values attractive multiple rr option cut maximum rr size 
appeared promise simpler dynamic update protocols suited limited size datagram environment response carry items fit maximum size packet regard partial rr transport 
acm sigcomm computer communication review database distribution dns provides major mechanisms transferring data ultimate source ultimate destination zones caching 
zones sections system wide database controlled specific organization 
organization controlling zone responsible distributing current copies zones multiple servers zones available clients internet 
zone transfers typically initiated changes data zone 
caching mechanism data acquired response client request locally stored requests client 
note intent mechanisms invisible user see single database obvious boundaries 
zones zone complete description contiguous section total tree name space pointer information contiguous zones 
zone divisions connected nodes total name space zone single node tree typically simple subtree 
organization point view gets control zone name space parent organization delegate consisting single node 
parent organization inserting rrs zone mark zone division 
new zone grown arbitrary size delegated involving parent parent retains control initial delegation 
example isi edu zone created owner edu domain mark zone boundary edu isi edu 
responsibilities organization include maintenance zone data providing redundant servers zone 
typical zone maintained text form called master file system administrator loaded master server 
redundant servers manually reloaded automatic zone refresh algorithm part dns protocol 
refresh algorithm queries serial number master zone data copies zone serial number increased 
zone transfers require tcp reliability 
particular name server support number zones may may contiguous 
name server zone need part zone 
scheme allows arbitrary distribution efficient database distributed parallel name hierarchy 
server answers zone data opposed cached data marks answer authoritative 
goal scheme organization able domain lacks communication host resources supporting domain name service 
method organizations resources single server form buddy systems organization similar means 
especially desirable clients organizations far apart network terms data available separated sites 
way servers agree provide name service large communities uucp receive master files mail ftp subscribers 
caching addition planned distribution data zone transfers dns resolvers combined name server resolver programs cache responses queries 
mechanism controlling caching time live ttl field attached rr 
field units seconds represents length time response reused 
zero ttl suppresses caching 
administrator defines ttl values rr part zone definition low ttl desirable minimizes periods transient inconsistency high ttl minimizes traffic allows caching mask periods server unavailability due network host problems 
software components required behave continuously decremented ttls data caches 
recommended ttl value host names days 
intent cached answers answers authoritative server excepting changes ttl period 
components dns prefer authoritative information cached information available locally 

current implementation status dns darpa internet 
rfc catalogs dozen implementations ports ranging ubiquitous support provided part berkeley unix implementations ibm pcs lisp machines acm sigcomm computer communication review mills 
hosts txt mechanism older hosts dns recommended mechanism 
hosts available hosts txt form subset hosts measurement stahl showed approximately host names hosts txt host names available dns 
current domain name space partitioned roughly top level domains 
top level domain reserved country approximately uk majority hosts subdomains named top level domains named organization types educational edu commercial com 
hosts claim multiple names different domains usually name primary aliases 
sri nic manages zones non country top level domains delegates lower domains individual universities companies organizations wish manage name space 
delegation subdomains sri nic grown steadily 
february roughly domains delegated 
march domains delegated 
approximately represent normal name spaces controlled organizations sri nic delegated domains represent network address spaces parts addr arpa longer controlled nic 
examples contemporary dns called root servers redundant name servers support top levels domain name space berkeley subdomain domains delegated sri nic edu domain 
root servers basic search algorithm dns allows resolver search downward domains access 
resolvers typically configured hints pointing servers root node top local domain 
resolver access root server access domain space resolver network partitioned rest internet access local names 
resolver accesses root servers resolver builds cached information servers lower domains availability root servers important robustness issue root server activity monitoring provides insights dns usage 
access root top level zones important root domain top level domains managed sri nic supported redundant name servers 
root servers scattered major long haul backbone networks internet redundant tops systems running jeeves unix systems running bind 
typical traffic root server order query second correspondingly higher rates root servers unavailable 
broad trend query rate generally upward day day month comparisons load driven changes implementation algorithms timeout tuning growth client population 
example bad release popular domain software drove averages times normal load extended periods 
estimate root server traffic eliminated improvements various resolver implementations aggressive retransmission better caching 
number clients access root servers estimated measurement tools tops version 
root servers keep track clients root server initialization clients typically account queries single server 
coordinated measurements tops root servers typically show approximately distinct clients entries 
number clients falling organizations adopt strategies concentrate queries caching accesses outside local organization 
clients appear static priorities selecting root server failure particular root server results immediate increase traffic servers 
vast majority queries types information host name address mappings address host mappings new style mail information called mx 
numbers vary widely new software distributions spread 
root servers refer queries servers lower level domains 
berkeley unix support dns provided university california berkeley partially research distributed systems partially necessity due growth campus network dunlap dunlap 
result berkeley internet name acm sigcomm computer communication review domain bind server 
berkeley serves example large delegated domain certainly sophisticated experience 
bind berkeley organization darpa internet bring machines network applications solely dependent dns doing network host address resolution 
berkeley started install machines campus dependent name server spring 
fall mail gateways darpa internet converted depend dns meant entire campus adopt domain style mail addresses 
educating sophisticated berkeley user community new form addressing turned major task 
single biggest objection user community due mail addresses obsolete closely followed initial lack shorthands search rules initial implementation 
dns transition painful need clear shown table gives number hosts subnets subdomains berkeley years 
example january february berkeley added hosts working days average new hosts working day 
date hosts subnets subdomains january february march note berkeley divided domain multiple zones administrative convenience 

surprises operation dns revealed issues came surprises developers reflection quite unsurprising 
refinement semantics main role dns act repository information initial assumption form content information understood 
turned bad assumption 
existing common concepts ip host addresses sources problems knew support multiple addresses single host drawn long discussions addresses attached host name ordered metric 
performance performance underlying network worse original design expected 
growth number networks gateway mechanisms keeping track connectivity leading lost paths unidirectional paths 
time growth load plus addition lower speed links led longer delays 
problems manifest root servers logs reveal instances repeated copies query source 
tops root servers take milliseconds process vast majority queries clients typically see response times milliseconds seconds closest root server depending location internet 
situation queries delegated domains worse network troubles name servers domains heavily loaded hosts central networks 
queries arpanet delegated domains typically take seconds prime time second times occasional worst cases 
interesting note times access remote name server similar seen xerox homogeneous name service larson 
related surprise difficulty making reasonable measurements dns performance 
planned measure performance dns components order estimate costs enhancement growth guide tuning existing retransmission intervals measurements swamped unrelated effects due gateway changes new dns software releases 
servers perform better load increases due fewer page faults clearly stable situation long term leading concerns behavior network performance improve able deliver higher loads servers 
performance lookups queries need network access pleasant surprise 
replacing fairly simple host table lookup complicated database cache access worked slow existing applications great deal 
new mechanisms typically acm sigcomm computer communication review better old regardless implementation 
reason old mechanisms created smaller database adjusted size database grew new software assumption large database 
negative caching dns provides negative responses queries 
says name question exist says name question exists requested data 
expected name misspelled second result query asked host type mailbox mailing list members host 
responses expected rare 
initial monitoring root server activity showed high percentage responses 
logs revealed queries generated programs old style host names names mail internets uucp 
case call name address conversion routines test address valid darpa internet easily determined means 
uucp mail addresses valid domain names resulted negative response root server coupled delay non local query 
expected negative responses decrease vanish hosts converted names domain name format asked mail software maintainers modify programs 
steps taken negative responses stayed range typical percentage 
reason corrective measures offset spread programs provided shorthand names search list mechanism 
search lists produce steady stream bad names try alternatives name may lead name errors 
naming system relies caching performance may need caching negative results 
mechanism added dns optional feature impressive performance gains cases supported involved name servers resolvers 
feature probably standard 

successes variable depth hierarchy variable depth hierarchy great deal right choice reasons spread workstation local network technology meant organizations participating internet finding need organize 
organizations vastly different size needed different numbers organizational levels 
example large international companies small registered domain system 
variable depth hierarchy possible encapsulate fixed level variable level system 
example uk name service nrs dns mutually encapsulate name space 
scheme may interoperate directory service development iso ccitt 
networks dns protocols datatypes standardized dns hierarchical name syntax mail addressing quarterman 
organizational structuring names particular top level organizational structure current dns quite controversial principle names independent network topology quite popular 
structure top levels continue subject debate 
proposals generate roughly equivalent amount support 
authors opinion real possibility wholesale change political decision change structure domain name space resemble name space proposed iso ccitt directory service 
technical issue dns flexible accommodate political choice 
datagram access datagrams preferred method accessing name servers successful probably essential unexpectedly bad performance darpa internet 
restriction approximately bytes data turns problem performance better acm sigcomm computer communication review achieved tcp circuits os resources tied 
obvious drawback datagram access need develop refine retransmission strategies quite developed tcp 
unnecessary traffic generated resolvers developed point working authors lost interest tuning systems imported known versions code track tuning updates 
additional section processing name server answers query addition information uses answer question free include response information sees fit long data fits single datagram 
idea allow responding server anticipate logical request answer asked significant added communication cost 
example root servers pass back name host include address available assumption host address needed information 
experiments show feature cuts query traffic half 
caching caching discipline dns works unexpectedly bad performance internet essential success system 
problems caching relate databases query strategies reliable useful 
example rrs type particular node ttl time simultaneously administrators assign ttls mistaken idea assigning sort priority 
administrators fond picking short ttls changes take effect rapidly changes rare need timeliness 
related concern security reliability problems caused indiscriminate caching 
existing resolvers cache information responses regard reasonableness 
resulted numerous instances bad information circulated caused problems 
similar difficulties encountered administrator reversed ttl data values resulting distribution bad data ttl years 
various measures reduced vulnerability error security system depend integrity network addressing mechanism questionable era local networks pcs 
mail address cooperation agreement representatives uucp darpa internet communities led agreement organizationally structured domain names mail addressing routing 
transition messy multiply encoded mail addresses past far complete possibility cleaning mail addresses clearly demonstrated 

shortcomings type class growth draft dns specifications available nearly unanimous criticism type class data specifiers bits draft expanded bits allow new definitions 
years dns new types adopted types dropped new classes allocated 
clearly demand new types classes completely misunderstood current dns new definitions difficult 
problem existing software regards types classes compile time constants requires recompilation deal changes tractable problem new data types classes useless semantics carefully designed published applications created consensus reached new system internet 
means new types face series technical political hurdles 
methodology guidelines aid design new types information needed 
complicated just listing values interest application involves design special name space sections ttl selections produce acceptable performance semantics decisions produce desired binding lookup sequence smaller bindings 
single lookup method overwhelmingly attractive particular application designer despite fact may overlap conflict application data 
factor members internet different views proper assumptions approach particular problem 
acm sigcomm computer communication review mail example 
debate mx data type system rfc defined standard method routing mail domain part local part domain mail address 
mx represented simple addition dns required changes mail servers benefits required critical mass 
numerous suggestions extend dns provide mail destination registry individual user level basics service understanding consensus single plan remains elusive 
part constituency demands user level mail binding option top mx advocate fresh start lots features mail forwarding list maintenance best choice agent binding choice chooses map mailbox level mailbox data available 
easy upgrading applications converting network applications dns simple task 
ideal applications converting hosts txt recompiled dns rarely case 
part problem transient failure 
distributed naming system nature periods access particular information 
applications handle condition appropriately 
looking mail destinations discard mail due transient failures afford wait indefinitely 
failures anticipated quite rare dns stabilizes face chicken egg problem converting new software 
part problem access naming system needs integrated operating system greater degree providing system call resolver 
users need able access services shell level specify search lists defaults manner consistent system operations 
distribution control vs distribution expertise responsibility distributing authority database distribute corresponding amount expertise 
maintainers fix things want understand systems provided 
systems designers anticipate try compensate technical means 
dns furnishes examples principle initial policy delegate domain organization filled form listing redundant servers essentials 
required organization demonstrate redundant servers real data delegated domain probably insisted different networks trusting assurances servers represent single point failure 
documentation system examples easily explained narration 
sample ttl values mapped hour copied text said values days ignored 
documentation written assumption examples read 
debugging system hampered questions software versions parameters 
values accessible protocol 

just classification previous issues successes surprises shortcomings open debate perspective reader question dns idea modifications hosts txt scheme postponed need new system reduced quantitative arguments dns 
dns probably reduced community wide administrative communication support load 
need distribute functionality believe 
need new functionality opportunities services key criteria judgment 
authors perspective justify dns 
lot choices differently starting main pieces advice valuable starting caching heterogeneous environment include features caching negative responses 
difficult remove functions systems get new function added 
community convert acm sigcomm computer communication review new service stay old convert new support 
unfortunate effect making functions complex new features added 
capable implementors lose interest new system delivers level performance expect easily motivated optimize resources provide easily guidelines administrators systems 
distributed software include version number table parameters 
possible systems include technical means transferring tuning parameters defaults installations requiring attention system maintainers 
allowing variations implementation structure provide service great idea allowing variation provided service causes problems 

directions dns production difficult change research naming systems particularly emerging iso directory services may provide impetus additions support style addresses mail constructed layer top dns albeit sophisticated protection update structuring rules 
data description techniques iso standards provide better mechanism adding data types data structuring rules proven dns infrastructure speed prototyping iso applications 
value ubiquitous name service consistent name space levels protocol suite operating system obvious equally obvious tradeoffs performance generality distribution require different styles different levels 
example system suitable managing file names local disk substantially different system maintaining internet wide mailing list 
challenge develop approach conceptually structures total task layers coherent organization 
research naming systems typically resulted proposals systems replace encapsulate systems systems allow translations separate name spaces data formats approaches advantages drawbacks 
dns efforts unify name space special domains specific networks place dns category 
success universal encouraging solve user difficulty obscure encodings systems 
technical political solutions growing complexity naming growing need 
birrell dunlap dunlap ien larson birrell levin needham schroeder grapevine exercise distributed computing communications acm april 
dunlap bloom experiences implementing bind distributed name server darpa internet proceedings usenix summer conference atlanta georgia june pages 
dunlap name server operations guide bind unix system manager manual smm 
berkeley software distribution virtual vax version 
university california april 
postel jon internet name server ien august 
larson personal communication 
mills mills proceedings acm sigcomm symposium august 
oppen oppen dalal clearinghouse decentralized agent locating named objects distributed environment acm acm sigcomm computer communication review transactions office information systems july 
expanded version available xerox report opd october 
quarterman quarterman john notable computer networks communications acm october volume number 
tcp ip interoperability conference december 
note rfc refers papers request comments series ien refers darpa internet experiment notes 
rfcs may obtained network information center sri international menlo park ca authors papers 
rfc rfc rfc mockapetris domain names concepts facilities rfc usc information sciences institute november 
obsolete superseded rfc 
mockapetris domain names implementation specification rfc usc information sciences institute november 
obsolete superseded rfc 
postel jon reynolds joyce domain requirements rfc october 
rfc mockapetris paul domain system changes observations rfc january 
rfc rfc partridge craig mail routing domain system rfc january 
name domain transition rfc november 
rfc mockapetris domain names concepts facilities rfc usc information sciences institute november 
rfc mockapetris domain names implementation specification rfc usc information sciences institute november 
stahl stahl ddn domain naming administration registration procedures policy second acm sigcomm computer communication review 
