agent oriented software engineering internet applications franco zambonelli nicholas jennings andrea omicini michael wooldridge dipartimento di scienze dell universita di modena reggio emilia modena italy franco zambonelli unimo department electronics computer science university southampton southampton bj united kingdom ecs soton ac uk dipartimento di informatica sistemistica universita di bologna viale bologna italy deis unibo department computer science university liverpool liverpool zf united kingdom wooldridge csc liv ac uk july metaphors autonomous agents agent societies signi cant impact processes analysis design development complex software systems internet 
chapter concentrate predominantly agent societies show coordination models technologies provides framework engineering internet multi agent systems 
introduce concepts agent multi agent system agent oriented software engineering highlight speci issues arise take internet environment inhabit 
brief survey state art area agent oriented methodologies paying particular attention gaia methodology agent oriented analysis design 
gaia originally conceived benevolent agents inhabiting closed systems 
broaden scope show insights area coordination models incorporated order suitable developing internet applications 
brief survey state art area agent oriented methodologies paying particular attention gaia methodology agent oriented analysis design 
gaia originally conceived benevolent agents inhabiting closed systems 
broaden scope show insights area coordination models incorporated order suitable developing internet applications 
published chapter book coordination internet agents models technologies applications omicini zambonelli klusch tolksdorf eds springer 
agent computing rapidly emerging powerful technology development complex software systems contributions di erent research areas including arti cial intelligence software engineering robotics distributed computing :10.1.1.119.2204
developing applications terms autonomous software agents exhibit proactive intelligent behaviour interact terms high level protocols languages leads new programming paradigm 
paradigm term agent oriented software engineering suited tackling complexity today software systems 
firstly today software systems required deal complex unpredictable execution environments object oriented languages applications unable model tackle natural clean way 
internet probably complex unpredictable environment application designers face today internet applications arguably important area agent paradigm ful ll potential 
internet probably complex unpredictable environment application designers face today internet applications arguably important area agent paradigm ful ll potential 
secondly abstraction level de ned agent approach higher object oriented paradigm behaviour agents closely re ects human beings delegated perform support 
new programming paradigm development applications implies new programming abstractions techniques 
necessity born signi cant body research undertaken de ning developing new models systems building agent multi agent systems 
orts include problems related de nition suitable architectures agents agent communication languages coordination model agents models speci cation veri cation multi agent systems :10.1.1.125.3310:10.1.1.27.9180:10.1.1.19.3327:10.1.1.58.9605
development complex multi agent systems requires new models technologies new methodologies support developers engineered approach analysis design systems 
need especially pressing multi agent systems break niche technology part mainstream software engineer 
years attempts develop agent oriented modelling techniques methodologies :10.1.1.53.3254:10.1.1.101.5226
techniques regarded comprehensive methodology analysis design multi agent systems 
necessity born signi cant body research undertaken de ning developing new models systems building agent multi agent systems 
orts include problems related de nition suitable architectures agents agent communication languages coordination model agents models speci cation veri cation multi agent systems :10.1.1.125.3310:10.1.1.27.9180:10.1.1.19.3327:10.1.1.58.9605
development complex multi agent systems requires new models technologies new methodologies support developers engineered approach analysis design systems 
need especially pressing multi agent systems break niche technology part mainstream software engineer 
years attempts develop agent oriented modelling techniques methodologies :10.1.1.53.3254:10.1.1.101.5226
techniques regarded comprehensive methodology analysis design multi agent systems 
gaia methodology attempts speci cally tailored analysis design multi agent systems deals micro intra agent level macro inter agent level analysis design :10.1.1.10.2242
gaia presently stands general methodology kinds multi agent system 
intended support development distributed problems solvers system constituent components known design time closed system agents expected cooperate achievement global goal 
development complex multi agent systems requires new models technologies new methodologies support developers engineered approach analysis design systems 
need especially pressing multi agent systems break niche technology part mainstream software engineer 
years attempts develop agent oriented modelling techniques methodologies :10.1.1.53.3254:10.1.1.101.5226
techniques regarded comprehensive methodology analysis design multi agent systems 
gaia methodology attempts speci cally tailored analysis design multi agent systems deals micro intra agent level macro inter agent level analysis design :10.1.1.10.2242
gaia presently stands general methodology kinds multi agent system 
intended support development distributed problems solvers system constituent components known design time closed system agents expected cooperate achievement global goal 
reasons gaia suitable analysis design internet applications openness self interest key factors 
main reasons extant agent oriented methodologies including gaia ill suited open systems conceive interactions occurring directly agents 
example systems agent mediated auctions opposing forces buyers sellers attempting sell high price attempting buy low price naturally lead reasonable pricing goods 
perspective typically leads conception multi agent system society agents mutual interactions agents environment leads useful global behaviour 
correspondingly agent observed di erent perspectives see inside individual software system purpose structure technology intra agent viewpoint outside part society interacting individuals accessing resources exploiting social infrastructure inter agent viewpoint 
aspect multi agent system radical departure traditional software systems main topic interest chapter 
precisely describe multi agent abstracting fundamental concepts agents taken individuals ii interactions agents communication acts iii mutual dependencies agents social relationships organisational relationships :10.1.1.125.3310:10.1.1.41.4369
clearly aspects related interagent viewpoint represented concepts characterise multi agent system society interacting individuals 
particular may think ii iii di erent levels social interaction 
speech acts agent communication languages constitute basic elements interaction organisational relationships provide conceptual framework agent speci ed position role society motivates structures interactions agents 
organisation agents gives multi agent system knowledge competence abilities provided individual agents represents multi agent approach 
fact possible change behaviour multiagent system changing constituent agents merely altering organisational relationships 
generally speaking means essence multiagent system implies organisational structures societies agents taken account rst class entities analysed designed implemented 
engineering multi agent system seeking develop agent oriented methodology obvious point departure consider object oriented methodologies 
methodologies gained widespread acceptance 
particular emphasis techniques encapsulation interaction entities suggests multi agent system built exploiting object oriented methodology :10.1.1.103.1632
object oriented approaches fall short supporting full notions agents organisations rst class entities 
hardly surprising represent main distinguishing features multi agent systems respect systems 
object oriented methodologies objects basic conceptual model support capturing reactive proactive behaviour maintaining balance 
additionally rst class notion organisational structure object oriented world 
approaches usually assume centralised view knowledge systems fail provide adequate models support societal view multi agent systems 
commonkads approach attempts overcome limitations explicitly introducing methodology abstraction agent society 
simply reduces modelling society collection interacting entities identi cation concepts social tasks social laws 
models approaches attempt model implement multi agent systems organisation oriented point view 
help way agentoriented methodologies explicitly multi agent systems organisations societies :10.1.1.41.4369
proposals de ne organisation merely collection interacting roles failing deal key point social tasks 
gaia methodology gaia methodology agent oriented analysis design explicit organisational point view 
gaia analysis design separated phases see 
analysis aims develop understanding system structure terms roles agent organisation interactions implementation details 
data driven coordination models linda interact external world exchanging data structures coordination media basically acts shared data space 
observable behaviour point view coordination media entities requesting data reading extracting dataspace 
coordination laws determine data structures represented stored accessed consumed 
coordination media basically handles interaction space terms entities interacting data exchange synchronisation data occurrences 
coordination models provide way programming coordination laws built coordination media proposals de ne exible coordination media default coordination laws changed adapted speci coordination needs system :10.1.1.58.9605
refer interested reader chapters respectively detailed formal characterisation coordination models survey control driven data driven models 
interest coordination model data control driven models system terms inter agent interactions occurring occurring coordination media embedding coordination laws possibly programmable interactions consequently conform 
adopting modelling analysis design multi agent system provides means dealing shortcomings gaia methodology 
control driven data driven models adopted handle multiagent system interactions data oriented models additional important advantage 
concurrency practice experience february 
booch 
object oriented analysis design second edition 
addison wesley reading ma 
brazier dunin keplicz jennings treur :10.1.1.19.3327
formal speci cations multi agent systems real world case 
international conference multiagent systems icmas pages 
june 
brazier dunin keplicz jennings treur 
www cs unibo case ps gz 
paolo ciancarini 
coordination models languages software integrators 
acm computing surveys june 
ferber :10.1.1.41.4369
meta model analysis design organizations multi agent systems 
proceeding rd international conference multi agent systems icmas 
june 
finin fritzson mckay mcentire 
kendall 
role modelling agent system analysis design implementation 
st international symposium agent systems applications 
ieee cs press october 
kinny george methodology modelling technique systems bdi agents :10.1.1.27.9180
workshop modelling autonomous agents multi agent world lnai pages 
springer verlag 
malone 
interdisciplinary study coordination 
acm 
wooldridge jennings 
intelligent agents theory practice 
knowledge engineering review 
wooldridge jennings kinny :10.1.1.10.2242
gaia methodology agentoriented analysis design 
journal autonomous agents multi agent systems appear 

