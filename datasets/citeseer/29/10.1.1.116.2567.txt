scalable algorithm answering queries views university washington rap cs washington edu problem answering queries views find efficient methods answering query set previously materialized views database accessing database relations 
problem received significant attention relevance wide variety data management problems data integration query optimization maintenance physical data independence 
date performance proposed algorithms received little attention particular scale presence large number views unknown 
analyze previous algorithms bucket algorithm inverse rules algorithm show deficiencies 
describe minicon algorithm novel algorithm finding maximally contained rewriting conjunctive query set conjunctive views 
experimental study algorithms answering queries views 
daniela florescu marc friedman ives manolescu dan weld steve comments earlier drafts 
research funded sloan fellowship nsf iis nsf graduate research fellowship lucent technologies permission copy fee part material granted provided copies distributed direct commercial advantage vldb copyright notice title publication date appear notice copying permission large data base endowment 
copy republish requires fee special permission endowment 
proceedings th vldb conference cairo egypt 
citeseer ist edu alon levy university washington alon cs washington edu problem answering queries views rewriting queries views received significant attention relevance wide variety data management problems query optimization maintenance physical data independence data integration data warehouse web site design :10.1.1.36.3224:10.1.1.11.879:10.1.1.41.1205:10.1.1.54.6954:10.1.1.33.1999:10.1.1.53.6748:10.1.1.50.3586:10.1.1.91.3530
informally speaking problem 
suppose query database schema set view def schema 
possible answer query answers views 
main contexts problem answering queries views considered 
informally speaking problem 
suppose query database schema set view def schema 
possible answer query answers views 
main contexts problem answering queries views considered 
context goal query optimization maintenance physical data independence search expression uses views equivalent original query :10.1.1.33.1999:10.1.1.50.3586
usually assumed number views order size schema 
second context data integration views describe set autonomous heterogenous data sources 
user poses query terms mediated schema data integration system needs reformulate query refer data sources 
subsequent phase queries sources optimized executed 
search maximally contained rewriting provides best answer possible available sources 
query views conjunctive select project join comparison predicates maximally contained rewriting union conjunctive queries views 
key challenge context develop algorithm scales number views 
consider problem answering conjunctive queries set conjunctive views presence large number views 
general problem np complete involves searching possibly exponential number rewritings :10.1.1.54.6954:10.1.1.54.6954
previous mainly considered algorithms purpose 
bucket algorithm developed part information manifold system controls search considering subgoal query isolation creating bucket contains views relevant subgoal 
algorithm creates rewritings combining view bucket 
show combination step deficiencies scale 
previous mainly considered algorithms purpose 
bucket algorithm developed part information manifold system controls search considering subgoal query isolation creating bucket contains views relevant subgoal 
algorithm creates rewritings combining view bucket 
show combination step deficiencies scale 
inverse rules algorithm developed primarily infomaster system considers rewritings database relation independent particular query :10.1.1.57.1452
user query rewritings combined appropriately 
show rewritings produced algorithm need processed order appropriate query evaluation 
unfortunately additional processing step algorithm duplicate done second phase bucket algorithm 
insights previous algorithms introduce minicon algorithm addresses limitations scales large number views 
believe experimental evaluation significant contribution fills void previous topic 
describe extension minicon algorithm handle comparison predicates experimental results performance 
focuses problem answering queries views select project join queries set semantics 
queries quite common data integration applications applications need deal queries involving grouping aggregation semistructured data nested structures integrity constraints 
problem answering queries views considered contexts :10.1.1.32.8198:10.1.1.36.3316:10.1.1.137.344:10.1.1.42.4880:10.1.1.41.9800:10.1.1.104.2588
contrast works focus obtaining scalable algorithm answering queries views experimental evaluation algorithms 
class select queries 
organized follows 
section presents problem formally section discusses limitations previous algorithms 
definition equivalent rewriting query set views database schema 
query equivalent rewriting database result evaluating example consider query example views 
view stores pairs papers cite stores pairs papers topic cites 
cites cites cites cites cites cites equivalent rewriting check equivalent rewriting unfold view definitions obtain show equivalent containment mapping case identity mapping 
cites cites cites cites data integration main uses algorithms answering queries views context data integration systems provide users uniform interface multitude data sources :10.1.1.36.3224:10.1.1.11.879
users pose queries terms mediated schema set relations designed capture salient aspects application 
data stored sources 
order able translate users queries queries data sources data integration system needs description contents sources 
approaches specifying descriptions describe data source view mediated schema specifying tuples source 
definition maximally contained rewriting query maximally contained rewriting query views query language 
database extensions views 
query language database extensions exists database strict subset 
conjunctive query set conjunctive views maximally contained rewriting conjunctive query may union conjunctive queries refer individual conjunctive queries conjunctive rewritings 
queries views conjunctive contain comparison predicates follows need consider conjunctive rewritings number subgoals query important emphasize point definitions considered section ensure rewriting query obtains answers possible set views main concern context data integration :10.1.1.54.6954
considering problem finding rewriting yields cheapest query execution plan views main concern algorithms answering queries views query optimization maintenance physical data independence 
concluding section revisit issue 
addition consider issue ordering results sources 
previous algorithms theoretical results answering queries views showed comparison predicates query search maximally contained rewriting confined finite space algorithm needs consider possible conjunction view atoms number subgoals query :10.1.1.54.6954:10.1.1.54.6954
queries views conjunctive contain comparison predicates follows need consider conjunctive rewritings number subgoals query important emphasize point definitions considered section ensure rewriting query obtains answers possible set views main concern context data integration :10.1.1.54.6954
considering problem finding rewriting yields cheapest query execution plan views main concern algorithms answering queries views query optimization maintenance physical data independence 
concluding section revisit issue 
addition consider issue ordering results sources 
previous algorithms theoretical results answering queries views showed comparison predicates query search maximally contained rewriting confined finite space algorithm needs consider possible conjunction view atoms number subgoals query :10.1.1.54.6954:10.1.1.54.6954
previous algorithms bucket algorithm inverse rules algorithm attempted find effective methods produce rewritings require exhaustive search 
section briefly describe algorithms point limitations 
section compare algorithms minicon algorithm show minicon algorithm significantly outperforms 
describe algorithms queries views comparison subgoals 
realizing save algorithm exploring useless combinations second phase 
explain minicon algorithm discovers interactions 
example minicon determine irrelevant query 
case query contain subgoal minicon algorithm discover cite subgoals need treated atomically 
inverse rules algorithm bucket algorithm inverse rules algorithm developed context data integration system :10.1.1.57.1452
key idea underlying algorithm construct set rules invert view definitions rules show compute tuples database relations tuples views 
views previous example algorithm construct inverse rules cites cites cites cites consider rules intuitively meaning 
tuple form extension view witness tuples relation cites 
witness sense tells relation cites contains tuple form value relation contains tuple form value order express information unknown value atoms refer functional skolem term 
tuple form extension view witness tuples relation cites 
witness sense tells relation cites contains tuple form value relation contains tuple form value order express information unknown value atoms refer functional skolem term 
note may values database cause tuple self join cites know exists value 
rewriting query set views simply composition inverse rules important advantages algorithm inverse rules constructed ahead time polynomial time independent particular query 
rewritings produced inverse rules algorithm originally described appropriate query evaluation reasons :10.1.1.57.1452
applying inverse rules extension views may invert useful computation done produce view 
second may accessing views irrelevant query 
illustrate point suppose rewriting produced inverse rules algorithm case view extension apply inverse rules extensions views 
applying yield cites cites similarly applying yield tuples cites cites cites 
algorithm considers join predicates query finds minimal additional set subgoals need mapped subgoals mapped set subgoals mapping information called minicon description mcd viewed generalization buckets 
second phase algorithm combines mcds produce rewritings 
important note way construct mcds minicon algorithm require containment checks second phase giving additional speedup compared bucket algorithm 
section describes construction mcds section describes combination step 
proof correctness algorithm omitted lack space described full version :10.1.1.116.2567
forming mcds introducing terms description algorithm 
mapping say view subgoal cov ers query subgoal mcd mapping subset variables query variables views 
intuitively mcd represents fragment containment mapping query rewriting query 
way construct mcds guarantees fragments combined seamlessly 
combination mcds satisfies property actual rewriting constructed shown 
final step algorithm rewritings removing redundant subgoals follows 
suppose rewriting includes atoms view mcds conditions satisfied resp 
variable position resp 
variable variable appear position ranges overlap existential variables case remove atoms applying homomorphism identity variables general unifier underlying justification optimization discussed applied bucket algorithm inverse rules algorithm :10.1.1.54.6954
note step rewritings may contain redundant subgoals 
removing involves tests query containment 
example algorithm consider cover subgoal realizes mcds cover subgoal covering subgoal discard 
rewriting considered 
views time seconds star queries subgoals distinguished non joined variables minicon algorithm inverse rules bucket algorithm number views time seconds complete queries subgoals distinguished variables minicon algorithm inverse rules number views left shows running times star queries distinguished variables views participating joins 
graph right shows running times complete queries similar setting 
cases minicon algorithm significantly outperforms inverse rules algorithm 
contain comparison predicates query minicon algorithm changes yields maximally contained query rewriting 
hand query contains comparison predicates follows algorithm returns maximally contained rewriting consider rewritings recursive datalog programs unions conjunctive queries :10.1.1.54.9534
section extension minicon algorithm find correct rewritings find maximally contained rewriting common cases comparison predicates guaranteed produce maximally contained rewriting query contains semi interval constraints comparison predicates query form variable constant form 
show experiments demonstrating scale extended algorithm 
show example provides intuition cases algorithm capture 
discussion refer set comparison subgoals query set variables denote subset subgoals includes variables constants contains existential variable intuitively denotes set comparison subgoals query satisfied view domain mcd 
number rewritings small extra overhead processing comparison predicates causes slow factor 
factor decreased optimizations comparison predicate code explore 
related algorithms rewriting queries views surveyed 
previous problem focused developing algorithms problem studying performance 
addition algorithms mentioned previously algorithms developed conjunctive queries comparison predicates queries views grouping aggregation oql queries queries semi structured data :10.1.1.44.2175
problem answering queries views considered schemas functional inclusion dependencies languages query data schema disjunctive views :10.1.1.36.3316
clearly extensions basic problem represents opportunity possible extension minicon algorithm 
mitra developed rewriting algorithm captures intuition property lead better performance bucket algorithm inverse rules algorithm 
works discussed extensions query optimizers try materialized views query processing :10.1.1.33.1999:10.1.1.50.3586
factor decreased optimizations comparison predicate code explore 
related algorithms rewriting queries views surveyed 
previous problem focused developing algorithms problem studying performance 
addition algorithms mentioned previously algorithms developed conjunctive queries comparison predicates queries views grouping aggregation oql queries queries semi structured data :10.1.1.44.2175
problem answering queries views considered schemas functional inclusion dependencies languages query data schema disjunctive views :10.1.1.36.3316
clearly extensions basic problem represents opportunity possible extension minicon algorithm 
mitra developed rewriting algorithm captures intuition property lead better performance bucket algorithm inverse rules algorithm 
works discussed extensions query optimizers try materialized views query processing :10.1.1.33.1999:10.1.1.50.3586
cases modified system style join enumeration component incorporated view rewritings rewrite phase optimizer :10.1.1.50.3586
addition algorithms mentioned previously algorithms developed conjunctive queries comparison predicates queries views grouping aggregation oql queries queries semi structured data :10.1.1.44.2175
problem answering queries views considered schemas functional inclusion dependencies languages query data schema disjunctive views :10.1.1.36.3316
clearly extensions basic problem represents opportunity possible extension minicon algorithm 
mitra developed rewriting algorithm captures intuition property lead better performance bucket algorithm inverse rules algorithm 
works discussed extensions query optimizers try materialized views query processing :10.1.1.33.1999:10.1.1.50.3586
cases modified system style join enumeration component incorporated view rewritings rewrite phase optimizer :10.1.1.50.3586
works showed considering presence materialized views negatively impact performance optimizer 
works number views tended relatively small 
authors consider general setting constraint language describe views physical structures standard types constraints 
problem answering queries views considered schemas functional inclusion dependencies languages query data schema disjunctive views :10.1.1.36.3316
clearly extensions basic problem represents opportunity possible extension minicon algorithm 
mitra developed rewriting algorithm captures intuition property lead better performance bucket algorithm inverse rules algorithm 
works discussed extensions query optimizers try materialized views query processing :10.1.1.33.1999:10.1.1.50.3586
cases modified system style join enumeration component incorporated view rewritings rewrite phase optimizer :10.1.1.50.3586
works showed considering presence materialized views negatively impact performance optimizer 
works number views tended relatively small 
authors consider general setting constraint language describe views physical structures standard types constraints 
algorithm works designed produce single conjunctive rewriting equivalent query cost search maximally contained rewriting 
began analyzing existing algorithms bucket algorithm inverse rules algorithm significant limitations 
developed minicon algorithm novel algorithm answering queries views showed scales gracefully outperforms existing algorithms 
result established answering queries views done efficiently large scale problems 
described extension algorithm handle comparison predicates 
show extended version minicon algorithm extended straightforward fashion deal access pattern limitations spirit :10.1.1.36.3316
interesting direction research extend minicon algorithm context materialized views query optimization consider bag semantics 
context interested cheapest rewriting query 
conceivably possible modify second phase minicon algorithm combines mcds bottom dynamic programming style saves cheapest rewriting :10.1.1.50.3586
algorithm guarantee finding cheapest rewriting need consider rewritings contain logically redundant subgoals 
described extension algorithm handle comparison predicates 
show extended version minicon algorithm extended straightforward fashion deal access pattern limitations spirit :10.1.1.36.3316
interesting direction research extend minicon algorithm context materialized views query optimization consider bag semantics 
context interested cheapest rewriting query 
conceivably possible modify second phase minicon algorithm combines mcds bottom dynamic programming style saves cheapest rewriting :10.1.1.50.3586
algorithm guarantee finding cheapest rewriting need consider rewritings contain logically redundant subgoals 
example suppose query views join selective rewriting query yield cheapest query execution plan may 
time seconds chain queries distinguished variables subgoals variables constrained minicon ip algorithm minicon algorithm number views time seconds chain queries variables distinguished subgoals variables constrained minicon ip algorithm minicon algorithm number views experiments minicon algorithm comparison predicates 
left graph shows case shows adding comparison predicates slows running time factor 
left graph shows case shows adding comparison predicates slows running time factor 
graph right shows running times variables views distinguished 
minicon algorithm create mcd includes violate property rewriting 
extend minicon algorithm context need establish bound size rewritings need considered relax definition mcds 
abiteboul duschka :10.1.1.54.9534
complexity answering queries materialized views 
pods 
afrati 
answering queries materialized views disjunctions 
icde 
cohen nutt 
rewriting aggregate queries views 
pods 
duschka genesereth :10.1.1.57.1452
answering recursive queries views 
pods 
duschka genesereth 
query planning infomaster 
pods 
duschka genesereth 
query planning infomaster 
proceedings acm symposium applied computing 
duschka levy :10.1.1.36.3316
recursive plans information gathering 
ijcai 
florescu raschid valduriez :10.1.1.44.2175
methodology query reformulation cis semantic knowledge 
proceedings acm symposium applied computing 
duschka levy :10.1.1.36.3316
recursive plans information gathering 
ijcai 
florescu raschid valduriez :10.1.1.44.2175
methodology query reformulation cis semantic knowledge 
int 
journal intelligent cooperative information systems special issue formal methods cooperative information systems 
friedman weld 
ijcai pages 
levy 
answering queries views survey 
manuscript available www cs washington edu homes alon views ps 
levy mendelzon sagiv srivastava :10.1.1.54.6954
answering queries views 
pods 
levy rajaraman ordille 
querying heterogeneous information sources source descriptions 
sigmod 
deutsch tannen 
chase far 
sigmod 
levy :10.1.1.116.2567
scalable algorithm answering queries views 
technical report uw cse university washington department computer science engineering 
qian 
query folding 
