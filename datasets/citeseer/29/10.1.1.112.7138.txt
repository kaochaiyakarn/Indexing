text content search retrieval ad hoc communities francisco nguyen cs rutgers edu appears proceedings international workshop peer peer computing located networking may technical report dcs tr department computer science rutgers university rd piscataway nj consider problem content search retrieval peer peer communities 
computing potentially powerful model information sharing ad hoc groups users low cost entry natural model resource scaling community size 
communities grow size locating information distributed large number peers problematic 
distributed text content search retrieval algorithm address problem 
algorithm state art text document ranking algorithm vector space model instantiated tfxidf ranking rule 
naive application tfxidf require peer community collect inverted index entire community 
april consider problem content search retrieval peer peer communities 
computing model member community contribute resources community establish direct connections member access resources carry activity 
computing potentially powerful model information sharing ad hoc group users low cost entry explicit model resource scaling community size users wishing interact form community 
individuals join community bring resources allowing community grow naturally 
systems scale large sizes members join community :10.1.1.115.4299
measurements community rutgers group students set file sharing community connected network show users sharing tb data 
number open problems addressed potential computing realized 
content search retrieval open problem 
currently existing communities employ centralized directory servers various flooding algorithms object location name 
hand centralized server presents single point failure limits scalability 
hand flooding techniques theory allow arbitrary content searches practice typically name search limited number attributes performed 
furthermore flooding expensive provide limited power locating relevant information queries portion community little information guide pruning 
techniques currently rely heavy replication popular items successful searches 
works studying scale communities put forth efficient reliable distributed methods name object location :10.1.1.115.4299:10.1.1.28.5987
focus remained name object location efforts intended support file systems natural model acquiring names 
amount storage person device rapidly growing information management difficult traditional file system hierarchical name space :10.1.1.128.8654
success internet search engines strong evidence content search retrieval intuitive paradigm users leverage manage access large volumes information 
anecdotal evidence number individuals research group google bookmarks provides hierarchical namespace 
furthermore flooding expensive provide limited power locating relevant information queries portion community little information guide pruning 
techniques currently rely heavy replication popular items successful searches 
works studying scale communities put forth efficient reliable distributed methods name object location :10.1.1.115.4299:10.1.1.28.5987
focus remained name object location efforts intended support file systems natural model acquiring names 
amount storage person device rapidly growing information management difficult traditional file system hierarchical name space :10.1.1.128.8654
success internet search engines strong evidence content search retrieval intuitive paradigm users leverage manage access large volumes information 
anecdotal evidence number individuals research group google bookmarks provides hierarchical namespace 
individuals depend google relocate pages daily 
groups grow size web size decreasing cost storage small groups share large amount data 
individuals depend google relocate pages daily 
groups grow size web size decreasing cost storage small groups share large amount data 
motivated explore content search retrieval engine provides similar information access paradigm internet search engines 
particular distributed text ranking algorithm content search retrieval specific context planetp infrastructure building ease task developing information sharing applications 
currently planetp provides framework ad hoc sets users easily set information sharing communities requiring support centralized server planetp supports indexing searching retrieval information spread dynamic community agents possibly running set heterogeneous devices :10.1.1.17.5784
basic idea planetp community member create inverted word document index documents wishes share summarize index compact form diffuse summary community 
summaries member query retrieve matching information collective information store community 
provide overview planetp discuss advantages underlying approach information sharing section 
problem focus perform content search retrieval index summaries planetp uses 
summaries member query retrieve matching information collective information store community 
provide overview planetp discuss advantages underlying approach information sharing section 
problem focus perform content search retrieval index summaries planetp uses 
adopted vector space ranking model tfxidf algorithm suggested say currently actively working extend planetp general framework building applications just information sharing 
salton currently successful text ranking algorithm :10.1.1.111.1818:10.1.1.51.7802:10.1.1.51.7802
vector space ranking model document query abstractly represented vector dimension associated distinct word 
value component vector represents importance word typically referred weight word document query 
query compute relevance document query function angle vectors 
tfxidf popular method assigning term weights vector space ranking model 
peer local store xml documents wishes share community 
peers gossiping algorithm help maintain directory currently active peers set bloom filters summarizing content peers local stores 
known type pdf postscript text 
planetp stores xml snippet local data store external file 
planetp uses bloom filter summarize index peer :10.1.1.20.2080
briefly bloom filter array bits represent set case set words peer inverted index 
filter computed obtaining indices member typically different hashing functions setting bit index 
bloom filter ask element member computing indices checking bits 
peer computed bloom filter community gossiping algorithm combination name algorithm demers algorithm :10.1.1.17.5784:10.1.1.17.5784
planetp uses bloom filter summarize index peer :10.1.1.20.2080
briefly bloom filter array bits represent set case set words peer inverted index 
filter computed obtaining indices member typically different hashing functions setting bit index 
bloom filter ask element member computing indices checking bits 
peer computed bloom filter community gossiping algorithm combination name algorithm demers algorithm :10.1.1.17.5784:10.1.1.17.5784
algorithm maintain directory peers currently line 
peer query content querying bloom filters collected 
example peer look documents containing word car 
testing car bloom filter 
testing car bloom filter 
suppose results hits bloom filters peers contacts see documents containing word car note peers may documents bloom filter give false positives 
hand set peers guaranteed complete guaranteed peer document containing word car bloom filters give false negatives 
approach index summaries bloom filters number advantages significant shall seen collection bloom filters allows peer efficiently approximate inverted index entire community 
allows implement ranking algorithm depends having global knowledge possible costly current systems :10.1.1.115.4299:10.1.1.28.5987
bloom filter efficient summary mechanism minimizing required bandwidth storage node 
appendix show planetp needs total data indexed summarize community content 
peers independently trade accuracy storage 
example peer may choose combine filters peers save space trade contact set peers query hits combined filter 
example peer may choose combine filters peers save space trade contact set peers query hits combined filter 
ability independently trading accuracy storage particularly useful peers running memory constrained devices hand held devices 
information maintained peer community planetp extremely resistant denial service attacks 
main disadvantage diffusion approach new rapidly changing information spreads slowly diffusion necessarily spread time minimize spikes communication bandwidth 
address problem peers planetp implement information brokerage service uses consistent hashing publish locate information :10.1.1.147.1879
second indexing service supports timely location new information exchange information subsets peers involving entire community similar approach taken 
discuss feature impact 
simulation shown planetp easily scale community sizes thousands 
example gossiping rate second planetp propagate bloom filter containing terms new information gossip planetp dynamically reduces gossiping rate time minute 
hand means term 
typically denominator equation dropped simplicity 
popular method assigning term weights called tfxidf rule 
basic idea tfxidf combination term frequency tf document inverse term shows documents collection idf balance fact terms frequently document important describe meaning terms appear documents collection useful differentiating documents particular query 
example look collection papers published operating systems conference find terms operating system appears document differentiate relevance documents :10.1.1.51.7802
existing literature includes ways implementing tfxidf rule 
adopt system equations suggested witten number documents collection number times term appears collection number times term appears document :10.1.1.111.1818:10.1.1.51.7802:10.1.1.51.7802:10.1.1.51.7802
simply drop normalizing denominator equation long documents erroneously ranked higher short documents higher term weights higher term frequencies 
customary substitute simpler normalization factor number terms document resulting similarity measure collection documents current search engines implement ranking algorithm constructing inverted index collection :10.1.1.111.1818:10.1.1.51.7802:10.1.1.51.7802
popular method assigning term weights called tfxidf rule 
basic idea tfxidf combination term frequency tf document inverse term shows documents collection idf balance fact terms frequently document important describe meaning terms appear documents collection useful differentiating documents particular query 
example look collection papers published operating systems conference find terms operating system appears document differentiate relevance documents :10.1.1.51.7802
existing literature includes ways implementing tfxidf rule 
adopt system equations suggested witten number documents collection number times term appears collection number times term appears document :10.1.1.111.1818:10.1.1.51.7802:10.1.1.51.7802:10.1.1.51.7802
simply drop normalizing denominator equation long documents erroneously ranked higher short documents higher term weights higher term frequencies 
customary substitute simpler normalization factor number terms document resulting similarity measure collection documents current search engines implement ranking algorithm constructing inverted index collection :10.1.1.111.1818:10.1.1.51.7802:10.1.1.51.7802
index associates list documents term weight term document positions terms appear 
information inverse document frequency idf useful statistics added index speed query processing 
example look collection papers published operating systems conference find terms operating system appears document differentiate relevance documents :10.1.1.51.7802
existing literature includes ways implementing tfxidf rule 
adopt system equations suggested witten number documents collection number times term appears collection number times term appears document :10.1.1.111.1818:10.1.1.51.7802:10.1.1.51.7802:10.1.1.51.7802
simply drop normalizing denominator equation long documents erroneously ranked higher short documents higher term weights higher term frequencies 
customary substitute simpler normalization factor number terms document resulting similarity measure collection documents current search engines implement ranking algorithm constructing inverted index collection :10.1.1.111.1818:10.1.1.51.7802:10.1.1.51.7802
index associates list documents term weight term document positions terms appear 
information inverse document frequency idf useful statistics added index speed query processing 
engine inverted index quickly determine subset documents contain terms query compute vectors needed equation 
engine rank documents similarity query results user 
systems rely heavy replication popular items successful searches communities built limited sharing music video files 
goal planetp increase power users locate information communities 
focused tightly text information appropriate collections scientific documents legal documents inventory databases differences led design implement text content search retrieval engine 
contrast existing systems research efforts seek provide illusion having global hash table shared members community 
frameworks tapestry pastry chord different techniques spread key value pairs community route queries member data stored :10.1.1.111.1818:10.1.1.28.5987:10.1.1.28.5987
distributed hash structure create inverted index efficient approach proposed planetp 
systems time cost needed contact right node order publish single key 
want share document content need publish unique word contained 
time needed linear document size 
want share document content need publish unique word contained 
time needed linear document size 
hand planetp publish keys bloom filter need contact node information bandwidth available 
furthermore frameworks provides infrastructure needed implement ranking planetp ranking algorithm adapted systems 
related planetp goals cori gloss address problems database selection ranking fusion distributed collections :10.1.1.26.106:10.1.1.127.4459
studies done french show scale nodes :10.1.1.38.7535
different ranking techniques rely similar collection statistics 
gloss uses number documents node term sum local weights term node cori needs 
cases amount information rank nodes significantly smaller having global inverted index 
time needed linear document size 
hand planetp publish keys bloom filter need contact node information bandwidth available 
furthermore frameworks provides infrastructure needed implement ranking planetp ranking algorithm adapted systems 
related planetp goals cori gloss address problems database selection ranking fusion distributed collections :10.1.1.26.106:10.1.1.127.4459
studies done french show scale nodes :10.1.1.38.7535
different ranking techniques rely similar collection statistics 
gloss uses number documents node term sum local weights term node cori needs 
cases amount information rank nodes significantly smaller having global inverted index 
gloss needs space global index 
show tfxidf approximated compact summary bloom filter peer inverted index 
contributions show tfxidf rule adapted index summaries provide heuristic adaptively determining set peers contacted query shown algorithm tracks tfxidf performance closely regardless documents distributed community 
algorithm preserves main flavor tfxidf returning set documents particular query 
content search retrieval algorithm easier communities share large amounts information 
bloom :10.1.1.20.2080
space time trade offs hash coding allowable errors 
communications acm 
brin page 
anatomy large scale hypertextual web search engine 
computer networks isdn systems 
buckley 
implementation smart information retrieval system 
technical report tr cornell university 
callan lu croft :10.1.1.26.106
searching distributed collections inference networks proceedings th annual international acm sigir conference research development information retrieval pages 
clarke wiley hong 
distributed anonymous information storage retrieval system 
workshop design issues anonymity pages 
searching distributed collections inference networks proceedings th annual international acm sigir conference research development information retrieval pages 
clarke wiley hong 
distributed anonymous information storage retrieval system 
workshop design issues anonymity pages 
martin nguyen :10.1.1.17.5784
planetp infrastructure support information sharing 
technical report dcs tr department computer science rutgers university nov 
demers greene hauser irish larson shenker terry 
epidemic algorithms replicated database maintenance 
epidemic algorithms replicated database maintenance 
proceedings sixth annual acm symposium principles distributed computing pages 
direct connect 
www neo modus com 
french powell callan viles prey :10.1.1.38.7535
comparing performance database selection algorithms 
research development information retrieval pages 
gifford sheldon jr semantic file systems :10.1.1.128.8654
proceedings th acm symposium operating systems principles 
www neo modus com 
french powell callan viles prey :10.1.1.38.7535
comparing performance database selection algorithms 
research development information retrieval pages 
gifford sheldon jr semantic file systems :10.1.1.128.8654
proceedings th acm symposium operating systems principles 

com 
gravano garcia molina tomasic :10.1.1.127.4459
gifford sheldon jr semantic file systems :10.1.1.128.8654
proceedings th acm symposium operating systems principles 

com 
gravano garcia molina tomasic :10.1.1.127.4459
effectiveness gloss text database discovery problem 
proceedings acm sigmod conference pages 
leighton 
resource discovery distributed networks 
symposium principles distributed computing pages 
harman 
overview trec conference 
proceedings th annual international acm si gir conference research development information retrieval 
karger lehman leighton levine :10.1.1.147.1879
consistent hashing random trees distributed caching protocols hot spots world wide web 
acm symposium theory computing pages 

www com 
consistent hashing random trees distributed caching protocols hot spots world wide web 
acm symposium theory computing pages 

www com 
chen wells zhao :10.1.1.115.4299
oceanstore architecture global scale persistent storage 
proceedings acm 

www com 
reilly press 
whinston 
networking information sharing alternative 
ieee computer 
francis karp shenker :10.1.1.28.5987
scalable content addressable network 
proceedings acm sigcomm conference 
robertson jones 
relevance weighting search terms 
proceedings acm sigcomm conference 
robertson jones 
relevance weighting search terms 
journal american society information science volume pages 
druschel :10.1.1.28.5987
pastry scalable distributed object location routing large scale peer peer systems 
proceedings ifip acm international conference distributed systems platforms middleware 
salton wang yang 
vector space model information retrieval 
proceedings acm sigcomm conference 

search distributed search distributed networks 
sun microsystems 
witten moffat bell :10.1.1.111.1818:10.1.1.51.7802:10.1.1.51.7802
managing gigabytes compressing indexing documents images 
morgan kaufmann san francisco second edition 
yang garcia molina 
efficient search peer peer networks 
morgan kaufmann san francisco second edition 
yang garcia molina 
efficient search peer peer networks 
proceedings international conference distributed computing systems icdcs july 
zhao joseph :10.1.1.111.1818
tapestry infrastructure fault tolerant wide area location routing 
technical report ucb csd university california berkeley 
appendix planetp memory usage appendix estimated amount memory needed planetp member keep track community content 
note memory usage depends mainly bloom filter size number peers community 
