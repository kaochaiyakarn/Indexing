encoding planning problems nonmonotonic logic programs yannis bernhard nebel institut fur informatik universitat freiburg am freiburg germany mail name informatik uni freiburg de 
framework encoding planning problems logic programs negation failure having computational efficiency major consideration 
order accomplish goal bring ideas logic programming planning systems graphplan 
discuss different representations planning problems logic programs point issues related performance show ways exploit structure domains representations 
experimentation existing implementation stable models semantics called smodels 
turns careful compact encodings performance method number different domains comparable planners graphplan 
atoms prefixed operator called naf literals intuitively understood follows true iff possible ways prove fail 
clear fail prove means 
logic programs exhibit quite complicated structure especially naf literals depend naf literals 
consider program different semantics give different meaning program 
influential semantics normal logic programs stable models semantics founded semantics :10.1.1.121.6788
valued semantics stable models models assigns value true value false assigns opposite values 
valued founded semantics assigned value unknown 
mainly interested systems implement stable model semantics founded model information preprocessing simplifying planning theories 
implementations stable model semantics include slg smodels branch bound method described 
relation nonmonotonic logic programming reasoning action studied quite extensively literature gelfond lifschitz 
fact relating planning logic programming example event calculus combination abduction similarly describe logic programs stable model semantics variants 
research concerned representational adequacy logic programming formalism representing theories action issues related computational efficiency 
preliminary results representing planning problems logic programming systems discuss efficiency issues 
encodings borrow planning systems graphplan :10.1.1.43.7263
basic idea simple encode planning problems way stable models encodings correspond valid sequences actions 
consequently planning problem finding stable model certain time instant assigns true fluents belong final state 
action predicates true stable model refer time instants earlier constitute plan achieves goals 
detail number different encodings planning problems logic programming discuss nonmonotonic reasoning techniques applied 
experiments smodels efficient implementation stable model semantics outperform existing systems 
turns combination techniques gives effective planning method 
performance number hard blocks world logistics problems compares existing systematic planning methods 
stable model semantics smodels section briefly review stable model semantics smodels algorithm 
assume basic knowledge logic programming familiarity planning systems graphplan :10.1.1.43.7263
due space limitations discuss founded semantics :10.1.1.121.6788
normal logic program set rules form bm atoms 
assume programs ground atoms ground 
set atoms normal logic program 
turns combination techniques gives effective planning method 
performance number hard blocks world logistics problems compares existing systematic planning methods 
stable model semantics smodels section briefly review stable model semantics smodels algorithm 
assume basic knowledge logic programming familiarity planning systems graphplan :10.1.1.43.7263
due space limitations discuss founded semantics :10.1.1.121.6788
normal logic program set rules form bm atoms 
assume programs ground atoms ground 
set atoms normal logic program 
define horn program obtained deleting rules contain naf literals bodies remaining rules 
fluent pl contains set rules oper gamma oper contains add effects time instant operator oper pl contains rule schemata oper contradict contradict contradict ij preconditions operator oper il operators contradict oper operator oper contradicts operator oper effects oper contradict effect oper applied parallel lead invalid world states inconsistent preconditions oper important note contradictory operators need different predicate names 
blocksworld example operator move arguments denote left right object destination origin time instant contradicts move block move different places time 
similarly move contradicts move table 
predicate implements choice system time step applying operator oper keeping blocked 
realize effect add predicate rules blocked blocked negative preconditions represented graphplan adds polynomial overhead :10.1.1.43.7263
graphplan terminology called operator interference 
partly drop restriction introducing notion post serializable actions 
pair rules encodes local influenced choices literals program pl decision values blocked stable model semantics exactly atoms true false 
gets value true operator oper applied provided rest literals body rule oper head true 
add fluents true initial state time fix number time instants add type information 
way obtain program pl assume final state contain set fluents fn planning problem amounts finding stable model pl assigns true atoms fn 
translation possible 
fact cases compact representations omitting literals rules variables 
consider instance part encoding domain depicted :10.1.1.43.7263
contains definition rem wheel remove wheel predicate related fluents 
logic program predicate rem wheel operator blocked predicate may block application rem wheel directly attached operator definition 
predicate represents explicitly relation time instants 
smodels handle function symbols programs contain set assertions free hub wheel rem wheel 
instance replacing rules move obj blocked rules move obj time clear blocked blocked diff time move obj blocked move obj 
runtime problem bw large increases 
largest difference observed runtimes 
phenomenon related heuristic algorithm select branch literals 
founded semantics prune representation founded semantics essentially valued model exists unique logic program traditionally considered polynomial time approximation stable model semantics :10.1.1.121.6788
founded semantics assigns value true atom atom true stable models symmetrically atoms false wellfounded model false stable models 
atoms assigned move action time represented move obj move dest time value founded model unknown atoms different values different stable models 
founded semantics weak planning problems eager assign value unknown confronted choice useful cheap preprocessing step reduce size planning problems 
see works consider blocks world problem initial state table 
