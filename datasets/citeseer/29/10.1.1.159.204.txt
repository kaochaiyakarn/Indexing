tech report demand secure byzantine routing protocol awerbuch reza david holmer cristina herbert center education research information assurance security purdue university west lafayette demand secure byzantine routing protocol awerbuch reza david holmer cristina herbert technical report version october th common technique routing protocols ad hoc wireless networks establish routing paths demand opposed continually maintaining complete routing table 
ad hoc network nodes direct range communicate intermediate nodes significant concern ability route presence byzantine failures include nodes drop fabricate modify mis route packets attempt disrupt routing service 
propose demand routing protocol ad hoc wireless networks provides resilience byzantine failures caused individual colluding nodes 
protocol relies adaptive probing technique detects malicious link log faults occurred length path 
problematic links avoided weight mechanism multiplicatively increases weights demand route discovery protocol finds weight path destination 
protocol bounds amount damage attacker group colluding attackers cause network 
general security protection 
network architecture design wireless communication network protocols routing protocols terms algorithms design reliability security theory department computer science johns hopkins university north charles st baltimore md usa 
mail herb cs jhu edu department computer science purdue university university street west lafayette 
mail cs purdue edu keywords ad hoc wireless networks demand routing security byzantine failures ad hoc wireless networks self organizing multi hop wireless networks nodes take part process forwarding packets facilitating communication nodes direct range 
ad hoc networks easily deployed require fixed infrastructure base stations routers 
highly applicable communication regions fixed infrastructure emergency deployments natural disasters military battle fields rescue missions 
key component ad hoc wireless networks efficient routing protocol nodes network act routers 
ad hoc wireless routing protocols converge quickly battery power efficiently overcome challenges high mobility constrained power resources 
traditional proactive routing protocols periodic updates link state distance vectors suitable ad hoc wireless networks constantly consume power bandwidth network regardless presence network activity designed track topology changes occurring high rate 
demand routing protocols appropriate wireless environments initiate route discovery process data packets need routed :10.1.1.115.3829
discovered routes cached go unused period time break network topology changes 
major requirement routing protocols ability operate adversarial environments 
example malicious node may advertise false routing information try redirect routes perform denial service attack engaging node resource consuming activities simply drop packets 
attack specific wireless networks wormhole adversaries convince pair legitimate nodes link exists propagating packets sent node disrupting routing service 
note due cooperative nature broadcast medium ad hoc wireless networks vulnerable attacks practice 
prior secure routing considered participants network trusted exceptions :10.1.1.42.559
argue particularly ad hoc wireless network case authenticated node trusted 
scenarios appropriate 
example ad hoc networks public internet access system airports conferences users authenticated internet service provider authentication imply trust individual users service 
addition mobile wireless devices compromised easily lack physical security complete trust assumed 
contribution 
goal provide routing survivability adversarial model intermediate node group colluding nodes perform byzantine attacks creating routing loops packets non optimal paths selectively dropping packets source destination nodes assumed trusted 
knowledge demand wireless routing protocol addressing byzantine failures particularly model attackers collude 
byzantine fault occurring path may attributed specific node expensive complex byzantine agreement provably impossible certain circumstances example majority nodes malicious 
circumvent obstacle avoiding assignment guilt individual nodes 
endpoints link disagree deduce faulty link considered faulty avoided 
method ensures long fault free path exists nodes communicate reliably overwhelming majority network acts byzantine manner 
enhanced version previous 
route discovery phase aggregate signatures opposed chained digital signatures 
approach provides stronger security guarantees improved convergence times 
fault detection phase redesigned onion encryption longer required reducing computational cost packet size overhead 
describe efficient scheme securely boot strapping shared keys existing public key infrastructure 
specifically contributions provide secure robust demand routing protocol resilient strong adversarial attacks including performed colluding byzantine attackers 
adaptive probing technique protocol identifies faulty link log faults occurred length path 
provide upper bound damage attacker group colluding attackers cause network 
link monitoring mechanism limits amount damage completely disconnecting nodes network 
rest organized follows 
define problem addressing model consider section 
protocol section provide analysis section 
section overviews related 
conclude suggest directions section 
network security model network model relies specific network assumptions 
protocol requires bidirectional communication links network 
required wireless mac protocols including operate correctly 
focus providing secure routing protocol specifically addresses threats iso osi network layer 
address attacks lower layers 
physical layer disrupted jamming mac protocols disrupted attacks special rts cts packets 
mac protocols detect packet corruption consider substitute cryptographic integrity checks 
security model considered attacks consider source destination trusted 
nodes authenticated participate protocol trusted 
intermediate node path source destination authenticated expected perform protocol correctly may exhibit byzantine behavior 
goal protocol detect byzantine behavior avoid 
assume intermediate node exhibit behavior collusion nodes 
define byzantine behavior action authenticated node results disruption degradation routing service 
examples attacks include intercepting modifying packets creating routing loops dropping packets selectively referred black hole artificially delaying packets making path look longer shorter protocol resilient forms strong non byzantine attacks including flood blocking attacks 
types attacks non byzantine executed un authenticated adversarial nodes considered strong attacks handled majority existing secure routing protocols 
wormhole attacks adversaries convince pair legitimate nodes link exists propagating packets sent node 
protocol addresses wormhole attack treating wormhole single link avoided exhibits losses excessive delay prevent wormhole formation 
flood blocking attack network level denial service attack exploits flood duplicate suppression technique routing protocols 
adversary may corrupt flooded packet corrupt version reaches node valid version valid flood blocked flood duplicate suppression 
may cause continual inability establish valid route path authentication techniques 
protocol handles attack performing hop verification step flood preventing invalid information propagating 
protocol vulnerable adversarial manipulation flood timing forwards flood lowest metric flood received 
possible protocol uses efficient cryptographic primitives 
order accomplish employ demand shared keys established described section 
public key infrastructure required operations route discovery shared key establishment 
infrastructure completely distributed described certificate authority ca 
case distributed cluster peer cas sharing common certificate revocation list deployed improve ca availability 
weight list byzantine route path faulty link fault discovery detection link weight management 
secure routing protocol components secure routing protocol protocol establishes reliability metric past history uses select best path 
metric represented list link weights high weights correspond low reliability 
node network maintains list referred weight list dynamically updates list detects faults 
faulty links identified secure adaptive probing technique embedded regular packet stream 
links avoided secure route discovery protocol incorporates reliability metric 
specifically routing protocol separated successive phases phase input output previous see route discovery fault avoidance 
flooding cryptographic mechanisms input list weights faulty links component outputs full weight path source destination 
invoked time new path needs discovered 
byzantine fault detection 
component discovers faulty links path source destination input full path outputting faulty link 
key adaptive probing technique identifies faulty link log faults occurred length path 
cryptographic mechanisms sequence numbers protect detection protocol adversaries 
link weight management 
goal protocol fault avoidance 
achieved route discovery phase weights associated link 
link weight management component protocol maintains weight list links discovered fault detection algorithm uses multiplicative increase scheme penalize links 
addition protocol uses rehabilitation mechanism limits amount damage attacker group attackers cause disconnecting nodes completely 
route discovery fault avoidance route discovery protocol floods route request response order ensure fault free path exists network path established 
guarantee established path free adversarial nodes 
initial flood required guarantee route request reaches destination 
response flooded unicast single adversary prevent path established 
route discovery protocol uses link weights avoid faults 
weight list provided link weight management phase section 
route discovery protocol chooses route minimum weight path source destination 
path flood accumulating cost hop hop forwarding flood new cost previously forwarded cost 
completion route discovery protocol source provided complete path destination 
routing protocols route caching intermediate nodes optimization consider security implications defer 
order protect route discovery phase external byzantine attackers protection mechanisms 
initial route request flood digital signature authenticate source 
required prevent unauthorized nodes initiating resource consuming route requests limit excessive route requests byzantine node 
unauthorized route request fail verification dropped requesting node immediate neighbors preventing request flooding network 
protocol actual path discovery occurs route response flood opposed route request flood demand protocols 
reduces cost route requests unreachable destinations allows destination learned weight list 
order protect accumulated path essential protocol allow authenticated nodes part path prevent adversary able modify accumulated path allow node able verify entire contents packet far prevent flood blocking attack 
protocol uses protection mechanism aggregate signature scheme introduced boneh provide required properties 
aggregate signatures users sign messages aggregate signature allows composition digital signatures single short signature 
aggregate signature verifies correctly verifier provided exact contents signed exact identity party contributed aggregate 
important note aggregation performed incrementally scenario node receives signature obtained aggregating aggregate obtain 
furthermore aggregate signature cryptographically difficult remove contribution signers knowledge private key 
addition aggregate signatures advantage size increase number signers protocol overhead minimized 
disadvantage aggregate signatures high computational cost 
spite significant speed improvements verification aggregate signature expensive verifying equivalent number rsa signatures 
note chained digital signature scheme prior requires computation provide level security fully protect path adversarial modification 
adversary may strip number hops accumulated path creating non functional virtual link 
aggregate scheme immune form attack contributions aggregate signature easily removed 
steps comprise route discovery protocol request initiation 
source creates signs request includes destination source sequence number list detected malicious links weights 
source broadcasts request neighbors 
source signature allows destination intermediate nodes authenticate request prevents adversary creating false route request 
ii 
request propagation 
request propagates destination flooding performed intermediate nodes follows 
receiving request node verifies source signature request checks list seen requests matching request destination source request identifiers 
matching request list source signature valid stores request list rebroadcasts request 
matching request node 
iii 
request receipt response initiation 
receiving new request source time destination verifies authenticity request creates response contains source destination response sequence number combined link weight list source local weights merged 
destination signs entire response aggregate signature broadcasts 
iv 
response propagation 
receiving response node verifies aggregate signature 
accomplished accumulated path list including destination set signers treating response packet contents including signer id data signed signer 
total weight path computed summing weight links specified path node 
entire packet verified total weight previously forwarded matching response source destination sequence number node appends identifier list adds signature modified response order generate new aggregate signature broadcasts modified response 
response propagation functions similarly single source bellman ford algorithm 
response receipt 
source receives response performs verification intermediate nodes described response propagation step 
path response better best path received far source updates route send packets specific destination 
byzantine fault detection detection algorithm acknowledgments acks data packets 
valid ack received timeout assumed packet lost 
definition loss includes malicious non malicious causes 
example loss caused packet drop due buffer overflow packet corruption due interference malicious attempt modify packet contents just drop packets intermediate nodes 
network operating normally exhibits amount loss 
define threshold sets bound considered tolerable loss rate 
behaved network loss rate stay threshold 
fault defined loss rate greater equal threshold 
value threshold specifies amount loss adversary create detected 
value chosen low possible greater normal loss rate 
threshold value determined source may varied independently route 
protocol designed minimum overhead normal conditions destination required send ack faults occurred 
losses exceed threshold protocol attempts locate faulty link requiring dynamic set intermediate nodes addition destination send acks source 
fault detection protocol built primarily symmetric key cryptography costly asymmetric operations avoided packet basis 
normal topology changes occur frequently ad hoc wireless networks 
detection protocol locates faulty links caused changes optimized mechanism detecting decrease overhead detection time 
mechanisms route maintenance dsr protocol mac layer notifications optimized topology change detector 
node receives notifications detector reacts creating route error message containing identifiers broken link node reports error 
signed message propagated path back source 
receipt authenticated route error message source passes faulty link link weight management component 
note intermediate node exhibiting byzantine behavior links adding source destination success failure failure failure failure trusted point intermediate router successful probe failed probe fault location interval faulty interval unknown interval 
byzantine fault detection example mechanism allows explicitly declare links faulty weaken security model 
fault detection mechanism 
fault detection protocol requires destination return ack source received data packet 
source keeps track number losses acks received window sent packets 
losses violate acceptable threshold protocol registers fault source destination starts binary search path order identify faulty link 
simple example illustrated 
source controls search specifying list intermediate nodes data packets send acks 
refer set nodes required send acks probed nodes short probes 
list probes specified legitimate traffic adversary unable drop traffic dropping list probes eventually detected 
list probes defines set non overlapping intervals cover path interval covers sub path consecutive probes form endpoints 
fault detected interval interval divided inserting new probe 
new probe added list probes appended packets 
process sub division continues fault detected interval corresponds single link 
case link identified faulty passed link weight management component see 
path sub division process binary search proceeds step fault detected 
results detection faulty seq data id id id idp hmac hmac hmac computed source idi number probes 
probe specification link log faults occurred length path 
probes specified listing identifiers probed nodes path order packet 
list protected tampering appending hmac computed shared key source node entire packet far probed node reverse order specified packet see 
node detect required send ack checking list identifier 
node finds identifier verifies hmac removes packet 
node discards packets correct number remaining probe discards packets hmac verify 
reverse ordered prevent adversary links successfully tampering node list removing specific nodes 
adversary attempts modify list links 
acknowledgment specification 
successfully received data packet destination generates ack packet containing sequence number data packet hmac authentication 
probe appends hmac ack forwards reverse path source 
timeouts set probe ack received node gives waiting generates ack packet 
order protocol locate fault node immediately preceding fault location timeout generate ack 
accomplish staggered timeout scheme utilized 
simple technique implementing staggered timeout scheme fixed parameter represents upper bound amount time takes packet traverse single link 
node may compute timeout duration multiplying parameter number hops needed traverse remainder path destination return back current position path 
source receives ack packet attempts verify accumulated starting packet 
hmac verify defines interval loss registered protocol registers loss interval valid hmac encountered invalid hmac 
source times ack loss registered interval source probe 
result ack creation timeout verification technique adversary drops modifies delays ack data packet loss registered interval containing affected link 
interval probe management 
acceptable threshold loss rate 
probe acknowledgment specifications loss attributed interval probes source successfully received verified ack closer probe probe 
loss rate interval exceeds interval divided 
maintaining probes adds overhead protocol desirable retire probes longer needed 
mechanism deciding retire probes loss rate number lost packets 
goal bound aggregate loss rate 
interval associated counter specifies lifetime 
initially interval counter zero losses 
fault detected interval counter new probe inserted divides interval 
new intervals counters initialized number losses caused fault 
counters decremented ack successfully received reach zero 
counters intervals side probe reach zero probe retired joining intervals 
results loss rate bounded 
adversary attempts create higher loss rate algorithm able identify faulty link 
shared key establishment 
byzantine fault detection phase extensive pairwise symmetric keys shared source node path 
pre distributing refreshing shared keys impractical network maintainers 
propose technique demand creation keys assumed public key infrastructure 
source needs probe node share key generates new random key node encrypts new key node public key node able recover key 
encrypted key embedded probe list outgoing data packets 
digital signatures authenticate packets shared key established 
shared key established acks sent node authenticated hmac 
order ensure reliable delivery shared key intended node case active adversaries disrupting path source continues attach encrypted key outgoing data packet verifiable ack uses shared key received node 
note shared key establishment seamlessly integrated adaptive probing multiple keys established simultaneously protocol dynamically changes set probed nodes 
may desirable generate key shared source destination authenticated contributory key exchange technique 
source destination key encrypt data perfect forward secrecy desirable 
property necessary intermediate nodes shared keys authentication integrity checks protect data 
authenticated diffie hellman key exchange piggybacked route request response floods conducted immediately path established 
link weight management important aspect protocol ability avoid faulty links process route discovery link weights 
decision identify link faulty detection component protocol 
link management scheme sets link weights history faults detected links 
faulty link penalized doubling weight 
technique resetting link weights similar retiring probes see section 
weight link reset half previous value counter associated link returns zero 
number packets dropped identifying faulty link threshold loss rate link counter increased 
non zero counter reduced informally perfect forward secrecy demands compromise long term keys lead compromise previously session keys successfully delivered packet number links non zero counters 
analysis section provide upper bound number packets lost adversarial behavior behavior reduces packet transmission success rate threshold 
total number lost packets successfully transmitted packets respectively 
ideally transmission success rate slightly higher original threshold 
means number lost packets fraction number transmitted packets 
quite true true additive constant ignoring bounded number packets lost 
specifically prove exists upper bound previous expression 
show assume adversarial nodes denote set links controlled adversarial nodes 
maximum size kn 
consider faulty link je times ae times 
weight means path adversarial 
algorithm formula je ae number je 
number ae number lost packets exposes link faulty 
je ae eq 
je ae log 
je ae log combining eq 
obtain log kn log log number lost packets window eq 
kn log amount disruption dynamic adversary cause network bounded 
note kn represents number links controlled adversary 
adversarial nodes eq 
ideal case 
related key component providing security services ad hoc wireless networks effective public key infrastructure 
research results direction follows 
hubaux proposed completely decentralized public key distribution system similar pgp 
zhou haas explored threshold cryptography methods wireless environment 
brown showed pgp enhanced employing elliptic curve cryptography viable option wireless constrained devices 
noted source authentication concern routing confidentiality 
papadimitratos haas showed impersonation replay attacks prevented demand routing disabling route caching providing authentication hmac primitive relies existence security associations sources destinations 
significant works include sead ariadne provide efficient secure solutions dsdv dsr routing protocols 
sead uses way hash chains provide authentication ariadne uses tesla source authentication technique achieve similar security goals 
authors focus analogous problem providing authentication wellknown demand protocols aodv dsr strong expensive authentication means digital signatures 
provide expensive protocol guarantees minimum path selection onion technique digital signatures public cryptography tion decryption performed accumulated hop 
strong attack specific wireless networks referred wormhole attackers establish path tunnel packets 
packets arrive faster normal route request flood result establishing non optimal adversarial controlled routing paths 
hu proposes solution limiting distance packet travel 
marti address problem similar consider survivability routing service nodes selectively drop packets advantage wireless cards promiscuous mode 
trusted nodes monitoring neighbors links unreliable history avoided order achieve robustness 
idea promiscuous mode interesting solution multi rate wireless networks modulation scheme adaptively selected current channel conditions node transmits 
relevant conducted wired network community 
researchers focused securing classes routing protocols link state distance vector known protocols ospf bgp 
problem source authentication routing protocols explored digital signatures symmetric cryptography methods hash chains chains time signatures hmac 
perlman designed network layer protocol byzantine robustness addresses denial service expense flooding digital signatures 
problem byzantine nodes simply drop packets black holes wired networks explored 
approach number trusted nodes probe neighbors assuming limited model discussing probing packets disguised adversary 
different technique flow conservation 
observation correct node number bytes entering node equal number bytes exiting node threshold authors suggest scheme nodes monitor flow network 
achieved requiring node copy routing table neighbors reporting incoming outgoing data 
interesting scheme adversarial nodes collude 
secure demand routing protocol resilient byzantine failures caused adversary group colluding adversaries 
key component scheme adaptive probing technique detects malicious links log faults occurred length routing path 
links avoided route discovery protocol 
protocol bounds logarithmically total amount damage caused attacker group attackers 
protocol enhanced aspects 
example route caching intermediate nodes 
consider route caching optimizations intend explore 
plan evaluate overhead protocol respect existing protocols normal non faulty conditions adversarial environments 
kurose ross computer networking top approach featuring internet 
addison wesley longman 
perkins royer ad hoc networking ch 
ad hoc demand distance vector routing 
addison wesley 
johnson maltz broch dsr dynamic source routing protocol multi hop wireless ad hoc networks 
ad hoc networking ch 
pp 

addison wesley 

hu perrig johnson ariadne secure demand routing protocol ad hoc networks th acm international conference mobile computing networking september 
perlman network layer protocols byzantine robustness 
phd thesis mit lcs tr october 
marti giuli lai baker mitigating routing misbehavior mobile ad hoc networks th acm international conference mobile computing networking august 
papadimitratos haas secure data transmission mobile ad hoc networks nd acm workshop wireless security wise september 
awerbuch holmer demand secure routing protocol resilient byzantine failures acm workshop wireless security wise september 
boneh shacham lynn aggregate verifiably encrypted signatures bilinear maps proceedings advances cryptology eurocrypt lncs 
ansi ieee std edition 

standards ieee org catalog html 
stone partridge crc tcp checksum disagree acm august september 

hubaux buttyan capkun quest security mobile ad hoc networks nd acm symposium mobile ad hoc networking computing october 
barreto kim lynn scott efficient algorithms pairing cryptosystems proceedings advances cryptology crypto lncs 
keyed hash message authentication code hmac 
fips national institute standards technology nist 
csrc nist gov publications fips index html 
menezes van oorschot vanstone handbook applied cryptography 
crc press 
zimmermann official pgp user guide 
mit press 
zhou haas securing ad hoc networks ieee network magazine vol 

brown cheung hernandez menezes pgp constrained wireless devices th usenix security symposium usenix august 
hauser tsudik reducing cost security link state routing symposium network distributed systems security 
papadimitratos haas secure routing mobile ad hoc networks scs communication networks distributed systems modeling simulation conference pp 
january 

hu johnson perrig sead secure efficient distance vector routing mobile wireless ad hoc networks th ieee workshop mobile computing systems applications june 
perkins bhagwat highly dynamic destination sequenced distance vector routing dsdv mobile computers acm sigcomm conference communications architectures protocols applications 
perrig canetti song tygar efficient secure source authentication multicast network distributed system security symposium february 
levine shields belding royer secure routing protocol ad hoc networks th ieee international conference network protocols icnp november 
syverson goldschlag reed anonymous connections onion routing ieee symposium security privacy 

hu perrig johnson packet leashes defense wormhole attacks wireless ad hoc networks proceedings nd annual joint conference ieee computer communications societies infocom april 
cheung efficient message authentication scheme link state routing th annual computer security applications conference pp 
december 
zhang efficient protocols signing routing messages symposium networks distributed systems security 
goodrich efficient secure network routing algorithms provisional patent filing january 
smith murthy garcia luna aceves securing distance vector routing protocols symposium networks distributed systems security 
murphy badger digital signature protection ospf routing protocol symposium networks distributed systems security 
smith garcia luna aceves efficient security mechanisms border gateway routing protocol computer communications elsevier vol 
pp 

cheung levitt protecting routing infrastructures denial service cooperative intrusion detection new security paradigms workshop 
bradley cheung mukherjee olsson detecting disruptive routers distributed network monitoring approach ieee symposium security privacy 

