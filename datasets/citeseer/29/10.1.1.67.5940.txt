presents new rich class con current programming languages notion comput ing information con notions consistency entailment framework computation emerges inter action concurrently executing agents communi cate placing checking instantiating constraints shared variables 
view computation context programming languages cause ability represent manipulate partial information domain discourse con text concurrency constraints communication control context ai availability simple powerful mechanisms controlling inference promise rich representational programming languages sharing set properties may pos sible 
reflect view computation sar develops cc family languages 
mem ber family cc pronounced cc ask choose provides basic operations blocking ask atomic tell algebra closed prefixing choice interleaving hiding provides mutual recur sion operator 
cc intentionally 
similar milner ccs radically different lying concept communication fact pro class founded notion constraint logic pro gramming jl fundamentally generalizes concurrent logic programming subject author tation sar substantially 
