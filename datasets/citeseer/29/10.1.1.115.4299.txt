oceanstore architecture global scale persistent storage john david yan chen steven patrick dennis sean chris wells ben zhao oceanstore utility infrastructure designed span globe provide continuous access persistent information 
infrastructure comprised untrusted servers data protected redundancy cryptographic techniques 
improve performance data allowed cached anytime 
additionally monitoring usage patterns allows adaptation regional denial service attacks monitoring enhances performance pro active movement data 
prototype implementation currently development 
past decade seen growth performance computing devices 
note nomadic data extreme consequence separating information physical location 
caching complicates data coherence location provides great flexibility optimize locality trade consistency availability 
exploit flexibility continuous introspective monitoring discover tacit relationships objects 
resulting meta information locality management 
caching important distinction oceanstore systems nfs afs cached data confined particular servers particular regions network :10.1.1.71.5072
experimental systems allow cooperative caching systems connected fast lan 
rest follows section gives system level overview oceanstore system 
section shows sample applications oceanstore 
section gives architectural detail section reports status current prototype 
owner object securely choose acl object foo providing signed certificate translates owner says acl object foo 
specified acl may object value indicating common default 
acl entry extending privileges describe privilege granted signing key explicit identity privileged users 
entries publicly readable servers check write allowed 
plan adopt ideas systems policymaker allow users express reason formally wide range possible policies :10.1.1.44.6276
note asymmetry introduced encrypted data reads restricted clients key distribution writes restricted servers ignoring unauthorized updates 
data location routing entities oceanstore free reside oceanstore servers 
freedom provides maximum flexibility selecting policies replication availability caching migration 
unfortunately complicates process locating interacting entities 
attempt fails large scale hierarchical data structure style plaxton locates entities locally 
describe techniques sections 
bloom filters probabilistic algorithm fully distributed uses constant amount storage server 
idea hillclimbing query satisfied server local information route query neighbor 
modified version bloom filter called bloom filter implement potential function :10.1.1.20.2080
bloom filter depth viewed array normal bloom filters 
context algorithm bloom filter record objects contained locally current node 
th bloom filter union bloom filters nodes distance path current node 
bloom filter stored directed edge network 
servers long time need data reconstructed practical implication oceanstore infrastructure automatically adapts presence absence particular servers human intervention greatly reducing cost management 
update model applications described section exhibit high degree write sharing 
allow concurrent updates avoiding problems inherent wide area locking oceanstore employs update model conflict resolution 
conflict resolution introduced bayou system supports range consistency semantics including acid semantics 
additionally conflict resolution reduces number aborts normally seen detection schemes optimistic concurrency control :10.1.1.101.8988
flexible conflict resolution requires ability perform server side computations data 
untrusted infrastructure replicas access ciphertext server trusted perform commits 
issues complicate update architecture 
current oceanstore design able handle types conflict resolution directly encrypted data 
cryptographic file systems cfs provide secrecy include provisions sharing data protecting integrity independently secrecy 
secure file system supports sharing access control lists fails provide independent support integrity trusts single server distribute encryption keys 
project similar oceanstore works assumes untrusted clients address wide area infrastructure 
address problem securely distributing keys certificates decentralized manner 
policy maker deals description trust relations :10.1.1.44.6276
res proposes self certifying paths separate key management system security 
bloom filters commonly compact representations large sets :10.1.1.20.2080
distributed database calculates demand implement efficient 
summary cache pushes bloom filters cooperating web caches method scale number caches 
project similar oceanstore works assumes untrusted clients address wide area infrastructure 
address problem securely distributing keys certificates decentralized manner 
policy maker deals description trust relations :10.1.1.44.6276
res proposes self certifying paths separate key management system security 
bloom filters commonly compact representations large sets :10.1.1.20.2080
distributed database calculates demand implement efficient 
summary cache pushes bloom filters cooperating web caches method scale number caches 
distributing data performance availability survivability studied extensively file systems database communities 
summary distributed file systems 
summary distributed file systems 
particular bayou coda replication improve availability expense consistency introduce specialized conflict resolution procedures 
sprite uses replication caching improve availability performance guarantee consistency incurs performance penalty face multiple writers 
systems addresses range security concerns oceanstore bayou examines problems occur replicas corrupted 
gray argue replication :10.1.1.116.1182
oceanstore differs class systems describe bind floating replicas specific machines replicate objects server 
oceanstore second tier floating replicas similar transactional caches taxonomy algorithm performs validity checks commit time 
contrast similar systems merge predicates decrease number transactions aborted due date caches 
previous projects explored feedback driven adaptation extensible operating systems databases file systems global operating systems storage devices 

cryptographic file system unix 
proc 
acm ccs conf nov 
feigenbaum :10.1.1.44.6276
decentralized trust management 
proc 
ieee may 
bloom :10.1.1.20.2080
feigenbaum :10.1.1.44.6276
decentralized trust management 
proc 
ieee may 
bloom :10.1.1.20.2080
space time trade offs hash coding allowable errors 
communications acm volume pages july 
theimer 
feasibility distributed file system deployed existing set desktop pcs 
goldberg yianilos 
archival 
proc 
ieee adl pages apr 
gray neil shasha :10.1.1.116.1182
dangers replication solution 
proc 
acm sigmod conf volume pages june 

hill woo culler 
system architecture directions networked sensors 
proc 
nov 
howard nichols satyanarayanan west :10.1.1.71.5072
scale performance distributed file system 
acm transactions computer systems feb 
hughes keefe 
universal access smart card secure file system 

design predictive caching system 
proc 
ieee workshop mobile computing systems applications dec 
kung robinson :10.1.1.101.8988
optimistic methods concurrency control 
acm transactions database systems june 
lamport 
byzantine generals problem 
