provenance management curated databases peter buneman university edinburgh edinburgh uk inf ed ac uk chapman university michigan ann arbor mi eecs umich edu james cheney university edinburgh edinburgh uk inf ed ac uk curated databases bioinformatics disciplines result great deal manual annotation correction transfer data sources 
provenance information concerning creation attribution version history data crucial assessing integrity scientific value 
general purpose database systems provide little support tracking provenance especially data moves databases 
investigates general purpose techniques recording provenance data copied databases 
describe approach track user actions browsing source databases copying data curated database order record user actions convenient form 
implementation technique evaluate feasibility database support provenance management 
experiments show overhead na approach fairly high decreased acceptable level simple optimizations 

modern science increasingly dependent databases 
poses new challenges database technology scale distributed processing 
issues concerned preservation scientific record information obtained 
issues particularly important database technology employed just provide access source data derived knowledge scientists interpreted data 
scientists believe provenance metadata describing creation recording ownership processing version history essential assessing value data 
provenance management understood guidelines concerning information retained managed 
current database technology provides little assistance managing provenance 
study problem tracking provenance scientific data curated databases databases constructed brow scientists manually assimilate information sources 
important understand permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
sigmod june chicago illinois usa 
copyright acm 
working practices values scientists maintain databases 
curated databases public domain databases field molecular biology 
contain raw experimental data represent investment substantial amount effort individuals organized interpreted re interpreted annotated data sources 
consortium lists upwards scientists variously called curators annotators job add correct databases published consortium 
scale relatively small databases managed single individual nuclear protein database 
databases highly valued cases replaced publication medium communication 
databases confined biology developed areas astronomy geology 
manuals dictionaries gazetteers moved publication electronic dissemination examples curated databases 
characteristics curated databases content derived copied sources curated databases 
curators believe additional record keeping needed record data comes provenance 
examination provenance issues data warehouses views underlying collection data :10.1.1.1.9079
curated databases warehouses manually constructed highly skilled scientists computed automatically existing data sets views 
example molecular biologist interested age affect levels coronary artery disease 
keeps simple database proteins may play role systems database flat text xml file full rdbms 
day browsing abstracts publications discovers interesting proteins swissprot copies records swissprot web page database 
fixes new entries post translational modification swissprot confused database sites 
copies publication details online inheritance man related data ncbi 
notices mistake pubmed publication number corrects 
manual curation process repeated times researcher conducts investigation 
year reviewing information finds dis mydb crp mydb abc swissprot mydb abc swissprot mydb abc publications ncbi np abc publications pubmed biological database curation example 
dashed lines represent provenance links 
conditions 
unfortunately remember anomalous data came trace source resolve conflict 
databases data copied changed searching data longer gives results 
biologist may choice discard anomalous data spend hours tracking correct values 
especially embarrassing researcher published article version database suspect data 
respects researcher better days publication record keeping defined standards citation confidence cited data change 
recover advantages curated databases necessary retain provenance information describing source version history data 
information represented dashed lines connecting source data copied data 
current approach managing provenance curated databases database designer augment schema fields contain provenance data require curators add maintain provenance information 
manual bookkeeping time consuming error prone incomplete 
necessary 
believe imperative find ways automating process 
problem term provenance variety senses database scientific computation research 
form provenance workflow coarse grained provenance information describing derived data calculated raw observations 
workflow provenance important scientific computation major concern curated databases 
focus fine grained dataflow provenance describes data moved network databases 
specifically consider problem tracking managing provenance describing user actions involved constructing curated database 
includes recording local modifications database inserting deleting updating data global operations copying data external sources 
large number variety scientific databases realistic solution problem subject constraints 
databases maintained independently short term unrealistic expect adopt standard storing exchanging provenance 
wide variety data models databases widely varying practices identifying locating data 
databases actively uncooperative may change silently past versions may archived 
curators employ wide variety application programs computing platforms including proprietary software changed 
light considerations believe reasonable restrict attention subproblem simple progress believe provides benefits common situations faced database curators 
approach propose evaluate practical approach provenance tracking data copied manually databases 
approach assume user actions constructing target database captured sequence insert delete copy paste actions provenance aware application browsing editing databases 
user copies inserts deletes data local database provenance links stored auxiliary provenance database links relate data locations locations previous versions external source databases fact review process construct data addition archived provenance links provide detail version relates 
order ensure consistency target database provenance record essential target database provenance record writable high level interfaces track provenance 
architecture summarized 
new components shaded existing components unshaded 
shaded triangles indicate wrappers mapping 
sn xml view database stores provenance information describing updates performed editor 
alternatively provenance information stored annotations alongside data require changing structure requirement way address data element 
shall describe detail shortly 
important note propose xml query provenance aware editor browser update store user provenance architecture abstraction exchanging locating data databases 
approach require underlying databases store xml 
source target databases relational xml dbmss consist files stored filesystems web sites common forms scientific databases 
provenance information tracked manually system user designer typically decides provenance information record case case basis 
contrast system records 
obvious concern processing storage costs doing unacceptably high 
main contribution show finegrained provenance information tracked stored queried efficiently 
implemented approach experimented number ways storing querying provenance information including na approach sophisticated techniques 
results demonstrate processing overhead na approach fairly high increase time process update amount provenance information stored proportional size changed data 
addition investigated impact optimization techniques transactional hierarchical provenance management 
optimizations typically reduce added processing cost provenance tracking operation reduce storage cost factor relative na approach storage overhead bounded lesser number update operations amount data touched 
addition typical provenance queries executed efficiently provenance records 
believe results compelling argument feasibility approach provenance management 
structure rest follows 
section presents conceptual foundation approach provenance tracking 
section presents implementation instance approach uses mysql timber xml database 
section analyze experimental results 
discuss provenance related areas logging availability schema evolution archiving section sections discuss conclude 

manual updates provenance order discuss provenance need able describe piece data comes need means describing location data element 
assumptions data file synchronization database archiving appear hold wide variety scientific databases 
database viewed tree second edges tree labeled way sequence labels occurs path root identifies data element 
traditional hierarchical file systems known example kind structure 
relational databases described hierarchically 
instance data values relational database addressed level paths db tid addresses field value tuple identifier key tid table database db 
scientific databases paths swissprot release identify specific entry concatenated path citation title identify data element 
xml data addressed adding key information xpath xpointer expressions 
formally set labels consider paths addresses data trees 
trees consider unordered store data values domain leaves 
trees written 
vn vi subtree data value 
write subtree rooted location model user actions basic update language atomic update operations form ins del copy insert operation inserts edge labeled value subtree empty tree data value 
delete operation deletes edge subtree 
copy operation replaces subtree copy subtree location write sequences atomic updates 
un 
function trees induced update sequence give semantics operations follows 
ins del copy denotes tree subtree added fails shared edge names top level denotes result deleting node labeled failing node exists denotes result replacing subtree failing path insertions copies deletes performed subtree target database example consider update operations 
operations copy records modify field values 
result executing update operation database source databases shown 
initial version target database labeled version transaction labeled provenance tracking depicts provenance links dashed lines connect copied data target database source data 
course links visible actual result update 
approach links stored side auxiliary table prov id op loc src id sequence number transaction corresponding change op insert copy delete loc location affected data src source location copy 
src field ignored inserts deletes 
note id loc forms key prov transaction location inserted deleted copied input 
delete copy insert copy insert copy copy insert copy insert example copy paste update operation 
prov id op loc src id op loc src prov id op loc src id op loc src example executing update 
upper trees xml views source databases bottom trees xml views part target database transaction 
white nodes unchanged black nodes represent inserted deleted nodes indicate node came 
dashed lines indicate provenance links 
boxed numbers indicate relevant copy paste operation 
additional provenance links inferred context 
id loc natural candidates indexing 
additional information transaction commit time user identity stored separate table key id examine ways storing provenance information 
na provenance straightforward method store provenance record copied inserted deleted node 
addition update operation treated separate transaction 
technique may wasteful terms space introduces provenance record node inserted deleted copied update 
retains maximum possible information user actions 
fact exact update operation describing user sequence actions recovered provenance table 
transactional provenance second method assume updated actions grouped transactions larger single operation store provenance tables update operation 
transaction line 
entire update transaction 
hierarchical version 
hierarchical version 
provenance links describing net changes resulting transaction 
example user copies data reflection deletes uses data commits effect provenance user copied data 
details intermediate states temporary data storage official database versions retained 
transactional provenance may precise na approach information intermediate states database discarded 
decision commit hands user frequent commits record important intermediate states 
storage cost provenance transaction proportional number nodes touched input output transaction 
number transactional provenance records produced update transaction number inserted nodes output number nodes deleted input number copied nodes output 
hierarchical provenance transactional provenance provenance information tends redundant see cases annotation child node inferred parent annotation 
accordingly consider second technique called hierarchical provenance 
key observation need store provenance links explicitly provenance child copied node inferred parent provenance simple rule 
hierarchical provenance store provenance links inferred 
non inferable links correspond provenance links shown 
copy paste operation copy results adding single record 
shows hierarchical provenance table corresponding na version prov 
case reduced table smaller prov larger savings possible entire records subtrees copied little change 
transactional provenance hierarchical provenance discard information require user group operations transactions 
define full provenance table view hierarchical table follows 
provenance specified just copied prov 
provenance target path mentioned provided copied inserted assume inserted children inserted nodes assumed inserted record indicating 
deletions treated similarly 
formally full provenance table prov defined terms recursive query infer prov op op 
prov prov infer 
prov prov infer 
prov prov infer 
auxiliary table infer identify nodes explicit provenance ensure provenance closest ancestor 
implementation prov calculated necessary paths check unnecessary 
difficult show update sequence described hierarchical provenance table entries 
transactional hierarchical provenance considered combination transactional hierarchical provenance techniques difficult combine 
shows transactional hierarchical provenance transaction 
easy show storage transactional hierarchical provenance defined discussion transactional provenance number roots copied subtrees appear output 
bounded transactional hierarchical provenance may concise approach 
provenance queries machinery developed previous section answer practical questions data 
consider simple questions src transaction created data location 
particularly useful case raw data entered telephone number incorrectly 
hist sequence transactions copied node current position 
mod transactions responsible creation modification subtree node 
hist mod provide different information 
subtree may copied times modified 
define convenient views raw prov table course may view derived 
define views unch ins del copy intuitively mean unchanged inserted deleted copied transaction respectively 
unch prov 
ins prov del prov copy prov consider node come transaction table provided unchanged copied copy unch define trace says data location transaction came data location transaction trace 
trace trace trace 
trace 
note trace essentially reflexive transitive closure 
define queries mentioned section suppose transaction number prov define src trace ins hist trace copy mod trace unch src returns number transaction inserted node hist returns transaction numbers involved copying data mod returns transaction numbers modified data set combined additional information transactions identify users modified subtree means prefix despite fact may infinitely paths extending answer mod finite finitely transaction identifiers prov 
mod answered data prov necessary inspect target database 
interesting queries mention provenance raw data 
system currently provide special support queries written explicitly constructing paths string operations 
example project field relation id current provenance query px px px variables denotes string concatenation 
queries tricky write hand interested providing advanced support provenance queries 
point discussion show provenance mappings relating sequence versions database answer wide variety queries evolution data cooperation source databases 
target database tracks provenance information necessarily partial 
example src query tell data copied 
similarly hist mod queries chain provenance piece data exits source databases track provenance publish consistent form queries incomplete answers 
course source databases store provenance provide complete answers combining provenance information databases 
addition queries sense databases track provenance history ownership piece data 
sequence databases contained previous copies node 
returns tree unique identifiers populated data 
responsible determining data fits tree mapping relational database tree format 
returns list nodes user copied 
user copies leaf node list size 
node subtree selected node contained list 
node contains identifying path data value 
extremely useful able provide answers queries scientists wish evaluate quality data scientific databases 

implementation implemented copy paste database tracks provenance data copied external sources target database 
order demonstrate flexibility approach system connects different publicly downloadable databases 
chosen biological database curated datasets target database 
protein interaction database runs timber native xml database 
database protein localization information built mysql example source database 
target database interacts source database time experimented source database 
addition provenance store implemented mysql table 
overview permits user connect external databases copy source data target database modify data fit target database structure 
user actions intercepted resulting provenance information recorded provenance store 
currently provides minimal web interface testing purposes implemented javascript soap 
interface provides tree views databases user select parts data buttons allow user insert delete copy paste selected data 
providing browsing editing interface important orthogonal data management issues primary concern 
order allow user select pertinent information source target databases database wrapped way allows extract appropriate information 
wrapping essentially fully keyed xml view underlying data 
addition target database expose particular methods allow easy updating 
describes necessary functions source target databases implement 
essentially source target databases provide methods map tree paths database native data addition target database able translate updates tree updates internal data 
approach require source target databases represent data internally xml 
underlying data model path addresses sense 
databases need expose data 
databases administrators data expose copying updating 
cases data scientific databases consists catalog relation contains raw data supporting cross tables 
typically catalog need available source database 
cases may possible write wrappers completely string node inserts new empty node name target db database mapping tree native format 
deletes specified node target database 
insert node child specified node tree database schema mapping 
wrappers source target databases independent require changing source database 
done case case basis 
implementation provenance tracking wrapped source target databases maintains provenance store allows track changes target database incorporating data sources 
copy paste transaction write data values target database write provenance information provenance store 
user may specify storage operations discussed previous section 
section discuss implementations provenance tracking src hist mod provenance queries differ idealized forms section 
na provenance implementation na approach straightforward process recording target source information transaction affects target database 
insert delete copy operation performed corresponding tracking function aste called transaction identifier applicable source target paths 
operations simply add corresponding records provenance store 
note paste operation add record node copied subtree 
transactional provenance transactional provenance user decides segment sequence update operations transactions 
user decides transaction commit changes stores provenance links connecting current version predecessor current version copy database provenance links refer 
provenance links data output transaction stored links corresponding temporary data deleted overwritten transaction stored 
support behavior transactional provenance implementation maintains active list provenance links added provenance store user commits 
atomic update performed provenance store un affected resulting provenance links added list 
conversely case copy delete provenance links list corresponding overwritten deleted data removed 
time commit commit function called writes provenance items active list provenance store 
hierarchical provenance hierarchical provenance storage method store record operation particular copy store record connecting root copied tree root source 
hierarchical transactional provenance combining hierarchical transactional provenance straightforward need maintain hierarchical provenance na provenance records 
subtle issue operations performed transaction resulting hierarchical provenance links redundant example happens copy copy possible check remove redundant links prior committing 
redundancy unusual extra processing appears worthwhile cases 
provenance queries implemented provenance queries src mod hist programs issue basic queries due lack support kind recursion needed trace query 
na transactional provenance directly query provenance store 
hierarchical provenance provenance store corresponds relation 
building view containing full provenance relation query provenance store directly compute appropriate provenance links fly 
versions queries implemented stored procedures written java running mysql 

evaluation user requirements provenance vary widely constantly evolving evaluating approach provenance challenging 
addition evaluating approach provenance tracking manual curation challenging difficult collect realistic manual update sequences 
order evaluate feasibility approach chose random sequences copy paste operations simulate worst case behavior 
considered update sequences steps observations real practices database curators indicate steps account roughly months changes produced curators 
believe important factors affecting feasibility provenance management costs tracking storing provenance querying provenance 
purpose provenance tracking possible answer provenance queries fact queries rare compared queries raw data 
experiments focused primarily storage processing requirements provenance tracking different approaches 
performed experiments measuring effect different approaches provenance query processing full exploration provenance query optimization database tuning left 
experimental setup evaluation performed dell workstation pentium cpu ghz mb ram gb disk space running windows xp 
target database mb copy stored timber source database mb data stored mysql 
provenance information stored separately mysql 
timber version mysql version nt tcp ip 
implemented java application communicates mysql jdbc timber soap 
performed sets experiments measure relative performance na transactional hierarchical hierarchical transactional ht provenance storage methods 
table summarizes experiments report including description fixed varying parameters listing figures containing experimental results 
patterns update operations summarized table 
random sequences adds deletes copies various proportions 
copies subtrees size parent children 
real update consisted regular pattern copies deletes inserts simulating effect bulk update performed standard xquery statement xpath 
repeatedly copies subtree target inserts elements subtree root deletes existing subtree elements 
variations mix dataset exhibited different deletion patterns shown table 
set experiments ran step updates update patterns storage method 
transactional approaches commits performed updates 
case measured amount time needed provenance manipulation interaction target database interaction provenance database 
measured total size provenance store target database number rows real storage terms transaction 
efficiency considerations precluded measuring size provenance store target database operation 
second experiment ran step versions real mix updates provenance methods experimental methodology step updates 
experiments intended determine techniques scale larger numbers realistic user actions performed run realistic add delete copy update patterns length 
shows total provenance storage rows needed method run step updates 
real storage sizes bytes display trends row requires bytes omit data 
shows total provenance storage rows needed step runs 
numbers top bar show physical sizes tables 
shows average time target database interaction average time add delete copy commit operation mix run 
results accurately reflect observed provenance processing times experiments omit data 
order determine expensive provenance tracking add delete copy operation calculated average time dataset manipulation operation type shows overhead provenance tracking operation percentage base dataset manipulation time 
third experiment measured effects deletes provenance storage 
performed different versions mix update varying deletion patterns 
deletion patterns may representative common user behavior demonstrate storage performance various methods different conditions 
shows results experiment 
plot columns provenance method labeled ac table summary experiments upd 
length trans 
length update pattern prov 
method measured figures add delete copy ac mix mix ht space mix real ht space time del random del add del mix del copy del real ht space real ht time real ht query time add delete copy ac mix mix real del random del add del copy del mix del real table update patterns random adds random deletes random copies equal mix random adds copies equal mix random adds deletes copies copy subtree add nodes delete nodes table deletion patterns paths deleted random added paths deleted copies deleted mix adds copies deleted nodes copied subtree deleted showing provenance table size adds copies performed labeled acd showing size deletes performed 
fourth experiment measured effect transaction length provenance processing time 
consisted running real update hierarchical transactional method transaction lengths 
measured processing time required operation 
summarizes results experiment shows average time needed add delete copy commit run 
amortized data series shows average time operation commit time amortized operations 
fifth experiment measured cost answering typical provenance queries 
storage method measured average query processing time queries random locations run real run 
shows results 
error bars indicate typical ranges response times 
indexing performed provenance relation query times represent worst case behavior 
analysis seen figures hierarchical transactional strategy provide substantial space savings 
shows storage methods perform different types actions 
unsurprisingly inserts deletes handled essentially methods 
copy operations really stress system 
na transactional approaches store provenance records copy recall copies subtrees size hierarchical techniques store record copy 
hierarchical transactional technique provides efficient storage 
results confirm trends longer sequences updates 
shows time spent storing provenance information techniques 
comparison average dataset rows provenance records updates ht method add copy delete number entries provenance store variety update patterns length 
rows mb provenance records updates mb mb mb mb mb ht method ac mix mix real mb mb number entries provenance store mix real update patterns length 
number top bar shows physical size table 
average time ms provenance manipulation time ht method dataset update add prov 
delete prov 
paste prov 
commit prov 
average amount time target database processing add delete copy commit operations provenance store mix update 
provenance query time ht overhead provenance manipulation overhead ht time ms query queries 
time needed perform basic provenance add delete copy operation type overhead provenance tracking operation percentage time perform basic operation 
rows effects deletion ac acd ac acd ac acd ht method ac del random del add del mix del copy del real ht acd effect deletion provenance store 
notation ac indicates provenance table size add copy operations performed acd includes deletes 
time ms transaction length vs processing time size size size size transaction length add delete copy commit amortized effect transaction size provenance processing time 
processing time average commit times shown 
note time copying transactional provenance zero just close zero copies involve interaction provenance store transactional provenance 
depicts average overhead provenance processing individual add delete copy operation 
na storage add delete copy operations require processing time needed interaction target database 
hierarchical provenance faster copies requires time process inserts 
deletes unaffected hierarchical provenance treats deletes exactly na provenance 
time needed query provenance database determine add provenance record 
transactional provenance hand responsive 
inserts copies run essentially instantaneously interaction target database provenance store needed 
commits require average time database interaction occur steps 
savings due reduced number round trips provenance database 
hierarchical transactional storage time needed copies inserts basic operations take total time 
commits take amount time average hierarchical provenance 
effects deletion shown 
na hierarchical provenance deletion simply adds provenance records 
transactional provenance deletion patterns result fewer records stored data inserted deleted transaction 
hierarchical transactional provenance displays stable behavior stores fewest records approaches update pattern 
effect transaction length processing time shown 
processing time basic operation vary transaction size amount time needed process commit grows approximately linearly transaction length 
average time operation remains 
results reflect expected behavior illustrate approach works interactive speeds seconds transactions operations 
committing corresponding changes target database take long longer 
sophisticated techniques minimize network round trips commits reduce processing time 
displays time needed query various forms provenance queries 
general expected outperform better prove nance store access patterns data manipulation inherent 
queries run slightly faster hierarchical provenance interestingly query slower benefit na version query process descendants node including ones listed provenance store 
queries ran fastest transactional provenance queries observed speedup roughly factor relative na approach 
sense transactional provenance stores records na approach 
course transactional provenance descriptive na approach reasonable tradeoff especially user decide versions database commit 
hierarchical transactional provenance benefits reduced number records inherent transactional method perform transactional approach runs slightly faster na approach 

related biological scientific databases dealt provenance tracking ad hoc ways 
genome database uses triggers store records updates database provides history local changes 
cases provenance copied data recorded manually 
example nuclear protein database links pubmed bibliographic database protein databases entrez entered manually curator alongside relevant data 
mentioned workflow coarse grained provenance studied extensively context scientific computation bose survey existing research systems 
approaches record process derive processed data products raw data 
scientific computation especially grid computing provenance important issue reasons 
important record conditions source data recorded instrument settings conditions order ensure repeatability 
second grid computation workflow may run computations different machines grid running different operating systems different versions analysis software may affect results subtle ways 
provenance important tracking source anomalies ensuring experiments repeatable assessing quality results 
provenance identify avoid costly duplicate recomputations 
intentionally focused provenance tracking step copy paste updates feel important problem received relatively little attention 
course important able propagate provenance annotations traditional relational database queries extensions complex objects xml support provenance tracking bulk updates 
fair amount done provenance annotation relational queries including issues assign provenance information results joins unions may fuse data different sources remain ill understood :10.1.1.6.1848
popular approach dealing joins unions appears consistent framework interpret data fused coming source locations 
deal grouping aggregation operations sql group sum average obvious approach say provenance result aggregation operation result copied input computed 
approach say came locations involved computing done provenance lineage 
third believe general approach define provenance computed value expression describing value computed 
example contains tuples provenance result select count expression count 
similar approach taken workflow provenance scientific computation chimera 
approach provenance overlaps areas including transaction logging data availability schema evolution archiving file synchronization version control 
rest section discuss relationship areas 
logging database filesystems systems transaction logging journaling order provide crash recovery 
logs store detailed information update operations applied database 
information necessary undo effects transactions committed time crash 
provenance tracking similar respects logging argue provenance tracking redundant unnecessary database system performs logging 
logging serves different purpose transaction logs provide information provenance achieve effect necessary add extra instrumentation stores additional information logging system 
opinion mistake application level code data place system critical mechanism 
data availability natural question sense retain provenance information original data source unavailable 
answer emphatic provenance information impossible reproduce potentially 
provenance information lost data help recover lost data copies 
example suppose databases constructed data construction process recorded provenance stores disappears 
fairly certain contents provenance records partially reconstruct disagree contents easily happen due changes due errors information may better 
schema evolution natural question approach relates schema evolution 
example suppose construct storing provenance schema symmetrically changes 
invalidate provenance information bring date 
sensible reactions 
take view provenance information reflect real relationship current versions databases involved 
approach traditionally taken data integration schema evolution 
changes schemas provenance information date 
tends expensive correct require centralization cooperation databases control coordinate changes schemas 
imposes database curator responsibility monitor changes relevant source databases update provenance information changes 
alternatively take view provenance information records happened happened changes schemas render information meaningless harder interpret provenance information respect current version 
setting relationship old new versions captured provenance mapping tracks publishes provenance information relate provenance stored current version 
version control archiving synchronization version control archiving file synchronization closely related approach provenance address problem 
techniques aim preserve reconcile states data evolves time tell versions differ changes performed 
systems typically track changes span multiple systems 
conversely provenance identifies source information current version gives guarantee cited information preserved 
information may database updated data extracted database archived confirming evidence information extracted 
believe provenance recording archiving necessary order preserve completely scientific record 
obvious extensions 
provide user interface acceptable curator different currently 
current practice situations web browsers acquire update information 
reimer douglas investigated usability architectural considerations development prototype web notebook called 
net notes users copy data web sites paste personal workspace notebook 
data copied system copied html structure text source page 
researchers grid scientific computing investigated similar personal workspace approaches supporting scientific data analysis needs 
believe approach combined systems provide support tracking provenance copied computed data little change current practice 
currently looking extensions basic language atomic updates languages allow bulk updates 
example common curated databases copy citation data standard sources may laborious thousands citations may need restructured standard recipe 
technical challenge connect semantics bulk update language copy paste operations standard languages query update languages sql 
setting transactional provenance natural inherent parallelism conventional update query languages 
na provenance negate form query optimization 
presence bulk updates amount provenance information overwhelming number provenance records corresponding query bulk update may proportional size database size transformation 
alternative store approximate provenance records 
example experimented xpath expressions approximate full set provenance links generated bulk updates 
approach record prov indicates transaction may include links target paths matching source paths matching single link may abbreviate large number detailed links containing explicit identifier information 
storage needed approximate provenance remains proportional size query update negligible compared requirements full provenance table 
provenance queries longer answered certainty 
say data may come source location 
may acceptable price pay able store simple provenance information efficiently bulk updates 

provenance information essential assessing integrity value data especially scientific databases 
managing provenance metadata alongside ordinary data adds high cost scientific databases curated constructed hand expert users enter raw data copy existing data sources 
automatic techniques collecting managing provenance situations beneficial 
challenging problem requires tracking data copied databases modified curators 
proposed realistic approach automatic provenance tracking curated databases 
implemented approach conducted experimental evaluation methods storing managing provenance 
na approach investigated relatively high storage cost storage overhead proportional amount data touched update moderate processing cost overhead update processing time simple provenance queries fairly expensive answer 
hierarchical transactional technique reduced storage overhead experiments factor decreasing processing overhead update operation providing improved performance provenance queries 
experimental results affirm provenance tracked managed efficiently approach 
believe promising step providing powerful general purpose tools life easier scientific data curators increase reliability transparency scientific record 
acknowledgments wish wendy bickmore jagadish val tannen discussions 
supported nsf graduate fellowship nih project da epsrc project funding royal society 

bader 
bind interaction network database 
nucleic acids research 
bhagwat tan 
annotation management system relational databases 
proc 
intl 
conf 
large data bases vldb pages 
morgan kaufmann 
bose 
lineage retrieval scientific data processing survey 
acm comput 
surv 
buneman davidson fan hara 
tan 
keys xml 
computer networks august 
buneman khanna tan 
archiving scientific data 
acm trans 
database syst 
buneman khanna 
tan 
characterization data provenance 
icdt pages 
cherry adler ball jia roe schroeder weng botstein 
sgd saccharomyces genome database 
nucleic acids res 
cui widom 
lineage tracing general data warehouse transformations 
vldb 
bickmore 
nuclear protein database npd sub nuclear localisation functional annotation nuclear proteome 
nucleic acids research 
foster zhao 
chimera virtual data system representing querying automating data derivation 
international conference scientific statistical database management pages july 
foster greenwald moore pierce schmitt 
combinators bi directional tree transformations linguistic approach view update problem 
acm sigplan sigact symposium principles programming languages popl long beach california 

molecular biology database collection update 
nucl 
acids res jan 
doi nar 
gray liu szalay dewitt 
scientific data management coming decade 
technical report msr tr microsoft research january 
groth miles fang wong 
moreau 
recording provenance protein compressibility experiment 
proceedings th ieee international symposium high performance distributed computing hpdc 
jagadish chapman lakshmanan patel srivastava wu yu 
timber native xml database 
vldb journal 
lee madnick 
source attribution querying semi structured documents 
workshop web information data management pages 
marian abiteboul 
change centric management versions xml warehouse 
apers atzeni ceri paraboschi ramamohanarao snodgrass editors vldb pages 
morgan kaufmann 

org 
gray li szalay 
batch query system interactive local storage sdss vo 
allen editors astronomical data analysis software systems xiii volume asp conference series 
reimer douglas 
implementation challenges associated developing web notebook 
journal digital information jodi 
gannon 
survey data provenance science 
sigmod record 
tan 
containment relational queries annotation propagation 
proceedings international workshop database programming languages dbpl 

www ebi ac uk 
widom 
trio system integrated management data accuracy lineage 
cidr pages 
kumar 
db cross species database protein localization function 
nucleic acids research 
woodruff stonebraker 
supporting fine grained data lineage database visualization environment 
international conference data engineering 
zhao goble stevens bechhofer 
semantically linking browsing provenance logs science 
pages 
