query optimization presence limited access patterns daniela florescu inria rocquencourt france daniela florescu inria fr consider problem query optimization presence limitations access patterns data provide values attributes relation order obtain tuples 
show presence limited access patterns search space annotated query plans annotations describe inputs plan 
describe theoretical experimental analysis resulting search space novel query optimization algorithm designed perform di erent conditions may arise 
algorithm searches set annotated query plans pruning invalid non viable plans early possible search space uses best rst search strategy order produce rst complete plan early search 
describe experiments illustrate performance algorithm 
goal query optimizer database system translate declarative query expressed logical schema imperative query execution plan accesses physical storage data applies sequence relational operators 
structures exist useful query alternative scanning entire relation exists 
existence fall back option perform complete scan important assumption traditional query optimization 
query processing applications common characteristic possible perform complete scans data 
query optimization problem complicated fact limited access patterns data 
alon levy university seattle alon cs washington edu dan suciu labs research suciu research att com manolescu inria rocquencourt france manolescu inria fr application optimization presence foreign table functions :10.1.1.54.966
cases functions require set inputs order return set tuples 
mainly motivated query processing data integration semi structured data 
data integration system needs access autonomous remote sources order answer query 
data integration system able model contents remote sources relations sources may provide limited access patterns data serve 
mainly motivated query processing data integration semi structured data 
data integration system needs access autonomous remote sources order answer query 
data integration system able model contents remote sources relations sources may provide limited access patterns data serve 
may happen main reasons underlying data may stored structured le legacy system interface data naturally limited data stored traditional database system source may provide limited access capabilities reasons security performance 
semi structured data model labeled directed graphs provides exible mechanism integrating larger class data sources :10.1.1.19.3770
case graph provides logical abstraction particular storage data 
actual storage graph poses natural limitations access patterns data 
example possible allow edges forward direction system may allow scan entire set objects graph edges backwards 
cases access pattern limitations data modeled binding patterns 
second type join right input subtree executed independently requires bindings obtained result left subtree 
algorithms developed join operator nest loop join applicable dependent joins 
cient implementation dependent joins considered context optimization foreign functions context evaluation path expressions object oriented databases 
furthermore caching techniques optimize implementation dependent joins discussed context montage system 
implementation dependent joins combines hashing caching proposed :10.1.1.31.2850
note dependent joins received names literature functional join implicit join lter join theta semi join bind join 
annotated plans mentioned earlier algorithm going search space annotated query execution plans 
annotation describes variables query input plan 
formally node query execution plan tree labeled pair conj conj set conjuncts covered adornment describes variables order subtree executable 
equivalence class fx valid viable plan includes produce bindings required inputs 
equivalence class fg valid 
equivalence class fx covers equivalence class fx 
optimization binding patterns section show basic properties underlying system style optimization need reconsidered presence binding pattern limitations 
fact compare system garlic data integration system partially handles binding pattern limitations framework system :10.1.1.12.7606
arguing essential consider query execution plans annotated input variables 
key feature distinguishing algorithm garlic 
open partial query execution plans order compare approach garlic distinguish classes partial query execution plans 
open partial query execution plan non atomic plan executed constants available query 
yr 
wt recall traditional setting query graph connected space left linear trees necessarily includes plan cartesian products 
context query optimizer limit search left linear trees having cartesian products 
placement selections context system possible decouple decision join ordering decision placement selections 
placement heuristically pushing selections far possible query tree cost fashion separate phase mixing decision join order decision placement expensive predicates dynamic programming style optimization :10.1.1.20.9548
context considering query execution plans annotated variables inputs plan interaction placement selection join ordering subtle 
example consider query fg suppose access patterns allowed relations 
combining pattern pattern dependent join operator obtain plan equivalence class fg 
combining pattern pattern join operator obtain plan equivalence class 
theoretical study study examines size measures number valid complete query execution plans number viable partial query execution plans considered dynamic programming style optimizer 
course number query execution plans usually large partial plans larger dynamic programming considers small fraction partial plans 
example case chain queries relations number plans cartesian products known number bushy partial plans cartesian products considered dynamic programming algorithm known 
note consider number plans explored dynamic programming optimizer results interest employ di erent paradigm dynamic programming yardstick 
example show classical rule optimizer considers general strictly higher sized search space dynamic programming improved rule optimization algorithm complexity matches dynamic programming :10.1.1.108.3178
results analysis shown table 
table shows maximal number complete query execution plans viable partial query execution plans generated dynamic programming algorithm cases bushy trees considered columns case left linear trees considered columns 
formulas include query execution plans cartesian products 
focus theoretical study chain queries binary relations rn xn xn consider di erent combinations access patterns di erent sets bound variables 
situation worse randomized approach guaranteed cover valid plans 
analysis search problem provided facilitate attempts apply di erent search paradigms 
cases key reason existence limited access patterns mismatch logical physical views data 
binding patterns describe mismatches 
tsatalos describe gmaps mechanism describing di erent storage patterns data :10.1.1.50.3586
gmaps describe storage structures stored data result projections selections joins logical schema data secondary indexes path indexes eld replication 
gmaps binding patterns characterize disjoint sets mismatches logical physical views data 
combine families mismatches need extend algorithm ways :10.1.1.50.3586
need consider annotated query execution plans 
binding patterns describe mismatches 
tsatalos describe gmaps mechanism describing di erent storage patterns data :10.1.1.50.3586
gmaps describe storage structures stored data result projections selections joins logical schema data secondary indexes path indexes eld replication 
gmaps binding patterns characterize disjoint sets mismatches logical physical views data 
combine families mismatches need extend algorithm ways :10.1.1.50.3586
need consider annotated query execution plans 
note execution plans manipulate gmaps thought materialized views database relations :10.1.1.50.3586
second join enumeration algorithm needs consider plans larger size 
follows combined context binding patterns gmaps query execution plan may require joins number relations query relation mentioned query may appear leaf query execution plan :10.1.1.49.3156
gmaps describe storage structures stored data result projections selections joins logical schema data secondary indexes path indexes eld replication 
gmaps binding patterns characterize disjoint sets mismatches logical physical views data 
combine families mismatches need extend algorithm ways :10.1.1.50.3586
need consider annotated query execution plans 
note execution plans manipulate gmaps thought materialized views database relations :10.1.1.50.3586
second join enumeration algorithm needs consider plans larger size 
follows combined context binding patterns gmaps query execution plan may require joins number relations query relation mentioned query may appear leaf query execution plan :10.1.1.49.3156
noted problem limited access stored data arises context data integration 
problem building query execution plans limited access patterns available considered data integration :10.1.1.49.3156:10.1.1.38.7636
combine families mismatches need extend algorithm ways :10.1.1.50.3586
need consider annotated query execution plans 
note execution plans manipulate gmaps thought materialized views database relations :10.1.1.50.3586
second join enumeration algorithm needs consider plans larger size 
follows combined context binding patterns gmaps query execution plan may require joins number relations query relation mentioned query may appear leaf query execution plan :10.1.1.49.3156
noted problem limited access stored data arises context data integration 
problem building query execution plans limited access patterns available considered data integration :10.1.1.49.3156:10.1.1.38.7636
addressed question exists ordering accesses data sources answer query obtained 
question nding optimal order considered 
note execution plans manipulate gmaps thought materialized views database relations :10.1.1.50.3586
second join enumeration algorithm needs consider plans larger size 
follows combined context binding patterns gmaps query execution plan may require joins number relations query relation mentioned query may appear leaf query execution plan :10.1.1.49.3156
noted problem limited access stored data arises context data integration 
problem building query execution plans limited access patterns available considered data integration :10.1.1.49.3156:10.1.1.38.7636
addressed question exists ordering accesses data sources answer query obtained 
question nding optimal order considered 
related issue query optimization capabilities data sources varying 
haas consider query optimization context garlic system data source may di erent capabilities performing joins internally :10.1.1.12.7606
problem building query execution plans limited access patterns available considered data integration :10.1.1.49.3156:10.1.1.38.7636
addressed question exists ordering accesses data sources answer query obtained 
question nding optimal order considered 
related issue query optimization capabilities data sources varying 
haas consider query optimization context garlic system data source may di erent capabilities performing joins internally :10.1.1.12.7606
vassalos papakonstantinou describe powerful language describing source capabilities :10.1.1.103.4491
cost query optimization problem presence binding patterns considered 
authors propose heuristic algorithms greedy ationary cluster algorithm 
show speci cost model consider optimal plan space left deep plans show proposed algorithms interesting properties optimal competitive conjuncts 
addressed question exists ordering accesses data sources answer query obtained 
question nding optimal order considered 
related issue query optimization capabilities data sources varying 
haas consider query optimization context garlic system data source may di erent capabilities performing joins internally :10.1.1.12.7606
vassalos papakonstantinou describe powerful language describing source capabilities :10.1.1.103.4491
cost query optimization problem presence binding patterns considered 
authors propose heuristic algorithms greedy ationary cluster algorithm 
show speci cost model consider optimal plan space left deep plans show proposed algorithms interesting properties optimal competitive conjuncts 
contrast algorithm guaranteed nd optimal plan independent cost model 
chaudhuri shim 
optimization presence user de ned predicates 
proc 
vldb 
garcia molina papakonstantinou quass rajaraman sagiv ullman widom :10.1.1.19.3770
tsimmis project integration heterogeneous information sources 
journal intelligent information systems march 
haas kossmann wimmers yang :10.1.1.12.7606
optimizing queries diverse data sources 
vldb 
garcia molina papakonstantinou quass rajaraman sagiv ullman widom :10.1.1.19.3770
tsimmis project integration heterogeneous information sources 
journal intelligent information systems march 
haas kossmann wimmers yang :10.1.1.12.7606
optimizing queries diverse data sources 
proc 
vldb athens greece 
hellerstein naughton :10.1.1.31.2850
haas kossmann wimmers yang :10.1.1.12.7606
optimizing queries diverse data sources 
proc 
vldb athens greece 
hellerstein naughton :10.1.1.31.2850
query execution techniques caching expensive methods 
proc 
acm sigmod 
hellerstein stonebraker :10.1.1.20.9548
hellerstein naughton :10.1.1.31.2850
query execution techniques caching expensive methods 
proc 
acm sigmod 
hellerstein stonebraker :10.1.1.20.9548
predicate migration optimizing queries expensive predicates 
proc 
acm sigmod pages 
ono lohman 
acm pods chicago illinois 
steinbrunn moerkotte kemper 
heuristic randomized optimization join 
vldb journal 
kersten :10.1.1.108.3178
complexity join enumeration 
proc 
vldb 
rajaraman sagiv ullman :10.1.1.49.3156
kersten :10.1.1.108.3178
complexity join enumeration 
proc 
vldb 
rajaraman sagiv ullman :10.1.1.49.3156
answering queries templates binding patterns 
proc 
acm pods san jose ca 
ramakrishnan ullman 
acm pods san jose ca 
ramakrishnan ullman 
survey deductive database systems 

pirahesh :10.1.1.49.3156
sql open heterogeneous data access 
proc 
acm sigmod 
seshadri hellerstein pirahesh leung ramakrishnan srivastava stuckey sudarshan 
seshadri hellerstein pirahesh leung ramakrishnan srivastava stuckey sudarshan 
cost optimization magic algebra implementation 
proc 
acm sigmod 
tsatalos solomon ioannidis :10.1.1.50.3586
gmap versatile tool physical data independence 
vldb journal 
vassalos papakonstantinou :10.1.1.103.4491
describing query capabilities heterogeneous sources 
acm sigmod 
tsatalos solomon ioannidis :10.1.1.50.3586
gmap versatile tool physical data independence 
vldb journal 
vassalos papakonstantinou :10.1.1.103.4491
describing query capabilities heterogeneous sources 
proc 
vldb athens greece 
moerkotte :10.1.1.20.9548
vassalos papakonstantinou :10.1.1.103.4491
describing query capabilities heterogeneous sources 
proc 
vldb athens greece 
moerkotte :10.1.1.20.9548
cient dynamic programming algorithms ordering expensive joins selections 
proc 
edbt 
yerneni li garcia molina ullman 
