constraint query languages paris kanellakis gabriel kuper peter revesz submitted november revised july investigate relationship programming constraints database query languages 
show efficient declarative database programming combined efficient constraint solving 
key intuition generalization ground fact tuple conjunction constraints small number variables 
describe basic constraint query language design principles illustrate classes constraints real polynomial inequalities dense linear order inequalities equalities infinite domain boolean equalities 
analysis quantifier elimination techniques logic concept data complexity database theory 
framework applicable managing spatial data combined existing multidimensional searching algorithms data structures 
individual concurrent process maintains manipulates constraints describe partial information state processes 
language framework relational data model low data complexity account searches logarithmic faster sizes input relations 
ability perform searches relational databases impractical 
efficient secondary storage additional requirement low data complexity satisfaction greatly contributes relational technology 
trees variants trees examples important data structures implementing relational databases :10.1.1.96.6637
particular secondary memory access transmit units data relation tuples tree attribute space case 
operations define problem dimensional searching relational database attribute corresponding performance bounds tree find tuples attribute 
output size tuples range searching worst case log secondary memory accesses 
key key searching 
