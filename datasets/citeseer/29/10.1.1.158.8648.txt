vector space analysis belief state approximation pomdps pascal poupart department computer science university toronto toronto cs toronto edu craig boutilier department computer science university toronto toronto cs toronto edu propose new approach value directed belief state pomdps 
model allows choose approximation methods belief state monitoring small impact decision quality 
vector space analysis problem devise new search procedures selecting approximation scheme better computational properties existing methods 
provide looser error bounds show empirically similar impact decision quality practice run orders magnitude quickly 
partially observable markov decision processes pomdps attracted considerable attention model decision theoretic planning 
generality allows seamlessly model sensor action uncertainty uncertainty state knowledge multiple objectives 
computational intractability limited practical applicability 
important approach pomdps involves constructing value function belief state mdp offline maintaining belief state distribution system states online implement optimal policy 
number approaches attacking offline computational problems studied including improved algorithms factored representations numerous approximation schemes :10.1.1.116.1003:10.1.1.126.4744
little focused online belief state monitoring problem 
planning state spaces grow exponentially number variables maintaining explicit distribution states generally impractical 
concise representations dynamic bayes nets dbns monitoring generally intractable independencies exploited dbns vanish time 
boyen koller proposed projection schemes approximate monitoring essentially breaking weaker correlations variables ensure tractability 
poupart boutilier proposed value directed methods approximation allowing anticipated loss expected choice approximation scheme 
pursue value directed approach emphasis minimizing impact decision quality critical factor devising useful approximations 
value determine correlations safely ignored monitoring belief state 
propose alternative approach choosing approximation schemes monitoring pomdps overcomes computational bottlenecks 
introduce vector space formulation approximation problem allows construct approximation schemes looser error bounds quickly 
despite looser bounds show empirically decision quality rarely worse obtained intensive approaches 
methods time roughly order time taken solve pomdp run offline pomdp technique currently applied 
furthermore methods take advantage factored dbn representations avoid state enumeration 
offline cost allows faster approximate online policy implementation 
cases pomdp solved traditional flat fashion typically luxury compiling value function offline 
large pomdps reasonably expect value function information exact approximate available direct monitoring process 
fact able produce value function offline imply ability monitor process exactly timely online fashion 
model offers novel view approximation problem belief state monitoring pomdps 
briefly overview pomdps value directed approximation section 
vector space formulation section provide suggestive empirical techniques exist generating finite state controllers pomdps reasons wanting approaches 
results section 
pomdps belief state monitoring key components pomdp finite state space finite action finite observation reward actions induce stochastic state transitions specified probabilities agent provided noisy observations system state specified probabilities 
reward received state agent objective control system judicious choice action maximize expected reward obtained horizon interest 
rewards obtained time agent adopting specific course action viewed random variables 
aim construct policy maximizes expected sum discounted tr discount factor 
optimal course action determined considering fully observable belief state mdp belief states distributions overs form states policy belief states action choices 
key result sondik showed value finite horizon problem piecewise linear convex represented finite collection vectors problems finite collection generally offers approximation 
specifically generate collection vectors max value function upper surface vectors shown 
vector associated specific course action 
finite horizon pomdps set generated process 
algorithms exist construct efficient representations vectors decision trees algebraic decision diagrams adds pomdp specified concisely dbns :10.1.1.116.1003
insight nature pomdp value functions gained examining monahan method solving pomdps 
monahan algorithm proceeds producing sequence ofk stage go value represented set vectors value function belief state executing ak step conditional plan 
precisely step observation strategies set mappings 
vector value executing implementing value executing step plan associated vector observed 
cp denote plan cp ha cp zi 
informally write write ha denote vector reflecting value plan 
implementation policy requires monitor belief time may plugged value function suitable action choice 
sw switch set states maintained standard bayesian methods large cost prohibitive 
especially true determined set jsj jxj 
cases dbns represent dynamics pomdps dbn inference techniques exploit conditional independence variables applied efficient 
unfortunately shown boyen koller problems variables dbns tend correlated time dbns offer significant savings 
boyen koller introduced projection schemes method approximate belief states 
projection subsets variable subset 
correlations variables subset preserved subsets assumed independent 
instance ifx fa cg projections fab exact belief pr pr ab pr 
assumed independence allows efficient monitoring dbns maintains marginals subset ins 
choice projection scheme approximation dramatic impact decision quality pomdp approximate lead choice suboptimal course action 
poupart boutilier propose value directed approximation framework allowing computation bounds loss expected projection schemes search methods choosing projections tradeoff decision quality monitoring efficiency 
techniques computationally intensive potentially requiring time quadratic solution time pomdp offline computation produces projection scheme improves online monitoring efficiency minimal sacrifice decision quality 
briefly outline model 
assume pomdp solved giving set vectors 
letr optimal region set belief maximal 
projection schemes switch set sw bks max set thats 
induce believe maximum value current belief state erroneously switching plan corresponding illustrates switch set sw 
switch sets computed solving nonlinear program 
linear programs lps effectively produce superset switch set 
eks max switch sets supersets thereof compute upper loss expected value single approximation go multistage approximations applied devise alternative set similar spirit switch set 
alternative set alt set vectors corresponding alternative plans may executed result repeatedly approximating belief state time steps see precise definition 
alt constructed dynamic programming procedure similar incremental pruning 
define upper loss expected value due successive belief state approximations go bounds extended infinite 
search optimal projection scheme looking projection minimizes bounds 
space projection schemes large factorial number variables exhibits nice lattice structure 
illustrates lattice projection schemes state space defined joint instantiation 
point denotes projection scheme descendents projection corresponding coarse grained projections 
move lattice accuracy increases number correlations variables preserved belief state increased error bounds decrease monitoring efficiency decreases move downward reason 
number search procedures traverse lattice error bounds guide search 
example simple incremental greedy scheme proposed 
search stopped suitable accuracy efficiency tradeoff reached 
vector space analysis provide vector space analysis belief state approximation projection showing section projections allow movement belief state certain directions defining subspace 
allows view vectors determining gradients value different directions approximations directions give similar value gradients cause switching minimizing error 
section design faster switch ab ab ac ab ac ab ac bc ab bc ab bc ac ac ac ab bc ab bc ac ab ac bc abc bc ac bc abc lattice projection schemes xy xy xy xy test algorithms described yielding looser bounds 
section xy xy devise new vectorspace search algorithm find projections directly trying minimize error bounds relying value gradient similarity 
vector space formulation points belief space 
defined bto displacement vector 
set linear equations terms ofb 
example ifx fx fx yg independent xy xy xy xy geometrically interpret equation hyperplane intersection solution space line origin representing dimensional example subspace 
subspace captures set displacement vectors resulting application ofs 
possible displacement vectors lie line direction vectors opposite orientation assumed direction 
illustrate letb andb 
approximate belief state gives shows dimensional belief space belief xy 
belief omit xy probabilities sum 
bc ab ab bc ac ac bc ab ac bc ab abc ac bc xy xy xy xy xy xy solution space xy solution space possible exact belief lie hyperplane similarly forb 
intersection displacement vectors forb direction 
marginals hyperplanes intersection shift remain parallel 
displacement subspace spanned set displacement vectors induced bys completely characterized marginals elements describes directions displacements 
general jxj dimensional subspace number constraints solution space independent equations corresponding constraint 
cis number subsets variables contained 
obvious rewrite constraints vector states states 
vx vy example subspace spanned spaced sis null space set vectors perpendicular vector inds 
vector space switch test see nice characterization new switch test 
consider simple relaxation switch test 
recall section induce agent switch optimal suboptimal 
idea relaxed vector space vs switch test simply apply technique ignoring presence vectors 
vs switch test asks belief say generalization variables straightforward 
maxx psb andb table linear vs switch test 
lp strictly positive objective value iff variables contained jis vs switch set ofi 
equivalent asking sw vectors removed 
note vs switch set superset true switch set 
constraints nonlinear sets ij computed nonlinear programs 
define simpler dij linear vs switch test table produces superset vs switch set 
lp relaxation lp switch test 
vector representing difference expected value ofi 
show vs switch test positive gradient measures error induced approximation causes switch 
approximation difference changes considerably agent choose wrong maximizing vector 
define relative error ij change relative assessment respect viewed gradient approximations corresponding displacement ij proj ij proj ij ds magnitude 
general angle indicator approximation error 
particular perpendicular dot product zero relative assessment unchanged preventing switch 
definition sis set vectors perpendicular displacement vectors possibly induced bys member ofd possible displacement vectors perpendicular consequently switch vs switch test positive 
fact provides efficient method compute switch sets lp table 
orthogonal vectors corresponding projections 
ij ds stands projection 
consequently proj ij ds zero vector proj ij ds nonzero 
determine measuring length ij ds 
ij ds ij ds particular squared length ij ds computed equation ijv sis orthonormal basis spanning set generate orthonormal bases gram schmidt orthogonalization process normalizing 
consider specific orthonormal basis particular refer factored representation 
problems involving binary variables vector ind sequence normalization 
unnormalized basis component corresponding state number true variables component corresponding state odd number true variables inm 
instance projections fxy marginals yielding basis vectors vx vy vz orthonormal basis implement vs switch tests effectively recourse lp table 
simply compute eq 
dot products 
unstructured dot product jsj elementary operations total time 
factored representations adds considerably improves running time 
basis vector distinct values yields compact add representation 
assuming pomdp solved produce add representations vectors compact representations dot products computed efficiently small constant independent size state space 
sufficiently structured pomdps effective running time test iso 
comparison solving linear program lp switch test polynomial number size state space 
furthermore adds provide useful speed lps effective state ij definition generalized non binary variables 
space intersection state space constraints 
price paid computed vs switch test generally looser original lp test 
section bounds search lattice projection schemes making appropriate time decision quality tradeoffs 
vector space search section describe alternative search method relative error 
compute switch sets attempt minimize worst case error bounds 
new vector space vs search process seeks ij defines displacement perpendicular possible 
motivated observation perpendicular direction approximation respect smaller magnitude consequently switch occur 
technically done minimizing squared length projection eq 

length ij ds special interpretation corresponds greatest absolute relative error rate approximation ds 
relative error rate corresponding displacement relative error induced unit displacement direction ofd choosing minimizes eq 
minimizing squared worst relative error rate may result projections 
ignoring distance exact approximate belief states relative error rate permits quantify bad approximation direction 
projections xj ij ds constrains approximations directions subspace ds 
highest absolute relative error max rate ij ds xj worst relative error rate happens ij ds 
desirable try minimize expression max 
ideally choose simultaneously minimizes eq 

absence prior information relative importance gradient suggest simple schemes minimize sum squared lengths projection minimize squared length greatest projection refer schemes sum max error estimators respectively projection schemes 
course schemes proposed 
vs search uses eq 
eq 
find follows 
starting root traverse lattice projection schemes downward greedy manner 
node pick promising child minimizing eq 
eq 
computational complexity vs search fairly low avoids lps 
running time iso nc jsj projection xj ij ds holds 
region nc nodes lattice traversed evaluation eq 
eq 
takeo cj elementary operations 
vs search streamlined 
constraints max essentially constraints parent nodes ij ds xj ij ds extra constraint corresponding max ij ds labels edge connecting nodes 
basis vector constraint equation means eq 
eq 
computed incrementally lattice traversed downward incremental computation scheme traversing lattice reduces running time nc jsj dot product needs computed 
running time significantly smaller nc kj bound ore bound greedy search lp switch tests 
bound ore bound greedy search vs switch tests running nc comparable 
vs search 
practice jis usually larger vs search slower 
upper bounds running times terms practice factored representations drastically reduce size effective state space structured pomdps 
empirical evaluation test problems carry experiments 
pomdp essentially coffee problem introduced boutilier poole 
second pomdp variation widget problem described draper hanks coffee widget pavement problem state space size size solution full effective max aver 
time table solution statistics test problems weld 
third pomdp inspired pavement maintenance problem described puterman 
analysis experiments doesn require specific domain knowledge reader referred full specification problems 
problems solved hansen feng add implementation incremental pruning ip produce set vectors compact add representation 
problem run stages discounted 
table shows problem full state space size jsj effective size largest intersection add states encountered solution specifically lp dominance test ip 
effective size relevant solution time 
show solution time seconds average size sets fifteen stages maximum size set 
solved searched projection scheme pomdp minimizing different error bounds different switch tests described 
specifically algorithms tested bound ande bound search computes switch sets lp chooses projection bounds vs analogs procedures computes weaker vs switch sets algebraic formulation section vs search methods sum max section ignore bounds try minimize eq 
eq 

search algorithms perform lattice search set projection schemes partition variables disjoint subsets 
furthermore assuming marginals variables provide suitable efficiency accuracy tradeoff lattice traversed children node correspond projections marginal variables 
node projection scheme returned search 
compare time required find projection different search procedures table 
expected running time vs switch tests compared lp switch tests vs switch tests require solution lps 
vs search algorithms minimize sum relative error rates maximum running time roughly significantly faster bound ande bound search algorithms lp switch tests bit slower vs coffee widget pavement bd bd aver aver problem bd bd search vs search time lp vs lp vs max sum table search running time seconds bd bd search vs search lp vs lp vs max sum single bd bd aver aver bd bd aver aver bd bd search vs search lp vs lp vs max sum single table widget problem error comparisons bd bd search vs search lp vs lp vs max sum single table coffee problem error comparisons switch tests forb bound search 
hand vs search solve lps compared lp switch tests hand stronger dependence number vectors compared vs switch tests 
time search projections worse solving pomdps offline cost translates online gains 
fact search procedures avoid solving lps scale effectively larger problems 
cases offer decrease orders magnitude 
running time vs procedures roughly order magnitude pomdp solution procedures 
compare actual average error bounds obtained projection schemes various search algorithms tables 
average error average loss incurred random initial belief states generated uniform distribution 
see average error essentially vs search procedure error bound minimized 
result dramatic computational savings associated vs procedures effectively impact solution quality 
note larger average error observed bounds concerned worst case scenario furthermore tight supersets switch sets really computed 
concluding remarks proposed new approach value directed belief state approximation pomdps 
vector space approach vs switch tests direct vs search offers significant computational benefits value directed methods proposed poupart boutilier 
error bounds looser seen practice new schemes perform table pavement problem error comparisons respect solution quality computational savings achieved little impact decision quality 
furthermore vector space model provides new insights belief state approximation problem approximation impacts decision quality 
novel view gives access numerous tools linear algebra design approximation methods potentially offer better tradeoffs decision quality monitoring efficiency 
instance interesting investigate linear projectors allow design linear approximation methods specifying things displacement perpendicular possible gradient 
linear projectors studied approximation methods numerous properties provide promising alternative improving approximate belief state monitoring 
success scalability methods strongly depends structure compactness vectors 
analyze dependency vector structure conditional independence structure transition observation functions 
linear algebra perspective vectors viewed discounted sum reward vectors multiplied transition observation matrices 
compact structured vectors arise reward vectors fall small invariant subspace transition observation matrices 
possible direction research relate conditional independence structure transition observation functions eigenvalue eigenvector properties define invariant subspaces 
allow better characterize situations approach suitable 
currently extending approach analysis number different directions 
motivated focusing infinite horizon pomdps algorithms analysis assume finite set vectors 
forced approximate value function producing finite set vectors infinite set required simply reducing number vectors keep manageable size 
algorithms applied directly approximate value functions expect analysis extended suitable modifications 
interested applying idea monitoring representations value functions forms approximate monitoring 
grid value functions provides attractive method producing approximate value functions approximate monitoring generally necessary 
expect information grid value functions profitably direct choice projection approximation schemes 
value information guide belief state approximation methods tremendous interest developed sampling particle filtering algorithm influenced value function information 
taken granted form belief state approximation attempt solve pomdp account fact construct policies optimal subject resource constraints placed monitoring process 
research supported natural sciences engineering research council institute robotics intelligent systems 
boutilier dean hanks 
decision theoretic planning structural assumptions computational leverage 
journal artificial intelligence research 
boutilier poole 
computing optimal policies partially observable decision processes compact representations 
proceedings thirteenth national conference artificial intelligence pages portland 
boyen koller 
tractable inference complex stochastic processes 
proceedings fourteenth conference uncertainty artificial intelligence pages madison wi 
brafman 
heuristic variable grid solution method pomdps 
proceedings fourteenth national conference artificial intelligence pages providence 
cassandra kaelbling littman 
acting optimally partially observable stochastic domains 
proceedings twelfth national conference artificial intelligence pages seattle 
cassandra littman zhang 
incremental pruning simple fast exact method pomdps 
proceedings thirteenth conference uncertainty artificial intelligence pages providence ri 
draper hanks weld 
probabilistic planning information gathering contingent execution 
proceedings second international conference ai planning systems pages chicago 
hansen feng 
dynamic programming pomdps factored state representation 
proceedings fifth international conference ai breckenridge 

hauskrecht :10.1.1.126.4744
value function approximations partially observable markov decision processes 
journal artificial intelligence research 
lovejoy 
survey algorithmic methods partially observed markov decision processes 
annals operations research 
madani hanks condon 
undecidability probabilistic planning infinite horizon partially observable markov decision problems 
proceedings sixteenth national conference artificial intelligence pages orlando 
monahan 
survey partially observable markov decision processes theory models algorithms 
management science 
papadimitriou tsitsiklis 
complexity markov decision processes 
mathematics operations research 
poupart 
approximate value directed belief state monitoring partially observable markov decision processes 
master thesis university british columbia vancouver 
poupart boutilier 
value directed belief state approximation pomdps 
proceedings sixteenth conference uncertainty artificial intelligence pages stanford 
poupart ortiz boutilier 
sampling methods monitoring pomdps 
proceedings seventeenth conference uncertainty artificial intelligence seattle 
volume 
puterman 
markov decision problems 
wiley new york 
smallwood sondik 
optimal control partially observable markov processes finite horizon 
operations research 
