developments spatio temporal query languages integrating spatio temporal data data types existing data models promising approach creating spatio temporal query languages 
context important new class queries identified concerned developments spatial objects time queries ask especially changes spatial relationships 
definition notion spatio temporal predicate provide framework allows build complex predicates starting small set elementary ones 
predicates characterize developments 
show concepts realized relational data model 
particular demonstrate sql extended enable querying developments 
spatial data model generalized spatio temporal 
spatiotemporal objects defined called spatio bitemporal complexes spatial features described simplicial complexes temporal features bitemporal elements attached components simplicial complexes 
hand temporal data models generalized spatio temporal include variants gadia temporal model described 
main drawback approaches incapable modeling continuous changes spatial objects time 
approach takes integrated view space time basis introduces concept spatio temporal data types :10.1.1.25.8432
definition temporal object general observation changes time expressed function time 
temporal version object type function time 
spatio temporal objects moving points evolving regions regarded special instances temporal objects spatial data type 
similar approach just mentioned behavioral time sequences introduced 
information object scattered relations 
approach modeling continuous changes spatial objects definition corresponding operations predicates inappropriate purposes 
adding additional attributes relation schema attribute timestamped models example aim gathering information object single tuple allow complex attribute values 
complex values incorporate temporal dimension frequently modeled functions time value domain 
perspective attribute timestamped models similar fit models described :10.1.1.25.8432:10.1.1.25.8983
models additionally encapsulate spatio temporal objects adt objects integrated complex values databases 
adt approach advantages 
important benefit employing adts expressive relying attribute timestamped models tuple timestamped models continuous changes modeled :10.1.1.25.8432
second benefit definition adt values valid regardless particular dbms data model query language 
complex values incorporate temporal dimension frequently modeled functions time value domain 
perspective attribute timestamped models similar fit models described :10.1.1.25.8432:10.1.1.25.8983
models additionally encapsulate spatio temporal objects adt objects integrated complex values databases 
adt approach advantages 
important benefit employing adts expressive relying attribute timestamped models tuple timestamped models continuous changes modeled :10.1.1.25.8432
second benefit definition adt values valid regardless particular dbms data model query language 
reason adt values modeled concepts dbms data model depend 
facilitates easy elegant conceptual integration adt values relational complex object object oriented data models query languages 
query languages intention devise new spatio temporal query language scratch appropriately extend widespread database query language sql 
example point changes location time element type point called moving point 
similarly element type region region move grow shrink 
called evolving region 
currently consider temporal version lines mainly applications moving lines 
reason lines abstractions projections movements primary entities movements considered :10.1.1.25.8432
case principally possible integrate moving lines way moving points needed 
addition changing numbers booleans essential defining operations temporal objects 
instance interested computing distance airplane storm 
achieved operation distance point region real principle take non temporal operation lift works temporal objects returning temporal object result 
case principally possible integrate moving lines way moving points needed 
addition changing numbers booleans essential defining operations temporal objects 
instance interested computing distance airplane storm 
achieved operation distance point region real principle take non temporal operation lift works temporal objects returning temporal object result 
precisely function corresponding lifted version defined sn sn time example distance distance :10.1.1.106.2490:10.1.1.106.2490
note definition implies lifting constant objects nontemporal type time temporal lifting course applicable spatial predicates 
consider spatial predicate inside point region bool lifted version predicate type inside point region bool meaning yields true time point inside region undefined point region undefined false cases 
notations comprehensible generally denote non temporal types entities functions predicates lower case letters temporal counterparts start capital letters 
example spatial operation distance takes objects type point region computes number type real lifted version distance distance maps elements type region region point point real real temporal reals 
erwig ting schneider vazirgiannis 
discrete modeling spatio temporal data types 
th acm symp 
geographic information systems pages 
erwig ting schneider vazirgiannis :10.1.1.25.8432
spatio temporal data types approach modeling querying moving objects databases 

appear 
erwig schneider 
workshop advances database technologies lncs pages 
gadia 
temporal databases parametric data 
pages 
ting hlen erwig lorentzos schneider vazirgiannis :10.1.1.106.2490:10.1.1.106.2490
foundation representing querying moving objects 
technical report hagen 
ting schneider 
realm spatial data types rose algebra 
