materialized view maintenance integrity constraint checking trading space time kenneth ross lambda columbia university cs columbia edu divesh srivastava research divesh research att com sudarshan indian institute technology cse investigate problem incremental maintenance sql view face database updates show possible reduce total time cost view maintenance materializing maintaining additional views 
formulate problem determining optimal set additional views materialize optimization problem space possible view sets includes empty set 
optimization problem harder query optimization deal multiple view sets updates multiple relations multiple ways maintaining view set updated relation 
develop memoing solution problem solution implemented expression dag representation rule optimizers volcano 
demonstrate global optimization general achieved locally optimizing materialized subview common subexpressions different materialized subviews allow local plans combined optimal global plan 
identify conditions materialized subviews expression dag local optimization possible 
integrity constraints modeled materialized views results required empty 
results additional views materialize particularly important efficient checking sql assertions 
example additional materialized views consider corporate database relations ffl dept dname budget gives manager budget department ffl emp ename dname salary gives department salary employee 
materialized view determine departments expense sum salaries employees department exceeds budget 
create view dname select dept dname emp dept dept dname emp dname groupby dept dname budget having sum salary budget database relations emp dept updated view maintenance incremental techniques expensive :10.1.1.91.5064:10.1.1.56.375
example new employee added department salary employee department raised sum salaries employees department needs recomputed compared department budget expensive 
view specify integrity constraint department expense exceed budget requiring view empty 
specified sql follows create assertion check exists select efficiency incremental view maintenance efficiency checking integrity constraint considerably improved view additionally kept materialized 
create view dname select dname sum salary emp groupby dname new employees added existing employees removed salaries existing employees modified efficient incremental view maintenance possible adding subtracting previous aggregate values 
detailed cost model analysis example section 
sample dataset shall show threefold decrease estimated materialization cost achieved maintaining additional view 
maintaining suitable set additional materialized views lead substantial reduction maintenance cost 
contributions outline contribution show possible reduce cost view maintenance materialized view materializing maintaining additional views 
materialized view possible views additionally materialized incremental maintenance second contribution formulate problem determining additional views materialize optimization problem space possible view sets develop exhaustive memoing algorithm solve optimization problem works monotonic cost model implemented expression dag representation rule optimizers volcano section :10.1.1.111.1658
third contribution principle optimality allows problem solutions subviews combined determine solution toplevel view 
general local optimization ensure global optimization 
identify conditions expression dag representation principle restrict search space explosion section 
fourth contribution systematic space heuristics prune search space reduce optimization cost section 
general local optimization ensure global optimization 
identify conditions expression dag representation principle restrict search space explosion section 
fourth contribution systematic space heuristics prune search space reduce optimization cost section 
discuss possible extensions techniques section 
related view maintenance closely related problem integrity constraint checking studied extensively literature various view definition languages select spj views views multiset semantics views grouping aggregation recursive views various types updates insertions deletions modifications database relations modifications view definition :10.1.1.91.5064:10.1.1.103.7060:10.1.1.56.9912:10.1.1.56.375
survey view maintenance literature see :10.1.1.40.2254
problem determining fashion additional views materialize reduce cost incremental maintenance materialized view studied 
knowledge topic 
supplementary relations bottom evaluation recursive queries viewed additional materialized views maintained query evaluation order efficiently maintain view relations defining original query 
identify conditions expression dag representation principle restrict search space explosion section 
fourth contribution systematic space heuristics prune search space reduce optimization cost section 
discuss possible extensions techniques section 
related view maintenance closely related problem integrity constraint checking studied extensively literature various view definition languages select spj views views multiset semantics views grouping aggregation recursive views various types updates insertions deletions modifications database relations modifications view definition :10.1.1.91.5064:10.1.1.103.7060:10.1.1.56.9912:10.1.1.56.375
survey view maintenance literature see :10.1.1.40.2254
problem determining fashion additional views materialize reduce cost incremental maintenance materialized view studied 
knowledge topic 
supplementary relations bottom evaluation recursive queries viewed additional materialized views maintained query evaluation order efficiently maintain view relations defining original query 
supplementary relations introduced part query rewriting step take cost consideration 
supplementary relations introduced part query rewriting step take cost consideration 
may introduced required efficient view maintenance introduced useful efficient view maintenance 
maintenance collection simple views distributed system discussed simple form multi query optimization screen updates need sent remote sites 
extended considers updates view maintain views database relation updates applicability conditions restricted 
related problem available materialized views order efficiently evaluate query considerable area :10.1.1.54.6954:10.1.1.33.1999
background expression trees expression dags algorithms determining views additionally materialize maintain expression trees expression dags developed performing cost query optimization problem query optimization quite different problem 
briefly describe expression tree expression dag representations section describe detail trees dags 
expression tree query view binary tree leaf node corresponds database relation define non leaf node contains operator join grouping aggregation children algebraic expression computed root node equivalent 
called trees possible common subexpressions directed acyclic graphs 
briefly describe expression tree expression dag representations section describe detail trees dags 
expression tree query view binary tree leaf node corresponds database relation define non leaf node contains operator join grouping aggregation children algebraic expression computed root node equivalent 
called trees possible common subexpressions directed acyclic graphs 
expression trees query optimizers determine cost particular way evaluating query 
expression dags rule optimizers volcano compactly represent space equivalent expression trees directed acyclic graph :10.1.1.111.1658
expression dag bipartite directed acyclic graph equivalence nodes operation nodes 
equivalence node edges operation nodes 
operation node contains operator children equivalence aggregate sum salary dname dept emp join dname select budget aggregate sum salary dname budget join dname emp dept select budget trees view nodes parent equivalence node 
equivalence node labeled algebraic expression computes operation nodes correspond various expression trees give result algebraically equivalent label parent equivalence node 
details query optimization uses expression dags see 
example expression trees view prob aggregate sum salary dname budget join dname aggregate sum salary dname emp select budget join dname dept expression dag trees example expression dag representation trees 
bold nodes ni equivalence nodes remaining nodes operation nodes 
practice expression dag represent larger number trees small example simplicity presentation 
incremental updating expression trees materialized views incrementally maintained underlying database relations updated techniques :10.1.1.91.5064:10.1.1.56.375
basic idea differentials delta ri relation ri updated compute differential delta materialized view expression involving updates database relations delta ri state database relations prior updates state materialized view prior updates old 
consider differentials include inserted tuples deleted tuples modified tuples 
technique follows approach :10.1.1.56.9912:10.1.1.56.375
compute delta result operation queries may set inputs operation input materialized query may answered lookup 
practice expression dag represent larger number trees small example simplicity presentation 
incremental updating expression trees materialized views incrementally maintained underlying database relations updated techniques :10.1.1.91.5064:10.1.1.56.375
basic idea differentials delta ri relation ri updated compute differential delta materialized view expression involving updates database relations delta ri state database relations prior updates state materialized view prior updates old 
consider differentials include inserted tuples deleted tuples modified tuples 
technique follows approach :10.1.1.56.9912:10.1.1.56.375
compute delta result operation queries may set inputs operation input materialized query may answered lookup 
consider example node operation suppose update delta propagated node materialized order compute update result query posed asking tuples match delta join attributes formally set tuples defined semijoin operation 
database relation materialized view lookup sufficient general query evaluated 
similar techniques apply operations 
definition update track consider marked expression dag dv view set marked nodes transaction type ti 
uv denote subset equivalence operation nodes dv results affected transactions type ti 
sd dv subset sd consisting affected nodes edges sd update track dv transactions type ti 
update track sd set updates database relations transaction type ti updates propagated nodes update track 
node update result computed updates inputs incremental techniques described :10.1.1.56.9912:10.1.1.56.375
cost maintaining set views consider time cost maintaining set views transaction type ti 
multiple update tracks updates transactions type ti propagated different costs 
discuss issue computing cost propagating updates single update track 
cost divided costs computing updates various nodes update track performing updates views cost computing updates computation updates nodes update track poses queries materialized views reason maintaining additional views 
cost maintaining set views consider time cost maintaining set views transaction type ti 
multiple update tracks updates transactions type ti propagated different costs 
discuss issue computing cost propagating updates single update track 
cost divided costs computing updates various nodes update track performing updates views cost computing updates computation updates nodes update track poses queries materialized views reason maintaining additional views 
determining cost computing updates node update track presence materialized views reduces problem determining cost evaluating query equivalence node dv presence materialized views standard query optimization problem optimization techniques chaudhuri easily adapted task :10.1.1.33.1999
propagating updates update track queries may need posed 
set queries common subexpressions multiquery optimization techniques see optimizing evaluation collection queries 
shared queries lead locally plans globally optimal 
note presence common subexpressions expression dag influence solution problem determining additional views materialize distinct ways ffl subexpressions shared different views path propagating updates 
knowledge examine issue maintaining additional views reduce maintenance costs cost fashion 
identified done particular problem inherently nonlocal cost globally optimized 
stand foundation area 
view sets chosen non heuristic techniques optimal update propagation model 
model complete powerful models propagating updates defining update expressions described :10.1.1.91.5064
interesting consider find optimal way maintain view set views model 
direction general abstraction database relation updates insert delete modify abstraction 
abstracting types updates increment decrement recognizing type update lead better view maintenance techniques 
interesting direction explore effect data distribution decision additional views materialize 
proceedings acm sigmod conference management data pages washington may 
ceri widom 
production rules incremental view maintenance 
proceedings international conference large databases barcelona spain 
chaudhuri krishnamurthy potamianos shim :10.1.1.33.1999
optimizing queries materialized views 
proceedings international conference data engineering 
graefe mckenna :10.1.1.111.1658
volcano optimizer generator extensibility efficient search 
proceedings international conference large databases barcelona spain 
chaudhuri krishnamurthy potamianos shim :10.1.1.33.1999
optimizing queries materialized views 
proceedings international conference data engineering 
graefe mckenna :10.1.1.111.1658
volcano optimizer generator extensibility efficient search 
proceedings ieee international conference data engineering vienna austria 
griffin libkin :10.1.1.91.5064
incremental maintenance views duplicates 
proceedings international conference data engineering 
graefe mckenna :10.1.1.111.1658
volcano optimizer generator extensibility efficient search 
proceedings ieee international conference data engineering vienna austria 
griffin libkin :10.1.1.91.5064
incremental maintenance views duplicates 
proceedings acm sigmod conference management data 
gupta harinarayan quass :10.1.1.111.1658
processing data warehousing environments 
proceedings ieee international conference data engineering vienna austria 
griffin libkin :10.1.1.91.5064
incremental maintenance views duplicates 
proceedings acm sigmod conference management data 
gupta harinarayan quass :10.1.1.111.1658
processing data warehousing environments 
proceedings international conference large databases 
gupta mumick :10.1.1.40.2254
maintenance materialized views problems techniques applications 
proceedings acm sigmod conference management data 
gupta harinarayan quass :10.1.1.111.1658
processing data warehousing environments 
proceedings international conference large databases 
gupta mumick :10.1.1.40.2254
maintenance materialized views problems techniques applications 
ieee data engineering bulletin june 
special issue materialized views data warehousing 
gupta mumick ross 
special issue materialized views data warehousing 
gupta mumick ross 
adapting materialized views 
proceedings acm sigmod conference management data san jose ca may 
gupta mumick subrahmanian :10.1.1.40.2254
maintaining views incrementally 
proceedings acm sigmod conference management data pages 
levy mendelzon sagiv srivastava 
answering queries views 
