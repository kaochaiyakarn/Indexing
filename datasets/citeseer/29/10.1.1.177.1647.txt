answering regular path queries views diego calvanese giuseppe de giacomo maurizio lenzerini moshe vardi dipartimento di informatica sistemistica universit di roma la sapienza salaria roma italy lastname dis uniroma department computer science rice university box houston tx vardi cs rice edu query answering views amounts computing answer query having information extension set views 
problem relevant fields information integration data warehousing query optimization mobile computing maintaining physical data independence 
address query answering views context queries views regular path queries regular expressions denote pairs objects database connected matching path 
regular path queries basic query mechanism database conceived graph semistructured data data web 
study algorithms answering regular path queries views different assumptions closed open domain sound complete exact information view extensions 
characterize data expression combined complexity problem showing proposed algorithms essentially optimal 
characterize data expression combined complexity problem showing proposed algorithms essentially optimal 
results exhibit decidability cases language expressing query views allows recursion 

query answering views amounts computing answer query having information extension set views 
problem relevant fields information integration data warehousing query optimization mobile computing maintaining physical data independence :10.1.1.127.3070
data integration setting put strongest emphasis query answering views typical integration process results set precomputed views query evaluation mechanism rely views order derive correct answers queries 
approaches data integration investigated called virtual materialized 
virtual approach precomputed views represent data sources integrated materialized approach generally adopted data warehousing precomputed views represent result integration activity carried sources 
cases problem answering queries views crucial 
approaches data integration investigated called virtual materialized 
virtual approach precomputed views represent data sources integrated materialized approach generally adopted data warehousing precomputed views represent result integration activity carried sources 
cases problem answering queries views crucial 
integrating data autonomous sources differing modeling features assumptions data sources web convenient resort modeling mechanisms flexible adaptable 
raised interest management semistructured data data fit rigid predefined schemas best described graph data models :10.1.1.11.5081:10.1.1.40.2751:10.1.1.117.5869
methods extracting information semistructured data necessarily incorporate special querying mechanisms common traditional database systems 
basic mechanism retrieves pairs nodes graph connected path conforming regular expression regular path queries :10.1.1.32.3916
observe regular expressions provide limited form recursion regular path queries navigate graph database 
address problem query answering views query views regular path queries 
cases problem answering queries views crucial 
integrating data autonomous sources differing modeling features assumptions data sources web convenient resort modeling mechanisms flexible adaptable 
raised interest management semistructured data data fit rigid predefined schemas best described graph data models :10.1.1.11.5081:10.1.1.40.2751:10.1.1.117.5869
methods extracting information semistructured data necessarily incorporate special querying mechanisms common traditional database systems 
basic mechanism retrieves pairs nodes graph connected path conforming regular expression regular path queries :10.1.1.32.3916
observe regular expressions provide limited form recursion regular path queries navigate graph database 
address problem query answering views query views regular path queries 
goal devise algorithms characterize computational complexity problem different assumptions 
represents fundamental step solving problem query answering views full fledged query languages semistructured data data web :10.1.1.33.3592:10.1.1.32.3916
basic mechanism retrieves pairs nodes graph connected path conforming regular expression regular path queries :10.1.1.32.3916
observe regular expressions provide limited form recursion regular path queries navigate graph database 
address problem query answering views query views regular path queries 
goal devise algorithms characterize computational complexity problem different assumptions 
represents fundamental step solving problem query answering views full fledged query languages semistructured data data web :10.1.1.33.3592:10.1.1.32.3916
assumptions consider information available domain information view extensions :10.1.1.51.3293:10.1.1.54.9534
closed domain assumption states database contains exactly objects stored views 
words know exact form database know set objects stored 
contrary open domain assumption database may contain objects stored views 
observe regular expressions provide limited form recursion regular path queries navigate graph database 
address problem query answering views query views regular path queries 
goal devise algorithms characterize computational complexity problem different assumptions 
represents fundamental step solving problem query answering views full fledged query languages semistructured data data web :10.1.1.33.3592:10.1.1.32.3916
assumptions consider information available domain information view extensions :10.1.1.51.3293:10.1.1.54.9534
closed domain assumption states database contains exactly objects stored views 
words know exact form database know set objects stored 
contrary open domain assumption database may contain objects stored views 
view exact extension exactly set objects database satisfy definition 
words view sound know subset pairs objects satisfy view exclude pairs objects satisfy view 
case complete view dual view complete extension superset pairs objects database satisfy definition 
observe exact view sound complete 
answering query views sound views infer pairs objects answer set query complete views infer pairs objects answer set query 
pointed data integration sound view corresponds data source known produce necessarily answers query associated view :10.1.1.51.3293
hand complete view models source known produce answers associated query 
exact view models source known produce exactly answers associated query 
framework consider allows specification assumption adopt domain database adopt available views 
framework results provide algorithms query answering views showing cases decidable 
study data expression combined complexity algorithms 
characterize lower bounds problem show lower bounds match upper bounds provided algorithms 
particular show answering regular path queries views conp complete respect data complexity cases 
respect expression combined complexity problem conp complete closed domain assumption open domain assumption 
investigation similar spirit decidability data complexity problem studied views queries expressed terms various languages conjunctive queries datalog order queries :10.1.1.54.9534
results show answering recursive datalog queries recursive views undecidable general :10.1.1.54.9534
results exhibit decidability case language expressing query views allows recursion 
john date dau aug son date son dau date date mary ken tim lea dau son dau dau son son ann bill jim tom date date date date date date mar jun 
database jan feb dec organized follows 
characterize lower bounds problem show lower bounds match upper bounds provided algorithms 
particular show answering regular path queries views conp complete respect data complexity cases 
respect expression combined complexity problem conp complete closed domain assumption open domain assumption 
investigation similar spirit decidability data complexity problem studied views queries expressed terms various languages conjunctive queries datalog order queries :10.1.1.54.9534
results show answering recursive datalog queries recursive views undecidable general :10.1.1.54.9534
results exhibit decidability case language expressing query views allows recursion 
john date dau aug son date son dau date date mary ken tim lea dau son dau dau son son ann bill jim tom date date date date date date mar jun 
database jan feb dec organized follows 
section sets framework study problem query answering views 
section investigates connection answering queries views query rewriting views 
section concludes 

framework consider setting databases expressed terms edge labeled graphs queries ask pairs nodes connected specified path 
setting typical semistructured data data models share characteristic data organized labeled graph nodes represent objects edges represent links objects :10.1.1.11.5081:10.1.1.40.2751:10.1.1.165.6422:10.1.1.117.5869:10.1.1.51.1598

regular path queries formally consider database edge labeled graph db set nodes called domain represent objects db re set binary relations corresponding edges graph labeled elements alphabet 
edges represent links objects labeled attribute names 
denote edge node node labeled example show example database information set people sons date birth 

regular path queries formally consider database edge labeled graph db set nodes called domain represent objects db re set binary relations corresponding edges graph labeled elements alphabet 
edges represent links objects labeled attribute names 
denote edge node node labeled example show example database information set people sons date birth 
query mechanism consider regular path queries simply queries basic constituents full fledged query languages semistructured data :10.1.1.40.2751:10.1.1.30.6664:10.1.1.33.1258:10.1.1.32.3916
queries denote paths corresponding words specified regular language alphabet expressed means regular expressions finite automata :10.1.1.104.2588
definition answer set query database db ans db path rn db rn regular language defined example refer database consider query son dau dau date asking pairs month birth female descendent easy see answer set query contains john jun john dec 

query answering views introduce formally problem query answering views 
regular path queries formally consider database edge labeled graph db set nodes called domain represent objects db re set binary relations corresponding edges graph labeled elements alphabet 
edges represent links objects labeled attribute names 
denote edge node node labeled example show example database information set people sons date birth 
query mechanism consider regular path queries simply queries basic constituents full fledged query languages semistructured data :10.1.1.40.2751:10.1.1.30.6664:10.1.1.33.1258:10.1.1.32.3916
queries denote paths corresponding words specified regular language alphabet expressed means regular expressions finite automata :10.1.1.104.2588
definition answer set query database db ans db path rn db rn regular language defined example refer database consider query son dau dau date asking pairs month birth female descendent easy see answer set query contains john jun john dec 

query answering views introduce formally problem query answering views 
pointed problem comes different forms depending various assumptions accurate knowledge objects database pairs satisfying views :10.1.1.51.3293:10.1.1.54.9534
queries denote paths corresponding words specified regular language alphabet expressed means regular expressions finite automata :10.1.1.104.2588
definition answer set query database db ans db path rn db rn regular language defined example refer database consider query son dau dau date asking pairs month birth female descendent easy see answer set query contains john jun john dec 

query answering views introduce formally problem query answering views 
pointed problem comes different forms depending various assumptions accurate knowledge objects database pairs satisfying views :10.1.1.51.3293:10.1.1.54.9534
consider database accessible set views vk suppose want answer regular path query basis knowledge views 
specifically associated view vi definition def vi terms regular path query alphabet information extension terms set ext vi pairs objects specification vi assumption adopt view vi interpreting ext vi respect answer set def vi 
consider assumptions views sound view assumption :10.1.1.51.3293:10.1.1.54.9534
say view vi sound satisfies respect database db ext vi ans def vi db 
query answering views introduce formally problem query answering views 
pointed problem comes different forms depending various assumptions accurate knowledge objects database pairs satisfying views :10.1.1.51.3293:10.1.1.54.9534
consider database accessible set views vk suppose want answer regular path query basis knowledge views 
specifically associated view vi definition def vi terms regular path query alphabet information extension terms set ext vi pairs objects specification vi assumption adopt view vi interpreting ext vi respect answer set def vi 
consider assumptions views sound view assumption :10.1.1.51.3293:10.1.1.54.9534
say view vi sound satisfies respect database db ext vi ans def vi db 
means fact pair ext vi conclude ans def vi db 
ext vi conclude ans def vi db 
complete view assumption 
way oda additional objects construct databases consistent views realizing cda 
shown sections complexity query answering views cda general lower oda 
justifies consider cases separately 

possible answers problem query answering views interpreted checking certain answer :10.1.1.54.9534
hand may interested checking possible answer checking ans db db consistent views 
point view logic finding certain answers logical implication problem check logically follows information views answer set similarly finding possible answers consistency problem check assuming answer set contradict information views 
argument illustrates relationship problems framework 
referring intersection relations intersection regular languages 
hand oda exclude possibility database contains objects known views 
combined complexity means forced reason definition query views 
problem complex comparing regular path queries explains pspace lower bound 
interestingly algorithms show problem exceed pspace complexity 
data complexity remains conp query language powerful express limited form recursion problem complex case disjunctions conjunctive queries :10.1.1.54.9534
query answering views extensively investigated years :10.1.1.57.1452:10.1.1.51.3293:10.1.1.54.6954
said works provides decidability results case query views contain recursion 
shares goal :10.1.1.54.9534
authors analysis data complexity problem case views queries expressed terms various languages conjunctive queries datalog order queries 
combined complexity means forced reason definition query views 
problem complex comparing regular path queries explains pspace lower bound 
interestingly algorithms show problem exceed pspace complexity 
data complexity remains conp query language powerful express limited form recursion problem complex case disjunctions conjunctive queries :10.1.1.54.9534
query answering views extensively investigated years :10.1.1.57.1452:10.1.1.51.3293:10.1.1.54.6954
said works provides decidability results case query views contain recursion 
shares goal :10.1.1.54.9534
authors analysis data complexity problem case views queries expressed terms various languages conjunctive queries datalog order queries 
note consider case regular path queries 
interestingly algorithms show problem exceed pspace complexity 
data complexity remains conp query language powerful express limited form recursion problem complex case disjunctions conjunctive queries :10.1.1.54.9534
query answering views extensively investigated years :10.1.1.57.1452:10.1.1.51.3293:10.1.1.54.6954
said works provides decidability results case query views contain recursion 
shares goal :10.1.1.54.9534
authors analysis data complexity problem case views queries expressed terms various languages conjunctive queries datalog order queries 
note consider case regular path queries 
results show query languages considered eva complicates problem :10.1.1.54.9534
example data complexity query answering case conjunctive queries ptime conp complete eva 
said works provides decidability results case query views contain recursion 
shares goal :10.1.1.54.9534
authors analysis data complexity problem case views queries expressed terms various languages conjunctive queries datalog order queries 
note consider case regular path queries 
results show query languages considered eva complicates problem :10.1.1.54.9534
example data complexity query answering case conjunctive queries ptime conp complete eva 
explained noticing eva introduces form negation may force reason cases objects stored views 
contrary case regular path queries eva increase complexity problem relative 
sense expressive power query language forces reason cases eva introduce new complexity 
example data complexity query answering case conjunctive queries ptime conp complete eva 
explained noticing eva introduces form negation may force reason cases objects stored views 
contrary case regular path queries eva increase complexity problem relative 
sense expressive power query language forces reason cases eva introduce new complexity 
problem query answering views dealt techniques rewriting queries views query views vk associated definitions def def vk generate new query alphabet vk database db computing extension ans def vi db vi evaluating basis extensions provides answer db :10.1.1.127.3070
papers investigate problem case conjunctive queries arithmetic comparisons queries aggregates recursive queries queries expressed description logics queries semistructured data regular expressions regular expressions :10.1.1.57.1452:10.1.1.49.3156:10.1.1.32.8198:10.1.1.143.4970:10.1.1.42.4880:10.1.1.54.6954:10.1.1.104.2588
methods query rewriting adapted query answering views problems differ sense :10.1.1.54.6954
query rewriting inputs view definitions query aims re expressing query terms views set operators 
compute answer original query rewritten query evaluated extensions views 
explained noticing eva introduces form negation may force reason cases objects stored views 
contrary case regular path queries eva increase complexity problem relative 
sense expressive power query language forces reason cases eva introduce new complexity 
problem query answering views dealt techniques rewriting queries views query views vk associated definitions def def vk generate new query alphabet vk database db computing extension ans def vi db vi evaluating basis extensions provides answer db :10.1.1.127.3070
papers investigate problem case conjunctive queries arithmetic comparisons queries aggregates recursive queries queries expressed description logics queries semistructured data regular expressions regular expressions :10.1.1.57.1452:10.1.1.49.3156:10.1.1.32.8198:10.1.1.143.4970:10.1.1.42.4880:10.1.1.54.6954:10.1.1.104.2588
methods query rewriting adapted query answering views problems differ sense :10.1.1.54.6954
query rewriting inputs view definitions query aims re expressing query terms views set operators 
compute answer original query rewritten query evaluated extensions views 
hand query answering takes inputs view definitions view extensions view assumptions query computes directly answer query 
contrary case regular path queries eva increase complexity problem relative 
sense expressive power query language forces reason cases eva introduce new complexity 
problem query answering views dealt techniques rewriting queries views query views vk associated definitions def def vk generate new query alphabet vk database db computing extension ans def vi db vi evaluating basis extensions provides answer db :10.1.1.127.3070
papers investigate problem case conjunctive queries arithmetic comparisons queries aggregates recursive queries queries expressed description logics queries semistructured data regular expressions regular expressions :10.1.1.57.1452:10.1.1.49.3156:10.1.1.32.8198:10.1.1.143.4970:10.1.1.42.4880:10.1.1.54.6954:10.1.1.104.2588
methods query rewriting adapted query answering views problems differ sense :10.1.1.54.6954
query rewriting inputs view definitions query aims re expressing query terms views set operators 
compute answer original query rewritten query evaluated extensions views 
hand query answering takes inputs view definitions view extensions view assumptions query computes directly answer query 
note computing rewriting general costly :10.1.1.54.6954:10.1.1.104.2588
methods query rewriting adapted query answering views problems differ sense :10.1.1.54.6954
query rewriting inputs view definitions query aims re expressing query terms views set operators 
compute answer original query rewritten query evaluated extensions views 
hand query answering takes inputs view definitions view extensions view assumptions query computes directly answer query 
note computing rewriting general costly :10.1.1.54.6954:10.1.1.104.2588
computation depend extension views data complexity evaluating rewriting view extensions influenced cost 
section elaborates relationship problems framework 

closed domain study query answering views cda 
theorem answering queries exact views oda conp hard wrt data complexity 
proof 
proof theorem rely cda 

relationship query rewriting mentioned section query rewriting techniques solve query answering problem :10.1.1.54.6954
note general case query rewriting views sufficient query answering 
particular rewriting exact equivalent query may tuples answer query shown example 
example query views def def def verify maximal rewriting empty language obviously exact 
eva ext ext ans 
eva ext ext ans 
ext obviously exact rewriting may tuples answer query case views sound exact 
example query views def def def exact rewriting wrt 
ext ext ext ans evaluating extensions views get answer rewriting exact views exact rewriting solve query answering problem 
exploiting results rewriting regular path queries studied algorithm compute maximal rewriting check devised get theorem :10.1.1.104.2588
theorem vk exact views query 
exists exact rewriting views vk answering vk cda oda wrt data complexity expspace wrt expression complexity 
proof 
exact rewriting query terms views vk 
cm 
initial state sm accepting state 
transition labeled si si pair ci ci ext 
checked nondeterministically space logarithmic size view extensions size rewriting 
size rewriting worst case double exponential size query condition verified nondeterministically space logarithmic size view extensions exponential size query constructing rewriting fly :10.1.1.104.2588
rewriting enables decrease data complexity expense expression complexity 

studied problem answering queries views case query views expressed regular path queries 
considered different assumptions extensions views evaluating exact rewritings extensions views give answer 
abiteboul 
querying semi structured data 
proc 
icdt pages 
abiteboul duschka :10.1.1.54.9534
complexity answering queries materialized views 
proc 
pods pages 
abiteboul quass mchugh widom wiener 
buneman davidson hillebrand suciu 
query language optimization technique unstructured data 
proc 
acm sigmod pages 
calvanese de giacomo lenzerini vardi :10.1.1.104.2588
rewriting regular expressions regular path queries 
proc 
pods pages 
chaudhuri krishnamurthy shim 
deutsch fernandez florescu levy suciu 
xml ql query language xml 
submission world wide web consortium aug 
available www org tr note xml ql 
duschka genesereth :10.1.1.57.1452
answering recursive queries views 
proc 
pods pages 
fernandez florescu kang levy suciu 
sigmod record 
garey johnson 
computers intractability guide np completeness 
freeman san francisco ca usa 
ginsberg editor :10.1.1.51.3293
readings nonmonotonic reasoning 
morgan kaufmann los altos 
grahne mendelzon :10.1.1.51.3293
tableau techniques querying information sources global schemas 
freeman san francisco ca usa 
ginsberg editor :10.1.1.51.3293
readings nonmonotonic reasoning 
morgan kaufmann los altos 
grahne mendelzon :10.1.1.51.3293
tableau techniques querying information sources global schemas 
proc 
icdt volume lncs pages 
springer verlag 
levy 
obtaining complete answers incomplete databases 
proc 
vldb pages 
levy mendelzon sagiv srivastava :10.1.1.54.6954
answering queries views 
proc 
pods pages 
milo suciu :10.1.1.53.3957
levy mendelzon sagiv srivastava :10.1.1.54.6954
answering queries views 
proc 
pods pages 
milo suciu :10.1.1.53.3957
index structures path expressions 
proc 
icdt volume lncs pages 
springer verlag 
closed world data bases 
gallaire minker editors logic databases pages 
plenum publ 
new york 
:10.1.1.51.3293
srivastava dar jagadish levy :10.1.1.127.3070
answering queries aggregation views 
proc 
vldb pages 
gallaire minker editors logic databases pages 
plenum publ 
new york 
:10.1.1.51.3293
srivastava dar jagadish levy :10.1.1.127.3070
answering queries aggregation views 
proc 
vldb pages 
tsatalos solomon ioannidis 
vldb pages 
tsatalos solomon ioannidis 
gmap versatile tool data independence 
vldb journal 
ullman :10.1.1.127.3070
information integration logical views 
proc 
icdt volume lncs pages 
springer verlag 
