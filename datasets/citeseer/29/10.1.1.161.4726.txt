aaai proceedings 
copyright aaai www aaai org 
rights reserved 
non markovian control situation calculus alfredo department computer science university toronto toronto canada alfredo cs toronto edu property executability effects action determined entirely current state situation known markov property assumed formalizations action 
difficult run scenarios markov property 
consider removing assumption situation calculus formalization actions reiter forms basis programming language golog define operator regressing formulas quantify past situations respect nonmarkovian basic action theories 
motivation reasoning effects actions important problems ai devoted great deal effort 
resulted powerful formalisms 
situation calculus mccarthy mccarthy hayes event calculus kowalski sergot action language gelfond lifschitz extensions features fluents approach sandewall fluent calculus thielscher :10.1.1.34.7448:10.1.1.85.5082
common assumption formalisms called markov property action executed effects determined entirely current state situation 
fact difficult run scenarios markov property executability effects action depend holds current situation conditions satisfied point past 
example imagine robot works biological research facility different safety level areas 
dynamics material considered polluted robot touches robot low safety area directly touched hazardous material station 
effect touching material depends history robot activities 
imagine robot execute action open entrance lab temp lab copyright american association artificial intelligence www aaai org 
rights reserved 
true point closed entrance lab 
example action nonmarkovian preconditions 
formalized markovian theory introducing variables fluents axioms describing dynamics resulting theory considerably larger natural convenient simply assume markov property 
furthermore motivated variety research problems involve formalization dynamic properties 

database theory concerned semantics dynamic integrity constraints saake chomicki 
constraints typically expressed terms past temporal logic logic temporal connectives previous past past 
formalization database system situation calculus temporal connectives amount past situations constraints restrictions sequence actions considered legal database system evolution 
see past temporal logic connectives encoding formulas nonmarkovian situation calculus logical framework study specification modeling databases dynamic integrity constraints 

area databases specifically database transaction systems rollback operation clearly nonmarkovian flavour effects depend true current state state right transaction reversed started 
presents logical specification database transactions nonmarkovian situation calculus 

planning domain dependent knowledge control search suggested bacchus kabanza led impressive computational improvements 
bacchus kabanza tlplan system forward chaining planner strips uses search control knowledge form temporal logic constraints 
reiter applied idea golog planners 
planners perform iterative deepening forward search eliminating partial plans lead bad situation search control knowledge encoded pred aaai limited properties current situation nonmarkovian situation calculus allows definition predicate refer situation precedes full past current situation 
mentioned past temporal logic expressions encoded nonmarkovian situation calculus definition 
means search control knowledge similar form expressivity tlplan 

markovian property may absent system specification includes stochastic actions reward functions 
need accommodate nonmarkovian dynamics reward functions recognized bacchus boutilier grove developed techniques solving nonmarkovian decision processes decision theoretic planning 

time ago john mccarthy described programming language called elephant features forget 
words language allows programmer explicitly refer past states programming environment program 
nonmarkovian situation calculus regression operator form foundation non forgetting version golog 
dialect golog allow test conditions terms past temporal logic write instance statement exec endif programs 
generalize situation calculus formalization actions reiter nonmarkovian case 
modify regression operator nonmarkovian basic action theories formulas quantify past situations prove new regression operator correct 
language situation calculus section briefly review language situation calculus 
complete description see pirri reiter 
language second order language equality disjoint sorts action situation object 
addition definitions terms standard logical symbols alphabet includes countably infinite number variable symbols sort predicate variables arities 
constant symbol function sort action situation situation binary predicate symbol define ordering relation situations binary predicate symbol poss action situation countably infinite number function symbols sort action object action called actions countably infinite number predicate symbols sort action object situation called relational fluents countably infinite number function symbols sort action object situation action object called functional fluents 
language includes countably 
shorthand sv vi infinite number predicates functions situation argument 
refer situation independent predicates functions 
intuitively situations finite sequences actions referred histories intuition axioms pirri reiter denoted initial situation empty history denoted constant 
non empty histories built means function 
basic nonmarkovian theories action section introduce basic nonmarkovian theories action 
markovian action theories markov assumption realized requiring formulas action precondition axioms successor state axioms refer situation variable prenex universally quantified axioms 
nonmarkovian action theories situation terms allowed restriction refer past explicitly bounded relative formal need introduce notion situation bounded formulas 
intuitively formula bounded situation term situation variables mentions restricted equality predicate range subsequences 
notion useful order apply regression formula needs know actions situation regression steps apply 
formula mentions situation variable regressed provided variable restricted subsequence situation term known number actions 
notation write denote term sort situation terms sort action stands variable sort situation constant 
definition situation term definition rooted terms terms sort action 
term rooted iff variable sort situation mentioned variable sort mentioned 
term rooted iff mention variables sort situation 
writing bounded formulas abbreviations lower case roman characters denote variables 
free variables implicitly universally prenex quantified 
aaai def def def def definition bounded formulas rooted 
formulas bounded smallest set formulas 
terms sort subterms sort situation rooted formula bounded 

rooted situation variable constant formula bounded 

ary situation independent predicate ary fluent ary action tn terms sort action object subterms sort situation rooted tn tn poss tn formulas bounded 

term sort situation rooted formula bounded possibly different term sort situation rooted formulas bounded 

formulas bounded situation terms rooted sort action object formulas bounded 
example purpose illustrating definitions consider sentence get coffee deliver coffee 
intuitively says situation past get coffee deliver coffee executing successfully resulted charged battery 
sentence bounded get coffee deliver coffee subformula bounded 
variable ranges subsequences get coffee 
note formula refers situation past relative bounding situation get coffee deliver coffee 
need strict version boundedness 
definition strictly bounded formulas strictly bounded formulas defined replacing conditions definition bounded formulas terms sort subterms sort situation subterms formula strictly bounded 
term sort situation rooted formula strictly bounded subterm formulas strictly bounded 
formulas strictly bounded subterm sort action object formulas strictly bounded 
require situation term binds root subterms 
intuitively formula strictly bounded situation terms restricted past relative 
hypothetical alternative futures example allowed bounded formulas disallowed 
example situation calculus refer past means refer past situations 
sense write expressions capture intuitive meaning past temporal logic connectives previous prev def 
def 
def 
def 
easy see formulas strictly bounded ready define nonmarkovian action precondition axioms successor state axioms 
definition action precondition axiom sentence form poss xn xn ary action function symbol xn order formula free variables xn bounded situation term rooted mention predicate symbol poss 
example suppose lab robot works door opened temperature inside reached dangerous level closed 
robot theory include precondition axiom poss open lab close lab 
open lab temp lab definition successor state axiom ary relational fluent sentence form xn xn xn order formula free variables xn strictly bounded mention constant predicate symbol poss 
successor state axiom ary functional fluent sentence form xn xn abbreviation aaai xn order formula free variables xn strictly bounded mention constant predicate symbol poss 
example consider robot works lab 
successor state axioms theory past temporal logic abbreviations example polluted mat polluted mat touch mat loc loc low loc 
relaxing strict boundedness condition successor state axioms simply boundedness complicates regression 
consider successor state axioms 

intuitively regressing respect axioms result turn 
clearly regression working situation terms growing 
problem action precondition axioms predicate poss allowed formula kind loop occur 
nonmarkovian basic action theory consists foundational axioms set successor state axioms dss relational fluent functional fluent set action precondition axioms dap action set unique name axioms actions set order sentences ds mention situation terms represent initial theory world 
nonmarkovian basic action theories markovian ones assumed satisfy functional fluent consistency property intuitively says fluent rhs successor state axiom defines value situation 
theorem formalizes intuition truth value formula strictly bounded history depends truth value fluents history situation independent predicates functions 
theorem structures domain act sort action obj sort object sit sort situation 
sit sit 
formula strictly bounded mention poss free variable sort situation root 

satisfy interpret situation independent functions predicates way 
relational fluent valuation iff poss allowed appear adding condition similar predicate 

functional fluent valuation valuation situation variable iff 
markovian basic action theories pirri reiter proved satisfiable initial database unique names axioms actions remains satisfiable adding action precondition successor state axioms 
nonmarkovian basic action theories satisfy property 
theorem nonmarkovian basic action theory satisfiable iff ds regression section define regression operator operator markovian theories regressing bounded formulas respect nonmarkovian basic action theory 
definition regressable iff 
order 

bounded term sort situation rooted free variables sort 

atom form poss mentioned form tn ary action function symbol 
definitions proofs assume quantified variables renamed different 
definition regression regressable formula 

regressable atom forms equality atom form atom form atom poss atom situation term atom mentions functional fluent term form relational fluent atom defined exactly theories markov property reproduce 

suppose regressable formula form 
false 

denote xn xi variables notice situation variables may appear regressable atom 
aaai 
suppose regressable formula form 
false 


suppose regressable formula form 

remaining possibilities regression defined follows 

theorem suppose regressable formula basic nonmarkovian action theory 

formula uniform 


proof proof similar proof soundness completeness regression markovian theories action pirri reiter 
induction binary relation ordering tuples integers represent number connectives quantifiers length certain situation terms formulas 
give precise definition 
define tuples defined 
bounded regressable formula sum lengths maximal situation terms rooted appear abbreviations quantified 
define index follows index def 
number connectives quantifiers number equality atoms situation terms number atoms situation terms number occurrences maximal situation terms length rooted number mentioned definition index differs pirri reiter ways 
parameters appear regressing fluent may introduce new equality atoms 
noticeably shifted right term length 
notice regression step formula situation variable may result situation term replaced longer 
instance formula regressed 
shifted discount increase length substituting variables ground terms 
formula uniform iff order mention poss situation variables equality situations situation term mentioned fluents situation argument 
formal definition see pirri reiter 
consider regressable formula assume theorem regressable formulas index index 
due space limitations prove case suppose regressable formula form defined regression formula ifw empty true result follows immediately 
formula bounded situation term rooted clearly regressable 
remains show index index 
value clearly formulas 
show 
consider maximal term length 
stand note index value accounts term index index value accounts 

implies substitution results 
true substitution term rooted index index index differs index values smaller index 
index index induction hypothesis applies 
formulas clearly equivalent 
soundness completeness regression operator follow theorems 
established theorem theorem suppose regressable sentence basic nonmarkovian theory actions 
iff ds 
generalized reiter situation calculus formalization actions reiter pirri reiter allow nonmarkovian action theories theories action precondition successor state axioms may refer past situations 
revised class formulas regressed modified regression operator class formulas action theories 
prove soundness completeness regression operator 
mentioned proposals introduced reasoning actions assume markov property 
removing assumption reiter basic action theories major complications possible histories order objects theories 
removing assumption formalizations case require considerably effort 
example action languages gelfond lifschitz semantics state transitions :10.1.1.34.7448
removing markovian assumption require different kind semantics 
languages giunchiglia lifschitz 
allow specify language value fluent depends aaai history 

languages semantics mappings sequences actions states 
type semantics abandoned type action languages favor state state mappings 
may possible transform nonmarkovian action theory markovian introducing new fluents resulting theory considerably complex having predicates successor state axioms 
may necessarily computationally better 
instance regressing atom respect markovian theory successor state axiom results disjunction size regressing bounded formula 
thorough analysis computational tradeoffs plans proof correctness prolog implementation interpreter non markovian basic action theories 
plan explore extensions golog congolog levesque giacomo lesperance levesque nonmarkovian features :10.1.1.54.7045
languages program complex behaviours terms primitive actions basic action theory 
order execute golog congolog programs respect nonmarkovian basic action theory simply needs append interpreter action theories golog congolog interpreter 
interpreter database transaction systems simulations 
mentioned extended temporal test conditions 
acknowledgments thankful ray reiter members cognitive robotics group toronto 
anonymous referees useful comments 
bacchus kabanza 
temporal logic control search forward chaining planner 
ghallab eds new directions planning ios press 

bacchus kabanza 
temporal logics express search control knowledge planning 
artificial intelligence 
bacchus boutilier grove 
rewarding behaviors 
procs 
th national conference artificial intelligence aaai 
bacchus boutilier grove 
structured solution methods non markovian decision processes 
procs 
th national conference intelligence aaai 
chomicki 
efficient checking temporal integrity constraints bounded history encoding 
acm transactions database systems 
gelfond lifschitz 
representing actions change logic programs 
journal logic programming 
giacomo lesperance levesque 
reasoning concurrent execution prioritized interrupts exogenous actions situation calculus 
pollack ed proceedings th international joint conference artificial intelligence ijcai 
morgan kaufmann 
giunchiglia lifschitz 
dependent fluents 
proceedings ijcai 

simulation advanced transaction models golog 
procs 
th biennial workshop data bases programming languages dbpl 
kowalski sergot 
logic calculus events 
new generation computing 
levesque reiter lesp rance lin scherl 
golog logic programming language dynamic domains 
journal logic programming 
mccarthy hayes 
philosophical problems standpoint artificial intelligence 
meltzer michie eds machine intelligence 
edinburgh university press 

appears nilsson webber editors readings artificial intelligence morgan kaufmann 
mccarthy 
situations actions causal laws 
technical report stanford university 
reprinted semantic information processing minsky ed mit press cambridge mass pp 

mccarthy 
elephant programming language speech acts 
available stanford edu jmc 
lobo baral 
temporal logic reasoning actions 
third symposium logical formalizations commonsense reasoning commonsense 
pirri reiter 
contributions metatheory situation calculus 
journal acm 
reiter 
frame problem situation calculus simple solution completeness result goal regression 
lifschitz ed artificial intelligence mathematical theory computation 
academic press 

reiter 
knowledge action logical foundations describing implementing dynamical systems 
cambridge ma mit press 
saake 
foundations temporal integrity monitoring 
rolland bodart leonard eds proc 
ifip working conf 
temporal aspects information systems 
amsterdam north holland 
sandewall 
features fluents representation knowledge dynamical systems 
oxford university press 
thielscher 
fluent calculus 
link ping electronic articles computer information science 
www ep liu se ea cis 
aaai 
