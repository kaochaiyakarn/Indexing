rap rate congestion control mechanism realtime streams internet reza rejaie mark handley deborah estrin university southern california information sciences institute marina del rey ca reza estrin isi edu congestion control mechanisms critical robustness stability internet 
today internet tcp expect remain 
having tcp friendly behavior crucial new applications 
emergence non congestion controlled realtime applications threatens unfairness competing tcp traffic possible congestion collapse 
tcp friendly rate adaptation protocol rap employs additive increase aimd algorithm 
suited unicast playback realtime streams semi reliable rate applications 
primary goal fair tcp friendly separating network congestion control application level reliability 
evaluate rap extensive simulation conclude bandwidth usually evenly shared tcp rap traffic 
unfairness tcp traffic directly determined tcp diverges aimd algorithm 
basic rap behaves fashion wide range conditions devised fine grain rate adaptation mechanism extend range 
show deploying red queue management result ideal fairness tcp rap traffic 
internet experiencing explosive growth audio video streaming 
applications delay sensitive semi reliable rate 
require isochronous processing quality service qos point view 
today internet attempt guarantee upper bound delay lower bound available bandwidth 
result quality delivered service realtime applications controllable predictable 
lack support qos prevented rapid growth realtime streaming applications expected continue 
applications playback stored video audio client network 
examples include continuous media servers digital libraries distant learning shopping 
playback clients afford slightly delay playback point buffer data partially absorb variation network bandwidth delay 
supported darpa contract 
dabt coo dabt part vint projects 
shared network internet endsystems expected react congestion adapting transmission rates avoid congestion collapse keep network utilization high 
important issue inter protocol fairness rate adjustment result fair share bandwidth flows coexist path 
applications adapt transmission rates properly promptly known network citizens 
dominant portion today internet traffic tcp crucial realtime streams perform tcp friendly congestion control 
mean realtime flow obtain approximately average bandwidth timescale session tcp flow path conditions delay packet loss 
working architecture fig 
delivery layered encoded stored realtime streams internet 
goal realtime playback applications 
typical target application web server video demand server provides access variety multimedia streams large number heterogeneous clients 
idea separate congestion control error quality control depends state network application specific 
server transmission rate continuously adjusted rate adaptation protocol rap tcp friendly fashion 
rap module exclusively charge congestion control loss detection 
layer manager adapts quality transmitted streams rate specified rap module 
ways adjust quality investigating layered encoding 
layer manager tries deliver maximum number layers fit available bandwidth 
rate adaptation happens timescale round trip times layers added dropped longer timescale receiver buffering accommodate temporary mismatches transmission consumption rates 
buffering client side provides opportunity selective retransmission de ieee 
fig 

rap typical architecture realtime playback applications internet retransmission manager 
note aggregate bandwidth server including retransmission exceed bandwidth specified rap 
approach copes bandwidth heterogeneity clients recoding stream client 
currently internet realtime applications lack endto congestion control tcp friendly 
wide deployment applications severe negative impact ranging unfairness competing tcp traffic potential congestion collapse 
solution realtime flows reservations differentiated service 
services widely available remain significant group users interested realtime applications low cost 
network supports reservation different users fall class service share reservation interact best effort networks 
believe congestion control applications critical health internet 
presents design evaluation rap protocol simulation 
rap rate congestion control mechanism suited unicast playback realtime streams semi reliable internet applications 
investigating raj 
part reliable multicast congestion control scheme 
goals rap wellbehaved tcp friendly 
shown additive increase multiplicative decrease aimd algorithm efficiently converges state 
rap adopts aimd algorithm rate adaptation achieve inter protocol fairness tcp friendliness 
rap performs loss rate control rely explicit congestion signal network packet loss feasible implicit feedback signal internet due presence competing tcp traffic 
network supported explicit congestion signaling rap exploit behave efficiently 
extensively evaluated performance rap simulation 
results show rap tcp friendly long tcp congestion control dominated aimd algorithm 
tcp congestion control diverges aimd bandwidth obtained tcp traffic 
identified contribution tcp inherent limitations unfairness 
observations lead conclude rap behaves tcp friendly fashion wide range scenarios 
improve rap devised fine grain rate adaptation mechanism enables exhibit tcp friendly behavior wider range 
results show deploying red queue management results ideal fairness tcp rap traffic :10.1.1.128.5092
investigated self limiting issues rap observe evidence implies inherent instability rap 
rest organized follows 
review related section 
section various aspects rap protocol 
detailed description simulation results section iv 
section concludes discusses 

related congestion control new topic large body accumulated describing various mechanisms 
critical tcp friendly congestion control mechanism best effort networks somewhat limited 
jacob propose architecture internet video applications uses tcp variant modified perform retransmission :10.1.1.56.1866
details modifications difficult tell changes affect performance 
scheme inherits tcp bursty behavior 
common approach rate adaptation adaptive encoding adjustment codec quantization pa rameters state network 
studies addressed inter protocol fairness strive improve perceptual quality 
proposes adaptive coding scheme formula captures macroscopic behavior tcp 
shows promise shown formula detailed variant wide range situations introducing possible large scale behavior 
cpu intensive server adaptively encode large number streams sh ously active clients 
cen scp protocol media streaming 
modified version tcp performs tcp vegas rate adjustment steady state 
results show scp tcp friendly 
may due rate adjustment mechanism shortest rlt measured may widely vary different flows 
cc media streaming players currently deployed internet microsoft 
claim adaptive analysis available verify claims 
describes protocol deployed 
adaptation algorithm clearly tcp friendly 
study differs previous studies realtime streaming best effort networks 
develop rate adaptation mechanism result inter protocol fairness tcp friendly behavior 
majority previous address fairness congestion detected immediately decrease transmission rate 
rap considers losses congestion signals uses timeouts gaps sequence space detect loss 
similar tcp rap maintains estimate rtt called srtt calculates timeout jacobson karel algorithm 
detects timeout losses differently rap ack clocked 
tcp rap source may send packets fore receiving new ack update estimate 
couples timer loss detection packet transmission 
sending new packet source checks potential timeout outstanding packets updated value srtt mate 
ack loss detection mechanism rap intuition fast recovery tcp 
source receives ack implies delivery packets missing packet considered lost 
rap requires way differentiate loss ack loss corresponding data packet 
added redundancy ack packets specify hole delivered sequence space provide robustness single ack losses 
note timeout mechanism required back critical scenarios burst loss 
increase decrease algorithm rap uses aimd increase decrease algorithm 
absence packet loss transmission rate periodically increased step fashion 
transmission examined sufficient find bounds rate controlled adjusting inter packet gap ipg 
cease fair 
increase rate additively ipg iteratively updated equation 
rap protocol rap protocol machinery mainly implemented si ipg pg ipg source 
rap source sends data packets si si numbers sink si denote transmission rate step height packet providing feedback 

constant dimension time 
packet contains sequence number detecting congestion transmission rate corresponding data packet 
multiplicatively doubling value ipg back rap source detect losses sample psi fp round trip time rtt 
design rate adaptation anism issues addressed 
decision frequency decision function algorithm decision frequency 
decision function rate adaptation scheme summarized decision function follow congestion detected periodically increase transmission rate decision frequency specifies change rate 
optimal adjustment frequency depends feedback delay 
feedback delay ack schemes equal rit 
suggested rate schemes adjust rates rit 
changing rate results oscillation infrequent change leads unresponsive behavior 
rap adjusts ipg srtt 
time subsequent adjustment points called step 
loss detected ipg decreased new step started 
adjusting ipg srtt nice property packets sent step acknowledged step 
allows source observe reaction network previous adjustment making new adjustment 
value ipg updated srtt choose value equal srtt number packets sent step increased step 
length step srtt height step inversely dependent srtt slope transmission rate inversely related srtt 
slope ste hei ht srtt srtt srtt slope py fe tcp slope linear increase related rtt way steady state 
rap source exploit rtt variations adaptively adjust rate manner tcp 
adaptive rate adjustment rap meant emulate coarse grain rate adjustment tcp 
step length rap analogous time takes tcp send full window worth packets 
rap unfair flows longer rtt way inter tcp unfairness frequently reported 
rap connections shorter rtts aggressive achieve larger share bottleneck bandwidth 
general measures fairness achieved implementing required machinery network 
long unfairness problem resolved tcp flows tcp friendly implies accepting unfairness 
due lack space discussed startup behavior rap designed relatively long lived sessions startup behavior crucial 
clustered losses shared best effort network high level statistical multiplexing observed loss pattern near random behavior determined aggregate traffic pattern 
generally hard system predict control loss rate adjusting transmission rate 
systems expected react congestion rtt long react properly promptly 
achieve rap requires mechanism identify cluster losses potentially related congestion event 
right loss packet results back outstanding packets pipe called cluster sequence number seq range seq packet transmitted 
packet cluster potentially dropped due congestion event detected loss 
source reacted congestion loss packets cluster silently ignored 
cluster loss mode triggered back terminated soon ack sequence number greater equal received 
mechanism similar employed tcp sack 
fine grain rate adaptation aimd rate adaptation algorithm necessarily result tcp friendly behavior tcp performance degraded due heavy load 
motivation fine grain rate adaptation rap stable responsive transient congestion performing aimd algorithm coarser granularity 
short term exponential moving average rtt captures short term trends congestion 
require dimension zero mean feedback signal independent connection parameters wider applicability 
ratio short term long term exponential moving average signal exhibits desired properties 
exploited rtt signal devised continuous feedback function defined value short long term exponential moving average rtt samples respectively 
tuning point value modulated fine grain feedback signal resulting value ipg transmission timer ipg value ipg adjusted step iteratively acts base transmission rate 
step base transmission rate remains unchanged 
actual inter packet gap ipg adaptively varies short term congestion state 
note fine grain feedback cumulative effect 
random early detection gateways general agreement community deploying random early detection red gateways improve fairness performance tcp traffic :10.1.1.128.5092
red queue management tries keep average queue size low preventing buffer overflowing accommodates bursts packets 
main problems tcp congestion control recover multiple losses window :10.1.1.155.2739
fig 

simulation topology sw occurs mainly due buffer overflow drop tail queues 
ideally red configured flow experiences single loss rtt 
circumstances tcp flows efficiently recover single loss experiencing retransmission timeout 
intuitively long red gateway operates ideal region rap tcp obtain equal share bandwidth aimd algorithm 
average queue length exceeds maximum threshold red starts drop packets high probability 
point rap tcp start behave differently 
regular tcp experiences multiple losses window undergoes retransmission timeout congestion control diverges aimd algorithm 
rap follows algorithm reacts loss rit 
expect observe substantial improvement fairness deploying red prevents buffer overflowing causing burst loss 
behavior limits divergence tcp congestion control aimd algorithm 
red parameters closely dependent behavior aggregate traffic hard keep red gateway ideal region traffic changes time 
configuration red research issue 
iv 
simulation section summary simulation results 
details 
main goal explore properties rap ability cope background tcp traffic interaction red gateways behavior fine grain rate adaptation reasonable parameter space 
simulations demonstrate rap general tcp friendly 
simulated rap ns simulator compared tcp tahoe reno newreno sack run real world experiments :10.1.1.155.2739
fig 
shows topology simulations 
link sw sw bottleneck sw bottleneck point 
switches implement fifo scheduling drop tail queuing red simulations 
rap connections sources ri 
receivers pi 
share bottleneck bandwidth tcp flows sources ti 
receivers si 
data ack packet sizes similar rap tcp flows 
fair comparison connections equal delay 
buffer size sw times rtt bandwidth product bottleneck link stated 
simulations run exhibited steady state behavior 
tcp flows ftp sessions infinite amount data 
tcp receiver window large tcp flow control invoked 
average bandwidth flow measured number delivered packets quarters simulation time ignore transient startup behavior 
simulation parameters summarized table 
packet size ack size bottleneck delay evaluation methodology byte byte ms environment large numbers parameters generally hard isolate particular variable study relation particular parameter existing inter dependency variables 
particular tcp moving target 
behavior changes drastically configuration parameters internal constraints 
simulations exceptions attempted minimize problems guidelines 
identify impact tcp constraints inter protocol dynamics results compared rap different flavors tcp 

limited side effect bottleneck bandwidth buffer space contention scaling resources proportional number flows amount resource share flow remains fixed simulations 
bandwidth buffer size bottleneck link scaled equally maximum queuing delay change simulations 
impact resource contention studied separately 
im fig 

rap coexisting tahoe 
chose configuration parameters tcp congestion window tends sufficiently large tcp remains behaved mode 

explored reasonable portion parameter space examine inter protocol fairness wide range circumstances 

baseline comparison occasionally replaced rap flows tcp ran scenario rap flow 
call tcp base case 
tcp base case may help separate phenomenon purely related tcp traffic 
experiments results tcp friendliness set simulations examines rap fine grain rate adaptation 
fig 
shows average bandwidth share rap tcp tahoe flows coexisting topology depicted fig 

resources bottleneck bandwidth buffer size scaled linearly total number flows 
range bandwidth share rap tcp flows represented vertical bars average value 
result implies rap terribly tcp friendly simulations 
observed unfairness due tcp inherent performance limitations artifact configuration parameters unfairness imposed coexisting rap flows 
tcp suffers performance limitations :10.1.1.155.2739
particular tcp experiences multiple losses window window smaller constrained wait retransmission timeout go slow start 
result tcp may temporarily lose congestion control mechanism diverges aimd algorithm 
severity problem varies different flavors tcp mainly depends window size loss patterns 
tcp sack able re cover multiple loss scenarios easier flavors tcp reno performance substantially degraded :10.1.1.155.2739
generally tcp ability efficiently recover multiple losses increases window size 
tcp diverges aimd algorithm bandwidth obtains 
exploited difference various tcp flavors assess impact tcp performance problem observed unfairness 
repeated experiment rap reno newreno sack tcp :10.1.1.155.2739
results confirm large scale behavior tcp traffic agreement behavior reported :10.1.1.155.2739
experiments reveal tcp inherent performance problems partially contribute unfairness 
limit impact tcp performance problems focus interaction rap tcp traffic 
chose tcp sack ideal representative tcp flows 
rest refer tcp mean tcp sack explicitly stated 
unable exhaustively examine parameter space focus attention parameters play key roles protocols behavior 
tcp congestion window particularly important 
rtt crucial affects rate adjustment rap tcp 
tcp congestion window primary factor performance tcp protocol 
introduce term inter protocol fairness ratio ratio average rap bandwidth calculated rap flows average tcp bandwidth calculated tcp flows 
changed delay bottleneck link control value rlt 
bandwidth linearly scaled total number flows buffering adjusted accordingly 
parameters table 
fig 
depicts fairness ratio function bottleneck link delay total number flows 
data point obtained experiment half flows rap half sack tcp 
reveals interesting trends fairness ratio particular value bottleneck delay increasing number flows improves fairness ratio smallest value delay ms ratio converges 
illustrates small simulations rap exhibits tcp friendly behavior 
different behavior small simulations tcp burstiness loss pattern scenarios 
excluding simulations small bottleneck delay small simulations fairness ratio close function rtt 
prob ratio parameter space fairness ratio fairness ratio fairness ratio parameter space adaptation fairness ratio fairness ratio fig 

fairness ratio parameter space fig 

ratio parameter space impact tcp congestion window ratio fairness ratio fairness ratio fig 

variation fairness ratio tcp congestion window lem short bottleneck delay small simulations small size tcp congestion window 
scenarios tcp smaller congestion window frequently experiences retransmission timeout 
bottleneck delay increases bottleneck pipe size buffer size increase 
allows tcp flows larger number packets fly maintain ack clocking 
conducted set simulations observe primary effect tcp congestion window fairness ratio 
congestion window dependent parameters available bandwidth flow buffer size mean queue size queue management scheme number flows 
adjust bottleneck bandwidth primary factor control value congestion window 
decided measure number outstanding tcp packets flow congestion window reasons 
firstly tcp congestion window may full fast recovery period 
cases tcp behavior depends number outstanding packets 
secondly rap window mechanism number packets fly common base comparison network point view 
fig 
shows variation fairness ratio function number flows amount allocated bandwidth flow 
number outstanding packets dependent variables mean number outstanding packets averaged tcp flows simulation coordinate corresponding data point amount allocated bandwidth flow 
graph clearly confirms hypothesis tcp performance directly influenced number outstanding packets transit 
number outstanding packets grows fairness ratio improves simulations small number flows 
heavy load number outstanding packets tcp flow drops threshold performance substantially degraded 
circumstances rap easily utilize available bandwidth decouples congestion control error control performs 
fig 
implies number coexisting flows visible impact fairness resources scaled appropriately small numbers flows 
fine grain rate adaptation fine grain rate adaptation attempts emulate degree congestion avoidance tcp obtains due ack clocking 
investigate effect fine grain rate adaptation tcp friendliness explored parameter space wide range 
fig 
shows fairness ratio function bottleneck link delay total number coexisting flows 
half traffic consists rap flows 
comparison fig 
reveals fine grain rate adaptation improves fairness connections small rtt small tcp window affect areas 
result implies long tcp flows diverge aimd algorithm fairness ratio primarily determined tcp behavior large scale behavior remains intact 
desired property 
scenarios tcp traffic vulnerable loss ack clocking achieves smaller share bandwidth fine grain rate adaptation enhances resolution rate adaptation rap flows preventing overshooting available bandwidth share 
turn reduces probability experiencing loss ack clocking tcp flows 
consequently tcp traffic obtains fair share bandwidth 
red gateways main challenge configure red gateway behaves uniformly simulations 
red performance closely depends behavior aggregate traffic 
behavior change number flows hard obtain performance wide range reconfiguring gateway 
table summarizes configuration parameters table half traffic consists rap flows fine grain adaptation 
provided sufficient buffer bottleneck eliminate buffer overflow 
fig 
shows fairness ratio different value maxp maximum probability loss number flows changes 
graph clearly illustrates interesting points 
exists range rap tcp evenly share bottleneck bandwidth 

small simulations fairness ratio change simulation size 

behavior aggregate traffic substantially different small simulations 
fig 
demonstrates red able evenly distribute losses flows avoid buffer overflow wide range 
red eliminated unfairness caused tcp burstiness 
higher value maxp red drop packet buffer full lower mean buffer utilization fig 
shown tcp performs poorly small congestion window higher fig 

impact red fairness values max tend reduce tcp mean congestion window 
rap takes advantage degree unfairness results 
long average queue size remains red operating region maxth bandwidth share red tcp quite fair 
value maxp small average queue size reaches red starts dropping packets average queue size decreases 
process repeats oscillations occur loss probability alternating 
red operated region curve shows effect maxp 
differences rap tcp due tcp burstiness interacting periodic oscillations average queue size 
small simulations oscillation period long tcp rap lose rtt worth packets 
tcp takes long time recover rap recovers comparatively easily 
large simulations period oscillations shorter tcp may lose average tcp hit loss periods rap flow spaces packets evenly 
average tcp performs better rap 
emphasized red regime impose terrible loss bursts realtime flows avoided costs 
figures graph measured rtt small simulations demonstrate oscillations fig 
maxp versus normal red behavior fig 

conclude appropriate tuning red significantly improve fairness rap tcp 
aggressively pushing low buffer utilization counterproductive rap tcp share link tcp diverges aimd 
rate adaptation protocol extensively examined interaction tcp simula fig 

rtt rap tcp fig 

rtt rap tcp tion 
achieving tcp friendliness wide range network parameters extremely challenging rap reasonably achieves goal 
devised evaluated fine grain rate adaptation mechanism emulate tcp ack clocking property 
results show fine grain rate adaptation extends inter protocol fairness wider range 
divergence tcp congestion control aimd algorithm main cause unfairness tcp special cases 
problem pronounced clearly reno tahoe limited impact sack 
observed bigger tcp congestion window closer follows aimd algorithm 
properly configured red gateways result ideal inter protocol sharing 
plan continue directions 
developed prototype examine rap performance real network 
rap just core component architecture fig 
unicast playback realtime streams best effort networks 
developed quality adaptation mechanism smoothly adjusts quality layered encoded playback video transmission rate controlled rap 
bolot 
characterizing packet delay loss internet 
journal high speed networks september 
cen 
pu walpole 
flow congestion control internet streaming applications 
proceedings computing cmd networking january 
chen tan campbell li 
real time video audio world wide web 
fourth international world wide web december 
chiu jain 
analysis increase decrease algorithm congestion avoidance computer networks 
journal computer networks isdn june 
ic :10.1.1.155.2739
fall floyd 
simulation comparison tahoe reno sack tcp 
computer communication review july 
floyd fall 
promoting congestion control internet 
unpublished february 
ee lbl gov 
pape html 
floyd jacobson :10.1.1.128.5092
random early detection gateways congestion avoidance 
transactions networking august 
floyd 
connections multiple congested gateways networks 
computer communication review october 
microsoft service streaming media business 
www microsoft 
io jacobs eleftheriadis 
real time dynamic rate shaping control internet video applications 
workshop signal processing pages june 
jacobson 
congestion avoidance control 
acm sigcomm pages august 
jain 
delay approach congestion avoidance interconnected heterogeneous computer networks 
computer communication review october 
mahdavi floyd 
tcp friendly unicast rate flow control 
technical note sent interest mailing list january 
www psc edu networking papers html 
mathis mahdavi floyd 
romanow 
tcp selective options 
rfc april 
mathis semke mahdavi ott 
macroscopic behavior tcp congestion avoidance algorithm 
computer review 
july 
mccanne floyd 
ns network simulator 

www mash cs berkeley edu ns 
progressive networks 
versus realaudio client server streaming 
www realaudio com help vs ra htd 
le padhye firoiu towsley kurose 
modeling tcp throughput simple model empirical validation 
acm sigcomm september 
rejaie handley estrin 
rap toend rate congestion control mechanism realtime streams internet 
technical report cs usc 
august usc edu re reza papers rap 
html 
rejaie handley estrin 
architectural considerations playback quality adaptive video internet 
report cs usc november 
shenker 
theoretical analysis feedback flow control 
acm sigcomm pages september 

adjustment algorithm tcp friendly adaptation scheme 
workshop network und system support digital audio video july 
tan zakhor 
error resilient packet video internet 
proceedings qf ieee international conference image processing kip may 

