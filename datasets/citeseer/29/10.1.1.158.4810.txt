hidden markov models human computer interface modeling lane school electrical computer engineering purdue university west lafayette email ecn purdue edu automated modeling human behaviors useful computer security domain anomaly detection 
user modeling facet anomaly detection domain task develop model pro le normal working state computer system user detect anomalous conditions deviations expected behavior patterns 
examine hidden markov models hmms user pro les anomaly detection task 
formulate user identity classi cation system posterior likelihood model parameters approximation allows quantity tobe quickly estimated high degree accuracy subsequences total sequence observed data 
give analysis hmm anomaly detection sensor 
examine performance range model sizes number hidden states 
demonstrate user population model inferior multi state models multi state models states tend model pro led user ectively ectively smaller models 
observations consistent interpretation larger models necessary capture high degrees user behavioral complexity 
describe extensions techniques tasks domains 
automated modeling human behaviors useful computer security domain anomaly detection anderson denning 
user modeling facet anomaly detection domain task develop model pro le normal working state computer system user detect anomalous conditions deviations expected behavior patterns 
subset hostile activities detected anomalous behaviors 
example recursively searching system directory hierarchies hand browsing user les unusual behaviors users presence activities may penetrated account 
alternatively manner similar tasks carried may critical indicator 
example sudden presence complex tools perl dd data user accustomed making repetitive le modi cations hand may tip system literate user employing account 
ood data generated user sources command line gui events requires automated modeling detection uncover events 
take personal assistant view domain task anomaly detection sensor augment security private individual computer system account monitoring usage activity suspicious incidents conform known behavior patterns account owner denoted valid pro led user 
view behavioral data assumed private available valid user assistant 
training data single class representing behaviors pro led user 
anomaly detection sensor employs hidden markov models hmms user models 
focus application hmms user models security domain potential user models general 
section discuss possible applications types models developed 
hidden markov models user behavioral models section describe framework employing hmms user behavioral models anomaly detection 
discuss di erent formulations hmms labelers describe classi cation strategy adopted 
notation employ rabiner hmm notation rabiner qt ot variables denoting hmm state observed output time respectively denote complete sequence states outputs period observation prior probability state aij probability transitioning state state bi probability generating output symbol vo hmm state matrix forms probabilities respectively set hmm parameters bg number hidden states model size alphabet observable symbols particular state model time denoted qt states labeled sk 
similarly output symbols labeled vj particular symbol observed time ot 
domain de nition anomaly detection task regarded binary classi cation problem self non self identi cation forrest lane brodley 
problem label incidences anomalous behavior behaviors originating party pro led user temporal stream observations 
anomalous behaviors principle occur point time observation assigned label 
guarantee coverage space anomalous activities privacy reasons assume availability data pro led user 
data unix shell history traces described detail section 
individual alphabet symbols whitespace separated words tokens total hmm alphabet set unique symbols occurring available user data 
hmms sequence data classi ers task employing hidden markov models temporal classi cation systems framed di erent manners 
popular method multiclass problems identify class labels hidden states single model 
state sequence inferred observed data viterbi algorithm rabiner constitutes classi cation temporal sequence data 
approach employed example speech recognition rabiner juang positional tracking prediction user modeling orwant fault monitoring smyth 
smyth describes approach discriminative viewing classi cation problem estimating probability class labels data model parameters 
notes approach assumptions class labels states mutually exclusive exhaustive 
rst condition certainly holds anomaly detection domain input token generated single user poses considerable di culty 
anomaly detection domain clearly examples valid user behavioral characteristics lack examples behaviors hostile users intruders 
examples hostile behaviors problem demonstrating training set exhaustive di cult best 
fault detection smyth addresses question unobserved classes adding extra state model augmenting discriminative model generative model 
generative model views hmm data generator estimates observation likelihoods oj forward step forward backward algorithm rabiner 
class probabilities derived instantaneous observation probabilities bayes rule 
hybrid discriminative generative approaches allows estimation class probabilities auxiliary state modeling unobserved data 
combination classes models involves prior distribution assumptions likelihood data unknown class 
take di erent approach classication problem 
similar generative approach employ estimations data probabilities forwardbackward algorithm associating class labels model states associate class labels individual models 
model probabilities evaluated posterior observation probabilities bayes rule jo oj normalizing factor identical classes 
model prior probability selected domain knowledge take non informative prior uniform probability distribution nite set models 
class problem observational sequence assigned class label corresponding maximum likelihood model class ijo ectively assessing likelihood model generated sequence question selecting model highest likelihood 
framework allows assign single label entire observational sequence gives freedom assign unknown class labels 
sequence judged insu ciently respect known models labeled unknown 
similar model class approaches widely applied speech recognition community rabiner 
orwant related framework determine user current behavioral state idle writing hacking orwant employed manually constructed models class interconnected class models meta hmm data proved di cult come 
examples usually simulated machine level attack logs network packet logs system call traces available traces real attacks human command level considerably rarer 
call examples data security research center date yielded instances data 
classes predicted viterbi algorithm 
choice important ects potential hmm 
discriminative generative forms hmm classi cation domain provides appropriate value number classes data possibly unknown states 
model class framework classes directly associated model states wemust seek domain speci knowledge help choose estimate natural number distinct behavioral classes data employ empirical search 
examine method experimental section 
sequence labeling anomaly detection domain model class framework outlined construct single hmm model observed behavioral patterns valid user 
likelihoods incoming data sequences evaluated respect judged insu ciently threshold test labeled anomalous 
value minimum acceptable likelihood denoted tmin 
feature anomaly detection domain threat replay attacks avoid attacks introduce upper threshold tmax ag data similar historical behaviors 
thresholds tmin tmax chosen upper lower quantiles non parametric distribution observation likelihoods independent parameter selection subset training data 
parameter corresponds acceptable false alarm rate selection site speci issue related security policy 
sequence alignment noted model class framework assigns class labels entire sequences wish able label arbitrary subsequences observed data stream 
course run forward backward likelihood estimation algorithm possible pair subsequence start termination time steps 
turns computationally expensive complexity algorithm time sequence length merely consider subsequences xed total data sequence length requires time 
prohibitive subsequence lengths interest domain 
replay attack attacker monitors system records information user commands 
commands replayed back tothe system literally inclusion hostile actions 
vast majority data fact originally generated valid user appear perfectly normal detection sensors check occurrences similar past behavior 
rate incorrectly identifying valid user anomalous 
employ approximation algorithm obtained considering endpoint state transitions time steps statistically uncoupled adjacent states time steps 
os os ot ot os ot ot exponential decay state uence markov formulation approximation reasonably large example comparison approximated sequence log likelihood exact value tested users value empirical investigations sections revealed approximated value mean deviation median deviation true value indicating deviations skewed 
approximation allows consider xed length subsequences global temporal sequence length time marginal loss precision 
alternate approaches sequence learning user modeling traditional approaches learning temporal sequence data applicable user modeling base data consists discrete unordered nominal valued elements command strings 
time series numeric values techniques analysis oppenheim schafer principle component analysis fukunaga linear regression casella berger linear predictive coding rabiner juang nearest neighbor matching neural networks proven fruitful 
techniques typically employ euclidean distance related distance measure de ned real valued vectors 
number learning algorithms amenable learning spaces nominal valued attributes typically employ feature vector representation may suited temporal data 
example decision trees quinlan ective discovering decision boundaries discrete spaces 
bias search structures generally employs greedy search examines feature independent 
bias ignores natural order relations temporal data causality correlation chains 
method circumventing di culty convert data atemporal representation causal structures represented explicitly 
norton salzberg independently technique domain learning recognize coding regions dna fragments 
dna coding temporal exhibit interrelations positions di cult conventional learning systems acquire directly 
features extracted dna sequences selected domain experts generalized sequential domains 
approach applied anomaly detection domain require considerable ort part domain expert developed features apply data source 
interested developing techniques applied di erent data sources tasks 
exist learning methods explicitly developed model sequence data 
algorithms discovering temporal rule relations example examined srikant agrawal 
methods learning structure deterministic nite state automata widely studied rivest schapire 
dfa suited modeling highly noisy domains human generated computer interface data 
data observed shell level syntactic semantic errors removed data cleaner 
yoshida motoda employ relations level develop nite state graph models user behaviors 
simplest extension dfa models noisy domains markov chain models davison hirsh allow stochastic state transitions 
models advantage hmms maximum likelihood estimate transition probabilities closed form 
markov chain models typically emit symbols deterministically state arc emitting single symbol requiring state symbol alphabet total transition probabilities learned alphabet size alphabet large empirical analyses observed alphabets unique symbols dimensionality parameter space high amount training data required accurately estimate low probability transitions large 
deterministic output markov models unique states symbol emitted state represent single context symbol 
anomaly detection domain symbols multiple contexts 
command vi example employed editing source code conference papers 
empirical analysis structure experimental evaluation hmms user models anomaly detection domain 
examine performance measures task discussing alternative classic performance accuracy 
describe sources formatting data employed evaluations nally structure experimental procedure 
performance criteria employ methods evaluating performance anomaly detection systems 
addition traditional accuracy measurements argue mean time generation alarm useful quantity consider 
goal anomaly detection task identify potentially malicious occurrences falsely innocuous actions rarely possible 
shall denote rate incorrectly normal behaviors false alarm rate rate failing identify abnormal malicious behaviors false acceptance rate 
null hypothesis behavior normal correspond type type ii errors respectively 
converse accuracy rates referred true accept ability correctly accept pro led user normal rate true detect ability correctly detect anomalous user rate 
detector practical important false alarm rate low 
users security quickly learn ignore security system wolf ags innocuous behavior 
detection accuracy reveal complete story 
second issue importance time alarm tta measure quickly anomalous hostile situation detected 
case false alarms time alarm represents expected time false alarm occurs 
wish time alarm short hostile users dealt quickly doing harm long valid user normal interrupted false alarms seldom possible 
measure mean run length normal classi cations 
time measured token counts wall clock time number tokens emitted closely correlated activity user physical duration shell session 
data non simulated human level attack data proven di cult obtain pro led techniques user di erentiation problem 
formulation data gathered valid system users normal working conditions user pro le constructed 
performance anomaly detection sensor evaluated respect ability correctly recognize pro led user discriminate users anomalous 
framework simulates subset possible misuse scenarios gaining access unauthorized account allows evaluate approach 
gathered command traces unix users history mechanism course years 
command traces parsed recognizer command language convert format suitable scanning hmm classi cation sensor feature selection 
whitespace delimited word input stream considered separate symbol token 
feature selection step removes replacing count number le names occurring command line 
removal reduces alphabet unique tokens slightly unique tokens dramatically improves recognition accuracy empirical tests 
experiment structure complete training data instances train param train param test train param test test division training data train parameter selection test data sets 
user behaviors change time ective lifetime static user pro le employed described limited 
experiments evaluate detector performance limited range activities 
separation token training data groups folds train parameter selection test data shown 
initial tokens user data taken training pro le construction data tokens taken parameter selection data set decision thresholds tmax tmin tokens taken test performance pro le 
guard isolated data anomalies folds train parameter selection test data produced user 
fold random restarts run reduce chance baum welch training algorithm locating spuriously poor local maximum ml parameter estimate 
tests repeated fold restart results averaged restarts 
test set pro le hmm constructed window length sequence alignment section 
examine impact sensor performance constructed models 
resulting pro le tested corresponding test set user total test pairings 
self test pairing testing pro led user data pro le allows examine false alarm rates non self pairing allows examine false accept rates 
acceptable false alarm rate determines classi cation thresholds tmax tmin set substantial impact tradeo false alarm false accept errors 
notion acceptable false alarm rate site dependent parameter wish characterize performance system spectrum rates 
took yields performance curve pro le test set pair 
curve expresses wehave users tend experience large behavioral changes academic 
batch mode detection system highly sensitive 
tradeo false alarm false accept errors respect known receiver operating characteristic roc curve provost fawcett 
roc curve allows user evaluate performance system di erent operating conditions select optimal operating point cost tradeo classi cation errors 
experimental results section results empirical evaluations hmms user models 
rst experiment explores performance state models 
compare performance values models values section 
base system performance displays example accuracy alarm tta results test fold single pro le user 
column plots displays performance results single test set tested pro le 
accuracy results test set originates pro led user user tested pro le results indicate ability correctly identify valid user true accept rate 
condition denoted symbol plot 
test set originates di erent user user tested pro le results indicate ability correctly ag anomalous condition true detect rate 
condition denoted symbol plot 
classes tests accuracy increasing positive direction axis 
spectrum results column generated testing di erent values acceptable false accept rate described sections 
encodes size acceptance region yields tradeo detect versus accept accuracies 
smallest value tested yields widest acceptance region corresponds highest accurate point true accept column user 
acceptance region wide anomalous points fall accepted falsely 
value corresponds lowest accuracy true detect columns user 
time alarm results displayed analogously limited range 
note vertical time axis logarithmic times alarm pro led user nearly order magnitude larger opponents 
desired result wish times long pro led user false alarms generated rarely short opponent users hostile detected quickly 
user chosen display features hmm user pro ling sensor 
accuracy highly sensitive particular opponent 
example testing respect user yields far di erent detection accuracies testing user 
second acceptable false alarm profile profile accuracy time alarm user user user user user user user user tested user user user user user user user user user tested user accuracies mean times alarm hmm model user behaviors 
rate parameter tested range observed false alarm rates greater 
result training parameterization data failing fully re ect behavioral distribution testing data 
user changed behaviors tasks interval generation training testing data pro le include behaviors test data 
phenomenon exacerbated batch mode experimental setup 
investigated online techniques domain employ instance learning technique ibl lane brodley perform better corresponding batch mode ibl sensors 
investigating techniques online versions hmm user modeling sensor 
complete set results pro les folds hmm user model 
plots intended individual accuracy time alarm tta values convey sense general performance anomaly detection sensor di erent operating conditions highlight behavioral characteristics detection system 
plots column displays results single user pro le data displayed user 
folds pro le 
primary point interest plots true acceptance abilities ability correctly identify pro led user generally evidenced high accuracies long times generation false alarms symbols clustered top axis 
addition true detection abilities ability correctly identify pro led user generally fair evidenced reasonable accuracies short times generation true alarms 
note mediocre true detection abilities may acceptable need caught 
obvious notable exception general performance trends user 
sensor displays strong true accept abilities respect user provides poor true detection abilities 
example decision thresholds tmax tmin described section set arti cially extreme values resulting spuriously large acceptance region 
system ectively decided user real di erentiation done simply accepting behaviors normal 
examination user training data reveals user appears devote entire shell sessions single tasks compile debug cycle appear monotonous patterns 
user working windows environment tasks assigned single shell sessions shell sessions may long lived commands 
training data may display sessions small number behaviors parameter selection data displays di erent small set behaviors 
may little overlap training parameter selection data observed similarity pro le frequency distribution may distorted selected decision thresholds poorly chosen 
converse behavior occurs pro le fold set circles lowest pro le 
pro le displays relatively low true accept rates comparison pro les folds high true detect rates 
example user model deciding user acceptance region set narrowly 
user arises di erent behaviors displayed training testing data 
case parameter selection data re ects training data test data di erent 
result acceptance range narrowly focused high similarity behaviors behaviors encountered testing data lower similarity 
accuracy time alarm profile profile profile profile profile profile profile profile profile profile profile profile profile profile profile profile results user pro les folds 
column displays single pro le tested test sets column equivalent 
number hidden states open question hmms modeling choice number hidden states 
states clear domain interpretation example fault monitoring value may naturally dictated domain 
conveniently available employ empirical analysis discover appropriate value 
examine impact sensor performance constructed models tested conditions 
case degenerate form hmm equivalent frequency estimation alphabet symbols time steps sequence data considered statistically independent 
ectively data considered generated multinomial process elements drawn distribution output symbol generation distribution 
case di erent qualitative behaviors cases discuss separately 
results case displayed 
gures comparative plotting results mode vertical versus results mode horizontal 
diagonal line iso performance surface points falling indicate higher performance sensor points falling right indicate higher performance sensor 
general result state hmm stronger true detection accuracies 
true accept points scattered uniformly iso performance surface true accept accuracy measurements fall side line system appears slight margin average higher true accept accuracy reported system 
measure relative accuracy performance systems employ mean accuracy value di erences 
di erence true detect rates method rst appearance results slight indicate sensor performing worse sensor terms true accept accuracy better terms true detection 
situation somewhat confused mean time alarm considered 
dimension model superior time false alarm average tokens longer inferior time true alarm tokens longer 
turns skewed user note logarithmic range tta data allows single user signi cantly skew simple additive mean 
model suffers user syndrome lesser degree model appears far ective separating users user 
user removed sample di erences tta domain favor mean tta tokens longer false alarms tokens shorter true alarms 
results comparing sensor system omit falls spectrum unusual 
values plotted horizontal values settings appear respective vertical axes 
re ects trend dramatic plots pronounced increases 
general result sensor superior equivalent true accept accuracies inferior true detect accuracies albeit narrow margin average 
qualitative result tta domain similar aggregate results skewed tested users case user user method opponent test sets accuracy method accuracy method number opponent test sets 
comparative accuracies comparative mean times alarm comparisons hmm user models vertical axis horizontal axis 
accuracies appear 
symbols denote true accept rates mean times false alarms symbols denote true detect rates mean times true alarms 
user 
structure trend open multiple interpretations 
improved true accept coupled degraded true detect performance viewed indication subject everybody pro led user di culty respect smaller values take converse interpretation models smaller values pro led user problem 
spectrum values represents spectrum tradeo user oriented large values oriented small values 
observation compatible interpretation models larger encoding broader range user behaviors smaller models investigation required verify hypothesis 
general optimal number hidden states maximum discriminability user dependent related syntactic complexity displayed user data 
example user data extremely repetitive employs simple shell commands best modeled single state model user data displays complex shell actions stage pipelines best modeled state hmm 
extensions implications techniques limited solely domain anomaly detection explicitly security oriented tasks 
anumber possible uses realized straightforward modi cations framework 
user identi cation obvious extension capacity identify particular user set known users solely behavioral characteristics 
security interest methods password physical tokens identify users quickly accurately trusted 
online monitoring approach identi cation serves mainly veri cation backup primary identi cation techniques 
group identi cation visibly useful extension identify users members groups individuals 
constructing models group exemplar behaviors individual automatically assigned group inherit environmental customizations appropriate group needs 
behavioral identi cation ner grain user behaviors may segmented class writing play coding web sur ng 
approach examined manually constructed hmms orwant orwant 
analyzing substructure interconnections automatically generated hmm behavioral classes automatically identi ed associated appropriate responses user interface 
behavioral prediction hmms run observational models generative models 
framework predict user actions provide time saving shortcuts opening menus initiating expensive computations early 
observation user example displays qualitatively di erent behaviors users user modeled ectively single state model users modeled effectively multi state models indicates hmm framework capable discerning types behavioral groupings 
results choice consistent interpretation users fall spectrum behavioral complexities identi ed models di ering complexity 
privacy oriented framework employed employ knowledge cross comparative accuracies comparative mean times alarm comparative accuracies comparative mean times alarm comparisons respective vertical axes horizontal axis 
validation testing impossible constrained setting types distinctions extracted fairly easily assist user 
demonstrated hidden markov models user pro ling domain anomaly detection 
key results empirical investigation hmms identify users command line behavioral patterns 
models su er general classes errors overly permissive everybody pro led user overly restrictive pro led user 
number hidden states hmm represents spectrum tradeo error classes 
larger models ective identifying valid user smaller models generally better discerning impostors 
optimal number hidden states appears re ect measure syntactic complexity command line data 
single state hmm models ectively token frequency estimation models display qualitatively di erent behaviors multi state models 
pro led users multi state models ective single state model 
exception user data consisted long sessions encoded small number tasks 
open problem user pro ling technique ability select appropriate model parameters data prior knowledge 
supervised learning domains cross validation search may select appropriate parameter settings seek unsupervised techniques domain 
observation optimal choice related behavioral complexities presents potential approach problem 
possible measures data complexity select appropriate model parameters 
sensor employed functions line 
lane brodley wehave line extensions instance user mod eling sensor displayed heightened performance 
currently investigating extensions hmm anomaly detection sensor line mode expect similar performance improvements realized change 
acknowledgments portions supported contract mda maryland procurement ce sponsors center education research information assurance security purdue university 
carla brodley craig reviewers helpful comments 
data donors especially user data forced examine domain closely done 
anderson anderson 
computer security threat monitoring surveillance 
technical report technical report washington pa 

learning regular sets queries counterexamples 
information computation 
casella berger casella berger 
statistical inference 
brooks cole paci grove ca 

multi component nonlinear prediction system index 
neurocomputing 
davison hirsh davison hirsh 
predicting sequences user actions 
proceedings aaai icml joint workshop ai approaches time series analysis pages 
denning denning 
intrusion detection model 
ieee transactions software engineering 
forrest forrest hofmeyr somayaji sense self unix processes 
proceedings ieee symposium computer security privacy 
fukunaga fukunaga 
statistical pattern recognition second edition 
academic press san diego ca 
lane brodley lane brodley 
sequence matching learning anomaly detection computer security 
inproceedings aaai workshop ai approaches fraud detection risk management pages 
lane brodley lane brodley 
approaches online learning concept drift user identi cation computer security 
international conference knowledge discovery data mining pages 
norton norton 
learning recognize promoter sequences coli modelling uncertainty training data 
proceedings twelfth national conference arti cial intelligence pages seattle wa 
oppenheim schafer oppenheim schafer 
discrete time signal processing 
signal processing 
prentice hall englewood cli new jersey 
orwant orwant 
heterogeneous learning user modeling system 
user modeling user adapted interaction 
provost fawcett provost fawcett 
robust classi cation systems imprecise environments 
proceedings fifteenth national conference onarti cial intelligence madison wi 
aaai press 
quinlan quinlan 
programs machine learning 
morgan kaufmann san mateo ca 
rabiner juang rabiner juang 
fundamentals speech recognition 
prentice hall englewood cli new jersey 
rabiner rabiner 
tutorial hidden markov models selected applications speech recognition 
proceedings ieee february 
rivest schapire rivest schapire 
inference nite automata homing sequences 
proceedings annual acm symposium theoretical computing pages 
salzberg salzberg 
locating protein coding regions human dna decision tree algorithm 
journal computational biology 
smyth smyth 
hidden markov monitoring fault detection dynamic systems 
pattern recognition 
smyth smyth 
markov monitoring unknown states 
ieee journal selected areas communications special issue intelligent signal processing communications 
srikant agrawal srikant agrawal 
mining sequential patterns generalizations performance improvements 
proc 
fifth int conference extending database technology edbt avignon france 
yoshida motoda yoshida motoda 
automated user modeling intelligent interface 
international journal human computer interaction 
