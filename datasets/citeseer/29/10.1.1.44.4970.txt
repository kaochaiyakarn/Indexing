integrity constraints constraint logic programming henning christiansen university computer science dept box dk denmark henning dk shown constraint logic useful evaluation integrity constraints deductive databases 
integrity constraints represented calls metainterpreter negation failure implemented constraint solver 
procedure called lazy failure yields incremental evaluation starts checking existing database time update request occurs simplified constraints produced checking particular update new constraints corresponding specialized integrity constraints generated updated database 
relationship integrity constraints databases constraints constraint logic programming going partial overlap names applied phenomena 
concern conditions ensured systems interdependent entities different tuples database set variables program execution state 
relate problems evolve gradually integrity ensured time database updated constraints logic programming wake ensure satisfiability specific information available arguments instantiation new constraints added constraint store 
turns suited purpose provides incremental evaluation mechanism casts specialized integrity constraints update similarly obtained earlier methods called simplification comparison final section 
experience reported indicates constraint logic suited evaluation integrity constraints combining conceptual simplicity desirable computational properties holds consider constraint logic programming deductive databases prolog matter real topic researchers playground designing experimenting new methods applicable technologies 
section describe setting show different applications implementation lazy negation failure procedure 
consider generation specialized update routines particular updates view update generation intentional answers 
implementation language constraint handling rules described section possible improvements efficient implementation methods discussed :10.1.1.40.4255
final section provides summary compares related 
basic concepts motivating examples illustrate principle examples experimental implementation postpone details possible implementation section 
databases represented object language function free positive horn clauses extended dif constraints 
semantics defined terms provability relation ground queries dif representing syntactic equality 
joint int conference symposium logic programming pp 
mit press decker procedure integrity checking deductive databases 
hentenryck ed logic programming proc 
eleventh int conference logic programming pp 
mit press constraint handling rules ed constraint programming basics trends spring school lecture notes computer science pp :10.1.1.40.4255
theory practice constraint handling rules journal logic programming vol 
pp 
godfrey gryz minker integrity constraints semantics applications 
chomicki saake eds logics databases information systems pp 
