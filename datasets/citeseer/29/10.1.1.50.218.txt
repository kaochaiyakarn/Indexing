implementing temporal integrity constraints active dbms david toman jan chomicki department computing information science kansas state university manhattan ks cis edu system allows automatic efficient translation integrity constraints formulated past temporal logic rules starburst dbms 
compilation set constraints checked safe evaluation property 
result compilation set starburst sql statements define necessary rules needed enforcing constraints 
need additional runtime constraint monitor 
rules activated updates database violate constraints automatically rejected corresponding transaction aborted 
addition efficient implementation approach offers clean separation application programs integrity checking code 
dealing temporal constraints choice temporal logic natural solution 
achieve efficient implementation restrict language past fragment temporal logic constraint checking done referring past history database shown 
integrity constraints mainly focused efficient detection constraint violations 
general integrity constraints difficult enforce efficiently general purpose integrity enforcement subsystems currently experimental database systems commercial dbms usually enforce simplest constraints constraints primary foreign keys 
hand proposals general constraint management subsystems especially :10.1.1.143.7196
develops sql constraint specification language shows techniques converting specification triggers starburst system 
system allow fully automatic translation logic formulas starburst rules 
static constraints covered approach 
second approach closer temporal logic chosen constraint specification language comparing language fragment tl chosen 
tl fol module introduce tl constructs language try capture bigger class temporal constraints example real time constraints described 
refine translation tl fol cases examples amount information stored auxiliary relations reduced 
fol sql modules write specific routines query optimization 
transformation unique optimization transformation may help reduce size final formula note avoid exponential explosion general 
rule generator optimize process rematerialization auxiliary relations shown :10.1.1.56.375
pass easily added top existing system 
problem starburst extensions sql allow handle nested subqueries directly 
systems sql handle nested queries directly 
change rule system mainly removing syntactic restrictions rules better suited handling converted logic formulas especially conjunctions 
