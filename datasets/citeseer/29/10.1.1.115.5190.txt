int 
accounting auditing performance evaluation vol 

software fault tree colored petri net specification design implementation agent intrusion detection systems guy helmer wong mark slagell vasant honavar les miller wang xia wang department computer science iowa state university hall ames iowa mail wong slagell honavar cs iastate edu mail cs iastate edu helmer systems research funded part department defense boeing form boeing dissertation fellowship graduate college iowa state university 
corresponding author funded part department defense 
integration software fault tree sft describes intrusions colored petri nets cpns specifies design examined intrusion detection system ids 
systems generally contain design implementation flaws result security vulnerabilities 
intrusion takes place attacker group attackers exploit security vulnerabilities violate confidentiality integrity availability guarantees system network 
intrusion detection systems idss detect set intrusions execute predetermined action intrusion detected 
idss audit information obtained host systems networks determine violations system security policy occurring occurred 
multi agents intrusion detection system helmer helmer uses mobile agents bradshaw distributed system obtain audit data correlate events discover intrusions :10.1.1.101.853:10.1.1.33.9567
design implementation agent intrusion detection systems system consists stationary data cleaning agents obtain information system logs audit data operational statistics convert information common format low level agents monitor classify ongoing activities classify events pass information mediators data mining agents machine learning acquire predictive rules intrusion detection system logs audit data 
challenges designing ids involves defining exactly data elements correlated determine intrusion place distributed environment 
difficult determine data elements necessary discover intrusions 
model intrusion detection essential describe data flow system determine system able detect intrusions suggest points countermeasures implemented 
representation requirements intrusion detection derived 
cpn models intrusion intrusion detection system design ids 

countermeasures analysis 
augmented sft intrusion specification allows determination countermeasures needed ids attacks helmer :10.1.1.101.853:10.1.1.33.9567
augmented sft define augmented software fault tree sft leaf nodes may specify trust ordering contextual constraints addition basic events sft 
specifically constraint nodes added sft capture trust order contextual relationships needed develop satisfactory specification intrusions 
effect adding constraint nodes may demonstrated considering set combinations events root node plain sft true 
set combinations events actual intrusions root node augmented sft true 
context involves node specified 

temporal ordering intervals events conditions involved intrusion occur particular order 
explicitly specifying event ordering excludes non intrusive permutations events considered intrusive 
allen ferguson interval temporal logic allen ferguson develop temporal predicates :10.1.1.30.1586
occurs event takes place node sft true long existence event may combined events parent node true 
event period may long context exists may evaluated 
sense occurs concerned relative start event periods 
occurs condition event period required start event period started 
substitution transitions fusion places allow construction hierarchical cpn combining number non hierarchical cpns 
hierarchical cpn may translated behaviorally equivalent non hierarchical cpn vice versa 
hierarchical cpns important design ids allow construction detectors components attacks composed detectors complete intrusion 
cpns applied variety problems security networks concurrent systems vlsi chip design chemical manufacturing systems jensen 
petri nets applied safety domain closely related security domain ids systems kumar kumar :10.1.1.158.5704
modeling intrusion detectors cpns shown cpns provide formal foundation agent distributed ids allow analysis ids discovering inconsistencies components system finding ideal places monitored system security improvements proving certain attacks successful system changed eliminate identified vulnerabilities 
augmented sft cpn templates colored petri net template intrusion detectors may generated augmented sfts intrusions ensure correctness correspondence requirement specification sft design cpns 
constraints added augmented sft describe ordering relationships nodes requires special handling develop accurate cpn templates augmented sft 
leaf nodes augmented sft intrusions correspond basic events system detected 
cases exist nodes may required true order intervening events may occur second nodes may required true order intervening events 
design implementation agent intrusion detection systems time time time time node constrained corresponding cpn support ordering cpn tokens required contain times sequence numbers 
event occurs event timestamp token representing event timestamp token representing event events may identical timestamps 
likewise event occurs event sequence number token representing event sequence number token representing event events may identical sequence numbers 
literal wall clock times comparisons problem times obtained different computers distributed system tanenbaum :10.1.1.37.8404
computer notion current time computer clocks tend skew different rates 
assume clocks kept synchronized skew computer clock actual time small 
implementation detail intrusion detection system may synchronize clocks monitor measured difference clocks 
ids may established maximum skew max may consider max intrusion 
relay host running modified version wu ftp server 
changes source code file blindly enable port commands regardless source destination 
vulnerable server active testing packet filtering kept place discourage real attacks outside laboratory domain 
target host rsh service vulnerable rsh service disabled proxy set watch port echo traffic terminal window 
helmer wong slagell honavar miller token urgency type ftp bounce attack ftp bounce attack mon apr cdt ftp port retr mon apr cdt ftp port mon apr cdt tcp luke cs iastate edu ftp monitor ftp port requested ftp port ok mon apr cdt tcp luke cs iastate edu ftp monitor ftp port succeeded ftp retr mon apr cdt tcp luke cs iastate edu ftp monitor ftp retr requested ftp retr ok mon apr cdt tcp luke cs iastate edu ftp monitor ftp retr succeeded rsh port mon apr cdt tcp judge cs iastate edu tcp monitor rsh connection ftp token urgency type ftp bounce attack ftp bounce attack mon apr cdt ftp port retr mon apr cdt ftp port mon apr cdt tcp luke cs iastate edu ftp monitor ftp port requested ftp port ok mon apr cdt tcp luke cs iastate edu ftp monitor ftp port succeeded ftp retr mon apr cdt tcp luke cs iastate edu ftp monitor ftp retr requested ftp retr ok mon apr cdt tcp luke cs iastate edu ftp monitor ftp retr succeeded rsh port mon apr cdt tcp judge cs iastate edu tcp monitor rsh connection ftp alert tokens node reduced test measures essential events appear real attack minimal danger test systems compromised :10.1.1.30.1586:10.1.1.26.6055
run isolation scripted attack detected typically seconds completion 
time disparity expected discrete actions agents randomized delays artificially inserted 
tests session ftp sequence malicious sessions reliably detected false negatives false positives 
details alert tokens test shown 
attack token details shown 
attack detected slowly second quickly compare creation times ftp retr ok ftp port retr tokens witness bottleneck relieved 
total detection times tests calculated reception attack egg creation final alert token summarized 
see node reduction addition simplifying layout agent system decreases constant agent communication migration overhead performance improves light traffic conditions 
large numbers helmer wong slagell honavar miller token urgency type ftp bounce attack ftp bounce attack mon apr cdt ftp port retr mon apr cdt col mon apr cdt col mon apr cdt ftp port mon apr cdt tcp luke cs iastate edu ftp monitor ftp port requested ftp port ok mon apr cdt tcp luke cs iastate edu ftp monitor ftp port succeeded ftp retr mon apr cdt tcp luke cs iastate edu ftp monitor ftp retr requested ftp retr ok mon apr cdt tcp luke cs iastate edu ftp monitor ftp retr succeeded rsh port mon apr cdt tcp judge cs iastate edu tcp monitor rsh connection ftp token urgency type ftp bounce attack ftp bounce attack mon apr cdt ftp port retr mon apr cdt col mon apr cdt col mon apr cdt ftp port mon apr cdt tcp luke cs iastate edu ftp monitor ftp port requested ftp port ok mon apr cdt tcp luke cs iastate edu ftp monitor ftp port succeeded ftp retr mon apr cdt tcp luke cs iastate edu ftp monitor ftp retr requested ftp retr ok mon apr cdt tcp luke cs iastate edu ftp monitor ftp retr succeeded rsh port mon apr cdt tcp judge cs iastate edu tcp monitor rsh connection ftp alert tokens test node reduction low traffic attack high traffic attack node reduction node reduction detection times seconds figures tokens accumulate short period time complex transitions perform poorly performance suffers :10.1.1.30.1586:10.1.1.50.2488:10.1.1.39.640:10.1.1.158.5704
performance analysis means exhaustive gives general indication effect node reduction 
intrusion scenarios ftp bounce attack example demonstrates development stages intrusion detection system specification intrusion design implementation intrusion detection agents final result process actual detection attack 
addition intrusion tested attack scenarios wired wireless settings 
brevity include descriptions scenarios 
pattern log file agent checks previously scanned ports signature 
match events correlated 
worm detected agent raises alert level status prints alert correlated events screen host 
related models early intrusion detection approaches proposing detection intrusions anomalous user behavior introduced anderson denning 
substantial amount research attention directed intrusion detection area anderson porras bowen tate :10.1.1.26.6055
intrusion detection techniques misuse detection approach widely employed detection known attack patterns shown potential recognizing unknown intrusions porras 
past decades number misuse techniques proposed 
methods rule expert systems garvey lunt attack graph approaches kumar kumar staniford chen lin :10.1.1.158.5704
works focused languages specifying attack signatures michel state transition analysis anomalous system behavior example system stat approach graphically models intrusions transitions state machine :10.1.1.17.9158
related models early intrusion detection approaches proposing detection intrusions anomalous user behavior introduced anderson denning 
substantial amount research attention directed intrusion detection area anderson porras bowen tate :10.1.1.26.6055
intrusion detection techniques misuse detection approach widely employed detection known attack patterns shown potential recognizing unknown intrusions porras 
past decades number misuse techniques proposed 
methods rule expert systems garvey lunt attack graph approaches kumar kumar staniford chen lin :10.1.1.158.5704
works focused languages specifying attack signatures michel state transition analysis anomalous system behavior example system stat approach graphically models intrusions transitions state machine :10.1.1.17.9158
state state machine represents snapshot monitored system set assertions design implementation agent intrusion detection systems elements system 
transition shows actions move system closer compromised state 
stat considered high level specification respect compares sft approach modeling intrusions 
substantial amount research attention directed intrusion detection area anderson porras bowen tate :10.1.1.26.6055
intrusion detection techniques misuse detection approach widely employed detection known attack patterns shown potential recognizing unknown intrusions porras 
past decades number misuse techniques proposed 
methods rule expert systems garvey lunt attack graph approaches kumar kumar staniford chen lin :10.1.1.158.5704
works focused languages specifying attack signatures michel state transition analysis anomalous system behavior example system stat approach graphically models intrusions transitions state machine :10.1.1.17.9158
state state machine represents snapshot monitored system set assertions design implementation agent intrusion detection systems elements system 
transition shows actions move system closer compromised state 
stat considered high level specification respect compares sft approach modeling intrusions 
detailed representation stat state machine design ids executed ids respect corresponds cpns agents system 
complicates cpn model adding system designer specify token lifetimes part sft 
furthermore helmer wong slagell honavar miller development algorithm token garbage collection explored address underlying issue token lifetime management 
augmented sft cpns model misuse intrusion detection 
ongoing investigating application techniques anomaly intrusion detection 
steps modeling rules learned data mining algorithm anomaly intrusion detection cpns helmer :10.1.1.50.2488
created algorithm transform learned rules cpn 
required develop augmented sft describes data mining technique techniques anomaly detection leads cpn model anomaly detection 
professor lutz contributions section 
allen ferguson 
