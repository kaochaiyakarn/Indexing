making views self maintainable data warehousing dallan quass ashish gupta inderpal singh mumick jennifer widom computer science dept ibm almaden research computer science dept stanford university harry road mountain avenue stanford university stanford ca san jose ca murray hill nj stanford ca quass cs stanford edu cs stanford edu mumick research att com widom cs stanford edu data warehouse stores materialized views data sources order provide fast access integrated data regardless availability data sources 
warehouse views need maintained changes base data sources 
simple views maintaining warehouse view requires access data available view 
maintain view query data sources store auxiliary data warehouse 
show key referential integrity constraints maintain select project join view going data sources replicating base relations entirety warehouse 
derive set auxiliary views warehouse view auxiliary views self maintainable maintained going data sources replicating base data 
maintain view query data sources store auxiliary data warehouse 
show key referential integrity constraints maintain select project join view going data sources replicating base relations entirety warehouse 
derive set auxiliary views warehouse view auxiliary views self maintainable maintained going data sources replicating base data 
addition technique applied simplify traditional materialized view maintenance exploiting key referential integrity constraints 
problem materialized view maintenance received increasing attention particularly due application data warehousing :10.1.1.40.2254:10.1.1.19.5246
view derived relation de ned terms base relations 
view said materialized stored database computed base relations response queries 
materialized view maintenance problem problem keeping contents stored view consistent contents base relations base relations modi ed 
data warehouses store materialized views order provide fast access information integrated distributed data sources 
data sources may heterogeneous remote warehouse 
consequently problem maintaining materialized view data warehouse di ers traditional view maintenance problem view base data stored database 
particular changes reported data supported rome laboratories air force contract equipment digital ibm corporations 
source may necessary access base data data sources order maintain view 
view involving join maintaining view base relations change may require accessing base data incremental view maintenance techniques :10.1.1.91.5064
example view insertion relation reported usually necessary query order discover tuples join insertion warehousing scenario accessing base data means querying data sources replicating base relations warehouse 
problems associated querying data sources sources may periodically unavailable may expensive time consuming query inconsistencies result warehouse care taken avoid special maintenance algorithms 
problems associated replicating base relations warehouse additional storage maintenance costs incurred 
show views including views joins key referential integrity constraints necessary replicate base relations entirety warehouse order maintain view 
say selection conditions involving attributes single relation local conditions join conditions 
attributes appearing nal projection preserved view 
order keep materialized view date changes base relations propagated view 
view maintenance expression calculates ects view certain type change insertions deletions updates base relation 
di erential algorithm derive view maintenance expressions :10.1.1.91.5064
example view maintenance expression calculating ect insertions vr vr represents tuples insert result 
data warehousing environments updates certain base relations may occur may change values certain attributes de ne base relation having types updates depending attributes view de nition updates may change values attributes involved selection conditions local join view say exposed updates 
updates change values attributes involved selection conditions values preserved attributes attributes included nal projection say protected updates 
updates change values attributes involved selection conditions values preserved attributes say updates 
assuming second class updates relatively small updates second class propagated issuing queries back data sources 
propagating insertions relations 
maintenance expressions form table propagate view insertions base relation time 
propagate insertions multiple base relations formulas table calculated assume insertions base relations rj applied base relations 
maintenance expressions propagating changes base relations :10.1.1.91.5064
consider relation time case maintenance expressions easier explain amount data needed auxiliary views insertions deletions updates propagated relation time see 
deletions section show ect view deletions base relations calculated auxiliary views 
view maintenance expression calculating ects spj view deletions base relation obtained similarly expression calculating ects insertions substitute deletions base relation relational algebra expression example view maintenance expressions calculating ects cal toy sales view deletions store sale line item appear respectively vl vi table 
notation vr represent deletions view due deletions base relation simplify maintenance expressions deletions contents view keys schema store id manager state ca st store id sale id store id month year sa sale id item id item id item name category toy schema store id manager state ca st store id sale id store id month year sa sale id item id item id item name category toy vl schema store id manager state ca st store id sale id store id month year sa sale id item id item id item name category toy vi schema store id manager state ca st store id sale id store id month year sa sale id item id item id item name category toy table maintenance expressions deletions preserved view 
property deletion property keys view schema rn key relation ri preserved equivalence holds schema ri ri ri rn schema key ri ri consider join graph view property says preserves key relation ri ri calculate ect deletions ri joining ri key ri 
property holds tuple value key ri tuple ri derived conversely tuples derived tuple ri value key ri 
set tuples join key ri exactly set tuples deleted deleted ri 
similar property holds key ri preserved equated selection condition attribute preserved case ect deletions ri obtained joining ri join condition key ri 
property determine view self maintainable respect deletions base relation :10.1.1.40.352
extend result property 
property deletion property key joins view schema rn satisfying conditions 
contains join conditions ri ri ri ri ri ri 
attribute key ri 
view contains join conditions ri ri ri ri ri ri 
attribute key ri 
ri preserved equivalences hold referential integrity constraints schema ri old ri ri rn old ri ri ri ri ri ri ri ri ri schema ri new ri ri rn new ri ri ri ri ri ri ri ri ri properties similar corresponding properties deletions 
attributes ri involved selection conditions guaranteed updated matter test old new value selection conditions 
property determine view self maintainable base relation updates :10.1.1.40.352
consider join graph view property generalizes property property says preserves key relation ri ri joins ri keys ri fri ri kg include base relations calculate ect protected updates ri joining ri sequence relations ri joining ri deletions similar property holds key ri preserved equated selection condition attribute preserved case ect updates ri obtained joining ri join condition key ri 
rule protected update rule view tree structured join graph ri fri ri kg 
maintenance expressions calculating ect view protected updates base relation ri simpli ed property ri includes base relations ri 
similar rule deletions rule simplify maintenance expressions vr vr contents view fewer base relations maintenance expressions rewritten terms auxiliary views 
information needed maintain original view su cient maintain auxiliary views 
related problem view self maintainability considered initially 
modi cation type insertions deletions updates identify subclasses spj views maintained view modi cation 
states necessary su cient conditions view de nition view self maintainable updates speci ed particular sql modi cation statement delete tuples 
uses information key attributes determine self maintainability view respect modi cations certain type :10.1.1.40.352
consider problem making view self maintainable materializing set auxiliary views original view auxiliary views taken self maintainable 
set base relations view de ned forms set auxiliary views approach derive auxiliary views smaller storing base relations entirety 
identifying set small auxiliary views view self maintainable important problem data warehousing base relations may readily available 
views self maintainable pushing selections projections base relations storing results warehouse 
colby gri libkin mumick 
algorithms deferred view maintenance 
sigmod 
ieee data engineering bulletin special issue materialized views data warehousing june 
gupta jagadish mumick :10.1.1.40.352
data integration self maintainable views 
edbt 
gri libkin :10.1.1.91.5064
incremental maintenance views duplicates 
ieee data engineering bulletin special issue materialized views data warehousing june 
gupta jagadish mumick :10.1.1.40.352
data integration self maintainable views 
edbt 
gri libkin :10.1.1.91.5064
incremental maintenance views duplicates 
sigmod 
gupta mumick 
maintenance materialized views problems techniques applications 
