appear proc 
th national conf 
ai aaai providence august structured solution methods non markovian decision processes fahiem bacchus dept computer science university waterloo waterloo ontario canada logos uwaterloo ca craig boutilier dept computer science university british columbia vancouver canada cs ubc ca adam grove nec research institute independence way princeton nj usa grove research nj nec com markov decision processes mdps currently popular method modeling solving decision theoretic planning problems limited markovian assumption rewards dynamics depend current state previous history 
non markovian decision processes defined tractable solution techniques developed mdp directly applied 
show temporal logic specify history dependence automatically converted equivalent mdp adding appropriate temporal variables 
resulting mdp represented structured fashion solved structured policy construction methods 
cases offers significant computational previous proposals solving 
markov decision processes mdps proven effective modeling computational paradigm decisiontheoretic planning dtp 
mdps allow deal planning problems involve uncertainty multiple objectives nonterminating process oriented behavior 
fundamental assumption model reward function system dynamics underlying process markovian information needed determine value particular state effects action state encoded state 
allows computationally effective dynamic programming techniques solve decision problems put 
markovian requirement met planning problems encoded obvious way 
instance natural specify desirable behaviors referring trajectory properties properties sequence states passed system history addition just current state 
shown planning hh kab gk maintenance goals bbg argued reward functions process oriented prob fahiem bacchus craig boutilier supported canadian government nserc iris programs 
copyright american association artificial intelligence www aaai org 
rights reserved 
lems appropriately viewed light responses requests maintaining desirable systems properties 
instance rewarding agent achieving goal request issued natural history dependent specification desirable behavior 
similarly process dynamics action effects naturally expressed history dependent fashion 
bbg examined non markovian decision processes identified key issues specification non temporal logic called pltl mechanism specifying non markovian aspects system adopt approach 
propose different way solving specified 
earlier develop method automatically equivalent mdp solutions re interpreted yield solutions original 
key difference papers bbg presents state construction works structured representations mdps 
approach advantages disadvantages 
case think state original leading multiple states resulting mdp new states distinguished various relevant histories 
difference essence new mdp represented 
algorithm bbg takes reward function specified pltl formulas produces new mdp states listed explicitly 
advantage approach true proposal current possible produce minimal expanded mdp fewest number states necessary capture required historical distinctions 
discuss important disadvantages inherent state constructions 
understand disadvantages note dtp problems described terms set variables propositions particularly ai logical representations common 
resultant mdps states possible assignments values variables 
cases major difficulty state algorithm mdps bbg considered non markovian reward functions approach easily extended deal history dependence system dynamics 
consider rewards dynamics explicitly 
appear proc 
th national conf 
ai aaai providence august fact state space grows exponentially number problem variables 
focus dtp research development mdp representation solution techniques require explicit enumeration state space 
instance strips bd df bayes nets bdg bd represent actions mdps structured policy construction spc methods exploit representations df bdg bd avoid explicit state computations solving mdps promise mdps effective dtp problems 
problems conversion algorithm proposed bbg obvious drawbacks 
state complexity exponential number problem variables original compact representation terms variables final mdp 
second mdp output algorithm represented set states structure original structured lost obscured preventing spc algorithms 
see history encoded exhibits significant structure exploited bbg 
approach conversion assumes existence compact variable description works adding temporal variables description 
expand state space regard minimality expansion implicit enumerate states 
conversion efficient retains structured compact representation started 
output structured mdp directly spc algorithms 
consideration interesting fortunate consequence 
state approach proposal produce mdp implicit state space minimal compensate exploit fact spc algorithms ability automatically dynamically detect relevance particular variables various points policy construction 
bbg need directly concerned adding relevant history 
significant extent relevance detected optimization appropriate spc algorithms 
points related advantage technique relevant history dynamically determined spc algorithms 
algorithm bbg static analysis optimal policy construction attempted 
algorithm encode history determine reward reachable statet 
ensures policy just optimal total reward constructed mdp original 
fact generally interested optimal policy 
construct policy may notice priori reachable reachable non zero probability sequence actions fact reachable optimal policy adopted 
consequently history added order determine reward statet may irrelevant 
algorithm conjunction spc algorithms optimization implements dynamic analysis 
determined reachable policy construction history relevant tot related states ignored 
state space larger relevant distinctions part considered 
conjecture dynamic irrelevance especially arise circumstances involving temporally dependent rewards 
example temporally extended reward function may associate reward delivering item time stages order placed 
certain conditions weather risk associated attempt delivery may great undertaking 
policy construction recognized history relevant determining goal achieved keeping track past order placed ignored states 
irrelevance required history detected priori 
final contrast bbg relative simplicity proposal current wellknown properties temporal logic observation integrate spc 
technical aspects contribution straightforward considerable potential improving ability solve history dependent decision problems 
brief description mdps temporal logic bbg specify trajectory properties 
give overview spc algorithm bdg 
technique adding temporal variables convert mdp 
close observations 
background markov decision processes markov decision process put characterized finite set set actions reward 
actions characterized probability distributions denote thats reached action ais performed states 
full observability entails agent knows state 
real valued reward objectives tasks goals accomplished agent denoting immediate utility states 
mdp consists ofs rand set transition ja xt spr ifv sg 
stationary markovian policy mapping denotes action agent perform states 
adopt expected total discounted reward infinite horizon optimality criterion current value rewards discounted factor maximize expected accumulated discounted rewards infinite time period 
expected value fixed policy shown satisfy value computed solving system linear equations 
policy optimal alls sand policies vis called value appear proc 
th national conf 
ai aaai providence august function 
refer put excellent treatment mdps associated computational methods 
see dw bd bdg mdps dtp 
structured representations dtp problems interested mdps represented concisely terms set features variables 
adapt bayes net decision tree representation dk bdg representing mdp set variables reward decision tree set set action decision ja pg 
set implicitly specifies state spaces 
simplicity assume variables take values true false consequently identify boolean proposition 
state space sis set possible variables sis product space variable domains 
number states exponential number variables case 
rest representation relies decision trees internal nodes tests individual variables leaves trees labeled different types values depending type tree 
trees say tree applied states yield value tree 
value computed traversing tree truth assignments specified determine direction taken internal nodes 
value returned label leaf node reached 
tree label leaf associated unique branch tree variable labels consistent values ins 
decision tree specifies immediate reward state ins 
particular leaves labeled real values assigned 
set action trees determine transition probabilities 
trees leaves labeled real numbers 
tree specifies probability true state executed states 
determine probability true state tree 
events assumed independent obtain entire distribution successor simply probabilities bdg describes representation terms pr ptree tree states pr bayes nets equivalent including independence assumption 
advantage bayes net representation suggests easy way relaxing assumption 
possibility explored bdg see bou details 
spc algorithms modified deal dependence variables somewhat complex 
modifications entirely compatible proposals 
particular structured policy construction basic idea spc algorithms described bdg bd tree structured representations policy construction 
particular policy represented decision tree tree leaves labeled actions 
tree specifies action execute states 
similarly value represented tree real valued labels 
spc algorithm observation traditional algorithms constructing optimal policies reformulated tree manipulation algorithms 
particular points algorithm current value function current policy represented trees 
intuitively algorithms dynamically detect relevance particular variables specific conditions current value function policy 
particular tree manipulation steps necessary trivial details directly relevant bdg 
alluded spc properties 
dynamics reward function mdp simple optimal policy simple structure see bdg examples 
spc find policy just iterations modified policy iteration popular time efficient algorithm considering large trees implicitly optimizing exponentially states 
variables relevant relevant contexts necessarily adverse effect complexity cases just appear decision nodes trees needed 
note spc offers advantage amenability approximation see bd 
non markovian decision processes bbg temporal logic called pltl past linear temporal logic specify history dependence rewards action effects 
pltl past version ltl eme 
assume underlying finite set propositional usual truth functional connectives temporal operators past past previously formulas formed semantics pltl described respect models forp hs sni state truth assignment variables inp 
hs sni lett denote initial hs sii 
temporal formula true oft hs true current state respect history reflected trajectory 
define truth formulas inductively follows tj backward analogs ltl operators eventually respectively 
modality stand disjunction ofi ik 
tj tj appear proc 
th national conf 
ai aaai providence august tk decision trees ofn 
follows state contain information decide true 
reason add temporal variables state description provide sufficient history information tj iff determined 
added set temporal variables 
alli jn true variables associated formula pltl past true treat variables formulas 
tj iff true point past definition set temporal variables sufficient iff boolean tj iff 
point past words sufficient truth de tj andt true subset elements previous state knowledge certain state variables 
formula pltl example wanted reward behaviors boolean purely temporal formulas achieve requested byt tk finding sufficient set temporal formulas specify reward function re trivial simply strip main boolean connectives wards states satisfying pltl simi temporal formula purely temporal rewarding states reward las remain temporal variable 
behaviors request 
bbg set temporal variables turns gives examples logic spec suitable sufficiency requirement ify useful historical dependencies 
logic mak set variables needed build suitable mdp 
ing specifications provides usual advantages temporal variables choose incorporated gained logical representations 
particular new able determine dynam compositional language express arbitrarily ics new variables 
just trees complex specifications time precise tree specifying dynamics state semantics specification matter complex 
able construct trees tree tell proposal pltl formulas tree update temporal 
furthermore structured representational framework section dynamics markovian 
straightforward 
recall represented reward func definition set temporal variables dynamically tion dynamics decision trees tests closed iff boolean value individual variables 
simply extend 
allowing internal node decision tree test value arbitrary pltl formula 
way re dynamic closure truth variable wards dynamics depend history repre state determined values variables sent history dependence specified previous state 
dynamic closure en pltl structured 
sures update temporal variables satisfying markov assumption 
temporal variables dynamically closed defined 
boolean formula evaluated structured described decision internal nodes values want find equivalent structured variables leaves labeled spc algorithm find optimal policies 
dynamics temporal easy define introduce temporal variables domain re set tree bet wheret tis fer relevant properties current trajectory 
tem tree exactly variable track truth purely tempo resp resp truth values ral formula pltl formula main connective translated probabilities 
temporal 
temporal variables boolean 
note dynamics temporal variables independent action executed 
furthermore deter conditions temporal variable sets tree ensures independence assump new state contain sufficient action effects section remain valid 
mation determine rewards dynamics shown augment set variables able refer history explicitly 
consider dynamically closed set temporal variables temporal formula appearing decision node define dynamics just discussed resulting intuitively equivalence implies optimal policy constructed mdp re interpreted optimal policy original 
see bbg formal definition 
general trees evaluate arbitrary tree chosen 
may compact lead greater efficiency 
appear proc 
th national conf 
ai aaai providence august equivalent original exception vious values variables added variables dynamics temporal variables construct set temporal variables markovian 
important feature main connective truth construction way formula depends past 
fact defined dynamics valid trajectory tempo show define prepending subformula ral variables faithfully reflect intended mean ing 
precisely consider trajectory state retained change 
space new mdp 
variables defining state space value 
logical formula ask formula tis true false trajectory followed 
construction ensures show sufficiency equivalences variable tis true state iff corresponding pltl allow insert preceding operators true trajectory followed assuming variables modal operator correct values time initial state 
words variable value coincides truth 

suppose dynamically closed sufficient temporal formula appears decision node ei ther tree inn concreteness 


imagine appears 
sufficiency implies replace test test values consider course boolean combina bas defined definition 
fact find ft ps ps primitive propositions purely temporal tree substitute tree formulas pltl 
temporal subformulas internal nodes test doing expression replace result different tree evaluating rewards case equivalent expressions 
tree dynamics semantically equivalent replacement ps process may need repeated times original tests variables eventually ps ps terminate giving boolean combina enlarged set variables removed tests equivalent required 
note pend explicitly history construction delivered construction allows represent subformula equivalent ton required 
course key boolean correctness construction faithfulness property 
construction temporal variable sets remains show suitable set exists ps combination dynamic closure shown simply 

definition subformula just seen equivalent boolean combination required dynamic closure 
words illustration consider ps 
set pltl formulas construct dy form temporal variable set closed set temporal variables sufficient 
define subformula pltl formula formed pltl formula contained substring decomposed follows example subformulas proposal consider set purely temporal subformulas denoted 
subformulas ensures sufficiency simply boolean combination propositional symbols purely temporal subformulas 
fact need subformulas needed sufficiency cared 
concluding observations problem satisfy dynamic closure property 
instance truth shown structured consisting depends happened past reward action representations involving pltl formulas pis true 
recall semantics construct set temporal variables informally true past cally closed sufficient formulas including case truth note principle dependence vari known 
representation ables retain original formulation reasons requires variable value determined pre discussed section 
ps appear proc 
th national conf 
ai aaai providence august specify equivalent mdp compact form 
conclude observations proposal directions 
note new mdp constructed efficiently 
collection pltl formulas appearing specification 
easy see number temporal variables added equal number purely temporal subformulas contained bounded total number temporal operators adding modest number new variables 
time required iso total size reward action trees sum lengths formulas course keep mind implicit state space grows exponentially number added variables 
discussed sections size implicit state space necessarily key factor complexity spc algorithms 
claim construction adds minimal number extra variables achieve purpose 
fact easy see minimal state space size achievable adding variables 
reason required history vary state state fact motivates bbg 
approach fine distinctions state set variables added 
hand dynamic irrelevance feature spc may compensate 
temporal variables potentially cause unnecessary distinctions histories certain states compared bbg spc attempts focus variables values influence choices optimal policy avoid irrelevant distinctions 
furthermore spc avoid dynamic detected approach bbg amenable approximation solution resulting mdp 
empirical studies course needed quantify tradeoff 
suspect range domains spc approach suggesting superior state space approach bbg vice versa 
interesting question attempt characterize domain features tend favor approach 
surprisingly structured framework considering harder solve comparably sized mdp 
simple example suppose gets reward true 
suppose taken lead true unpredictable time 
optimal policy need keep track exactly true know try 
may sub exponential inn decision tree representation policy 
spc guaranteed efficient 
omitted discussion various optimizations possible 
instance gain carefully choosing decision tree section 
issues deserve careful study 
importantly need empirical studies explore actual performance seen practical cases 
bbg fahiem bacchus craig boutilier adam grove 
rewarding behaviors 
proceedings thirteenth national conferenceon artificial intelligence pages portland 
bd craig boutilier richard dearden 
abstractions decision theoretic planning time constraints 
proceedings twelfth national conferenceon artificial intelligence pages seattle 
bd craig boutilier richard dearden 
approximating value trees structured dynamic programming 
proceedings thirteenth machine learning pages bari italy 
bdg craig boutilier richard dearden goldszmidt 
exploiting structure policy construction 
proceedings fourteenth international joint conference artificial intelligence pages montreal 
bou craig boutilier 
correlated action effects decisiontheoretic regression 
manuscript 
df thomas dietterich nicholas flann 
learning reinforcement learning unified approach 
proceedings twelfth international conference machine learning pages lake tahoe 
dk thomas dean kanazawa 
model reasoning persistence causation 
computational intelligence 
drummond 
situated control rules 
proceedings international conference principles knowledge representation reasoning pages toronto 
dw thomas dean michael wellman 
planning control 
morgan kaufmann san mateo 
eme emerson 
temporal modal logic 
van leeuwen editor handbook theoretical computer science volume chapter pages 
mit 
gk godefroid kabanza 
efficient reactive planner synthesizing reactive plans 
proceedings ninth national conference artificial intelligence pages 
hh peter haddawy steve hanks 
representations decision theoretic planning utility functions deadline goals 
proceedings third international conference principles knowledge representation reasoning pages cambridge 
ronald howard 
dynamic programming markov processes 
mit press cambridge 
kab kabanza 
synthesis reactive plans multi path environments 
proceedings eighth national conference artificial intelligence pages 
nicholas kushmerick steve hanks daniel weld 
algorithm probabilistic commitment planning 
proceedings twelfth national conference artificial intelligence pages seattle 
put martin puterman 
markov decision processes discrete stochastic dynamic programming 
wiley new york 
