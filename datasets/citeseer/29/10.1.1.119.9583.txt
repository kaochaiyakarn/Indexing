reasoning conceptual schemas queries temporal databases alessandro artale enrico franconi frank wolter michael zakharyaschev dept computation umist manchester uk artale umist ac uk dept computer science univ manchester uk franconi cs man ac uk univ yu cg ac yu inst 
ur informatik univ leipzig wolter informatik uni leipzig de dept computer science kings college london uk mz dcs ac uk 
introduces new logical formalism intended temporal conceptual modelling natural combination known description logic dlr point linear 
expressive power resulting dlrus logic illustrated ing systematic formalisation important temporal entity relationship data models appeared literature 
define query language queries non recursive datalog programs complex dlrus expressions investigate problem checking query constraints defined dlrus conceptual schemas problems schema sat logical implication 
shown reasoning full dlrus undecidable identify decidable sense maximal fragment dlr gamma allowing applications formulas entities relation expressions 
expressive power resulting dlrus logic illustrated ing systematic formalisation important temporal entity relationship data models appeared literature 
define query language queries non recursive datalog programs complex dlrus expressions investigate problem checking query constraints defined dlrus conceptual schemas problems schema sat logical implication 
shown reasoning full dlrus undecidable identify decidable sense maximal fragment dlr gamma allowing applications formulas entities relation expressions 
obtain hierarchy complexity results reasoning dlr gamma atomic formulas exptime complete satisfiability logical implication arbitrary dlr gamma formulas expspace complete checking query containment non recursive datalog queries dlr gamma constraints exptime 
temporal databases databases store historical information past potential data :10.1.1.119.3053:10.1.1.41.6253
proposed temporal databases order temporal logic :10.1.1.53.41
useful characterising semantical problems arising temporal databases say conceptual modelling querying usually computationally unfeasible performing deduction tasks example logical implication order temporal logic flow time hz hn recursively enumerable 
please note interested deduction model checking 
obvious solution problem look fragments order temporal logic see way successful idea deviate order paradigm start computationally friendly languages description logics area non temporal databases characterise uniform framework conceptual modelling queries :10.1.1.25.3065:10.1.1.53.41
define query language queries non recursive datalog programs complex dlrus expressions investigate problem checking query constraints defined dlrus conceptual schemas problems schema sat logical implication 
shown reasoning full dlrus undecidable identify decidable sense maximal fragment dlr gamma allowing applications formulas entities relation expressions 
obtain hierarchy complexity results reasoning dlr gamma atomic formulas exptime complete satisfiability logical implication arbitrary dlr gamma formulas expspace complete checking query containment non recursive datalog queries dlr gamma constraints exptime 
temporal databases databases store historical information past potential data :10.1.1.119.3053:10.1.1.41.6253
proposed temporal databases order temporal logic :10.1.1.53.41
useful characterising semantical problems arising temporal databases say conceptual modelling querying usually computationally unfeasible performing deduction tasks example logical implication order temporal logic flow time hz hn recursively enumerable 
please note interested deduction model checking 
obvious solution problem look fragments order temporal logic see way successful idea deviate order paradigm start computationally friendly languages description logics area non temporal databases characterise uniform framework conceptual modelling queries :10.1.1.25.3065:10.1.1.53.41
temporal description logic dlrus design expressive decidable description logic dlr allows logical reconstruction extension representational promising approach know :10.1.1.41.6253:10.1.1.1.2497
temporal databases databases store historical information past potential data :10.1.1.119.3053:10.1.1.41.6253
proposed temporal databases order temporal logic :10.1.1.53.41
useful characterising semantical problems arising temporal databases say conceptual modelling querying usually computationally unfeasible performing deduction tasks example logical implication order temporal logic flow time hz hn recursively enumerable 
please note interested deduction model checking 
obvious solution problem look fragments order temporal logic see way successful idea deviate order paradigm start computationally friendly languages description logics area non temporal databases characterise uniform framework conceptual modelling queries :10.1.1.25.3065:10.1.1.53.41
temporal description logic dlrus design expressive decidable description logic dlr allows logical reconstruction extension representational promising approach know :10.1.1.41.6253:10.1.1.1.2497
tools object oriented data models class diagrams uml odmg semantic data models extended entity relationship eer orm frame ontology languages okbc oil semantic networks 
setting interesting feature dlr ability completely define entities relations dlr views entities relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies :10.1.1.25.3065
proposed temporal databases order temporal logic :10.1.1.53.41
useful characterising semantical problems arising temporal databases say conceptual modelling querying usually computationally unfeasible performing deduction tasks example logical implication order temporal logic flow time hz hn recursively enumerable 
please note interested deduction model checking 
obvious solution problem look fragments order temporal logic see way successful idea deviate order paradigm start computationally friendly languages description logics area non temporal databases characterise uniform framework conceptual modelling queries :10.1.1.25.3065:10.1.1.53.41
temporal description logic dlrus design expressive decidable description logic dlr allows logical reconstruction extension representational promising approach know :10.1.1.41.6253:10.1.1.1.2497
tools object oriented data models class diagrams uml odmg semantic data models extended entity relationship eer orm frame ontology languages okbc oil semantic networks 
setting interesting feature dlr ability completely define entities relations dlr views entities relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies :10.1.1.25.3065
logical implication dlr exptime complete practical correct complete algorithms exist implemented systems real applications :10.1.1.26.5669:10.1.1.25.3065
obvious solution problem look fragments order temporal logic see way successful idea deviate order paradigm start computationally friendly languages description logics area non temporal databases characterise uniform framework conceptual modelling queries :10.1.1.25.3065:10.1.1.53.41
temporal description logic dlrus design expressive decidable description logic dlr allows logical reconstruction extension representational promising approach know :10.1.1.41.6253:10.1.1.1.2497
tools object oriented data models class diagrams uml odmg semantic data models extended entity relationship eer orm frame ontology languages okbc oil semantic networks 
setting interesting feature dlr ability completely define entities relations dlr views entities relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies :10.1.1.25.3065
logical implication dlr exptime complete practical correct complete algorithms exist implemented systems real applications :10.1.1.26.5669:10.1.1.25.3065
dlr powerful language conceptual data modelling 
problem view query processing dlr constraints studied :10.1.1.25.3065
view query answering requires answer query virtual database constrained dlr theory playing role conceptual schema integrity constraints information comes set materialised views database problem non recursive datalog queries views npcomplete problem data complexity closed world assumption 
temporal description logic dlrus design expressive decidable description logic dlr allows logical reconstruction extension representational promising approach know :10.1.1.41.6253:10.1.1.1.2497
tools object oriented data models class diagrams uml odmg semantic data models extended entity relationship eer orm frame ontology languages okbc oil semantic networks 
setting interesting feature dlr ability completely define entities relations dlr views entities relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies :10.1.1.25.3065
logical implication dlr exptime complete practical correct complete algorithms exist implemented systems real applications :10.1.1.26.5669:10.1.1.25.3065
dlr powerful language conceptual data modelling 
problem view query processing dlr constraints studied :10.1.1.25.3065
view query answering requires answer query virtual database constrained dlr theory playing role conceptual schema integrity constraints information comes set materialised views database problem non recursive datalog queries views npcomplete problem data complexity closed world assumption 
checking query containment non recursive datalog queries dlr constraints decidable exptime 
setting interesting feature dlr ability completely define entities relations dlr views entities relations conceptual schema 
dlr formulas express large class integrity constraints typical databases instance existence dependencies exclusion dependencies typed inclusion dependencies projection relations unary inclusion dependencies full key dependencies :10.1.1.25.3065
logical implication dlr exptime complete practical correct complete algorithms exist implemented systems real applications :10.1.1.26.5669:10.1.1.25.3065
dlr powerful language conceptual data modelling 
problem view query processing dlr constraints studied :10.1.1.25.3065
view query answering requires answer query virtual database constrained dlr theory playing role conceptual schema integrity constraints information comes set materialised views database problem non recursive datalog queries views npcomplete problem data complexity closed world assumption 
checking query containment non recursive datalog queries dlr constraints decidable exptime 
nice features dlr natural try extend temporal dimension understand expressive power resulting hybrid respect needs temporal conceptual modelling view query processing investigate computational properties 
reports results attempt 
checking query containment non recursive datalog queries dlr constraints decidable exptime 
nice features dlr natural try extend temporal dimension understand expressive power resulting hybrid respect needs temporal conceptual modelling view query processing investigate computational properties 
reports results attempt 
construct dlrus organic combination dlr propositional linear temporal logic usually serves temporal component order approach allowing applications temporal operators syntactical terms dlr entities relations schemas 
previous approaches temporal description logics considered weaker languages tradition description logics having binary relations roles :10.1.1.170.2038
alc fragment tableau algorithm studied 
survey various approaches temporal description logics see 
illustrate expressive power dlrus provide formal semantic characterisation means dlrus theories important temporal conceptual modelling constructs valid time representation appeared literature entity relationship data model :10.1.1.1.2497:10.1.1.94.413
best knowledge systematic formalisation constructs majority temporal conceptual modelling systems 
construct dlrus organic combination dlr propositional linear temporal logic usually serves temporal component order approach allowing applications temporal operators syntactical terms dlr entities relations schemas 
previous approaches temporal description logics considered weaker languages tradition description logics having binary relations roles :10.1.1.170.2038
alc fragment tableau algorithm studied 
survey various approaches temporal description logics see 
illustrate expressive power dlrus provide formal semantic characterisation means dlrus theories important temporal conceptual modelling constructs valid time representation appeared literature entity relationship data model :10.1.1.1.2497:10.1.1.94.413
best knowledge systematic formalisation constructs majority temporal conceptual modelling systems 
outcome elegant correspondence temporal constructs sets dlrus formulas 
temporal integrity constraints captured additional dlrus formulas 
investigate computational properties reasoning dlrus analysing schema entity relation satisfiability logical implication query containment non recursive datalog queries constraints imposed dlrus conceptual schemas 
temporal integrity constraints captured additional dlrus formulas 
investigate computational properties reasoning dlrus analysing schema entity relation satisfiability logical implication query containment non recursive datalog queries constraints imposed dlrus conceptual schemas 
full dlrus turns undecidable 
main reason possibility postulate binary relation vary time small fragment dlr say basic description logic alc encode undecidable tiling problem cf 
:10.1.1.41.6253:10.1.1.36.9561
fragment dlr gamma dlrus de ability talk temporal persistence ary relations expressive illustrated examples computational behaviour better 
obtain hierarchy complexity results reasoning dlr gamma atomic formulas exptime rn gamma gamma phi psi 
en gamma gamma phi psi delta rn hd di hd hd 
hd hd hd 
organised follows 
section introduces syntax semantics dlrus provides worked example 
section discusses expressivity dlrus temporal conceptual model 
section decidability complexity results proved satisfiability logical implication dlrus dlr gamma query containment problem 
temporal conceptual model adopt snapshot representation temporal databases temporal conceptual models see :10.1.1.53.41
flow time tp set time points chronons binary precedence relation tp assumed isomorphic hz temporal database regarded map time points standard relational databases domain attributes interpretation constants known snapshot model correspondence timestamp bitemporal conceptual data model bcdm 
temporal conceptual schemas language temporal database conceptual schemas natural combination propositional linear temporal logic non temporal description logic dlr :10.1.1.25.3065
resulting temporal description logic denoted dlrus 
basic syntactical types dlrus entities unary predicates known concepts ary relations arity 
section discusses expressivity dlrus temporal conceptual model 
section decidability complexity results proved satisfiability logical implication dlrus dlr gamma query containment problem 
temporal conceptual model adopt snapshot representation temporal databases temporal conceptual models see :10.1.1.53.41
flow time tp set time points chronons binary precedence relation tp assumed isomorphic hz temporal database regarded map time points standard relational databases domain attributes interpretation constants known snapshot model correspondence timestamp bitemporal conceptual data model bcdm 
temporal conceptual schemas language temporal database conceptual schemas natural combination propositional linear temporal logic non temporal description logic dlr :10.1.1.25.3065
resulting temporal description logic denoted dlrus 
basic syntactical types dlrus entities unary predicates known concepts ary relations arity 
starting set en atomic entities set rn atomic relations define inductively complex entity relation expressions shown upper part fig 
binary constructs applied relations arity natural numbers exceed arity temporal conceptual database schema knowledge base finite set sigma dlrus formulas 
section 
expressive capabilities dlrus temporal conceptual modelling databases illustrated section 
temporal queries important reasoning task known problem query containment see survey discussion temporal queries 
non recursive datalog query disjunction conjunctive queries spj queries dlrus schema sigma expression form gamma qj gamma gamma yj gamma cj qj conjunction atoms qj gamma gamma yj gamma cj gamma gamma gamma dlrus entity relation expressions gamma gamma gamma sequences distinguished variables existential variables constants respectively number agreement arity variables gamma head union distinguished variables qj existential variables query constants fixed values 
arity number variables gamma noted allow entities relations query occur conceptual schema sigma approach similar atoms query constrained means schema formulas :10.1.1.25.3065
semantics queries defined follows 
temporal model time point satisfies sigma sigma snapshot interpretation omega delta fe en fr rn ff regarded usual order structure snapshot non temporal database time conforming sense conceptual schema order temporal model constant domain delta values query constants specified 
evaluation query arity constraints sigma model moment set ans gamma delta gamma yj qj gamma gamma yj gamma cj queries arity sigma say contained constraints sigma write sigma temporal model time point ans ans sigma note query satisfiability problem query schema sigma determine sigma ans reducible query containment satisfiable iff sigma gamma gamma gamma dlrus relation arity example example consider conceptual schema sigma introduce shortcut global atomic formulas lambda lambda entities relations works lambda emp employee act project manages lambda man project employee lambda worker num integer salary amount integer lambda num worker employee lambda employee lambda manager lambda manager man manages project lambda act works manages employee emp works lambda manager lambda emp works qualified employee manager theory introduces works binary relation employees projects manages binary relation managers projects 
employees exactly pay slip number salary represented binary relations integer domain pay slip number uniquely identifies employee acts key 
employees working project exactly managers managers qualified passed period employees 
meaning conceptual schema exception formulas illustrated left part diagram fig 

conceptual schema sigma globally logically implies project employee manager top manager worked project managing possibly different project sigma lambda act works emp manager sigma lambda gamma emp works act project note add sigma formula employee lambda emp works saying employee project entities relations mentioned conceptual schema interpreted empty set model sigma satisfiable relative sigma consider problem query containment constraints constraints expressed exemplified schema sigma consider queries manages project resp department gamma works manages resp hard see queries equivalent constraints sigma sigma sigma 
conceptual modelling section show temporal description logic dlrus provide formal semantic characterisation important temporal conceptual modelling constructs valid time representation appeared literature :10.1.1.1.2497:10.1.1.94.413
characterisation allows define support forms reasoning temporal conceptual models temporal queries reasoning services dlrus 
implicit entity relationship model extended entity relationship eer model may viewed eer model assigns construct temporal interpretation provides explicit temporal constructs 
gregersen jensen call approach implicit temporal dimension hidden interpretation structure entities relationships time dependent 
non temporal fragment dlrus dlr capture eer model implicit time 
gregersen jensen call approach implicit temporal dimension hidden interpretation structure entities relationships time dependent 
non temporal fragment dlrus dlr capture eer model implicit time 
non temporal eer model encoding introduced establishes precise correspondence legal database states eer diagram models derived dlr theory 
eer standard entity relationship data model enriched isa links disjoint covering constraints full cardinality constraints 
encoding correct eer model implicit time shown dlr interpreted temporal semantics :10.1.1.24.2383
informally encoding follows 
entity relationship symbols eer diagram mapped dlr entity relation names 
domain symbols mapped additional entity names pairwise disjoint 
attributes entities mapped binary relations possibly number restrictions stating single attributes relationships mapped means additional arguments relation 
example knowledge base section axioms shows exact encoding left hand part temporally implicit eer diagram fig 
explicit temporal constructs implicit approach appealing temporal conceptual modelling explicit temporal constraint expressed 
ability add temporal constructs top temporally implicit model advantage preserving non temporal semantics conventional legacy eer schemas embedded temporal eer diagrams property called upward compatibility 
possibility capturing meanings legacy temporal eer diagrams crucial modelling data warehouses federated databases sources may collections temporal legacy databases 
furthermore formalisation propose agreement desirable orthogonality principle temporal constructs specified separately independently entities relationships attributes :10.1.1.119.3053:10.1.1.94.413
depending application requirements temporal support decided designer 
dlrus formulas encode explicit temporal constructs 
temporal entities relations entity relation instances temporal setting existence time associated 
formally function lifespan maps pairs objects entity expressions tuples objects relation expressions tp associates lifespan entities relation instances way lifespan ft tp lifespan hd ft tp hd dlrus formulas express timestamps enforcing entities relations forever call temporary entities temporary relations extension changes time call snapshot entities snapshot relations 
case dlrus semantics says lifespan entity value snapshot attribute changes 
meaning instance belongs snapshot entity value temporary attribute may change existence 
running example employee snapshot entity salary modelled temporary attribute modelled key snapshot attribute 
temporal cardinalities cardinality constraints limit participation entities relationships 
temporal setting distinguish snapshot participation constraints true point time lifespan participation constraints evaluated entire existence entity :10.1.1.119.3053:10.1.1.94.413
standard dlrus cardinality construct captures snapshot participation constraints lifespan participation constraints defined formula lambda lambda lifespan participation lifespan instance entity participate ith argument precisely tuples relation example want state managers manage different projects entire existence managers constrained managing exactly project time 
dlrus enforce form lifespan cardinality constraint respect past lambda gamma past lifespan participation lambda lifespan participation obviously snapshot relations set instances change time difference snapshot lifespan participation constraints respect snapshot relations 
dynamic entities dlrus model instances class may change time called object migration source target entity 
fact temporal conceptual modelling literature notions object migration considered evolution object ceases instance source entity extension object continues belong source 
flow time hz problem logical implication dlr gamma involving atomic formulas exptime complete formula satisfiability problem problem logical implication dlr gamma expspace complete query containment problem non recursive datalog queries dlr gamma constraints exptime expspace hard 
language capture modelling constructs discussed section fact case global logical implication atomic formulas difference lambda exception global entity consistency schema evolution constraints snapshot relations attributes temporal cardinalities 
full dlr gamma able express 
require relations theorem lead undecidability 
go details proof complete proof technical report :10.1.1.25.3065
main technical tool proof method quasimodels developed :10.1.1.170.1222
idea notion quasimodel represent state general infinite domain temporal model moment time finitely types domain objects moment modulo finite set formulas evolution types time described special functions called runs 
introduces temporal description logic dlrus illustrates expressive power providing time systematic formalisation various temporal entity relationship conceptual data models appeared literature 
temporal query language defined problem query containment constraints defined dlrus conceptual schema investigated 
language capture modelling constructs discussed section fact case global logical implication atomic formulas difference lambda exception global entity consistency schema evolution constraints snapshot relations attributes temporal cardinalities 
full dlr gamma able express 
require relations theorem lead undecidability 
go details proof complete proof technical report :10.1.1.25.3065
main technical tool proof method quasimodels developed :10.1.1.170.1222
idea notion quasimodel represent state general infinite domain temporal model moment time finitely types domain objects moment modulo finite set formulas evolution types time described special functions called runs 
introduces temporal description logic dlrus illustrates expressive power providing time systematic formalisation various temporal entity relationship conceptual data models appeared literature 
temporal query language defined problem query containment constraints defined dlrus conceptual schema investigated 
tight complexity results proved 
