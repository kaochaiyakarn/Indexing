logical methods computer science vol 
pp 
www online org submitted nov published oct proof nets free autonomous category fran ois lamarche lutz loria inria lorraine projet rue du jardin nancy france mail address lamarche loria fr inria projet cole polytechnique laboratoire informatique lix rue de palaiseau cedex france mail address lutz lix polytechnique fr 
part theory proof nets full multiplicative linear logic including units 
naturally extends known theory unit free multiplicative proof nets 
linking longer set axiom links tree axiom links subtrees 
trees identified equivalence relation simple form graph rewriting 
show standard results sequentialization strong normalization cut elimination 
second part show identifications enforced proofs class proof nets defines free autonomous category 
interplay logic category theory fascinating rich bidirectional non trivial 
non triviality fact proof statement logical system corresponds set categorical axioms non trivial task 
addition discrepancies categorical axiomatization actual properties syntactical objects proof theorists 
denotational semantics follow categorical directives syntactical ones 
discrepancies source creative tensions 
instance logical constructions expressed terms adjunctions ordinary adjunctions give rise triangular equations called roughly unit unit 
syntactical considerations give real significance 
standard example lambda calculus acm subject classification 
key words phrases multiplicative linear logic proof nets autonomous categories coherence problems 
research carried second author inria post doc position loria nancy france 
logical methods computer science doi lamarche stra burger cc creative commons lamarche unit equation reduction unit rule 
suggest important proof theorists deal rule normalization harder impossible 
easy construct denotational semantics obey rule done hay 
example tension poset embody provability means prove assume replacing poset category allow name proofs single map composition proofs cut elimination associative 
happens naturally natural deduction systems sequent calculus quotienting done 
category theory furnishes critical tools test proof theory set external ideals judged 
categorical criterion obeyed syntax mean syntax automatically wrong 
categorical formulation needs refined 
tensions resolved way 
naturally idea naming proofs correctly long categories invented 
long time logicians aware need determine formal system proofs formula system proofs name proof 
matter fact concern hilbert preparing famous lecture thi 
problem taken importance years logical systems permit close correspondence proofs programs 
formalism sequent calculus lesser degree natural deduction oftentimes easy see derivations identified transformed sequence rule permutations obviously trivial 
immediately clear general transformations effected proof changing essence 
categorical ideals helpful providing criteria identification proofs simple general unambiguous 
strong happens ls gir classical logic case creative tension puts evolutionary pressure category theory proof theory 
advent linear logic marked significant advance quest proofs 
particular multiplicative fragment linear logic mll comes equipped extremely successful theory proof identification know exactly sequent proofs identified allowed rule permutations described laf class simple formal objects precisely represent equivalence classes sequent proofs 
objects called proof nets strong geometric character corresponding additional graph structure axiom links syntactical forest sequent 
precisely sequent proof sequent proof net represents simply syntactical forest decorated additional edges shown thick lines picture represent identity axioms appeared proof 
better say currently held conception proofs classical logic proof nets free autonomous category proof nets category theory category formula sequents proof nets free autonomous category bar omit units definition autonomous category set generating atomic formulas 
appeared blu problem precisely defining autonomous category units rise ls hhs dp 
matter fact axiom links visible name kelly mac lane graphs early km tried describe free symmetric monoidal closed called autonomous categories girard key insights gir noticing inherent symmetry formalized negation move autonomous autonomous addition axiom links sequent syntactic forest completely characterize proof units 
theory proof nets extended larger fragments linear logic 
judged point view ability identify proofs identified extensions shown varying degrees success 
extensions complies particularly categorical ideal firmly put successful class appealing categorical considerations inclusion additive connectives additives correspond exactly categorical product coproduct 
give theory proof nets full multiplicative fragment including multiplicative units 
prove allows construct free autonomous category units set generating objects getting full validation categorical imperative 
submitted treatments multiplicative units aware 
ko authors provide internal language autonomous autonomous categories calculus bcst classes free monoidal categories constructed means nonstandard version sided proof nets correctness criterion version danos criterion dan 
calculus papers firmly tradition natural deduction logical rules elimination mechanically generate system proof objects ordinary terms binders 
unsurprisingly equivalence relation terms needed construct free autonomous categories 
known calculus intuitionistic sequents easy establish correspondence systems terms graphical proof objects tradition linear logic research material 
second papers think approach best summarized despite title means sequent calculus 
starts core logic weaker mll related follows usual primitives multiplicative linear logic look system polarities means right side means left side constant may polarity allowed apply tensor par formulas polarity resulting formula polarity 
add axioms form main system bcst lamarche exactly equivalent multiplicative linear logic usual rules connectives obey polarity restrictions 
polarized sided translated back authors notation sequent form 

bm operation ordinary de morgan dual remembering inverts polarities 
weaker logic classical multiplicative linear logic instance ordinary axiom links straddle left right divide 
polarity restrictions constants constant fragment suitably give back free autonomous category generated empty set 
addition non logical axioms allows construction free category generated ordinary category 
bcst side switching negation connective introduced done pui non logical axioms larger system equivalent classical multiplicative linear logic 
section say approach proof nets differs bcst 
obvious eventually propose considerably simpler 
chosen sets objects atomic variables generating sets 
easy extend construct free autonomous category generated arbitrary category arbitrary lam trying hard read proof theorists proof theorists notoriously suspicious non logical axioms 
general kill cut elimination normalization classes harmless non logical axioms 
general theoretical criteria dw developed allow identification harmless classes 
manuscript submitted approach hug proposed problem constructing free autonomous categories improves predecessors cut elimination process effected level representatives equivalence classes gir 
outline 
consists parts 
concerned syntax sequent calculus modern syntax proof nets variation ordinary multiplicative proof nets permits addition units 
standard results sequentialization cut elimination proved 
second part concerned algebra introductory material autonomous autonomous categories show set atomic formulas set proof nets constructed previous section form autonomous category easy free generated harder 
sections discussion history motivation 
taken pains treatment self contained possible 
proofs complete done utmost avoid kind hand waving tried hard ensure reader minimal background multiplicative linear logic category theory read 
main results csl conference impossible give complete story fifteen pages sl 
proof nets free autonomous category 
proof nets multiplicative linear logic assume reader familiar sequent calculus classical multiplicative linear logic basic notions proof nets understands idea correctness criterion 
reader referred laf str 

units problematic 
problem bottom rule mobile 
suppose proof contains rule instance appears rule introduce connective 
pushed hard find reason difference sequent proofs essential significance goes mere notation ought distinguished 
asking distinction opens door theory proof identification slightly bureaucratic sequent calculus 
theory autonomous categories tells identified 
accepting seemingly trivial permutation equation deep consequences 
supposing rule choice branches 
ordinary proof nets multiplicative linear logic successfully eliminated bureaucracy introduced sequent rules 
characterized presence links connect atoms syntactical forest sequent 
extending multiplicative units impulse probably try attach sequent forest atomic formulas 
corresponds doing introductions early possible high sequent tree done 
approach satisfying manner hug hug 
see arbitrary choice tensor introductions branches sequent proof tree chosen doing 
situation correct identification proofs achieved considering equivalences classes graphs theory proof nets involves equivalence relation set correct graphs 
possibility attach branches proof forest 
done bcst equivalence class built ability slide constants branches 
possibility attach low possible forest corresponding idea sequent calculus deduction done late possible example just instance gets connective introduced 
way implementing linking instance connective introduced 
way doing things example lamarche 






different representations proof imagine links attach instance subformulas sequent forest corresponding sequent existed 
way choose normalize proofs claim conventional notion link need equivalence classes graphs hope having normal form universe enriched sequent graphs 
instance graphs easily seen represent equivalent proofs going odd numbered example successor just sliding intro intro branches going numbered example successor just doing reverse transformation 
notice examples distinct isomorphic graphs exactly superposed exchange rule 
impossible information disposal choose represent proof denote 
way done arbitrary extra information order formulas sequent strategy replaces sequent calculus kind 
said examples isomorphic modulo exchange 
notice comply early possible strategy previous late possible kind 
strategy hope graphical normal form 
interested reader verify examples part ring graphs equivalent point view category theory 
essentially proofs sequent possible different graphs 
approach probably best seen version ordinary proof net technology express idea 
add extra nodes act ordinary pars point view correctness 
consider proof sequent sequent forest decorated special edges encode information essence 
proof nets free autonomous category 
linking tree leaves sequent forest linking tree sequent forest sharing set leaves aspect differ bcst presentation proofs equivalence classes graphs 
related aspects significantly different graphs belong equivalence classes standard multiplicative proof nets usual notions correctness criteria empire tensor branch apply 
just links particular fashion deal units 
readers choose favorite correctness criterion equivalent dr popularity 
equivalence relation simple set rewriting rules proof graphs 
matter fact non trivial rule rules commutativity associativity connectives dispensed example ary connectives 

cut free proof nets 

arbitrary set atoms 
set mll formulas defined follows 
additionally define set mll seen special kind formulas follows 
stands element 
denote formulas denote 
sequents denoted 
finite lists formulas separated comma 
consider formulas binary trees sequents forests leaves decorated elements inner nodes decorated 
think nodes decorated subformula rooted node 
definition 
pre proof graph graph consisting linking sequent set leaves coincides set leaves depicted 
denoted lamarche examples proof graphs tradition draw graphs way roots formula trees bottom root linking tree top leaves 
shows examples 
corresponds graph 
compact notation write indices show leaves linking leaves sequent identified 
way indices atoms distinguish different occurrences atom denote different elements 
way indices units distinguish different occurrences 

dealing sets structure mention additional bit structure pre proof graphs possess total ordering set leaves corresponding syntactic order formulas sequents written 
order completely obvious notation mention 
take standard approach sequent calculus commutative logic sequent sequence formulas subject permutations induced exchange rule 
definition 
switching pre proof graph graph obtained omitting node edges connect node children 
dr proof nets free autonomous category definition 
pre proof graph called correct connected acyclic 
proof graph correct pre proof graph 
examples proof graphs 
pre proof graph selected 
indexed switching graph obtained removing edge parent 
called extended switching respect observe correct extended switching disconnected consists connected components see fr discussion connected components 
notation distinguish subtree linking tree graph 
context 
equivalence pre proof graphs 
set pre proof graphs define relation smallest equivalence relation satisfying equation holds side condition fulfilled extended switching respect node subtree connected equations arbitrary linking trees arbitrary linking tree context 
arbitrary sequent leaves match linking 
proof graph equivalent second definition 
pre proof net equivalence class 
pre proof net correct elements correct 
case called proof net 
proof graph write denote proof net formed equivalence class omit subscript 
lemma 
correct correct 
proof 
equations preserve correctness obvious 
equation switching sided disconnected side disconnected 
acyclicity check switching produces cycle right hand side equation left hand side 
possible cycle contains nodes case ruled side condition 
call pre proof net literature called proof structure 
lamarche id ex translation cut free sequent calculus proofs pre proof graphs lemma ensures notion proof net defined sense members proof graphs correct 
alternative approach definition proof net restrict definition proof graphs mention pre proof graphs assume start obeys correctness criterion 
slight breach tradition advantage requiring side condition asymmetrical 
point view systematically hug 

sequentialization 
section relate proof nets cut free sequent calculus proofs mll 
show cut free sequent proofs mll inductively translated pre proof graphs 
done 
call pre proof net representatives obtained sequent calculus proof translation 
theorem 
pre proof net proof net 
proof need observation proof graph ordinary proof net sense dr known fact splitting tensor net 

ordinary proof nets 
ordinary axiom linking sequent perfect matching leaves atoms units dual atoms units matched 
course sequents ordinary axiom linking exists example sequents possible ordinary axiom linking example ordinary pre proof net sequent equipped ordinary axiom linking 
correctness defined definitions 
ordinary proof net correct ordinary pre proof net 
words call ordinary proof nets nets thoroughly studied literature difference allow places leaves 
observation 
pre proof graph ordinary pre proof net 
precise define linking linking formula inductively follows proof nets free autonomous category 
example ordinary proof net words obtained replacing leaf dual leaving inner nodes unchanged mirror image tree connect leaves ordinary axiom links leaf identification 
forget fact units think ordinary dual atoms 
get ordinary pre proof net denote 
shows example ordinary proof net obtained second proof graph 
observe correct correct 
lemma 
ordinary proof net roots nodes splitting removing net disconnected 
gir proofs available lemma example girard original gir instructive retor ret 
reason show proof concentrate proof theorem 
easy see rules id give proof graphs rules preserve correctness 
pre proof net correct 
direction pick representative proof net proceed induction sum number nodes graph number nodes 
words number nodes relevant 
exhibiting sequentialization equivalent proof graph obtained applying associativity commutativity equations base case trivial graph consists single node labeled 
inductive case look root nodes 
remove applying rule proceed induction hypothesis 
roots nodes interpret ordinary ordinary proof net observation remains correct remove nodes node ancestor 
dealing commutative case mirror image unnecessary 
simplifies diagrams avoiding unnecessary crossings proof nets commutative diagrams 
consists formula object bc called bipartite proof net 
fact proof graphs sense equivalent seen formulas isomorphic sense bc 
lamarche roots nodes splitting lemma 
belongs restore structure nodes subtrees root covers components graph divided removing splitting 
apply rule proceed induction hypothesis premises 
splitting belongs possibilities 
comes axiom link children dual atoms comes bottom link child 
case graph shape ai ai linking written sequent roots removed ai denotes sequent formula contains atom indexed ai ai ai share atoms units 
replace ai obtain proof graphs strictly smaller size 
induction hypothesis sequent proofs construct sequent proof id ai ai ai obtained replacing ai adding sequent contains ai 
similarly obtained 
easy see proof translates 
case splitting tensor child similar left reader 

known ordinary proof nets sequentialization theorem correct obtained unit free sequent calculus proof obvious way 
studied thoroughly literature gir dr ret 

proof nets cuts 
section introduce cuts proof nets 
cut formula called cut connective function defined formulas follows obvious abuse notation proof nets free autonomous category notice invert order negation logic commutative 
considerably simplifies proof nets categorical diagrams 
sequent cuts sequent formulas cuts 
cuts allowed occur inside formulas nodes roots 
pre proof graph cuts pre proof graph may contain cuts 
nodes geometric behavior nodes 
correctness criterion stays literally define proof graphs cuts proof nets cuts accordingly 
translation sequent proofs containing cut rule pre proof graphs cuts cut treated follows cut cut behaves way immediately generalization sequentialization theorem theorem 
pre proof net cuts correct proof net cuts 
proof 
proof literally proof theorem difference nodes treated nodes 

way add cut ordinary proof nets defined 
course affect sequentialization 

cut elimination 
famous cut elimination theorem says proof containing cuts cut free proof 
mll sequent calculus proofs known fact 
sequentialization cut free proof nets proof nets cuts theorems immediately conclude cut elimination result proof nets 
section procedure eliminate cuts directly proof nets 
precisely strongly normalizing cut reduction relation 
means proof net cuts unique cut free proof net assigned 
set cut pre proof graphs define cut reduction relation follows ai ak ai ak reduction steps shown graphical notation 
immediate lemma ensures correctness preserved reduction 
lamarche cut elimination reduction steps lemma 
correct correct 
proof 
impossible cut reduction step introduce cycle switching disconnected 
observe happen proof graph reduction possible cuts sequent 
example cut reduced 
proof graph node reduced called ready 
obviously cut pair ready cut atoms units necessarily case example shows 
theorem 
theorem 
proof graph node equivalent proof graph node ready reduced 
immediate consequence lemmas 
lemma 
proof graph ai contains atomic cut equivalent proof graph ai ak ai 
lemma 
proof graph contains cut units equivalent proof graph 
proving lemmas 
proof nets free autonomous category lemma 
xi xi proof graph arbitrary atom unit dual 
xi xi xi xi equivalent 
proof 
way contradiction assume equivalent original proof graph 
means cases side condition fulfilled means original proof graph extended switching wrt 
node connected extended switching wrt 
node xi connected 
loss generality assume extended switching respectively connected root respectively xi 
paths common node immediately construct normal switching 
switching contains cycle paths connected roots xi contradicting assumption correctness 
paths common node construct switching cycle follows 
sure contains path intersection node second path 
note path go downwards edge root xi extended switching 
node path belong second path graph node edges attached 
sure part second path determined direction established nodes contained switching 
possibilities get path root xi yields cycle immediately edge parent 
get path subcases path contain nodes 
case extend path cycle roots xi node xi path contain nodes 
consider part path connects leaf touching node contain root edge parent extended switching 
path extended cycle contains parent contradicts assumption correctness original graph 
lemma 
xi xi proof graph arbitrary atom unit dual 
xi xi equivalent 
proof 
way contradiction assume case side condition fulfilled means original proof graph extended switching wrt 
node connected 
path goes xi cycle immediately 
case enter lamarche node leaf cases extend path node xi root xi yields cycle 
lemma 
xi xi proof graph arbitrary atom unit dual 
xi xi equivalent 
proof 
similar lemma 
proceed proofs lemmas 
proof lemma 
definition proof graph linking contain subtrees ai ak 
correctness criterion relation ai ak contexts 
proceed induction size sum number nodes 
cases empty 
case done 
root empty 
case apply lemma ak 
empty root 
case symmetrical previous apply lemma root 
case apply lemma proceed induction hypothesis 
root 
case apply associativity subject side condition proceed induction hypothesis 
proof lemma 
proof similar previous 
correct shape 
proceed induction size identical cases 
difference root empty 
case apply lemma lemma 
completes proof theorem 
extend relation proof nets follows say proof graphs show defined sense cut reduced different representatives net results represent net 
lemma 
reductions cut reduced 

fact definition proof graph possibility 
order emphasize certain uniformity lemmas proof nets free autonomous category proof 
pn pn 
equivalence pi pi direct application equations 
distinguish cases 
reduced cut binary connectives 
proof graphs pi cut ready qn qi obtained reducing cut pi 
second case reduced cut atomic say ai happen pi cut ready unnecessary applications associativity 
easy see transformation readiness cut destroyed ai ak touched 
proceed case 
difficult case occurs cut units say 
destroyed transformation subtrees leave enter scope occur 
reduction disappear 
intermediate steps vacuous 
proceed similarly cases 
thing check termination lemma 
infinite sequence proof 
reduction step size sequent number nodes reduced 
showing confluence reduction relation proceed steps 
show reduction relation pre proof graphs confluent extend result pre proof nets employing lemma 
lemma 
proof graph 
proof 
obtained reducing node equal 
different nodes reduced reductions nodes ready 
reducing nodes destroy readiness reduced 
redexes reductions overlap result independent order reductions 
lemma 
proof net 
proof 
problem reduction take place different presentations proof net 
immediately apply lemma 
main idea proof exhibit presentation cuts ready apply lemma lemma 
denote cut reduced obtain reduced obtain 
identical immediately lemma 
distinguish cases lamarche cuts binary connectives ready presentation proof net 
choose presentation cut ready apply lemma lemma 
cuts units say 
ready applying lemma lemma 
apply lemma ready 
affect readiness 
obtain presentation cuts ready proceed previous case 
cuts atomic directly connected real axiom link 
proceed previous case obtain presentation cuts ready 
cuts atomic share common real axiom link 
words shape ai ak ai ak am case possible cuts ready time 
transform graph ai ak am ai ak ai ak am ai ak case ready second 
cases reduction cut ready 
second reduction result cases am 
theorem 
cut elimination reduction proof nets strongly normalizing 
normal forms cut free proof nets 
proof 
termination provided lemma confluence follows lemma normal form cut free ensured theorem 

cut elimination ordinary proof nets 
known see gir dr ret add sake completeness 
define cut reduction relation set ordinary pre proof nets shown 
cases cut binary connectives cut atoms 
cut binary connectives replaced cuts corresponding subformulas case units cut atoms removed melting attached axiom links single axiom link 
easy see reduction preserves correctness terminating confluent 
theorem hold ordinary proof nets 
proof nets free autonomous category cut elimination reduction steps ordinary proof nets 
autonomous categories great majority cases category additional structure turns category obeys certain class universal properties products coproducts right adjoint products equalizers structure question ends property category operations standard algebraic sense extracted axiom choice 
exceptions important far concept monoidal structure defined abstractly recourse explicit binary operation bifunctor 
operation form associativity holds equation natural isomorphism 
unit object adjective monoidal additional structure braiding symmetry corresponds suitably generalized form commutativity 
monoidal categories abound nature examples world rings modules closely related world topological vector spaces category modules commutative ring abelian groups form important special case symmetric monoidal structure operation 
category left right bimodules arbitrary ring monoidal structure symmetrical general 
bimodules interesting binary operation bimodule functions obeys relation adjointness tensor 
additional structure modules led axiomatization monoidal closed categories 
concepts monoidal monoidal closed categories formulated lambek lam noticed strong logical flavor operations function module operation form implication associated conjunction necessarily commutative 
monoidal closed categories appeared ek give necessary axiomatic treatment lambek implication matter fact formulated way cases implication function object operator defined presence conjunction tensor 
closed categories monoidal 
constructing free categories structure interesting problem historical reasons called solving coherence problem 
soon concept closed category formulated question describing free ones 
lambek immediately saw relationship monoidal closed categories logic produced specific cut elimination theorem soon introduced lam lam 
start relationship logic categories bidirectional 
lamarche properties semantical categories give way formulating semantics logical systems suggesting new systems 
logical tools cut elimination help construction free categories structure 
matter fact problem getting complete description free monoidal closed category means logical led sizable lot publications years 
categories modules structure 
commutative ring notion dual dual module module functions defines contravariant endofunctor field restrict finitely generated modules finite dimensional vector spaces field get related natural isomorphism 
involutive negation logic 
particular case false object takes role true lambek logical interpretation 
driven purely algebraic considerations barr bar started looking examples symmetric monoidal closed categories dualizing object object naturally isomorphic 
led formulation autonomous categories examples necessarily unit tensor 
general technique producing categories ordinary monoidal closed category pullbacks called chu construction chu 
main inspiration chu construction mackey thesis published mac summarized follows 
realm topological vector spaces desirable notion duality naturally involutive canonical example category hilbert spaces unfortunately restricted case 
mackey idea decide topology vector space complete normed field replaced notion dual vector space elements seen continuous linear functionals space 
relationship spaces quite symmetrical operation dual simply exchange spaces 
discovery linear logic girard completely independent came observation particular autonomous category coherence spaces linear maps 
coherence spaces closely related category sets relations category abelian groups girard aware numerous points contact linear algebra improved logic seeking create 
choice name linear logic 
take long establish categorical framework axiomatizing multiplicative linear logic autonomous categories worked laf see 
particular cases chu construction rediscovered linear logicians applying chu sets functions gives category lafont streicher games ls better known chu spaces applying banach spaces gives girard coherent banach spaces gir closing year loop 

basic definitions properties 
section recall definition autonomous category show properties 
assume reader familiar basic notions category theory 
category maps write composition gf depending needs readability 
write identity map proof nets free autonomous category say said writing simply tends confuse beginners 
definition 
monoidal category category equipped bifunctor distinguished object called unit object objects natural isomorphisms diagrams commute introduce notation useful 
finite index set 
bracketing total order 
ik binary tree leaves indexed order respected 
denote bracketings indexed family ci objects notation ci 
cik denote object obtained applying functor bracketing empty cc allows state proposition need 
proposition 
finite index set bracketings share order 
ik 
indexed family ci objects monoidal category uniquely determined natural isomorphism ci ci constructed available data 
proof 
immediate consequence known coherence theorem monoidal categories 
see mac chapter vii choice typeface prevent confusion identity maps 
lamarche matter fact part coherence theorem part deals tensor 
says drop parentheses write expression involving tensor operation arbitrary family objects 
just sure objects order expressions 
full monoidal coherence theorem says drop parentheses write tensor arbitrary objects list sequence right insert units want list 
unique way go coherent isomorphism 
definition 
symmetric monoidal category monoidal category objects natural isomorphism symmetry diagrams commute proposition generalized symmetric monoidal categories drop additional conditions bracketings share order 
proposition 
finite index set bracketings indexed family ci objects symmetric monoidal category uniquely determined natural isomorphism ci ci proof 
nonsymmetric case proposition immediate consequence coherence theorem symmetric monoidal categories proved mac 
proof nets free autonomous category drop parentheses tensor unit expression change order things written 
bit careful symmetrical case 
expressions involve family objects objects appears family explicitly state instances permuted expressions 
expression practice 
definition 
autonomous category symmetric monoidal category equipped contravariant functor object natural isomorphism objects natural bijection homc homc bifunctor defined write call dualizing object say autonomous category strict isomorphism identity objects denotes autonomous category 
immediate consequence definition autonomous category second symmetric monoidal structure imposed bifunctor unit object notation 
natural isos associated new symmetric monoidal structure ci bracketing index set ci indexed family way done bifunctor 
empty cc risk confusion tend denote objects respectively 
extract standard consequences natural bijection homc homc 
notice swapped perfectly legal property way writing things convenient 
replace right half plug identity left get evaluation map obeys known universal property proposition 
objects homc homc related bijection 
unique map proof textbook category theory applied computer science reader probably see things write standard say map transpose standard term exponential transpose linear logic adjective dropped obvious observe stick notational convention making negation switch arguments strictly necessary formulas simpler write 
note symmetric monoidal structure necessarily strict usual sense associativity symmetry identities 
lamarche reasons 
map called call reverse process de term transpose generic non directional way 
apply symmetry isomorphism evaluation map get map evaluation map 
versions evaluation map simply denoted little chance confusion 
way allow write fundamental natural bijection homc homc 
obtained symmetry true didn symmetry example case cyclic autonomous category bar blr 
say left right 
proposition 
just de de proof 
observe just restatement naturality defining natural isomorphism autonomous categories 
obtained replacing 
prove applying proposition seeing gives exactly apply proposition duality exchange left right 
statements just duals 
proposition 
diagram commutes proof 
previous proposition tells right get map identity composite just get identity time get identity square commutes uniqueness transposes 
interpret saying operations left right commute 
symmetry better say successive applications commute left right distinction purely readability 
isomorphism get arrow called name identity 
dual 
general map name obtained proof nets free autonomous category proposition 
autonomous category cn objects 


complements 
bracketings natural bijection homc homc ci ci cj cj proof 
obvious view previous results map obtained applying transpose operator needed 
words uniquely determines arrow vice versa 
means ci ci cj cj ci ci uniquely determines family arrows indexed set bracketings call family equivariant family member representative 
note put get representatives canonical source case put representatives target 
proposition ensures representative family morphisms uniquely determines family 
turn helpful construction free autonomous category section allows avoid notion poly multicategory lam cs 
example map say members equivariant family 
name dual twisted versions respectively 
deserve special notation call really correct notation 
give standard constructions autonomous categories relatives 
arbitrary objects take tensor twice left right 
get natural map internal tensor 
particular case 
form fact won prove 
lamarche get arrow call switch gs bt traditionally known weak distributivity hdp cs linear distributivity denote version switch obtained replacing 
interesting property switch self dual reader show 
proposition 
holds proof 
left right de 
get map obvious 
clear bottom part triangle adds details name fits equation 
gives explanation name internal tensor 
general reader check 
proposition 
maps 
left right add law artifact associative logics form distributivity sen dp dp considered seriously 
proof nets free autonomous category proof 
de map get proposition twice de second map get equal just apply proposition right twice defining universal property transpose operation proposition 
proposition 
commutes proof 
know proved show left right de composite map gives just definition 
clear right de left de 
fact follows right de composite map second fact easy see left de construct composite call arrow internalized composition 
clear apply proposition twice obtained applying left right name internal composition explained lamarche proposition 
commutes proof 
repeat proof starting left right de doing 
reaching sentence clear 
clear looking seen equivariant family representative seen literature 
considered trivial category theorist think worthwhile proving full 
proposition tensor lemma 
commutes proof 
obvious just sequences evaluations 
want show ways computing diagonal equal 
de maps left right times considered maps source isomorphic modulo symmetries 
look small square commute trivially bottom right commutes proposition 
compare outer square previous 
take path say right 
get map form 
twice get exactly corresponding right right path 
argument applies right right path commutes get result uniqueness transposes 
proof nets free autonomous category 
proof nets form autonomous category 
basic observation section proof nets defined section form category 
making precise provide formula identity proof net ia ia called identity linking defined inductively follows ia ia ia ia ib observe ia changing order arguments linking proof graph change proof net see 
furthermore proof nets define composition result applying cut elimination procedure 
defined associative follows immediately strong normalization cut elimination 
gives rise category pn objects formulas built cf 
page arrows proof nets 
precisely arrows objects cut free proof nets see definition page 
main result section proposition 
set category pn strict autonomous category 
proof 
unit object formula bifunctor pn pn pn determined operation formulas proof nets proof net 
exhibit natural isomorphisms required definition symmetric monoidal categories follows ia ib ic ia ia ia ib easy check proof nets natural isomorphisms diagrams definitions commute 
duality functor defined objects page arrows assigning arrow observe particular case identity just isomorphism 
discussed detail section 
remains check natural bijection hom hom come surprise 
lamarche 
free autonomous category 
section show category proof nets free strict autonomous category observed pn strict sense identity object set obj pn function maps element seen atomic formula 
say pn free strict autonomous category generated amounts saying theorem 
strict autonomous category map obj unique functor pn preserving autonomous structure obj obj restriction objects 
remainder section devoted proof theorem 
autonomous category embedding obj 
exhibit functor pn desired properties 
objects functor uniquely determined follows cc cc choice objects cc cc functors uniquely determined autonomous structure defining morphisms situation simple 
fact saying acts proof nets define mapping assigns ordinary proof net cuts see equivariant family arrows defined section 
precisely ordinary proof net 
bm 
formulas sequent cuts 
bm cuts 
construct uniquely defined equivariant family arrows ai ai indexed bracketings subsets 
complements 
cut free case case 
proceed induction size sum numbers nodes 
crucial lemma existence splitting tensor 
net contains nodes single ordinary axiom link case equivariant family determined identity 
root nodes net aj 
induction hypothesis equivariant family representative ai 
get immediately ai 
aj aj 
removing root get smaller ordinary proof nets correct 
loss generality 
aj aj choose different ordering ai 
roots splitting say aj proof nets free autonomous category induction hypothesis equivariant families representatives aj aj 
respectively get ai 
aj applying functor fact aj 
cases construction uniquely determined autonomous structure choice atoms 

case 
choose representatives aj aj 
proposition aj aj aj aj aj aj aj representative 
need general version 

partitions arbitrary disjoint subsets choose bracketings 
ak ak representatives respectively 
clear proposition ak ak representative 
ak aj ak lamarche remains show construction independent order nodes introduced 
proceed induction number nodes net 
base case fewer nodes net uniqueness immediately 
inductive case consider nodes introduced 
root parent possibility changing order introductions 
assume roots 
cases consider nodes say aj ak 

induction hypothesis unique equivariant family representative ai 
immediately get ai 
aj ak aj ak 
uniqueness follows immediately associativity functor 
say aj ak 

splitting formula belong parts case part introduced uniqueness part immediately 
loss generality assume formulas aj part containing formulas ak 
part containing induction hypothesis unique equivariant families representatives aj ak 
get immediately unique equivariant family ai 
aj ak nodes say aj ak 

splitting introduced consecutively 
loss generality removing roots get smaller nets contains formulas 
aj second contains aj 
ak third contains ak 

induction hypothesis uniquely determined equivariant families representatives 
aj aj 
ak ak 
ways constructing representative 
proof nets free autonomous category follows immediately tensor lemma proposition yield equivariant family 
extend construction equivariant families ordinary proof nets cuts case 
done replacing cut bi formula bi applying previous construction net 
bm yields particular representative ai 
bj bj 
look map bj bj bj name identity exist bj 
par family bj construct bj bj 

composition get ai 
define representative equivariant family 
uniqueness follows functoriality associativity 

suppose nets 
representatives respectively 
clear construct cutting representative 
obtained looking definition internal composition proposition 
crucial observation construction eliminating cuts ordinary proof net see affect equivariant family defines lemma 
ordinary proof net 
bm 
formulas sequent cuts 
bm cuts 
ordinary proof net 
obtained applying cut elimination procedure 
determine equivariant family arrows ai ai indexed bracketings subsets 
complements 

lemma suffice prove ordinary proof nets form free autonomous category units immediate consequence fact blu 
precise fully satisfactory definitions notion autonomous category units proposed ls hhs dp pursue matter 
proof lemma 
proof done induction length cut reduction 
suffices show lemma case obtained single cut reduction step 
convention sequent formulas 
write ak 
proceed induction size 
cases consider lamarche contains root root remove nets apply induction hypothesis 
shape consists single node axiom links 
single axiom link identity maps representatives axiom links particular tells representative 
net obtained reducing cut formula node child splitting removing falls components net arrow represents 
second net represent 
net represent 
arrow represents net obtained removing 
obviously composite represents 
take nets tensor introductions get net 
proof nets free autonomous category represent net 
obvious composite represents net 
look diagram left rectangle big diagram commutes apply general version twice occurrence tensor 
take dual get equations lamarche shows proposition 
see right half big diagram exactly dual equation showing diagram commutes get 
cases holds contain root splitting 
node splitting 
removing net falls parts say 
similarly falls loss generality assume contains induction hypothesis cut 
result reducing 
apply induction hypothesis 
proceed proof theorem showing functor defined arrows 
recall proof graph seen ordinary proof net see observation apply construction equivariant families 
construction gives particular proof graph unique arrow 
furthermore linking uniquely determines arrow cc inductively obtained follows arrow composed get 
defined ensured lemma fact units units 
lemma 

proof 
notice step equivalences involve formulas exactly set atoms naturally considered atoms 
loss generality assume linking tree left hand side equivalences linking tree right hand side 
ordinary proof net sequent graph axiom links forms bijection atoms formulas 
call proof net 
defines map 
addition isomorphism units just away formulas isomorphic ranges real axiom links cases matter negated side condition get correct ordinary proof net negate proof nets free autonomous category immediately left hand side triangle diagram commutes showing right hand side triangle commutes apply lemma 
consider ordinary proof nets 
ordinary proof net corresponds proof graph see observation 
similarly ordinary proof net corresponds proof graph 
ordinary proof net obtained connecting node 
definition arrows representatives equivariant families obtained respectively 
similarly isomorphism representative equivariant family obtained 
consequently composition representative equivariant family obtained 
furthermore easy see eliminating cut defined yields 
apply lemma get shown proof net form arrow determined proposition uniquely defined 
remains prove pn functor identities composition preserved 
formula proof ia mapped identity easy induction structure left reader 
crucial part show proof nets composition yields arrow 
lamarche observe proof net obtained eliminating cut equivariant family determined standard argument tells 
order show suffices show general result 
lemma 
proof graph obtained applying single cut reduction step 
denote morphism 
formulas resp 
cuts 
proof 
proof lemma case cut reduction step construct ordinary proof net involve define map 
show triangles commute 
need ordinary proof nets addition 
bm 
bm cuts 
applying construction equivariant family yields arrow 

cl cuts 
arrow obtained applying 
cl construction equivariant family 
obtained composing cut cases consider proof nets free autonomous category reduced cut see section binary connectives 
case identical usual identity net identity map 
commutativity left hand side triangle follows trivially 
right hand side triangle observe result eliminating cut composite yields exactly 
apply lemma 
reduced cut atoms 
see section assume aj ah ah context 
furthermore cuts ai clear correct ordinary proof net aj ah ak ai index atom negated atom denotes presence axiom link little breach previous convention different index single atom 
construct aj ah ak ai additional axiom links simply connect atom context corresponding negation 
clear correct 
furthermore result eliminating cuts ai composite yields exactly 
lemma right hand side triangle commutes 
commutativity left hand side triangle consider net 
representative equivariant family map ah ai aj ak ah ai aj ak ah ak indices position markers distinct atomic objects 
definition internal composition compose names identity get proposition name identity turn represents result eliminating cut 
lefthand side triangle commutes case empty context 
general case follows straightforward induction 
lamarche reduced cut units 
context formula cuts 
construct words way non trivial axiom links indicated indices obvious gives correct ordinary net 
see map isomorphism triangles commute syntactical entities belong simply melt away categorical interpretation follow coherence laws units 
completed proof theorem 
see recall main features construction functoriality lemma proposition ensure preserve autonomous structure 
morphism category pn expressible terms autonomous structure imposed pn section 
consequently functor uniquely defined data theorem 
worth mentioning main result bc mll formulas isomorphic transformed applying standard rewriting rules associativity commutativity unit immediate consequence theorem 
furthermore theorem provides decision procedure equality morphisms free symmetric autonomous category opinion simpler ones provided bcst ko 

think convincing case cleanest approach proof nets multiplicative units 
particular main results stated way easily applicable addition techniques certainly general situations purely multiplicative linear logic 
began discussion relationship proof systems categories turns writing gave occasions deepen reflection said relationship subsequent 
unstated assumptions certainly belong mainstream ideology single way introduce bottom instance special axiom standard equations units monoidal categories proofs 
think standard postulates deserve scrutiny ls ls predictions eventually reach 
new subtleties way modify general belief category theory general algebraic yardstick tackling questions related identifications proofs 
said allow certain ideological flexibility proof theoretical category theoretical side 
proof nets free autonomous category issues left open want explore addition mix 
ordinary proof nets weaker version danos regnier correctness criterion switching produces acyclic necessarily connected graph gives sequentialization theorem mll binary mix rule added fr 
important property setting net correct number connected components invariant respect actual switching 
hard see add binary mix theory proof nets invariant respected bottom introductions equations 
allows say theory extends mll mix nontrivial left done prove constructed free autonomous category mix 
manage additional algebra needed cf 
cs fp ls involves necessary equations required obtain coherence result mother mix maps added autonomous category 
standard view mix adding requirement map isomorphism 
theory proof nets fr add constant rules logic sufficient deal case 
exploring noncommutative world especially particular logic context structure longer multiset formulas cyclic order formulas lr 
unit free case correctness criterion modified net planar crossings edges allowed 
easy see correctness criterion equivalence relation defined adapted accordingly 
question obtain wellbehaved cut elimination construct free cyclic autonomous category ros bar sch 
interesting question noncommutative case find normal representatives proofs having rely equivalence classes 
relation calculus structures gs bt deep inference 
mention idea approach originates new viewpoints deep inference 
addition additives theory 
hard done 
true challenge include additive units 
development theory proof nets classical logic 
problem finding right extension axioms autonomous category hand classical proofs identified natural way hand collapse boolean algebra 
writing aware fp fp fp tackle problem 
additional research ls ls lam str allows say word relationship classical logic categories said near 
search meaningful invariants 
probable equivalence classes graphs define geometric meaning related invariants homological algebra 
convinced tip iceberg 
lamarche bar michael barr 
autonomous categories volume lecture notes mathematics 
springer verlag 
bar michael barr 
non symmetric categories 
theoretical computer science 
bc vincent roberto di cosmo 
linear logical view linear type isomorphisms 
computer science logic csl volume lncs pages 
springer verlag 
bcst richard blute robin cockett robert seely todd 
natural deduction coherence weakly distributive categories 
journal pure applied algebra 
blr richard blute fran ois lamarche paul 
entropic hopf algebras models noncommutative linear logic 
theory applications categories 
blu richard blute 
linear logic coherence dinaturality 
theoretical computer science 
bt kai br nnler tiu 
local system classical logic 
nieuwenhuis voronkov editors lpar volume lecture notes artificial intelligence pages 
springer verlag 
chu 
chu 
constructing autonomous categories 
appendix bar 
cs cockett seely 
proof theory full intuitionistic linear logic bilinear logic mix categories 
theory applications categories 
cs cockett seely 
weakly distributive categories 
journal pure applied algebra 
dan vincent danos 
la logique lin aire appliqu tude de processus de normalisation du calcul 
th se de doctorat universit paris vii 
dp sen zoran petri 
proof theoretical coherence 
kcl publications london 
dp sen zoran petri 
proof net categories 
preprint mathematical institute belgrade 
dr vincent danos laurent regnier 
structure multiplicatives 
annals mathematical logic 
dw gilles dowek benjamin werner 
proof normalization modulo 
journal symbolic logic 
ek samuel eilenberg gregory maxwell kelly 
closed categories 
eilenberg harrison maclane editors proceedings la jolla conference categorical algebra pages 
springer 
fp carsten david pym 
geometry interaction classical logic 
preprint 
fp carsten david pym 
geometry interaction classical logic extended 
th ieee symposium logic computer science lics pages 
fp carsten david pym 
order enriched categorical models classical sequent calculus 
appear journal pure applied algebra 
fr arnaud christian retor 
mix rule 
mathematical structures computer science 
gir jean yves girard 
linear logic 
theoretical computer science 
gir jean yves girard 
new constructive logic classical logic 
mathematical structures computer science 
gir jean yves girard 
coherent banach spaces continuous denotational semantics 
jean yves girard okada andre scedrov editors electronic notes theoretical computer science volume 
elsevier science publishers 
gir jean yves girard 
proof nets parallel syntax proof theory 
aldo paolo editors logic algebra 
marcel dekker new york 
gs alessio guglielmi lutz stra burger 
non commutativity mell calculus structures 
laurent fribourg editor computer science logic csl volume lncs pages 
springer verlag 
hay hayashi 
adjunctions categorical structures lambda calculus 
theoretical computer science 
proof nets free autonomous category hdp martin hyland valeria de paiva 
full intuitionistic linear logic extended 
annals pure applied logic 
hhs robin houston dominic hughes andrea 
modelling linear logic units preliminary results 
preprint available arxiv org abs math 
hug dominic hughes 
simple free star autonomous categories full coherence 
preprint available arxiv org abs math ct 
hug dominic hughes 
simple multiplicative proof nets units 
preprint available arxiv org abs math ct 
dominic hughes rob van glabbeek 
proof nets unit free multiplicative additive linear logic 
th ieee symposium logic computer science lics pages 
km gregory maxwell kelly saunders mac lane 
coherence closed categories 
journal pure applied algebra 
ko wei koh chih hao luke ong 
internal languages autonomous autonomous categories 
martin hofmann giuseppe rosolini du pavlovi editors proceedings th conference category theory computer science volume electronic notes theoretical computer science 
elsevier 
laf yves lafont 
logique cat gories machines 
phd thesis universit paris 
laf yves lafont 
proof nets interaction nets 

girard lafont regnier editors advances linear logic volume london mathematical society lecture notes pages 
cambridge university press 
lam joachim lambek 
calculus syntactic types 
editor studies language mathematical aspects proc 
th symp 
appl 
math pages 

lam joachim lambek 
deductive systems categories 
syntactic calculus residuated categories 
math 
systems theory 
lam joachim lambek 
deductive systems categories 
ii 
standard constructions closed categories 
hilton editor category theory homology theory applications volume lecture notes mathematics pages 
springer 
lam fran ois lamarche 
algebra structural contexts 
accepted mathematical structures computer science 
lam fran ois lamarche 
exploring gap linear classical logic 
submitted 
lr fran ois lamarche christian retor 
proof nets lambek calculus overview 
michele claudia editors proceedings third roma workshop proofs linguistic categories pages 
bologna 
ls joachim lambek phil scott 
higher order categorical logic volume ls cambridge studies advanced mathematics 
cambridge university press 
yves lafont thomas streicher 
game semantics linear logic 
proceedings th annual ieee symposium logic computer science lics pages 
ls fran ois lamarche lutz stra burger 
constructing free boolean categories 
proceedings twentieth annual ieee symposium logic computer science lics pages 
ls fran ois lamarche lutz stra burger 
naming proofs classical propositional logic 
urzyczyn editor typed lambda calculi applications tlca volume lecture notes computer science pages 
springer verlag 
mac mackey 
infinite dimensional vector spaces 
trans 
amer 
math 
soc 
mac saunders mac lane 
natural associativity commutativity 
rice university studies 
mac saunders mac lane 
categories working mathematician 
number graduate texts mathematics 
springer verlag 
fran ois tayer 
homology proof nets 
archive mathematical logic 
pui 
sequents link graphs 
phd thesis university utrecht 
ret christian retor 
handsome proof nets perfect matchings 
theoretical computer science 
ros kimmo rosenthal 
autonomous categories bimodules 
journal pure applied algebra 
lamarche sch robert 
natural deduction coherence non symmetric linearly distributive categories 
theory applications categories 
see seely 
linear logic autonomous categories cofree coalgebras 
contemporary mathematics 
sl lutz stra burger fran ois lamarche 
proof nets multiplicative linear logic units 
jerzy andrzej tarlecki editors computer science logic csl volume lncs pages 
springer verlag 
str lutz stra burger 
axiomatisation boolean categories medial 
preprint available arxiv org abs cs lo 
str lutz stra burger 
proof nets identity proofs 
lecture notes esslli 
szabo 

comm 
alg 
thi thiele 
hilbert fourth problem 
american mathematical monthly 
david yetter 
quantales noncommutative linear logic 
journal symbolic logic 
licensed creative commons attribution license 
view copy license visit org licenses nd send letter creative commons nathan abbott way stanford california usa 
