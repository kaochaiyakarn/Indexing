enabling personalized composition adaptive provisioning web services quan sheng benatallah dumas anne ngu school computer science engineering university new south wales sydney australia college information systems university centre information technology innovation queensland university technology brisbane australia department computer science texas state university san marcos texas usa 
proliferation interconnected computing devices fostering emergence environments web services available mobile users commodity 
unfortunately inherent limitations mobile devices hinder seamless access web services supporting complex user activities 
describe design implementation distributed adaptive context aware framework personalized service composition provisioning adapted mobile users 
users specify preferences annotating existing process templates leading personalized service processes 
cater possibility low bandwidth communication channels frequent disconnections execution model proposed responsibility orchestrating personalized processes spread participating services user agents 
addition execution model adaptive sense runtime environment able detect exceptions react set rules 
web services self describing open components support programmatic access web accessible data sources applications 
web services poised accessible mobile devices proliferation devices laptops pdas mobile phones deployment sophisticated wireless communication infrastructures gprs umts empowering web ability deliver data functionality mobile users 
example business travelers expect able access corporate servers enterprise portals mail collaboration services move 
obstacles hinder seamless provisioning web services wireless environments 
current web service provisioning tech niques inappropriate distinguishing features inherent limitations wireless environments low throughput poor connectivity wireless networks limited computing resources frequent disconnections mobile devices 
addition variability computing resources display terminal communication channel require intelligent support personalized timely delivery relevant data users 
examples issues need addressed order service oriented computing paradigm real benefit mobile users include personalized composition services 
non mobile counterparts stationary users mobile users require integrated access relevant services 
provision web services mobile users tends time location sensitive meaning mobile users need invoke particular services certain period certain place 
example student need class assistant service attending class 
service selection composition orchestration take consideration context service provisioning environment cpu bandwidth state user user preferences 
limited resources wide heterogeneity mobile devices 
mobile devices normally posses limited battery power input capabilities 
mobile devices better suited passive listeners receiving service results active tools service invocation searching service sending request 
furthermore provisioning services consider location user 
web services near current location selected highly customized content delivered closest restaurant 
robust service execution 
numerous situations prevent smooth execution web services wireless environments 
obstacles range dynamic nature web services changes quality service qos characteristics mobile devices frequent disconnections 
believe services self managed support adaptive execution internet 
facilitate robust execution services necessary provide capabilities detecting exceptions run time appropriate actions promptly taken 
aforementioned challenges call novel approaches support dynamic adaptive web service provisioning wireless environments 
contribution aim presents design implementation pcap framework personalized composition adaptive provisioning web services 
framework provides distributed adaptive contextaware infrastructure personalized composite service provisioning takes account needs mobile users 
salient features pcap personalized composite service specification infrastructure 
infrastructure users specify needs reusing adjusting existing process templates building services scratch 
users locate process templates annotate contextual information execution time place defining personal composite services 
self managed adaptive service orchestration model 
participating services user agent component acts behalf user collaborate smooth execution personalized composite services interact user decides achieving goal performing right task right time right place 
knowledge participating services user agent require generated context information data control dependencies user preferences 
model complemented fact user agents services able adapt runtime exceptions service failures exception handling rules 
section presents personalized composite service model 
section describes orchestration model distributed execution personalized composite services dynamic exception handling 
pcap system architecture implementation described section 
section provides concluding remarks 
definition personal composite services section introduce modeling process templates describe configuration personal composite services 
process templates process templates reusable business process skeletons devised reach particular goals 
example class assistant template enables students manage class activities composing multiple services question posting consultation booking 
specify process templates statecharts 
noted process templates developed context statecharts adapted process definition languages bpel ws 
statechart states transitions 
transitions statechart labeled events conditions assignment operations process variables 
states basic compound 
basic state called task rest corresponds execution service call component service member web service community 
service community collection web services common functionality different non functional properties different providers different qos parameters 
community receives request execute operation request delegated current members selection strategy 
compound states contain statecharts 
example section 
process templates task set input output parameters 
denote input resp output resp 
im 
ok 
value task input parameter may requested user task execution ii obtained user profile iii obtained output task 
case expression ij user 
cases expressed queries ij qj 
queries vary simple complex depending application domain users needs expressed languages xpath 
approach values users supply input parameters handled differently values obtained user profiles 
mobile devices resource constrained values obtained user profiles requested users 
process template specification template provider indicates input parameters users supply value 
responsibility user specify configuration phase value provided manually derived profile 
similarly value task output parameter may sent tasks input parameters ii sent user case wants know execution result task 
symbol denote delivery output parameters 
instance oj user means value oj sent user 
note value output parameter submitted multiple places task user 
similar input parameters provider process template decide output parameters need returned 
configuration personal composite services personalization implies making adjustment user preferences 
kinds user preferences associated process template task execution constraints divided temporal spatial constraints respectively indicate user wants see task executed data supply delivery preferences related supplying values input parameters delivering values output parameters task execution policies related preferences service selection communities service migration execution task 
temporal spatial constraints 
denote temporal spatial constraints task respectively 
formally temporal constraint specified tmp op tm op comparison operator tm absolute time relative time termination time task time interval form tm tm 
tmp op tm means task triggered condition ct op tm evaluated true 
ct denotes system time 
sake simplicity assume temporal values expressed level granularity 
similarly spatial constraint specified spl meaning task fired condition cl evaluated true 
cl denotes current location user physical location 
location considered location distance points exceed certain value 
assume spatial values expressed level granularity 
noted temporal resp spatial constraint empty meaning corresponding task executed anytime resp 
assume user mobile device location collected periodically system 
fact advances positioning technologies assisted gps gps believe obtaining mobile users location represent issue anymore 
data supply delivery preferences 
stated values input parameters task obtained user profile 
user proceeds steps identify input parameter values derived profile ii supply location profile corresponding attribute names 
similarly output parameters task user may specify parameter values need delivered 
execution policies 
execution policies include service selection policy service migration policy 
specific task users specify select service task 
service fixed task uses service selected specific service community public directory uddi certain criteria location mobile user 
furthermore users specify migrate services mobile devices mobile devices computing resources sites near users current location execution 
works service selection migration described 
example example introduced inspired ubiquitous computing applications uiuc gaia greater extent ucsd :10.1.1.11.6113
novel computing application enhancing participation students professors classrooms wireless mobile devices pdas 
provides distinct features including students encouraged ask questions anonymously exposing class avoiding problems associated traditional practice asking students ask questions ii professors able choose questions worth answered iii students vote questions asked students helps professors identify questions concern 
statechart simplified process template helps students manage class activities 
template attendance reminder notifies students time place lecture 
lecture student wants ask question browses questions asked students pda 
decides vote posted question question asked post question asked similar question 
student may ask questions lecture 
class consultation booking performed questions answered 
cases feedback lecture provided student 
active class service acs attendance reminder ar question browse qb posted posted question vote qv question mq answered answered consultation booking cb lecture feedback lf question post qp fig 

process template task input parameters dependencies output parameters dependencies ar string doc profile subject string user string doc profile string user integer user string qb qv qp cb lf string cb string professor cb qb string doc rcv qb questions user qv string doc rcv qv user string user qp string doc rcv qp user string question user mq boolean user cb date user date string doc rcv cb user string professor doc rcv cb professor string doc rcv cb lf string doc rcv lf user string comments user table 
data dependencies process template see assume student andrew interested process template 
andrew personalize template indicating preferences task 
instance lecture held am am quad andrew sets temporal spatial constraints tasks qb qv qp mq tmp spl quad respectively 
table describes input output parameters personal composite service 
describe data supply delivery preferences additional notations user denotes user student profile denotes xml document user profile stored doc rcv cb professor xpath query rcv cb stands xml document includes outputs tasks received cb 
attribute professor extracted query 
values input parameters supplied user 
instance order give lecture feedback task lf andrew input comments comments 
hand value input parameter qb derived value output parameter ar fact provide values input parameter tasks qv qp cb lf 
andrew specifies input parameter task ar derived profile 
andrew receive detailed result task 
noted conditions statechart transitions 
conditions modeled boolean variables values provided user runtime 
personal composite service orchestration execution composite service involved component services need coordinate client device order ensure business logic composite service enforced 
process termed orchestration 
existing orchestration models assume connection central scheduler component services continuously available characteristics bandwidth reliability connection component services 
assumption valid case personal composite services executions initiated followed specifically possibly mobile client 
accordingly advocate order achieve robust smooth execution personal composite services mobile environments composite services self orchestrating able coordinate actions autonomous way having continuously synchronize client lead idle periods timeouts due disconnections 
approach self orchestration achieved encoding interactions services form control tuples placed retrieved tuple spaces 
tuple space model origins linda language distributed programming recognized attractive model managing interactions loosely coupled entities wireless environments 
tuple spaces advantage providing direct support asynchronous interactions sender client device receiver component service separated space time 
enables mobile users disconnect time re synchronize underlying infrastructure reconnection 
control tuples compound transitions section define concepts rest control tuple compound transition 
definition 
control tuple rule form event condition action conjunction execution events 
conjunction events denoted semantics occurrence occurrence registered order occurrence generated 
conjunction conditions execution states including event parameter values service information inputs outputs tasks 
sequence execution actions 

actions executed order specified sequence 
selected events actions supported approach table 
discussed earlier statechart compound states multiple direct indirect ways transitioning basic state 
words exiting state number transitions taken simple transition qv mq compound transition mq lf 
order determine route controlflow notifications data items basic states need introduce concept compound transition 
definition 
compound transition ct sequence transitions tr tr trn belonging statechart source tr basic state target trn basic state target tri final state region belonging compound state source tri source tri initial state region belonging compound state target tri 
service orchestration tuples pcap section types control tuples coordinate personal composite service executions pcap precondition tuples postprocessing tuples context awareness tuples exception handling tuples 
precondition postprocessing tuples 
determining task activated execution personal composite service requires answering questions preconditions executing task 
ii execution task completed entities tasks user agent need notified completion 
knowledge needed determine moment activation task execution personal composite service captured sets set preconditions checked task executed ii set called postprocessing actions capturing tasks may need notified execution task completed 
provide formal definitions concepts precondition postprocessing task 
definition 
precondition task personal composite service set control tuples source tr denotes source state transition tr target tr denotes target state tr 
events descriptions entered location user entered location disconnected device device disconnected 
example user mobile device may switched reached uncovered area 
device service result evaluated user device due limited capabilities device 
service qos qos service deteriorated 
example execution time service longer 
actions descriptions notify task send notification completion task transform device transform service result transformation service capabilities user device location newl sc inform location newl user relevant web services sc 
reassign service delegate invocation service service table 
selected events actions supported pcap conjunction events form ready completed task exists compound transition ct source ct target ct event completed raised notification completion received controller conjunction temporal spatial constraints 
constraint interpreted true 
execution action execute invokes task andrew service see section precondition cb expressed ready cb completed mq tmp execute cb cb set input parameters task cb 
tuple indicates values input parameters cb available mq finished current time invocation cb start 
note andrew specify spatial constraint cb 
definition 
postprocessing set control tuples event form completed 
event generated execution task completed 
exists compound transition ct source ct target ct cond ct conjunction conditions labeling transitions ct tr tr 
trn expressed cn ci condition labeling transition tri 
set actions form notify output parameter value needs delivered receiver user task example postprocessing task qp completed qp true notify mq andrew 
tuple indicates execution qp completed task mq notified completion value output parameter sent andrew 
concepts precondition postprocessing task defined possess advantageous features 
firstly knowledge precondition postprocessing execution task expressed form tuples provide possibility store operate knowledge powerful coordination models tuple spaces 
life cycle information associated tuples indicating long tuple available tuple space 
potential overhead tuple space avoided tuples removed automatically expire 
secondly design precondition postprocessing tuples considers control flow data dependencies personal composite services 
particular execution task completed output parameters values needed entities user tasks composite services dispatched 
context awareness tuples 
major pieces context information relevant execution personal composite services current time user current location 
assumed current time known entities participating execution derived system clock 
user location hand known maintained user agent component role facilitate orchestration personal composite services behalf mobile users 
order achieve context awareness particular take account pieces context information control tuples encoding context awareness rules placed user agent tuple space composite service execution 
example control tuple placed user agent tuple space capture fact user agent detects user enters location location needs communicated services participating personal composite service execution entered newl true newl sc newl new location mobile user sc set involved web services 
exception handling tuples 
numerous situations prevent smooth execution personal composite service 
obstacles multiple ranging dynamic nature web reduced capabilities mobile devices 
support adaptive execution personal composite services internet services pro active capable adapting reaction run time exceptions 
distinguish levels exceptions user level service level 
user level exceptions due characteristics mobile devices display size changes personal composite services launched users 
mobile device disconnected due discharged battery alignment antennas lack coverage area 
result service results delivered user 
service result may able displayed mobile device lack appropriate facilities device display graphics 
exceptions user level changes personal composite services 
example andrew may want change preferences specific task spatial constraint qb qv qp lecture room rescheduled lecture held quad quad 
service execution different exceptions occur 
particular selected web service executes task personal composite service may unavailable overloaded respective server 
qos parameters service may changed service provider increased execution price 
specific task personal composite service new web services better qos may available 
exception handling tuple acts instruction execute actions specific exception events occur specific conditions hold 
exception events generated response changes service execution states 
examples events mobile device disconnection services failure violation qos constraints 
example exception handling tuples arrived true transform ts ts transformation service user agent 
note description transformation services outside scope space reasons 
rule specified user indicates result service displayed user current device result sent service ts adaptation forwarded control tuples generation creation control tuples personal composite service occurs various stages 
process template designer defines control tuples design time capture failure handling policies see section behavior personalized user 
tuples created way injected control tuple spaces relevant entities component services service communities process template available users 
process template personalized resulting personal composite service executed user agent automatically generates injects control tuples precondition postprocessing tuples preferences specified user information encoded process template 
personalized service executed user agent keeps adding tuples tuple spaces participating services information receives user tuples context awareness tuples exist tuple space user agent tuple space 
generation precondition postprocessing tuples task personal composite service complex challenging information encoded statechart control flow data dependencies personal composite service needs extracted analyzed 
follows describe algorithms generation postprocessing precondition tuples 
algorithm generating postprocessing tuples task takes input task produces set postprocessing tuples 
algorithm analyses data dependencies output parameters od detailed description qos parameters 
outgoing transitions tr 
od set actions created indicating outputs delivered receivers 
postprocessing set union postprocessing tuples associated tr 
postprocessing tuples outgoing transition task generated function named takes input transition tr returns set postprocessing tuples including postprocessing actions associated transition 
various cases exist 
tr leads basic state say tuple completed source tr notify created meaning execution task completed condition true notification sent tr points compound state postprocessing tuple generated initial transition compound state 
tr points final state compound state outgoing transitions compound state considered turn postprocessing tuples produced 
similarly algorithm generating precondition tuples task precond relies personalized attributes task temporal spatial constraints input parameters control flows associated task 
task incoming transitions analyzed precondition generated incoming transition task 
space reasons omit description algorithm 
implementing pcap section overview status pcap prototype implementation 
prototype architecture see consists user agent process manager pool services implemented java 
describe implementation process definition environment called process manager specifying managing process templates set pre built classes act middleware enabling self orchestration personal composite services 
process definition environment process definition environment consists set integrated tools allow template providers create process templates templates service discovery engine process template builder 
process template builder assists template providers defining new templates editing existing ones 
template definition edited visual interface 
template builder offers editor describing statechart diagram process template extension previous 
template service discovery engine facilitates advertisement location processes services 
implementation universal description discovery integration uddi process service template repository 
web service providers register services discovery engine 
web service description language wsdl specify web services 
user agent interacts user service process template provider interacts process manager personal process service template discovery service template advertisements template service discovery engine personal service execution engine uddi registry template discovery process template builder internet communities member inject tuples services legend wireless connection tuple space event manager event source monitor execution controller fig 

architecture pcap prototype pre built classes user resp service wishing participate platform user resp administrator service needs download install set pre built class user agent resp task controller event manager event source monitor 
user agent 
user agents specifying executing personal composite services 
user agent consists personal process execution engine 
process generates personal services users customizing process templates user preferences 
provides interface mobile user implemented pocket pc emulator 
currently org open source designed run mobile information device profile environment palmos parse xml documents mobile devices 
personalized service translated xml document subsequent analysis processing execution engine 
user agent maintains user profile 
interface provided mobile user create modify profile information 
execution engine provides method called deploy responsible generating control tuples task personal composite service approach section 
control tuples uploaded tuple spaces corresponding selected web services tuple space user agent shown architecture 
task controller 
functionalities task controller realized java class called controller 
class provides services capabilities participate service management including exception handling 
provides method called coordinate receiving messages managing service instances creating deleting instances registering events event manager triggering actions tracing service invocations communicating controllers 
controller class service 
controller relies control tuple space associated service manage service activities 
tuple space represented local xml repository 
controllers monitor control service activities creating reading tuples associated space injecting uploading tuples spaces associated peers 
event manager event source monitor 
event manager event source monitor attached service user agent 
event source monitor detects modifications event sources 
example event source event entered mobile user current location 
event manager fires distributes events 
components mapped classes called respectively 
provides methods receiving messages including subscribing messages controllers event source information notifying fired events subscribed controllers 
particular class implements process runs continuously listening incoming messages 
messages subscribe monitor 
messages subscribing events messages notifying detected event source information 
receives message examines identifier message proceeds follows subscribing message extracts controller subscribed event add controller array event maintains subscribers event ii monitor message extract event source information fire corresponding event 
design implementation pcap framework enabling personalized composition adaptive provisioning web services 
web services focused low level standards publishing discovering provisioning web services wired environments benefit stationary users deemed appropriate put forward novel solutions alternatives benefit mobile users 
main contributions pcap include personalized composition web services considering users preferences temporal spatial constraints ii distributed execution personal composite services coordinated tuple space orchestration model iii run time exceptions handling 
far implemented prototype realizes specification execution personal composite services 
implementation effort served validate viability proposed approach 
ongoing includes assessing performance scalability pcap 
direction add flexibility pcap exception handling capability supporting runtime modifications schema personal composite service removing task 

chen petrie ubiquitous mobile computing 
ieee internet computing 
mascolo capra emmerich mobile computing middleware survey 
advanced lectures networking networking pisa italy 
jacobsen push oriented location services 
proc 
th vldb workshop technologies services vldb tes berlin germany 
harel naamad statemate semantics statecharts 
acm transactions software engineering methodology 
benatallah sheng dumas self serv environment web services composition 
ieee internet computing 
classification network mobile location services 
eds mobile commerce technology theory applications 
idea group publishing 
sheng benatallah composite web services provisioning environment fixed mobile computing resources 
information technology management journal special issue workflow business kluwer academic publishers forthcoming 
zeng benatallah dumas sheng quality driven web services composition 
proc 
th international world wide web conference www budapest hungary 
roman hess ranganathan campbell nahrstedt middleware infrastructure active spaces 
ieee pervasive computing 
griswold boyer brown truong component architecture extensible highly integrated context aware computing infrastructure 
proc 
th international conference software engineering oregon portland 
schuster georgakopoulos cichocki baker modeling composing service process multi enterprise processes 
proc 
th int 
conference advanced information systems engineering caise stockholm sweden springer verlag 
casati shan dynamic adaptive composition services 
information systems 
ahuja carriero gelernter linda friends 
computer 
sheng benatallah dumas mak self serv platform rapid composition web services peer peer environment 
proc 
th large database conference vldb hong kong china 
