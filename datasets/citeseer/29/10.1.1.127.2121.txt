physical database design data warehouses juan labio dallan quass brad department computer science stanford university cs stanford edu quass mail data warehouses collect copies information remote sources single database 
remote data cached warehouse appears local relations users warehouse 
improve query response time warehouse administrator materialize views defined local relations support common complicated queries 
unfortunately requirement keep views consistent local relations creates additional overhead remote sources change 
warehouse kept loosely consistent sources periodically refreshed changes sent source 
happens warehouse taken line local relations materialized views updated 
views called virtual views 
queries written terms materialized views usually significantly faster queries terms view tuples stored having computed 
materialized views computed stored inconsistent deltas sources applied base relations 
order materialized view consistent base relations derived view may recomputed scratch incrementally maintained calculating just effects deltas view 
effects captured view maintenance expressions :10.1.1.91.5064
example view materialized maintenance expression calculating tuples insert due insertions denotes insertions sizes views warehouse usually large changes small comparison cheaper incrementally maintain view recompute scratch 
incrementally maintaining number materialized views warehouse cheaper recomputing views scratch may involve significant processing effort 
avoid impacting clients querying warehouse views view maintenance usually performed night time warehouse unavailable answering queries 
major concern warehouses approach views maintained time available querying morning 
cost maintaining view differs depending views available 
incorrect calculate cost maintaining original view additional views isolation 
order derive total cost necessary consider view selection index selection 
find optimal solution solve optimization problem globally 
approach proposed ross consider indices exhaustively search :10.1.1.133.404
exhaustive search impractical large problems illustrates complexity problem provides basis comparison solutions 
exhaustive algorithm works follows stage described subset supporting views subset indexes compute total cost keep track supporting views indexes obtain minimum cost choosing views step consider possible subsets set candidate views proposed consider candidate views distinct nodes appear query plan primary view :10.1.1.133.404
primary view materialized included candidate view set 
example view general view joining relations roughly different nodes appear query plan view joining possible subset base relations 
order derive total cost necessary consider view selection index selection 
find optimal solution solve optimization problem globally 
approach proposed ross consider indices exhaustively search :10.1.1.133.404
exhaustive search impractical large problems illustrates complexity problem provides basis comparison solutions 
exhaustive algorithm works follows stage described subset supporting views subset indexes compute total cost keep track supporting views indexes obtain minimum cost choosing views step consider possible subsets set candidate views proposed consider candidate views distinct nodes appear query plan primary view :10.1.1.133.404
primary view materialized included candidate view set 
example view general view joining relations roughly different nodes appear query plan view joining possible subset base relations 
consider possible subsets need evaluate roughly different view states 
choosing indexes consider possible subsets set candidate indexes candidate indexes defined finkelstein indexes attributes attributes selection join predicates 
see section explanation standard approaches index selection appropriate 
computing total update cost particular view index state chosen obtaining total cost query involves finding efficient query plan view maintenance expressions 
vis problem single primary view joining base relations contains roughly query optimization problems general case 
query optimization complicated presence materialized views optimizer determine materialized view query plan evaluating maintenance expression 
problem known answering queries views :10.1.1.54.6954
complicate matters batch changes generate multiple maintenance expressions need evaluated 
happens due different types changes base relations 
maintenance expressions optimized group possible common subexpressions :10.1.1.133.404
problem known multiple query optimization problem :10.1.1.120.2371
query optimization complicated presence materialized views optimizer determine materialized view query plan evaluating maintenance expression 
problem known answering queries views :10.1.1.54.6954
complicate matters batch changes generate multiple maintenance expressions need evaluated 
happens due different types changes base relations 
maintenance expressions optimized group possible common subexpressions :10.1.1.133.404
problem known multiple query optimization problem :10.1.1.120.2371
consider base relations view 
create view select shows expression dag includes nodes appear query plan assuming selection pushed :10.1.1.133.404
view result applying selection condition view set operations derive view 
problem known answering queries views :10.1.1.54.6954
complicate matters batch changes generate multiple maintenance expressions need evaluated 
happens due different types changes base relations 
maintenance expressions optimized group possible common subexpressions :10.1.1.133.404
problem known multiple query optimization problem :10.1.1.120.2371
consider base relations view 
create view select shows expression dag includes nodes appear query plan assuming selection pushed :10.1.1.133.404
view result applying selection condition view set operations derive view 
example view derived result joined result joined result 
happens due different types changes base relations 
maintenance expressions optimized group possible common subexpressions :10.1.1.133.404
problem known multiple query optimization problem :10.1.1.120.2371
consider base relations view 
create view select shows expression dag includes nodes appear query plan assuming selection pushed :10.1.1.133.404
view result applying selection condition view set operations derive view 
example view derived result joined result joined result 
intermediate results materialized supporting view 
definition section set candidate supporting views assuming materialized data warehouse base relations possible subset materialized supporting views warehouse order minimize total maintenance cost 
example view derived result joined result joined result 
intermediate results materialized supporting view 
definition section set candidate supporting views assuming materialized data warehouse base relations possible subset materialized supporting views warehouse order minimize total maintenance cost 
addition indexes base relations supporting views need considered 
useful think expression dag considering different update paths changes base relations take propagated view :10.1.1.133.404
update path corresponds specific query plan evaluating view maintenance expression 
example maintenance expression propagating insert result graph depicts possible update paths expression shown rs rst st 
example schema 
rt choice update path affect indexes get materialized 
cost max benefit guarantee actual maintenance cost compensated benefit 
note function achieves considerable pruning improved 
function cost differs depending view index 
index function returns cost maintaining insertions deletions propagated view 
details cost model :10.1.1.127.2121
view function returns cost propagating insertions base relations referenced plus cost propagating deletions updates base relations referenced assuming appropriate index exists 
note view overestimate cost propagating insertions assuming views materialized compensated max benefit 
function max benefit differs depending view index 
consider case index 
problems gets larger due views selection predicates relative performance increases 
may possible derive tighter lower bound algorithm vast improvement previously proposed algorithms 
rules thumb algorithm section yields optimal solutions achieving impressive pruning 
due doubly exponential nature vis problem views computed base relations may large handle 
fortunately finding optimal solution critical solutions close optimal :10.1.1.127.2121
required avoid poor view sets pick index set 
section propose rules thumb help guide choosing reasonable set supporting views indexes resorting full algorithm 
underlying theme rules thumb materialize supporting view index benefit greater cost 
rules thumb function similarly rule join small relations query optimization 
underlying theme rules thumb materialize supporting view index benefit greater cost 
rules thumb function similarly rule join small relations query optimization 
hard fast rules rules apply general 
due space constraints just list rules section 
full justification rule thumb analysis experimentation :10.1.1.127.2121
rule materialize supporting view size terms pages sum sizes views base relations derived 
rule materialize supporting view having deletions updates 
rule considering materialize supporting view ratio size size memory buffer matter 
rule build index supporting view attribute key base relation involved deletions updates number deletions updates base relations involved exceed number pages number insertions deletions exceed number pages rule build index supporting view attribute involved join condition primary view involved number insertions base relations involved involved primary view exceed number pages number insertions deletions exceed number pages rule don build index base relation attribute involved selection condition indexes attributes involved join conditions built view materialized selective number deletions updates exceed number pages rule build index supporting view attribute rules final condition hold index fits memory 
experimental results section results borne directly experimentation 
particular attempt answer questions views indexes better space constrained 
sensitive optimal solution estimates system parameters 
due space constraints results representative experiment question performed 
addition full version consider protected updates treated atomically split pairs insertions deletions :10.1.1.127.2121
experiments shown section run view condition selectivity 
relative cardinalities relations tuples schema composed relations believe results general explored number larger schema heuristic search algorithms results far support reported 

denotes number shown find optimal set supporting views indexes materialize order minimize total maintenance time 
second algorithm consider index selection view indices 
shown section index selection significant impact choosing subviews materialize 
relaxing assumptions invalidates algorithm 
treatment subject 
ross examines problem :10.1.1.133.404
describe exhaustive search algorithm solve vis problem considering indexes 
propose heuristics pruning space search 
extended considering indexes developing rules thumb presenting improved optimal algorithm 
implemented algorithm generate experimental results 
extended considering indexes developing rules thumb presenting improved optimal algorithm 
implemented algorithm generate experimental results 
looked choosing set primary views cost minimized ensuring costs high 
considers problem case distributed views 
investigated problem case aggregate views :10.1.1.41.1205
tsatalos consider materializing views place base relations order improve query response time :10.1.1.50.3586
look problem adding set features database 
particular index selection part vis problem studied context physical database design 
choosing indexes materialized views straightforward extension 
implemented algorithm generate experimental results 
looked choosing set primary views cost minimized ensuring costs high 
considers problem case distributed views 
investigated problem case aggregate views :10.1.1.41.1205
tsatalos consider materializing views place base relations order improve query response time :10.1.1.50.3586
look problem adding set features database 
particular index selection part vis problem studied context physical database design 
choosing indexes materialized views straightforward extension 
troublesome previous algorithms require queries frequencies base relation inputs 
rule condition maintenance previous active database production systems relates vis problem described 
authors considered evaluate trigger conditions rules 
considered view maintenance problem rule triggered view satisfies condition non empty 
wang hanson study production system algorithms rete treat perform database environment 
extension treat called treat considered :10.1.1.46.2504
considered choose supporting views trigger condition view 
terminology rule thumb developed materialize supporting view self maintainable maintained changes base relations referencing changes view referencing base relations 
true environment 
general insertions base relations join view self maintainable approach materialize join view 
size deltas sets relatively small means index joins usually cheaper nested block joins 
assume indexes exist attributes involved selection join conditions 
data warehousing environment studied large number changes propagated cost maintaining indexes outweighs benefit obtained doing index joins 
considered vis problem aspect choosing physical designs relational databases data warehouses 
described implemented optimal algorithm vastly prunes search space compared previously proposed algorithms :10.1.1.133.404
algorithm impractical real world problems developed rules thumb view index selection 
running experiments optimal algorithm studied space best constrained materializing indexes supporting views 
results indicate building indices key attributes primary view lead solid maintenance cost savings modest storage requirements 
plan develop compare number heuristics pruning exhaustive search space solutions limited search 
acm transactions database systems 
forgy 
rete fast algorithm pattern object pattern match problem 
artificial intelligence 
griffin libkin :10.1.1.91.5064
incremental maintenance views duplicates 
carey schneider editors proceedings acm sigmod international conferenceon management data pages san jose ca may 
gupta mumick subrahmanian 
maintaining views incrementally 
carey schneider editors proceedings acm sigmod international conferenceon management data pages san jose ca may 
gupta mumick subrahmanian 
maintaining views incrementally 
proceedings acm sigmod international conference management data washington dc may 
hanson :10.1.1.46.2504
rule condition testing action execution ariel 
proceedings acm sigmod pages 
harinarayan rajaraman ullman :10.1.1.41.1205
implementing data cubes efficiently 
proceedings acm sigmod international conference management data washington dc may 
hanson :10.1.1.46.2504
rule condition testing action execution ariel 
proceedings acm sigmod pages 
harinarayan rajaraman ullman :10.1.1.41.1205
implementing data cubes efficiently 
proceedings acm sigmod 
labio quass :10.1.1.127.2121
physical database design data warehouses vis problem 
proceedings acm sigmod pages 
harinarayan rajaraman ullman :10.1.1.41.1205
implementing data cubes efficiently 
proceedings acm sigmod 
labio quass :10.1.1.127.2121
physical database design data warehouses vis problem 
technical report stanford university 
available anonymous ftp db stanford edu pub labio 
levy mendelzon sagiv srivastava :10.1.1.54.6954
labio quass :10.1.1.127.2121
physical database design data warehouses vis problem 
technical report stanford university 
available anonymous ftp db stanford edu pub labio 
levy mendelzon sagiv srivastava :10.1.1.54.6954
answering queries views 
proceedings fourteenth symposium principles database systems pods pages san jose ca may 
miranker 
treat better match algorithm ai production systems 
proceedings aaii conference artificial intelligence pages august 
nilsson 
problem solving methods artificial intelligence 
mcgraw hill 
ross srivastava sudarshan :10.1.1.133.404
materialized view maintenance integrity constraint checking trading space time 
proceedings acm sigmod 
roussopoulos 
view indexing relational databases 
ieee transactions knowledge data engineering june 
segev zhao 
data management large rule systems 
proceedings international conference large data bases pages 
sellis :10.1.1.120.2371
multiple query optimization 
acm transactions database systems 
tsatalos solomon ioannidis :10.1.1.50.3586
gmap versatile tool physical data independence 
proceedings international conference large data bases pages 
sellis :10.1.1.120.2371
multiple query optimization 
acm transactions database systems 
tsatalos solomon ioannidis :10.1.1.50.3586
gmap versatile tool physical data independence 
proceedings international conferenceon large data bases pages 
wang hanson 
performance comparison rete treat algorithms testing database rule conditions 
