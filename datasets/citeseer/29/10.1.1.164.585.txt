packet world test bed investigating situated multi agent systems danny weyns alexander tom holvoet 
research situated multi agent systems investigates model distributed application set cooperating autonomous entities agents situated environment 
fundamental issues remain research area 
profound understanding issues necessary situated multi agent systems applied industry strength applications 
application called packet world quite extensively test bed investigating experimenting evaluating fundamental concepts mechanisms 
examples active perception decision making situated agents synchronization simultaneous actions indirect coordination 
packet world direct connections real world applications decentralized control warehouse transportation system unmanned vehicles 
article describe packet world give overview research packet world test bed 
keywords 
test bed situated multi agent system environment perception action selection protocol communication synchronization simultaneous actions stigmergy automated warehouse transportation system automatic guided vehicle 

years multi agent systems mass put forward paradigm tackle increasing complexity distributed applications 
agent autonomous entity capable interacting agents order satisfy design objectives natural concept manage complexity decentralized manner 
agents encapsulate behavior able adapt changes completed support concerted research action agents coordination control project modular controls concept project 
danny weyns alexander tom holvoet environment 
mass applied success practice issues remain open research 
thing researchers application developers clear mass complex systems 
test beds important investigating experimenting evaluating fundamental concepts mechanisms mass benefits obtained research results demonstrated real world applications 
research focusses situated mass mass agents explicitly placed environment 
article packet world 
packet world test bed investigating situated mass developed java 
show packet world inspired research years explain test bed evaluation 
examples concepts mechanisms discuss active perception decision making situated agents synchronization simultaneous actions indirect coordination 
current research project industrial partner investigate paradigm situated mass applied control automated transportation systems automatic guided vehicles agvs transport loads warehouse 
project validate research results obtained packet world complex real world case 
agv case shows packet world serve application represents family real world applications situated mass may suitable solution 
article structured follows 
section briefly introduces situated mass section packet world 
section discusses underlying architecture packet world 
elaborate main architectural concerns packet world section 
section zooms advanced forms collaboration 
section illustrate analogy packet world automated warehouse transportation system 
draw 

situated multi agent systems situated mas computing system composed distributed environment populated set localized agents cooperate solve complex problem decentralized way 
situated agents entities encapsulate behavior maintain state 
local access environment agent placed local context perceive act interact agents 
situated agent long term planning decide action sequence executed selects actions basis position state world perceives limited internal state 
words situated agents act 
intelligence situated mas originates interactions agents individual capabilities 
packet world test bed investigating situated mass approach situated mass long history 
brooks identified embodiment emergence intelligence :10.1.1.12.1680:10.1.1.18.4669
steels deneubourg introduced basic mechanisms agents coordinate environment gradient fields marks 
maes adopted early robot oriented principles reactivity broader context software mass rosenblatt payton tyrrell balch arkin explored underlying fundamentals reactivity situatedness developed new architectures situated agents enable better adaptive behavior support flexible design early days hard wired stimulus response structures 
drogoul dorigo parunak researchers drew inspiration social insects adopted principles situated mass situated mass applied success practical applications broad range domains :10.1.1.145.8411
examples manufacturing control supply chains systems network support peer peer systems 
benefits situated mas known striking efficiency robustness flexibility 
wooldridge points number limitations situated mass wooldridge argues situated agents take account local current information inherently take short time view decision making 
complex problem domains suitable apply agent technology manufacturing control ad hoc networks nature distributed highly dynamic 
domains questionable feasible useful agents collect global information long term view situation 
problem raised wooldridge principled methodology engineer situated agents particular respect desired behavior system 
relationship local interactions agents global behavior mas complex open problem need extensive research 

packet world test bed huhns stephens propose research exercise tackle number open research questions regarding situated mass problem domain exercise composed dimensional grid consisting packages destinations 
domain robots move packages correct destination 
goal exercise investigate conditions robots develop social conventions robots take advantage information communicated 
exercise inspiration developing packet world 

basic setup packet world basic setup packet world consists number differently colored packets scattered rectangular grid 
agents live virtual world collect packets bring correspondingly colored danny weyns alexander tom holvoet packet world 
local view agent 

example packet world 
destination 
call job task agents deliver packets world 
fig 
shows example packet world size agents 
colored rectangles symbolize packets manipulated agents circles symbolize destinations 
packet world agents interact environment number ways 
agents allowed step time free neighboring cell 
agent carrying packet pick packet neighboring cells 
agent put packet carries free neighboring cells course destination point particular packet 
sensible action agent perform may wait 
acting environment agents send messages 
particular agents request information packets destinations ask set collaborations 
performing actions requires energy 
agents equipped battery 
energy level battery vital importance agents 
battery charged available battery 
charger emits gradient 
gradient values battery combined single gradient field 
navigate battery charger agents follow field direction decreasing gradient values 
example fig 
charger indicated battery symbol 
value gradient field indicated small number bottom left corner cell 
intensity field increases away charger 
important notice agent packet world limited view world 
view range world expresses far packet world test bed investigating situated mass squares agent perceive neighborhood 
illustrates limited view agent example view range 
goal agents perform job efficiently minimum number steps packet manipulations message exchanges 
monitor packet world counters measure efficiency agents performing job 
counter measures energy consumed agents 
stepping packet packet picking packet putting communicating messages energy cost 
default agent step carrying packet consumes unit energy stepping packet requires units energy 
energy required pick packet put unit 
waiting doing free charge 
second counter measures number messages sent 
default counter simply increments message transferred agents 
performance calculated weighted sum energy consuming activities 

objectives packet world past test beds mass developed 
famous probably tileworld 
original tileworld consists grid cells agent pick move tiles holes 
tiles holes appear disappear rates determined parameters simulator 
parameters enable user tune experiments order examine particular aspects interest 
tileworld evaluating kinds agent architectures see 
contrast tileworld agent operates packet world collection agents solve problem 
central packet world global problem solving local interaction situated agents 
focus packet world conceptual exploration situated mass testing 
years applied packet world test bed investigating issues situated mass perception environment simultaneous actions direct indirect communication timing issues execution control different forms collaborations adaptability 
course research introduced extensions packet world heavy packets manipulated agents simultaneously pheromones flags gradient fields enable agents coordinate indirectly 
underlying architecture packet world section discuss underlying architecture packet world 
clarify main characteristics architecture 
give graphical overview architecture briefly explain essential building blocks interrelationships 
danny weyns alexander tom holvoet 
characteristics architecture early school reactive mass originated rejection classical agency symbolic ai 
nowadays original opposition tends evolve convergence integration 
pioneer synergetic vision mass ferber 
line evolution developed new perspective situated mass resulting architecture main characteristics 
environment modeled class entity processes manage state environment 
environment observable agents serves regulating entity defines rules enforces effects agents inter actions 

situated agents processes active environment 

situated agents approached social entities capable commit situated context 

architecture developed state art software engineering principles complies rules separation concerns reuse ability 

overview architecture depicts high level overview architecture situated multi agent systems :10.1.1.3.5385
model action ferber theory influences reactions 
theory agents produce influences environment subsequently environment reacts combining influences deduce new state world 
reification actions influences enables environment combine simultaneously performed activity system 
architecture integrates primary abstractions agents ongoing activities environment 
look agent architecture 
module maps local state environment percept agent 
model active perception enables agent direct perception relevant aspects environment current task 
discuss perception packet world section 
module uses percept update current knowledge agent 
module responsible action selection 
decision module set free flow activity tree 
enhance social behavior agents extended free flow trees concepts role situated commitment 
role maps subtree covers logical functionality agent 
situated commitment enables agent bias action selection actions role plays commitment 
elaborate agent decision making packet world section 
module takes care communicative interactions 
communication module processes incoming messages produces outgoing messages defined communication protocols 
agents typically modify state current knowledge situated packet world test bed investigating situated mass 
overview architecture 
commitments commutative interactions 
discuss communication packet world section 
agents architecture integrates concept ongoing activity model processes may produce activity system 
examples ongoing activities moving objects pheromones environmental variables temperature 
ongoing activity defined 
ongoing activities produce influences environment depending current state environment 
discuss kinds ongoing activities packet world section 
module environment handles message transport 
collector module collects influences agents ongoing activities mas passes sets simultaneously performed activity reactor module 
reactor calculates set domain specific laws reaction state changes environment 
dealing actions packet world subject section 
determine simultaneity actions architecture supports forms synchronization global synchronization agent act lock step regional synchronization agents form synchronized groups basis current locality fine grained synchronization logical time 
elaborate synchronization packet world section 
architectural concerns packet world section discuss architecture packet world 
architecture packet world concrete instantiation architecture danny weyns alexander tom holvoet environment structure decomposed layers 
integrated representation packet world 

layered model environment 
situated mas previous section 
subsequently zoom concerns structure environment perception agent decision making communication execution control timing 

structure environment concern investigated packet world structure environment 
environment packet world grid structure 
modeled environment collection grid layers see fig 

layer hosts particular kind item examples agent layer pheromone layer relations defined items different layers agent agent layer hold packet packet layer 
aggregate layers populated items interrelationships represent state world perceived agents 
layer defines set constraints items layer packets located location packet layer 
addition combined locations items different layers constrained 
example inter layer constraint agent located position destination agents allowed move destination 
layered structure environment advantages 
improves extensibility re usability 
relatively simple add new layer environment needed layers reused different versions packet world 
second layered structure simplifies generation agent perception calculation effects actions 
allow agent perceive environment selectively corresponding layers environment taken account generate perception 
laws apply agents act environment explicit means item generic type objects agents packet world 
packet world test bed investigating situated mass 
module top detail module bottom 
constraints defined particular layer constraints defined layers 
elaborate issues sections 

perception perception software mass relatively unexplored research domain 
investigated perception packet world developed model active perception enables agent direct perception current tasks 
gives overview perception module agent 
module perception decomposed functional modules sensing interpreting filtering 
state environment representation 
mapping state representation depends factors 
agent select set foci 
focus selection enables agent direct perception allows agent sense environment specific types information 
examples foci packet world see ai range ai range 
focus see ai range expresses agent ai intends perceive visible items distance defined range measured current position 
examples visible items packet world packets destinations battery agents 
smell ai range focus agent expresses intention smell neighborhood typically sense pheromones see section 
second representation environment state composed set perceptual laws 
perceptual law constrains composition representation requirements danny weyns alexander tom holvoet modeled domain 
perceptual laws instrument designer model domain specific constraints perception 
contrary physical sensing incorporates constraints naturally virtual environments model constraints explicitly 
example perceptual law packet world law specifies items agents able see neighborhood 
agents ai requests perception focus see ai general view range law cut perceived area range cells relative agents current location 
agent requests perception focus see ai returned representation contain visible items range cells 
generation representation responsibility environment handled see fig 

second functionality perception interpreting 
representation percept 
interpret representation agents descriptions 
descriptions blueprints enable agents extract percepts representations 
percepts describe sensed environment form expressions understood internal machinery agent 
example representation contains number packets certain area 
agent interprets representation may choose description interpret distinguished packets description interpret group packets cluster 
third final functionality active perception filtering set filters agent able select items percept match specific selection criteria 
filter imposes conditions elements percept 
conditions determine elements percept pass filter 
example agent selected focus visually perceive environment currently interested agents range cells select appropriate filter select agent 

agent decision making architectural concern investigated packet world decision making 
model agent action selection packet world free flow trees 
existing free flow trees designed viewpoint individual agents lack support explicit social behavior 
enable explicit social behavior situated agents extended free flow trees concepts role situated commitment 
fig 
depicts simplified partial action selection model agent packet world 
receive information internal external stimuli form activity 
activity values internal stimuli directly derived agent current knowledge values external stimuli indirectly derived perception module 
nodes feed activity hierarchy 
activity flow arrives action nodes leaf nodes tree winner takes process decides action selected 
fig 
depicts detail node collects activity parent node carry packet stimulus feeds combined activity hierarchy 
packet world test bed investigating situated mass free flow tree 
detail flow 

action selection agent packet world 
define role subtree hierarchy covers logical functionality agent 
root node subtree denoted top node role 
role named top node 
role may consist set sub roles sub roles sub sub roles roles agent constantly active contribute final decision making feeding subsets actions activity 
contribution role depends activity accumulated affecting stimuli nodes 
example roles dotted triangles 
role individual agent searches packets brings destination 
role chain composed sub roles head tail denoting roles agents collaboration pass packets chain 
collaboration enables agents deliver packets efficiently destination 
role maintain agent battery 
situated commitment defines relationship role goal role non empty set roles agent source roles 
link source role commitment weight factor determines extent influence associated role situated commitment 
situated commitments name 
explicitly naming commitments enables agents set mutual commitments collaboration 
single agent commit 
connector charging fig denotes situated commitment agent recharge battery 
connectors denote mutual situated commitments agents collaborate chain 
situated commitment example connects single source role individual goal role head 
charging hand connects source roles goal role 
name situated commitment characterized relations set context condition condition activated deactivated addition function 
illustrate characteristics danny weyns alexander tom holvoet consider agent fig commits collaboration pass yellow packets chain agent 
relations set contains identity related agent situated commitment 
relations set agent commitment singleton containing agent 
context describes contextual properties situated commitment 
applied example context situated commitment denotes yellow packets passed chain 
activation deactivation conditions boolean expressions internal state perceived information received data message 
activation condition true situated commitment activated 
situated commitment injects additional amount activity goal role defined addition function 
weight factors links source roles determine fraction activity level top node source role taken account addition function 
top node goal role combines additional activity situated commitment regular activity accumulated stimuli 
activation condition situated commitment agent example receipt agent confirmation collaborate 
soon deactivation condition true situated commitment deactivated 
situated commitment longer influences activity level output node 
deactivation condition commitment agent change environment indicates collaboration finished agent left post recharge battery 
general agent involved different situated commitments time 
top node role may receive activity different situated commitments may pass activity different situated commitments 
activity received different situated commitments combined regular activity received stimuli result 
summarizing agents typically agree mutual situated commitments collaboration direct communication discussed section 
activated situated commitment affect selection actions 
situated commitment induces extra activity hierarchy favoring action selection described goal role situated commitment 
traditional approaches commitment oblige agents communicate explicitly conditions committed cooperation longer hold 
situated commitment typically local context involved agents placed regulates duration commitment 
approach fits general principles situatedness robustness situated multi agent systems 

protocol communication communication multi agent systems traditionally speech act theory 
speech act theory treats communication actions communicative acts considered isolation 
practice speech acts part series logically related communicative acts 
packet world study communication terms protocols 
communication protocols emphasize relationship exchanged messages communicative interactions 
packet world test bed investigating situated mass communication log 
packet world situation 

communication packet world 
define communication protocol set protocol steps 
protocol step tuple conditions effects set boolean expressions determine protocol step applicable 
conditions received messages agent available roles agent state current knowledge status situated commitments 
effects application protocol step composition new message modification agent state 
communicative interaction conversation initiated initial step communication protocol 
stage conversation limited set possible protocol steps 
terminal states determine conversation 
example look communication protocol set chain passing packets packet world see fig 

depicted situation conditions agent set chain fulfilled 
sends cooperation request agent candidate tail 
cooperation request initial step communication protocol 
packet world agents simple fipa acl communication language 
basic version language allows agents request information packages destinations set chains pass packets 
third line fig 
depicts cooperation request agent 
chain refers kind cooperation requested red color packets passed current coordinates agent coordinates destination red packets 
agent investigates proposal 
able pass red packets agent agent sends accept request activates situated commitment shown fig 

fifth line fig 
shows agent accepts request cooperation 
receiving acceptance agent activates situated commitment 
inthe mean time agent requested agent cooperate chain see line danny weyns alexander tom holvoet 
agent packets pass refuses cooperation sends refuse cooperation request see bottom line log panel 
mutual commitments agent agent activated cooperation settled continues situated commitments get deactivated 
deactivation may communicated explicitly cooperation messages may induced changes environment 
example case agent passed packets leaves position find new case agents runs energy leaves position recharge battery agent detect change terminate conversation ends cooperation 

execution control timing radically different concern investigated packet world execution control timing situated mass relative timing order various agents perform activities packet world completely arbitrary due thread scheduling message transport delays variable processor loads execution platform 
providing execution control mechanisms necessary enforce requirements respect relative timing order enabling repeatable simulation results reliable testing 
different approaches execution control supported packet world global synchronization regional synchronization synchronization logical time 

global synchronization 
global synchronization enforces agents packet world act global pace 
agents synchronized perform actions simultaneously 
cycle agent performs action actions agents processed cycle restarts 
main advantage approach simplicity 
global synchronization severely limits agent autonomy agents decide perform action 
agents forced act pace slowest agent entire mas efficiency acting low 
distributed setting approach scales badly centralized synchronizer bottleneck single point failure 

regional synchronization 
compared global synchronization regional synchronization allows synchronization selective increasing efficiency acting agents 
regional synchronization characteristic agents situated mas typically perceive act locally 
packet world regional synchronization algorithm allows agent synchronize agents perceptual range turn agents synchronize agents perceptual range 
applied example view size fig 
regions synchronized agents indicated different colors region consisting agent agent agent region consisting agent agent agent agent forms region currently range agents 
packet world test bed investigating situated mass 
regional synchronization packet world 
agents region synchronized act simultaneously performing actions pace 
different regions hand asynchronous agents region act pace independent pace agents region region 
note regions dynamic kept date agents move 
instance agent performs step northern direction enters perceptual range agent regions merge 
cost regional synchronization overhead communication maintain regional groups synchronized agents 
advantage regional synchronization scalability central synchronizer employed 
execution different regions asynchronous relative timing order actions performed agents belonging different regions guaranteed 
quantitative evaluation regional synchronization refer 

synchronization logical time 
global regional synchronization take account nature actions agents perform handling simultaneous actions reflect characteristics actions real world 
example suppose real world step represents travelling distance meters speed meter second picking packet takes second 
case takes agent times longer perform step pick packet 
synchronization logical time allows developer customize timing action agent characteristics real world reflected model 
packet world synchronization logical time supported means semantic duration models allow developer describe desired timing characteristics packet world mechanism integrates synchronization functionality transparently mas 
consequently danny weyns alexander tom holvoet 
synchronization logical time 
white parts infrastructure hidden developer 
timing packet world changed requiring changes agents 
complexity underlying synchronization infrastructure 
explain working prototype developed uses aspectj integrate approach synchronization packet world see fig 

developer specifies particular semantic duration model agent mas 
semantic duration models enable developer express duration activities agent perform 
duration activity agent period logical time takes effects activity noticeable 
agent ai semantic duration model ri tuples ci agent executes perform particular activity semantic meaning ri constant denoting logical duration activity 
example fig 
model specifies performing move action packet world takes logical time units agent compared units agent 
semantic duration model agents mas aspect time monitor generated agent see fig 

time monitor agent ai contains logical clock agent 
start simulation logical clocks agents zero 
goal aspect hand notify time monitor activities corresponding agent executes 
term activities refer internal deliberation agent perform actions environment perception environment insofar considered semantically relevant simulation 
packet world test bed investigating situated mass aspect weaves code methods defined activities ci agent 
goal inserted code block execution agent soon decides perform activity notify time monitor advances agent logical clock value example simulation starts agent performs move action agent picks packet 
actions intercepted blocked causing logical clock agent advanced agent 
notification time monitor blocking agent execution inserted code represented graphically agent lines fig 

mas time synchronizer ensures activities executed logical clock order 
mas time synchronizer continuously inspects logical clocks agents unblocks agents safe proceed 
example agent smallest logical clock allowed proceed 
consequently agent allowed perform pick packet action previously blocked continues performing move 
causes execution agent intercepted logical clock advanced 
mas time synchronizer compares value logical clock agent value 
causes execution agent unblocked agent remains blocked 
consequently agent performs move followed picking packet 
moment logical clocks agents 
agents unblocked pick packet action agent move agent simultaneous actions occur moment logical time 
note allow agents perform simultaneous actions deliberately agents activity disposal wait particular logical duration action 
fine grained level synchronization comes cost scalability comparable global synchronization 

advanced collaborations packet world previous section discussed forms simple collaborations agents packet world 
examples exchange information packets destinations formation chains deliver packets efficiently 
section zoom advanced forms collaboration packet world 
illustrate collaborations simultaneous actions elaborate different forms collaborations stigmergy 

simultaneous actions packet world introducing possibility agents act simultaneously opens new perspectives collaboration 
extended packet world ways enable agents act simultaneously 
extension possibility neighboring agents transfer packet directly 
example fig 
agent passes packet carries agent 
transfer succeeds involved agents act agent pass packet agent danny weyns alexander tom holvoet 
simultaneous actions packet world 
accepts packet 
extension heavy packets denoted fig 
larger rectangles 
contrary regular packets pick heavy packet agents lift packet short side packet 
agents carry heavy packet move direction 
regular packets heavy packets put free cell delivering point packet 
put heavy packet agents release packet simultaneously 
example fig 
agents step large packet carry 
step succeeds agents step direction 
depicted situation correspond direction southwest destination packet carry 

support simultaneous actions 
avoid race conditions access shared state controlled 
current mechanisms access control locks semaphores monitors provide support interleaving concurrent access shared state 
additional support needed simultaneous actions combined effect differs performing actions sequentially 
enable simultaneous actions agents able act outcome simultaneous actions accordance laws interaction apply mas 
enabling agents act requires model prescribes conditions determine actions happen simultaneously synchronization model support reify actions runtime mechanism resolves actions satisfy conditions 
section discussed different models synchronization applied packet world global synchronization regional synchronization synchronization logical time 
packet world test bed investigating situated mass 
dealing simultaneous actions packet world 
ensuring correct outcome simultaneous actions requires additional support environment 
fig 
depicts model deal simultaneous actions packet world 
agent invokes action environment action reified influence collected influence collector 
collector received complete set influences set simultaneously acting agents passes set reactor 
reactor combines influences valid action laws 
resulting effects passed effector updates state environment 
detailed discussion infrastructure simultaneous actions refer :10.1.1.3.5385

stigmergy flags gradient fields pheromones concept stigmergy introduced grass describe indirect communication individuals social insect colonies 
context mas stigmergy applied various forms indirect communication means markers environment 
stigmergy enables agents influence behavior indirectly manipulation state marks environment learning approaches agents modify internal state feedback received environment 
evaluate applicability stigmergy means communication situated agents world flags gradient fields synthetic pheromones 
global synchronization set contains influence agent mas regional synchronization set contains influences agents region synchronization logical time influences logical time belong set 
danny weyns alexander tom holvoet flag stigmergy 
pheromone trails 

stigmergic communication packet world 

flags 
simple form indirect communication flags agent place environment 
packet world flags studied means solve sparse world problem 
sparse world problem arises couple packets left 
behavior agents inefficient 
agents keep searching packets wasting energy 
agents detect packets remaining run able pick 
cope sparse world problem agents flags mark part world packets 
placing flags agents divide world zones marked unmarked zone 
agents avoid marked zone consider unmarked zone exploration 
agents behavior placing flags satisfy requirements 
destinations times part unmarked zone 
agents forever try search unmarked zone packets collected 
second reason unmarked zone cells belonging unmarked zone connected 
tested various behaviors agents different strategies placing flags 
best results obtained behavior maintaining unmarked zone convex shape see fig 

obtain solution agents start placing flags empty corners 
extra flags placed flags flags borders world 
shortest path remaining packets hand destinations hand lies entirely unmarked zone convex shape excluded 
packet world test bed investigating situated mass 
gradient field emitted battery 

synthetic pheromones 
second important form indirect communication synthetic pheromones see fig 

analogous flags pheromones markers agents place environment 
pheromones exhibit number additional characteristics evaporation aggregation diffusion 
evaporation means strength pheromones diminishes time 
aggregation hand means different pheromones cell combined single pheromone increased strength 
diffusion means pheromones deposited particular cell spread neighboring cells time making agents away perceive 
evaporation diffusion examples ongoing activities see section 
packet world pheromones studied construct trails clusters packets hand destinations hand 
agents search destination start forming pheromone trail searching packets 
way pheromone trail lead destination packet cluster 
packet agent easily deliver packet pheromone trail back destination 
way pheromones provide means stigmergic coordination agents goes limitations agents locality environment 
way back packet cluster destination pheromone trail reinforced 
shorter trails reinforced regularly longer trails tend attractive 
packet world different types pheromones supported undirected pheromones unidirectional pheromones omnidirectional pheromones 
undirected pheromones characterized strength 
unidirectional pheromones contain strength static direction pointing neighboring cells 
omnidirectional pheromones hand limited single direction contain probability distribution possible directions 
danny weyns alexander tom holvoet 
gradient fields 
third form indirect communication gradient fields 
packet world gradient fields agents retrieve battery 
agents packet world equipped battery 
battery provides agent energy necessary perform actions 
regular times agents recharge battery prevent running energy 
order particular cells grid equipped battery charger 
battery charger emits gradient propagates environment 
effects battery combined single gradient field 
gradients fields constructed relying local propagation neighboring cells effect obstacles account 
fig 
value gradient field depicted bottom left corner cell 
value gradient field cell represents minimal distance cell battery charger 
agents compare minimal distance battery charger remaining battery level estimate urgency charging battery 
navigate battery charger agents follow field direction decreasing gradients 

packet world automated warehouse transportation system results study packet world test bed situated mas currently validated research project cooperation industrial expert automating warehouse transportation systems automatic guided vehicles agvs 
agv unmanned computer controlled transportation vehicle uses battery energy source 
agvs perform transportation tasks 
transportation task consists picking load particular location warehouse bringing particular destination 
move location agvs complex network predefined road segments crossroads 
problem context highly dynamic 
environment continuously changes road segments get congested blocked fallen products broken agvs 
second task stream continuously changes transportation tasks created demand 
third agvs temporarily unavailable reasons maintenance battery charging 
responsibilities agv system allocating transportation tasks agvs completing tasks avoiding collisions deadlock charging batteries agvs time 
today design automated warehouse transportation systems centralized control system agvs planner controls agvs 
central system gathers relevant information controls actions agv 
goal project investigate feasibility decentralize system control situated mas aiming improve flexibility 
clear connection packet world industrial automated warehouse transportation system 
agvs agents www com packet world test bed investigating situated mass packet world situated explicit environment 
second agvs packet world agents perform transportation tasks environment 
third automated warehouse transportation system packet world decentralized systems agvs packet world agents limited local view environment 
fourth agvs packet world agents battery energy source regular times 
fifth applications constrained topology 
grid employed packet world automated warehouse transportation system graph topology consisting nodes crossroads edges road segments 
main difference systems agvs deal ongoing problem associated continuous stream transportation tasks packet world stream transportation tasks finite arises agents detect packets destinations 

article packet world 
illustrated packet world test bed research explore evaluate broad range fundamental concepts mechanisms situated mass elaborated structure environment agents perception flexible action selection communication execution control timing simultaneous actions forms stigmergy 
packet world considered application family complex distributed applications 
illustrated direct connections packet world industrial automated warehouse transportation system 
currently research results obtained packet world applied real world application 
java implementation packet world available gnu general public license gpl 
acknowledgment members task force labs leuven contribution article 
eva weyns graphical design packet world 
austin things words 
oxford university press uk 
babaoglu meling anthill framework development agent peer peer systems 
th international conference distributed computing systems vienna austria 
https sourceforge net projects packet world danny weyns alexander tom holvoet balch arkin communication reactive multiagent robotic systems 
autonomous robots 
cooperation coordination fuzzy reinforcement learning agents 
th ieee conference fuzzy systems korea 
bonabeau snyers kuntz theraulaz routing telecommunications networks ant agents 

brooks intelligence representation :10.1.1.12.1680
workshop foundations artificial intelligence ma 
brooks intelligence reason :10.1.1.18.4669
mit ai lab memo 
regional synchronization packet world 
master thesis katholieke universiteit leuven available english 
dorigo gambardella ant colony system cooperative learning approach traveling salesman problem :10.1.1.145.8411
ieee transactions evolutionary computation 
de stigmergy applied packet world 
master thesis katholieke universiteit leuven available dutch 
deneubourg aron goss pasteels random behavior amplification processes number participants contribute foraging properties ants 
physics 
drogoul ferber multi agent simulation tool modeling societies decentralized elsevier 
ferber multi agent systems distributed artificial intelligence 
addison wesley great britain 
grass la theorie de la interpretation du comportement des termites 
vol 

holvoet weyns time management support simulating multi agent systems aamas workshop multiagent multiagent simulation new york 
holvoet weyns time management adaptability multi agent systems 
aisb fourth symposium adaptive agents multi agent systems 
huhns stephens multiagent systems societies agents 
multiagent systems modern approach distributed artificial intelligence mit press 
kinny measuring effectiveness situated agents 
technical report australian ai institute carlton australia 
maes modeling adaptive autonomous agents 
artificial life journal mit press cambridge ma 
parunak go ant engineering principles natural agent systems 
annals operations research 
parunak baker clark agent architecture manufacturing requirements agent system design 
workshop agent manufacturing minneapolis mn 
packet world test bed investigating situated mass pollack ringuette introducing tileworld experimentally evaluating agent architectures eighth national conference artificial intelligence ca 
rosenblatt payton fine grained alternative architecture mobile robot control 
ieee joint conference neural networks 
sauter parunak ants supply chain 
workshop agent decision support managing internet enabled supply chain wa 
steels cooperation distributed agents self organization 
european workshop modeling autonomous agents multi agent world elsevier science publishers holland 
tyrrell computational mechanisms action selection 
phd dissertation university edinburgh 
model environment reactive multi agent systems 
master thesis katholieke universiteit leuven available dutch 
weyns holvoet regional synchronization simultaneous actions situated multi agent systems 
rd international central eastern european conference multi agent systems czech republic lncs springer 
weyns holvoet model simultaneous actions situated multi agent systems 
st international german conference multi agent system technologies germany lncs 
weyns holvoet formal model situated multi agent systems :10.1.1.3.5385
fundamenta informaticae 
weyns holvoet combining adaptive behavior role modeling statecharts 
th international workshop software engineering large scale multi agent systems icse scotland 
weyns holvoet protocol communication situated multi agent systems 
th international joint conference autonomous agents multi agent systems new york 
weyns holvoet active situated multi agent systems 
journal applied artificial intelligence 
weyns holvoet decentralized control gv transportation systems 
th joint conference autonomous agents multi agent systems industry track utrecht 
wooldridge multiagent systems 
john wiley sons england 
information software software packet world available internet full fledged software gnu general public license version 
internet address https sourceforge net projects packet world packet world java test bed investigating situated multiagent systems 
tool allows users experiment various aspects multiagent systems incl 
agent architectures stigmergy communication questions software please email danny weyns cs kuleuven ac danny weyns alexander tom holvoet danny weyns katholieke universiteit leuven department computer science celestijnenlaan leuven belgium mail danny weyns cs kuleuven ac alexander katholieke universiteit leuven belgium mail alexander cs kuleuven ac tom holvoet katholieke universiteit leuven belgium mail tom holvoet cs kuleuven ac 
