coral adding object orientation logic database language divesh srivastava university wisconsin madison praveen seshadri university wisconsin madison raghu ramakrishnan university wisconsin madison bell labs murray hill coral database programming language integrates coral type system 
data model allows arbitrary objects database facts declarative query language extends coral expressions rules 
coral supports imperative rule sub language integrated providing support updates 
design implementation coral incorporates important decisions data model class definitions method invocations handled entirely compiler notion classes kept orthogonal re divesh srivastava praveen seshadri supported david packard foundation fellowship science engineering presidential young investigator award matching dec tandem xerox nsf 
addresses authors computer sciences department university wisconsin madison wi usa bell laboratories mountain avenue murray hill nj usa 
authors mail addresses divesh raghu praveen bcs wisc edu att com 
department head name 
creating objects coral objects created constructor methods specified class definition deleted methods specified class definition 
coral requires objects instances classes explicitly created database populated objects 
coral declarative language create facts describing relationships existing objects database 
rules coral deliberately restricted avoid creating new objects issue understood despite maier kifer :10.1.1.50.9598
number issues notably resolution conflicts rules generate distinct objects object identifier remain unclear especially presence partially specified objects fields variables coral context 
similarly updating deleting objects instances classes performed imperative language 
methodology stems view query language declarative creating updating deleting objects operational notions 
coral imperative lan lw coral declarative language create objects instances classes delete objects update objects 
ldl deductive database system type system extends ldl data type facility supports inheritance predicate valued methods 
support object sharing adt extents support encapsulation object identity limited 
consequently data model rich coral data model 
ldl methods defined ldl rules done naturally coral 
proposals non horn logics xsql extends sql adding path expressions may variables range classes attributes methods :10.1.1.50.9598
facilitates querying schema information instance level information object oriented databases single declarative query language 
noodle declarative query language sword declarative objectoriented database 
coral xsql noodle path expressions access attributes invoke methods objects 
noodle uses syntax reminiscent hilog purpose 
noodle uses syntax reminiscent hilog purpose 
noodle number built classes facilitate schema querying 
lo combines modeling capabilities object oriented semantic data models similar noodle logic language querying implementing methods uses higher order syntax order semantics 
coral methods aspects data abstraction borrowed viewed outside scope deductive machinery notably unification mechanism 
comprehensive treatment features path expressions xsql may enable efficient processing certain queries :10.1.1.50.9598
attempt give features logical semantics simply borrow semantics order enable ease implementation 
semantic foundations xsql logic noodle hilog features difficult support efficiently bottomup implementation 
particular variables get bound predicate names run time causes problems analysis strongly connected components sccs semi naive evaluation inefficient 
contrast design motivations coral language rich expressive power efficiently evaluated framework existing evaluation techniques 
