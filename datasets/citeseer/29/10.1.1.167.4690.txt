description logics data management alexander borgida october description logics reasoners descendants kl language studied depth arti cial intelligence 
brief survey application problems information management framework information server equipped operations involving languages 
speci cally indicate achieve enhanced access data knowledge descriptions languages schema design integration queries answers updates rules constraints 
keywords description concept terminological language subsumption knowledge representation schema intension object centered 
large class practical computer applications requires managing symbolic model application world updated queried users 
systems start intuition describing situation useful think various kinds individuals calculus gauss related relationships taughtby grouped classes course teacher student 
note express question prolog theoretically answer clauses fact treated de nitions child son male semantics predicate completion prolog 
took seriously rule son de nition asserting son fred ought allow deduce child fred deduction current logic programming systems 
reasoning de nitions trademark description logics 
analogy extends example outline readers familiar database management provides tutorial survey descriptions reasoners enhance modeling power database kinds knowledge world stored facilitate user interaction support development databases 
readers arti cial intelligence dls descendants uential kl system extensively studied name terminological logics :10.1.1.101.9341
features history logics surveyed papers 
aim provide audience novel systematic look various uses dls put information management view considerably broader usually assumed arti cial intelligence considering syntax semantics description languages illustrating kinds reasoning especially suited 
semi formal view information system blackbox operations involving languages 
examining possibility dls languages obtain systematic survey utility 
dls data modeling dls developed studied intensively eld knowledge representation surprising particularly adept representing semantics real world situations including data semantics 
particular semantic data models object oriented databases claimed capture meaning data directly concentrating entities grouped classes related relationships binary 
suppose start class class student person integer level terms dls student person primitive concepts individual entities need asserted instances person recognized external properties 
class declaration speci es constraint necessary condition apply instances student 
constraint expressed relatively simple constructors requiring student subsumed description person integer level level level constraint written form person meaning limit relational structures interpret description satisfy condition person declaration class student speci ed key encode additional description concept constructors role constructors complexity undecidable alcn role pspace attributes lls integers compose role inverse trans restrict top role table subsumption complexity results exp time polynomial entity relationship diagram compose inverse says look individuals student number nd particular individual :10.1.1.51.9343
argument semantic data models daplex entity relationship expressed relatively limited dls papers including :10.1.1.45.6987
example models entity relationship diagram classes student enrollment course adding constraints enrollment st student st st crs course crs crs date student inverse st enrollment inverse st inverse st course inverse crs enrollment inverse crs inverse crs ary relationships associated term constructor introduced order model directly relations :10.1.1.45.6987
similarly show non procedural aspects object oriented database schemas captured dls 
representing database schema suitable decidable dl argued anumber advantages greater expressive power dls presence negation disjunction coreference constraints inverses possible capture important additional aspects data semantics 
particular semantic data models object oriented databases claimed capture meaning data directly concentrating entities grouped classes related relationships binary 
suppose start class class student person integer level terms dls student person primitive concepts individual entities need asserted instances person recognized external properties 
class declaration speci es constraint necessary condition apply instances student 
constraint expressed relatively simple constructors requiring student subsumed description person integer level level level constraint written form person meaning limit relational structures interpret description satisfy condition person declaration class student speci ed key encode additional description concept constructors role constructors complexity undecidable alcn role pspace attributes lls integers compose role inverse trans restrict top role table subsumption complexity results exp time polynomial entity relationship diagram compose inverse says look individuals student number nd particular individual :10.1.1.51.9343
argument semantic data models daplex entity relationship expressed relatively limited dls papers including :10.1.1.45.6987
example models entity relationship diagram classes student enrollment course adding constraints enrollment st student st st crs course crs crs date student inverse st enrollment inverse st inverse st course inverse crs enrollment inverse crs inverse crs ary relationships associated term constructor introduced order model directly relations :10.1.1.45.6987
similarly show non procedural aspects object oriented database schemas captured dls 
representing database schema suitable decidable dl argued anumber advantages greater expressive power dls presence negation disjunction coreference constraints inverses possible capture important additional aspects data semantics 
checking consequence particular set constraints possible detect global set speci cations schema force class incoherent help verify schema consistency 
suppose start class class student person integer level terms dls student person primitive concepts individual entities need asserted instances person recognized external properties 
class declaration speci es constraint necessary condition apply instances student 
constraint expressed relatively simple constructors requiring student subsumed description person integer level level level constraint written form person meaning limit relational structures interpret description satisfy condition person declaration class student speci ed key encode additional description concept constructors role constructors complexity undecidable alcn role pspace attributes lls integers compose role inverse trans restrict top role table subsumption complexity results exp time polynomial entity relationship diagram compose inverse says look individuals student number nd particular individual :10.1.1.51.9343
argument semantic data models daplex entity relationship expressed relatively limited dls papers including :10.1.1.45.6987
example models entity relationship diagram classes student enrollment course adding constraints enrollment st student st st crs course crs crs date student inverse st enrollment inverse st inverse st course inverse crs enrollment inverse crs inverse crs ary relationships associated term constructor introduced order model directly relations :10.1.1.45.6987
similarly show non procedural aspects object oriented database schemas captured dls 
representing database schema suitable decidable dl argued anumber advantages greater expressive power dls presence negation disjunction coreference constraints inverses possible capture important additional aspects data semantics 
checking consequence particular set constraints possible detect global set speci cations schema force class incoherent help verify schema consistency 
relative complement operator possible reduce redundancy schema presentation class declaration contains minimal additional constraints top explicitly named parents inherits 
subsumption ordering descriptions corresponds type re nement provably correct subsumption algorithms type checking 
signi cantly description logics provide opportunity give names just primitive classes de ned virtual classes essentially views 
example add notion enrolled class course fewer takers adding de nition enrolled class course takers new considerable advantage gained case system charged organizing views subclass hierarchy non trivial task views 
particular existing taxonomy views primitive classes classi er program nd subsumer general new view 
federated databases generally socalled operative information systems information sources accessible users form particularly active area application dls :10.1.1.32.6380:10.1.1.118.6768:10.1.1.45.6987
key reason order pre existing databases cooperate necessary rst express relate contents semantics 
argued dls provide richly expressive medium task 
example uses expressive dl relate entities relationships schemas databases constraints form presence necessarily complete global world knowledge :10.1.1.45.6987
information detect incoherence redundancy resulting system just description 
particular existing taxonomy views primitive classes classi er program nd subsumer general new view 
federated databases generally socalled operative information systems information sources accessible users form particularly active area application dls :10.1.1.32.6380:10.1.1.118.6768:10.1.1.45.6987
key reason order pre existing databases cooperate necessary rst express relate contents semantics 
argued dls provide richly expressive medium task 
example uses expressive dl relate entities relationships schemas databases constraints form presence necessarily complete global world knowledge :10.1.1.45.6987
information detect incoherence redundancy resulting system just description 
approach federated databases integrate schema participating databases 
provides approach integration uses dl common canonical data model 
human charged heuristic task creating attribute hierarchy showing relationships attributes appearing classes various schemata 
description lattice supports paradigm query speci cation iterative re nement described 
data exploration involves asking queries possibly teams people extended period time 
dl kbms automatically organize large set queries subsumption relationship allowing users nd identical similar queries asked past answers 
important queries may require considerably long time process users associate comments observations queries 
operation classifying new description respect set previously encountered descriptions fact standard dl reasoners various techniques doing surveyed :10.1.1.33.3296
emphasize set classi ed descriptions forms just nite sub partial order nite lattice description terms 
modern database management systems provide facility giving names queries users frequently refer represent subset data reorganization 
named queries called views database world 
queries may materialized answers maintained kbms evaluated time looks 
calvanese lenzerini nardi uni ed framework class representation formalisms proc 
conf 
principles knowledge representation kr bonn germany pp 
carpenter logic typed feature structures applications uni cation grammars logic programs resolution university press 
catarci lenzerini representing interschema knowledge cooperative information systems int :10.1.1.45.6987
intelligent information systems pp 

cohen borgida hirsh computing common description logics proc 
aaai san jose ca may 

patel schneider valued semantics terminological logics arti cial intelligence 
deriving inference rules terminological logics logics ai proc 
jelia pearce wegner eds springer verlag pp 
schild correspondence theory terminological logics preliminary report proc :10.1.1.51.9343
ijcai sydney australia 
schmidt subsumption kl undecidable proceedings kr toronto canada may 
sheth gala navathe automatic reasoning schema integration int 
intelligent cooperative information systems pp 
conf 
industrial applications ai pp 
yen neches macgregor integrating term subsumption systems production systems ieee transactions knowledge data engineering pp 
march 
schmidt smolka attributive concept descriptions complements arti cial intelligence journal pp sheth larson federated database systems managing distributed heterogeneous autonomous databases acm computing surveys pp :10.1.1.118.6768

