schematically heterogeneous structures ren ee miller department computer information science ohio state university columbus oh cis ohio state edu tel fax schematic heterogeneity arises information represented data schema represented schema metadata 
schematic heterogeneity important class heterogeneity arises frequently integrating legacy data federated data warehousing applications 
traditional query languages view mechanisms insufficient reconciling translating data schematically heterogeneous schemas 
higher order query languages permit quantification schema labels proposed permit querying restructuring data schematically disparate schemas 
extend considering languages practice 
specifically consider restricted class higher order views show power views integrating legacy structures 
permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute requires prior specific permission fee 
sigmod seattle wa usa 
rule exception find data represented schema constructs 
semantic object data models common :10.1.1.50.9598
example stock class may set subclasses names companies serve labels subclasses 
traditional query languages including sql common object languages typically sufficient reconciling schematic heterogeneity 
result traditional query languages limited creating integrated views schematically disparate structures 
problem considering number scenarios schematic heterogeneity occur 
include multi database languages logics algebras view date price create view date price select date stock stock date select date price select date price select cob date price cob select date price union union create view date price 
example sql schemasql views 
hid single double suite hid hid hotel name chain city country resort hid class hotel database 
oriented languages name just 
views examples higher order views constructed schemasql higher order extension sql permits quantification database relation attribute names :10.1.1.46.4966
view notation declares relation variable ranging relations 
variable tuple variable declared range relations view translates data schema schema independent specific relations 
view declaration stock declares variable attribute variable ranging attribute names relation stock schema 
variable tuple variable declared range tuples stock relation 
hotel example means addition new hierarchies hotels aggregated 
dimensions may represented attributes sets attributes 
extensible analysis system requires ability reason time varying set new dimensions 
specifically possible permit user specify predicates applied subset dimensions 
physical data independence indexing architectures views describe index structures order permit integration new indexes access methods query optimizer :10.1.1.33.1999
tsatalos developed robust indexing architecture restricted views containing selection projection join operations 
views describe wide array advanced indexing techniques 
point techniques describe indexing subclasses class 
due lack support unions schema independent views 
meta extents similar motivation dynamic views propose 
dynamic views amenable applications integration including discussed 
proposals consider definition higher order views defining integrated views 
build consider views practice minimal extensions query processing engines 
proposed architecture solution schemasql higher order extension sql :10.1.1.46.4966
briefly overview relevant features schemasql defining concept dynamic views order views central proposed solution 
proposed architecture show meets needs applications outlined section 
schemasql sql tuple variables range tuples relation declared clause query 
domain variables range values single attribute relation example stock date 
multiple prices listed date contain multiple tuples 
variables attribute names express data dependent outer joins vertical partitioning relation 
example suppose contains information companies cob 
expressed relational query omega denotes full outer join 
full semantics views :10.1.1.46.4966
oe stock oe cob stock pi date price omega date pi date price instance stock contains price values price values cob view contain cross product values tuples date 
follows consider restricted class views data dependent output schemas 
definition dynamic view schemasql view possesses data dependent output schema defined query uses tuple domain variables 
views dynamic uses attribute variable show restructuring properties dynamic views powerful 
specifically framework problem answering queries integration reduces problem determining view set views usable answering query finding equivalent rewriting properties dynamic views section consider problem dynamic views answer sql queries 
problem sql views answer sql queries studied extensively 
select hid hid hid value attribute city value athens hotel select hid attribute value create index keywords inverted create view hotel hid select hid value attribute hid attribute value keyword search query hotels 
results srivastava views queries aggregation multi set bag semantics considered 
results generalize earlier conjunctive queries set multi set semantics :10.1.1.54.6954
definitions 
definition queries set equivalent compute set answers database 
queries multi set equivalent compute multi set answers database 
definition view set usable respectively multi set usable exists query set equivalent respectively multi set equivalent contains occurrences restructuring sql determining dynamic view answer query necessary understand restructuring properties dynamic views 
second example shows dynamic attribute views dynamic attribute defined aggregation answer aggregate queries 
create view db date select avg db stock date price group example query rewritten equivalent query uses aggregate query 
select avg select avg db stock db db date price date group group integration query optimizer usability criteria query translation algorithms previous section permit selection views correctly answer query 
address issue optimizing queries set views 
spj queries views issue addressed extending common dynamic programming style optimizer consider plans views :10.1.1.33.1999
primary extensions necessary 
addition access methods base relation optimizer consider views build query plan 
views may turn describe index structures 
second possible quickly determine portion query view answers plan built views access methods partial complete answer query 
forms single fact 
proc 
ieee int computer conf 
compcon pages 
kifer kim sagiv :10.1.1.50.9598
querying objectoriented databases 
acm sigmod int conf 
management data pages 
kim seo 
proc 
int 
conf 
deductive object oriented databases 
sadri subramanian :10.1.1.46.4966
schemasql language interoperability relational multi database systems 
proc 
int conf 
large data bases vldb bombay india 
