improving web availability clients monet david andersen carnegie mellon university dga cs cmu edu hari balakrishnan frans kaashoek rohit rao mit computer science artificial intelligence lab hari kaashoek rohit csail mit edu nms csail mit edu ron despite increasing degree multi homing path data redundancy capacity available internet today clients experience outage rates percent accessing web sites 
monet multi homed overlay network new system improves client availability web sites combination link multi homing cooperative overlay network peer proxies obtain diverse collection paths clients web sites 
approach creates potential paths clients web sites requiring scalable way selecting path 
monet solves problem waypoint selection algorithm picks small subset available paths actively probe 
monet runs freebsd linux mac os deployed different sites 
installations running monet year serving users daily basis 
analysis proxy traces shows proxy network avoids observed failures including access link failures internet routing problems persistent path congestion dns failures 
proxy avoids nearly failures due client wide area network failures negligible overhead 
web clients experience failure rates high percent attempting connect web sites today 
improve situation techniques proposed clientside multi homing client access internet uses multiple links deploying redundant paths internet server side multi homing server replication 
methods help previous results section demonstrate resulting availability defined fraction time service reachable working little :10.1.1.161.2760
put numbers perspective consider availability figures public telephone system emergency telephone service 
nines availability current internet systems unattractive important applications medical collaborations certain financial transactions expensive dedicated networks today order provide required availability 
desire high availability limited called critical applications downtime expensive businesses conduct transactions internet 
brief interruptions lasting seconds degrade user perception site performance lead substantial revenue losses 
seek improve availability client accesses web sites order magnitude better 
restrict attention web problem focused tractable 
despite narrowed focus problem remains challenging components failure prevent client reaching web site 
client access link may domain name system dns may respond may incorrect information misconfigurations congestion routing pathologies network path client server unavailable server access network may 
failures unpredictable silent complex root causes 
propose monet multi homed overlay network system improves web site availability clients 
web clients monet standard web proxy 
monet attempts mask failures obtaining exploring multiple different paths hypertext transfer protocol request 
help mask failures different locations internet monet finds paths ways link multi homing forwarding requests responses small overlay network peer monet proxies contacting multiple server replicas 
monet explores paths probes check availability multiple underlying components 
monet approach recovers variety failures individual components involved request 
monet protocols algorithms detect respond failures small number round trips low overhead sending additional packets 
detects failures regardless root cause providing measure resilience network layer faults persistent congestion active attacks misconfiguration dns outages server side failures 
monet uses waypoint selection algorithm dynam ically decides order possible paths client server time path 
algorithm determines ordering maintaining statistics path success rates connection times different interfaces peers 
pruning large space possible paths handful promising ones algorithm reduces monet overhead network web sites tolerable levels 
describes version monet daily people conservative estimate monet logs anonymize user activity mit csail sept 
csail proxy multi homed different isps uses peer proxies different internet locations 
analysis trace data collected monet installations shows monet overcomes outages table nearly non server failures imposing little overhead access link failures wide area failures server side failures contributed lack availability masked 
multi homing service increase availability monet conjunction server multi homing greatly increases availability 
increase arises monet reduces client wide area failures monet actively seeks multiple paths multi homed sites 
monet achieves significant nines availability improvements modest cost instance monet cheap dsl line greatly increase availability site uses bgp multi homing 
benefits tempered limitations current system 
different paths available proxy server share single point failure particular network link misconfigured dns database monet mask failure element 
current monet implementation mask mid stream failures occur middle tcp connection failures may recovered issuing appropriate range requests transport layer techniques 
monet design monet consists set web proxies deployed internet serve conduits client connections web sites 
site proxies entire system handful proxies 
goal monet reduce periods downtime exceptional delays lead poor user experience 
idea take advantage redundant client server paths failure modes expected independent 
monet address questions 
obtain multiple paths client site 

path times 
answers shaped requirements peer proxy multiple internet connections clients isp isp isp isp servers servers multiple machines supporting service dns servers 
monet environment 
clients contact web sites local monet proxy 
local proxy may multi homed multiple local interfaces may route requests remote peer proxies 
clients wish communicate web sites may multi homed spread multiple machines 
web sites located dns dns servers typically replicated multiple machines 
network overhead introduced monet terms number extra packets bytes low 
overhead imposed web servers terms tcp connections data download requests low 
possible monet improve latency reducing tail latency distribution balancing load multi homed links 
requirements preclude approach simply attempts concurrent connection requests paths proxy web site 
obtaining multiple paths proxy paths web site disposal shown 
term path refers direct internet path ip address indirect path goes intermediate node 
multi homed local interfaces monet proxy obtain internet access multiple internet service providers isps ideally 
proxy subset local interfaces concurrently serially resolve dns names connect web sites 
monet proxy assigned ip address upstream isp allowing direct requests chosen provider 
multi homing approach works particularly monet proxies smaller organizations providing benefits multi homing complexity bgp configuration management 
monet initiates tcp connections sending tcp syns server probe establish connection request data 
proxy directs requests link connection succeeded 
client proxy peer proxy web server peer proxy client proxy web site icp query syn peer proxy probe peer proxy probe request starts dns local dns resolution syn ack dns syn probe local tcp connections icp rtt 
syn syn ack get get ack syn ack data data peer proxy response fetch responder tcp icp udp 
icp protocol probing path peer 
peer proxy uses cached dns response site 
icp probe client proxy sends tcp request peer proxy fetch object peer retrieves data tcp connection probe site exchange 
dual tcp syn packets reduces network overhead effective tactic choosing set replicated servers 
connections retrieve data 
paths peer proxies overlay network convenient way obtaining access multiple paths points allowing internet path failures masked 
building observation monet attempts find additional paths overlay network peer proxies 
monet probe availability paths designed icp extension inter cache protocol icp 
icp checks object peer cache 
icp extends check optionally asking peer probe origin server tcp syn described earlier return round trip connection establishment time 
client proxy request object tcp connection peer proxy 
depicts operation icp 
icp query includes url object proxy wants retrieve peer proxy 
peer proxy handles icp queries just requests clients proxy contact peer proxies turn 
monet proxies handle icp queries follows 
object cached reply immediately 

open connection server exists reply connection establishment rtt 

resolve dns perform waypoint selection ignore peer paths open connection server reply rtt tcp established 
operation proxy peer proxy illustrated 
client proxy performs queries parallel 
request begins simultaneously begins dns resolution contacts peer proxies object 
dns resolution completed monet proxy attempts tcp connections delayed output waypoint selection step remote server multiple local interfaces 
remote proxy performs operations returns reply client proxy 
monet proxy retrieves data local indirect path responded 

diagram shows additional benefit performing icp queries parallel sending tcp syns origin server eliminates delays proxy ordinarily experience waiting icp replies 
icp replies cached object delayed client proxy fetch object directly correct behavior origin server closer peer proxy 
multi homed web sites web sites replicated distinct hosts multi homed different links internet 
dns name replicated site bound multiple ip addresses 
monet considers address corresponding different server machine internet path portions paths may shared believe configurations deliberately violate assumption rare 
today web clients typically contact address web site wait seconds minutes contacting subsequent addresses 
count clients quickly fail web site administrators rely mechanisms direct clients working server 
sites front load distributors direct clients host cluster 
answer dns queries responses low ttl time live values forcing clients frequently refresh address mapping site 
server fails dns server stops announcing failed address 
monet masks failures shorter timescales requiring web sites set low ttls dns records 
multi path dns resolution monet proxy performs concurrent dns requests different local interfaces mask dns failures reasons 
dns servers replicated finding multiple paths easy 
second sending multiple dns requests cause high network overhead dns lookups frequent tcp connections web traces connections deployed monet proxy remote servers cached dns entry 
number consistent studies dns tcp workloads estimated cache hit rates 
server side content distribution services return dns responses tailored client location network monet proxy performs dns resolution local interfaces 
peer proxy performs dns resolution 
localized resolution helps monet proxy fetch data replica near 
choosing paths waypoint selection monet proxy local links single homed peer proxies site ip addresses total number potential paths web site proxy disposal direct paths plus indirect paths 
peer proxy local interfaces number paths increases direct paths plus indirect paths 
moderate values number considerable number possible paths 
peer proxies single homed number quite large 
course paths truly independent pairs paths may share significant common portions 
path different paths set 
monet uses waypoint selection pick subsets paths probe different times 
waypoint selection algorithm takes available local interfaces peer proxy paths target web site ip addresses produces ordered list interfaces paths 
element list preceded optional delay specifies time elapse corresponding path probed 
proxy attempts connect server specified order 
waypoint selection algorithm seeks order paths likelihood success occasionally attempt paths best determine quality changed 
monet attempts secondary paths parallel path returned waypoint selection 
measured path connects monet uses connection 
waypoint selection superficially similar classical server selection client attempts pick best server metric 
waypoint selection client history connections variety servers different paths infer paths functioning path loss probabilities 
confronted request involving new server client decide paths best suited retrieve data 
paths probe monet ranks local links local link remote proxy pairs exponential weighted moving average ewma success rate fraction probes received response timeout period paths 
breaks ties average response time 
algorithm updates success rate local link short time sending tcp syn dns request link 
similarly icp queries update statistics particular local link proxy pair query sent 
proxy sends dns requests local link highest success rate randomly selected second local link 
proxy attempts additional tcp syn site sends icp query random peer random link time measure infrequently paths 
designing monet waypoint selection algorithm considered schemes rank local links peer proxy paths regardless servers previously accessed various paths 
grouping success rates remote site name ip prefix yield additional benefit 
probe paths keep overhead small monet proxy perform request attempt prior attempt failed 
delay requests different paths long ensure behavior short requests fulfilled undue delay 
delay adapt changing network conditions 
measurements round trip connect times operational monet proxy mit show distribution multi peaked knee cdf peaks histogram suggesting best delay threshold just peaks 
example arrivals occur seconds increasing threshold past seconds increases delay significantly reducing chances spurious probe 
explored ways estimating delay threshold 
means clustering 
method identifies peaks connect time pdf clustering connect time samples clusters finding percentile cutoff just outside peaks clusters 
centroids means shown horizontal lines 
clustering relatively insensitive value method computationally expensive particularly clustering recomputed time connection attempt succeeds fails 
threshold recomputed periodically computational load memory requirements may exceed acceptable busy proxy means clustering requires proxy maintain large history previous probes 

rttvar scheme 
avoid cost means scheme considered rttvar scheme inspired tcp retransmission timers 
delay sample independent number responses histogram east coast international local west coast retransmissions cdf response times histogram response times means locates inflection pts tcp connect seconds fraction connections cdf 
means clustering applied tcp connect times connections access link east coast sites world 
cdf shows cumulative fraction requests histogram 
server contacted path updates ewma estimate average delay rtt ewma estimate average linear deviation delay rttvar 
delay threshold subsequent requests set rtt rttvar 
rttvar scheme substantially simpler calculate means clustering may pick threshold middle valley peaks delay sample distribution 
practice measurements monet data illustrated show rttvar estimates ms delay threshold means estimates thresholds ms false transmission probability ms 
monet means estimator decide connection failed ms ms reducing fail time failed connection 
believe modest latency improvement justifies complexity increased computational storage requirements means estimation chose rttvar scheme monet 
client monet interface clients specify set monet nodes preferably nodes close network web proxies proxy primary rest backups 
approach allows monet easily incrementally deployed organization essential attracting users gathering data live user traffic 
addition ease deployment chose proxy approach provides significant benefits 
path information monet proxy observes site clients want contact www example com merely seeing destination ip address access paths waypoint selection algorithm consider site replicated multiple ip addresses 
operating application layer resolving dns name site ip addresses monet able mask dns errors errors non negligible source client perceived site outages long delays 

access control sites control access content originating ip address changed different local link transiting remote proxy 
early users monet occasionally unable access material licensed scientific journals proxy redirected access non licensed ip address 
deployed monet proxy configured direct access licensed web sites local interface 
proxies approach ensures clients gain unauthorized access licensed content monet 
putting client request url monet follows procedure shown 
monet proxy determines requested object cached locally 
proxy checks see site successfully contacted uses open tcp connection exists 
proxy uses monet waypoint selection algorithm obtain ordered list available paths site 
list priority order element optionally preceded delay 
proxy attempts retrieve data order suggested list probing path suggested delay 
waypoint selection lists peer proxy request issued immediately 
monet concurrently resolves site dns name corresponding ip addresses determine paths available local interfaces 
mask dns failures proxy attempts resolution local interfaces 
resolving domain name proxy sends tcp syn probes selected local interfaces 
proxy retrieves data probe syn peer proxy request responds 
results dns lookups path probes update information path quality maintained waypoint selection algorithm 
monet approach masking failures operates different time scales balance need adapt rapidly desire low overhead 
slowest adaptation days weeks involves deployment local links peer proxies different routing domains 
currently configuration updated manually automating important task 
intermediate time scale adaptation waypoint selection maintains history success rates different paths allowing monet adapt order path exploration time scale seconds 
respond failures round trip times proxy generally attempts paths returned waypoint selection milliseconds probing meo fetch object connection open 
waypoint selection algorithm path delay list object web cache 
probe peers request url success 
object 
request processing monet 
clients normal squid ad blocker squid 
squid configuration return object multi path dns resolution probe local interfaces monet proxy internet rest paths seconds 
order chances successful download probed paths high probe includes setting connection destination site 
proxy established connection request uses path 
monet mask mid stream failures large transfers example issuing range request fetch remaining content current implementation 
typical web workloads consist smaller objects mid stream failover difference connections 
implementation monet proxy implemented set changes squid web proxy parallel dns resolver set host policy routing configurations support explicit multi homing 
monet runs freebsd linux mac os run posix compliant system provides way support explicit multi homing 
deployed system web client configurations specified javascript arranges suitable backup proxy specified set primary proxy fails 
extra incentive users monet proxy front blocks common banner ads pop advertisements 
shows squid configuration 
wanted evaluate multiple waypoint selec monet proxy port bind ip port bind ip port 
dns configuration sends queries parallel bind server resolves query independently 
tion algorithms deployed proxy probes paths parallel performing waypoint selection 
subsets paths data determine performance waypoint selection algorithms 
currently deployed waypoint selection algorithm returns static list path delay pairs chooses name destination web site address access control problems mentioned section 
explicit multi homing monet proxy dns server explicitly bind ip address physical interface machine 
monet uses freebsd firewall rules linux policy routing direct packets originating particular address correct upstream link interface 
monet proxy communicates front dns server running non standard high port dns server recursively resolve requests forwards client requests recursive dns servers parallel case bind berkeley internet name daemon 
instance bind runs local interface shown 
configuration resolves dns query independently outbound interfaces confirm analysis query succeeded failed sent interface 
bind resolves query independently rotates list available name servers 
domains name servers monet usually copes failure links remote dns server delay 
icp connection setup icp adds new flags icp query message icp flag setup icp flag setup 
query icp flag setup requests remote proxy attempt tcp connection origin server returning icp peer caches support icp wish provide icp client simply ignore flag reply standard icp semantics 
squid supports mechanism occasionally sending icmp ping packets origin servers icp option data field return ping time response icp query 
icp piggybacks mechanism return measured rtt connection initiation 
probing network conditions icp uses unreliable udp datagrams communicate opcode version request number options sender host address payload url 
message length option data hops rtt 
icp packet format 
bold indicates fields extended support icp 
brackets show contents fields web proxy communication 
peer proxies 
udp avoids temporary failures packet loss increased latency happen reliable transport protocol tcp probes 
treat local interfaces peer proxy paths consistently monet retransmits lost icp messages second timer tcp uses initial syn packets 
peer confirmed access web site proxies tcp transmit objects 
monet uses squid persistent connection cache reduce connection setup overhead 
originating proxy persistent connection open web site bypasses peer selection directly uses persistent connection assumption previous selection attempts connection best 
remote proxy persistent connection origin server responds immediately icp queries setting icp flag setup flag supplying rtt initially opened connection 
shows icp packet header monet additions bold 
rfc notes sender host address normally zero filled 
icp uses field request number suppress duplicates 
multi homed monet proxy transmit multiple icp probes peer local interfaces peer interfaces 
startup monet proxy picks bit number sender id random number local interface address uses id sending interfaces 
sender id request tuple uniquely identifies request allows peer proxy send multiple identical requests web server 
mechanism provides additional redundancy proxies imposing additional server overhead 
note icp lack authentication causes known security flaws 
newer udp hypertext caching protocol supports strong authentication requests 
requests carry request attributes cookies may affect object served cache 
monet functionally identical icp version 
deployed system uses mature icp implementation 
reducing server overhead waypoint selection greatly reduces number wasteful connection attempts 
monet ensure remaining connection attempts unnecessarily create server state 
modern servers minimize processing syn packets thwart denial service attacks techniques syn cookies syn caches monet send multiple syn packets incurring serious overhead long exactly tcp way handshake completes connection consumes significant server resources server receives final ack tcp handshake 
opening connection successfully monet closes remaining probe connections 
close occurs kernel sent ack connection overhead avoided 
proposed simple kernel modification reduce overhead enables applications change servers earlier points connection attempt omit detailed discussion space constraints 
evaluation experimental evaluation focuses number nines availability achieved monet 
number nines capture aspects availability rate failures occurred long lasted give idea availability downtime monet 
address questions 
extent subsystems dns access links contribute failures incurred attempting access web sites 

monet mask failures overhead compare idealized high overhead scheme explores available paths concurrently 

aspects physical multi homing peer proxies monet design contribute monet observed improvement availability 
monet useful bgp multi homing client 

availability improvement monet provide web site replicated 
monet testbed data collection deployed monet proxy sites ron testbed listed table 
analysis examines requests sourced proxies csail mazu physically multi homed 
csail proxy peers uses local links 
mit mbits link mit network 
mit network bgp multi homed different upstream isps 

cog mbits link cogent 

dsl mbits downstream kbits upstream dsl link 
clients mbps mbps csail proxy nyu proxy dsl cogent mit nyu internet internet uunet eli utah mbps mazu proxy proxy utah proxy saved traces 
partial level view network connections deployed monet proxies cmu proxies shown 
csail proxy peers nyu utah mazu proxy peers csail nyu 
sites directly multi homed significant number local users traces omitted analysis 
site connectivity times csail mb mb dsl dec jan mazu mb wireless jan feb utah university west proxy local isp west proxy nyu university east proxy cable dsl cable sep oct table 
sites monet proxy deployed 
mazu wireless connection uses commercial wireless provider 
cable modem site operational year monitored briefly 
request type count client objects fetched cache misses client bytes fetched gbytes cache bytes missed gbytes tcp connections web sessions dns lookups table 
csail proxy traffic statistics 
mazu proxy uses different physical access links mbits link mbits wireless link 
shows autonomous systems interconnect deployed proxies 
csail proxy largest client base serving different ip addresses day 
running april evaluation focuses data collected week period december january 
analysis second month period sep oct showed results similar 
table shows traffic statistics csail proxy 
monet proxies record events 
request time time client peer request arrived proxy request served time response sent requester 
uncached objects proxy maintains records events 

dns resolution duration time proxy request 
uncached dns responses time dns requests sent local link times corresponding responses received 

tcp connect duration time tcp syn packets sent local link times tcp connect call completed tcp connection reset rst packet received 

icp duration time proxy sent icp message peer proxy time received peer proxy time icp response returned 
experiments proxy receives request object web site attempts contact web site local interfaces peer proxies 
proxy records time original request received times connection establishment steps occurred local interfaces peer proxies 
proxy uses interfaces concurrently analysis examine performance proxy subset interfaces 
analysis simulates effects different waypoint selection algorithms introducing various delays additional interfaces 
observations data collected monet proxies caching effects valid objects served cache saving requested bytes 
previous studies large transfers dominated proxy byte count majority sessions consisted smaller requests 
cache hits reduce user perceived delays mask outages numerous pages required server re validation included uncached objects 
sessions primarily examine success failure session defined request particular server web site seconds inactivity 

analyzing failures terms sessions connections avoids significant bias unreachable server generates single failed request successful connection generates stream subsequent requests give false sense higher availability 
proxy uses persistent connections fetch multiple objects web server reduces total number tcp connections 
proxy attempted connections external web sites sessions 
excluded objects requests excluded analysis web sites mit cached objects accesses unqualified hostnames non existent domain names access subscription web sites proxy performs non standard handling accesses web sites consistently exhibited anomalous dns behavior 
excluding main requests ignores classes dns failures 
internal network failures proxy site prevent users requests reaching proxy analysis missed network failures coincided client failures power failures 
claim performance internet links mit mazu represents typical internet connected site 
fact monet worse situations studied group set affordable low quality links highly reliable system 
measurements represent interesting range link reliability quality bandwidth suggest monet benefit common network configurations 
characterizing failures failures observed monet fall categories listed 
able precisely determine category failures listed table links connecting csail proxy bulk traces gathered failed time 
categories observed failures 
dns dns servers domain unreachable 
originating proxy contacted multiple peer proxies local links peers resolve domain 

site rst site reachable proxy saw tcp rst server site contacted connection succeeded local interface peer proxy able retrieve data 
tcp rst packets indicate server unable accept tcp connection 

site unreachable site unreachable multiple vantage points 
originating proxy contacted peer proxies packets elicited response site 

client access originating proxy access links resolving dns names es csail mazu sessions sessions failure type mit cog dsl wi dns site rst site unreach client access wide area availability table 
observed failures internet links sites 
dns rst unreach rows represent site characteristics link proxy 
tcp session server web site contacting peer proxies 

wide area link originating proxy working proxy link perform dns resolution contact server desired web site 
links proxies resolve contact site suggesting failure client access link server 
dns site failures filtering sites persistent dns misconfigurations proxy observed total dns failure 
failures servers domain lan 
dns resolvers fail timeout monet primary benefit reducing long dns related delays 
site failures table show times proxy reach site reach proxies sites 
proxy received tcp failed site server host program fault network 
roughly identified site failures sent csail proxy sent mazu peer proxy restarts crashes sessions csail proxy contacted peer proxy 
analysis underestimates benefits overlay number site failures small margin 
expect site failures 
instances monet reach peers site 
analysis instances probably incorrectly identified monet failures unreachable sites 
supporting proxies observed servers instances monet failures similar rst rate identified server failures 
believe instances proxies unable reach functioning site surprising number quality links involved 
determine analysis correctly identified failed sites re checked availability unavailable sites weeks data collection period 
failed sites unreachable weeks 
observed failures probably attempts contact fraction successful connects dns connect time seconds concurrently monet mit cogent dsl mit icp peers mit cogent 
monet performance csail 
monet waypoint selection nearly effective paths concurrently overhead 
mit cogent dsl mit icp peers lines dsl paths concurrently waypoint selection delays 
failed non existent sites 
better understand monet overcome failures prevent client reaching properly functioning sites rest analysis excludes positively identified server side failures 
put numbers perspective section examines site failure included performance monet sites reliable subset replicated sites 
client access link failures links dsl line displayed availability near 
high link availability expected environments measured example mit csail proxy upstream links connected internet upstream isps 
remaining unavailability occurred despite relatively high availability links bgp multi homing provide solution failures problems occur middle network close server 
observed hour failure mazu wireless link weeks monitoring occurred pm am little traffic replayed proxy 
dsl link experienced hour failure numerous smaller failures months 
measured global availability link constantly probing link reach root nameservers 
availability links measured fashion close availability measured monet see details 
monet 
csail proxy provided uninterrupted service major network outages month period 
notable results ability cheap dsl line improve availability mit network connection order magnitude discuss 
analysis concentrates effect monet long delays failures 
see effects proxy examine cumulative distribution requests dns resolution syn ack received certain amount time omitting positively identified server failures 
shows availability cdfs monet constituent links csail proxy produced calculating fraction sessions successfully connected time specified coordinate 
graph follow log scale 
axis graphs starts near th percentile connections 
top line concurrently shows availability paths concurrently proxy performed gather trace data 
waypoint algorithm simulator picks order monet waypoint selection algorithm uses links examines performance combinations constituent links peer proxies 
monet waypoint selection algorithm section rapidly approaches concurrently line outperforms individual links 
monet effects availability 
reduces exceptional delays 
example cogent link sessions require seconds complete dns resolution 
combining mit link cogent link mit upstream isps provides small improvement packets leaving mit destinations travel cogent 
links augmented dsl line sessions fail connect seconds 
improvements seconds range primarily gained avoiding transient congestion brief glitches 
second effect monet improving availability face persistent failures 
monet improves availability due non server failures order magnitude 
mit icp peers curve shows adding remote proxies high uptime link mit create robust system allowing application level path selection existing path diversity 
proxy realize similar availability benefits augmenting primary link slower reliable dsl line mit cogent dsl 
site primary link extremely peer proxy solution increases availability requiring additional network connectivity periodically directing requests slower dsl line 
benefits monet local link redundancy course limited availability local link 
example mit icp peers achieves availability nearly times better mit link 
overhead monet waypoint selection algorithm nearly matches performance concurrently adds syns icp packets client monet 
average web request retrieving single object handled proxy required packets additional overhead comes total packet load negligible addition byte count 
added packets small tcp syn packets bytes icp query packets average bytes 
mean web object downloaded mit proxy kilobytes 
extra syn icp packets added monet amount extra bytes object average 
simulation waypoint selection algorithm chose random link time 
benefit frequent link probes ms savings amount time took find alternate path path monet attempted failed oftentimes little benefit 
latency reductions appear justify corresponding increase overhead 
better algorithm find better ordering links fail discovering links behavior appears uncorrelated failures relatively unpredictable believe overcoming transient failures best done attempting alternate links 
waypoint selection avoids links peers fail longer seconds improve latency shorter ranges 
remote proxy failures random path selection performed poorly 
simulated monet static retransmit timer derived value 
careful tuning proxy static value provide performance low overhead adapt changing conditions time 
monet introduces overhead additional dns lookups 
noted section believe monet multiple local internet connections send dns queries 
dns queries frequently cached overhead small monet proxy performed dns lookups serve objects 
mean packet size proxy dns queries bytes 
assuming average dns lookup requires packets direction duplicating dns requests added megabytes traffic months gigabytes served proxy 
queries root nameservers junk queries wide deployment monet techniques negative impact dns infrastructure particularly shared monet proxy helps aggregate individual lookups caching 
monet 
top lines show performance paths concurrently monet waypoint selection respectively 
timescales seconds scheme uses paths performs monet transient loss delay forces monet wait round trip times attempting second connection 
time monet approximates performance best link second monet approaches performance links concurrently 
longer durations seconds monet comes close performance paths 
part difference algorithms arises mispredictions waypoint algorithm part probably arises conservative choice waypoint prediction simulator 
simulator takes paths data input knowing instance particular connection attempt took seconds complete 
simulator conservatively assumes connection attempt second take seconds complete reality probably shorter problem transient 
server failures replicated sites monet improves availability dramatically face site failures 
monet effective improving availability replicated multi homed sites single homed sites 
leftmost graph shows performance paths testing server failures included 
graph includes requests non existent servers succeed servers unreachable weeks represents lower bound monet benefits 
replicated web sites contrast generally represent sample available presumably managed sites 
category sites imperfect approximation highly available sites popular sites trace exhibited recurring server failures data illustrated shows sites exhibit generally higher availability average site 
replicated services measured typically combinations clustering bgp multi homing low ttl dns redirection direct clients functioning servers 
sessions observed went web sites advertised multiple ip addresses 
web sessions multiple address sites dominated content delivery networks cdns large content providers 
example akamai new york times cnn account sessions 
single link access multiply announced subset sites appreciably reliable accesses sites right 
mit connection achieved reachability sites multi homed site subset 
augmented peer proxies mit connection achieved availability 
local interfaces monet achieved reached just seconds local interfaces peer proxies 
monet reduction network failures apparent communicating replicated sites 
improved performance accessing sites shows monet multiple server addresses effective monet techniques complement cdn replication improve availability 
foregoing analysis counted replicated sites fraction successful connects paths cog mit dsl cog dsl cog icp mit icp mit cogent monet best servers monet best servers baseline performance paths cog mit dsl cog dsl cog icp mit icp mit cogent servers multi homed servers dns connect time seconds dns connect time seconds 
session success including server failures csail proxy servers left multi homed servers right 
success rate base links unchanged effectiveness enhanced contacting multi homed services 
advertised multiple ip addresses 
assigned sites content provider breadth traversal graph linking hostnames ip addresses creating clusters hosted sites 
manually identified content provider largest clusters created regular expressions match hosts provider 
heuristics identified distinct ip addresses belonging different providers 
method wrongly assign request content provider guaranteed find requests sent particular provider 
discussion limitations monet masked numerous major failures borders host networks wide area 
cable modem deployment ability balance load multiple access links provided appreciable performance gains 
monet benefits subject limitations fundamental tied current implementation site failures power failures csail proxy created failures monet overcome 
improvements provided proxy bounded limitations environment may represent significant obstacle network deployments 
probes determine success failed internet router near mit border began dropping packets larger bytes 
monet uses small byte syn packets probe paths proxy ineffective bizarre failure 
monet probes checks provided systems failures specifically crafted defeat monet system 
higher level progress check monitored data flowing connection provide resilience failures mid stream failures re issuing request necessary 
solutions avoid undesirable side effects re issuing credit card purchase 
software failures 
web sites reached directly contacted remote proxy 
sites sent invalid dns responses accepted bind name server running remote proxies discarded bind nameserver multi homed proxies 
anomalies rare affecting web sites accessed mit proxy show benefits having diversity software implementations addition diversity physical network paths 
download times 
initial connection latency critical factor interactive web sessions 
total download time important large transfers 
earlier studies suggest connection latency effective server selection guarantee successful connection indicates low loss path 
briefly tested held true monet proxies 
client csail proxy fetched urls randomly chosen paths time compare download times repeating process times days 
syn response time correctly predicted full transfer time 
objects fetched random sample static objects downloaded users proxy 
related benefits path choice 
ron detour studies demonstrated providing clients choice paths server increases reliability 
ron study single hop overlay routing provided benefits achievable overlay routing 
expanded findings showing selecting just random intermediaries provided excellent reliability low overhead 
study focused failures lasting seconds minutes monet results suggest results apply shorter time scales 
multi homing local links ing route control improve latency 
improvements insensitive exact route control mechanism measurement algorithms 
results complement findings monet focuses primarily strategies achieving reliability benefits multihoming worst percent responses studies focus latency improvements 
study days pings internet nodes paths availability 
numbers consistent estimates link failure rates remainder breakdown analyzes contribution sources failure extends analysis wider set hosts 
commercial products multi link technology send multiple tcp syns servers multi home clients bgp 
pings small set external addresses monitor connectivity link failing link appears 
systems help balance load multiple links smart clients approach downloads mobile code clients providing flexible effective server selection 

monet achieves reliability benefits changes name resolution mobile code 
content delivery networks cdns akamai dns server redirects client proxy configuration redirect clients intermediate nodes cache content quicker access 
cdns deliver replicated popular content particularly effective face flash crowds additional reliability mechanisms discussed effective network disruptions un cached content access link failures 
fact results showed monet improve performance cdn hosted sites 
masks dns lookup delays dns requests peers 
hear dns response local nameserver short static timeout ms typically resolver forwards query peer node 
majority requests get resolved peer node immediately sends queries locally peer 
multi homing techniques 
bgp techniques recover link failures require minutes 
bgp route aggregation suppresses announcement failures aggregate financial technical requirements preclude small clients bgp 
limitations partly addressed traffic control systems higher layer multi homing techniques 
measurements select outbound routes networks multiple bgp speaking internet links 
control inbound link systems change ip address traffic originates forcing traffic return machine augmented multiple internet connections specific overlay node 
detour interpose nat outbound traffic monet uses application layer proxy 
nat general monet proxy provides information easier partially deploy section 
approaches change outbound ip address fairly intrusive way 
monet web proxy system improve client perceived availability accesses web sites 
monet masks kinds failures prevent clients connecting web sites including access link failures internet routing failures dns failures subset server side failures 
monet masks failures obtaining exploring multiple paths proxy web sites considering paths multi homed local links peer monet proxies multiple server ip addresses 
monet incorporates waypoint selection algorithm allows proxy explore different paths little overhead achieving quick failure recovery usually round trip times 
contrast approaches improve specific component path web client server monet incorporates simple reusable failure masking techniques overcome failures different components 
deployed single proxy multi homed monet years ago 
version system described multiple proxies operational months daily user community users 
monet code publicly available 
experimental analysis traces real world monet deployment show monet corrected nearly observed failures server server access network failed 
monet simple waypoint selection algorithm performs omniscient scheme sends requests available interfaces 
practice modest overhead bytes packets find observed failures eliminated different measured physical links number nines non server failed availability improved nines 
experience monet suggests web access availability improved order magnitude inexpensive relatively low speed link dsl link peer proxies 
techniques incorporated monet demonstrate cost high web access availability nines need daunting 
believe monet approach addresses reasons service unavailability experimental results show failures server failures 
monet place main remaining barrier nines better availability server side failure resilience 
acknowledgments nsdi reviewers colleagues provided great feedback nick feamster mary lou john guttag max krohn stan rost jon michael 
special shepherd david wetherall helped look fresh eyes editing 
appreciate necessarily anonymous people mit proxies long provide measurement data administrators hosted proxies 
funded nsf cooperative agreement 
ani david andersen funded microsoft research fellowship 
akamai 
www akamai com 
maggs seshan shaikh sitaraman measurement analysis multihoming 
proc 
acm sigcomm karlsruhe germany aug 
pang maggs seshan shaikh comparison overlay routing multihoming route control 
proc 
acm sigcomm portland aug 
seshan shaikh multihoming performance benefits experimental evaluation practical enterprise strategies 
proc 
usenix annual technical conference boston ma june 
ciu dns bind nutshell 
reilly associates 
andersen improving availability overlay networks 
phd thesis massachusetts institute technology feb 
andersen balakrishnan kaashoek morris resilient overlay networks 
proc 
th acm symposium operating systems principles sosp banff canada oct pp 

bernstein syn cookies 
cr yp html 
cohen kaplan prefetching means document transfer new approach reducing web latency 
proc 
ieee infocom tel aviv israel mar vol 
pp 

dahlin chandra gao wan service availability 
ieee acm transactions networking apr 
robbins jeffery empirical evaluation client side server selection algorithms 
proc 
ieee infocom tel aviv israel mar vol 
pp 

bush patton selection operation secondary dns servers 
internet engineering task force july 
rfc bcp 
brown patterson lessons pstn dependable computing 
workshop self healing adaptive self managed systems 

network magazine dec 
www com article 
gummadi gribble levy wetherall improving reliability internet paths hop source routing 
proc 
th usenix osdi san francisco ca dec 
guo chen li cker chiueh experiences building multihoming load balancing system 
proc 
ieee infocom hong kong mar 
jung sit balakrishnan morris dns performance effectiveness caching 
proc 
acm sigcomm internet measurement workshop san fransisco ca nov 
krishnamurthy rexford web protocols practice 
addison wesley upper saddle river nj 
kuhn sources failure public switched telephone network 
ieee computer 
labovitz ahuja bose jahanian delayed internet routing convergence 
proc 
acm sigcomm stockholm sweden sept pp 

lemon resisting syn flood dos attacks syn cache 
feb 
mahajan wetherall anderson understanding bgp misconfiguration 
proc 
acm sigcomm pittsburgh pa aug pp 

miller overlay routing networks 
www math mit edu lecture ps apr 

www phys uu nl html 
network reliability interoperability council 
network reliability report nation 
www org pubs index html 
network reliability interoperability council 
network reliability path forward 
www org pubs fg index html 
pai wang park pang peterson dark side web open proxy view 
proc 
nd acm workshop hot topics networks hotnets ii cambridge ma nov 
park pai peterson wang improving dns performance reliability cooperative lookups 
proc 
th usenix osdi san francisco ca dec 
paxson measurements analysis internet dynamics 
phd thesis berkeley may 

whitepaper available fromhttp www com technology html 
savage collins hoffman snell anderson effects internet path selection 
proc 
acm sigcomm cambridge ma sept pp 


www com 
squid web proxy cache 
www squid cache org 
maniatis baker peer peer caching schemes address flash crowds 
proc 
st international workshop peer peer systems iptps cambridge ma mar 
rubenstein sahu lightweight robust system handle flash crowds 
ieee international conference network protocols icnp paris france nov 

multi link technology white 
www com files products sg multi link technology whitepaper pdf oct 
wessels hyper text caching protocol 
internet engineering task force jan 
rfc 
wessels claffy application internet cache protocol icp version 
internet engineering task force sept 
rfc 
yip overlay routing oblivious destinations 
master thesis mit aug 
yoshikawa chun vahdat anderson culler smart clients build scalable services 
proc 
usenix annual technical conference anaheim ca jan 
research 
need speed ii 
market bulletin apr 
www keynote com downloads speed pdf 
notes caching complements monet path selection improving delivery hot static objects caching improve availability 
contrast monet path selection improves access uncacheable dynamic content web commerce applications 
gaps requests single user web site usually seconds pp 
sites persistent dns lame delegations site returned ip address 
site returned dns names exceeded byte capture length obtain dns packets 
outage experienced realized proxy failed perform redundant dns lookups fixing shortcoming permitted uninterrupted service known outages 
early outages occurred detailed measurement period 
analysis assumes able reach replica denotes service availability may may case caching cdns 
clients power failures clients accessing proxy buildings may affected 
