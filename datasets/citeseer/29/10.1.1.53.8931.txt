coordination assistance mixed human computational agent systems keith decker victor lesser department computer science university massachusetts amherst ma decker cs umass edu umass computer science technical report may application areas concurrent engineering software development hospital scheduling manufacturing scheduling military planning individuals responsible agenda tasks face choices best way locally handle task order tasks 
decisions hard coordination problems individual tasks related tasks complex ways sources uncertainty complete view task structure arbitrary levels detail situation may changing dynamically entirely sure outcomes actions 
focus development support tools distributed cooperative groups collaborative teams human computational agents 
discuss design set distributed autonomous computer programs agents assist people coordinating activities helping manage agendas 
approach supply coordination scheduling facilities computational domain agents autonomous design checkers databases 
briefly describe initial implementation ideas computational agents task environments 
furthermore test may interact tests relationships enables requires gamma delay performed inhibits test performance invalidates test result performed specified time period relative 
note unit secretaries scheduling agents try minimize patients stays hospital ancillary secretaries scheduling agents try maximize equipment throughput minimize setup times 
shows subjective ms task structure corresponding episode domain subjective views unit ancillary scheduling agents tests ordered 
note quite bit detail captured just computational aspects environment case tasks time computer 
ms model detail physical resources job shop characteristics necessary :10.1.1.37.4451
detail necessary analyze protocols developed propose primary unit ancillary protocol secondary ancillary ancillary protocol 
type environment scheduling agents interact nurses mechanisms facilities tools suggested assist efficient effective scheduling patient tests treatments 
similar applications technology occur manufacturing scheduling applications 
approach coordination process managing interdependencies activities 
propose construct global view evolving task structure agents fairly local global view 
tasks direct relationships need understood agents scheduling criteria schedulers different agent change time 
coordination mechanisms tailored agent human computational task environment hand 
framework modeling task environments ms order construct general approach coordination necessary underlying framework represent wide diversity activities tasks properties relationships need represented understood order arrive effective coordination activity structures different human agents wide variety domains 
ms framework task analysis environment modeling simulation represents coordination problems formal domain independent way :10.1.1.42.8231
represent coordination problems distributed sensor networks hospital patient scheduling airport resource management distributed information retrieval pilot associate local area net min task quality accrual function min subtask relationship enables relationship method executable task facilitates relationship agent min max max min max objective task group min max agent initial subjective view agent initial subjective view min max max min max agent subjective views bottom typical objective task group top diagnosis 
subject unique features ms explicit quantitative representation task interrelationships describe effect performance activity choices temporal orderings 
second representation task structures multiple levels abstraction 
lowest level abstraction called executable method 
