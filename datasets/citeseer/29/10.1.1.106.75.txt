cs cs lo may practical reasoning expressive description logics ian horrocks department computer science university manchester horrocks cs man ac uk sattler theoretical computer science rwth aachen sattler informatik rwth aachen de stephan tobies theoretical computer science rwth aachen tobies informatik rwth aachen de description logics dls family knowledge representation formalisms mainly characterised constructors build complex concepts roles atomic ones 
expressive role constructors important applications computationally 
algorithm decides satisfiability dl alc extended transitive inverse roles role hierarchies qualifying number restrictions 
early experiments indicate algorithm suited implementation 
additionally show alc extended just transitive inverse roles pspace 
investigate limits decidability family dls 
sound complete algorithms interesting inference problems subsumption satisfiability concepts known wide variety dls ss sat dl cdl 
appeared proceedings th international conference logic programming automated reasoning number lecture notes artificial intelligence pages 
springer verlag september 
specific application expressivity dl sufficient describe relevant properties objects application domain 
example transitive roles ancestor inverse roles successor predecessor play important le adequate representation complex aggregated objects hs reasoning conceptual data models :10.1.1.164.8715:10.1.1.164.8715
reasoning respect cyclic definitions crucial applying dls reasoning database schemata cdl 
relevant inference problems extensions dls allow transitive inverse roles known decidable dl appropriate inference algorithms described dm high degree nondeterminism appears prohibit realistic applications 
mainly due fact algorithms handle just transitive roles transitive closure roles 
shown sat restricting dl transitive roles lead lower complexity transitive roles combined role hierarchies allow algorithms behave quite realistic applications hor 
tableaux si concepts defined analogously satisfy properties due absence role hierarchy identity 
due close relationship models tableaux lemma easily proved induction 
consequence algorithm constructs possible tableau input concept decision procedure satisfiability concepts 
lemma shiq concept resp 
si concept satisfiable role hierarchy iff tableau reasoning shiq give algorithm shiq concept decides existence tableaux implicitly assume arbitrary fixed role hierarchy tableaux algorithm works finite completion tree tree nodes correspond individuals tableau node labelled set shiq concepts employs blocking technique hs guarantee termination path contains pairs successive nodes pair wise identical label connecting edges identical labels path second pair longer expanded said blocked :10.1.1.164.8715
blocked paths construct infinite tableau 
identical labels sure copies pair descendants substituted second pair nodes respective descendants 
definition completion tree shiq concept tree node tree labelled set clos edge labelled set possibly inverse roles occurring clos explicit inequalities nodes tree recorded binary relation implicitly assumed symmetric 
completion tree node called successor node iff successor node called neighbour iff successor inv successor predecessors ancestors defined usual 
dls alc termination mainly due fact expansion rules add new concepts strictly smaller concept triggered application 
longer true rule introduces new concepts size triggering concept 
ensure termination nodes labelled subset label ancestor blocked 
rules applied topdown successors generated rules applicable labels inner nodes touched subset blocking sufficient node blocked ancestor sufficient possible give polynomial bound length paths 
si dynamic blocking introduced hs blocks established basis established broken dynamically :10.1.1.164.8715
blocks established basis label equality value restrictions constrain predecessors successors 
unfortunately may lead completion trees exponentially long paths exponentially possibilities label sets path 
due non deterministic rule exponentially sets may occur 
non determinism disjunctions need completely decomposed yield subset blocking situation 
complete specification grid axioms 
remains add axioms encode local compatibility conditions described bs assert subsumed disjunction domino types enforce placement tile point grid 
concept satisfiable various axioms described lemma iff compatible tiling grid 
discussion new dl system implemented shiq algorithm described section 
pending completion project existing fact system hor modified deal inverse roles shiq blocking strategy giving dl equivalent shi extended functional roles hs refer dl modified fact system fact :10.1.1.164.8715
fact conduct initial experiments terminology representing fragments database schemata inter schema assertions data warehousing application cdl slightly simplified version proposed encoding generate terminologies 
fact able classify terminology contains concepts axioms mhz pentium cpu time 
contrast eliminating inverse roles embedding technique cdr gives fact terminology additional axioms fact unable classify hours cpu time 
extension embedding technique eliminate number restrictions dl requires target logic supports transitive closure roles converse pdl 
hor horrocks 
expressive description logic fact fiction 
proc 
kr pages 
hs horrocks sattler :10.1.1.164.8715
description logic transitive inverse roles role hierarchies 
logic computation 
appear 
hst horrocks sattler tobies 
