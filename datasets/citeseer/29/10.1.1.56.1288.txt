distinguishing typing classification object data models norrie institute information systems eth zurich ch zurich switzerland 
notion type played double role database systems describe values stored database concepts application domain 
context object data models argue clear separation roles typing classification respectively 
typing concerned database representation classification concerned models reality terms entity categories interdependencies 
discuss distinction benefits affords terms conceptual modelling object data model genericity 
discussion role type fields programming languages data models knowledge representation see example bz 
specifying data model adopt particular approach issues subtyping inheritance 
simplifies task data model specification avoids problem tailoring data model specific object oriented programming language 
separation concerns translate physical model object data management services manage collections object objects 
management objects terms storage access responsibility persistent object store 
collection model example generic object data model :10.1.1.34.2095
essentially collection model object data model om type constructs 
support set bag collections slightly different forms classification structure 
model forms basis provision data management services distributed object oriented system 
kernel associated services provide reliable distributed persistent object store accessed programming languages 
springer verlag 
norrie 
collection model data management object oriented systems 
phd thesis university glasgow dept computing science glasgow qq scotland december 
norrie :10.1.1.34.2095
extended entity relationship approach data management object oriented systems 
th intl 
conf 
entity relationship approach pages dallas texas december 
