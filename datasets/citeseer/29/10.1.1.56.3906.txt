exploiting atomic broadcast replicated databases fernando pedone guerraoui andr schiper informatique ecole polytechnique ed de lausanne lausanne switzerland database replication protocols historically built top distributed database systems consequently designed implemented distributed transactional mechanisms atomic commitment 
argue approach adequate efficiently support database replication suitable alternatives atomic broadcast primitives employed 
precisely show fully replicated database systems deferred update replication model better throughput response time implemented atomic broadcast termination protocol implemented atomic commitment 
replication considered cheap software way increase data availability compared hardware specialised techniques 
designing replication scheme provides reasonable performance maintains data consistency active area research database distributed systems communities 
database context replication techniques deferred update model received increasingly attention past years :10.1.1.116.1182
designing replication scheme provides reasonable performance maintains data consistency active area research database distributed systems communities 
database context replication techniques deferred update model received increasingly attention past years :10.1.1.116.1182
deferred update model transactions processed locally server replica manager commit time forwarded certification servers replica managers 
deferred update replication techniques offer advantages immediate update techniques transaction operation servers 
advantages may cite better performance gathering propagating multiple updates execution single possibly nearby server reducing number messages network flexibility propagating updates convenient time dial connection better support fault tolerance simplifying server recovery missing updates may demanded servers lower deadlock rate eliminating distributed deadlocks :10.1.1.116.1182
deferred update replication techniques limitations 
firstly termination protocol propagate transaction servers certification usually atomic commitment protocol pc algorithm cost directly impacts transaction response time 
secondly certification procedure usually performed transaction termination time consists aborting conflicting transactions 
certification procedure typically leads high abort rate conflicts frequent impacts transaction throughput 
certification procedure typically leads high abort rate conflicts frequent impacts transaction throughput 
context client server distributed systems replication schemes guarantee strong replica consistency atomic broadcast communication 
atomic broadcast communication primitive enables send messages set processes guarantee processes agree set messages delivered order messages delivered 
guarantee consistency trivially ensured operation replicated server distributed replicas atomic broadcast 
authors mentioned possibility atomic broadcast support replication schemes database context little done direction mention exceptions section :10.1.1.164.3636
show atomic broadcast successfully improve performance database deferred update replication technique 
particular show different resilience scenarios deferred update replication technique atomic broadcast provides better transaction throughput response time similar scheme atomic commitment 
organised follows 
section replicated database model recall principle deferred update replication technique 
show total order produce better results 
intuitively idea total order processes resolve conflicts aborting transactions involved aborting just 
example transactions conflict processes know delivered abort resolve conflict need abort 
order knowledge available aborting just transaction create inconsistencies 
processes abort systems resolve problem requiring transactions :10.1.1.116.1182
case really talk conflicting transactions 
response time section discuss implementation atomic broadcast primitive 
consider different implementations correspond different resilience degrees compare cost atomic commit protocols resilience degrees 
comparing costs atomic broadcast atomic commit implementations consider failure free runs frequent ones practice 
concluding remarks cheriton skeen expressed atomic broadcast support replicated databases 
reasons raised atomic broadcast replication schemes consider individual operations databases operations gathered inside transactions atomic broadcast guarantee uniform atomicity server deliver message crash servers receiving uniform atomicity fundamental distributed databases processes crashed agree commit transaction atomic broadcast usually considered crash process model process crashes recovers databases processes supposed recover crash 
considered atomic broadcast primitive crash recovery model guarantees uniformity process delivers transaction deliver 
shown primitive efficiently propagate transaction control information deferred update model replication 
choice replication model casual research shown immediate update models due nature applications side effects synchronisation :10.1.1.116.1182
indirectly points fact existing database replication protocols built top distributed database systems mechanisms developed deal distributed information necessarily designed replication mind 
example atomic commitment mechanism shown replaced atomic broadcast primitive providing better throughput response time 
performance figures help dis common mis belief total order atomic broadcast primitives expensive compared traditional transactional primitives inappropriate high performance systems 
stated believe replication successfully applied performance achieved sacrificing consistency making semantic assumptions transactions 
gray 
notes data base operating systems 
springer verlag heidelberg frg newyork ny usa lncs operating systems advanced course bayer graham eds volume 

gray neil shasha :10.1.1.116.1182
dangers replication solution 
proceedings acm sigmod international conference management data montreal canada june 
gray reuter 
transaction processing concepts techniques 
