representing agent interaction protocols uml james odell van dyke parunak bernhard bauer james odell associates river dr ann arbor mi usa com erim center electronic commerce box ann arbor mi usa erim org siemens zt ik germany bernhard bauer siemens de 
gaining wide acceptance agents industry requires relating nearest antecedent technology objectoriented software development artifacts support development environment full system lifecycle 
address requirements auml agent uml unified modeling language set uml idioms extensions 
illustrates approach presenting layer auml representation agent interaction protocols templates packages represent protocol sequence collaboration diagrams capture inter agent dynamics activity diagrams state charts capture intra agent inter agent dynamics 
successful industrial deployment agent technology requires techniques reduce risk inherent new technology 
ways reduce risk eyes potential new technology incremental extension known trusted methods provide explicit engineering tools support industry accepted methods technology deployment 
templates packages provide high level summary section sequence diagrams collaboration diagrams alternative views interactions agents section state diagrams activity diagrams detail internal behavior individual agents executing protocols section 
section summarizes contribution 
background agent uml auml synthesizes growing concern agent software methodologies increasing acceptance uml object oriented software development 
agent software methodologies agent community increasingly interested design methods representational tools support associated artifacts see helpful survey 
multi agent system engineering focus session atal entire maamaw :10.1.1.104.717
number groups reported methodologies agent design touching representational mechanisms support methodology 
report emphasizes methodology kinny colleagues modeling techniques bdi agents :10.1.1.27.9180:10.1.1.13.5956
close parallel observe design mechanisms agents objects shared number authors example 
gaia methodology includes specific recommendations notation supports high level summary protocol atomic unit notation reflected recommendations :10.1.1.10.2242
background agent uml auml synthesizes growing concern agent software methodologies increasing acceptance uml object oriented software development 
agent software methodologies agent community increasingly interested design methods representational tools support associated artifacts see helpful survey 
multi agent system engineering focus session atal entire maamaw :10.1.1.104.717
number groups reported methodologies agent design touching representational mechanisms support methodology 
report emphasizes methodology kinny colleagues modeling techniques bdi agents :10.1.1.27.9180:10.1.1.13.5956
close parallel observe design mechanisms agents objects shared number authors example 
gaia methodology includes specific recommendations notation supports high level summary protocol atomic unit notation reflected recommendations :10.1.1.10.2242
extensive program underway free university amsterdam compositional methodologies requirements design verification uses graphical representations strong links uml collaboration diagrams linear notations better suited alignment uml metamodel graphical mechanisms focus 
discussion compositionality protocols anticipated burmeister notation differs widely 
multi agent system engineering focus session atal entire maamaw :10.1.1.104.717
number groups reported methodologies agent design touching representational mechanisms support methodology 
report emphasizes methodology kinny colleagues modeling techniques bdi agents :10.1.1.27.9180:10.1.1.13.5956
close parallel observe design mechanisms agents objects shared number authors example 
gaia methodology includes specific recommendations notation supports high level summary protocol atomic unit notation reflected recommendations :10.1.1.10.2242
extensive program underway free university amsterdam compositional methodologies requirements design verification uses graphical representations strong links uml collaboration diagrams linear notations better suited alignment uml metamodel graphical mechanisms focus 
discussion compositionality protocols anticipated burmeister notation differs widely 
graphs facilitate identification character results agent playing specific role distinct agent playing different role 
capture distinction leveraging uml existing name role class syntax conjunction collaboration diagrams 
object constraint language ocl simple formal language express semantics uml specification 
define constraints model invariant pre post conditions operations navigation paths object net 
suggesting agent extensions uml representations packages templates sequence diagrams collaboration diagrams activity diagrams statecharts 
uml model semantics represented metamodel structure formally defined ocl syntax 
ocl metamodel offer resources capture kinds logical specifications anticipated example space permit exploring uml :10.1.1.10.2242
auml compared traditional approach objects agents autonomous interactive 
internal states activities include goals conditions guide execution defined tasks 
objects need outside control execute methods agents know conditions intended effects actions take responsibility needs 
furthermore agents act agents 
unbound parameters box divided horizontal lines categories role parameters constraints communication acts 
illustrates new package fig 
produced template definition fig 

wooldridge suggest similar form definition protocol definitions :10.1.1.10.2242
packaged templates pattern interaction 
formally defined abstracted away particular sequence execution steps 
viewing interactions way means attention focussed essential nature purpose interaction precise ordering particular message exchanges notation illustrated wooldridge graphical approach closely resembles uml expressing semantics 
fipa contract net protocol buyer seller seller refuse refuse understood propose reject proposal accept proposal cancel inform fig 
activity diagram agents interface indicated dashed lines 
intra agent uml statecharts supports singh notion agent skeletons 
payment receiver rejected order processor statechart order processor unacceptable payment received reject payment closed null received order cancelled close order order cancelled close order order shipped order close order payment receive payment acceptable payment received accept payment accepted order processor statechart null accepted assembled shipped order placed accept order order accepted assemble order order assembled ship order invoice days due date mark invoice customer pays mark invoice paid invoice statechart payment receiver statechart null transmitted order assembled prepare send invoice customer pays mark invoice paid paid 
statechart specifies order processing behavior agents 
uml provides tools specifying agent interaction protocols multiple levels specifying protocol expressing interaction pattern agents protocol internal behavior agent :10.1.1.10.2242
tools applied directly agent systems adopting simple idioms conventions 
cases suggest straightforward uml extensions support additional functionality agents offer current uml version 
proposed extensions considered oo community useful extensions oo development uml version 
furthermore auml notions developed applied pta projects www de agent realization personal travel assistant supported german ministry technology 
