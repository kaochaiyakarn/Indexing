line learning coordination functionally structured agents distributed data processing nagendra prasad victor lesser department computer science university massachusetts amherst ma 
nagendra cs umass edu design multi agent systems realistic worth oriented environments coordination problems involve intricate sophisticated interplay domain various system components 
achieving effective coordination systems difficult problem number reasons local views problem solving task uncertainty outcomes interacting non local tasks 
learning algorithm endows agents capability choose appropriate coordination algorithm problem solving situation domain distributed data processing 
achieving effective coordination multi agent system difficult problem number reasons 
agent control decisions local view problem solving task structures may lead inappropriate decisions activity results transmit agents results ask agents produce 
iri eec 
content necessarily reflect position policy government official endorsement inferred 
non coherent activity occur may optimal coordination strategy 
case local problem solving done efficiently additional overhead coordination 
nagendra prasad developed tool representing interesting complex coordination problems instantiating environment specific coordination mechanisms facilitating empirical studies effectiveness different coordination mechanisms different environments :10.1.1.54.6018
graph grammar stochastic task structure description language generation tool modeling task structures arising domain 
stochastic graph grammars capture morphological regularities domain 
grammars augmented attributes capture additional aspects domain semantics 
grammar generators model functionally structured agent organizations interrelationships functions domain distributed data processing empirically study effectiveness various coordination mechanisms different conditions domain 
stochastic graph grammars capture morphological regularities domain 
grammars augmented attributes capture additional aspects domain semantics 
grammar generators model functionally structured agent organizations interrelationships functions domain distributed data processing empirically study effectiveness various coordination mechanisms different conditions domain 
learning algorithm endows agents capability choose coordination mechanism problem solving situation maximize performance 
domain distributed data processing :10.1.1.54.6018
rest organized follows 
briefly review ms task structure representation complex multi agent coordination problems description graph grammar stochastic task structure description language 
show tool model distributed data processing problem 
description closely follows modeling organizational designs distributed data processing domain detail describe learning algorithm learns choose coordination modes different levels sophistication commitments tacit priori commitments dynamically generated commitments :10.1.1.54.6018
domain distributed data processing :10.1.1.54.6018
rest organized follows 
briefly review ms task structure representation complex multi agent coordination problems description graph grammar stochastic task structure description language 
show tool model distributed data processing problem 
description closely follows modeling organizational designs distributed data processing domain detail describe learning algorithm learns choose coordination modes different levels sophistication commitments tacit priori commitments dynamically generated commitments :10.1.1.54.6018
early encouraging experimental results conclude 
ms task analysis environment modeling simulation ms framework task analysis environment modeling simulation represents coordination problems formal domain independent way :10.1.1.37.4451
simplest terms ms model task environment specifies actions available agents actions relate performance system 
represent coordination problems distributed sensor networks hospital patient scheduling airport resource management distributed information retrieval pilot associate local area network diagnosis 
briefly review ms task structure representation complex multi agent coordination problems description graph grammar stochastic task structure description language 
show tool model distributed data processing problem 
description closely follows modeling organizational designs distributed data processing domain detail describe learning algorithm learns choose coordination modes different levels sophistication commitments tacit priori commitments dynamically generated commitments :10.1.1.54.6018
early encouraging experimental results conclude 
ms task analysis environment modeling simulation ms framework task analysis environment modeling simulation represents coordination problems formal domain independent way :10.1.1.37.4451
simplest terms ms model task environment specifies actions available agents actions relate performance system 
represent coordination problems distributed sensor networks hospital patient scheduling airport resource management distributed information retrieval pilot associate local area network diagnosis 
ms models problem solving activities intelligent agents operating complex environments ffl responses tasks required specific deadlines 
ffl problem solving environment involves worth oriented domain 
domain goals encoded functions rate acceptability states agents strive best solution possible necessarily optimal solution 
term quality refer acceptability characteristics temporal characteristics 
ffl optimal performance individual computational tasks may possible due missing incomplete information lack processing time 
ffl computational results multiple agents may need integrated form complete solution 
deal learning :10.1.1.54.6018
ffl subproblems may interdependent solved independently isolation 
ffl agents may concurrently contribute achievement multiple goals involving potentially different subsets agents 
implication deadline requirement representation specify multiple ways accomplish goal trade time produce result quality acceptability result 
possibility incomplete missing information necessity lead agents working satisficing mode problem solving structured operate effectively missing information 
default sum task group qualities 
define control function alternately strategy decision rule control policy agent agent current beliefs time return action agent take time 
statement cooperative coordinated control problem similar spirit specification team theory decision problem find set control functions agent environment attempt maximize expected performance measure entire system agents 
similar problem studied dai multi agent self interested coordination problem choose agent control function attempt maximize performance realization agents doing likewise 
grammar task structure generation decker lesser illustrate importance extensive empirical studies determining role different coordination algorithms different task environments :10.1.1.32.8351
studies relied weak task environment generator experimenter limited setting certain numerical parameters mean task structure depth mean variance number interrelationships task structures 
gives rise wide range task structures huge variance types capabilities needed system effectively handle 
importantly real applications involve infinite variety task structures 
domain semantics dictate limit morphology task structures 
table shows results sets experiments 
cell table shows quality averaged runs particular parameter settings 
crisis tg ibl data flow modular rough probability table average quality table shows crisis tasks probability modular performed better rough data flow significantly better wilcoxon matched pair signed ranks test significance level 
crisis tasks probability increases rough data flow algorithms outperform modular 
discusses reasons performance dynamics :10.1.1.54.6018
summarize refer readers interested details :10.1.1.54.6018
commitment mechanisms implemented gpgp way 
commitments predecessor interrelations agents successor way 
results agent trying take advantage commitments agents process delaying execution methods late agents execute agent expected know inter relationships effecting tasks may know exact tasks agents effect communicating 
cell table shows quality averaged runs particular parameter settings 
crisis tg ibl data flow modular rough probability table average quality table shows crisis tasks probability modular performed better rough data flow significantly better wilcoxon matched pair signed ranks test significance level 
crisis tasks probability increases rough data flow algorithms outperform modular 
discusses reasons performance dynamics :10.1.1.54.6018
summarize refer readers interested details :10.1.1.54.6018
commitment mechanisms implemented gpgp way 
commitments predecessor interrelations agents successor way 
results agent trying take advantage commitments agents process delaying execution methods late agents execute agent expected know inter relationships effecting tasks may know exact tasks agents effect communicating 
methods enabled results 
design time scheduling uncertainty 
cs technical report university massachusetts 

grammatical approaches engineering design part research engineering design 
nagendra prasad keith decker alan garvey victor lesser :10.1.1.54.6018
exploring organizational designs taems case study distributed data processing 
proceedings second international conference multi agent systems kyoto japan december 
aaai press 

