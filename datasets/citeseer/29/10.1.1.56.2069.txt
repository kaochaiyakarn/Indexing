combining logical agents rapid prototyping engineering distributed applications philip dart ed 
maurizio martelli mascardi leon sterling subrahmanian zini department computer science university melbourne australia email ed cs mu oz au universit di genova genova italy email mascardi disi unige department computer science university maryland williams building college park md usa email vs cs umd edu 
realization new distributed heterogeneous software applications challenge software engineers face 
logic programming multi agent systems play effective role rapid prototyping new software products 
proposes general approach prototyping complex distributed applications modelled multi agent systems outlines autonomous research experiences different research groups proposal originates 
experiences logic programming common foundation deal different aspects problem integration heterogeneous data reasoning systems animation formal specifications development agent software 
database module pro industry industry industry sorter images recognizer legacy software executable mas prototype multimedia character resumes module hermes resumes fig 

finding job agency example 
existing multimedia database existing module recognizes type written characters 
module indexes es content may standard text indexing techniques implemented full text indexing system accessible hermes mediation system :10.1.1.50.2010
interface agent modelling interfaces existing legacy software multimedia db character recognizer es sorter 
industries requests autonomously regular intervals time pro interacts find database es people match certain requirements 
pro wants find job persons possible tries combine industries requests optimize number engagements 
interacts industries propose candidates adjust plans industries answers needs adopt high level reasoning mechanism behave rationally 
animation effective detecting problems specification animating specification provides means testing model properties interactively 
properties animation suitable earlier iterations model incorrect incomplete evolving 
animation perform verification simple dependency management system illustrated 
linear logic enriches operational interpretation classical logic formulas treated resources 
idea incorporated linear logic extensions logic programming originated new paradigm linear logic programming :10.1.1.105.9758
paradigm successfully applied formalize important programming aspects state computations object orientation data aspects concurrency 
features suitable framework specifying distributed systems agent systems particular 
notion state natural correspondence notion state beliefs agent possibility resources computation natural means supporting dynamic changes behaviour agent 
department computer information science genova university italy language hhf developed 
