dag matching techniques information retrieval structured documents holger klaus schulz center information language processing university munich cis uni muenchen de november establishment international standards document representation sgml oda xml attention information retrieval shifted representation models query languages active logical structure contents documents document database 
time representation structure important types databases 
related approaches tree matching expressive intuitive formalisms querying databases entities 
original formulation leaves aside problems arise real life applications information retrieval 
extend tree matching dag matching suggest various techniques useful formalism practical ir system 
particular suggest representation answers cope potentially huge number entities set answers query explicitly show index structure computation representation 
particular suggest representation answers cope potentially huge number entities set answers query explicitly show index structure computation representation 
addition possibilities query modification sketched 
furthermore discuss constraint techniques enhancing expressive power formalism level logical structure index structure 
advent success sgml iso gol related standards document representation xml gp oda iso interest information retrieval ir shifted systems essentially treat documents flat unstructured files systems querying languages explicitly take logical structure contents documents account 
various formalisms proposed gt km suggesting compromise expressiveness efficiency see surveys :10.1.1.115.6010
time traditional view data changed new types databases arose different areas structure entities collected represents important features search 
document databases play important role addition scientific fields created specific databases structured entities particular form 
layout structure represented explicitly oda iso 
computational linguistics databases parsed phrases sentences built supporting memory translation 
document databases play important role addition scientific fields created specific databases structured entities particular form 
layout structure represented explicitly oda iso 
computational linguistics databases parsed phrases sentences built supporting memory translation 
examples databases computational biology medicine databases program fragments distinct functionality reuse gis geographical information systems cases structure entities adequately described means trees 
situation mentioned formalisms tree matching probably offers greatest expressiveness user wants refer different parts tree query :10.1.1.17.2042
formalism introduced problems immediately arise practice real life ir applications left aside :10.1.1.17.2042
detailed suggestion integrate index structure support search 
cardinality answer set query may polynomially high size database suggestion set solutions user 
presentation tree matching concentrates algorithms just decide solvability query 
layout structure represented explicitly oda iso 
computational linguistics databases parsed phrases sentences built supporting memory translation 
examples databases computational biology medicine databases program fragments distinct functionality reuse gis geographical information systems cases structure entities adequately described means trees 
situation mentioned formalisms tree matching probably offers greatest expressiveness user wants refer different parts tree query :10.1.1.17.2042
formalism introduced problems immediately arise practice real life ir applications left aside :10.1.1.17.2042
detailed suggestion integrate index structure support search 
cardinality answer set query may polynomially high size database suggestion set solutions user 
presentation tree matching concentrates algorithms just decide solvability query 
generalizes tree matching dag matching suggests various techniques useful formalism practical ir system 
supernode depicted figures 
nodes documents symbols decorations 
terms document database target 
modeling queries dag structures queries document databases modeled dag structures describing search pattern 
provides user easy intuitive graphical query language proposed tree matching formalism graph databases cm :10.1.1.17.2042
slight differences queries documents ffl different kinds edges soft rigid describing strict requirements hierarchical relationships 
navarro queries language chapter becker tree inclusion tree structured baeza yates tree repr 
query approach querying temporal logic lists trees syntax fi se fi aim model textual data graphical contents structure integrating view tree au ti fi au ti bo ar se se fi bo ar ti au se fi ar bo se ellipses structural nodes rounded text nodes labels written inside nodes ar article au author ti title bo body se section fi labeled dag ffl nodes query dag structures attached variables 
mechanism distinguishing parts query specifying contextual pattern parts user really interested 
mechanism distinguishing parts query specifying contextual pattern parts user really interested 
ffl relations nodes query dag called constraints 
query may contain constraint names defined document database set constraint names query subset set relation names document database 
convention possible define different families query languages depending constraints may 
minimal query language io offers inequality order constraints cn constraints queries formulated superset inclusion problems tree matching framework relevant document databases :10.1.1.17.2042
ordered unordered tree path inclusion 
meaning constraints defined extension function fl target dag 
definition divides query edges soft rigid edges order give user richer query facilities enhance representation independence 
definition edges query dag divided disjoint sets es er edges es called soft edges denoted edges er called rigid edges denoted means iff example dag structure depicted 
theorem state correctness idm algorithm 
query container dag built course algorithm target candidates removed edges added container dag 
general approach query evaluation mixed bottom top approach text leaf query evaluated independently surrounding query dag bottom fashion index structure maps search term set paths 
paths combined query container dag top manner pattern described query resulting container dag car query target 
note contrast algorithms algorithms pattern recognition tree automata wm gs target tree marked matching information algorithm copy query corresponding container dag marked information matching nodes target candidates :10.1.1.17.2042
algorithms manipulate set intermediate results don maintain relations nodes 
introducing algorithm mathematical definitions necessary 
describe different meanings restricting container dags 
informally delta derives delta restricting delta reflexive delta descendants depicted figures 
notion trees dags natural directed graphs representing structured documents opposed hypertext models strong 
proposes query language dags lists trees operators temporal logics 
time simple elegant approach involves notion homomorphisms 
unfortunately complexity evaluating queries data complexity polynomial 
structured document retrieval surveys field :10.1.1.115.6010
apart overlapped lists models field trees represent structured documents 
differ explicit proximal nodes tree matching km implicit overlapped lists pat st representation structure comment issue representation strings gt 
explicit representation nodes stored objects nodes know children explicitly 
implicit model explicit notion nodes tags scattered text representing structure 
query expressions similar graph rewriting expressions composed parts part users describes graph pattern second part replacement graph defined specifies new graphs constructed subgraphs target match pattern 
query language sql oriented allows joins variables 
high expressivity prone combinatorial explosion due nonlinearity 
interesting techniques introduced order implement matching algorithm specified dff 
tree matching revisited section fix class tree matching problems described subclass dag matching introduced :10.1.1.17.2042
defines variants tree matching problems depending strictness requirements homomorphism constitutes solution :10.1.1.17.2042
problems classes require homomorphisms don 
original contains constraints soft edges 
tree matching problems introduced applicable queries structured documents rigid real life applications :10.1.1.17.2042
query language sql oriented allows joins variables 
high expressivity prone combinatorial explosion due nonlinearity 
interesting techniques introduced order implement matching algorithm specified dff 
tree matching revisited section fix class tree matching problems described subclass dag matching introduced :10.1.1.17.2042
defines variants tree matching problems depending strictness requirements homomorphism constitutes solution :10.1.1.17.2042
problems classes require homomorphisms don 
original contains constraints soft edges 
tree matching problems introduced applicable queries structured documents rigid real life applications :10.1.1.17.2042
problems ordered unordered tree path inclusion problems provide flexibility allow reasonable queries km 
tree matching revisited section fix class tree matching problems described subclass dag matching introduced :10.1.1.17.2042
defines variants tree matching problems depending strictness requirements homomorphism constitutes solution :10.1.1.17.2042
problems classes require homomorphisms don 
original contains constraints soft edges 
tree matching problems introduced applicable queries structured documents rigid real life applications :10.1.1.17.2042
problems ordered unordered tree path inclusion problems provide flexibility allow reasonable queries km 
definition query called homogeneous ffl edge ordered contains order constraints ffl edges soft edges rigid edges 
tm class dag matching problems set containing query document pairs ffl query tree ffl target edge ordered tree ffl nodes query pairwise connected inequality constraints ffl query homogeneous 
depending type edges occurrence order constraints tm class important querying structured documents tree matching problems ordered unordered tree path inclusion problems 
problems ordered unordered tree path inclusion problems provide flexibility allow reasonable queries km 
definition query called homogeneous ffl edge ordered contains order constraints ffl edges soft edges rigid edges 
tm class dag matching problems set containing query document pairs ffl query tree ffl target edge ordered tree ffl nodes query pairwise connected inequality constraints ffl query homogeneous 
depending type edges occurrence order constraints tm class important querying structured documents tree matching problems ordered unordered tree path inclusion problems 
idea mind tree matching lies core dag matching formalism introduced seen dag matching modifies generalizes tree matching dimensions comes different course alternative explicit dynamic structures efficiently implemented :10.1.1.115.6010
think argumentation shows explicit dynamic structures implemented efficiently flat text structure representation coupled weakly 
obligation prove efficient implementation side 
ffl dimension algorithm index structure provides efficient access terms occurring documents 
original literature tree matching integration index structures planned fully elaborated 
ffl dimension algorithm index structure provides efficient access terms occurring documents 
original literature tree matching integration index structures planned fully elaborated 
addition concept complete answer representations cars defined order avoid combinatorial explosion number solutions query 
ffl modeling dimension proposed concept directed acyclic graphs dags mathematical basis modeling documents defined necessary terminology 
algorithms presents evaluating queries extended major changes dags trees :10.1.1.17.2042
ffl dimension query power extended tree matching framework heterogeneous queries allow different portions query different restrictions homomorphism represents solution 
addition introduced notion constraints help possible define query relations nodes query target dags 
prototypical implementation exists serious implementation consider issues haven dealt far graphical user interface presentation cars answers users input queries integration database system store documents index structure efficiently 
extensions useful necessary multidimensional index structures employed represent structural occurrences terms semantic fields 


algebra hierarchically organized databases 
information processing management 
baeza yates navarro :10.1.1.115.6010
integrating contents structure text retrieval 
sigmod record 
cacs christophides abiteboul cluet scholl 
structured documents novel query facilities 
jaakkola en 
sgml tree transformation language 
proc 
fifth symposium programming languages software tools pages 
:10.1.1.17.2042
tree matching problems applications structured text databases 
phd thesis dept computer science university helsinki 
km mannila 
retrieval hierarchical texts partial patterns 
