designing visual thinking tools mixed initiative systems pearl pu ergonomics intelligent systems design database laboratory swiss institute technology lausanne switzerland pearl pu epfl ch visual thinking tools empower people solving complex problems engaging entire resolution process suggesting appropriate actions visual cues reducing cognitive load keeping visual reification current task 
time visual interaction style provides alternative current dialog model employed mixed initiative mi systems 
visual enabled mi systems avoid complex analyses put users control time 
discuss implementation visual affordances systems examples visual mi system developed 
show humans effectively concentrate synthesizing problems selecting resolution paths unseen machine reformulating problems solutions unsatisfactory 
discuss evaluation techniques 
keywords visual thinking mixed initiative systems interactive information visualization visualization complex information visualizing algorithms visualization techniques instruments aiding human cognition 
ancient china abacus invented visual apparatus store temporary calculation results perform additions display final results 
shop keeper abacus chat clients total amount purchases time pencil piece tools 
evolution computers advances algorithms possibility thinking tools extends simple calculations 
thinking act problem synthesis strategy selection ability refine problem formulation current resolution strategy fails 
thinking requires mental denis avenue major switzerland denis hotmail com resources 
empowering tool part carry thinking book keeping time 
case abacus rules computation manipulating beads visual reading 
visual tools prompt users appropriate actions design visual cues reflect corresponding inference processes perform 
time think problem modeled inference engines automatically perform tasks 
show examples investigation mixed initiative system solving configuration tasks 
show users rely kaleidoscope selecting search strategies tradeoff maps performing multi variant tradeoff analysis high dimensions conflict resolution lattice discovering conflicts original problem definition 
chinese abacus designing mixed initiative systems mixed initiative systems rely inference engines solve parts problem automatically 
abstraction techniques help design identify automatic processes 
ai literature abstraction encoding problem inference engine exists automatically generate solutions 
configuration tasks constraint satisfaction problem solving abstraction method 
inference engines various csp algorithms 
jcl java constrain library repository csp algorithms 
single csp algorithm configuration problems csps np complete 
human ingenuity required choose algorithms suitable ones depending problem context 
visual reification tasks abstraction model visually represented reify configuration tasks problem solving process 
shows example interfaces landscape design problem assign land pieces structures community 
structures houses apartments school recreation area cemetery 
land pieces available construction 
characteristics view noise level ground characteristic 
lots lot cemetery recreational area 
solution landscape design problem lot lot school lot cemetery lot apartment lot recreational area lot houses assignment land pieces structures constraints satisfied criteria optimized 
put houses example constraint 
solution optimal total satisfaction land highest 
optimization case multi variant terms cost noise level quality view closeness school unable reach circle violation constraints occurred assignments 
color blocking areas corresponds constraint caused failure assignment 
color patterns black lines color elements guide humans change current search strategies results far satisfactory 
landscape design problem 
kaleidoscope csp algorithm straight forward backtracking search assigning land pieces lot lot lot lot lot lot lot lot structure 
time checks constraint violations 
kaleidoscope visualizes internal state search process starts line 
sweeps entire search space represented disk counter clock wise direction 
assignment structures existing lots called valuation 
unsuccessful valuations immediately discarded algorithm goes back variable 
black segments correspond successful assignment structure 
successful valuation single black line reaching way outer circle 
hand areas black lines due violation constraints occurring right 
areas short black lines kaleidoscope backtracking search 
instance phenomenon called thrashing backtracking occurs search repeatedly fails certain combination values 
corresponds large area kaleidoscope blocked color 
detect easily constraint responsible thrashing looking color coding shown 
area light gray indicates constraint recreational structure built lot severe slope blocking solutions 
color code constraints 
origin thrashing search algorithm starts lot lot eliminated consideration recreational area 
remedy problem intelligent techniques called pre processing algorithms developed attempt eliminate inconsistencies possible search begins 
addition search start structures difficulty finding lot 
algorithm called dynamic variable ordering reduce number search steps case landscape design 
effective large problems 
shows problem different variable orderings 
top bottom parameters order optimal order accelerate search 
addition monte carlo search algorithm called knuth algorithm assess search space numerous solutions 
main idea explore places search space quickly randomly 
users draw idea shape space order precise search specific part space backtracking method 
thrashing occur type frequency 
preprocessing algorithms employed 
solutions diversified concentrated clusters 
solutions abundant search futile 
efficient random algorithms pareto space tradeoff analysis second visualization consists multi criteria tradeoff analysis map solution space 
model especially useful constrained problems solutions compete attention 
users rely visualization assistance order evaluate solutions intelligent decisions 
map solutions serves abstraction reasoning 
boden pointed mental map shows things roads led boundary lies 
tradeoff maps show trend scope extremities elements 
consider landscape design example suppose users selected evaluating criteria maximize cost factor view 
shows solution space nodes represent solutions axis axis represent solution performance selected criteria 
node performs best criteria called dominant solution 
solution absent nodes lying outer rim solution space called non dominant nodes red 
nodes blue called dominated solutions 
cases solution map contain dominant node requiring tradeoff analysis choose winner nondominant solution users dynamic preference measure 
example user prefers optimize view willing compromise cost choose red node lying farthest axis value best 
competing solutions exist users prompted choose additional criteria dominant solutions emerge 
visualization called pareto space optimization feasible criteria 
real world problems call tradeoff analysis higher dimensions 
knuth algorithms visualized kaleidoscope 
summarize visualization technique enumerate set inferences users perform relying information kaleidoscope current algorithm efficient generating solutions 
knuth algorithm guide selection search strategies 
pareto visualization comparing solutions criteria 
tradeoff map new visualization overcomes limit combining color patterns visual structures interactivity 
called tradeoff balance solutions mapped axis behavior weights balance 
solution having criteria shown right calculate position tradeoff balance follows 
coordinates represent total sum criteria values 
solution performs best speaking node largest value 
calculate coordinates imagine weights corresponding criteria values solution lying bottom tradeoff map 
coordinate center mass weights 
represents absolute performance value shows distribution underlying criteria balance 
tradeoff analyses required users slide left right middle depending current preferences 
instance current solution shown left performs view cost effective 
cases solutions pulled multiple criteria values individually criteria distinguishable 
case interactivity solves problem allowing users click solution nodes clarify details 
notice colors coded small display synchrony criteria bars bottom 
tradeoff analysis multi variant spaces associate inferences dominant solution 
numerous non dominant solutions 
additional criteria defined order push dominant solutions 
solutions cluttered certain area spread map 
balance visualization selection solution relation solution space conflict resolution lattice third design consists set reasoning algorithms discover conflicts constrained problems lattice visualization tool 
conflicts occur constraints contain inconsistencies defined simultaneously constraints defined 
conflict resolution involves pinpointing set sets constraints responsible constrained csps humans eliminate repair 
conflict sets represented squares interactive lattice shown 
top sets smallest conflict sets correspond constraints pointed arrows 
meaning constraints explained detail moment 
sets ordered top bottom sizes set bottom largest 
square black minimal conflict set 
dark blue set blocks certain number solutions 
darker potential solutions blocks 
human conflict solver eliminate black conflict sets find smallest top darkest blue set constraints relax 
normal lattices contain lines relate sets sub supersets lattice interactive displays set superset relationship set clicked 
bottom white square set white squares lying 
allows displaying large lattice risk having lines causing visual overloading 
discuss different cases conflict sets 

example selecting watch design criteria relationships beauty implementation lattice interactive form inconsistent csps inconsistent csp set constraints inconsistent defined time 
shown simple inconsistent csp definition lattice visualization 
squares top row represent sets constraints need disjunctively eliminated order restore consistency problem 
furthermore clicks square number shown side window indicate number potential solutions obtainable 
eliminating produce solutions generate solutions 
complexity implementation usability complexity usability complexity beauty implementation black squares correspond minimal conflict sets 
minimal conflict sets relaxed generate solutions 
black square clicked lattice shows subsets see lattices 
subsets define parts original inconsistent problem constrained problems single conflict set constrained problem sets constraints defined way solution exist 
bigger csp contains overconstrained csp solutions 
identifying minimal conflict sets major map coloring problem task 
visual lattice type conflict sets displayed black 
consider example map coloring problem neighboring countries 
country colored red blue neighboring countries color problem constrained 
find smaller conflict set repair user clicks black square lattice 
blues subsets shown 
shown repairing allow exactly solutions 
multiple conflict sets problems minimal conflict sets indicated black squares red black lattice constrained problem conflict sets problems solutions exist 
information guides users choose subsets keep 
example clicking black square lattice subsets shown 
keep subset second 
second subset larger set keeping automatically allows keep largest original problem 
visualizing conflicts largest consistent subsets offer designers choice throw away keep difficult decision design requires experience gut feeling dynamic criteria designers 
futile search worst scenario constrained csp actual solutions search algorithm take exponential amount time find 
csp size larger parameters equal amount constraints impossible wait results 
knuth algorithm estimate quickly search space csp poor 
occurs conflict resolution involves finding degree sets constraints 
case constrained problems notion sets constraints 
conflict set sets allow partial solutions full solutions 
define notion called blocking rate percentage partial valuations possible combinations 
lattice visualization recall sets colored blue darker blue blocking multiple blocking sets user focus 
sets lying top row smaller underneath 
smaller set easier users modify constraints 
general heuristic find smallest top darkest blue set constraints relax 
furthermore visualization linked map solutions described section 
square lattice invoke secondary windows display potential solutions obtained constraints relaxed 
advantage coupling avoid doing entire search process users certain quality solutions obtain 
futile search scenario 
lattice visualization collaboration tradeoff view order browse potential space solutions 
shown design scenario pen consists cap body button tube addition variables 
seen kaleidoscope valuations satisfying constraints possible space solutions 
help lattice realize squares top row look promising small potentially yield solutions respectively 
tradeoff map shows solutions permitted square constraints ranking high tradeoff analysis 
easily try eliminate constraint relax 
summarize section constrained problems list type inferences representing different reasoning tasks corresponding results get lattice visualization csp problem constrained single black squares lattice conflict sets relax side window select optimal look constraint definition find appropriate certain conflicts removed potential solution characteristics reflected map solutions tradeoff 
search futile degree lead users relax certain constraints obtain solutions evaluation hypothesis visual thinking tools facilitate human solving hard problems allows high bandwidth communication human machine 
set evaluation procedure determine questions 
users understand inferences machines visualizations 
users perform cognitive reasoning perceiving visual elements 
call questions comprehension communication issues 
evaluation concrete set subject studies asking users solve real design problems constrained inconsistent constrained 
subject asked write problem solving strategies asked perform tasks 
subjects students university computer science background 
observed remarks test knuth algorithm find problem yields solutions overconstrained 
minutes solved design problems constrained constrained 
brief explanation lattice tool navigate constraint editor modify problem obtain interesting solutions 
interactive search feature kaleidoscope search underway aware role variable order search speed told color coding 
general satisfied learning speed subjects 
comprehension issue scores test users discover functionalities minimal explanation 
communication issue satisfactory average duration design problem solving shorter take solve problems visualization feedback 
furthermore user knowledge retention quite 
subjects asked come back reuse explanation needs 
background related hybrid reasoning mixed initiative systems mixed initiative systems refer artificial intelligent systems users input intervention solicited entire automatic reasoning process 
mid allen ferguson developed interactive planning systems trains combined speech natural language plan recognition planning simulation components human computer collaborative environment 
time roth developed set techniques incorporated data visualization exploration systems 
main goals interpret scheduler results assess implications solutions simulation incorporate external data sources planning perspectives perform rescheduling actions 
mixed initiative systems shown promises terms performance flexibility interaction style mainly dialog models 
visualization explain scheduling results prompt users appropriate problem solving actions 
method hand motivated visual thinking provides important alternative dialog models 
knowledge chapter card gave example knowledge task visual tools 
consists gathering information diverse sources foraging searching representational form schema capture data modifying representation include attributes performing tradeoff analysis reach decision 
process humans rely visual representational techniques help organize thoughts discover areas insufficient knowledge 
knowledge making ideas clear bringing focus discovering new ones 
visual representation tasks method corresponds representational form knowledge 
problem synthesis terms corresponds synthesis modification schema knowledge 
major difference visualization methods come inference engines solutions automatically generated 
addition visual cues help humans think solve problems just clarify ideas 
intelligent agents find similar examples area intelligent agents treat problem solving 
mainly classes agents self learning agents watch shoulder user trained perform tasks user autonomous ones solve problems users 
differs intelligent agents main reasons users system part problem solving architecture interaction human machine visualization learning techniques 
radial layouts kaleidoscope renders search process explores tree structure 
radial display natural choice 
kaleidoscope animates going process problem solving session 
visualization multivariate spaces visualizing data sets employs scatter plots 
data dimension increases difficult mediate goals achieving visual clarity data representation accuracy 
example methods data accurately mapped points space users hard times seeing navigate spaces 
previous works explored different methods rendering multivariate data sets 
tool tradeoff map novel terms unique metaphor balance tradeoff process 
defined notion visual thinking tools combine ai techniques visualization methods 
reasoning process machine displayed visually cues provided help users choose intervention actions 
shown basic design elements methodology building systems examples kaleidoscope tradeoff maps conflict resolution lattice 
evaluation demonstrated effectiveness tools augment human reasoning skills solving configuration problems 

allen 

mixed initiative planning 
position arpa rome labs planning initiative workshop 

andrews heidegger 

information slices visualizing exploring large hierarchies cascading semi circular discs 
proceedings ieee information visualization symposium late breaking hot topics 

clifford steven feiner 

automated design virtual worlds visualizing multivariate relations 
arie kaufman gregory nielson editors proceedings ieee visualization pages 

boden 

creative mind 
basic books 

card mackinlay shneiderman 
eds 

readings information visualization vision think 
morgan kauffman publishers san francisco ca 

sheila mcilraith tony todd robert richard fikes 

thoughts practical theory reformulation reasoning physical systems 
symposium abstraction reformulation approximation 

chuah dynamic aggregation circular visual designs 
wills dill editors proceedings ieee symposium information visualization los alamitos pages 
ieee cs press 

eugene freuder 

synthesizing constraint expression communications acm 

ferguson allen miller 

trains mixed initiative planning assistant proceedings rd conference ai planning systems 



star coordinates multidimensional visualization technique uniform treatment dimensions 
proceedings ieee information visualization symposium late breaking hot topics 

knuth 

estimating efficiency backtrack programs mathematics computation 

max metral lashkari pattie maes 

collaborative interface agents proceedings national conference artificial intelligence 

alan mackworth 

consistency networks relations artificial intelligence 

pattie maes 

agents reduce information overload communications acm 

nadel 

tree search arc consistency constraint satisfaction algorithms 
kanal kumar editors search artificial intelligence pages 
springer verlag 

gregory nielson thomas foley bernd hamann david lane 

visualizing modeling scattered multivariate data 
ieee computer graphics applications may 

pareto 

cours technical report rouge lausanne switzerland 

roth lucas burks 

user interface environment exploring information proceedings information visualization 

onn shehory sarit kraus 

task allocation coalition formation autonomous agents proceedings th international joint conference artificial intelligence 

marc rainer faltings 

java constraint library bringing constraint technology internet java language 
working notes workshop constraints agents technical report ws aaai 
available epfl ch project jcl 
edward tsang 

foundations constraint satisfaction academic press 
