coordination models languages papadopoulos software engineering sen sen december voor en informatica report sen issn cwi box gb amsterdam netherlands cwi national research institute mathematics computer science 
cwi part smc dutch foundation promotion mathematics computer science applications 
smc sponsored netherlands organization scientific research 
cwi member ercim european research consortium informatics mathematics 
copyright box gb amsterdam nl sj amsterdam nl telephone coordination models languages george papadopoulos department computer science university cwi box gb amsterdam netherlands new class models formalisms mechanisms evolved describing concurrent distributed computations concept coordination 
purpose coordination model associated language provide means integrating number possibly heterogeneous components interfacing component way collective set forms single application execute take advantage parallel distributed systems 
concept coordination closely related heterogeneity 
coordination component separate computational views processes comprising black boxes actual programming languages write computational code play important role setting coordination apparatus 
furthermore coordination component offers homogeneous way interprocess communication abstracts away machine dependent details coordination encourages heterogeneous ensembles architectures 
concept coordination means limited computer science 
seminal malone crowston characterise coordination emerging research area interdisciplinary focus playing key issue diverse disciplines economics operational research organisation theory biology :10.1.1.99.8377
consequently definitions coordination ranging simple ones coordination managing dependencies activities 
elaborate ones coordination additional information processing performed multiple connected actors pursue goals single author pursuing goals perform 
area programming languages probably widely accepted definition carriero gelernter coordination process building programs active pieces 
consequently coordination model glue binds separate activities ensemble 
structured gamma particularly suited concept coordination addresses interpreted individual entities coordinated 
associated value defines behaviour programming language independent coordination relations correspond communications links 
structuring type provides description shape configuration 
structured gamma modelling software architectures particular type coordination usually modelled coordination languages control driven family 
instance structured gamma code models client server architecture cs nn nn cr cn ca nc nn nn sr ns sa sn nn nn mn cr respectively communication link client manager dual link new client added means rewrite rule mn cr cn ca nc lo linear objects lo object oriented language interaction machines computational model :10.1.1.22.2040:10.1.1.22.2040
concept interaction closely related principles underpinning theory linear logic fact lo linearity multiset rewriting gamma asynchronous actor communication means broadcasting 
lo views computation system communicating agents state represented multiset 
agents evolve terms transitions transformations state addition agents created terminate 
inter agent communication achieved means broadcasting 
hand control driven coordination languages manifold support multiple port port stream connections employ limited forms broadcasting 
furthermore streams class citizens able hold data stream connections break get different coordinated processes providing certain extent functionality shared communication medium 
authors belief number novel coordination models languages proposed converge approaches formation communication media provide desired ideal 
degree shared point point communication support naturally structuring programs 
issue coordination broad article concentrated programming languages aspect furthermore advocated practical flavour :10.1.1.99.8377
aspects coordination related say workflow management cooperative software composition name addressed 
dwell theoretical issues semantics formal specification reasoning 
coordination models languages evolved rapidly past years concept coordination introduced aspects contemporary computer science including middleware domains web corba platforms modelling activities information systems coordination large application areas software engineering open distributed systems 
expect proliferation models languages years come addressing issues possibly offering unified solutions number different application domains 
