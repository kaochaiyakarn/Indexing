view dependent refinement progressive meshes hugues hoppe microsoft research level detail lod representations important tool realtime rendering complex geometric environments 
previously introduced progressive mesh representation defines arbitrary triangle mesh sequence approximating meshes optimized view independent lod 
introduce framework selectively refining arbitrary progressive mesh changing view parameters 
define efficient refinement criteria view frustum surface orientation screen space geometric error develop real time algorithm incrementally refining coarsening mesh criteria 
algorithm exploits view coherence supports frame rate regulation require total frame time graphics workstation 
continuous motions amortized consecutive frames 
addition smooth visual transitions geomorphs constructed selectively refined meshes 
number previous schemes create view dependent lod meshes height fields terrains parametric surfaces nurbs 
framework performs special cases 
notably absence rigid subdivision structure allows accurate approximations existing schemes 
include results cases general meshes 
cr categories computer graphics picture image generation display algorithms computer graphics computational geometry object modeling surfaces object representations 
additional keywords mesh simplification level detail multiresolution representations dynamic tessellation shape interpolation 
rendering complex geometric models interactive rates challenging problem computer graphics 
rendering performance continually improving significant gains obtained adapting complexity model contribution rendered image 
ideal solution efficiently determine coarsest model satisfies perceptual image qualities 
common heuristic technique author versions model various levels detail lod detailed triangle mesh object close viewer coarser approximations substituted object 
lod meshes computed automatically mesh simplification email microsoft com web research microsoft com hoppe techniques :10.1.1.26.5662:10.1.1.26.5662:10.1.1.153.3865
introduced progressive mesh pm representation captures continuous sequence meshes optimized view independent lod control allows fast traversal sequence runtime :10.1.1.153.3865
sets sequences view independent lod meshes appropriate applications difficulties arise rendering large scale models environments may surround viewer faces model may lie outside view frustum contribute image 
faces typically culled early rendering pipeline processing incurs cost 
similarly unnecessary render faces oriented away viewer faces usually culled test cost 
view frustum regions model may lie closer viewer 
view independent lod meshes fail provide appropriate level detail entire model mesh 
problems addressed representing graphics scene hierarchy meshes 
parts scene outside view frustum removed efficiently hierarchical culling lod adjusted independently mesh hierarchy 
establishing hierarchies continuous surfaces challenging problem 
instance terrain mesh partitioned blocks blocks rendered different levels detail address problem cracks blocks 
addition block boundaries correspond natural features surface resulting suboptimal approximations 
similar problems arise adaptive tessellation smooth parametric surfaces 
specialized schemes adaptively refine meshes cases height fields parametric surfaces summarized section 
offer general runtime lod framework selectively refining arbitrary meshes changing view parameters 
similar approach developed independently xia varshney scheme summarized compared section 
principal contributions presents framework real time selective refinement arbitrary progressive meshes section 
defines fast view dependent refinement criteria involving view frustum surface orientation screen space projected error section 
presents efficient algorithm incrementally adapting mesh refinement criteria section 
algorithm exploits view coherence supports frame rate regulation may amortized consecutive frames 
reduce popping geomorphs constructed selectively refined meshes 
shows triangle strips generated efficient rendering mesh connectivity irregular dynamic section 
demonstrates framework effectiveness important special cases height fields tessellated parametric surfaces general meshes section 
notation denote triangle mesh tuple set vertices vj positions vj set ordered vertex triples vk specifying vertices triangle faces counter clockwise order 
neighborhood vertex denoted nv refers set faces adjacent related view dependent lod domains previous view dependent refinement methods domains fall categories height fields parametric surfaces 
exist numerous methods simplifying height fields subset support efficient view dependent lod 
hierarchical representations grid quadtrees quaternary triangular subdivisions general triangulation hierarchies 
subdivision approach generalizes dimensional domains arbitrary topological type 
quadtrees quaternary subdivisions regular subdivision structure view dependent meshes created schemes constrained connectivities require polygons accuracy called triangulated irregular networks tin 
previously thought dynamically adapting tin interactive rates prohibitively expensive 
demonstrate real time modification highly adaptable tin framework extends arbitrary meshes 
view dependent tessellation parametric surfaces nurbs requires fairly involved algorithms deal parameter step sizes trimming curves stitching adjacent patches 
real time schemes sample regular grid parametric domain patch exploit fast forward differencing simplify patch stitching process 
framework allows real time adaptive tessellations adapt surface curvature view parameters 
review progressive meshes pm representation arbitrary mesh simplified sequence edge collapse transformations ecol yield simpler base mesh see ecol :10.1.1.153.3865
ecol 
ecol inverse called vertex split transformation process reversed vsplit 
vsplit 

tuple forms pm representation vertex split parametrized vsplit vs vl vr vt fl fr modifies mesh introducing new vertex vt new faces fl fvs vt fr fvs vr shown 
resulting sequence meshes effective lod control 
addition smooth visual transitions geomorphs constructed meshes sequence 
create view dependent approximations earlier describes scheme selectively refining mesh userspecified query function vs :10.1.1.153.3865
basic idea traverse vsplit ecol fl fr vs original definitions refinement vsplit coarsening ecol transformations 
records order perform vsi legal transformation vertices satisfy conditions mesh refined far vsi evaluates true 
scheme demonstrated view dependent function criteria include view frustum proximity silhouettes screen projected face areas 
major issues left unaddressed 
function designed real time performance fails measure screen space geometric error 
importantly facility provided efficiently adapting selectively refined mesh view parameters change 
vertex hierarchies xia varshney ecol vsplit transformations create simplification hierarchy allows real time selective refinement 
approach precompute mesh merge tree bottom follows 
vertices entered leaves level tree 
level set ecol transformations selected merge pairs vertices resulting proper subset vertices promoted level 
ecol transformations level chosen edge lengths constraint neighborhoods overlap 
topmost level tree precisely forest corresponds vertices coarse mesh 
respects structure similar subdivision hierarchy 
runtime selective refinement achieved moving vertex front hierarchy 
consistency refinement ecol vsplit transformation level permitted neighborhood selectively refined mesh identical precomputed mesh level additional dependencies stored merge tree 
consequence representation shares characteristics quadtree type hierarchies gradual change permitted regions high refinement regions low refinement 
xia varshney construct hierarchy edge lengths constrain hierarchy set levels nonoverlapping transformations approach hierarchy formed unconstrained geometrically optimized sequence vsplit transformations arbitrary pm introduce dependencies possible transformations order minimize complexity approximating meshes 
types view dependent criteria outlined including local illumination screen space projected edge length 
detail view dependent criteria 
measures screen space surface approximation error yields mesh refinement naturally adapts surface curvature viewing direction 
related scheme luebke constructs vertex hierarchy clustering octree locally adapts complexity scene selectively coalescing cluster nodes 
vr fn vs vsplit fn ecol fn new definitions vsplit ecol 
selective refinement framework section show real time selective refinement framework built arbitrary pm 
selectively refined mesh defined mesh obtained applying base mesh subsequence pm vsplit sequence 
noted section arbitrary subsequence may correspond defined mesh vsplit transformation legal current mesh satisfies preconditions 
preconditions analogous vertex face dependencies hierarchical representations 
definitions vsplit legality introduce shortly :10.1.1.153.3865
set meshes produced subsequence legal vsplit transformations 
support incremental refinement necessary consider just vsplit ecol perform transformations order possibly different pm sequence 
major concern selectively refined mesh unique regardless sequence legal transformations leads particular mesh sought extend selective refinement scheme set legality preconditions ecol transformations unable form consistent framework overly restricting :10.1.1.153.3865
began anew modified definitions vsplit ecol set legality preconditions sufficient consistency flexible permit highly adaptable refinement 
remainder section presents new definitions preconditions 
new transformation definitions new definitions vsplit ecol illustrated 
note effects mesh simply parametrized differently 
transformation vsplit vs vt vu fl fr fn fn fn fn replaces parent vertex vs children vt vu 
new faces fl fr created pairs neighboring faces fn fn fn fn adjacent vs edge collapse transformation ecol vs vt vu parameters vsplit performs inverse operation 
support meshes boundaries face neighbors fn fn fn fn may special nil value vertex splits fn fn nil create single face fl 
denote set vertices meshes pm sequence 
note jvj approximately twice number vj original vertices vertex renaming vsplit 
contrast faces selectively refined mesh subset original faces number vertices faces order created introduces vertices ti jv ui jv 
say vertex face active exists selectively refined mesh vertex hierarchy parent child relation vertices establishes vertex hierarchy selectively refined mesh corresponds vertex front hierarchy 
vertex hierarchy differs respects 
vertices renamed split vertex hierarchy forms forest root nodes vertices coarsest mesh base mesh leaf nodes vertices refined mesh original mesh 
destroys creates requires vsplit ecol preconditions effects vsplit ecol transformations 
renaming contributes refinement dependencies 
second hierarchy constructed top loading pm simple traversal vsplit records 
hierarchies may unbalanced typically fewer levels bunny unconstrained 
preconditions define set preconditions vsplit ecol legal refer 
vsplit vs vt vu transformation legal vs active vertex faces ffn fn fn fn active faces 
ecol vs vt vu transformation legal vt vu active vertices faces adjacent fl fr ffn fn fn fn configuration 
properties set meshes obtained transitive closure legal vsplit ecol transformations equivalently pm sequence legal 
mesh observe properties vsplit vs vt vu legal ffn fn ffn fn pairwise adjacent adjacent vs 
active vertex front lies ecol vs vt vu fl fr ffn fn fn fn active 
subsequence identical mesh obtained applying complement subsequence fn gns ecol transformations legal 
implementation ideas concrete lists data structures implementation 
selectively refinable mesh consists array vertices array faces 
vertices faces subset active specified doubly linked lists thread subset properties held numerous experiments performed unfortunately formal proofs 
struct listnode node possibly linked list listnode node list listnode prev struct vertex listnode active list active vertices point point vector normal vertex parent vertex vertex vt vertex vu vt remaining fields encode vsplit information defined vt 
face fl fr fl face fn required neighbors fn fn fn fn refine info defined section struct face listnode active list active faces int material identifier remaining fields face active 
vertex vertices ordered counter clockwise face neighbors neighbors vertices struct array vertex vertices selectively refinable mesh set vertices array face faces set faces listnode active vertices head list listnode active faces head list principal data structures 
records 
vertex records fields parent vt encode vertex hierarchy 
vertex split fl fn fields encode remaining parameters vsplit dependencies 
face record contains links current vertices links current face neighbors material identifier rendering 
refinement criteria section describe query function vs determines vertex vs split current view parameters 
outlined function uses criteria view frustum surface orientation screen space geometric error 
evaluated thousands times frame designed fast expense simplifying approximations noted 
function vs refine affects surface view frustum 
outside view frustum vs return false refine part affected surface faces viewer 
oriented away vs return false refine screen projected error exceeds tolerance screen space error vs return false return true view frustum criterion seeks coarsen mesh outside view frustum order reduce graphics load 
approach compute vertex radius rv sphere centered bounds region supported descendants 
return false bounding sphere lies completely outside view frustum 
radii rv computed pm representation loaded memory bounding sphere hierarchy follows 
compute leaf nodes vertex hierarchy sphere sv bounds adjacent vertices perform postorder traversal vertex hierarchy scanning vsplit nv gauss map region nv region illustration neighborhood region affected space normals region cone normals bounds 
sequence backwards assign parent vertex vs smallest sphere svs bounds spheres svt children 
resulting spheres sv centered vertices compute vertex radius rv larger sphere centered bounds sv 
view frustum sided semi infinite pyramid sphere radius rv centered vx vy vz lies outside frustum di rv linear functional aix di measures signed euclidean distance side frustum 
selective refinement solely view frustum demonstrated 
surface orientation purpose second criterion coarsen regions mesh oriented away viewer reduce graphics load 
approach analogous view frustum criterion consider space normals surface gauss map surface 
space normals subset unit sphere fp kpk triangle mesh consists discrete set points corresponding normal triangle face vertex bound space normals associated region supported descendants cone normals defined vector nv normal 
computed pm representation loaded memory normal space hierarchy 
hierarchically compute vertex sphere bounds associated space normals 
compute vertex cone nv bounds intersection bounding cone exists 
viewpoint unnecessary split lies region av kav ek nv sin av cone anchor point takes account geometric bounding volume sv see details 
improve space time efficiency approximate av amounts parallel projection approximation test nv nv kv ek sin effect test seen figures regions meshes kept coarse 
screen space geometric error goal third criterion adapt mesh refinement distance approximate surface original projected screen screen space tolerance nv illustration deviation space cross section extent screen space projection function viewing angle 
determine vertex split seek measure deviation current neighborhood nv set faces adjacent corresponding region quantitative measure hausdorff distance nv nv defined smallest scalar point nv distance point nv vice versa 
mathematically nv nv smallest nv nv nv nv closed ball radius denotes minkowski sum nv nv screen space approximation error bounded screen space projection ball 
nv nv similar approximately planar tighter distance bound obtained replacing ball definition general deviation space instance lindstrom record deviation height fields graphs functions xy plane associating vertex scalar value representing vertical deviation space fh main advantage screen space projection vanishes principal axis parallel viewing direction corresponding 
generalize ideas arbitrary surfaces define deviation space shown motivation deviation orthogonal surface captured directional component uniform component may required nv curved 
uniform component allows accurate approximation discontinuity curves surface boundaries material boundaries deviations tangent surface 
particular definition corresponds shape projected radius direction simple formula max vk 
shown graph radius function view direction shape sphere radius unioned radius construction pm representation precompute deviation space nv vertex vas follows 
ecol vs vt vu transformation applied estimate deviation examining residual error vectors dense set points sampled locally project explained detail :10.1.1.153.3865
ei nv kei fix ratio find smallest nv ratio bounds alternatively simplification schemes adapted obtain deviation spaces guaranteed bounds :10.1.1.26.5662:10.1.1.26.5662
note computation measure parametric distortion 
appropriate texture mapped surfaces texture geometrically projected wrapped 
vertices contain explicit texture coordinates residual computation altered measure deviation parametrically 
viewpoint screen space tolerance fraction viewport size field view angle returns true minkowski sum simply fa bg 
screen space projection nv exceeds max nv kv ek efficiency equivalent test kv ek cot kv ek nv kv ek kv ek cot computed frame 
note test reduces nv requires floating point operations general case 
seen figures test naturally results refinement near model silhouette surface deviation orthogonal view direction 
test provides approximate bound screen space projected error number reasons 
test slightly underestimates error away viewport center pointed 
second parallel projection assumption projecting screen 
third neighborhood evaluating may different pm sequence selectively refined deviation spaces provide strict bounds vertices 
criterion works practice demonstrated figures 
implementation store vertex record scalar values rv sin vg 
refinement tests share common subexpressions evaluation complete function requires remarkably cpu cycles average cycles call shown table 
incremental selective refinement algorithm algorithm incrementally adapting mesh selective refinement framework section function section 
basic idea traverse list active vertices rendering frame vertex leave split collapse 
core traversal algorithm summarized 
procedure adapt refinement vt force vsplit parent ecol legal parent parent ecol parent reconsider vertices procedure force vsplit stack stack top vt fl stack pop split earlier loop stack push parent vsplit legal stack pop vsplit placing vt vu list fn force vsplit creates face fn stack push fn vertices parent implementation detail vertex split create inactive face vertices parent set fl vertices vt fr vertices vt creating faces obviating need face parent field 
iterate doubly linked list active vertices active vertex evaluates true vertex split 
vsplit legal faces fn active chain vertex splits performed order vsplit legal procedure force vsplit introduce faces fn recursively required vertex splits legal 
active vertex parent returns false vertex collapsed 
edge collapse performed legal sibling active neighboring faces parent fl parent fr match parent fn 
short strategy force refinement desired coarsen possible 
vsplit ecol performed vertices resulting neighborhood considered transformations 
vertices may previously visited traversal relocate list lie immediately list iterator 
specifically vsplit add vt vu iterator ecol parent add parent relocate vl vr iterator vl vr current neighbors 
time complexity time complexity adapt refinement transforming iso jv jv worst case possibly require jv ecol jv vsplit constant time 
continuous view changes usually similar simple traversal active vertex list bottleneck incremental refinement algorithm shown table 
note number jvj active vertices typically smaller number vj original vertices 
rendering process time complexity jfj jvj fact larger time constant 
adapt refinement requires total frame time discussed section 
regulation pm constant screen space tolerance number jfj active faces vary dramatically depending view 
refinement times rendering times closely correlated jfj leads high variability frame rates 
implemented simple scheme regulating maintain jfj nearly constant level 
desired number faces 
prior calling adapt refinement time frame set number active faces previously drawn frame 
shown simple feedback control system exhibits stability terrain 
sophisticated control strategies may necessary heterogeneous irregular models 
direct regulation frame rate attempted frame rate sensitive operating system may best achieved indirectly secondary slower controller adjusting amortization main loop adapt refinement simple traversal list distribute consecutive frames traversing fraction frame 
slowly changing view parameters reduces low overhead selective refinement introducing visual artifacts 
amortization regulation jfj adjustment difficult response jfj may lag frames 
current strategy wait frames entire list traversed making changes reduce overshooting disallow vsplit refinement number active faces reaches upper limit jfj 
count number faces introduced adjustment example average frame rate frames sec amortization increases frame rate frames sec 
illustration selectively refined meshes mesh geomorph 
geomorphs selective refinement framework supports geomorphs selectively refined meshes construct mesh vertices vary function parameter looks identical looks identical key find mesh active vertex front lower equal illustrated 
mesh trivially satisfies property simpler mesh generally obtained starting successively calling force vsplit advance vertex front mesh 
mesh property faces superset vertex vj unique ancestor unique ancestor geomorph mesh case result calling adapt refinement mesh obtained directly 
single pass adapt refinement passes refinement pass vsplit considered coarsening pass ecol considered 
pass record sequence transformations performed allowing backtrack inverse ecol sequence recover intermediate mesh construct desired ancestry functions geomorph demonstrated accompanying video 
view coherence number vertices require interpolation generally smaller number active vertices 
research needed determine feasibility usefulness generating geomorphs runtime 
rendering graphics systems require triangle strip representations optimal rendering performance 
mesh connectivity incremental refinement scheme dynamic possible precompute triangle strips 
greedy algorithm generate triangle strips frame shown 
surprisingly algorithm produces strips adequate length average faces generalized triangle strip iris gl faces sequential triangle strip opengl efficiently table 
algorithm traverses list active faces face rendered begins new triangle strip 
iteratively renders face checks neighbor rendered continues strip 
neighbors material considered reduce graphics state changes 
reduce fragmentation favor continuing generalized triangle strips clockwise spiral 
strip reaches dead traversal list resumes 
bit face field boolean flag record rendered faces bits cleared quick second pass graphics libraries begun support interfaces immediate mode rendering mesh representations direct opengl 
current prototype interfaces may ideal rendering selectively refined meshes 
optimizing pm construction selective refinement pm construction algorithm finds sequence vsplit refinement transformations optimized accuracy regard shape resulting vertex hierarchy :10.1.1.153.3865
experimented introducing small penalty function cost metric favor balanced hierarchies order minimize unnecessary dependencies :10.1.1.153.3865
penalty ecol vt vu isc nv number descendants including user specified parameter 
find small value improves results slightly examples reduces number faces error tolerance increases hierarchies quadtree results worsen markedly 
beneficial introduce small bias favor balanced hierarchies absence geometric preferences 
results timing results constructed pm representation grand canyon terrain mesh vertices faces truncated pm representation faces 
preprocessing requires hours done line table 
loading pm disk constructing requires minute spent computing rv 
figures show measurements minute real time terrain regulation sgi indigo extreme mhz mb memory 
measurements show time spent adapt refinement approximately total frame time 
accompanying video amortization reduce overhead total frame time 
code profiling system monitoring reveal timing breakdown shown table 
note triangle strip generation efficient keep cpu utilization graphics system fact bottleneck 
computer cpu impact graphics system average frame rate increases frames sec 
space requirements table shows disk space required store pm representations associated deviation parameters compressed gnu gzip 
positions normals deviation parameters currently stored floating point quantized improve compression 
jvj vj fj vj memory requirement vj 
current implementation optimized space requires vj bytes 
memory footprint reduced follows 
half vertices split best store split information fl fn refine info separate array vsplit records indexed vt space allocated faces vsplit vertex fl field deleted computed vt scalar values record quantized bits exponential map 
coordinates points normals quantized bits 
material identifiers unnecessary mesh material 
changes reduce memory requirements vj bytes 
case height fields memory requirement vertex far exceeds regular grid schemes 
fully detailed mesh may arbitrary connectivity may obtained pre simplifying grid representation possibly table statistics various data sets 
model fully detailed disk mb mem 
hier 
constr 
vj fj pm mb height mins canyon canyon canyon trunc 
sphere teapot trunc 
bunny table cpu utilization mhz mips 
procedure frame time cycles call user adapt refinement vsplit ecol render face gl library system os graphics cpu idle thousands pixel tolerance frame time ar time frames measurements constant pixels window 
top number faces thousands pixels frame times adapt refinement times seconds 
thousands pixel tolerance frame time ar time frames regulation maintain jfj 
allowed pixels 
order magnitude significant loss accuracy 
pre simplification may achieved simply truncating pm representation creation time load time 
applications height fields require efficient geometric queries point search 
vertex hierarchies framework log height average case enforced approach section queries performed log time iteratively calling force vsplit vertices neighborhood query point 
parametric surfaces framework offers novel approach real time adaptive tessellation parametric surfaces 
precomputation obtain dense tessellation surface construct dense mesh pm representation truncate pm sequence desired level maximum accuracy 
runtime selectively refine truncated pm representation viewpoint 
main drawback approach resolution detailed tessellation fixed priori 
benefits include simplicity runtime implementation trimming stitching efficiency incremental amortized importantly high adaptability tessellations accurate tin connectivities adapt surface curvature viewpoint 
general meshes figures demonstrate selective refinement applied general meshes 
expect practical rendering complex models environments conveniently admit scene hierarchies 
summary introduced efficient framework selectively refining arbitrary progressive meshes developed fast view dependent refinement criteria algorithm incrementally adapting approximating meshes criteria 
demonstrated real time selective refinement number meshes including terrains parametric surface tessellations general meshes 
adaptive refinement algorithm exploits frame frame coherence easily amortized consumes small fraction total frame time 
selectively refined meshes stem geometrically optimized set vertex split transformations dependencies quickly adapt underlying model requiring fewer polygons level approximation previous schemes 
number areas including memory management large models particularly terrains 
experimentation runtime generation geomorphs 
extension refinement criteria account surface shading surface velocity proximity gaze center 
adaptive refinement animated models 
applications selective refinement collision detection 
acknowledgments grand canyon data united states geological survey house processing chad mccabe microsoft geography product unit mesh courtesy viewpoint bunny stanford university computer graphics laboratory 
wish john snyder rick szeliski helpful comments bobby useful discussions control theory 
abi subramaniam fast dynamic tessellation trimmed nurbs surfaces 
computer graphics forum proceedings eurographics 
bajaj error bounded reduction triangle meshes multivariate data 
spie 
cignoni scopigno representation visualization terrain surfaces variable resolution 
scientific visualization ed world scientific pp 

clark hierarchical geometric models visible surface algorithms 
communications acm october 
cohen varshney manocha turk weber agarwal brooks wright simplification envelopes 
computer graphics siggraph proceedings 
de multiresolution models topographic surface description 
visual computer 
evans skiena varshney optimizing triangle strips fast rendering 
visualization proceedings ieee pp 

funkhouser sequin adaptive display algorithm interactive frame rates visualization complex virtual environments 
computer graphics siggraph proceedings 
surface simplification variable tolerance 
proceedings second international symposium medical robotics computer assisted surgery november pp 

hoppe progressive meshes :10.1.1.153.3865
computer graphics siggraph proceedings 
kirkpatrick optimal search planar subdivisions 
siam journal computing february 
kumar manocha hierarchical visibility culling spline models 
proceedings graphics interface pp 

kumar manocha interactive display large scale nurbs models 
symposium interactive graphics acm siggraph pp 

lindstrom koller ribarsky hodges faust turner real time continuous level detail rendering height fields 
computer graphics siggraph proceedings 
lounsbery derose warren multiresolution surfaces arbitrary topological type 
acm transactions graphics january 
luebke hierarchical structures dynamic polygonal simplification 
tr department computer science university north carolina chapel hill 
yamamoto tamura gaze directed adaptive rendering interacting virtual space 
proc 
ieee virtual reality annual intnl 
symp 
pp 

davis real time rendering trimmed surfaces 
computer graphics siggraph proceedings vol 
pp 

rossignac borrel multi resolution approximations rendering complex scenes 
modeling computer graphics kunii eds 
springer verlag pp 

refined triangulation hierarchy multiple levels terrain detail 
proceedings image conference june pp 

schroeder lorensen decimation triangle meshes 
computer graphics siggraph proceedings 
abi cone normals technique fast processing curved patches 
computer graphics forum proceedings eurographics 
taylor barrett algorithm continuous resolution discrete surface 
proceedings graphics interface pp 

xia varshney dynamic view dependent simplification polygonal models 
visualization proceedings ieee pp 

base mesh face faces faces faces pm representation mesh captures continuous sequence view independent lod meshes 
top view faces top regular views faces texture mapped faces texture mapped faces generalized triangle strips view dependent refinement pm view frustum highlighted orange screen space geometric error tolerance window size pixels image 
original faces front view top view faces view dependent refinement tessellated sphere demonstrating directionality deviation space refinement near silhouettes surface orientation criterion coarsening regions 
view dependent refinement faces truncated pm representation faces created tessellated parametric surface faces 
interactive frame rate near viewpoint frames sec versus frames sec 
original faces view faces view faces view dependent refinements general mesh view highlighted orange set 
original faces front view top view faces view dependent refinement 
interactive frame rate near viewpoint frames sec versus frames sec height vertex hierarchy number faces mesh functions bias parameter pm construction bunny 
vertex hierarchy height bias parameter number mesh faces bias parameter 
