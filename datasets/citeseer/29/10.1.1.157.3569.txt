electronic notes theoretical computer science url www elsevier nl locate entcs volume html pages justifying equality leonardo de moura harald rue natarajan shankar sri international computer science laboratory ravenswood avenue menlo park ca usa shankar csl sri com consider problem finding irredundant bases inconsistent sets equalities disequalities 
subsets inconsistent sets contain literals contribute unsatisfiability essential way discarded 
approach pursuing decorate derivations proofs extract irredundant sets assumptions proofs 
requires specialized operators proofs basic inference systems left unchanged 
particular include justifying inference systems union find structures congruence closure constructions applied inference systems gaussian elimination 
constraint solving applications including discovery abstraction predicates protocol software verification lazy combinations planning formal verification :10.1.1.15.6244:10.1.1.11.2091
effectiveness constraint solving problems depends identifying small inconsistent subsets constraints 
consider problem finding irredundant basis inconsistent set equalities disequalities 
subsets contain redundant literal literals contribute unsatisfiability essential way discarded 
notion irredundant basis unrelated commonly measure counts number inference steps 
irredundant bases necessarily minimal inconsistent subsets 
example inconsistent irredundant basis inconsistency obviously minimal inconsistent 
computation minimally inconsistent funded sri international nsf ccr ccr itr darpa afrl contract nasa contract nas published elsevier science de moura rue shankar bases usually harder problem computing irredundant bases 
example irredundant basis inconsistent conjunction variable equalities disequalities computed nlog time number variables standard algorithms boolean matrix multiplication producing shortest deduction paths variables take time 
problem minimal bases equality uninterpreted functions np hard 
starting point union find structure deciding equality 
constructs canonical representatives terms respect equalities equality decided syntactically comparing canonical forms 
inference systems attractive algorithmic point view equalities applied directed way term universes combination procedures canonization usually smaller corresponding term universes combination methods 
reduction canonical forms accumulates redundant literals assumptions corresponding proofs 
consider example inconsistent set uninterpreted function symbol variables existentially quantified constants 
processing literals left right congruence closure acc builds set directed equalities left hand sides assumed larger right hand sides variable ordering 
variable arguments uninterpreted terms replaced canonical representative application congruence yields inconsistency 
input literals proof unsatisfiability simply tracking dependencies collecting assumptions explicitly generated proof object sufficient generating irredundant bases 
algorithm computing irredundant bases successively eliminating redundant literals proven costly practice 
approach pursuing decorate derivations proofs extract irredundant set assumptions proofs 
requires specialized operators proofs basic inference procedures left unchanged 
main contribution join operator directed equality proofs larger variable ordering 
obviously union assumptions proofs leads imprecision join greater symmetric difference assumptions yields irredundant bases kinds valley proofs 
extend basic insight produce proofs small sets justifications congruence closure 
sub cubic algorithms possible solving related problem finding successor vertices shortest paths 
de moura rue shankar es ds sn tn cg sn tn background fig 

proof theory signature structure maps ary function symbol ary map suitable domain 
assume maps free variables domain elements 
interpretation term structure defined tn tn 
literal equality disequality equality disequality satisfied structure iff 
interpretation propositional connectives quantifiers standard 
structure satisfies formula write 
theory class structures models theory closed isomorphism 
set literals unsatisfiable structure literals valid structures proof theory theory equality uninterpreted functions included 
judgements form proof literal 
assumptions proofs obtained follows 
ax es es ax ax ax ax ax ds ds ax ax ax cg ax ax theory equality variables theory empty signature 
set literals unsatisfiable proof ax 
proofs built reflexivity symmetry transitivity referred equality chaining proofs 
number identities proofs cg tn tn 
definition unsatisfiable set literals 
unsatisfiable basis 
ii basis minimal basis denotes set theoretic cardinality 
iii basis irredundant strict subset basis 
de moura rue shankar valid unsatisfiable say basis valid 
irredundant proof ax irredundant basis 
equality variables set equalities disequalities variables inconsistent disequality equivalence class equivalence closure equalities 
algorithm partitioning variables maintained incremental manner see example 
operation union merges equivalence classes ind returns canonical representative equivalence class containing variable sequence union ind operations performed worst case time number variables inverse ackermann function 
extend union find algorithm operator explain returns irredundant basis implied equality analyze complexity 
definition union find explain structure pair consisting nonempty finite set variables total ordering set equalities union find explain structure pair functions basis 
union find explain structure denotes canonical representative equivalence class basis 
definition union find explain structure denotes symmetric difference sets 
variable equalities added incrementally union find explain structure union operation 
definition union find explain structure union 
de moura rue shankar say union find explain structure finite set variable equalities result processing equalities starting 
case valid 
words disequality inconsistent 
show irredundant basis implied equalities obtained computing symmetric difference 
theorem union find explain structure finite set variable equalities irredundant basis ii irredundant basis proof 
induction number unions 
properties hold initially nodes distinct empty 
induction step assume properties hold union loss generality 
equivalence class equivalence classes disjoint repeated assumptions occur know induction hypothesis basis irredundant 
second part need show equivalence classes respectively irredundant 
seen know irredundant induction hypothesis 
example 
variable ordering processing equalities left right yields representation union find explain structure find edges labeled elements corresponding basis 
clearly equality valid irredundant basis obtained 
bases obtained irredundant theorem necessarily minimal 
de moura rue shankar example minimal basis method described returns basis irredundant minimal union discards implied equality includes efficient implementation union find explain extension usual union find algorithm see example 
sets assumptions represented constructors join reflexivity assumption 
corresponding set assumptions ax representation obtained follows 
ax ax ax ax ax find structure implemented function parent identity variables initially proof structure prf initially reflexivity inputs 
justify straightforward implementation ind uses dynamic path compression computations memoized nodes may structure shared 
union uses rank structure selecting new canonical variable 
possible path compression initial finds prf justify coincide input variables union 
implicitly identities 
explain computes set ax justify justify required theorem 
notice equality assumptions ax dag occurs odd number times 
counters ref counting number occurrences visited 
visited breadth manner ignoring counts 
consequence node dag visited collect 
breadth traversal collect obtained fifo queue operators enqueue dequeue queue empty ensures node dequeued immediate parent nodes dequeued 
example processing yields union find explain structure explain collect visiting occurs twice 
denotes maximum height find structure union ind operations clearly ind takes time creates new nodes union takes time space 
de moura rue shankar prf 
rank result ref 
ind ind prf prf prf return union ind ind rank rank prf prf prf prf prf prf rank rank rank rank explain result ref 
collect justify justify return result justify prf justify collect register queue empty dequeue odd ref register register result result register ref enqueue ref ref ref fig 

implementation union find explain 
sequence union operations takes nh time space 
explain linear number nodes justify justify takes nh time 
algorithm weighted union heuristic rank structure bounded log 
fact run time explain bounded core union find algorithm complexity recursive invocation ind union produces constant number nodes 
de moura rue shankar equality uninterpreted functions consider problem inferring small justifications problems theory equalities uninterpreted functions 
starting point congruence closure acc defined kapur bachmair tiwari 
acc incrementally processes finite set equalities equivalent configuration union find explain structure set directed flat equalities form xn xi variables 
irreducible configurations congruence closed sense implies contains xn xn 
length maximal derivation inference rules constructing acc quadratic input size 
define irreducible configurations terms solving uniform word problems valid 
words disequality inconsistent 
justifying congruence closure acc procedure results section generating irredundant bases union find explain reused 
contrast developments section justifications terms proof terms see sets assumptions 
proof terms suggests various optimizations 
example consider equality chains 

xn fn xn xn fn xn equalities obtains proofs cg fi fi fi xn proofs essentially different set assumptions ax ax incomparable respect set inclusion 
different proofs equality fn xn fn xn depending chosen establishing equality ith argument terms irredundant proof cg 
example shows generation irredundant proofs equalities expensive general 
introduce weaker criterion requires equality chaining subproofs subproofs built entirely reflexivity symmetry transitivity 
operator transforms proofs set non equality chaining subproofs 
operator defining localized criterion proofs 
definition chaining de moura rue shankar es es cg cg irredundant basis definition 
operator defining notion local proofs 
intuitively proof locally irredundant pure equality chaining subproofs irredundant 
definition locally irredundant proofs proof locally irredundant es ii cg 
locally irredundant iii proof locally irredundant 
locally irredundant proof necessarily irredundant 
example reconsider example 
proof cg example locally irredundant irredundant proof cg strictly smaller set assumptions 
example consider judgement cg ex ey cg ex proof locally irredundant irredundant ey justifies proof cg ey 
operator chains simply converts set non equality chaining proofs obtained operator equality chaining proof definition set non equality chaining proofs obtained chains obviously chains equality chaining proofs transformed proof transformer order eliminate redundancies 
definition define join chains 
union de moura rue shankar fig 

union find explain proofs 
notice ax ax ax 
slight abuse notation just write 
justifying acc includes union find explain structure 
identical definition component function variables equality proof terms 
union operations variables section adjusted include proofs sets assumptions 
definition union find explain structure locally irredundant proof locally irredundant 
replacing symmetric difference sets assumptions join operator irredundant proofs variable equalities obtained theorem 
lemma union find explain structure proofs set equalities see locally irredundant proof ii locally irredundant 
proof 
similar theorem 
example literals example obtains union find explain structure ex ex ex ey ex ex proof ex ey ex ey ex ex ex ey ex ex ex ey ex ex ey ex ex ey de moura rue shankar configurations justifying acc include union find explain structure renaming context representing finite set equalities xn 
definition renaming context finite map bindings form xn xn ti xi terms ti 
definition pair consisting union find explain structure renaming context locally irredundant locally irredundant ii xn 
locally irredundant proofs 
congruence closure acc flattens input terms introducing fresh renaming variables nested flat subterms 
initial step processing equality disequality acc procedure compiles terms variables iteratively replacing flat subterms xn renaming variable possibly extended renaming context 
includes flattening returns variable equal argument term possibly extended renaming context 
definition union find explain structure justifying renaming context define tn cg un xn un xn un fresh xn un un tn sense validated equalities 
returns locally irredundant proofs equality source target term 
lemma locally irredundant locally irredundant ii locally irredundant proof proof 
induction structure term lemma 
de moura rue shankar justifying acc inference system processing equalities disequalities uninterpreted functions described 
configurations inference system consist finite set assumptions form es ds finite set variable disequalities ds union find explain structure renaming context definition configuration locally irredundant locally irredundant definition ds locally irredundant 
eq rule processes input equalities merging corresponding decorated variables similarly processes disequalities disequalities reduced unsatisfiable bot rule cong deduces variable equalities flat term propagate variable equalities renaming contexts disequalities respectively 
applied symmetrically 
termination soundness completion versions congruence closure procedure see example 
theorem unsatisfiable finite set equalities disequalities unsat ds irreducible configuration respect justifying acc inference system starting configuration locally irredundant proof 
proof 
clearly initial configuration locally irredundant 
lemmas rules bot preserve local 
proof obtained application bot rule locally irredundant locally irredundant proofs lemma 
example processing left right yields final configuration cg canonization yields canonization yields fresh variable corresponding renaming 
rule eq variables merged proof 
second processing fresh variable corresponding renaming 
merged proof rule eq 
third respectively 
rule eq variables merged de moura rue shankar eq es es ds ds bot ds unsat ds xi xn xn xi xi ds ds cong xn xn xn cg fig 

congruence closure proofs 
proof 
forth respectively 
rule eq variables merged proof 
variable equality propagated rule obtain instantiated renaming 
respectively 
rule eq variables merged proof 
variable equality propagated rule obtain instantiated renaming 
rule cong variables merged proof cg cg renaming removed consider implied equality 
left hand side cg cg 
cg cg locally irredundant proof 
proof happens minimal 
consider implied equality 
right hand side cg 
cg cg locally de moura rue shankar irredundant proof irredundant 
proof identity proofs 
cg cg cg obtain irredundant proof cg cg 
lemma ax cg ax cg cg proof 
ax ax ax 
general justifying acc yield irredundant proofs minimal proofs example irredundant proofs may obtained replacing equality chaining subproofs congruence subproofs ax ax 
example proof cg cg replaced cg 
cases ax ax incomparable respect set inclusion case example unclear proof proof transformation may depend structure complete proof 
expensive practice produce globally irredundant proofs arguably maintaining locally irredundant proofs compromise conflicting goals conciseness justifications associated computational costs 
systems proving irredundant proofs variable equality extended proof producing system obtain small locally irredundant proofs congruence closure 
main characteristics proof producing extensions change underlying algorithms algorithmic advantage canonization maintained 
possible maintain fully irredundant proofs congruence closure theories may prohibitively expensive practice search involved 
approach extended inference systems gaussian elimination linear arithmetic equality theory 
polynomials decorated proofs obtain 

decoration represents proof cg source polynomial justifying equality framework applied obtain small proofs shostak combination 
bachmair tiwari 
congruence closure specializations 
mcallester editor automated deduction cade volume lnai pages 
springer june 
de moura rue shankar barrett dill stump 
checking satisfiability order formulas incremental translation sat 
computer aided verification cav volume lncs pages 
springer july 
cormen leiserson rivest 
algorithms 
mit press cambridge ma 
das dill 
counter example predicate discovery predicate abstraction 
formal methods computer aided design lncs pages 
springer november 
de moura rue 
lemmas demand satisfiability solvers 
fifth international symposium theory applications satisfiability testing sat may 
extended version www csl sri com users papers sat index html 
de moura rue 
lazy theorem proving bounded model checking infinite domains 
voronkov editor international conference automated deduction cade volume lncs pages 
springer july 
galil margalit 
witnesses boolean matrix multiplication transitive closure 
journal complexity 
kapur 
shostak congruence closure completion 
comon editor rewriting techniques applications rta volume lncs pages 
springer july 
shankar rue 
combining shostak theories 
tison editor rta volume lncs pages 
springer 
shoenfield 
mathematical logic 
addison wesley reading ma 
tarjan 
efficiency linear set union algorithm 
journal acm pages 
tiwari 
personal communication 
june 
wolfman weld :10.1.1.15.6244
lpsat engine application resource planning 
ijcai pages 

