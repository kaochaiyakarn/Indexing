fuzzy queries multimedia database systems ronald fagin ibm almaden research center harry road san jose california email fagin almaden ibm com www almaden ibm com cs people fagin invited proc 
acm sigact sigmod sigart symposium principles database systems essential differences multimedia databases may contain complicated objects images traditional databases 
differences lead interesting new issues particular cause consider new types queries 
example multimedia database reasonable natural ask images similar fixed image 
furthermore different ways obtaining accessing information multimedia database information traditional database 
example multimedia database reasonable query asks say top images similar fixed image 
aggregation functions combine scores subqueries object score full query object 
section consider fact system capable dealing various flavors multimedia data middleware discuss impact multimedia queries 
example may possible obtain data multimedia repositories limited ways 
algorithms query evaluation course respect limitations 
subsection discuss algorithm fa optimal certain conditions :10.1.1.55.2172
algorithm implemented garlic system chs ibm almaden research center 
process implementation interesting real world issues arose 
discussed subsection 
section discuss issue arises multimedia queries standard relational queries 
boolean combinations atomic queries noted earlier result multimedia query typically sorted list 
example query asks red objects result sorted list object object second contrast result query relational database simply set 
leads mismatch result queries sorted list queries set 
combine queries boolean combinations 
discuss solution proposed fa implemented garlic multimedia information system developed ibm almaden research center :10.1.1.55.2172
example fa consider application store sells compact disks :10.1.1.55.2172
typical traditional database query ask names albums artist beatles 
result set names albums 
multimedia query ask album covers particular shade red 
example query asks red objects result sorted list object object second contrast result query relational database simply set 
leads mismatch result queries sorted list queries set 
combine queries boolean combinations 
discuss solution proposed fa implemented garlic multimedia information system developed ibm almaden research center :10.1.1.55.2172
example fa consider application store sells compact disks :10.1.1.55.2172
typical traditional database query ask names albums artist beatles 
result set names albums 
multimedia query ask album covers particular shade red 
result sorted list album covers 
example result replaced previous query 
answer set sorted list combination 
combine multimedia queries 
example query color red shape round 
solution fa terms graded fuzzy sets za :10.1.1.55.2172
graded set set pairs object tuple grade real number interval 
convenient think graded set corresponding sorted list objects sorted grades 
graded set generalization set sorted list 
earlier take atomic queries form name attribute target 
call condition conservation implies particular conservative extension standard propositional semantics conjunction discussed case min 
triangular norm dp ary aggregation function satisfies monotonicity commutativity associativity boundary conditions conservation reasonable expect aggregation function disjunction satisfy properties triangular norm 
triangular norms triangular norms duals sense triangular norm function defined gamma gamma gamma triangular norm 
decker bd show suitable negation aggregation functions standard gamma natural generalization laws hold triangular norm norm min function triangular norm norm max function 
triangular norms norms discussed bd mi see fa zimmermann textbook zi :10.1.1.55.2172
define ary query conjunction formulas terms ary aggregation function 
fa semantics ary query am defining example standard fuzzy logic semantics conjunction am defining am minf am object ary aggregation function :10.1.1.55.2172
define ary query am am example min am equivalent standard fuzzy semantics am max am equivalent standard fuzzy semantics am mentioned earlier ary conjunction course obtained ary conjunction iterating 
example ary conjunction defined ary aggregation function ary conjunction defined 
triangular norms triangular norms duals sense triangular norm function defined gamma gamma gamma triangular norm 
decker bd show suitable negation aggregation functions standard gamma natural generalization laws hold triangular norm norm min function triangular norm norm max function 
triangular norms norms discussed bd mi see fa zimmermann textbook zi :10.1.1.55.2172
define ary query conjunction formulas terms ary aggregation function 
fa semantics ary query am defining example standard fuzzy logic semantics conjunction am defining am minf am object ary aggregation function :10.1.1.55.2172
define ary query am am example min am equivalent standard fuzzy semantics am max am equivalent standard fuzzy semantics am mentioned earlier ary conjunction course obtained ary conjunction iterating 
example ary conjunction defined ary aggregation function ary conjunction defined 
discussed fa properties hold ary aggregation function obtained iterating triangular norm strictness xm iff monotonicity xm aggregation function strict takes maximal value precisely argument takes maximal value :10.1.1.55.2172
call am strict resp monotone query strict resp monotone 
define ary query conjunction formulas terms ary aggregation function 
fa semantics ary query am defining example standard fuzzy logic semantics conjunction am defining am minf am object ary aggregation function :10.1.1.55.2172
define ary query am am example min am equivalent standard fuzzy semantics am max am equivalent standard fuzzy semantics am mentioned earlier ary conjunction course obtained ary conjunction iterating 
example ary conjunction defined ary aggregation function ary conjunction defined 
discussed fa properties hold ary aggregation function obtained iterating triangular norm strictness xm iff monotonicity xm aggregation function strict takes maximal value precisely argument takes maximal value :10.1.1.55.2172
call am strict resp monotone query strict resp monotone 
properties query required theorems fa shall discuss shortly strictness monotonicity :10.1.1.55.2172
strictness needed lower bound efficiency algorithms evaluating queries certain assumptions monotonicity upper bound 
aggregation functions conjunction considered literature triangular norms 
define ary query am am example min am equivalent standard fuzzy semantics am max am equivalent standard fuzzy semantics am mentioned earlier ary conjunction course obtained ary conjunction iterating 
example ary conjunction defined ary aggregation function ary conjunction defined 
discussed fa properties hold ary aggregation function obtained iterating triangular norm strictness xm iff monotonicity xm aggregation function strict takes maximal value precisely argument takes maximal value :10.1.1.55.2172
call am strict resp monotone query strict resp monotone 
properties query required theorems fa shall discuss shortly strictness monotonicity :10.1.1.55.2172
strictness needed lower bound efficiency algorithms evaluating queries certain assumptions monotonicity upper bound 
aggregation functions conjunction considered literature triangular norms 
example zimmermann various weighted unweighted arithmetic geometric means perform empirically quite 
aggregation functions triangular norms fact arithmetic mean conserve standard propositional semantics arguments takes value 
strictness needed lower bound efficiency algorithms evaluating queries certain assumptions monotonicity upper bound 
aggregation functions conjunction considered literature triangular norms 
example zimmermann various weighted unweighted arithmetic geometric means perform empirically quite 
aggregation functions triangular norms fact arithmetic mean conserve standard propositional semantics arguments takes value 
functions satisfy strictness monotonicity lower upper bounds fa hold case :10.1.1.55.2172
system say arithmetic mean aggregation function evaluating conjunction lower upper bounds tell efficiently expect evaluate conjunction natural assumptions 
middleware varieties data multimedia database system handle system may really middleware 
system top various subsystems integrates results subsystems 
example garlic system ibm almaden research center middleware system 
garlic ask subsystem grade respect query object 
refer random access 
limited modes access subsystems issues efficient query evaluation middleware system different traditional database system 
fact clear efficient means middleware system 
give performance cost algorithm defined fa :10.1.1.55.2172
measure cost corresponds intuitively amount information algorithm obtains database 
sorted access cost total number objects obtained database sorted access 
example lists corresponding case conjunction query conjuncts algorithm requests altogether top objects list top objects second list sorted access cost algorithm 
similarly random access cost total number objects obtained database random access 
middleware cost taken delta delta sorted access cost random access cost positive constants 
middleware cost measure total system cost ignores costs inside black box qbic 
situations case query optimizer want comprehensive cost measure 
finding cost measures interesting open problem 
algorithms query evaluation subsection give algorithm fa evaluating monotone queries :10.1.1.55.2172
certain assumptions algorithm optimally efficient constant factor 
probably important queries conjunctions atomic queries 
sake current discussion assume conjunctions fa middleware cost taken convenience simply sum sorted access cost random access cost :10.1.1.55.2172
noted notions middleware cost delta delta constant multiples results hold big notation 
finding cost measures interesting open problem 
algorithms query evaluation subsection give algorithm fa evaluating monotone queries :10.1.1.55.2172
certain assumptions algorithm optimally efficient constant factor 
probably important queries conjunctions atomic queries 
sake current discussion assume conjunctions fa middleware cost taken convenience simply sum sorted access cost random access cost :10.1.1.55.2172
noted notions middleware cost delta delta constant multiples results hold big notation 
evaluated standard min rule 
example conjunction atomic queries query artist beatles red 
discussed running example 
better 
generalize query conjunction atomic queries consider conjunctions am atomic queries 
important case arises conjuncts independent intuitively 
shall somewhat informal 
full probabilistic model including definition independent appears fa :10.1.1.55.2172
theorem shows substantially better naive algorithm 
theorem fa algorithm finding top answers monotone query am am independent middleware cost gamma arbitrarily high probability database size :10.1.1.55.2172
particular theorem applies conjunction am atomic queries aggregation function monotone 
includes aggregation function obtained iterating triangular norms min fact reasonable choice evaluating conjunction 
important case arises conjuncts independent intuitively 
shall somewhat informal 
full probabilistic model including definition independent appears fa :10.1.1.55.2172
theorem shows substantially better naive algorithm 
theorem fa algorithm finding top answers monotone query am am independent middleware cost gamma arbitrarily high probability database size :10.1.1.55.2172
particular theorem applies conjunction am atomic queries aggregation function monotone 
includes aggregation function obtained iterating triangular norms min fact reasonable choice evaluating conjunction 
note case corresponds conjunction atomic queries cost order square root size database 
arbitrarily high probability mean ffl constant probability middleware cost cn gamma ffl 
particular theorem applies conjunction am atomic queries aggregation function monotone 
includes aggregation function obtained iterating triangular norms min fact reasonable choice evaluating conjunction 
note case corresponds conjunction atomic queries cost order square root size database 
arbitrarily high probability mean ffl constant probability middleware cost cn gamma ffl 
shown fa strict queries matching lower bound :10.1.1.55.2172
algorithm finding top answers strict query am am independent ffl constant probability middleware cost gamma ffl 
theorem usual theta means matching upper lower bound constant factor 
theorem fa middleware cost finding top answers monotone strict query am am independent theta gamma arbitrarily high probability database size :10.1.1.55.2172
intuitively theorem tells matching upper lower bounds natural notions conjunction triangular norms 
arbitrarily high probability mean ffl constant probability middleware cost cn gamma ffl 
shown fa strict queries matching lower bound :10.1.1.55.2172
algorithm finding top answers strict query am am independent ffl constant probability middleware cost gamma ffl 
theorem usual theta means matching upper lower bound constant factor 
theorem fa middleware cost finding top answers monotone strict query am am independent theta gamma arbitrarily high probability database size :10.1.1.55.2172
intuitively theorem tells matching upper lower bounds natural notions conjunction triangular norms 
give algorithm shown fa fulfills conditions theorem :10.1.1.55.2172
algorithm called fa :10.1.1.55.2172
returns top answers monotone query am denote assume objects top answers sense 
algorithm finding top answers strict query am am independent ffl constant probability middleware cost gamma ffl 
theorem usual theta means matching upper lower bound constant factor 
theorem fa middleware cost finding top answers monotone strict query am am independent theta gamma arbitrarily high probability database size :10.1.1.55.2172
intuitively theorem tells matching upper lower bounds natural notions conjunction triangular norms 
give algorithm shown fa fulfills conditions theorem :10.1.1.55.2172
algorithm called fa :10.1.1.55.2172
returns top answers monotone query am denote assume objects top answers sense 
assume subsystem evaluates subquery describe algorithm informally formal description appears fa :10.1.1.55.2172
algorithm consists phases sorted access random access computation 
theorem usual theta means matching upper lower bound constant factor 
theorem fa middleware cost finding top answers monotone strict query am am independent theta gamma arbitrarily high probability database size :10.1.1.55.2172
intuitively theorem tells matching upper lower bounds natural notions conjunction triangular norms 
give algorithm shown fa fulfills conditions theorem :10.1.1.55.2172
algorithm called fa :10.1.1.55.2172
returns top answers monotone query am denote assume objects top answers sense 
assume subsystem evaluates subquery describe algorithm informally formal description appears fa :10.1.1.55.2172
algorithm consists phases sorted access random access computation 

intuitively theorem tells matching upper lower bounds natural notions conjunction triangular norms 
give algorithm shown fa fulfills conditions theorem :10.1.1.55.2172
algorithm called fa :10.1.1.55.2172
returns top answers monotone query am denote assume objects top answers sense 
assume subsystem evaluates subquery describe algorithm informally formal description appears fa :10.1.1.55.2172
algorithm consists phases sorted access random access computation 

give subsystem query sorted access 
subsystem begins output sorted order grade graded set consisting pairs object grade query wait intersection lists size wait set objects subsystem output members 

compute grade am object seen 
set containing objects seen highest grades ties broken arbitrarily 
output graded set note algorithm nice feature finding top answers order find best answers continue left 
sketch proof correctness algorithm details including performance analysis appear fa :10.1.1.55.2172
object seen algorithm run output subsystems sorted access 
set objects output subsystems subsystem know output sorted access subsystem 
monotonicity know am am 
objects output grades high algorithm fulfills theorem follows theorem algorithm optimal constant factor 
object seen algorithm run output subsystems sorted access 
set objects output subsystems subsystem know output sorted access subsystem 
monotonicity know am am 
objects output grades high algorithm fulfills theorem follows theorem algorithm optimal constant factor 
spite optimality various improvements discussed fa algorithm particular case min standard aggregation function fuzzy logic conjunction :10.1.1.55.2172
aggregation function strict necessarily optimal 
interesting example arises max corresponds standard fuzzy disjunction am case fa simple algorithm middleware cost mk independent size database :10.1.1.55.2172
example aggregation function median 
turns fa median attributes just case max algorithm middleware cost beats lower bound theorem :10.1.1.55.2172
monotonicity know am am 
objects output grades high algorithm fulfills theorem follows theorem algorithm optimal constant factor 
spite optimality various improvements discussed fa algorithm particular case min standard aggregation function fuzzy logic conjunction :10.1.1.55.2172
aggregation function strict necessarily optimal 
interesting example arises max corresponds standard fuzzy disjunction am case fa simple algorithm middleware cost mk independent size database :10.1.1.55.2172
example aggregation function median 
turns fa median attributes just case max algorithm middleware cost beats lower bound theorem :10.1.1.55.2172
chaudhuri gravano cg consider ways simulate algorithm filter conditions say example color score 
real world limitations algorithm algorithm implemented garlic system 
spite optimality various improvements discussed fa algorithm particular case min standard aggregation function fuzzy logic conjunction :10.1.1.55.2172
aggregation function strict necessarily optimal 
interesting example arises max corresponds standard fuzzy disjunction am case fa simple algorithm middleware cost mk independent size database :10.1.1.55.2172
example aggregation function median 
turns fa median attributes just case max algorithm middleware cost beats lower bound theorem :10.1.1.55.2172
chaudhuri gravano cg consider ways simulate algorithm filter conditions say example color score 
real world limitations algorithm algorithm implemented garlic system 
pr experimental implementation early version garlic algorithm simple implementation issues need addressed 
extensive implementation version part broad study carried wimmers haas roth considered implementation performance issues 
fw function theta defined theta ordered shown assumption holds choice theta theta incompatible properties delta delta delta xk ffl handling boolean combinations atomic queries 
author step giving reasonable semantics involving aggregation functions evaluating boolean combinations giving efficient algorithm conjunctions atomic queries optimal certain natural assumptions 
particular case independent conjuncts middleware cost algorithm order square root database size 
discussed numerous practical issues algorithm applied 
furthermore hopeless find efficient algorithms general particular fa author gives somewhat artificial case middleware cost necessarily linear database size words provable linear lower bound :10.1.1.55.2172
finding efficient algorithms various natural cases arise practice interesting open problem 
fact point due lack experience clear queries arise practice 
ffl restricted modes access 
interesting differences arises multimedia case restricted modes access multimedia repository call sorted access random access 
finding efficient algorithms various natural cases arise practice interesting open problem 
fact point due lack experience clear queries arise practice 
ffl restricted modes access 
interesting differences arises multimedia case restricted modes access multimedia repository call sorted access random access 
leads problem give realistic cost measure definition fa middleware cost :10.1.1.55.2172
especially important presence query optimizers 
ffl weighting importance subqueries 
example issue arises multimedia databases traditional databases 
feel comfortable solution fw gives general formula tells modify rule apply case weights assigned importance argument 
dp dubois prade criteria aggregation ranking alternatives framework fuzzy set theory fuzzy sets decision analysis zimmermann zadeh gaines eds studies management sciences pp 

dp dubois prade review fuzzy set aggregation connectives information sciences pp 

fa fagin combining fuzzy information multiple systems computer system sciences appear :10.1.1.55.2172
special issue selected papers symposium principles database systems 
preliminary version appeared proc 
fifteenth acm symp 
principles database systems montreal pp 
