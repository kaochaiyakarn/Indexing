abstractions mobile computation luca cardelli microsoft research 
discuss difficulties caused mobile computing mobile computation wide area networks 
propose unified framework overcoming difficulties 
internet world wide web provide computational infrastructure spans planet 
appealing imagine writing programs exploit global infrastructure 
unfortunately web violates familiar assumptions behavior distributed systems demands novel specialized programming techniques 
failures 
mobile computations run away anticipated failures move presumed failures 
mobile computation strongly related hardware advances computations move implicitly carried portable devices 
sense avoid issues raised mobile computation software technique existing hardware reality 
discuss mobile computation entirely informal level formal accounts framework :10.1.1.147.2334
section describe basic characteristics existing computational infrastructure difficulties overcome effectively 
section review existing ways modeling distribution mobility 
section introduce model ambient calculus attempts capture fundamental features distribution mobility simple framework 
section discuss applications model programming issues including detailed example programming challenge 
years distributed computing endowed greater mobility properties easier network programming 
techniques object request brokers emerged location objects providing certain services 
code mobility emerged tcl scripting languages control network applications 
agent mobility pioneered telescript aimed uniform wide area network services 
closure mobility mobility active connected entities investigated obliq :10.1.1.17.6050
due time local area network techniques smoothly gradually evolved deployment wide area networks explicitly attempted cor ba effort 
suddenly particular wide area network came radically changed fundamental assumptions distributed computing pace progress web 
wide area networks global computing evolved span decades form internet 
emergence web peculiar characteristics internet exposed way anybody verify just mouse clicks 
idea process moved lost 
approach mobility represented passing channels channels passing processes channels 
represented processes jumping boundaries 
identity moving process preserved process crosses boundary disappears previous location 
security possible extend concurrent calculus cryptographic primitives spi calculus extension calculus :10.1.1.1.5724
fundamental progress direction 
approach security tied cryptographic primitives ability inability cross barriers capabilities 
mechanisms required handle boundaries need cryptographic extensions arise immediately 
example boundary enclosing piece text seen encryption text sense capability needed cross boundary read text 
ambient name 
name ambient control access entry exit communication 
realistic situation true name ambient guarded closely specific capabilities name handed 
examples usually liberal handling names sake simplicity 
developed studying formal calculus ambients :10.1.1.147.2334
stay away formalism essential features ambient calculus conveyed fairly precise metaphors 
metaphor partially outlined consider foreign travel scenario 
country border guards seen example static ambient 
local officers privileged processes govern movement border communication border 
programs folder calculus built foundations assembling collections folders rubber stamps copy machines possibly placing inside folders 
theoretical power mobility moving final reduction pause consider operations introduced far 
operations purely combinatorial introduce notion parameter passing message exchange 
deal purely mobility communication computation familiar kind 
computationally complete turing machines encoded fairly direct way see :10.1.1.147.2334
informally possible see analogy enter reduction increment exit reduction decrement open reduction test copy reduction iteration 
ingredients performing arithmetic fact possible represent numbers nested folders appropriate operations 
data structures records trees represented easily nested folders folder names represent pointers data structures 
storage cells represented folders contents change response interactions folders case folder name represents address cell 
section discuss number examples simple security protocols 
clear mean security folder calculus 
security problems arise level software system just cryptographic level 
set security primitives system written primitives ask system attached low level attacking weaknesses implementation primitives high level attaching weaknesses primitives 
efforts underway study security high level abstractions low level attacks concerned high level attacks :10.1.1.17.6050
assume attacker disposal primitives folder calculus 
wednesday april pm kind attack malicious party mount honest folders interacting trusted server trusted network 
example perfectly trusted server folder gives away name killed attacker performing open authentication example home folder willing folder willing open folders recognized having originally come home 
opening folder implies top level execution privilege privilege just anybody 
replication output 
input followed 
grouping 
wednesday april pm open textual syntax folder calculus fact full syntax ambient calculus previously 
folder calculus metaphor quite exact syntax semantics formal ambient calculus completely explained metaphor :10.1.1.147.2334
example adobe distiller textual representation example section 
ideas wide area languages ambient calculus minimal formalism designed theoretical study 
final goal program internet certainly going need elaborate convenient formal calculus 
basic constructs ambient calculus represent understanding fundamental properties mobile computation wide area networks 
principles include wan soundness wide area network language adopt primitives entail action distance continued connectivity security wan completeness wide area network language able express behavior web mobile agents users 
related languages messages name entry capability exit capability open capability empty path capabilities concatenation paths distiller inbox open input output inbox 
input ps distiller 
inbox software systems explored exploring notions mobility wide area computation 
wednesday april pm obliq :10.1.1.17.6050
obliq language attacks problems remote execution mobility distributed computing 
designed context local area networks 
scope obliq works quite really suitable computation mobility web just distributed paradigms developed pre web days 
telescript 
ambient encloses application running application moved need restart 
practice application ties local window system local file system ties ambient names 
moving applications old window system ambient say unavailable eventually new window system ambient available 
application smoothly move reconnect bindings new local environment 
care needed restart state say refresh application window minor adjustment compared hard connections existed application environment :10.1.1.10.2201
communication basic communication primitives ambient calculus asynchronous model support global consensus failure detection 
properties preserved higher level communication primitives may added basic model intended semantics communication wide area networks preserved 
ambient calculus directly supports local communication ambient 
remote communication example rpc interpreted mobile output packets transport deposit messages remote locations wait local input come back 
move may transport warning active parts system 
times active parts system move initiative find route appropriate principals 
global computational infrastructure evolved fundamental ways standard notions sequential concurrent distributed computational models 
mobile ambients capture structure properties wide area networks mobile computing mobile computation 
ambient calculus formalizes notions simply :10.1.1.147.2334
supports reasoning mobility security intuitive presentation terms folder calculus 
basis envision new programming methodologies libraries languages global computation 
acknowledgments ideas originated atmosphere silicon valley web explosion annealed cool reflective environment cambridge uk 
am deeply indebted people locations particularly andrew gordon related papers 
basis envision new programming methodologies libraries languages global computation 
acknowledgments ideas originated atmosphere silicon valley web explosion annealed cool reflective environment cambridge uk 
am deeply indebted people locations particularly andrew gordon related papers 
addition mart abadi comments suggestions drafts 
abadi secure implementation channel abstractions :10.1.1.17.6050
proc 
thirteenth annual ieee symposium logic computer science 
abadi gordon calculus cryptographic protocols spi calculus :10.1.1.1.5724
proc 
addition mart abadi comments suggestions drafts 
abadi secure implementation channel abstractions :10.1.1.17.6050
proc 
thirteenth annual ieee symposium logic computer science 
abadi gordon calculus cryptographic protocols spi calculus :10.1.1.1.5724
proc 
fourth acm conference computer communications security 
agha actors model concurrent computing distributed systems mit press 
asynchronous model locality failure process mobility 
asynchronous model locality failure process mobility 
proc 
ordination lecture notes computer science springer verlag 

bharat cardelli migratory applications proc :10.1.1.10.2201
acm symposium user interface software technology 


berry foundations 
advanced course general net theory processes systems hamburg 
lecture notes computer science 
springer verlag 

cardelli language distributed scope :10.1.1.17.6050
computing systems 
mit press 

cardelli davies 
service combinators web computing 
proc 
usenix conference domain specific languages santa barbara 

cardelli gordon mobile ambients foundations software science computational structures maurice ed lecture notes computer science springer :10.1.1.147.2334

cardelli gordon types mobile ambients 
appear 
carriero gelernter linda context 
