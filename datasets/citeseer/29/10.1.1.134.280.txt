mobile agents yee april project ucsd building secure infrastructure mobile agents examining fundamental security limits infrastructure 
mean secure 
obvious issue privacy computation 
standard approaches agent systems malicious server access complete internal state agent software agents hopes keeping cryptographic keys secret 
privacy computation aspect security picture integrity computation critical 
agent computing researchers concentrating side security issue protecting server potentially malicious agents 
obvious issue privacy computation 
standard approaches agent systems malicious server access complete internal state agent software agents hopes keeping cryptographic keys secret 
privacy computation aspect security picture integrity computation critical 
agent computing researchers concentrating side security issue protecting server potentially malicious agents 
related downloadable executable content java software fault isolation proof carrying code os extension mechanisms packet lters type safe languages focus problem :10.1.1.31.5351
converse side agent security problem largely neglected needs addressed protect agents potentially malicious servers 
believe result returned software agents correct tampered 
software agents malicious servers agent computing servers fear agents bring viruses attempt server agent user needs able trust agent visiting series servers may malicious 
simple example occur problem clearer 
agent prepares go server si server si computes ki ki way function knowledge ki 
server sk forge previous servers break way assumption determine previous prac keys break mac function 
generally bit function bit way function may 
typically case obtain ki ki simply known bit string set ki denotes concatenation 
probability algorithm nd pre image knowing bits pre image help knowing gives algorithm probability nding pre image guessing value values probability obtain algorithm nd pre image probability contradicting way assumption :10.1.1.31.5351
publicly veri able mac required agent originator maintained secret key keys order detect tampering partial results 
obvious question perfect forward integrity provided integrity veri cation may public untrusted intermediate server sharing secret key originator may help detect tampering 
mac publicly veri able implemented relying destruction information agents migrate 
digital signature system agent dispatched list secret signature functions sig sig certi cates corresponding veri cation functions 
hope nd direct proof functions interest apply tree hashing 
trusted environments secure engineering solution providing security software agents build trusted trustworthy execution environment agents 
project build run secure allowing java agents run securely design implement agent apis needed support mobile java agents develop technology agents migrate ed java interpreters running secure environment 
addition basic support agent execution project develop trust framework needed inter server communications 
necessarily implies having basic public key infrastructure able leverage existing done support ssl pct tls :10.1.1.31.5351
trust models issue trust models important agent computing 
agents just need trusted computing base trust may binary nature 
agents may decide okay run software environment hosted known trusted entity physical protection maintain trustworthiness trusted third party provided execution environment needed environment hosted reputation protect legal remedies may obtained 
trust decision agent software 
similar spirit feigenbaum unifying agent language trust speci cation language programmer simpli ed 
mobile java approaches providing mobility programs requires modifying interpreter 
provide mechanism migrate java agents run ed interpreters 
strategy enable wider acceptance mobile agents leveraging done sun javasoft 
proposed project group examine important security issues mobile agent computing :10.1.1.31.5351
discussed preliminary results directions 
primary goal build secure agent environment insofar theoretically feasible 
build trusted java agent environment run secure design apis permit agents exist hardware secure environment software environment unchanged permitting security property queries 
build necessary software tools permit java agents mobile 
checking computations polylogarithmic time 
proceedings third annual acm symposium theory computing pages new orleans louisiana may 
ran hugo 
hash functions message authentication 
neil editor advances cryptology crypto proceedings volume lecture notes computer science :10.1.1.31.5351
springer verlag :10.1.1.31.5351
josh butler lampson spies dan simon yee 
pct protocol october 
brian bershad stefan savage law un marc david becker craig chambers susan 
proceedings third annual acm symposium theory computing pages new orleans louisiana may 
ran hugo 
hash functions message authentication 
neil editor advances cryptology crypto proceedings volume lecture notes computer science :10.1.1.31.5351
springer verlag :10.1.1.31.5351
josh butler lampson spies dan simon yee 
pct protocol october 
brian bershad stefan savage law un marc david becker craig chambers susan 
extensibility safety performance spin operating system 
extensibility safety performance spin operating system 
proceedings fifteenth symposium operating systems principles december 
matt joan feigenbaum jack 
decentralized trust management 
proceedings ieee symposium security privacy page appear may :10.1.1.31.5351
alan philip paul :10.1.1.31.5351
ssl protocol version december 
steven mueller 
java security :10.1.1.31.5351
proceedings fifteenth symposium operating systems principles december 
matt joan feigenbaum jack 
decentralized trust management 
proceedings ieee symposium security privacy page appear may :10.1.1.31.5351
alan philip paul :10.1.1.31.5351
ssl protocol version december 
steven mueller 
java security :10.1.1.31.5351
published www javasoft com security ps 
proceedings ieee symposium security privacy page appear may :10.1.1.31.5351
alan philip paul :10.1.1.31.5351
ssl protocol version december 
steven mueller 
java security :10.1.1.31.5351
published www javasoft com security ps 

time stamp digital document 
journal cryptology 
time stamp digital document 
journal cryptology 
wilson marc charles garrett stefan savage david becker brian bershad 
language support extensible operating systems 
proceedings workshop compiler support system software february :10.1.1.31.5351
ibm 
common cryptographic architecture cryptographic application programming interface sc edition :10.1.1.31.5351
meyer 
message authentication codes 
wilson marc charles garrett stefan savage david becker brian bershad 
language support extensible operating systems 
proceedings workshop compiler support system software february :10.1.1.31.5351
ibm 
common cryptographic architecture cryptographic application programming interface sc edition :10.1.1.31.5351
meyer 
message authentication codes 
ieee communications magazine september 
joe 
note cient zero knowledge proofs arguments 
proceedings fourth annual acm symposium theory computing victoria british columbia canada may 
steven van jacobson 
bsd packet lter new architecture user level packet capture 
usenix technical conference proceedings pages san diego ca :10.1.1.31.5351
usenix 

cs proofs 
proceedings th ieee symposium foundations computer science pages santa fe new mexico november :10.1.1.31.5351
usenix technical conference proceedings pages san diego ca :10.1.1.31.5351
usenix 

cs proofs 
proceedings th ieee symposium foundations computer science pages santa fe new mexico november :10.1.1.31.5351
minsky van renesse fred schneider scott 
cryptographic support fault tolerant distributed computing 
technical report tr department computer science cornell university july :10.1.1.31.5351
george :10.1.1.31.5351
cs proofs 
proceedings th ieee symposium foundations computer science pages santa fe new mexico november :10.1.1.31.5351
minsky van renesse fred schneider scott 
cryptographic support fault tolerant distributed computing 
technical report tr department computer science cornell university july :10.1.1.31.5351
george :10.1.1.31.5351
proof carrying code 
proceedings fourth annual symposium principles programming languages 
appear 
proceedings th ieee symposium foundations computer science pages santa fe new mexico november :10.1.1.31.5351
minsky van renesse fred schneider scott 
cryptographic support fault tolerant distributed computing 
technical report tr department computer science cornell university july :10.1.1.31.5351
george :10.1.1.31.5351
proof carrying code 
proceedings fourth annual symposium principles programming languages 
appear 
george peter lee 
proceedings fourth annual symposium principles programming languages 
appear 
george peter lee 
safe kernel extensions run time checks 
proceedings second symposium operating systems design implementation seattle wa october :10.1.1.31.5351
ranganathan acharya sharma joel saltz 
mobile programs 
proceedings usenix annual technical conference 
usenix 
proceedings usenix annual technical conference 
usenix 
robert steve anderson susan graham 
cient software fault isolation 
proceedings acm sigcomm symposium :10.1.1.31.5351
acm :10.1.1.31.5351
yee 
secure 
phd thesis carnegie mellon university 
usenix 
robert steve anderson susan graham 
cient software fault isolation 
proceedings acm sigcomm symposium :10.1.1.31.5351
acm :10.1.1.31.5351
yee 
secure 
phd thesis carnegie mellon university 

