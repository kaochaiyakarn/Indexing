elsevier science ireland rights reserved 
biosystems ant colonies travelling salesman problem marco dorigo luca maria gambardella iridia uni libre de bruxelles franklin elt cp bruxelles belgium idsia corso el lugano switzerland received october accepted october describe artificial ant colony capable solving travelling salesman problem tsp 
ants artificial colony able generate successively shorter feasible tours information accumulated form pheromone trail deposited edges tsp graph 
computer simulations demonstrate artificial ant colony capable generating solutions symmetric asymmetric instances tsp 
method example simulated annealing neural networks evolutionary computation successful natural metaphor design optimization algorithm 
elsevier science ireland keywords ant colony optimization computational intelligence artificial life adaptive behavior combinatorial optimization reinforcement learning 
real ants capable finding shortest path food source nest beckers goss visual cues lldobler wilson 
capable adapting changes environment finding new shortest path old longer feasible due new obstacle beckers goss 
consider fig 
ants moving straight line corresponding author 
mail ulb ac iridia ulb ac dorigo dorigo html connects food source nest 
known primary means ants form maintain line pheromone trail 
ants deposit certain amount pheromone walking ant probabilistically prefers follow direction rich pheromone 
elementary behaviour real ants explain find shortest path reconnects broken line sudden appearance unexpected obstacle interrupted initial path fig 

fact obstacle appeared ants just front obstacle continue follow pheromone trail biosystems ant colonies travelling salesman problem marco dorigo luca maria gambardella iridia uni libre de bruxelles franklin elt cp bruxelles belgium idsia corso el lugano switzerland received october accepted october describe artificial ant colony capable solving travelling salesman problem tsp 
ants artificial colony able generate successively shorter feasible tours information accumulated form pheromone trail deposited edges tsp graph 
computer simulations demonstrate artificial ant colony capable generating solutions symmetric asymmetric instances tsp 
method example simulated annealing neural networks evolutionary computation successful natural metaphor design optimization algorithm 
elsevier science ireland keywords ant colony optimization computational intelligence artificial life adaptive behavior combinatorial optimization reinforcement learning 
real ants capable finding shortest path food source nest beckers goss visual cues lldobler wilson 
capable adapting changes environment finding new shortest path old longer feasible due new obstacle beckers goss 
consider fig 
ants moving straight line corresponding author 
mail ulb ac iridia ulb ac dorigo dorigo html connects food source nest 
known primary means ants form maintain line pheromone trail 
ants deposit certain amount pheromone walking ant probabilistically prefers follow direction rich pheromone 
elementary behaviour real ants explain find shortest path reconnects broken line sudden appearance unexpected obstacle interrupted initial path fig 

fact obstacle appeared ants just front obstacle continue follow pheromone trail dorigo gambardella biosystems choose turning right left 
situation expect half ants choose turn right half turn left 
similar situation side obstacle fig 

interesting note ants choose chance shorter path obstacle rapidly interrupted pheromone trail compared choose longer path 
shorter path receive greater amount pheromone time unit turn larger number ants choose shorter path 
due positive feedback autocatalytic process ants rapidly choose shorter path fig 

interesting aspect autocatalytic process finding shortest path obstacle emergent property interaction obstacle shape ants distributed behaviour ants move approximately speed deposit pheromone trail approximately rate fact takes longer contour obstacles longer side shorter side pheromone trail accumulate quicker shorter side 
ants preference higher pheromone trail levels accumulation quicker shorter path 
show similar process put simulated world inhabited artificial ants try solve travelling salesman problem 
travelling salesman problem tsp problem finding shortest closed tour visits cities set 
article restrict attention tsps cities plane path edge exists pair cities tsp graph completely connected 
probabilistically prefer cities connected edges lot pheromone trail close 
initially artificial ants placed randomly selected cities 
time step move new cities modify pheromone trail edges termed local trail updating 
ants completed tour ant shortest tour modifies edges belonging tour termed global trail updating adding amount pheromone trail inversely proportional tour length 
ideas natural ant behaviour transferred artificial ant colony preference paths high pheromone level ii higher rate growth amount pheromone shorter paths iii trail mediated communication ants 
artificial ants 
artificial ants artificial ant agent moves city city tsp graph 
chooses city move probabilistic function trail accumulated edges heuristic value chosen fig 

real ants follow path nest food source 
obstacle appears path ants choose turn left right equal probability 
pheromone deposited quickly shorter path 
dorigo gambardella biosystems choose turning right left 
situation expect half ants choose turn right half turn left 
similar situation side obstacle fig 

interesting note ants choose chance shorter path obstacle rapidly interrupted pheromone trail compared choose longer path 
shorter path receive greater amount pheromone time unit turn larger number ants choose shorter path 
due positive feedback autocatalytic process ants rapidly choose shorter path fig 

interesting aspect autocatalytic process finding shortest path obstacle emergent property interaction obstacle shape ants distributed behaviour ants move approximately speed deposit pheromone trail approximately rate fact takes longer contour obstacles longer side shorter side pheromone trail accumulate quicker shorter side 
ants preference higher pheromone trail levels accumulation quicker shorter path 
show similar process put simulated world inhabited artificial ants try solve travelling salesman problem 
travelling salesman problem tsp problem finding shortest closed tour visits cities set 
article restrict attention tsps cities plane path edge exists pair cities tsp graph completely connected 
probabilistically prefer cities connected edges lot pheromone trail close 
initially artificial ants placed randomly selected cities 
time step move new cities modify pheromone trail edges termed local trail updating 
ants completed tour ant shortest tour modifies edges belonging tour termed global trail updating adding amount pheromone trail inversely proportional tour length 
ideas natural ant behaviour transferred artificial ant colony preference paths high pheromone level ii higher rate growth amount pheromone shorter paths iii trail mediated communication ants 
artificial ants 
artificial ants artificial ant agent moves city city tsp graph 
chooses city move probabilistic function trail accumulated edges heuristic value chosen function edges length 
artificial ants fig 

real ants follow path nest food source 
obstacle appears path ants choose turn left right equal probability 
pheromone deposited quickly shorter path 
ants chosen shorter path 
dorigo gambardella biosystems table comparison acs nature inspired algorithms random instances symmetric tsp problem name acs sa en som city set city set city set city set city set comparisons average tour length obtained city problems 
results sa en som durbin willshaw 
fi results averaged trials starting different initial cities 
acs run iterations ants results averaged trials 
best average tour length problem bold 
ities natural counterpart observed suited tsp application artificial ants determine far away cities endowed working memory memorize cities visited working memory emptied new tour updated time step adding new visited city 
different ways translate principles computational system apt solve tsp 
ant colony system acs artificial ant city chooses city move belong working memory applying probabilistic formula arg max mk fi amount pheromone trail edge heuristic function chosen inverse distance cities parameter weighs relative importance pheromone trail closeness value chosen randomly parameter random variable selected probability distribution favours edges shorter higher level pheromone trail pk mk pk probability ant chooses move city city pheromone trail changed locally globally 
global updating intended reward edges belonging shorter tours 
artificial ants completed tours best ant deposits pheromone visited edges edges belong tour 
edges remain unchanged 
amount pheromone deposited visited edge best ant inversely proportional length tour shorter tour greater amount pheromone deposited edges 
manner depositing pheromone intended emulate property differential pheromone trail accumulation case real ants due interplay length path continuity time 
global trail updating formula shortest tour global trail updating similar reinforcement learning scheme better solutions get higher reinforcement 
local updating intended avoid strong edge chosen ants time edge chosen ant amount pheromone changed applying local trail updating formula parameter 
local trail updating motivated trail evaporation real ants 
interestingly interpret ant colony reinforcement learning system reinforcements modify strength pheromone trail connections cities 
fact eqs 
dictate ant dorigo gambardella biosystems table comparison acs nature inspired algorithms random instances symmetric tsp problem name acs sa en som city set city set city set city set city set comparisons average tour length obtained city problems 
results sa en som durbin willshaw 
fi results averaged trials starting different initial cities 
acs run iterations ants results averaged trials 
best average tour length problem bold 
ities natural counterpart observed suited tsp application artificial ants determine far away cities endowed working memory memorize cities visited working memory emptied new tour updated time step adding new visited city 
different ways translate principles computational system apt solve tsp 
ant colony system acs artificial ant city chooses city move belong working memory applying probabilistic formula arg max mk fi amount pheromone trail edge heuristic function chosen inverse distance cities parameter weighs relative importance pheromone trail closeness value chosen randomly uniform probability parameter random variable selected probability distribution favours edges shorter higher level pheromone trail pk mk pk probability ant chooses move city city pheromone trail changed locally globally 
global updating intended reward edges belonging shorter tours 
artificial ants completed tours best ant deposits pheromone visited edges edges belong tour 
edges remain unchanged 
amount pheromone deposited visited edge best ant inversely proportional length tour shorter tour greater amount pheromone deposited edges 
manner depositing pheromone intended emulate property differential pheromone trail accumulation case real ants due interplay length path continuity time 
global trail updating formula shortest tour global trail updating similar reinforcement learning scheme better solutions get higher reinforcement 
local updating intended avoid strong edge chosen ants time edge chosen ant amount pheromone changed applying local trail updating formula parameter 
local trail updating motivated trail evaporation real ants 
interestingly interpret ant colony reinforcement learning system reinforcements modify strength pheromone trail connections cities 
fact eqs 
dictate ant probability exploit experience dorigo gambardella biosystems table comparison acs nature inspired algorithms random instances symmetric tsp problem name acs acs opt sa opt som fl fl opt city set city set city set city set city set comparison shortest tour length obtained sa opt best tour length sa distinct runs opt som best tour length som different runs processing cities various orders fi fi opt best tour length fi locally optimized opt acs local optimization opt 
opt heuristics result acs fi starting configuration local optimization 
results sa opt som durbin willshaw 
acs run iterations ants best tour length obtained trials 
best tour length problem bold 
table comparison acs ga ep sa ag lin problem name acs ga ep sa ag optimum oliver city problem eil city problem eil city problem kroa city problem report best integer tour length best real tour length parentheses number tours required find best integer tour length square brackets 
results ep fogel ga bersini 
whitley 
oliver eil 
results sa ag lin 

oliver oliver 
eil eil 
included tsplib additional city eil tsp eil tsp 
kroa tsplib 
best result problem bold 
interesting note complexity algorithms order ep order number cities number tours generated 
clear acs ep greatly outperform ga sa ag 
tsplib www uni heidelberg de soft tsplib tsplib html maintained reinelt 
accumulated ant colony form pheromone trail pheromone trail tend grow edges belong short tours making desirable probability apply biased exploration exploration biased short high trail edges new paths choosing city move randomly probability distribution function accumulated pheromone trail interesting note acs employs novel type exploration strategy 
stochastic component eq 
exploration new paths biased short high trail edges 
eq 
call pseudo random proportional action choice rule strongly reminiscent pseudo random action choice rule reinforcement learning see example learning watkins dayan dorigo gambardella biosystems table comparison acs nature inspired algorithms random instances symmetric tsp problem name acs acs opt sa opt som fl fl opt city set city set city set city set city set comparison shortest tour length obtained sa opt best tour length sa distinct runs opt som best tour length som different runs processing cities various orders fi fi opt best tour length fi locally optimized opt acs local optimization opt 
opt heuristics result acs fi starting configuration local optimization 
results sa opt som durbin willshaw 
acs run iterations ants best tour length obtained trials 
best tour length problem bold 
table comparison acs ga ep sa ag lin problem name acs ga ep sa ag optimum oliver city problem eil city problem eil city problem kroa city problem report best integer tour length best real tour length parentheses number tours required find best integer tour length square brackets 
results ep fogel ga bersini 
whitley 
oliver eil 
results sa ag lin 

oliver oliver 
eil eil 
included tsplib additional city eil tsp eil tsp 
kroa tsplib 
best result problem bold 
interesting note complexity algorithms order ep order number cities number tours generated 
clear acs ep greatly outperform ga sa ag 
tsplib www uni heidelberg de soft tsplib tsplib html maintained reinelt 
accumulated ant colony form pheromone trail pheromone trail tend grow edges belong short tours making desirable probability apply biased exploration exploration biased short high trail edges new paths choosing city move randomly probability distribution function accumulated pheromone trail heuristic function working memory interesting note acs employs novel type exploration strategy 
stochastic component eq 
exploration new paths biased short high trail edges 
eq 
call pseudo random proportional action choice rule strongly reminiscent pseudo random action choice rule reinforcement learning see example learning watkins dayan 
second local trail updating tends en dorigo gambardella biosystems table acs performance bigger tsps problem name acs cl best result acs average optimal result error cpu secs generate tour city prob lem pcb city prob lem att city prob lem rat city problem fl fl city problem column best result obtained acs trials give integer length shortest tour number tours generated finding square brackets 
second column acs average trials standard deviation square brackets 
third column optimal result fl give square brackets known lower upper bounds optimal solution known 
fourth column error percentage measure quality best result acs 
fifth column time required generate tour sun sparc server mhz 
reason linear increase time number failures number times ant choose city outside candidate list increases problem dimension 
problems included tsplib 
courage exploration path taken pheromone value reduced local updating formula 

results applied acs symmetric asymmetric tsps listed tables table 
test problems chosen data available literature compare results obtained naturally inspired methods optimal solutions symmetric instances show ability acs solving difficult instances tsp asymmetric instances 
test problems listed tables performance acs compared performance naturally inspired global nets nns represented elastic net en self organizing map som evolutionary computation ec represented genetic algorithm ga evolutionary programming ep combination simulated annealing genetic algorithms ag compared farthest insertion fi heuristic 
numerical experiments executed acs fi performance figures algorithms taken literature 
acs parameters set values lnn lnn tour length produced nearest neighbour heuristic number cities values robust wide variety problems 
experiments table best solution heuristic carried local optimum applying opt dorigo gambardella biosystems table acs performance bigger tsps problem name acs cl best result acs average optimal result error cpu secs generate tour city prob lem pcb city prob lem att city prob lem rat city problem fl fl city problem column best result obtained acs trials give integer length shortest tour number tours generated finding square brackets 
second column acs average trials standard deviation square brackets 
third column optimal result fl give square brackets known lower upper bounds optimal solution known 
fourth column error percentage measure quality best result acs 
fifth column time required generate tour sun sparc server mhz 
reason linear increase time number failures number times ant choose city outside candidate list increases problem dimension 
problems included tsplib 
courage exploration path taken pheromone value reduced local updating formula 

results applied acs symmetric asymmetric tsps listed tables table 
test problems chosen data available literature compare results obtained naturally inspired methods optimal solutions symmetric instances show ability acs solving difficult instances tsp asymmetric instances 
test problems listed tables performance acs compared performance naturally inspired global optimization methods simulated annealing sa neural nets nns represented elastic net en self organizing map som evolutionary computation ec represented genetic algorithm ga evolutionary programming ep combination simulated annealing genetic algorithms ag compared farthest insertion fi heuristic 
numerical experiments executed acs fi performance figures algorithms taken literature 
acs parameters set values lnn lnn tour length produced nearest neighbour heuristic number cities values robust wide variety problems 
experiments table best solution heuristic carried local optimum applying opt 
tables show acs finds results dorigo gambardella biosystems table comparison candidate list size candidate list length acs average acs best result average time trial secs average number failures tour built problem eil 
candidate list length averages computed trials 
trial number tours generated 
table comparison candidate list size candidate list length acs average acs best result average time trial secs average number failures tour built problem pcb 
candidate list length averages computed trials 
trial number tours generated 
better methods 
best solutions acs table local optima respect opt 
ran acs bigger problems study behaviour increasing problem dimensions table 
runs implemented slightly modified version acs incorporates advanced data structure known candidate list data structure normally trying solve big tsp problems reinelt johnson mcgeoch 
candidate list list preferred cities visited static data structure contains city cl closest cities 
practice ant acs candidate list chooses city move belonging candidate list 
cities candidate list visited consider rest cities 
tables study performance acs candidate list corresponds acs candidate list list length set cl 
report results obtained eil pcb tsps problem included tsplib show short candidate list improves average best performance acs short candidate list takes cpu time build tour longer 
results reported table obtained setting cl 
promising results obtained applying acs asymmetric tsp problems table 
example acs able find sec pentium pc optimal solution city asymmetric problem called 
problem solved optimality computation workstation best published code available asymmetric tsp assignment problem relaxation fischetti toth asymmetric tsp dorigo gambardella biosystems table comparison candidate list size candidate list length acs average acs best result average time trial secs average number failures tour built problem eil 
candidate list length averages computed trials 
trial number tours generated 
table comparison candidate list size candidate list length acs average acs best result average time trial secs average number failures tour built problem pcb 
candidate list length averages computed trials 
trial number tours generated 
better methods 
best solutions acs table local optima respect opt 
ran acs bigger problems study behaviour increasing problem dimensions table 
runs implemented slightly modified version acs incorporates advanced data structure known candidate list data structure normally trying solve big tsp problems reinelt johnson mcgeoch 
candidate list list preferred cities visited static data structure contains city cl closest cities 
practice ant acs candidate list chooses city move belonging candidate list 
cities candidate list visited consider rest cities 
tables study performance acs different lengths candidate list acs candidate list corresponds acs candidate list list length set cl 
report results obtained eil pcb tsps problem included tsplib show short candidate list improves average best performance acs short candidate list takes cpu time build tour longer 
results reported table obtained setting cl 
promising results obtained applying acs asymmetric tsp problems table 
example acs able find sec pentium pc optimal solution city asymmetric problem called 
problem solved optimality computation workstation best published code available asymmetric tsp assignment problem relaxation fischetti toth asymmetric tsp solved optimality fischetti toth table comparison exact methods acs atsp problems dorigo gambardella biosystems problem acs best result acs average ft ft city problem ry city problem exact method best published deterministic code asymmetric tsp results fischetti toth fischetti toth 
ry tsplib problem balas 

report tour length parentheses cpu secs find reported solution experiments run pentium pc 
acs run ants iterations results obtained trials 
best result problem bold 
algorithm polyhedral cuts branch cut scheme addition providing interesting computational results acs presents attractive characteristics due trail mediated communication 
communication determines synergistic effect 
shown example fig 
shows typical result experiment studied average speed find optimal solution defined inverse average time find optimal solution function number ants acs 
comparison fair performance measured cpu time discount higher complexity algorithm ants communicate higher complexity due trail updating operations ants communicate trail initially set edges updated computation 
second communication increases probability quickly finding optimal solution 
consider distribution finishing times finishing time time elapsed optimal solution 
fig 
shows distribution changes communicating cases 
results show communication ants mediated trail useful 
applied symmetric tsp acs competitive specialized heuristic methods lin kernighan lin kernighan performance interesting applied slightly different problem article reported results fig 

communication determines synergistic effect 
communication agents solid line 
absence communication dotted line 
test problem city problem golden stewart 
average runs 
increasing number ants improve performance case absence cooperation cpu time measure speed 
noted task faced acs case heuristic method easier optimality proving algorithm acs prove optimality obtained result 
results table taken suggest acs method finding reasonably short time acs competitive exact methods 
fig 

communication changes probability distribution finishing times 
communication agents solid line 
absence communication dotted line 
test problem city problem golden stewart 
average runs 
number ants 
dorigo gambardella biosystems asymmetric tsp 
extended version acs applied quadratic assignment problem gambardella able find solutions quality measured cost obtained result cpu time required find comparable solutions currently best heuristics qap taboo search taillard hybrid genetic algorithm grasp li 

key application acs new problem identify appropriate representation problem represented graph searched artificial ants appropriate heuristic defines distance nodes graph 
probabilistic interaction artificial ants mediated pheromone trail deposited graph edges generate optimal problem solutions 
ways acs improved number tours needed reach comparable performance level diminish making application larger problem instances feasible 
local optimization heuristic opt opt lin kernighan lin kernighan embedded acs algorithm standard approach improve efficiency general purpose algorithms ec sa nns discussed johnson mcgeoch 
experiments article local optimization just improve best results produced various algorithms 
contrary ant taken local optimum global trail updating performed 
second algorithm amenable efficient parallelization greatly improve performance finding solutions especially high dimensional problems 
immediate parallelization acs achieved distributing ants different processors tsp solved processor smaller number ants best tour exchanged asynchronously processors 
preliminary implementation similar scheme dorigo net transputers shown complexity algorithm largely independent number ants 
third method open improvements specialized families ants tighter connections reinforcement learning methods gambardella dorigo dorigo gambardella specialized heuristic functions direct search 
marco dorigo research associate 
luca gambardella research director idsia 
research funded swiss national science fund contract titled cooperation learning combinatorial optimization 
wish david fogel anonymous referee useful comments previous version 
balas lift project cutting plane algorithm mixed programs 
mathematical programming 
beckers deneubourg goss trails turns selection shortest path ant niger 
theor 
bio 
bersini dorigo hybridization genetic algorithms 
tech 
rep 
iridia iridia universit libre de bruxelles belgium 
di un algoritmo la del del 
masters thesis politecnico di milano italy 
method solving traveling salesman problems 
oper 
res 
dorigo gambardella study properties ant proc 
ppsn iv th int 
conf 
parallel problem solving nature 
voigt ebeling rechenberg 
schwefel eds 
springer verlag berlin pp 

dorigo maniezzo colorni ant system colony cooperating agents 
ieee trans 
syst man cybern 
part 
dorigo gambardella biosystems durbin willshaw analogue approach travelling salesman problem elastic net method 
nature 
watson gandy christofides distribution management mathematical modeling practical analysis 
oper 
res 

fischetti toth additive bounding procedure asymmetric travelling salesman problem 
math 
program 
fischetti toth polyhedral approach exact solution hard atsp instances 
tech 
rep 
deis universit di bologna italy 
genetic hybrids quadratic assignment problem dimacs series discrete mathematics computer science vol 
pp 

fogel applying evolutionary programming selected traveling salesman problems 
cybern 
syst 
int 

gambardella dorigo ant reinforcement learning approach traveling salesman problem proc 
ml th int 
conf 
machine learning prieditis russell eds 
morgan kaufmann san francisco ca pp 

gambardella taillard dorigo ant colonies qap 
tech 
rep 
idsia idsia lugano switzerland 
golden stewart analysis heuristics traveling salesman problem lawler lenstra rinnooy kan shmoys eds 
wiley new york pp 

goss aron deneubourg pasteels self organized shortcuts ant 
naturwissenschaften 
lldobler wilson ants springer verlag berlin 
johnson mcgeoch 
travelling salesman problem case study local optimization local search combinatorial optimization aarts lenstra eds 
wiley new york 
li pardalos resende greedy randomized adaptive search procedure quadratic assignment problem quadratic assignment related problems pardalos wolkowicz eds 
dimacs series american mathematical society rhode island pp 

lin kao 
hsu applying genetic approach simulated annealing solving np hard problems 
ieee trans 
syst man cybern 
lin kernighan effective heuristic algorithm tsp 
oper 
res 
oliver smith holland study permutation crossover operators travelling salesman problem proc 
nd int 
conf 
genetic algorithms grefenstette ed 
lawrence erlbaum hillsdale new jersey pp 

traveling salesman problem neural network 
orsa comput 
reinelt traveling salesman computational solutions tsp applications springer verlag berlin 
taillard robust taboo search quadratic assignment problem 
parallel comput 
watkins dayan technical note learning 
mach 
learning 
whitley starkweather scheduling problems travelling salesman genetic edge recombination operator proc 
rd int 
conf 
genetic algorithms schaffer ed 
morgan kaufmann san mateo ca pp 

