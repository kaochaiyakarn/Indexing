evolving populations better coevolving individuals blind mice problem thomas rue paris france thomas free fr evolutionary design multi agent systems 
important part research domain focusing collaborative coevolutionary methods 
expose possible drawbacks methods show non trivial problem called blind mice problem classical ga approach populations evaluated selected crossed finds elegant non intuitive solution efficiently cooperative coevolution 
difference efficiency grows number agents simulation 
propose explanation poorer performance cooperative coevolution intrinsic fragility evaluation process 
explanation supported theoretical experimental arguments 
evolutionary algorithms methods apply principles darwinian evolution generation adaptation artificial logical entities function parameters rulesets programs 
usability search technique supported analytically schema theorem goldberg genetic algorithms empirically uncountable applications 
overwhelming majority applications generation individuals 
collective evolution generation adaptation collaborating populations agents attracted comparatively attention 
significant research domain especially decade 
research led algorithms growing complexity 
describe field principle cooperative coevolution popular type method today 
expose feel possible drawbacks cooperative evolution propose simpler way adapt canonical genetic algorithm generation populations 
describe experiment blind mice problem show adapted genetic algorithm works pretty problem cooperative coevolution difficulties 
give explanation difficulties difference behaviour simpler genetic algorithm 
related simplest way evolve team collaborating agents agents identical homogeneous populations 
methods really different individual evolution evaluation time evaluate genotype agents created genotype just resulting population evaluated 
start different genotype rigidly constrained method perfect sense situations need heterogeneity 
method evolve small groups fish animats controlled neural networks perform extremely simple tasks dispersion aggregation 
similar method luke evolve competitive teams soccer players robocup competition kitano 
author adapted version genetic programming koza 
attempt introducing limited degree heterogeneity decomposing teams small sub teams defenders attackers evolving different program trees subteams 
enormous search space delays imposed robocup server software approach proved intractable practice gp runs took days produce meaningful results 
lack time prevented semi heterogeneous teams outperforming homogeneous teams 
way obtain degree heterogeneity population change gradually time replacing agents evaluation method 
new agents obtained crossover duplication mutation 
way evaluate impact individual perfectly possible perform simple genetic algorithm population 
essence idea classifier systems holland reitman set rules cooperate control animat individuals evaluated animat performance credit sharing system 
vein proposed simple scheme agents arbitrary index agents index mate agents indices fell range 
evaluation occured simply replacing parents offspring second parent keeping best populations possibility discarding changes decreased performance system 
simple algorithm led emergence sub species appeared grow needs population 
interesting feature algorithm incrementality allowed long term adaptive evolution system 
trying obtain fully heterogeneous systems brings level complexity right realm cooperative coevolution 
coevolution frequently applied competitive way confronting individuals result confrontation evaluation individuals cooperative way order evolve sets collaborating agents 
cooperative coevolutionary potter dejong methods agent system taken hidden subpopulation pool 
evaluate individual associated set collaborators pool resulting population evaluated 
resulting score attributed currently evaluated individual 
evaluation method classical ga cycle evaluate select reproduce applied pool turn times needed 
version cooperative coevolutionary algorithm collaborators chosen best individual pool 
version evaluation refined re agent random collaborators better score obtained evaluations 
number collaborators way collaborators chosen way score computed averaging different scores best score worst score important parameters influence performance algorithms 
influence parameters studied extent wiegand study applied simple function optimization problems variables 
happens frequently ideas cooperative coevolution re discovered number times different names 
enforced subpopulations esp example exactly cooperative coevolution agent evaluated set collaborators best agents pools 
words esp algorithm 
method initially devised evolution neural networks gomez successfully applied multi agent evolution yong predator prey simulation 
algorithm managed find efficient strategies predators having predators chase prey blocked 
reason idea simply standard genetic algorithm populations fallen slightly fashion 
probable reason simply obvious talked 
second reason intrinsic drawbacks massive search space 
third requires modifications adapted evolution populations 
aspects discussed section 
methods evolving heterogeneous populations cooperative coevolution cooperative coevolution quite elaborate mechanism 
intuition indicates evidence confirms focusing agent requires huge number evaluations converge solution 
algorithm concentrates optimizing individual agent regard rest population different holistic approach traditional gas full genomes manipulated adaptation genes emerges naturally selection crossover mutation theory 
possible simply traditional gas generation multi agent systems regarding systems just agent individuals 
simple answer approach leads large genotypes genotype individual code agents just resulting search space intractable gas 
cooperative coevolution seen simple way decompose big problem smaller ones smaller problems strongly interlaced 
cooperative coevolutionary algorithms important drawback basically evaluate agent assessing impact performance system 
problem number agents system grows influence single agent system performance tends decrease possibly making assessment difficult 
may troublesome problem stochastic component case simulations 
case evaluating population times lead different results 
consequence may important think see 
interesting see classical genetic algorithms adapted evolution populations population oriented genetic algorithms compete cooperative coevolution 
population oriented genetic algorithms genetic algorithms evaluating individuals selecting performance crossing mutating starting 
possible apply exactly method multi agent systems 
evaluate populations cross creating new populations inherit agents parents mutate changing agents fact multi agent systems simple individuals 
obvious level decomposition agent exploited ways 
obvious idea order cover search space efficiently new populations existing agents create new agents 
may introduce inner crossover operator allows cross agents 
creating new population importing agents parents imported agents result inner crossover agents parents 
normal crossover top inner crossover individual agents bottom 
allows creation new agents necessary cover search space efficiently possible analogy traditional gas viewpoint population crossed agents similarity bit wise mutations standard genetic algorithm 
part children genotype parents genotypes 
exactly random mutations genetic material comes parents genotypes 
suggests sight inner crossover rate slightly higher usual mutation rate classical ga usually bit 
possibility enhance traditional crossover occasionally swapping agents populations final offspring 
allow better covering search space 
explore possibility 
application blind mice problem description experiment experiment blind mice problem 
flock mice controlled simple feed forward neural networks escape number cats running toroidal world 
game simple rules 
cats see mice run closest mouse 

mice run faster cats 

mice see cats 
see blind 
input pair numbers coordinates center flock 
cat touches mouse cat random location population catch counter increased changed simulation interrupted way 
consider rules problem extremely difficult mice 
possible escape predators see see 
running fast possible just bump cat coming opposite direction 
true random movement strategies 
enormous asymmetry information mice cats survival chances poor rodents appear thin 
human designer finding solution cat mouse successful strategy 
mouse attracts cats mouse plays balancing role mice move tight flock problem trivial task 
see evolution managed come elaborate solution problem 
experiments mice controlled simple feedforward neural networks inputs outputs hidden neurons 
inputs coordinates center gravity flock sum resp 
coordinates mice divided number mice 
outputs real numbers range indicating horizontal vertical speed mouse 
weights real numbers range 
simulations cats 
evolved strategy optimal strategy problem 
strategy emerged successful runs variants 
strategy described 
strategy led really efficient behaviour 
explain strategy see mice aggregated move tight flock 
minimizes probability stray cat touch sufficient ensure minimal catch rate 
really important behaviour mouse labelled dancer 
mouse strange behaviour revolve rest flock strictly circular fashion 
constantly bounces flock staying respectable distance moving fast path 
purpose behaviour obvious sees position cats dancing mouse simply closest leaving rest flock 
words purpose dancing behaviour simply attract cats 
dancer moves fast touched cats path drag cats efficiently initial stage cats mice random position gets far cats allows cats follow endlessly runs faster 
final touch strategy seen behaviour mouse labelled balance didn appear successful runs 
mouse revolves flock closer 
runs moves flock circular fashion runs bounces usually stays opposite side flock respect dancer 
believe mouse balancing role effect dancer position center gravity population allowing flock stable 
variants appeared having balancer 
essential traits strategy consistent aggregation mice attract cats away flock 
note strategy interdependent agent performance highly dependant agents behaviour 
true consider order behave way calculate trajectories input position center gravity flock position agents 
fact plays significant role results described 
experimental results experimental settings algorithms problem simple genetic algorithm adapted inner crossover operator described full featured cooperative coevolutionary algorithm 
methods mice 
populations resp 
mice algorithm resp 
pools mice second 
algorithm run times different random seeds 
algorithm reproduction populations occured tournament selection point crossover rate 
time populations crossed inner crossover rate applied meaning mouse offspring chance result crossing parents corresponding mice 
second algorithm reproduction pool occured tournament selection point crossover rate proved efficient 
algorithms mutation appeared crossing mice choosing new random value connection weight probability 
note method limited form elitism best individual generation preserved generation 
ensured better performance obtained results puzzling explained 
cooperative coevolution specifies agent evaluated set collaborators 
sets performance population adapted genetic algorithm mice top mice bottom 
axis indicates number mice evaluation round axis indicates number evaluations 
fitness best population average fitness populations shown 
collaborators turn order refine evaluation final result calculated successive evaluations various ways average best random 
problem increasing number collaborators number evaluation rounds brought absolutely damaging final score best score 
successful method simply evaluate mouse joining best individual pool exactly enforced subpopulations algorithm 
surprising result explain 
comparison results algorithm simple genetic algorithm levels crossover proved remarkably efficient problem 
runs led strategy described section number mice simulation course took time mice 
typical runs respectively mice described 
cooperative coevolution led different results 
mice runs algorithm failed evolve competitive behaviour 
runs managed find strategy took evaluations previous algorithm 
runs achieved performance comparable simple genetic algorithm 
mice success rate lower 
runs converge evaluations 
converged suddenly diverged quickly 
runs mice exhibited intriguing pattern oscillation 
performance best run cooperative coevolutionary algorithm 
curves indicate performance best individual currently evaluated pool average fitness individuals pool 
notice variations curves 
fitness curve described shows example pattern 
result successful run mice 
population converge better behaviour suddenly diverges loose 
pattern starts cycles 
expect 
algorithm population remains quite stable composed best individual pool 
individual changed cycle better best individual previous generation preserved 
explain changes fitness happening 
explanation pattern result cooperative coevolution main drawback number agents grow result evaluation undergoes important stochastic variations performance bound decrease 
happens point algorithm find population keeps optimizing replacing agent better turn 
point stochastic variations evaluation process agents perform non optimal 
classical evolutionary algorithms occasional mistakes blurred large number trials errors population performance impact cooperative coevolution exceptional case sufficient behaviour population replace essential agent say dancer poorly performing agent say random 
agents pools evaluated turn conditions changed dramatically agents selected previous quasi optimal ones 
error selection agent influence pools 
evaluation cycle comes back pool previously essential agent may selected rest population adapted different state 
possible agent selected resulting sharp increase performance error evolutionary process 
cause oscillations fitness curve 
little problem 
said increasing number collaborators classical way selecting random sets collaborators simply understandable problem solution requires highly interdependent behaviours 
agent performance agents play role 
evaluating agent fitting random population help reach state 
problem strongly agents adding random collaborators doesn helpful solution 
devise elaborate schemes second best pool second set evaluators suppress problem 
problems non deterministic component cooperative coevolution essentially fragile standard genetic algorithm 
described possible pitfalls cooperative coevolution proposed way apply canonical genetic algorithm populations agents 
applied algorithms non trivial problem blind mice problem conceptually simple non trivial solve 
problem populations oriented genetic algorithm significantly outperformed cooperative coevolution 
proposed explanation difference results intrinsic fragility cooperative coevolution regard excessive stochastic variations evaluation proces 
final note old french proverb goes le chat est pas les cat away mice dance 
artificial evolution demonstrated opposite true 
goldberg david goldberg 
genetic algorithms search optimization machine learning 
addison wesley 
gomez gomez 
incremental evolution complex general behavior 
adaptive behavior 
holland reitman holland reitman 
cognitive systems adaptive algorithms 
strangely potter dejong random collaborators introduced precisely problems strongly interacting variables rosenbrock function kind problem idea applied variables functions 
case choosing random collaborator addition better may allow algorithm escape local minima 
number agents grows evaluating agent set totally random collaborators hardly bring valuable information 
waterman hayes roth editors pattern directed inference systems pages 
academic press 
kitano kitano asada kuniyoshi noda osawa 
robocup robot world cup initiative 
proceedings ijcai workshop entertainment ai alife 
koza john koza 
genetic programming 
mit press 
luke sean luke 
genetic programming produced competitive soccer softbot teams robocup 
john koza editor proceedings third annual genetic programming conference gp pages 
thomas 
collective genetic algorithm 
proceedings genetic evolutionary computation conference gecco pages 
morgan kaufmann 
cliff bruten 
evolving collective behaviours synthetic fish 
proceedings fourth international conference simulation adaptive behavior sab pages 
mit press 
potter dejong potter dejong 
cooperative coevolutionary approach function optimization 
proceedings third parallel problem solving nature pages 
springer verlag 
wiegand paul wiegand william kenneth dejong 
empirical analysis collaboration methods cooperative coevolutionary algorithms 
proceedings genetic evolutionary computation conference gecco pages 
morgan kaufmann 
yong yong 
cooperative coevolution multi agent systems 
technical report ai university texas austin 
