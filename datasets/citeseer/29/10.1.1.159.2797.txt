representing knowledge situation calculus interval valued epistemic fluents john funge microcomputer research lab intel www cs toronto edu funge ability interval arithmetic provide finite succinct way represent uncertainty large possibly uncountable set alternatives turns useful building intelligent autonomous agents 
particular consider important issues reasoning sensing intelligent control autonomous agents 
developing principled way combine raises complicated issues knowledge representation 
describe solution problem 
idea incorporate interval arithmetic situation calculus 
situation calculus known formalism describing changing worlds sorted order logic 
describe agent knowledge world changes 
potentially provides sound basis incorporating sensing logic programming 
previous relied possible worlds approach knowledge 
leads elegant mathematical specification language 
unfortunately proposals implement approach 
number possible worlds potentially uncountable 
propose alternative formalization knowledge situation calculus 
approach intervals 
advantage straightforward implement 
prove sound complete respect previous possible worlds approach 
described grew attempt build intelligent autonomous agent 
inspired new area choose situation calculus foundation approach 
situation calculus known formalism representing changing worlds 
intention situation calculus represent agent knowledge 
logical basis situation calculus meant agent able reason effect actions 
able choose course action believed result desired effect 
unfortunately world agent situated highly complex 
degree result actions unpredictable 
clear needed incorporate sensing framework 
fortunately issue sensing looked context situation calculus problem 
previous approach sensing idea possible worlds borrowed modal logic 
theory elegant powerful wasn clear implement 
order specify agent knowledge world expected list uncountable number possible worlds 
possible recourse modal logic theorem prover 
modal logic theorem provers widely available widely understood 
addition didn want approach sensing inextricably bound notion theorem proving 
important aim approach intelligent control simple practical 
wanted ideas useful programmers job build autonomous agents 
particular hoped provide rapid prototyping tool employed specifications amenable gradual refinement production code 
point occurred notion possible worlds allowing express agent uncertainty aspects world 
struck interval arithmetic provides way express uncertainty 
intervals provide finite succinct way represent uncertainty large possibly uncountable set alternatives 
rest task remainder involved working details fits 
necessary background situation calculus 
background situation calculus way describing change sorted order logic :10.1.1.85.5082
section shall give mathematical details required understand situation calculus 
necessarily assume familiarity mathematical logic reader referred additional background information required 
shall simple example illustrate various points situation calculus suppose agents called jack 
suppose armed gun wants kill jack 
suppose jack initially alive gun initially empty 
sorts situation situation snapshot state world 
domain independent constant situation denotes initial situation 
want various number systems theory action 
logical accounts numbers problematic 
consequently avoid task odds purpose employ eschew messy details collection sorts various number systems boolean numbers natural numbers integer numbers rational numbers real numbers 
avoid misunderstanding briefly clarify particular constants sort 
unary function binary functions 
shall want ensure number systems maximal minimal elements 
shall indicate augmented number systems example extended real numbers 
shall denote subsets number systems appropriate designators example non negative reals 
number system sort consider standard interpretations 
shall interpreted theories various functions constants associated sort fixed 
functions predicates corresponding standard mathematical functions predicates sort 
number system sort assume existence oracle capable determining truth falsity sentences relationships objects sort 
objects sort object 
see detailed discussion subject 
practical point view mathematical software packages maple handle wide range useful queries 
fluents property world change time known fluent 
fluent function situation term convention argument 
shall restrict fluents values number system sorts 
functional fluents foo take values shall adopt standard abbreviation foo just shorthand foo 
may refer fluents relational fluents 
introduce fluents capture salient details example 
enable formalize scenario situation calculus 
alive jack alive state aimed gun aimed jack state loaded gun loaded state actions sort action fundamental instrument change ontology 
situation resulting doing action situation distinguished function action situation situation 
example introduce actions load load gun 
aim aim gun jack 
shoot shoot gun 
possibility performing action situation denoted distinguished predicate poss action situation 
sentences specify state world performing action known precondition axioms 
give axioms actions example qualification problem poss load gun loaded 
poss aim gun aimed jack 
poss shoot loaded gun shot loaded 
qualification problem trying infer action possible 
example wrote certain necessary conditions enumerate things may prevent shooting gun 
instance shoot trigger stiff gun concrete employing assumption may obviate problem assume set necessary conditions sufficient set 
instance assumption precondition axiom shoot poss shoot loaded 
general definition definition action precondition axioms 
action precondition axioms give necessary sufficient conditions action possible 
form poss 
additional subtleties including arise allow state constraints discussed :10.1.1.51.3134
effect axioms effect axioms give necessary conditions fluent take value performing action 
effect axioms state effects actions defined fluents example loaded load gun loaded loading 
aimed aim gun aimed jack aiming 
poss shoot aimed alive shoot gun aimed jack shot dead shooting 
unbound variables implicitly assumed universally quantified 
remains complete pass formalizing example specify initial situation frame problem alive initially jack alive 
aimed initially gun aimed jack 
loaded initially gun loaded 
unfortunately impediments situation calculus real applications 
notable called frame problem :10.1.1.85.5082
frame problem trying infer remains unchanged action 
example wrote changed action write things stayed 
instance gun stayed loaded aiming gun turn horse loading common sense reasoning actions essential assume explicitly told things stay 
formally state law inertia changing effect axioms causes problems 
particular actions fluents write set frame axioms 
problem exacerbated planner having reason efficiently presence axioms 
point worth commenting frame problem dealt fields tackle related problems 
notably control theory 
control theory notion state vector 
component state vector similar fluent 
frame problem tackled simply assuming state vector completely characterizes system question values components explicitly specified 
part state vector unchanged explicitly say 
usually state vectors chosen short task 
put approach context 
want constrained give state vector outset 
want reasons preceding paragraph list things don change 
approach point mention new fluent system infer value respect value initial situation 
furthermore desired leave initial situation underspecified 
example suppose initial situation say car blue yellow 
suppose perform actions affect color 
action sequence able infer car color blue yellow 
shown avoid having list frame axioms 
idea assume effect axioms enumerate possible ways world change 
closed world assumption provides justification replacing effect axioms successor state axioms 
instance successor state axiom alive states jack alive alive previous state just shot general definition poss alive alive shoot aimed 
definition successor state axioms 
suppose order formula free variables assume states necessary conditions action performed results equal corresponding successor state axiom assumes conditions sufficient ones form poss 
instructive consider definition means relational fluent disjunction positive effects action disjunction negative effects 
successor state axiom exogenous actions poss 
case aspects domain want formalize 
example suppose interested position ball floating ocean 
impossible attempt formalize motion waves wind case phenomena outside agent ability control 
simply define action say caused mysterious external forces 
actions referred exogenous actions 
cause exogenous action difficult state effect need 
example simply moves ball position knowledge producing actions thought actions having effects world 
imagine actions effect change agent knows world 
example agent trying phone call 
agent needs know number dialing 
action looking phone number effect world changes agent knowledge 
sensing actions referred knowledge producing actions 
sensing worlds light possible 
approach incorporating knowledge producing actions situation calculus described 
idea approach define epistemic fluent keep track worlds agent thinks possibly 
depict agent unable decide world 
world light 
shows agent turning see light fact turned 
result sensing action shown agent discarding worlds previously thought possible 
particular knows light world throw worlds thought light turned 
section give mathematical details notion modeled situation calculus 
epistemic fluent way agent keeps track possible worlds case may possible situations define epistemic fluent fluent keeps track related worlds 
related worlds precisely ones bubbles agent head mentioned figures 
situations agent thinks current situation 
write mean situation far agent tell alternative situation agent knowledge indistinguishable 
find sensing value certain terms example terms light 
say agent knows value term situation constant mean value related worlds 
convenience introduce abbreviation knows sensing worlds light possible 
term situation arguments inserted 
example jack jack 
note simplicity considering case agent 
agent simply need clear agent knows 
example knows indicates knows value 
agent knows value term necessarily know value term notation say agent knows referent knows 
introduce special notation case takes values particular possibilities referent say know true knows knows 
sensing shall simplifying assumption term value interested sensing corresponding knowledge producing action sense general knowledge producing actions sense 
shall assume associated situation dependent terms 
corresponding successor state axiom poss sense sense sense sense 
successor state axiom captures required notion sensing solves frame problem knowledge producing actions 
shall explain works simple example 
particular consider problem sensing current temperature 
firstly introduce fluent temp situation corresponds temperature kelvin current situation 
assume temperature remains constant poss temp temp 
single knowledge producing action 
gives successor state axiom poss temp temp 
axiom states action set related worlds set images previous set related worlds 
related image ofs performing action related 
agent performs action situation effect restrict set related worlds temperature agrees temperature situation knowledge producing action effect temperature denotation known temp 
reader referred additional details examples theorems 
discussion formalization knowledge situation calculus epistemic fluent elegant mathematical specification language 
powerful 
example suppose effect axiom states gun loaded agent dead shooting gun loaded dead shoot 
furthermore suppose know gun initially loaded knows loaded infer know agent dead shooting gun knows dead shoot 
unfortunately problems 
set problems associated implementation second applies reasoning real numbers theory practice 
implementation implementation problems revolve specify initial situation 
example choose implementation language prolog specifying initial situation may involve having list exponential number possible worlds 
example initially know gun loaded consider explicitly listing possible worlds ands 

loaded 
add relational fluents want able refer knowledge situation gets worse 
general fluents initial possible worlds list 
start functional fluents things get worse definition list uncountably possible worlds associated knowing value fluent takes values intuitively need able specify rules characterize having list set initial possible worlds 
may possible coerce prolog achievement 
reasonably consider modal full order logic theorem prover 
theorem provers inefficient experimental 
addition advanced idea approach rapid prototyping 
claim relies possibility gradually removing non determinism specifications 
way hope eventually refine specification run need underlying theorem prover 
idea sadly need theorem prover approach sensing 
ignoring concerns assume specify rules characterize set initial possible worlds 
example suppose initially know temperature kelvin 
express inequalities temp 
brings second set problems related reasoning real numbers 
real numbers just wrote formula corresponds knows temp 
suppose interested tells know value temperature squared 
general know term lies range able answer questions know arbitrary function 
questions take mathematical reasoning inequalities 
fortunately path charted field interval arithmetic 
interval arithmetic address issues raised section turn attention interval arithmetic 
immediate advantages interval arithmetic affords listed interval arithmetic enables move details reasoning inequalities rules combining intervals various mathematical operations 
interval arithmetic provides finite succinct way represent uncertainty large possibly uncountable set alternatives 
representation remains finite performing series operations intervals 
interval arithmetic compared probability means representing uncertainty 
writing sound oracle answering ground queries interval arithmetic trivial task 
answer queries time linear length query 
returning valid optimal intervals challenging see section 
compared vastly unrealistic assumption earlier existence oracles answering queries real numbers 
discrepancy underlying theory interval arithmetic corresponding implementation 
re establish claims approach rapid prototyping 
construct interval arithmetics previously available number systems follows number system add new number system sort ix 
constants ix set pairs functions predicates corresponding functions predicates interval notation lower bound upper bound 
function width returns width interval width number say contains write similarly intervals say contains write intervals say 
want specify particular number system represent respectively minimum maximum elements 
example example consider case number system ib 
numbers number system note inb represent respectively true false 
similarly ib represent respectively known true unknown known false 
get amounts valued logic way example develop section 
complex numbers pair real numbers operations defined terms operations reals 
lead confusion reading text complex analysis comprehend complex numbers separate entity distinct pairs real numbers 
reader making mistake intervals 
numbers ix pair numbers important treat class numbers right 
traditionally interval arithmetic address problems ability floating point arithmetic accurately represent real arithmetic 
example consider real number 
real number represented exactly finite decimal 
represented exact interval interval express lies 
expresses uncertainty exact value expressed decimal 
modern computers degree uncertainty part appeal interval arithmetic 
course part interval arithmetic arithmetic intervals 
shall delay discussion section 
interval valued fluents epistemic fluent discussed previously allowed express agent uncertainty value fluent world 
unfortunately section saw implementation problems associated trying represent agent knowledge initial situation 
fortunately previous section saw intervals allow express uncertainty quantity 
allow way circumvents problem represent infinite quantities finite number bits 
natural ask intervals replace troublesome epistemic fluent 
answer shall seek demonstrate remainder 
particular shall introduce new epistemic fluents interval valued 
represent agent uncertainty value certain non epistemic fluents 
previously functional fluents take values number systems noteworthy allowing fluents take values interval numbers systems ib ir 
firstly distinguish regular fluents value learned knowledge producing action 
term fluents sensory fluents 
sensory fluent introduce new corresponding interval valued epistemic ive fluent example introduce ive fluent situation 
interval state temperature initially kelvin 
similarly specify temperature initially completely unknown ultimate aim implementation ive fluents completely replace troublesome fluent 
mathematical theory prevent ive fluents existing previous sole epistemic fluent 
define correctly important relationships hold 
relationships take form state constraints shall show express notion validity optimality ive fluents 
state constraints maintained actions performed ive fluents completely subsume troublesome fluent 
turn true consider knowledge general terms 
case maintain validity may sacrifice original notion optimality see section 
seeking ive fluent ubiquitous necessitates alternative definition knows mention fluent 
introduce new abbreviation iknows term iknows means interval value interval value mean value get evaluating expression set rules shall discuss section 
just consider case fluent sensory fluent iknows value corresponding ive fluent completely unknown sensory fluent iknows 
take important step redefining knows special case iknows collapsed thin interval knows iknows 
definitions terms new definition knows required new definition involve problematic epistemic fluent 
position define means ive fluent valid definition validity 
sensory fluent say corresponding ive fluent valid interval value related situations contained 
note logic knowledge opposed belief situation related 
immediate consequence definition ive fluent valid contains value 
validity criterion state constraint ensures interval value ive fluents wide contain possible values sensory fluents 
prevent intervals excessively wide 
example interval valid interval ive fluent takes values ir 
notion narrow intervals captured definition optimality definition optimality 
valid ive fluent optimal smallest valid interval 
correctness section shall consider consequences applications interval valued fluents formalizing sensing various different assumptions 
goal show maintain valid optimal intervals perform actions 
leads soundness completeness result section 
step define successor state axioms ive fluents 
done way regular fluents 
example suppose perfect sensor successor state axiom states sensing know temperature resulting situation poss temp 
consider case general 
firstly note initial valid ive fluent 
lemma 
initial situation sensory fluent valid interval 
proof 
proof theorem immediate fact definition bounds possible value particular bounds values take initial related situations 
reasonable assume initial optimal interval 
initial optimal interval correctness results section hold completeness results won hold sensing action 
lemma 
initial set related situations completely unspecified specified inequalities tight possible maximally restrictive find initial optimal ive fluent sensory fluents 
proof 
case initial set related situations completely unspecified 
initially completely ignorant sensory fluent value 
maximal interval clearly optimal 
interval bounds possible values initial related situations 
unique valid interval definition optimal interval 
case ii specification consider required clearly smallest valid interval 
follows assumptions sensory fluents 
value initial situation optimal valid 
assumption justified lemma 
successor state axiom remains constant poss 

successor state axioms corresponding ive fluents form poss 
sections discuss relax constraints 
state main correctness result 
theorem 
assumptions situations sensory fluents ive fluent valid optimal 
proof 
shall prove result induction note base case follows assumption 
need consider case 
induction may assume optimal 
seek prove optimal 
case consider case 
note reflexive sure exists 
successor state axiom equation induction infer 

successor state axiom equation gives 
successor state axiom equation wehavethat required validity 
shows valid interval interval valid interval 
assumption optimality interval narrower longer valid 
narrowest valid interval 
case ii similarly successor state axiom equation 
successor state axiom equation gives successor state axiom equation wehavethat 
required validity 
show optimality consider width 
narrower interval interval optimal 
corollary definition knows equation equivalent equation 
corollary 
sensory fluent knows knows 
proof 
assume knows 
equation equivalent theorem valid optimal equation definition knows 
assume knows equation applying theorem width re write equation definition knows required 
number correctness results proven knows equivalence means current set assumptions correctness results carry knows operators interval arithmetic back section original motivations introducing intervals promise able conveniently calculate know term knowledge subcomponents 
example suppose situation know value fluent know answer question leads large active research area interval arithmetic 
fundamental principle interval versions function guaranteed bound possible values non interval version 
example consider function interval version function ir ir 
result applying interval interval 
say valid interval point wehavethat note valid interval ify valid interval 
interval gives valid interval say sound interval version 
expect previous discussions defining sound interval version function trivial 
particular just interval version return maximal interval relevant number system 
example function argument returns sound interval version function see need concerned returning intervals narrow possible 
optimal interval version function defined sound interval version argument returns smallest valid interval 
unfortunately interesting functions interval versions known exist 
basic approaches address shortcoming special forms consider expression 
evaluate expression interval get back interval clear expression simplifies optimal interval researchers looked various standard forms expressions attempt give better results evaluating expression intervals 
general known optimal form known single form guaranteed give best result 
closest researchers able far called centered forms 
subdivision standard tool interval arithmetic arsenal subdivision 
suppose interval evaluate give interval wide 
subdivide xl xr xl xr 
evaluate half separately hope xl xr 
practice usually works theory functions noncomputable case hopes refining intervals vanish 
linear intervals final approach mention new approach invented jeffrey 
idea constants bound interval linear functions 
linear expressions define operators guaranteed return optimal intervals 
course recreate similar problems considering quadratic expressions shows generalize interval arithmetic way intervals general turing machines bounds 
knowledge terms back section introduced abbreviation iknows equation defined iknows fluents follows shall show define iknows general terms 
stating means definitions valid 
definition validity terms 
term say corresponding interval value term iknows valid interval value related situations contained iknows 
fortunately general notion soundness interval arithmetic carries notion validity iknows theorem 
suppose sound interval version ary function xn furthermore xn respectively valid intervals iknows iknows 
xn valid interval iknows 
proof 
suppose theorem false 
xn valid interval iknows 


xn false 
related situation 

xn 
violates assumption sound interval version 
important consequence theorem definition iknows terms stand shoulders previous interval arithmetic 
define iknows recursively terms sound interval versions functions 
assuming assumptions theorem iknows 

xn 
note functions may written infix notation case may refer operators 
important aspect definition redesign plethora operators interval arithmetic prove sound 
previous section noted difficulties associated defining optimal versions operators 
noted number ways deal problem 
methods outlines maintains validity appropriate 
particular method choose narrow intervals thought implementation issue approach 
usefulness long list useful operators interval arithmetic reader better consult 
way example shall list useful operators ib 
interval versions operators relations bold 
rely context imply intended meaning 
definition operators ib 
constant constant constant constant definitions enable evaluate iknows terms values notice definitions terms 
general guarantee valid results optimal ones 
example assume get valid clearly optimal 
numbers subdivide perform exhaustive search optimal value 
get variables exhaustive search approach worst case exponential complexity 
general may observed variable occurs expression evaluating yield optimal result 
start thin intervals get optimal result 
propositional formula blake canonical form evaluation intervals yields optimal result 
propositional formulas converted form 
evaluate propositional formulas linear time get optimal results 
catch converting propositional formulas blake canonical form np hard 
consider quantifiers rules form basis particularly useful procedure evaluating expressions 
recall simplest correct procedure just returns interval queries containing quantifiers procedure follows rules useless works adequately tell specific instance 
important bear mind general dealing problems computable 
consequently finite set rules problems better return maximal interval 
immediate consequence designers interval arithmetic packages need worry unemployment 
regardless rules certainly suffice simple starting point 
expect intervals provide means magically circumvent complexity problems 
provide ability track progress solving problem 
majority real world problems exact knowledge imperative allow early narrow interval 
give early convergence slow 
contrasted methods evaluating expressions sure method completely stuck just return solution 
consider examples interval arithmetic approach shown useful valid 
simple example 
suppose relational fluents andq know true know true knows knows 
fluent hard see implies know knows 
proof 
proof involves expanding definition knows knows knows proceeding case analysis 
consider case weaken postcondition give 

case symmetrical result follows definition knows equation 
hard see implication hold way 
counter example consider case exactly related situations sa sb sa sa sb sb 
consider example interval fluents 
easily prove proof 
expanding definitions proceed case analysis 
definitions knows knows knows 
iknows iknows iknows iknows case symmetrical result follows definition knows equation 
conversely start assumption knows iknows definitions allow conclude tautologies iknows iknows say knowledge knowledge hope implication hold way 
consider examples 
consider knowing false knows versus knowing knows 
firstly assume reflexive knows knows proof 
proof straightforward don know related worlds false 
false related worlds result follows 
just careful related worlds 
inferred fact reflexive 
implication clearly hold direction 
likewise knows knows proof 
knows iknows iknows iknows iknows conversely knows iknows iknows iknows case iknows iknows case ii iknows iknows hope implication hold way 
consider example knows xp 
firstly knows knows xp proof 
knows holds related situation constant cs cs holds 
note constant cs true different constant assumption constant holds related situation 
related situation simply set cs result follows 
implication clearly hold direction 
consider example intervals 
proof 
constant wehavethat knows knows xp knows iknows iknows iknows iknows direction knows iknows iknows tautology rightly conclude 
section saw deductions modus ponens 
fortunately perform similar reasoning intervals 
theorem 
terms take values valid interval value iknows 
iknows proof 
valid value iknows definition iknows particular 
assumption 
definition valid interval iknows required 
inaccurate sensors fluent approach extended handle noisy sensors 
worth noting redefining knows easily extend approach allow inaccurate sensors 
may say know fluent value width interval twice knows 
bound greatest possible error sensor recorded yesterday temperature state value sensed temperature actual value poss max temp min temp 
sensing changing values considered sensing fluents value remains constant 
fluent known stays known 
value known fluent changes agent automatically know fluents new value 
cases somewhat counterintuitive 
example checked temperature quite natural assume certain period time information may date 
expect sense temperature periodically 
epistemic fluent model information date corresponds adding possible worlds back 
unfortunately fluent keeps track agent knowledge sensory fluents 
hard specify exactly worlds agent adding back consideration 
contrast intervals noteworthy allowing particular relevant interval expand 
simply ensure axioms maintain state constraint interval bounds actual value fluent 
extreme extend approach handle fluents constantly changing unpredictable ways 
model exogenous actions 
assume current temperature changes completely erratic unpredictable way exogenous action 
write successor state axiom temp simply states temperature set poss temp temp 
write successor state axiom 
particular assume accurate sensors state temperature known sensing completely unknown poss temp 
note definition works definition temp glance may appear strange example reflection reader hopefully recall intention ive fluents model agent knowledge world 
sensing agent rightly remains oblivious effect exogenous action 
fluent keeps track temperature virtual world course get temp 
bound maximum rate temperature change unit time temp add ability track time axiomatization lot better 
suppose action tick occurs unit time 
limit exogenous actions occurring directly tick action 
successor state axiom states temperature known sensing period time known changed maximum amount unchanged poss temp tick vp vp max temp vp temp tick 
type axiom plan replan 
degradation knowledge level basis replanning action 
mentioned started described desire build intelligent autonomous agent 
happily large part described successfully developed autonomous agents reason act perceive changing incompletely known unpredictable environments 
particular applied approach computer animation computer games cinematography 
frames corresponding animations www cs toronto edu funge 
additional documentation 
jurgen 
interval computations 
academic press 
bacchus halpern levesque 
reasoning noisy sensors situation calculus 
mellish editor proceedings fourteenth international joint conference artificial intelligence ijcai pages montreal august 
blake 
canonical expressions boolean algebra 
phd thesis university chicago 
published university chicago 
herbert enderton 
mathematical logic 
academic press 
funge 
making behave cognitive models computer animation 
phd thesis department computer science university toronto toronto canada 
ginsberg smith 
reasoning action ii qualification problem 
artificial intelligence 
levesque university toronto 
personal communication august 
hanks mcdermott 
temporal reasoning default logics 
technical report yale university 
computer science research rept 


boolean formalism explanations 
international conference algebraic methods software technology july 
fangzhen lin raymond reiter 
state constraints revisited 
journal logic computation special issue actions processes 
mccarthy 
epistemological problems artificial intelligence 
proceedings international joint conference artificial intelligence ijcai pages cambridge ma 
mccarthy hayes :10.1.1.85.5082
philosophical problems standpoint artificial intelligence 
meltzer michie editors machine intelligence pages 
edinburgh university press edinburgh 
moore 
interval analysis 
prentice hall 
moore 
methods applications interval analysis 
siam 

interval approach monte carlo simulation 
scientific computing computer arithmetic validated numerics 
reiter 
frame problem situation calculus simple solution completeness result goal regression 
vladimir lifschitz editor artificial intelligence mathematical theory computation papers honour john mccarthy pages 
academic press 
scherl levesque 
frame problem knowledge 
proceedings eleventh national conference artificial intelligence aaai menlo park ca 
aaai press 

graphing equations generalized interval arithmetic 
msc thesis department computer science university toronto toronto canada january 

