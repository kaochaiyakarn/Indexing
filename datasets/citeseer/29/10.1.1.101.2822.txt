event condition action language xml james bailey alexandra peter wood department computer science university melbourne school computer science information systems college university london 
xml widespread means exchanging storing information web 
event condition action eca rules natural candidate support reactive functionality xml repositories 
chapter discusses eca rules context xml data 
give review related de ne language specifying eca rules xml repositories 
specify rule execution model language describe prototype implementation 
give review related de ne language specifying eca rules xml repositories 
specify rule execution model language describe prototype implementation 
discuss techniques analysing behaviour sets eca rules particular determining triggering activation relationships pairs rules 
conclude discussion directions research xml dominant standard storing exchanging information web 
increasing dynamic applications data warehousing commerce learning rapidly growing need support reactive functionality xml repositories :10.1.1.20.8655:10.1.1.21.7534
event condition action eca rules natural candidate 
eca rules automatically perform actions response events provided stated conditions hold 
conventional data warehouses incremental maintenance materialised views validation cleansing input data streams maintaining audit trails data 
analogy eca rules integrating technology providing kind functionality xml repositories 
secondly eca rules high level declarative syntax amenable powerful analysis optimisation techniques applied functionality expressed directly programming language code 
alternative way implement functionality described xslt transform source xml documents 
xslt process entire document order produce new document concerned detection subsequent processing updates ner granularity 
eca rules allows direct update document xslt requires new result tree generated applying transformations source document 
eca rules settings including active databases ow management network management personalisation publish subscribe technology specifying implementing business processes :10.1.1.20.8655:10.1.1.32.4924:10.1.1.35.1714
chapter study eca rules context xml data 
review related 
de ne language specifying eca rules xml repositories illustrating language means examples 
specify rule execution model language describe prototype implementation 
analysing rule behaviour key recurring themes regarding successful deployment eca rules systems need techniques tools analysing run time behaviour 
multiple eca rules de ned system interactions di cult predict execution rule may cause event triggers rule set rules 
rules may turn trigger rules potential nite cascade rule rings occur 
analysis eca rules active databases studied topic proposed 
key properties set eca rules triggering activation relationships pairs rules information analyse properties termination eca rule set reachability speci rules :10.1.1.30.9989:10.1.1.49.7452
triggering activation relationships pairs rules de ned follows may trigger execution action ri may generate event triggers rj 
may activate rule rj rj condition may false true execution ri action 
rule ri may activate condition may execution action 
triggering graph represents rule vertex directed arc vertex ri vertex rj ri may trigger rj :10.1.1.30.9989
key properties set eca rules triggering activation relationships pairs rules information analyse properties termination eca rule set reachability speci rules :10.1.1.30.9989:10.1.1.49.7452
triggering activation relationships pairs rules de ned follows may trigger execution action ri may generate event triggers rj 
may activate rule rj rj condition may false true execution ri action 
rule ri may activate condition may execution action 
triggering graph represents rule vertex directed arc vertex ri vertex rj ri may trigger rj :10.1.1.30.9989
acyclicity ofthe triggering graph implies de nite termination rule execution 
triggering graphs deriving rule reachability information 
activation graph represents rules vertices :10.1.1.49.7452
case directed arc vertex ri vertex rj ri may activate rj 
rule ri may activate condition may execution action 
triggering graph represents rule vertex directed arc vertex ri vertex rj ri may trigger rj :10.1.1.30.9989
acyclicity ofthe triggering graph implies de nite termination rule execution 
triggering graphs deriving rule reachability information 
activation graph represents rules vertices :10.1.1.49.7452
case directed arc vertex ri vertex rj ri may activate rj 
acyclicity graph implies de nite termination rule execution 
triggering activation graphs combined method called rule reduction gives precise results triggering activation graphs 
method vertex incoming triggering activation arc removed graph outgoing arcs 
compared rules relational databases eca rules xml data di cult analyse due richer types events actions 
rules xml arguably analysis complexity rules objectoriented data 
stems fact object oriented databases may permit arbitrary method calls trigger events determining triggering relationships rules may di cult analysing program written language java 
eca rules xml contrast declarative languages xpath amenable analysis particularly natural syntactic restrictions chapter 
developed language de ning eca rules xml data xpath xquery standards :10.1.1.101.2822
developed techniques analysing triggering activation relationships rules 
language analysis techniques subject rest chapter 
number eca rule languages xml proposed focussed analysing behaviour eca rules discusses extending xml repositories eca rules order support services 
active extensions xslt lorel languages proposed handle insertion deletion update events xml documents currently support insertion deletion events language see section 
developed techniques analysing triggering activation relationships rules 
language analysis techniques subject rest chapter 
number eca rule languages xml proposed focussed analysing behaviour eca rules discusses extending xml repositories eca rules order support services 
active extensions xslt lorel languages proposed handle insertion deletion update events xml documents currently support insertion deletion events language see section 
discusses speci application approach rule actions methods update repository trigger rules :10.1.1.20.8655
de nes active rule language xml 
rule syntax similar syntax triggers sql 
rule execution model di erent 
generally speaking insertions deletions xml data may involve document fragments unbounded size 
condition evaluator executes condition part rule single element rules scheduled 
schedule empty rule execution terminates 
analysing optimising rule behaviour techniques determining triggering activation relationships rules utilised variety analysing optimising behaviour xml eca rules de ned language plugged existing frameworks eca rule analysis static dynamic approaches reviewed section 
example know pairwise triggering activation relationships rules triggering graph analysis activation graph analysis rule reduction method 
possible triggering activation information interpretation framework precise analysis graph approaches discussed :10.1.1.104.3600
information eca rules may triggered current rule action rule execution limit set rule event parts need evaluated execution action 
activation relationships pairs rules dynamically updated rule execution information avoid evaluating rule conditions currently inferred de nitely true false 
determining triggering relationships order determine triggering relationships xml eca rules need able determine action rule may trigger event part rule 
clearly insert actions trigger insert events delete actions trigger delete events 
