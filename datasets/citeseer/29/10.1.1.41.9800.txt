query folding inclusion dependencies gryz department computer science york university toronto canada cs ca query folding technique determining query may answered set resources may include materialized views cached results previous queries queries answerable databases 
power query folding considerably enhanced account integrity constraints known hold base relations 
describes extension query folding utilizes inclusion dependencies find foldings queries overlooked 
describe complete strategy finding foldings presence inclusion dependencies basic algorithm implements strategy 
describe extensions algorithm inclusion functional dependencies considered 
query folding process determining query answered set resources 
query folding process determining query answered set resources 
resources materialized views case query folding simply referred query rewriting materialized views cached results previous queries queries answerable databases 
query folding important relations referred query stored remotely expensive access repeatedly available access network disconnection conceptual relations exist physically 
query folding obvious applications centralized databases 
example databases maintain materialized views query answered accessing views base relations query folded views :10.1.1.33.1999
example 
consider patient record database db includes relations patient name address procedure patient name physician name procedure name time event event name description patient name location suppose db maintains materialized view view clinical history name proc name time select name procedure name time patient procedure patient name procedure patient name user ask query obtain names dates birth patients mri scan select name patient procedure patient name procedure patient name procedure procedure name mri view clinical history query folded select name clinical history procedure name mri multiple query answering result query partially answer query second query folded 
query folding important distributed environment 
clientserver applications views queries cached client site 
query folding important distributed environment 
clientserver applications views queries cached client site 
client queries answered efficiently folded cached data 
case disconnected network query answered partially folded views queries maintained available sites 
number algorithms developed folding conjunctive queries resources :10.1.1.50.3586
including developed purposes optimization accordingly seek produce foldings example equivalent original query 
applications foldings known contained original query 
example user may wish retrieve initial answers quickly partial answer set query may acceptable distributed environment part database unavailable 
importantly foldings contained necessarily equivalent original query provide answers heterogeneous information sources 
journal computer system sciences 
chandra vardi 
implication problem functional inclusion dependencies undecidable 
siam journal computing 
chaudhuri krishnamurthy potamianos shim :10.1.1.33.1999
optimizing queries materialized views 
proceedings th icde pages 
cosmadakis kanellakis 
functional inclusion dependencies graph theoretic approach 
