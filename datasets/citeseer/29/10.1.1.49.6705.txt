coordinating human computer agents keith decker department computer information sciences university delaware newark de decker cis edu originally appeared wolfram neumann editors coordination technology collaborative applications organizations processes agents 
lncs pp 
springer verlag 

application areas individuals responsible agenda tasks face choices best way locally handle task order tasks 
decisions hard coordination problems individual tasks related tasks complex ways sources uncertainty complete view task structure arbitrary levels detail situation may changing dynamically entirely sure outcomes actions 
propose construct global view evolving task structure agents fairly local global view 
tasks direct relationships need understood agents scheduling criteria schedulers different agent change time 
newly developed coordination mechanisms tailored agent human computational task environment hand 
framework modeling task environments taems order construct general approach coordination necessary underlying framework represent wide diversity activities tasks properties relationships need represented understood order arrive effective coordination activity structures different human agents wide variety domains 
taems framework task analysis environment modeling simulation represents coordination problems formal domain independent way :10.1.1.42.8231
represent coordination problems distributed sensor networks hospital patient scheduling airport resource management distributed information retrieval pilot associate local area network diagnosis :10.1.1.37.4451
subject unique features taems 
explicit quantitative representation task interrelationships describe effect performance activity choices temporal orderings 
second representation task structures multiple levels abstraction 
tasks direct relationships need understood agents scheduling criteria schedulers different agent change time 
newly developed coordination mechanisms tailored agent human computational task environment hand 
framework modeling task environments taems order construct general approach coordination necessary underlying framework represent wide diversity activities tasks properties relationships need represented understood order arrive effective coordination activity structures different human agents wide variety domains 
taems framework task analysis environment modeling simulation represents coordination problems formal domain independent way :10.1.1.42.8231
represent coordination problems distributed sensor networks hospital patient scheduling airport resource management distributed information retrieval pilot associate local area network diagnosis :10.1.1.37.4451
subject unique features taems 
explicit quantitative representation task interrelationships describe effect performance activity choices temporal orderings 
second representation task structures multiple levels abstraction 
lowest level abstraction called executable method basic action 
furthermore test may interact tests relationships enables requires gamma delay performed inhibits test performance invalidates test result performed specified time period relative 
note unit secretaries scheduling agents try minimize patients stays hospital ancillary secretaries scheduling agents try maximize equipment throughput minimize setup times 
shows subjective taems task structure corresponding episode domain subjective views unit ancillary scheduling agents tests ordered 
note quite bit detail captured just computational aspects environment case tasks time computer 
taems model detail physical resources job shop characteristics necessary :10.1.1.37.4451
detail necessary analyze protocols developed propose primary unit ancillary protocol secondary ancillary ancillary protocol 
type environment scheduling agents interact nurses mechanisms facilities tools suggested assist efficient effective scheduling patient tests treatments 
similar applications technology occur manufacturing scheduling applications 
framework coordination gpgp researchers shown single best organization coordination mechanism environments 
order effectively handle wide range possible environments developed extendable family coordination mechanisms called generalized partial global planning gpgp form basic set coordination mechanisms teams cooperative computational agents 
important features approach include set modular coordination components called mechanisms subset response particular task environment general specification mechanisms involving detection response certain coordination relationships incoming taems task structure tied particular domain separation coordination mechanisms agent local scheduler allows better job designed 
component mechanism added required reaction environment agents find 
individual algorithm family defined particular set active mechanisms associated parameters 
discuss interactions mechanisms decide mechanism drawing data simulation experiments multiple agent teams working task environments :10.1.1.32.8351
gpgp approach specifies basic areas agent coordination behavior communicate construct non local views current problem solving situation exchange partial results problem solving break commitments agents results available 
gpgp approach recognizing reacting characteristics certain coordination relationships shared von martial favor relationship 
commitments gpgp family algorithms ideas researchers 
agent heuristic local scheduler decides actions agent take current view problem solving situation including commitments utility function 
key features task environments demonstrated threads lead different coordination mechanisms include related structure environment particular kinds patterns interrelationships dependencies occur tasks environmental uncertainty priori structure problem solving episode outcome agent actions example presence uncertainty concomitant high variance task structure 
important general approach coordination domains appropriately parameterized overhead activities associated algorithm terms communication computation varied depending characteristics application environment 
coordination module role coordination mechanisms provide constraints local scheduler allow local scheduler construct objectively better schedules 
mechanisms fulfill role agent variously communicating private portions task structures communicating results fulfill non local commitments making commitments respond coordination relationships portions task structure controllable different agents jfacc assigning tasks staff example portions controllable multiple agents case overlapping tasks jfacc example 
mechanisms described form basic set provides similar functionality durfee original partial global planning algorithm :10.1.1.32.8351
mechanism exchanges useful private views task structures mechanism communicates results mechanism handles redundant methods mechanisms handle hard soft coordination relationships 
mechanisms added load balancing mechanism 
mechanisms independent sense combination 
inconsistent constraints introduced local scheduler return violated constraint schedules dealt maximize subjective utility :10.1.1.32.8351
mechanisms described form basic set provides similar functionality durfee original partial global planning algorithm :10.1.1.32.8351
mechanism exchanges useful private views task structures mechanism communicates results mechanism handles redundant methods mechanisms handle hard soft coordination relationships 
mechanisms added load balancing mechanism 
mechanisms independent sense combination 
inconsistent constraints introduced local scheduler return violated constraint schedules dealt maximize subjective utility :10.1.1.32.8351
local scheduler rational optimizing may constraints inconsistent search exhaustively 
multi agent financial portfolio management implementation ideas system named warren financial portfolio 
warren gives concrete working implementation acm ideas discussed earlier 
internal architecture agent designed compatible taems gpgp approaches discussed initial implementation replaced gpgp coordination module simpler htn task reduction planner 
