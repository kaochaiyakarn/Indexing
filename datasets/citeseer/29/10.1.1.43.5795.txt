active disks acharya joel saltz dept computer science university california santa barbara ca dept computer science university maryland college park md cs ucsb edu cs umd edu saltz cs umd edu march application technology trends indicate profitable feasible move computation closer data processes 
evaluate active disk architectures integrate significant processing power memory disk drive allow application specific code downloaded executed data read written disk 
key idea bulk processing disk resident processors host processor primarily coordination scheduling combination results individual disks 
program active disks propose stream programming model allows disklets executed efficiently safely 
simulation results suite algorithms application domains commercial data warehouses image processing satellite data processing indicate algorithms active disks outperform conventional disk architectures 
application technology trends indicate profitable move data intensive computation closer data processes 
second active disk versions suite algorithms process datasets interest 
suite currently consists algorithms sql select sql aggregation sql gb mb cheetah currently available gb mb cheetah available 
group external sort datacube operation decision support image convolution composition raw satellite data generate earth images 
algorithms relational databases remaining image databases satellite data repositories respectively 
application started known optimized algorithms literature tried keep modifications minimum :10.1.1.144.1766:10.1.1.141.2971:10.1.1.108.3178
third compare performance algorithms running active disk architectures performance original algorithms running conventional disk architectures 
comparisons configurations corresponding current technology economics corresponding available decade 
long life large datasets cost replacing large number disks possible host system may upgraded frequently disks 
understand impact unbalanced upgrades conducted additional experiments significantly faster host processors 
restrictions may onerous naturally satisfied large data centers expect active disks 
host level os support new host level os functions needed active disks installation disklets management host resident streams 
disklet installation requires analysis disklet code ensure memory safety linking diskos environment downloading code disk processor 
creation management host resident streams relatively simple 
disklet integer kernel integer temp buffer buffer function init integer filter integer copy filter kernel function read get buffer buffer perform convolution buffer kernel gg buffer send buffer integer filter ff gg open image file disk fname disks fd open fname fd create stream disk :10.1.1.144.1766
output disklet buffer sname stream str stream sname read install disklet install filter invoke disklet file input input stream spec descriptor offset length buffer run fd streams streams terminated 
blocks returns stream new data streams null buf buf close fd stream disk resident code host resident code pseudo code partitioned version convolution filtering 
filter example detects horizontal lines images 
notion streams current operating systems 
active disk algorithm performs group steps 
downloaded code performs local group bys long number aggregates computed fits disk memory 
runs space ships partial results host disk memory 
host accumulates partial results forwarded disklets 
external sort current record fastest external sort held :10.1.1.141.2971
accordingly starting point versions external sort 
pipelined version pass single node sort conventional disk version :10.1.1.141.2971
phase uses threads reader thread read data move tuple pointers buckets writer thread sort bucket partial radix sort write bucket 
second phase uses threads merge sorted partitions created phase 
runs space ships partial results host disk memory 
host accumulates partial results forwarded disklets 
external sort current record fastest external sort held :10.1.1.141.2971
accordingly starting point versions external sort 
pipelined version pass single node sort conventional disk version :10.1.1.141.2971
phase uses threads reader thread read data move tuple pointers buckets writer thread sort bucket partial radix sort write bucket 
second phase uses threads merge sorted partitions created phase 
reader reads block sorted partition sets merge buffers merger selects lowest valued key current block partition copies write buffers writer writes buffers disk 
active disk algorithm uses disklets phase partitioner sorter 
note data sent host phase merging done locally active disk 
datacube datacube general form aggregation relational databases 
computes multi dimensional aggregates indexed values multiple aggregates 
effect datacube computes group bys possible combinations list attributes 
efficient methods computing datacube :10.1.1.144.1766
algorithms called pipehash conventional disk algorithm 
pipehash represents datacube lattice related group bys 
directed edge connects group group generated exactly attribute 
edge associated weight reflects estimated size group 
number distinct values group attributes smaller dataset larger dataset 
image convolution single dataset consisting images byte pixel 
convolution kernel 
earth science datasets correspond day composites low resolution high resolution avhrr images noaa polar satellites 
size taken values describing smaller dataset gb size larger dataset gb :10.1.1.141.2971
output image smaller dataset mb output image larger dataset mb 
utility active disks compares performance algorithm suite conventional disk active disk architectures disks 
bar presents normalized execution time architecture configuration pairs 
normalization performance conventional disk version today assumed 
proceedings fourth acm workshop parallel distributed systems may 
agarwal 
super scalar sort algorithm risc processors 
proceedings acm sigmod conference pages 
agarwal agrawal deshpande gupta naughton ramakrishnan sarawagi :10.1.1.144.1766
computation multidimensional aggregates 
proc 
nd int conference large databases vldb pages bombay india august 
dusseau dusseau culler hellerstein patterson :10.1.1.141.2971
agarwal agrawal deshpande gupta naughton ramakrishnan sarawagi :10.1.1.144.1766
computation multidimensional aggregates 
proc 
nd int conference large databases vldb pages bombay india august 
dusseau dusseau culler hellerstein patterson :10.1.1.141.2971
highperformance sorting networks workstations 
proceedings acm sigmod conference tucson az 
golding merchant shriver wilkes 
attribute managed storage achieve qos 
