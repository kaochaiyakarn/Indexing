department computer science hong kong university science technology clear water bay hong kong mamoulis dimitris cs ust hk techniques compute join spatial datasets proposed decade 
methods consider existing indices joined inputs treat datasets index providing solutions case input comes intermediate result database operator 
analyze previous spatial joins propose novel algorithm called slot index spatial join sisj efficiently computes spatial join inputs indexed tree 
going step show sisj spatial join algorithms implemented operators database environment joins spatial inputs 
study differences relational spatial multi way joins propose dynamic programming algorithm optimizes execution complex spatial queries 
contact author dimitris papadias tel www cs ust hk dimitris fax mail dimitris cs ust hk hong kong university science technology technical report series department computer science integration spatial join algorithms joining multiple inputs mamoulis dimitris papadias technical report hkust cs november 
study differences relational spatial multi way joins propose dynamic programming algorithm optimizes execution complex spatial queries 
contact author dimitris papadias tel www cs ust hk dimitris fax mail dimitris cs ust hk hong kong university science technology technical report series department computer science integration spatial join algorithms joining multiple inputs mamoulis dimitris papadias technical report hkust cs november 
large steadily increasing availability multidimensional data various forms satellite images digital video multimedia documents rendered spatial query processing active research areas database community 
addition conventional applications gis mp spatial query processing techniques successfully employed number domains including medical information systems pf time series databases frm 
types spatial queries studied include window queries spatial selections gut relation queries pts nearest neighbours rkv similarity search pm :10.1.1.131.7887
traditional methods relational databases directly applicable spatial queries due fact total ordering objects space preserves spatial proximity 
result number multidimensional access methods proposed gg 
popular spatial access method tree gut thought extension tree multi dimensional space :10.1.1.131.7887
tree node consists number entries form mbr ptr 
addition conventional applications gis mp spatial query processing techniques successfully employed number domains including medical information systems pf time series databases frm 
types spatial queries studied include window queries spatial selections gut relation queries pts nearest neighbours rkv similarity search pm :10.1.1.131.7887
traditional methods relational databases directly applicable spatial queries due fact total ordering objects space preserves spatial proximity 
result number multidimensional access methods proposed gg 
popular spatial access method tree gut thought extension tree multi dimensional space :10.1.1.131.7887
tree node consists number entries form mbr ptr 
leaf node entries mbr minimum bounding rectangle data object ptr id object 
intermediate node entries mbr minimum bounding rectangle data objects tree node pointed ptr 
tree node root contain number entries called minimum tree node utilization 
consider policies partitioning entries groups sort entry mbrs respect lower coordinate divide equal sized groups 
motivated corresponding tree packing algorithm rl 
sort entry mbrs respect hilbert value center divide equal sized groups 
motivated tree packing algorithm hilbert curves kf 
irs insert entries slots tree insertion algorithm bkss :10.1.1.129.3731
partitioning methods include just sorting splitting 
third partitioning method irs insert re insert split sophisticated 
starting single empty slot entry insertion algorithm called algorithm irs 
choose slot mbr contained mbr 
insert update mbr 

overflows overflow occurred insertion sort entries distance centers center mbr delete furthest entries update mbr re insert entries slots 
overflows overflow occurred insertion apply tree split algorithm split slots 
step irs equivalent choosesubtree tree algorithm bkss determines best leaf node inserting rectangle :10.1.1.129.3731
step equivalent forced reinsert tree split algorithm 
irs guarantee slots equal size equal size splitting criterion considered order favour shape criterion 
ensure final number partitions irs considering slot utilization average bkss slots full set slot capacity average number entries slot final number buckets may definitely buckets full buckets full :10.1.1.129.3731
limits valid range maximum slot capacity tuned correspondingly 
overflows overflow occurred insertion apply tree split algorithm split slots 
step irs equivalent choosesubtree tree algorithm bkss determines best leaf node inserting rectangle :10.1.1.129.3731
step equivalent forced reinsert tree split algorithm 
irs guarantee slots equal size equal size splitting criterion considered order favour shape criterion 
ensure final number partitions irs considering slot utilization average bkss slots full set slot capacity average number entries slot final number buckets may definitely buckets full buckets full :10.1.1.129.3731
limits valid range maximum slot capacity tuned correspondingly 
notice typical system conditions page size usually root level level root 
expected exceed min node capacity maximum fan upper tree level partition 
partitioning policies take place main memory trivial cpu time cost 
consider worst case ignore possibility filtered slots dataset number accesses required join phase join considering join output written back disk 
summarizing total cost sisj sisj part join cost hj assumptions sisj hj sampling accordance corresponding formula ks 
hj requires sampling random accesses determine initial slots extra reading writing hash hashing determining final bucket extents hj follows procedure sisj 
eq 
typical tree structures bkss sisj clearly outperforms hj terms provide analysis seeded tree join stj :10.1.1.129.3731
charge copying seed levels determining slots sisj fairness stj assume grown sub trees fit memory 
growing phase costs second set initially read written slots sequential files sequential files read build grown sub trees tree pages written back 
join phase stj expected cost pages trees read rj 
summarizing stj eq 
vldb 
bc bernstein chiu semi joins solve relational queries 
journal acm vol pp 

bkss beckmann kriegel schneider seeger tree efficient robust access method points rectangles :10.1.1.129.3731
acm sigmod 
bks brinkhoff 
kriegel seeger efficient processing spatial joins trees 
acm sigmod 
pp 

nther efficient computation spatial joins 
icde 
gut guttman trees dynamic index structure spatial searching :10.1.1.131.7887
acm sigmod 
gg gaede multidimensional access methods 
acm computing surveys 
huang jing rundensteiner spatial joins trees breadth global optimizations 
