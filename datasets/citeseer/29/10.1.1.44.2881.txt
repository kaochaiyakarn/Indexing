approximate nearest neighbor queries revisited timothy chan department mathematics computer science university miami coral fl usa mail cs miami edu march proposes new methods answer approximate nearest neighbor queries set points dimensional euclidean space 
fixed constant data structure gammad log preprocessing time gammad log query time achieves approximation factor variant reduces dependence factor gamma arbitrary data structure log preprocessing time log query time achieves approximation factor 
applications various proximity problems discussed 
set point sites dimensional space ir known post office problem want preprocess data structure site closest query point called nearest neighbor efficiently 
distances measured euclidean metric 
post office problem applications computational geometry areas data compression pattern recognition databases statistics 
voronoi diagrams provide optimal solution problem log preprocessing time space log query time 
unfortunately near linear preprocessing method known achieves near logarithmic query time best methods ray shooting require dd polylog query time space structure dd 
obtain better performance number researchers turned approximate version post office problem site minimum distance query point find site distance times minimum 
call approximate nearest neighbor number approximation factor 
constant approximate post office problem solved optimally arya space structure called balanced box decomposition bbd tree find approximate nearest neighbors log time fixed structure constructed log time :10.1.1.15.3125:10.1.1.15.3125:10.1.1.15.3125
despite optimality main drawback arya method constant factors hidden big oh notation 
factors depend parameters 
held fixed allowed vary actual query time gammad log worst case 
preliminary version appeared proc 
root denotes root tree root left right denote left right children internal node cell left cell right disjoint interiors covering cell 
simplicity assume site lies boundary cell 
cells tree obey conditions 
cell constant complexity 
number cells disjoint interiors diameters intersecting set diameter bounded cr se fixed constant condition follows directly arya construction bbd tree cells differences axis aligned boxes :10.1.1.15.3125:10.1.1.15.3125
second condition consequence packing lemma 
construction time log 
lemma ir find log nodes bbd tree log time site lies ii contained 
proof consider algorithm query algorithm arya mount approximate range searching algorithm bdd query 
bbd data structures set point sites ir fixed 
give data structure query point ir quickly report approximate nearest neighbor site gamma gamma idea consider number coordinate systems build bbd trees 
adopted similar strategy range trees obtain dynamic data structures approximate nearest neighbor queries 
note site lies inside certain narrow cone coordinate system 
show finding nearest neighbor restricted cone solved approximate range searching lemma :10.1.1.15.3125
lemma delta fp ir ffi ffi 
log preprocessing time space answer query log time ir return site satisfying inequality min fk gamma rg max fk gamma gamma delta proof construct bbd tree gamma dimensional set fp pg simplicity assume sites projection 
node tree cell cell sort point set fp cell coordinate augment node array storing sorted list 
space complexity augmented bbd tree log tree logarithmic depth 
node tree cell cell sort point set fp cell coordinate augment node array storing sorted list 
space complexity augmented bbd tree log tree logarithmic depth 
preprocessing time remains log including sorting step 
point ir find site desired property follows 
algorithm bdd query lemma find log nodes bbd tree projected site lies ii contained :10.1.1.15.3125
define site minimizes js gamma clearly performing log binary searches sorted lists nodes log time 
reduce running time log employ standard technique attributed internal node bbd tree point keep pointers successor predecessor sorted lists left right increases preprocessing time space constant factor 
answer query algorithm bdd query need perform binary search root position query point sorted list node deduce position sorted list children constant time 
site gamma delta remains show inequality holds 
max fk gamma implying 
set delta spherical cone angular diameter oe ffi theta ffi 
known space ir covered oe gammad cones angular diameter oe example plane system cones obtained rotation angles see yao 
delta collection oe gammad gammad rotated copies delta covering ir theorem gammad log preprocessing time space find approximate nearest neighbor query point ir gammad log time 
proof changing coordinate systems replace delta cone delta lemma preprocessing construct data structure gammad cones :10.1.1.15.3125
total preprocessing time gammad log 
answer query compute approximate nearest neighbor log time arya method :10.1.1.15.3125:10.1.1.15.3125:10.1.1.15.3125
set gamma observe max fk gamma gamma site returned query algorithm lemma cone delta site fs ftg closest approximate nearest neighbor query time gammad log 
slightly improve dependence time bounds different set cones known techniques planar voronoi diagrams 
known space ir covered oe gammad cones angular diameter oe example plane system cones obtained rotation angles see yao 
delta collection oe gammad gammad rotated copies delta covering ir theorem gammad log preprocessing time space find approximate nearest neighbor query point ir gammad log time 
proof changing coordinate systems replace delta cone delta lemma preprocessing construct data structure gammad cones :10.1.1.15.3125
total preprocessing time gammad log 
answer query compute approximate nearest neighbor log time arya method :10.1.1.15.3125:10.1.1.15.3125:10.1.1.15.3125
set gamma observe max fk gamma gamma site returned query algorithm lemma cone delta site fs ftg closest approximate nearest neighbor query time gammad log 
slightly improve dependence time bounds different set cones known techniques planar voronoi diagrams 
lemma delta fp ir ffi 
log preprocessing time space answer query log time ir return site satisfying inequality gamma delta proof construct bbd tree gamma dimensional set fp pg 
log preprocessing time space answer query log time ir return site satisfying inequality gamma delta proof construct bbd tree gamma dimensional set fp pg 
node tree cell cell store point set fp cell voronoi diagram dimensional point set gamma space complexity augmented bbd tree log tree logarithmic depth 
preprocessing time log log time algorithm construct voronoi diagrams 
reduce preprocessing time log construct voronoi diagrams bottom fashion planar voronoi diagrams transformed halfspace intersections intersection convex polyhedra computed linear time 
point ir follow proof lemma algorithm bdd query lemma find log nodes bbd tree projected site ffi lies ii contained :10.1.1.15.3125
define site minimizes js gamma gamma gamma js gamma site performing log point location queries voronoi diagrams nodes optimal method planar point location compute log time 
satisfies desired property follows proof lemma :10.1.1.15.3125
ignore gamma st coordinate delta cone angular diameter oe ir gamma cover ir oe gammad gammad rotated copies delta delta lemma implies analogue theorem theorem gammad log preprocessing time space find approximate nearest neighbor query point ir gammad log time :10.1.1.15.3125
applications certain batched applications post office problem eliminate extra log factor theorem simple grid scheme place bbd trees 
preprocessing time log log time algorithm construct voronoi diagrams 
reduce preprocessing time log construct voronoi diagrams bottom fashion planar voronoi diagrams transformed halfspace intersections intersection convex polyhedra computed linear time 
point ir follow proof lemma algorithm bdd query lemma find log nodes bbd tree projected site ffi lies ii contained :10.1.1.15.3125
define site minimizes js gamma gamma gamma js gamma site performing log point location queries voronoi diagrams nodes optimal method planar point location compute log time 
satisfies desired property follows proof lemma :10.1.1.15.3125
ignore gamma st coordinate delta cone angular diameter oe ir gamma cover ir oe gammad gammad rotated copies delta delta lemma implies analogue theorem theorem gammad log preprocessing time space find approximate nearest neighbor query point ir gammad log time :10.1.1.15.3125
applications certain batched applications post office problem eliminate extra log factor theorem simple grid scheme place bbd trees 
suppose fixed consider uniform grid ir grid cell side length create node grid cell contains site 
cell grid cell corresponding node cell 
reduce preprocessing time log construct voronoi diagrams bottom fashion planar voronoi diagrams transformed halfspace intersections intersection convex polyhedra computed linear time 
point ir follow proof lemma algorithm bdd query lemma find log nodes bbd tree projected site ffi lies ii contained :10.1.1.15.3125
define site minimizes js gamma gamma gamma js gamma site performing log point location queries voronoi diagrams nodes optimal method planar point location compute log time 
satisfies desired property follows proof lemma :10.1.1.15.3125
ignore gamma st coordinate delta cone angular diameter oe ir gamma cover ir oe gammad gammad rotated copies delta delta lemma implies analogue theorem theorem gammad log preprocessing time space find approximate nearest neighbor query point ir gammad log time :10.1.1.15.3125
applications certain batched applications post office problem eliminate extra log factor theorem simple grid scheme place bbd trees 
suppose fixed consider uniform grid ir grid cell side length create node grid cell contains site 
cell grid cell corresponding node cell 
collection fp computed assigning points grid cells floor function log time dictionary 
applications certain batched applications post office problem eliminate extra log factor theorem simple grid scheme place bbd trees 
suppose fixed consider uniform grid ir grid cell side length create node grid cell contains site 
cell grid cell corresponding node cell 
collection fp computed assigning points grid cells floor function log time dictionary 
improvement lemma fixed lemma ir find nodes log time site lies ii contained :10.1.1.15.3125
proof nodes grid cells intersect 
obviously ii follows diameter grid cell contained union grid cells side length 
time bound follows dictionary 
improve theorem weaker type queries involving parameter sufficient theorem fix gammad log preprocessing time gammad space answer query gammad log time ir return site satisfying inequality proof proof lemma replace bbd trees grid scheme lemma lemma :10.1.1.15.3125
improvement lemma fixed lemma ir find nodes log time site lies ii contained :10.1.1.15.3125
proof nodes grid cells intersect 
obviously ii follows diameter grid cell contained union grid cells side length 
time bound follows dictionary 
improve theorem weaker type queries involving parameter sufficient theorem fix gammad log preprocessing time gammad space answer query gammad log time ir return site satisfying inequality proof proof lemma replace bbd trees grid scheme lemma lemma :10.1.1.15.3125
note assumed real ram model computation perform integer divisions floor function 
instance avoid operations degraded grid 
illustration theorem find approximate closest pairs set points point colored red blue approximate closest red blue pair red blue pair gamma ck gamma red blue pair 
corollary approximate closest red blue pair gammad log time 
blue point theorem find red point min fk gamma rg min red gamma pair smallest distance approximate closest red blue pair 
ir method runs gamma log time faster known exact methods order apply theorem approximate hausdorff distance static point sets similar running time 
rough approximation high dimensions section assume real ram model computation supports integer division base integer logarithm unit time 
constants big oh notation depend dimension preliminaries balanced quadtrees standard quadtree approach ir idea recursively decomposing box equal size 
avoid exponential factors adopt binary variant performs decomposition stages box split equal size hyperplane orthogonal axis split hyperplane orthogonal second axis suggests definition quadtree box set form theta theta theta theta theta gamma integers number called level say stage note diameter gamma order build tree balanced quadtree boxes lemma due arya lemma point set ae exists quadtree box point sets cardinality :10.1.1.15.3125:10.1.1.15.3125:10.1.1.15.3125
furthermore points sorted coordinates constructed dn time 
proof define sequence quadtree boxes iteratively follows 
quadtree box stage 
quadtree box gamma stage gamma write gamma disjoint union quadtree boxes stage boxes contains jp gamma points box 
quadtree box stage 
quadtree box gamma stage gamma write gamma disjoint union quadtree boxes stage boxes contains jp gamma points box 
consider smallest index jp know exists diameters converge 
jp jp gamma jp 
proves existence quadtree box proof constructive integer logarithms yield specified time bound shown arya algorithm called centroid shrink :10.1.1.15.3125:10.1.1.15.3125
purposes balanced quadtree point set binary tree nodes log depth satisfying properties 
node tree stores quadtree box leaf stores site 
set sites stored leaves subtree rooted root denotes root tree root left right denote left right children internal node left right 
applying lemma recursively see tree exists constructed dn log time initial sorting phase dn log time :10.1.1.15.3125
proves existence quadtree box proof constructive integer logarithms yield specified time bound shown arya algorithm called centroid shrink :10.1.1.15.3125:10.1.1.15.3125
purposes balanced quadtree point set binary tree nodes log depth satisfying properties 
node tree stores quadtree box leaf stores site 
set sites stored leaves subtree rooted root denotes root tree root left right denote left right children internal node left right 
applying lemma recursively see tree exists constructed dn log time initial sorting phase dn log time :10.1.1.15.3125
quadtree data structure set point sites ir approach bern show balanced quadtrees answer approximate nearest neighbor queries idea consider certain set vectors fv build balanced quadtrees translate bern showed set vectors find approximate nearest neighbor query point 
alternatively set log random vectors find approximate nearest neighbors probability gamma 
show set carefully chosen vectors suffices yield approximation factor 
need definitions 
point ir div div div mod mod mod 
say points ir belong grid cell div div say point ff central grid cell mod 
gamma ff equivalently mod 
observation ir ff central grid cell gamma belong grid cell 
key lemma lemma suppose :10.1.1.15.3125
ir point ir gamma exists dg central grid cell 
proof suppose contrary central index dg mod equivalently multiplying sides mod principle exists distinct indices dg 
letting mod mod 
possible mod 
gamma case 
case argue diameter site left line approximate nearest neighbor gamma gamma gamma gamma 
gamma conclude quad query root returns set log sites containing approximate nearest neighbor assumption central grid cell 
assumption removed follows 
lemma know central grid cell dg :10.1.1.15.3125
preprocessing build balanced quadtree point set total preprocessing time trees log 
answering query point set obtain set log sites containing approximate nearest neighbor return closest point set 
query time log 
applications application technique construction sparse euclidean spanner graphs 
case 
case proof theorem show diameter path spanner length gamma gamma gamma gamma gamma gamma case 
similar case 
conclude spanner root contains path length tk gamma assumption central grid cell 
remove assumption constructing balanced quadtrees dg lemma union resulting graphs :10.1.1.15.3125
note follows proof spanner diameter graph 
application approximation euclidean minimum spanning trees 
known reductions similar results related problems euclidean traveling salesman tours minimum euclidean steiner trees 
corollary suppose 
lemma combined prune search gives linear time method decision version approximate closest pair problem 
solution closest pair problem follows binary search 
lemma ae ir set points point colored red blue 
exists red blue pair gamma suppose points sorted coordinates 
dn time find red blue pair gamma proof find vector satisfying condition lemma :10.1.1.15.3125
replace point translate transformation affect distances points ensures points set fp central grid 
sorted order multiset fp div pg radix sort yields lexicographical ordering multiset fp div pg dn time 
ordering assign point grid cell dn time 
exists cell containing red point blue point distance pair 
theorem approximate closest red blue pair dn log time 
proof set dn real numbers formed coordinates points 
distance closest red blue pair gamma consider problem finding calls decision procedure determines parameter clearly log calls sufficient binary search precomputed cartesian difference gamma time 
standard techniques bring quadratic overhead log implicit binary search performs repeated computation example see 
efficient implementation lemma gives procedure successfully find red blue pair gamma decide call dr :10.1.1.15.3125
dr unsuccessful finding pair know tentatively assume add returned pair set log calls find possibly incorrect value tentative decisions correct call dr yields pair gamma mistake dr successfully finds pair gamma case contains approximate closest red blue pair return pair smallest distance set 
implemented dn time running time algorithm dn log 
closing mention implementation dictionary points high dimensions tolerates small errors 
set points ir points distance ffi apart 
closing mention implementation dictionary points high dimensions tolerates small errors 
set points ir points distance ffi apart 
query wish find point distance query point assuming tolerance ffi simple solution problem uniform grid locate ffi grid cell containing query point examine gamma neighboring grid cells little care number reduced 
remove exponential dependence observing ff central ffi grid cell neighboring cells need explored 
centrality assumption enforced considering various translates lemma :10.1.1.15.3125
simple data structures needed insertions deletions points easily handled 
examined ways reducing constant factors previous approaches approximate nearest neighbor queries set points 
fixed dimension approximation factor obtain constants gammad gammad 
dimension sufficiently large approximation factor obtain constants polynomial dimension 
proc 
th acm sympos 
comput 
geom pages 
arya mount silverman wu :10.1.1.15.3125:10.1.1.15.3125
optimal algorithm approximate nearest neighbor searching 
proc 
th acm siam sympos 
discrete algorithms pages 
