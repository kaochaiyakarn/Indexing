agent oriented software engineering nicholas jennings michael wooldridge department electronic engineering queen mary westfield college university london london ns united kingdom jennings wooldridge qmw ac uk agent oriented techniques represent exciting new means analysing designing building complex software systems 
potential significantly improve current practice software engineering extend range applications feasibly tackled 
date serious attempts cast agent systems software engineering paradigm 
seeks rectify omission 
specifically argued conceptual apparatus agent oriented systems suited building software solutions complex systems ii agent oriented approaches represent genuine advance current state art engineering complex systems 
view major issues raised adopting agent oriented approach software engineering highlighted discussed 
assessing power paradigm arguments need advanced chosen way dealing issues helps software engineers build systems effectively section 
agent oriented software 
great deal ongoing debate exactly constitutes agent approaching universal consensus 
increasing number researchers find characterisation useful agent encapsulated computer system situated environment capable flexible autonomous action environment order meet design objectives number points definition require explanation 
agents clearly identifiable problem solving entities defined boundaries interfaces ii situated embedded particular environment receive inputs related state environment sensors act environment effectors iii designed fulfil specific role particular objectives achieve explicitly implicitly represented agents iv autonomous control internal state behaviour capable exhibiting flexible contextdependent problem solving behaviour need reactive able respond timely fashion changes occur environment order satisfy design objectives proactive able opportunistically adopt new goals take initiative order satisfy design objectives :10.1.1.119.2204
adopting agent oriented view world soon apparent single agent insufficient problems require involve multiple agents represent decentralised nature problem multiple loci control multiple perspectives competing interests 
agents need interact achieve individual objectives manage dependencies ensue situated common environment 
interactions range simple semantic interoperation ability exchange comprehensible communications traditional client server type interactions ability request particular action performed rich social interactions ability cooperate coordinate negotiate course action 
nature social process points qualitatively differentiate agent interactions 
turning specific case designing software powerful abstractions minimise semantic gap units analysis intuitively problem constructs solution paradigm 
case problem characterised consists sub systems sub system components interactions organisational relationships 
turn case viewing sub system components agents section 
interplay sub systems constituent components naturally viewed terms high level social interactions level abstraction find meaningful collections objects collaborate achieve higher level view pg 
view precisely knowledge level social level treatment interaction afforded agent oriented approach :10.1.1.37.6661
agent systems invariably described terms cooperating achieve common objectives coordinating actions negotiating resolve conflicts 
agent oriented entirely appropriate capturing types interaction occur complex systems 
complex systems involve changing webs relationships various components 
require collections components treated single conceptual unit viewed different level abstraction 
see detailed discussion issues 
specification section consider problem specifying agent system 
requirements agent specification framework 
sort properties capable representing 
view agents discussed predominant approach specifying agents involved treating intentional systems may understood attributing mental states beliefs desires intentions :10.1.1.119.2204:10.1.1.119.2204
idea number approaches formally specifying agents developed capable representing aspects agent system beliefs agents information environment may incomplete incorrect goals agents try achieve actions agents perform effects actions ongoing interaction agents agents interact environment time 
call theory explains aspects agency interact achieve mapping input output agent theory 
successful approach formal agent theory appears temporal modal logic space restrictions prevent detailed technical discussion logics see extensive :10.1.1.119.2204:10.1.1.119.2204
best known logical frameworks cohen levesque theory intention rao georgeff belief desire intention model :10.1.1.37.7970
sort properties capable representing 
view agents discussed predominant approach specifying agents involved treating intentional systems may understood attributing mental states beliefs desires intentions :10.1.1.119.2204:10.1.1.119.2204
idea number approaches formally specifying agents developed capable representing aspects agent system beliefs agents information environment may incomplete incorrect goals agents try achieve actions agents perform effects actions ongoing interaction agents agents interact environment time 
call theory explains aspects agency interact achieve mapping input output agent theory 
successful approach formal agent theory appears temporal modal logic space restrictions prevent detailed technical discussion logics see extensive :10.1.1.119.2204:10.1.1.119.2204
best known logical frameworks cohen levesque theory intention rao georgeff belief desire intention model :10.1.1.37.7970
cohen levesque model takes primitive just attitudes beliefs goals 
attitudes particular notion intention built 
contrast rao georgeff take intentions primitives addition beliefs goals 
view agents discussed predominant approach specifying agents involved treating intentional systems may understood attributing mental states beliefs desires intentions :10.1.1.119.2204:10.1.1.119.2204
idea number approaches formally specifying agents developed capable representing aspects agent system beliefs agents information environment may incomplete incorrect goals agents try achieve actions agents perform effects actions ongoing interaction agents agents interact environment time 
call theory explains aspects agency interact achieve mapping input output agent theory 
successful approach formal agent theory appears temporal modal logic space restrictions prevent detailed technical discussion logics see extensive :10.1.1.119.2204:10.1.1.119.2204
best known logical frameworks cohen levesque theory intention rao georgeff belief desire intention model :10.1.1.37.7970
cohen levesque model takes primitive just attitudes beliefs goals 
attitudes particular notion intention built 
contrast rao georgeff take intentions primitives addition beliefs goals 
key technical problem faced agent theorists developing formal model gives account interrelationships various attitudes comprise agent internal state :10.1.1.119.2204
best known logical frameworks cohen levesque theory intention rao georgeff belief desire intention model :10.1.1.37.7970
cohen levesque model takes primitive just attitudes beliefs goals 
attitudes particular notion intention built 
contrast rao georgeff take intentions primitives addition beliefs goals 
key technical problem faced agent theorists developing formal model gives account interrelationships various attitudes comprise agent internal state :10.1.1.119.2204
comparatively serious attempts specify real agent systems logics see attempt 
implementation specification implement system correct respect specification 
issue consider move specification concrete computational system 
possibilities achieving transformation consider directly execute animate specification translate compile specification concrete computational form automatic translation technique 
language agents programmed giving temporal logic specification behaviour intended exhibit specification directly executed generate agent behaviour 
models temporal logic concurrent metatem agents specified linear discrete sequences states executing concurrent metatem agent specification process constructing sequence states 
state sequences viewed histories traced programs execute temporal logic concurrent metatem computational interpretation actual execution algorithm described 
note executing concurrent metatem agent specifications possible primarily models concurrent metatem temporal logic comparatively simple obvious intuitive computational interpretation 
agent specification languages general bdi formalisms rao georgeff considerably complex logics :10.1.1.37.7970
particular usually semantic framework known possible worlds 
technical details somewhat involved purposes article main point general possible worlds semantics computational tation way concurrent metatem semantics 
clear executing logic semantics mean 
response number researchers attempted develop executable agent specification languages simplified semantic basis computational interpretation 
particular usually semantic framework known possible worlds 
technical details somewhat involved purposes article main point general possible worlds semantics computational tation way concurrent metatem semantics 
clear executing logic semantics mean 
response number researchers attempted develop executable agent specification languages simplified semantic basis computational interpretation 
example rao agentspeak language essentially bdi system simple computational semantics :10.1.1.5.1612
compiling agent specifications alternative direct execution compilation 
scheme take specification transform concrete computational model automatic synthesis process 
main perceived advantages compilation direct execution run time efficiency 
direct execution agent specification concurrent metatem typically involves manipulating symbolic representation specification run time 
nature multi agent systems tend multi threaded agent certainly society agents 
building multi agent system vital ignore lessons learned concurrent distributed systems community problems inherent multi threaded systems go away just adopt agent approach 
design doesn exploit concurrency obvious features poor multi agent design amount concurrent problem solving comparatively small extreme cases non existent 
need single thread control system appropriateness agent solution seriously questioned 
decide want agent architecture agent architectures essentially designs building agents :10.1.1.119.2204
attempting agent project great imagine existing agent architecture meets requirements problem necessary design principles 
designing agent architecture scratch way mistake recommendation study various architectures described literature license implement shelf design :10.1.1.119.2204
agents ai builds agent application understandable focus exclusively agent specific intelligence aspects application 
result agent framework experimental techniques natural language interfaces planners theorem provers reason maintenance systems usable 
design doesn exploit concurrency obvious features poor multi agent design amount concurrent problem solving comparatively small extreme cases non existent 
need single thread control system appropriateness agent solution seriously questioned 
decide want agent architecture agent architectures essentially designs building agents :10.1.1.119.2204
attempting agent project great imagine existing agent architecture meets requirements problem necessary design principles 
designing agent architecture scratch way mistake recommendation study various architectures described literature license implement shelf design :10.1.1.119.2204
agents ai builds agent application understandable focus exclusively agent specific intelligence aspects application 
result agent framework experimental techniques natural language interfaces planners theorem provers reason maintenance systems usable 
general successful short term strategy build agents minimum ai techniques 
see agents learns multi agent systems time tendency view agent 
see agents learns multi agent systems time tendency view agent 
perceived way conceptually pure 
adopts viewpoint ends agents including agents addition subtraction 
difficult see naively viewing agent way extremely inefficient overheads managing agents inter agent communication rapidly outweigh benefits agent solution 
believe useful refer fine grained computational entities agents :10.1.1.119.2204
agents designers imagine separate agent possible task appear recognise value multi agent approach 
create system completely fails exploit power offered agent paradigm develop solution small number agents doing 
solutions tend fail standard software engineering test coherence requires software module single coherent function 
result write object oriented program bundling functionality single class 
halpern vardi model checking versus theorem proving manifesto lifschitz editor ai mathematical theory computation papers honor john mccarthy academic press 
hoare axiomatic basis computer programming comms 
acm 
pragmatic application information agents bis strategic report 
jennings campos social level characterisation socially responsible agents iee proc :10.1.1.37.6661
software engineering 
jennings sycara wooldridge roadmap agent research development int journal autonomous agents multi agent systems 
jennings wooldridge eds 
agent technology foundations applications markets springer verlag 
parunak industrial practical applications dai weiss editor multi agent systems mit press 
pnueli specification development reactive systems information processing elsevier science publishers 
pnueli synthesis reactive module proceedings th acm sym 
principles programming languages 
rao agentspeak bdi agents speak logical computable language van de velde perram editors agents breaking away proceedings th european workshop modelling autonomous agents multi agent world lnai volume :10.1.1.5.1612
springer verlag 
rao georgeff bdi agents theory practice proc :10.1.1.37.7970
st int 
conf 
pnueli synthesis reactive module proceedings th acm sym 
principles programming languages 
rao agentspeak bdi agents speak logical computable language van de velde perram editors agents breaking away proceedings th european workshop modelling autonomous agents multi agent world lnai volume :10.1.1.5.1612
springer verlag 
rao georgeff bdi agents theory practice proc :10.1.1.37.7970
st int 
conf 
multi agent systems san francisco ca 
rao georgeff model theoretic approach verification situated reasoning systems proc 
weiss multi agent systems mit press 
wooldridge logical modelling computational multi agent systems ph thesis department computation umist manchester uk 
wooldridge agent software engineering iee proc 
software engineering 
wooldridge jennings intelligent agents theory practice knowledge engineering review :10.1.1.119.2204
wooldridge jennings pitfalls agent oriented development proceedings nd int 
conf 
autonomous agents minneapolis st paul mn 

