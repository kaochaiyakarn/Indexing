architecture global internet host distance estimation service paul francis ntt software laboratories cho shi tokyo francis slab ntt jp sugih jamin department eecs university michigan ann arbor mi jamin eecs umich edu vern paxson network research group lbnl berkeley ca vern ee lbl gov lixia zhang cs department ucla los angeles ca lixia cs ucla edu daniel department eecs university michigan ann arbor mi dang eecs umich edu jin cs department ucla los angeles ca cs ucla edu increasing need internet hosts able quickly efficiently learn distance terms metrics latency bandwidth internet hosts 
example select nearest multiple equal content web servers 
explores technical issues related creation public infrastructure service provide information 
doing suggests architecture called idmaps internet distance information distributed internet ip multicast groups form virtual distance map 
systems listening groups estimate distance pair ip addresses running spanning tree algorithm received distance map 
results experiments give preliminary evidence supporting architecture 
lays initial foundation new area 
um research supported part equipment sun microsystems digital equipment intel increasingly case internet interaction satisfied number internet hosts 
examples range short lived interactions single web page access multiple equal content web servers long term peering relationship news nntp servers 
interaction things equal advantageous access nearest choice 
near mean terms internet performance metrics low latency high bandwidth 
things equal case different web servers different response times useful include distance candidate host criteria making selection 
approach obtaining distance information initiating host measure unicast ping traceroute multicast expanding ring search tools 
tools wide range uses utility generally limited overhead 
instance cost running single traceroute exceed cost web page access 
important large number hosts making dependent frequent measurements severe impact performance 
ideally measurements system host router available low cost hosts 
useful general service internet host quickly efficiently learn distance hosts 
widely useful service provide answer delay overhead gains achieved service 
simple protocol service sonar discussed ietf early february april general service called hops host proximity service 
efforts proposed lightweight client server query reply protocols lines dns query reply 
required server able produce answer short time preferably necessarily information stored locally 
concerned problem servers sonar hops service obtain distance information needed answer queries 
specifically explore questions 
systems originally produce distance information produced 

distance information get producing systems servers 

form distance information take produce answers specific pairs internet hosts 
efforts obtain various sorts distance information internet characteristics currently undertaken spand felix octopus nimi minc projects 
projects serve various purposes general internet characterization maintenance system distance estimation 
applies aspects question 
done context general sonar hops service 
really get questions aspects question pertain general sonar hops service 
takes stab exploring global opposed host architecture internet host distance estimation distribution 
discuss basic aspects questions outlined propose general architecture underlying service provides basic information sonar hops service 
underlying service called idmaps internet distance map service 
guided part applications need basic limitations technology section outlines goals 
section starts broad discussion fundamental characteristics problem nature solution 
presents develops variants solution hop hop elegant understood ends discussion pros cons 
section describes results preliminary analysis tests basic assumptions solution 
results suggest promise encourage move forward detailed design implementation 
section discusses open issues remaining 
idmaps goals difficult state precise goals sonar hops service idmaps service 
sonar hops called support wide range applications web clients want web server retrieve small amount data network time protocol ntp servers want establish long term association peer system 
go exercise making list potential applications extracting demanding requirements extent informally done fact exercise quickly reveals come close satisfying conceivable requirements 
instance hope general idmaps service provide near instantaneous information current delays bandwidth seen internet hosts information useful host wishing select server supplying live video feed example 
taken somewhat opposite tack determined roughly best service may able provide technology constraints need global scalability service considered applications level service useful 
discussion resulting goals 
distance metrics goal provide distance information terms latency round trip delay possible bandwidth 
latency easiest sort information provide luckily generally useful 
reasons easy provide 
easy measure 
small number packets produce rough estimate 
second relatively independent exact path hosts means fully independent 
relative path independence important way know exact path internet hosts measure hosts instance traceroute 
routers don know exact path internet hosts hosts 
definition general purpose idmaps service access exact path information 
bandwidth clearly important applications compared latency hard provide 
primarily sensitive exact path single low bandwidth link matter heavily loaded link dictates bandwidth path 
addition somewhat difficult measure 
hope able provide reasonable bandwidth estimates 
instance expect uniformity bandwidths internet backbone networks doesn expect find thin pipe middle thick pipe topology 
may rough correspondence latency bandwidth lower latency hosts higher bandwidth allowing applications need high bandwidth minimize latency approximation 
accuracy distance information expect information provided sonar hops service highly accurate 
reasons discussed believe highly accurate distance estimates say average distance measured host impossible achieve scalably 
goal obtain accuracy factor high probability better 
may bad glance level accuracy instance allow application usefully select web servers reported ms ms ms away 
reported ms server far ms better reported ms server close ms 
able discriminate systems close far refer distance triage useful wide range applications 
applications require accurate knowledge may rough information guide making measurements 
applications internet distance factors may effect choice destination host 
instance ms host example turn best choice instance ms host heavily loaded 
timeliness distance information consider kinds distance information load sensitive raw distance seen assuming load network generally measured saving best number measurements 
raw distance information order hours days old 
words distance information reflect network failures slowly reflect permanent topology changes 
require frequent monitoring internet question participation routers don assume 
network failure information available heavy load bgp updates exert routers significant damping network change information clear idmaps infrastructure carry information 
load sensitive distance information questionable provided 
certainly instantaneous near instantaneous seconds load information impossible highly variable nature internet performance 
concern kind load sensitive distance information generate feedback loop oscillation applications choose servers idmaps distance information turn effects distance information 
wide range applications idmaps load sensitive information difficulty understanding behavior may arbitrarily difficult dampen eliminate oscillations 
may useful provide raw distance information time day time week basis accurately reflect predictable day variations doing incompatible timeliness goal hours days 
total magnitude distance information stated section proposed sonar hops services assume response times order dns response time 
turn suggests sonar hops server holding information required calculate generate reply sonar hops client 
sonar hops service easily deployable require overly expensive computer communications equipment 
leads goal typical server system nt server sun workstation able obtain store memory information provided idmaps undue strain resources 
total cost distance calculation continuing thread cost calculating distance pair internet hosts idmaps information place undue strain typical server system 
scope distance information assume distance information applies public portion internet backbone networks information derived bgp possibly public side firewalls border routers private networks 
restriction derives fact private network distance information obtainable 
information obtainable may desirable include scalability reasons 
suggest distance information inside private networks important 
assume architecture replicated private internet address issue 
distance information points goal idmaps distance information provides allows estimate distance valid ip addresses internet 
important discuss particular goal significantly increases complexity idmaps service 
alternative goal service distance information provided server provide distance information pairs hosts proximity server 
service simpler system contend information number possible destinations information possible pairs internet destinations 
service useful systems near server case 
service proposed sonar simplicity perceived usefulness 
defense ambitious idmaps goal point advantages common application selecting multiple equal content web servers 
typical web clients today ability selection 
done proxy behalf transparently client 
proxy captures dns request client returns ip address selected server captures get client forwards client identical page selected server 
commercial distributed director product cisco operates way 
way proxy generally different location client servers service 
addition web server selection requires knowledge server load addition internet distance 
information efficiently maintained proxy system instance periodically querying servers 
assume applications exist exist may take advantage ability learn distance pair remote hosts believe mentioned taken sufficient justification goal 
measurement distance information distance information idmaps produced systems call tracers 
necessity tracers deployed different internet locations 
distance information relating particular location internet measured point 
order encourage largest possible installation tracers necessary operation tracer context idmaps substantially costly terms human equipment resources operation standalone internet measurement tool 
idea sites normally establish internet measurement tool willing allow tool participate idmaps infrastructure 
achieve basic goal tracers fully self configuring require large amounts information operate 
particular require distance information generated tracers correct operation 
basic architecture section outlines architecture idmaps service 
address basic questions set forth section 
ultimately produced distinct variations architecture hop hop hbh 
approaches differ type distance information estimates share significant number basic concepts 
ic ic ic ic ic ic internet hosts sonar hops clients idmaps client sonar hops servers idmaps clients distances behalf internet hosts 
convey distances simple query reply protocol 
idmaps service tracers measure network distances advertise virtual topology multicast groups 
clients calculate distances 
basic model tiers functionality start describing shared concepts 
describe different approaches discuss additional aspects architecture highlighting differences approaches 
purpose lay basic concepts issues provide detailed design remains 
separation tracers clients illustrates basic model tracers collect measure advertise internet distance information 
collectively distance information called distance map consists collected measured raw distances simply called distances 
systems called clients obtain distance map estimate distances internet hosts 
sonar hops servers examples potential idmaps clients 
full separation tracer client functions useful modularity allows different applications obtain distance maps 
point full separation necessary differences functionality places incompatible constraints types systems 
client systems deployed way easily accessible clients easily managed operators 
systems generally require large memories depending clients serve may require high bandwidth connectivity 
tracers hand placed able obtain raw distance information 
described placement largely dictated internet topology desired accuracy idmaps service 
furthermore tracers may relatively small machines contributing small number raw distances distance map 
types machines tracers clients locations internet different 
simple forms distance information simplest accurate form distance information provided idmaps take list distances globally reachable ip address 
distance ip address determined simply indexing list appropriate entry say hashing algorithm reading number 
sheer scale information millions hosts simple approach infeasible intractable problem just finding hosts changing internet place 
simplest list distances globally reachable address prefix ap internet 
ap defined block ip addresses single isp internet service provider backbone router 
note block may sub block cidr classless inter domain routing block assigned isp 
determining distance ip address slightly complicated ip address mapped ap ap indexed list 
approach accurate approach take consideration location specific ip address ap 
problem aps geographically disperse say ap belonging global multiple internet access points 
expect approximation pro understanding different ip addresses may reachable different times technologies nat dial internet access 
vide adequate accuracy addresses applications 
determining global set ip addresses determining set aps nontrivial feasible see section 
scale information prohibitive 
growing assigned cidr blocks probably times distinct aps 
probing disseminating storing full list pairs ap ap distances easily terabyte aps bytes list entry equally question 
clearly way compressing information needed 
way keep list distances autonomous system 
unit path information carried bgp inter domain routing protocol 
bgp maps blocks ip addresses ass 
shrinks size information number ass number bgp advertised ip address blocks ap definition order magnitude size 
large list maintaining certainly feasible 
resulting accuracy estimated distances highly suspect 
ass global scope multiple ass cover geographic area 
case ip hosts close geographical latency terms belong different ass ip hosts far apart belong 
approach clustering aps unit clustering 
natural design choice select certain systems call boxes distributed internet ap relatively close boxes 
distances boxes listed 
listed distances aps nearest box es 
distance aps calculated sum distances aps nearest boxes distance boxes 
resulting accuracy dependent close ap box 
assuming manipulate number location boxes tuning knob increasing accuracy expense listed raw distances 
host cost number hosts raw distance raw distance seattle host ap address prefix boston cost number aps host bgp prefix autonomous system cost number ass number bgp prefixes host ap near box cost number boxes 
various forms distance information redundant distances long leg effect boxes major isp area 
allow instance distributed game applications find game partners metropolitan area isp keeping latency minimum 
assuming isps area areas globally boxes isp translates boxes globally box box distances 
may fewer boxes required level accuracy may equally required 
somewhat risky base design box box distances 
approach scales number boxes 
assuming number aps manageable number question big order size list large 
hand order component roughly component terms simple storage lookup manageable 
impossible predict precision number boxes needed rough guess follows 
times atlas world sees fit list populations roughly metropolitan areas population 
easy imagine areas benefit having boxes distance map necessary list box box distances achieve accuracy 
instance assuming multiple boxes seattle washington dc instance isp certainly useful know distances 
knowing allow sufficient distance approximation hosts seattle hosts washington dc 
likewise unnecessary know distance box seattle box wash understand geographical distance necessarily directly relate network distance instance odd routings 
geographical locations simplify discussion 
dc distance box seattle box nearby baltimore 
distance say seattle washington dc known seattle baltimore distance estimated roughly 
examples say essence unknown distance estimated concatenating set known distances provided known distances short relative single long distance 
call long leg short leg effect 
denote distance distances known triangle inequality bounded distances small relative bound tight estimate accurate 
deriving distance estimate bound referred triangulation 
key point keep mind time estimate distance distances intermediary fact making assumption term efficient routing internet routing strive find low latency paths routes nearby hosts drastically different 
assumption violated due policy routing large layer clouds isps invisible network layer contain significant complex topology completely hidden network layer viewpoints available idmaps 
violated render triangle seattle seattle chicago chicago equality incorrect higher lower internet certainly contains exceptions assumption efficient routing 
just prevalent serious resulting idmaps inaccuracies remain key questions difficult assess building widely deployed measurement infrastructure idmaps 
efficient routing additional way raw distances boxes reduced 
may unnecessary know distances seattle chicago chicago washington dc seattle washington dc 
chicago pretty path seattle washington dc necessary know distance boston boston redundant distance path effect tle washington dc distance 
estimated concatenation seattle chicago chicago washington dc distances 
call path effect 
question know intermediate box really path know chicago tokyo 
turns don really know 
long intermediate box path simply running shortest path spanning tree known topology distances right path assuming efficient routing 
terms example say know distances seattle chicago denver dallas mexico city panama city buenos aires distances cities washington dc 
run spanning tree algorithm topology distances path chicago shortest serve estimate 
illustrated 
key question know intermediate locations path 
previous list cities distances chicago denver known shortest path dallas resulting estimate 
problem stated follows 
assuming number boxes placed various locations internet determine box box distances useful redundant 
words decide raw distances include distance map 
sec ap measured distances tracers actual physical distance shortest path triangle 
ap shortest path tions describe approaches specific problem hop hop hbh approaches 
distance computation point view client distance maps hbh schemes certain common properties 
contain aps boxes ap box distances box box distances 
ap ap box distances associated 
particular distances closest ap 
boxes may deal distances associated intuitively envision maximum distances better connected box 
near hundreds thousands potential distances exist distance connectivity 
estimate distance ip address client takes steps 
determine ap address 
ap expressed address prefix straight forward lookup process 

determine box aps connected 
simple table lookup 

run spanning tree algorithm topology boxes find shortest distance boxes source aps boxes destination aps 
shortest distance estimated distance 
exact operation spanning tree calculation step varies hbh models possible variations model 
differences described sections 
important point regarding calculation nearly box box topology pruned box box topology topology stored generate accurate distance estimate 
true ap box connectivity 
strictly speaking connectivity source destination aps needed order determine source destination boxes 
important ramifications methods disseminating distance map information section 
hbh model hbh model tracers probe transit backbone routers model transit backbone router box physical link box box distance 
words box box topology actual internet transit backbone router topology 
likewise actual internet access links subscriber networks isp transit backbone routers non transit subscriber access routers modeled ap box distances 
model certain intuitive appeal spanning tree algorithm run topology approximation actual internet routing algorithms algorithms 
assuming efficient routing real paths internet close calculated spanning tree operation 
actual internet routing algorithms levels inter routing bgp intra routing box box topology spanning tree algorithm reflects 
words boxes distance map labeled belonging 
simplistically illustrates spanning tree algorithm step executed 
determine autonomous system ap connects 

running spanning tree algorithm ap ap ip ip 
autonomous systems ass aps 
path 
router path 
concatenate router paths spanning tree algorithm hbh model inter topology calculate path 

path starting source calculate shortest router path entry router box intra topology 

concatenate calculated router paths obtain complete path 
cost distance map model roughly number aps number transit backbone routers links 
storing entire backbone router topology may glance excessive amount information 
size router topology information order ap connectivity information 
substantial fan transit backbone router multiple non transit subscriber access routers distinct aps 
information connectivity distinct ap stored event model keeping router topology matters significantly worse far memory requirements go 
immediate status routers links monitored required routing algorithms prevent loops black holes bandwidth required transmit router topology information proportional size router topology required transmit ap connectivity information 
advantage hierarchical structure internet autonomous systemlevel router level spanning tree calculation efficient broken small pieces run internet backbone topology 
model model tracers boxes box box distances actual distance measurements tracers distances actual distance measurements tracers aps 
spanning tree algorithm executed just described section 
additional mechanisms hbh model required 
hbh model appealing tight reflection actual internet topology model appealing simplicity 
directly solve problem knowing box box distances useful redundant 
worked specifics believe basic approach problem simply try new box box distances determine useful keep prove useful 
tracers independently activity tracers keeping tracer operation simple possible 
example tracer periodically select tracer measure distance tracers know distances nearby aps tracer query tracer actual distance include legs tracers backbone routers part path hosts 
sake readability refer tracer router tracer router distance simply distance tracers 
list nearby aps corresponding distances 
raw distances tracer calculate distance nearby aps nearby aps 
tracer formulate query client estimated distance ip address ap ap 
total distance reported client close known clearly distance useful 
box box topology stored client contains path distances approximating distance hand reported total distance substantially greater distance clearly useful addition box box topology 
case tracer start advertise new distance 
way new useful raw distances discovered 
time clients monitor topologies discover redundant distances 
simple efficient way keep tabs number times raw distance part shortest path distance estimate 
little distances tested running spanning tree point boxes including distance tested 
raw distance proved tracer advertising directly informed client 
clearly best effort approach achieve optimal topology number box box distances 
particular approach tell usefulness new distance addition topology tell new distance beneficial replacement established distances 
determining appears computationally expensive 
hope determining finding complex ways generate near optimal topologies unnecessary simple approach outlined produces topologies 
disseminating distance map tracers boxes distance map ultimate source distance map convey distance map clients 
characteristics distribution summarized follows 
large number producers tracers consumers clients information 

tracer produces small portion distance map hundreds raw distances 

raw distance changes infrequently hours day 

generally speaking typical client store complete box box part distance map 
model size part distance map unknown roughly estimated kbytes upwards mbytes boxes distances bytes distance 

clients store full ap box part distance map clients may simple query clients specific ap connectivity interest discussed section 
part distance map may estimated upwards mbytes aps 

client independently estimates distances distance map need identical perfectly date clients 
ideal mechanism dissemination distance map ip multicast 
allows tracer transmit small portion distance map coordination tracers hbh model coordination needed reasons 
tracers need know clients clients need know tracers advance learn tracers reception tracers transmissions 
sense ip multicast serves valuable discovery mechanism distribution mechanism 
distance map error free synchronized clients delivery characteristic ip multicast problem 
ip multicast allows tracers transmit raw distances having listen tracers important tracer may powerful machine 
basic idea tracer periodically random skew period prevent kind inadvertent synchronization tracers transmits raw distances appropriate multicast group 
client receiving group time receive raw distances 
transmitted raw distance time live associated 
time live set times longer transmit period 
clients simply delete raw distances age exceeds assigned time live 
useful different multicast groups different information 
minimum separate multicast groups box box distances ap box distances 
allows model client need store full ap box connectivity information listen box box group 
large volume ap box information distributed multiple multicast groups locality criteria instance proximity locus cluster boxes 
discovering aps models common problem discovering aps 
difficulty address blocks advertised isps bgp necessarily represent single group addresses internet location 
inside isp bgp advertised block may partitioned sub blocks aps topologically far away 
direct way address ranges sub blocks learned querying isps routers snmp listening routing protocols 
isps setup tracers methods 
client storing ap box distances requires means learning ones needs calculation 
solved context system clients outside scope idmaps service proper 
typical mechanism clients obtain ap box distances clients query clients 
querying clients discover clients separate multicast group clients advertise 
ideally large number tracers installed express purpose providing accurate distance information site 
dedicated tracers easily configured site ap information information advertised ap box distance multicast group 
aps covered general purpose tracers discover address boundaries aps aps nearby 
general purpose tracers necessarily light weight systems described goals section 
basic approach tracers obtain address blocks bgp advertise ap box distance multicast group 
address blocks serve seed tracers 
tracers periodically select address block probe specific ip addresses scattered block including addresses high low boundaries block 
probe reveals addresses location block considered single ap 
location determined ip address system responding traceroute address block probed 
probes ip addresses produce penultimate address assumed ap 
addresses different locations kind binary search block executed search boundaries subblocks 
search new probe select address midway previously probed addresses different aps 
discovering ap box distances address boundaries ap discovered ap box distance determined 
hbh model box ap access backbone router 
tracer discover backbone router routes probes different locations converge backbone router 
discovered ap box distance advertised discovering tracer 
true model 
model ap pre configured dedicated tracer tracers nearest ap discover subsequently advertise ap box distance 
result tracer discovers ap assumes closest tracer advertises distance ap ap box distance 
tracers probe ap determine may closer 
advertises closer distance 
hearing tracer longer distance advertising 
discovering distances general glance discovery ap box distances hbh model described appears simpler model fact distance discovery model complex 
model distance probed tracer distance 
time result large number probes tracer activity simple need coordinated tracers 
tracer independently decide tracers aps probe probe 
note model requires separate multicast group tracers advertise 
group monitored tracers dedicated general purpose alike may learn 
self advertisements relatively infrequent hours multicast group lightly loaded 
probing hbh model complex reasons 
see consider probing regime tracers hbh model 
model tracers know advance box tracers hbh model know advance internet topology looks routers links exist 
actively find 
done executing traceroutes randomly selected aps returns list routers path 
traceroute activity continuous background activity tracers done ap discovered 
link discovered individually probed periodically 
model distance probed tracers distance link hbh model potentially probed large number tracers 
order swamp link probes tracers coordinate activity link probed tracers time 
turn requires tracers aware activity tracers means tracers listen box box distance multicast group 
group carries substantial volume information backbone topology internet requiring tracers listen goes counter goal tracers light weight 
cope partition box box multicast group multiple multicast groups instance 
discovering link traceroute tracer determine corresponding routers multicast group link advertised 
tracer listens group determines tracers probing advertising link far link 
tracers advertising link closer link tracer may choose continue probe advertise link 
tracer may choose probe advertise link coordinate probing active tracers 
complication arises fact router may respond ttl expired different addresses different interfaces 
results different tracers probing different locations seeing different addresses router 
dns reverse lookups resolve router resulting single router appearing multiple boxes topology 
summary model early stage design appears simpler elegant hbh model 
main drawback time know model scalably produce sufficiently accurate estimates 
words know approach outlined section getting details done multicast group advertises group mappings 
really produce virtual topology adequately reflects physical topology requiring excessive number distances 
strictly speaking know certain hbh model 
fact hbh model reflects actual internet topology gives certain confidence produce estimates 
ultimately model believe way test scaling accuracy build prototypes try internet 
simplicity prefer try model 
order get better feel perform done preliminary simulations small topology previously gathered internet measurement data 
remainder describes simulation 
note model described proves scale adequately may able engineer improvements staying framework 
instance increase total number tracers having tiers topologies global known clients local known clients care finer granularity locale 
improvements add substantial complexity original model 
note models necessarily mutually exclusive 
reason instance box box distance model fact represent distance directly connected routers vice versa 
doing useful determined experimentation working system 
experimental evaluation section preliminary experimental results feasibility computing internet distances model 
basic question want investigate number tracers distributed internet close distance points estimated idmaps actual distance 
answer question traceroute data collected network probe daemon npd tool described 
table number triangles obtained data set 
data set total shortest number sites internet recruited run 
random intervals asked measure route npd site traceroute 
full description measurement process inter measurement interval number measurements period data cleansing done collected data available 
analyze traceroute data collected experiments nov dec experiment sep jan experiment 
split experiment data sets experiment data sets 
data sets non overlapping time 
hosts distributed globe participated experiment experiment source participated npd experiment number traceroutes destination participating experiment 
data set estimate latency minimum roundtrip times reported traceroutes data set compute set triangles involving minimum latency traceroutes host host host third host host host column table lists number triangles obtained data sets 
data sets experiment remaining experiment triangles simulate idmaps estimation path internet locations actual path idmaps having cdf cdf cumulative distribution function cdf ratio shortest path triangles 
cumulative distribution function cdf ratio triangles 
distances estimates distance hosts represent internet addresses aps distance want know 
hosts represent tracers distance map calculated path may go 
question relatively small number tracers represented achieve reasonably estimate calculated shortest path 
answer tells relatively small number tracers may potentially serve effectively intermediate nodes shortest path distance estimate 
turns means large majority tracer tracer distances need included distance map 
hasten emphasize experiment preliminary experimentation working idmaps system required 
triangulation error look triangulation error triangles formed npd experiments 
metric studying ratio length ac leg triangle sum length sides closer ratio smaller triangulation error accurate distance estimate obtainable idmaps 
speculated section number tracers involved idmaps large shortest path computed aps better approximate actual distance 
shortestpath mean potentially estimate distance shortest path path involves provides smallest see 
column table lists number shortest path triangles computed data set 
shows ratio actual distance sum length legs quite close 
lines practically top see need differentiate 
shows shortest path triangles formed leg shorter half sum legs 
comparative purposes show cumulative distribution function triangulation error triangles involving potential just providing shortest distance estimate 
shows example actual distance triangles formed shorter half sum length legs provides initial confirmation speculation tracers distributed internet shortest cdf acknowledgments benefited interesting discussions sally floyd 
susan craig labovitz dun liu making data set available 
ab bc ratio length ab leg bc leg 
path estimates closely approximate actual distances 
shows ratio length ab leg shortest path triangles length corresponding bc leg 
wide range ratios graph means long leg short leg effect seattle washington dc baltimore path effect seattle chicago washington dc coming play 
summary claim potential accuracy idmaps distance estimates results section convince continue explore model distance estimation 
issues section briefly discusses important issues facing 
primary issue mentioned simply reasonable distance estimates model 
number performance issues resolved tracers needed placed trace distances traffic generated storage latency trade offs clients 
careful simulations may shed light questions believe ultimately real way answer build system try large scale 
kantor lapsley network news transfer protocol proposed standard stream transmission news rfc internet engineering task force feb 
bhattacharjee application layer anycasting proc 
ieee infocom apr 
stevens tcp ip illustrated volume protocols addison wesley 
deering cheriton multicast routing internetworks extended lans acm transactions computer systems vol 
pp 
may 
moore cox green sonar network proximity service internet draft url www netlib org utk projects sonar feb 
francis host proximity service hops url www ingrid org hops aug 
stemm katz seshan spand shared passive network performance discovery url spand cs berkeley edu 
huitema project felix independent monitoring network survivability url ftp ftp bellcore com pub felix sep 
keshav sharma project octopus network topology discovery url www cs cornell edu topology default html may 
labovitz internet performance measurement analysis project url www merit edu 
paxson architecture large scale internet measurement ieee communications magazine appear 
caceres minc multicast inference network internal characteristics url www research att com duffield minc 
labovitz malan jahanian internet routing instability proc 
acm sigcomm 
bates cidr report url www employees org html june 
rekhter li border gateway protocol bgp rfc internet engineering task force mar 
hotz routing information organization support scalable interdomain routing heterogenous path requirements tech 
rep ph thesis univ southern california cs dept 
james michael schwartz locating nearby copies replicated internet servers proceedings acm sigcomm august 
paxson routing behavior internet proc 
acm sigcomm pp 
aug 

