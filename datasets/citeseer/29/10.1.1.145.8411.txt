ieee transactions evolutionary computation vol 
april ant colony system cooperative learning approach traveling salesman problem marco dorigo senior member ieee luca maria gambardella member ieee introduces ant colony system acs distributed algorithm applied traveling salesman problem tsp 
acs set cooperating agents called ants cooperate find solutions tsp ants cooperate indirect form communication mediated pheromone deposit edges tsp graph building solutions 
study acs running experiments understand operation 
results show acs outperforms nature inspired algorithms simulated annealing evolutionary computation conclude comparing acs opt version acs augmented local search procedure best performing algorithms symmetric asymmetric tsp index terms adaptive behavior ant colony emergent behavior traveling salesman problem 
natural metaphor ant algorithms ant colonies 
real ants capable finding shortest path food source nest visual cues exploiting pheromone information 
walking ants deposit pheromone ground follow probability pheromone previously deposited ants 
fig 
show way ants exploit pheromone find shortest path points 
consider fig 
ants arrive decision point decide turn left right 
clue best choice choose randomly 
expected average half ants decide turn left half turn right 
happens ants moving left right name begins moving right left name begins 
fig 
shows happens immediately instants supposing ants walk approximately speed 
number dashed lines roughly proportional amount pheromone ants deposited ground 
lower path shorter upper ants visit average pheromone accumulates faster 
short transitory period difference amount pheromone paths sufficiently large influence decision new ants coming system shown manuscript received october revised january february 
supported swiss national science fund contract 
dorigo iridia universit libre de bruxelles bruxelles belgium mail ulb ac 
gambardella idsia lugano switzerland 
publisher item identifier 
fig 

new ants prefer probability choose lower path decision point perceive greater amount pheromone lower path 
turn increases positive feedback effect number ants choosing lower shorter path 
soon ants shorter path 
behavior real ants inspired ant system algorithm set artificial ants cooperate solution problem exchanging information pheromone deposited graph edges 
ant system applied combinatorial optimization problems traveling salesman problem tsp quadratic assignment problem 
ant colony system acs algorithm article builds previous ant system direction improving efficiency applied symmetric asymmetric tsp main idea having set agents called ants search parallel solutions tsp cooperate pheromone mediated indirect global communication 
informally ant constructs tsp solution iterative way adds new cities partial solution exploiting information gained past experience greedy heuristic 
memory takes form pheromone deposited ants tsp edges heuristic information simply edge length 
main novel idea introduced ant algorithms discussed remainder synergistic cooperation relatively simple agents communicate distributed memory implemented pheromone deposited edges graph 
organized follows 
section ii puts acs context describing ant system acs 
section iii introduces acs 
section iv dedicated study characteristics acs study pheromone changes run time estimate optimal number ants observe effects pheromone mediated cooperation evaluate role pheromone greedy heuristic acs performance 
section provides overview results set standard test problems comparisons acs known general purpose algorithms evolutionary computation simulated annealing 
section vi add local optimization acs obtaining new algorithm called acs opt 
algorithm compared favorably winner international contest evolutionary optimization asymmetric tsp atsp problems see fig 
yields slightly worse performance tsp problems 
section vii ieee ieee transactions evolutionary computation vol 
april fig 

real ants find shortest path 
ants arrive decision point 
ants choose upper path lower path 
choice random 
ants move approximately constant speed ants choose lower shorter path reach opposite decision point faster choose upper longer path 
pheromone accumulates higher rate shorter path 
number dashed lines approximately proportional amount pheromone deposited ants 
fig 

traveling salesman problem 
dedicated discussion main characteristics acs indicates directions research 
ii 
background ant system research efforts ant algorithms applied tsp defined fig 

ant system utilizes graph representation defined fig 
augmented follows addition cost measure edge desirability measure called pheromone updated run time artificial ants ants short 
ant system applied symmetric instances tsp applied asymmetric instances possible informally ant system works follows 
ant generates complete tour choosing cities probabilistic state transition rule ants prefer move cities connected short edges high amount pheromone 
ants completed tours global pheromone updating rule global updating rule short applied fraction pheromone evaporates edges edges refreshed desirable ant deposits amount pheromone edges belong tour proportion short tour words edges belong short tours edges receive greater amount pheromone 
process iterated 
state transition rule ant system called random proportional rule gives dorigo gambardella ant colony system fig 

acs algorithm 
probability ant city chooses move city pheromone inverse distance set cities remain visited ant positioned city solution feasible parameter determines relative importance pheromone versus distance multiply pheromone edge corresponding heuristic value way favor choice edges shorter greater amount pheromone 
ant system global updating rule implemented follows 
ants built tours pheromone updated edges tour done ant pheromone decay parameter length tour performed ant number ants 
pheromone updating intended allocate greater amount pheromone shorter tours 
sense similar reinforcement learning scheme better solutions get higher reinforcement happens example genetic algorithms proportional selection 
pheromone updating formula meant simulate change amount pheromone due addition new pheromone deposited ants visited edges pheromone evaporation 
pheromone placed edges plays role distributed long term memory memory stored locally individual ants distributed edges graph 
allows indirect form communication called stigmergy 
interested reader find full description ant system biological motivations computational results 
ant system useful discovering optimal solutions small tsp cities time required find results infeasible larger problems 
devised main changes improve performance led definition acs section 
iii 
acs acs differs previous ant system main aspects state transition rule provides direct way balance exploration new edges exploitation priori accumulated knowledge problem ii global updating rule applied edges belong best ant tour iii ants construct solution local pheromone updating rule local updating rule short applied 
informally acs works follows ants initially positioned cities chosen initialization rule randomly 
ant builds tour feasible solution tsp repeatedly applying stochastic greedy rule state transition rule 
constructing tour ant modifies amount pheromone visited edges applying local updating rule 
ants terminated tour amount pheromone edges modified applying global updating rule 
case ant system ants guided building tours heuristic information prefer choose short edges pheromone information 
edge high amount pheromone desirable choice 
pheromone updating rules designed tend give pheromone edges visited ants 
acs algorithm reported fig 

discuss state transition rule global updating rule local updating rule 
acs state transition rule acs state transition rule follows ant positioned node chooses city move applying rule exploitation biased exploration ieee transactions evolutionary computation vol 
april random number uniformly distributed parameter random variable selected probability distribution 
state transition rule resulting called pseudo random proportional rule 
state transition rule previous random proportional rule favors transitions nodes connected short edges large amount pheromone 
parameter determines relative importance exploitation versus exploration time ant city choose city move samples random number best edge chosen exploitation edge chosen biased exploration 
acs global updating rule acs globally best ant ant constructed shortest tour trial allowed deposit pheromone 
choice pseudo random proportional rule intended search directed ants search neighborhood best tour current iteration algorithm 
global updating performed ants completed tours 
pheromone level updated applying global updating rule global best tour pheromone decay parameter length globally best tour trial 
case ant system global updating intended provide greater amount pheromone shorter tours 
equation dictates edges belonging globally best tour receive reinforcement 
tested type global updating rule called iteration best opposed called global best length best tour current iteration trial 
iteration best edges receive reinforcement belonging best tour current iteration 
experiments shown difference schemes minimal slight preference global best experiments 
acs local updating rule building solution tour tsp ants visit edges change pheromone level applying local updating rule parameter 
experimented values term choice loosely inspired learning algorithm developed solve reinforcement learning problems 
problems faced agent learn best action perform possible state finds sole learning information scalar number represents evaluation state entered performed chosen action 
learning algorithm allows agent learn optimal policy recursive application rule similar term set discounted evaluation state value 
problem ants solve similar reinforcement learning problem ants learn city move function current location set exactly formula learning parameter :10.1.1.52.7194
choices set initial pheromone level ii set ran experiments local updating applied local updating rule case ant system 
results obtained running experiments see table set randomly generated city tsp oliver symmetric tsp ry asymmetric tsp essentially suggest local updating definitely useful local updating rule yields worse performance local updating acs called ant acs called simply acs resulted best performing algorithms similar performance level :10.1.1.52.7194
acs local updating rule requires computation ant chose focus attention acs run experiments rest 
discussed section iv role acs local updating rule shuffle tours early cities ant tour may explored ants tours 
words effect local updating desirability edges change dynamically time ant uses edge slightly desirable loses pheromone 
way ants better pheromone information local updating ants search narrow neighborhood best previous tour 
acs parameter settings experiments sections numeric parameters indicated differently set values tour length produced nearest neighbor heuristic number cities 
values obtained preliminary optimization phase experimental optimal values parameters largely independent problem said number ants choice explained true rough approximation optimal tour length suffice 
dorigo gambardella ant colony system table local updating rules 
city problems oliver stopped iterations ry halted iterations 
averages trials 
results bold best table section iv 
regarding initial positioning ants placed randomly ant city 
iv 
study characteristics acs pheromone behavior relation performance try understand mechanism acs uses direct search study pheromone closeness product changes run time 
fig 
shows pheromone closeness product changes number steps ants building solution steps refer inner loop fig 
abscissa goes number cities 
consider families edges see fig 
belonging best tour best edges ii belong best tour preceding iterations te testable edges iii remaining edges belonged best tour iterations ue uninteresting edges 
average pheromone closeness product computed average values edges family 
graph clearly shows acs favors exploitation edges edges chosen probability exploration edges te recall edges higher pheromone closeness product higher probability explored 
interesting aspect edges visited ants application local updating rule pheromone diminish making attractive favoring exploration edges visited 
local updating effect lowering pheromone visited edges desirable chosen lower probability ants remaining steps iteration algorithm 
consequence ants converge common path 
fact observed experimentally desirable property ants explore different paths higher probability find improving solution graph fig 
abstraction graphs obtained experimentally 
examples fig 

fig 

families edges classified different behavior respect pheromone closeness product 
average level pheromone closeness product changes family iteration algorithm steps 
case converge tour ants pointless 
experimental observation shown edges acs achieves performance approximately downgraded te iteration algorithm external loop fig 
see fig 
edges te soon downgraded ue happen belong new shortest tour 
fig 
report typical behaviors pheromone level system bad performance respectively 
optimal number ants consider fig 

average pheromone level edges just updated global updating rule average pheromone level edges just updated global updating rule approximately average pheromone level edges te inner loop algorithm 
hypothesis optimal values known estimate optimal number ants computed follows 
local updating note shows average pheromone level fig 
showed average pheromone closeness product 
ieee transactions evolutionary computation vol 
april fig 

change average pheromone level algorithm iteration edges family 
average pheromone level edges starts decreases time ant visits edge 
algorithm iteration edge visited average times final value pheromone level 
fig 

families edges classified different behavior respect level pheromone closeness product 
problem eil 
pheromone closeness behavior system performance 
best solution iterations 
pheromone closeness behavior system performance bad 
best solution iterations 
rule order linear recurrence relation form closed form knowing just global updating corresponds start point curve fig 
ants built tour just global updating corresponds point curve fig 
obtain considering fact edges chosen ant probability approximation number ants locally update edges substituting formula obtain estimate optimal number ants formula essentially shows optimal number ants function unfortunately able identify form functions tell change function problem dimension 
experimental observation shows acs works ratio gives fig 

cooperation changes probability distribution finishing times cooperating ants higher probability find quickly optimal solution 
test problem 
number ants set 
cooperation ants section presents results simple experiments show acs effectively exploits cooperation 
artificial ants cooperate exchanging information pheromone ants ants blind pheromone 
practice obtained deactivating setting initial level pheromone edges 
comparing colony cooperating ants colony ants comparison fair cpu time compute performance indexes discount higher complexity due pheromone updating cooperative approach 
experiment distribution finishing times defined time elapsed optimal solution compare cooperative noncooperative approaches 
algorithm run times report graph probability distribution density probability cpu time needed find optimal value trials optimum exactly iterations value abscissa fig 
shows cooperation greatly improve probability finding quickly optimal solution 
dorigo gambardella ant colony system table ii comparison acs heuristics random instances symmetric tsp 
comparisons average tour length obtained city problems fig 

cooperating ants find better solutions shorter time 
test problem 
average runs 
number ants set 
reason acs heuristic function performs better acs pheromone case helped heuristic information acs guided reinforcement provided global updating rule form pheromone second case acs reduces stochastic algorithm 
fig 

comparison acs standard acs heuristic set acs ants sense deposit pheromone 
problem oliver 
averaged trials iterations trial 
second experiment fig 
best solution plotted function time ms cooperating ants 
number ants fixed cases interesting note cooperative case ms acs optimal solution ants able find ms ms lines fig 
cross ants outperform cooperating ants values pheromone level learned overhead due pheromone updating compensated advantages pheromone provide terms directing search solutions 
importance pheromone heuristic function experimental results shown heuristic function fundamental making algorithm find solutions reasonable time 
fact acs performance worsens significantly see acs heuristic graph fig 

fig 
shows behavior acs experiment ants sense deposit pheromone acs pheromone graph 
result pheromone deteriorates performance 
confirmation results role cooperation section iv 
acs computational results report sets experiments 
set compares acs heuristics 
choice test problems dictated published results literature 
second set tests acs larger problems 
comparison performed respect optimal best known result 
behavior acs excellent cases 
test problems tsplib www uni heidelberg de soft tsplib tsplib html 
available library explicitly cite 
iteration algorithm ant produces tour total number tours generated reported results number iterations multiplied number ants 
result trial best tour generated ants 
experiment consists trials 
comparison heuristics compare acs heuristics consider sets tsp problems 
set comprises randomly generated city problems second set composed geometric problems cities 
important test acs random geometric instances tsp classes problems structural differences difficult particular algorithm time easy 
table ii reports results random instances 
heuristics compare acs simulated annealing sa elastic net en self organizing map som 
results sa en som 
acs run iterations ants amounts approximately number tours searched geometric problems problems taken real world example generated choosing real cities real distances 
ieee transactions evolutionary computation vol 
april table iii comparison acs heuristics geometric instances symmetric tsp 
report best integer tour length best real tour length parentheses number tours required find best integer tour length square brackets 
means available column optimal length available integer tour lengths heuristics compare results 
acs results averaged trials 
best average tour length problem boldface acs offers best performance 
table iii reports results geometric instances 
heuristics compare acs case genetic algorithm ga evolutionary programming ep simulated annealing sa 
acs run iterations ants amounts approximately number tours searched heuristics compare results 
acs results averaged trials 
case comparison performed best results opposed average results previous table ii choice dictated availability published results 
difference integer real tour length case distances cities measured integer numbers second case floating point approximations real numbers 
results ep ga eil eil kroa 
results sa 
eil eil included tsplib additional city eil tsp eil tsp 
kroa tsplib 
best result problem boldface 
acs offers best performance nearly case 
eil problem find slightly worse solution real valued distance compared ep acs visits tours ep evaluations possible ep best solution earlier run specified 
acs bigger problems trying solve big tsp problems common practice data structure known candidate list 
candidate list list preferred cities visited static data structure contains city closest cities ordered increasing distances parameter set experiments 
implemented version acs incorporates candidate list ant extended version acs chooses city move belonging candidate list 
cities candidate list visited considers rest cities 
acs candidate list see table iv able find results problems cities 
time generate tour grows slightly linearly number cities better quadratic growth obtained candidate list sun sparc server mhz took approximately cpu time generate tour problem pcb att rat fl reason linear increase time number failures number times ant choose city outside candidate list increases problem dimension 
vi 
acs plus local search section shown acs competitive nature inspired algorithms relatively simple problems 
hand past years done define ad hoc heuristics see overview solve tsp 
general ad hoc heuristics greatly outperform specific problem tsp general purpose algorithms approaches evolutionary computation simulated annealing 
heuristic approaches tsp classified tour constructive heuristics tour improvement heuristics called local optimization heuristics 
tour constructive heuristics see overview usually start selecting random city set cities incrementally build feasible tsp solution adding new cities chosen heuristic rule 
example nearest neighbor heuristic builds tour adding closest node terms distance node inserted path 
hand tour improvement heuristics start tour attempt reduce length exchanging edges chosen heuristic rule local optimum improvement possible heuristic rule 
wellknown tour improvement heuristics opt opt lin kernighan respectively variable number edges exchanged 
experimentally shown general tour improvement dorigo gambardella ant colony system table iv acs performance bigger geometric problems trials 
report integer length shortest tour number tours required find average integer length standard deviation optimal solution fl give square brackets known lower upper bounds optimal solution known relative error acs heuristics produce better quality results tour constructive heuristics 
general approach tour constructive heuristics generate solution apply tour improvement heuristic locally optimize 
shown effective alternate improvement heuristic mutations best solution produced iteratively executing tour improvement heuristic starting solutions generated randomly constructive heuristic 
example successful application alternate strategy freisleben merz genetic algorithm generate new solutions locally optimized tour improvement heuristic 
acs tour construction heuristic freisleben merz genetic algorithm produces set feasible solutions iteration sense mutation previous best solution 
reasonable guess adding tour improvement heuristic acs competitive best algorithms 
added tour improvement heuristic acs 
maintain acs ability solve tsp atsp problems decided base local optimization heuristic restricted opt procedure inserting removing edges path considers opt moves revert order cities visited 
case possible change edges tour edges maintaining previous orientations 
case atsp problems general opt procedure avoids unpredictable tour length changes due inversion subtour 
addition candidate edge removed selected restricted opt procedure restricts search second edge removed edges implementation restricted opt procedure includes typical tricks accelerate tsp atsp problems 
search candidate nodes restricted opt procedure inside candidate list 
second procedure uses data structure called don look bit bit associated node tour 
local optimization procedure bits turned bit associated node turned search improving move starting fails 
bit associated node turned move involving performed 
third case symmetric tsp searching opt moves starting node procedure considers possible opt moves node move executed best proposed opt opt 
traditional array data structure represent candidate lists tours see sophisticated data structures 
acs opt uses candidate lists constructive part feasible node candidate list chooses closest node candidate list different happens acs case candidate list contains feasible nodes remaining feasible cities chosen probability normalized product pheromone closeness 
reasonable choice search performed acs local optimization procedure edges belonging candidate lists 
pointless direct search pheromone levels updated rarely 
experimental results experiments atsp problems section executed sun ultra sparc station mhz experiments tsp problems sgi challenge server mhz cpu single ieee transactions evolutionary computation vol 
april fig 

acs opt algorithm 
table results obtained acs opt atsp problems taken international contest evolutionary optimization 
report length best tour acs opt cpu time find average length best tour average cpu time find optimal length relative error average result respect optimal solution processor due sequential implementation acs opt 
test problem trials executed 
acs opt parameters set values differently indicated asymmetric tsp problems results obtained acs opt atsp problems quite impressive 
experiments run set atsp problems proposed international contest evolutionary optimization see iridia ulb ac html 
problems acs opt reached optimal solution seconds see table trials case ft problem considered relatively hard optimum reached times 
table vi results obtained acs opt compared obtained atsp ga winner atsp competition 
atsp ga genetic algorithm starts search population individuals generated nearest neighbor heuristic 
individuals strings cities represent feasible solutions 
step parents selected edges recombined procedure called dpx atsp 
dpx atsp deletes edges contained reconnects segments greedy heuristic nearest neighbor choice 
new individuals brought local optimum opt procedure new population generated application mutation operation randomly removes reconnects edges tour 
opt procedure atsp ga similar restricted opt comparison approaches straightforward 
acs opt outperforms atsp ga terms closeness optimal solution cpu time 
atsp ga experiments performed dec alpha station mhz machine faster sun ultra sparc station 
symmetric tsp problems turn symmetric tsp problems turns stsp ga stsp ga experiments performed mhz dec alpha station algorithm won international contest evolutionary optimization symmetric tsp category outperforms acs opt see tables vii viii 
results comparisons published slightly better published 
results hand comparable obtained algorithms considered 
example lin problem acs opt approximately dorigo gambardella ant colony system table vi comparison acs opt atsp ga atsp problems taken international contest evolutionary optimization 
report average length best tour average cpu time find relative error respect optimal solution approaches table vii results obtained acs opt tsp problems taken international contest evolutionary optimization 
report length best tour acs opt cpu time find average length best tour average cpu time find optimal length relative error average result respect optimal solution table viii comparison acs opt stsp ga tsp problems taken international contest evolutionary optimization 
report average length best tour average cpu time find relative error respect optimal solution approaches performance large step markov chain algorithm 
algorithm simulated annealing mechanism uses improvement heuristic restricted opt heuristic similar difference consider opt moves mutation procedure called double bridge 
double bridge mutation property smallest change edges reverted step opt lk opt 
fair comparison results results obtained currently best performing algorithms symmetric tsp difficult local search lin kernighan heuristic segment tree data structure ieee transactions evolutionary computation vol 
april faster gives better results restricted opt procedure 
subject add procedure acs 
vii 
discussion intuitive explanation acs works emerges experimental results preceding sections follows 
ants generated tour best ant deposits iteration pheromone defining way preferred tour search algorithm iteration fact iteration ants see edges belonging best tour highly desirable choose high probability 
guided exploration see fact local updating eats pheromone away diminishes amount pheromone visited edges making desirable ants allows search new possibly better tours neighborhood previous best tour 
acs seen sort guided parallel stochastic search neighborhood best tour 
growing interest application ant colony algorithms difficult combinatorial problems 
example schoonderwoerd apply ant colony algorithm load balancing problem telecommunications networks 
algorithm takes inspiration biological metaphor ant system implementation differs details due different characteristics problem 
interesting ongoing research st tzle hoos studying various extensions ant system improve performance impose upper lower bound value pheromone edges add local search spirit previous section vi :10.1.1.46.609
works nature inspired heuristics closest acs baluja caruana population incremental learning pbil 
pbil takes inspiration genetic algorithms maintains vector real numbers generating vector plays role similar population ga starting vector population binary strings randomly generated string population th bit set probability function th value generating vector practice values generating vector normalized interval directly represent probabilities 
population solutions created generated solutions evaluated evaluation increase decrease probabilities generating vector bad solutions generations produced higher lower probability 
applied tsp pbil uses encoding solution string size bits number cities city assigned string length interpreted integer 
cities ordered increasing integer values case ties left city string form neighborhood previous history system pheromone accumulated edges 
comes tour 
acs pheromone matrix plays role similar baluja generating vector pheromone updating goal updating probabilities generating vector 
approaches different acs pheromone matrix changes ants build solutions pbil probability vector modified population solutions generated 
acs uses heuristic direct search pbil 
number ways ant colony approach improved changed 
possibility regards number ants contribute global updating rule 
ant system ants deposited pheromone acs best obviously intermediate possibilities 
baluja caruana shown best individuals help pbil obtain better results probability trapped local minimum smaller 
change acs inspiration allowing ants produce bad tours subtract pheromone 
second possibility move current parallel local updating pheromone sequential 
acs ants apply local updating rule parallel building tours 
imagine modified acs ants build tours sequentially ant starts builds tour side effect changes pheromone visited edges 
second ant starts ants built tour 
point global updating rule applied 
scheme determine different search regime preferred tour tend remain ants opposed situation acs local updating shuffles tours 
search diversified ants sequence search neighborhood preferred tour narrow ones fact pheromone preferred tour decreases ants eat away making relative desirability edges preferred tour decrease 
role local updating case similar temperature simulated annealing main difference temperature changes algorithm iteration 
interesting add acs effective local optimizer section vi 
possibility investigate near lin kernighan heuristic 
interesting subject ongoing research establish class problems attacked acs 
intuition ant colony algorithms applied combinatorial optimization problems defining appropriate graph representation problem considered heuristic guides construction feasible solutions 
artificial ants tsp application search solutions problem consideration 
intuition supported encouraging preliminary results obtained ant system quadratic assignment problem 
dorigo gambardella ant colony system shown acs interesting novel approach parallel stochastic optimization tsp 
acs shown compare favorably previous attempts apply heuristic algorithms genetic algorithms evolutionary programming simulated annealing 
competition tsp tough combination constructive method generates starting solution local search takes solutions local optimum best strategy 
shown acs constructive heuristic provide starting solutions local optimizers 
appendix acs algorithm initialization phase pair starting city ant set visited cities ant city city ant located phase ants build tours 
tour ant stored tour choose city tour cycle ants go back initial city tour phase local updating occurs pheromone updated new city ant phase global updating occurs pheromone updated compute length tour done ant compute update edges belonging edge condition true print shortest goto phase acknowledgment authors wish bradshaw di caro fogel anonymous referees precious comments previous version article 
baluja caruana removing genetics standard genetic algorithm proc 
ml th int 
conf 
machine learning 
palo alto ca morgan kaufmann pp 

barto sutton associative search network reinforcement learning associative memory biological cybern vol 
pp 

beckers deneubourg goss trails turns selection shortest path ant niger theoretical biology vol 
pp 

bentley fast algorithms geometric traveling salesman problems orsa comput vol 
pp 

bersini dorigo gambardella results international contest evolutionary optimization st proc 
ieee int 
conf 
evolutionary computation ieee ec pp 

bersini dorigo hybridization genetic algorithms universit libre de bruxelles belgium tech 
rep iridia 
colorni dorigo maniezzo distributed optimization ant colonies proc 
ecal eur 
conf 
artificial life 
new york elsevier pp 

investigation properties ant algorithm proc 
parallel problem solving nature conference ppsn new york elsevier pp 

deneubourg application de ordre par fluctuations la description de tapes de la construction du nid chez les termites insect vol 
pp 

dorigo optimization learning natural algorithms ph dissertation dei politecnico di milano italy italian 
dorigo gambardella study properties ant proc 
ppsn iv th int 
conf 
parallel problem solving nature 
berlin germany springer verlag pp 

dorigo maniezzo colorni ant system optimization colony cooperating agents ieee trans 
syst man cybern 
vol 
pp 

durbin willshaw analogue approach travelling salesman problem elastic net method nature vol 
pp 

watson gandy christofides distribution management mathematical modeling practical analysis oper 
res 
quart vol 
pp 

fogel applying evolutionary programming selected traveling salesman problems cybern 
syst int 
vol 
pp 

fredman johnson mcgeoch data structures traveling salesmen algorithms vol 
pp 

freisleben merz genetic local search algorithm solving symmetric asymmetric traveling salesman problems proc 
ieee int 
conf 
evolutionary computation ieee ec pp 

new genetic local search operators traveling salesman problem proc 
ppsn iv th int 
conf 
parallel problem solving nature 
berlin germany springer verlag pp 

gambardella dorigo ant reinforcement learning approach traveling salesman problem proc :10.1.1.52.7194
ml th int 
conf 
machine learning 
palo alto ca morgan kaufmann pp 

ieee transactions evolutionary computation vol 
april solving symmetric asymmetric tsp ant colonies proc 
ieee int 
conf 
evolutionary computation ieee ec pp 

golden stewart analysis heuristics traveling salesman problem lawler lenstra rinnooy kan shmoys eds 
new york wiley 
goss aron deneubourg pasteels self organized shortcuts ant naturwissenschaften vol 
pp 

grass la reconstruction du nid les coordinations chez sp 
la th orie de la interpr tation des termites insect vol 
pp 

lldobler wilson ants 
berlin springer verlag 
johnson mcgeoch travelling salesman problem case study local optimization local search combinatorial optimization aarts lenstra eds 
new york wiley new york 
kaelbling littman moore reinforcement learning survey artif 
intell 
res vol 
pp 


kanellakis papadimitriou local search asymmetric traveling salesman problem oper 
res vol 
pp 

lawler lenstra rinnooy kan shmoys eds traveling salesman problem 
new york wiley 

lin 
kao 
hsu applying genetic approach simulated annealing solving np hard problems ieee trans 
syst man cybern vol 
pp 

lin computer solutions traveling salesman problem bell syst 
vol 
pp 

lin kernighan effective heuristic algorithm traveling salesman problem oper 
res vol 
pp 

maniezzo colorni dorigo ant system applied quadratic assignment problem universit libre de bruxelles belgium tech 
rep iridia 
martin otto felten large step markov chains tsp incorporating local search heuristics oper 
res 
lett vol 
pp 


traveling salesman problem neural network perspective orsa comput vol 
pp 

reinelt traveling salesman computational solutions tsp applications 
new york springer verlag 
rosenkrantz stearns lewis analysis heuristics traveling salesman problem siam comput vol 
pp 

schoonderwoerd holland bruten rothkrantz load balancing telecommunications networks adaptive behavior vol 

st tzle hoos improvements ant system introducing max min ant system proc 
third int 
conf 
artificial neural networks genetic algorithms 
wien germany springer verlag 
max min ant system local search traveling salesman problem proc 
icec ieee th int 
conf 
evolutionary computation pp 

watkins learning delayed rewards ph dissertation psychology dept univ cambridge uk 
whitley starkweather scheduling problems travelling salesman genetic edge recombination operator proc 
rd int 
conf 
genetic algorithms 
palo alto ca morgan kaufmann pp 

gambardella taillard dorigo ant colonies qap idsia lugano switzerland tech 
rep idsia 
marco dorigo sm born milan italy 
received master technology degree industrial technologies engineering ph degree information systems electronic engineering politecnico di milano milan italy title agr de sup universit libre de bruxelles belgium 
research fellow international computer science institute berkeley ca 
nato cnr fellow marie curie fellow 
research associate belgian national fund scientific research 
research areas include evolutionary computation distributed models computation reinforcement learning 
interested applications autonomous robotics combinatorial optimization telecommunications networks 
dr dorigo associate editor ieee transactions systems man cybernetics ieee transactions evolutionary computation 
member editorial board evolutionary computation adaptive behavior 
awarded italian prize artificial intelligence 
member italian association artificial intelligence ai ia 
luca maria gambardella born italy 
received degree computer science universit degli studi di pisa di scienze 
research director idsia istituto molle di studi private research institute located lugano switzerland supported swiss confederation 
major research interests area machine learning adaptive systems applied robotics optimization problems 
leading research industrial projects area collective robotics cooperation learning combinatorial optimization scheduling simulation supported swiss national swiss technology innovation commission 
