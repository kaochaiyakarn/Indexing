agentspeak bdi agents speak logical computable language anand rao australian artificial intelligence institute level la street melbourne victoria australia email anand oz au 
belief desire intention bdi agents investigated researchers theoretical specification practical design perspective 
remains large gap theory practice 
main reason complexity theorem proving modelchecking expressive specification logics 
implemented bdi systems tended major attitudes data structures modal operators 
provide alternative formalization bdi agents providing operational proof theoretic semantics language agentspeak 
language viewed abstraction implemented bdi systems prs allows agent programs written interpreted manner similar horn clause logic programs 
show perform derivations logic simple example 
derivations prove properties satisfied bdi agents 
specification design verification applications particular type agents called bdi agents received great deal attention years 
bdi agents systems situated changing environment receive continuous perceptual input take actions affect environment internal mental state 
beliefs desires intentions primary mental attitudes capture informational motivational decision components agent respectively 
addition attitudes notions commitments capabilities investigated 
sophisticated multi modal temporal action dynamic logics formalize notions 
complexity theorem proving completeness logics clear 
hand number implementations bdi agents successfully critical application domains 
implementations number simplifying assumptions modelled attitudes beliefs desires intentions data structures 
user written plans programs speed computation systems 
complexity code written systems meant implemented systems lacked strong theoretical underpinning 
specification logics shed little light practical problems 
result streams diverging 
earlier attempt bridge gap theory practice concentrated providing bdi architecture serves idealization implemented system vehicle investigating certain theoretical properties 
due abstraction unable show correspondence model theory proof theory interpreter 
holy grail bdi agent research show correspondence reasonably useful expressive language 
attempt specifying logical language 
previous attempts takes starting point implemented systems formalizes operational semantics 
implemented system considered procedural reasoning system prs incarnation distributed multi agent reasoning system dmars 
language agentspeak viewed simplified textual language prs dmars 
language operational semantics similar implemented system essential details 
implemented system language constructs task agent programming easier 
agentspeak programming language restricted order language events actions 
behaviour agent interaction environment dictated programs written agentspeak 
beliefs desires intentions agent explicitly represented modal formulas 
designers ascribe notions agents written agentspeak 
current state agent model environment agents viewed current belief state states agent wants bring external internal stimuli viewed desires adoption programs satisfy stimuli viewed intentions 
shift perspective simple specification language execution model agent ascribing mental attitudes beliefs desires intentions external viewpoint better chance unifying theory practice 
section discuss agent language agentspeak 
specification language consists set base beliefs facts logic programming sense set plans 
plans context sensitive event invoked recipes allow hierarchical decomposition goals execution actions 
syntactically plans look similar definite clauses logic programming languages quite different behaviour 
section formalizes operational semantics agentspeak 
run time agent viewed consisting set beliefs set plans set intentions set events set actions set selection functions 
selection plans adoption intentions execution intentions described formally section 
interpreter agentspeak simple example illustrate definitions operational semantics language 
section provide proof theory language 
proof theory labeled transition system 
proof rules define transition agent configuration 
transitions direct relationship operational se mantics language help establish strong correspondence agentspeak interpreter proof theory 
primary opening alternative restricted firstorder characterization bdi agents 
hope operational proof theoretic semantics agentspeak stimulate research pragmatic theoretical aspects bdi agents 
agent programs section introduce language writing agent programs 
alphabet formal language consists variables constants function symbols predicate symbols action symbols connectives quantifiers 
apart firstorder connectives 
achievement 
test sequencing implication standard order definitions terms order formulas closed formulas free bound occurrences variables 
definition 
predicate symbol terms belief atom 
belief atoms beliefs 
belief atom negation referred belief literal 
ground belief atom called base belief 
example consider traffic world simulation adjacent lanes cars appear lane move lane north south 
waste appear lanes robot pick waste place bin 
doing robot lane car runs risk getting run car 
consider writing agent programs robot 
beliefs agent represent configuration lanes locations robot cars waste bin adjacent location robot location car 
base beliefs agent ground instances belief atoms adjacent location robot 
goal state system agent wants bring 
consider types goals achievement goal test goal 
achievement goal written states agent wants achieve state true belief 
test goal written states agent wants test formula true belief 
example clearing waste particular lane stated achievement goal cleared seeing car particular lane stated test goal location car 
definition 
predicate symbol terms goals 
agent programs 
prolog require negations ground evaluated 
convention variables written upper case constants lower case 
discuss goals desires 
goals viewed adopted desires 
agent acquires new goal notices change environment may trigger additions deletions goals beliefs 
refer events triggering events 
consider addition deletion beliefs goals triggering events 
addition denoted operator deletion denoted operator gamma 
example noticing waste certain lane written location waste acquiring goal clear lane written cleared example triggering events 
definition 
belief atom goals gammab gamma gamma triggering events 
purpose agent observe environment observation goals execute certain actions 
actions may change state environment 
example move action symbol robot moving lane lane written move action 
action results environmental state robot lane longer lane definition 
action symbol order terms action 
agent plans specify means agent satisfy 
plan consists head body 
head plan consists triggering event context separated 
triggering event specifies plan triggered addition deletion belief goal 
context plan specifies beliefs hold agent set base beliefs plan triggered 
body plan sequence goals actions 
specifies goals agent achieve test actions agent execute 
example want write plan gets triggered waste appears particular lane 
robot lane waste perform action picking waste followed achieving goal reaching bin location followed performing primitive action putting bin 
plan written location waste location robot location bin location robot drop waste 
consider plan robot change locations 
acquired goal move location location body true 
context desired location needs find adjacent lane cars move lane 
location robot location robot location robot location robot adjacent location car location robot 
formally definition plans 
definition 
triggering event belief literals goals actions plan 
expression left arrow referred head plan expression right arrow referred body plan 
expression right colon head plan referred context 
convenience shall rewrite empty body expression true 
complete specification agent 
summary designer specifies agent writing set base beliefs set plans 
similar logic programming specification facts rules 
major differences logic program agent program follows pure logic program difference goal body rule head rule 
agent program head consists triggering event goal 
allows expressive invocation plans allowing data directed addition deletion beliefs goal directed addition deletion goals invocations 
rules pure logic program context sensitive plans 
rules execute successfully returning binding unbound variables execution plans generates sequence ground actions affect environment 
goal queried execution query interrupted logic program 
plans agent program interrupted 
operational semantics informally agent consists set base beliefs set plans set events set actions set intentions selection functions agent notices change environment external user asked system adopt goal appropriate triggering event generated 
events correspond external events 
agent generate internal events 
events internal external asynchronously added set events selection function selects event process set events event removed unify triggering events plans set plans triggering events unify called relevant plans unifier called relevant unifier 
relevant unifier applied context condition correct answer substitution obtained context context logical consequence set base beliefs plans called applicable plans options composition relevant unifier correct answer substitution called applicable unifier 
event may applicable plans options 
selection function chooses plans 
applying applicable unifier chosen option yields intended means responding triggering event 
intention stack partially instantiated plans intention frames 
case external event intended means create new intention added set intentions case internal event add goal intended means pushed top existing intention triggered internal event 
selection function selects intention execute 
agent executes intention executes goal action body top intention 
executing achievement goal equivalent generating internal event add goal current intention 
executing test goal equivalent finding substitution goal logical consequence base beliefs 
substitution test goal removed body top intention substitution applied rest body top intention 
executing action results action added set actions removed body top intention 
agent goes set events cycle continues events runnable intention 
formalize process state agent instant time formally defined follows definition 
agent tuple set events set base beliefs set plans set intentions set actions 
selection function selects event set selection function selects option applicable plan see definition set applicable plans selects intention set sets defined relatively straightforward 
describe sets definition 
set set intentions 
intention stack partially instantiated plans plans variables instantiated 
intention denoted zp bottom stack top stack 
elements stack delimited convenience shall refer intention true true true intention denote definition 
set consists events 
event tuple triggering event intention 
intention true intention event called external event internal event 
formally define notion relevant applicable plans unifiers 
saw earlier triggering event set events unified triggering event plans set general unifier mgu unifies events called relevant unifier 
intention true intention existing intention triggered event 
formally reader refer appendix basic definitions order logic horn clause logic 
definition 
ffl bm hn plan relevant plan respect event ffl iff exists general unifier oe doe eoe 
oe called relevant unifier ffl 
example assume triggering event event selected location robot 
plans relevant event withthe relevant unifier fx bg 
relevant plan applicable exists composed relevant unifier applied context logical consequence set base beliefs words context condition relevant plan needs logical consequence applicable plan 
formally definition 
plan denoted hn applicable plan respect event ffl iff exists relevant unifier oe ffl exists substitution oe logical consequence composition oe referred applicable unifier ffl referred correct answer substitution 
continuing example consider set base beliefs adjacent 
adjacent 
adjacent 
location robot 
location waste 
location bin 
applicable unifier fx bg plan applicable 
depending type event internal external intention different 
case external events intended means obtained selecting applicable plan event applying applicable unifier body plan 
intended means create new intention added set intentions definition 
ffl ffl set applicable plans options event ffl hn plan intended respect event ffl true intention iff exists applicable unifier oe true true hn oe example applicable plan intended intention location robot location robot adjacent location car move location robot 
case internal events intended means achievement goal pushed top existing intention triggered internal event 
definition 
ffl ffl set applicable plans options event ffl zf hn plan intended respect event ffl iff exists applicable unifier oe zf hn oe oe hn oe definition similar sld resolution logic programming languages 
primary difference goal called indirectly generating event 
gives agent better real time control change focus attention needed adopting executing different intention 
view agent programs multi threaded interruptible logic programming clauses 
intention selected executed formula body top intention achievement goal test goal action true 
case achievement goal system executes generating event case test goal looks mgu unify goal set base beliefs agent mgu exists applies rest means case action system adds set actions case top intention achievement goal satisfied removed substitution applied rest body intention 
definition 
zf hn 
intention said executed iff definition 
zf hn 
intention said executed iff exists substitution logical consequence replaced hn 
definition 
zf hn 
intention said executed iff replaced zf hn 
definition 
zp gamma true gamma hn intention said executed iff exists substitution replaced zp gamma hn 
continuing example execute definition add change follows location robot location robot adjacent location car location robot 
iteration robot moves environment send agent belief update event change location robot result belief location robot added set event location robot added set events relevant plans system choose intention execute 
executing result intention add event generated added set events words robot intention 
definition relevant plan case relevant unifier fx bg 
plan applicable applicable unifier 
body plan true intention satisfied set events empty 
terminates execution event added set definitions description operational semantics language agentspeak write interpreter agentspeak 
describes interpreter 
function top return top intention stack return head intended plan function body return body intended plan 
addition functions rest return element sequence element sequence 
function push takes intention frame intention stack intention frames pushes intention frame top intention 
function pop takes intention argument returns top intention 
proof theory far operational semantics agentspeak 
briefly discuss proof theory labeled transition systems 
definition 
bdi transition system pair gamma consisting set gamma bdi configurations binary transition relation gamma theta gamma define bdi configuration follows definition 
bdi configuration tuple ii label transition 
note taken set plans configuration assumed constant 
explicitly keep track goals appear intentions adopted agent 
write transition rules take agent configuration subsequent configuration 
proof rule gives transition intending plan top level 
states agent set intentions changes response external event chosen function processed 

poe algorithm interpreter ffl se ffl ffl fp applicable unifier event ffl plan pg external event ffl ffl push ffl oe oe applicable unifier ffl case body top si true pop si push head top si rest body top si si mgu head top si case body top si si 
case body top si pop si push head top si rest body top si si correct answer substitution case body top si pop si push head top si rest body top si si fa endwhile 
fig 

algorithm bdi interpreter bm hn oe oe logical consequence proof rule similar previous proof rule applicable plan pushed top intention second argument chosen event 
formally zp 
zp hn zp oe oe logical consequence proof rules execution 
proof rules type goal action appears literal body top intention chosen executed function give execution proof rule achieve proof rules written analogously 
zf hn 

zp zp hn 
proof rules additions goals similar proof rules apply deletion goals addition deletion beliefs 
proof rules formally define derivations refutations 
definition derivations straightforward sequence transitions proof rules 
definition 
bdi derivation finite infinite sequence bdi configurations fl fl 
notion refutation agentspeak respect particular intention 
words refutation intention starts intention adopted ends intention stack empty 
proof rules formally prove certain behavioural properties safety liveness agent systems done 
furthermore correspondence proof rules discussed section operational semantics discussed previous section 
correspondence possible proof theory usually multi modal logics far removed realities operational semantics 
addition internal events considered addition intentions extend operational semantics proof rules respect internal events deletion intentions success failure events actions plans goals intentions 
body plans considered includes sequences goals actions 
dynamic logic operators non deterministic parallel iteration operators allowed body plans 
addition assertion deletion beliefs plan bodies included 
useful feature implemented system dmars different post conditions successful failure executions plans 
operational semantics proof rules modified account constructs 
comparisons number agent oriented languages agent placa agentspeak slp congolog proposed literature 
agent successor placa model beliefs commitments capabilities communications agents 
attitudes treated data structures agent program 
interpreter execute agent programs described 
authors provide formal proof theory justify data structures capture model theoretic semantics beliefs commitments capabilities 
contrast described discusses connections interpreter proof theory labeled transition systems 
slp stream logic programming reactive guarded horn clauses 
clause slp consists guard behaviour 
guard decomposed head boolean constraint 
boolean constraint similar context 
head slp object body network concurrent objects connected communication message slots 
behaviour specified object replacement 
execution model slp agentspeak fundamentally different 
behaviour agent particular external stimuli captured single intention stack committed sub behaviours 
provides global coherence absent slp 
example consider agent wants drop intention longer needs achieve top level goal 
killing intention easier agentspeak slp 
semantics congolog situation calculus 
provides richer set actions discussed essentially single intention single threaded system agentspeak 
language agentspeak object oriented analogue agentspeak 
agentspeak textual simplified version language program procedural reasoning system successor dmars 
implementations mid 
agent oriented systems cosy interrap grate built bdi architecture 
formal operational semantics apply systems 
systems relation agentspeak scope 
bridging gap theory practice field agents particular area bdi agents proved elusive 
provide alternative approach providing operational semantics agentspeak abstracts implemented bdi system 
primary contribution opening alternative restricted order characterization bdi agents showing correspondence operational proof theoretic semantics characterization 
confident approach fruitful previous approaches bridging gap theory practice area stimulate research pragmatic theoretical aspects bdi agents 
research reported funded partly generic industry research development distributed real time artificial intelligence partly cooperative research centre intelligent decision systems 
author wishes michael georgeff lawrence cavedon valuable input comments 
appendix definition 
atom form terms called equation 
definition 
substitution finite set fx ng distinct variables terms definition 
application substitution fx ng variable written yields iff 
application term formula term formula obtained simultaneously replacing occurrence definition 
fx ng oe fy composition oe oe substitution obtained set fx oe oeg removing oe oe removing fx 
definition 
substitution oe solution unifier set equations fs ng iff oe oe substitution oe general iff substitution oe 
general unifier mgu terms atoms maximally general unifier terms 

burmeister 
cooperative problem solving guided intentions perception 
werner demazeau editors decentralized amsterdam netherlands 
north holland 


levesque 
intention choice commitment 
artificial intelligence 

georgeff lansky 
procedural knowledge 
proceedingsof ieee special issue knowledge representation volume pages 

jennings 
agents stream logic programming 
proceedingsof international conferenceon multi agent systems icmas san francisco usa june 

ingrand georgeff rao 
architecture real time reasoning system control 
ieee expert 

jennings 
responsible 
demazeau werner editors decentralized 
north holland amsterdam netherlands 

jennings 
specification implementation belief desire joint intention architecture collaborative problem solving 
journal intelligent cooperative information systems 

kinny ljungberg rao sonenberg tidhar werner 
planned team activity 
artificial social systems artificial intelligence lnai amsterdam netherlands 
springer verlag 

lesperance levesque lin marcu reiter scherl 
foundations logical approach agent programming 
working notes ijcai workshop agent theories architectures languages montreal canada 

muller thiel 
modelling reactive behaviour vertically layered agent architectures 
intelligent agents theories architectures languages 
lecture notes artificial intelligence lnai heidelberg germany 
springer verlag 

nilsson 
interpretations machines 
technical report dissertation department computer information science linkoping university linkoping sweden 

rao 
decision procedures propositional linear time belief desire intention logics 
working notes ijcai workshop agent theories architectures languages montreal canada 

rao georgeff 
modeling rational agents bdi architecture 
allen fikes sandewall editors proceedings second international conference principles knowledge representation reasoning 
morgan kaufmann publishers san mateo ca 

rao georgeff 
architecture rational agents 
rich swartout nebel editors proceedings third international conference principles knowledge representation reasoning 
morgan kaufmann publishers san mateo ca 

rao georgeff 
model theoretic approach verification situated reasoning systems 
proceedingsof thirteenth international joint conferenceon artificial intelligence ijcai france 


brief history stream parallel logic programming 
logic programming newsletter 

shoham 
agent oriented programming 
artificial intelligence 

singh andn 
asher 
formal theory intentions 
van eijck editor logics ai volume lnai pages 
springer verlag amsterdam netherlands 

thomas 
placa agent programming language 
intelligent agents theories architectures languages artificial intelligence lnai amsterdam netherlands 
springer verlag 

van der hoek van linder 
ch 
meyer 
logic capabilities 
proceedings third international symposium logical foundations computer science lfcs lecture notes computer science lncs 
springer verlag heidelberg germany 

van linder van der hoek ch 
meyer 
motivate agents 
working notes ijcai workshop agent theories architectures languages montreal canada 

rao andk 
ramamohanarao 
design concurrent agent oriented language 
intelligent agents theories architectures languages 
lecture notes artificial intelligence lnai amsterdam netherlands 
springer verlag 

wooldridge fisher 
decision procedure temporal belief logic 
proceedings international conference temporal logic bonn germany 
article processed macro package llncs style 
