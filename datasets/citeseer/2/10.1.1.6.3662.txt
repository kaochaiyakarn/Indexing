journal algorithms 
doi available online www com fast algorithms generate necklaces unlabeled necklaces irreducible polynomials gf kevin cattell hp research labs santa rosa california mail kevin cattell hp com frank ruskey joe sawada serra department computer science uni victoria victoria british columbia canada mail csr uvic ca sawada csr uvic ca csr uvic ca robert department mathematics statistics uni victoria victoria british columbia canada mail math uvic ca received august applications call exhaustive lists strings subject various constraints group actions 
ary necklace equivalence class ary strings rotation cyclic group ary unlabeled necklace equivalence class ary strings rotation permutation alphabet symbols 
new fast simple recursive algorithms generating listing 
necklaces binary unlabeled necklaces 
algorithms optimal running times sense running times proportional number necklaces produced 
algorithm generating necklaces basis efficiently generating equivalence classes strings rotation applied generating fixed density necklaces chord diagrams 
application describe implementation fast algorithm listing degree irreducible primitive polynomials gf 
academic press research supported nserc 
copyright academic press rights reproduction form reserved 
cattell 
natural group actions strings fixed alphabet 
leaving string unchanged 
reversing string 
rotating string permuting symbols string permutation alphabet symbols 
groups giving rise actions 
acting indices reversal cyclic acting indices symmetric group acting alphabet assuming alphabet consists symbols 
group action composition group actions partitions set ary strings equivalence classes orbits action 
applications call exhaustive lists representatives equivalence classes 
generate equivalence classes natural choose representative lexicographically smallest string 
representation efficient algorithms known generating equivalence classes actions efficient mean amount computation generating objects proportional number objects generated 
algorithms said cat constant amortized time 

simply counting base known efficient 
efficient algorithms easily developed 
case equivalence classes usually called necklaces 
efficient algorithms generating necklaces developed kessler algorithms proven efficient ruskey 
closely related algorithms generating lyndon words aperiodic necklaces 
developed duval shown efficient berstel case representative strings usually called restricted growth functions efficient algorithms generating developed er kaye 
addition natural group actions considered isolation interesting equivalence classes emerge composing group actions 
example composing results dihedral groups resulting equivalence classes called 
framework outlined 
sawada developed algorithm generate ary constant amortized time 
show orbits composition generated amortized 
time cat fixed 
remains interesting challenge develop efficient algorithms compositions 
new recursive framework necklace generation 
framework develop cat algorithm generate equivalence classes complemented cycling register generating unlabeled necklaces correspondence vortex free tournaments framework develop cat algorithm generating unlabeled binary necklaces lyndon words composition 
algorithm implementation fast algorithm listing degree irreducible polynomials gf 
framework efficiently generate classes strings summarized 
undoubtedly applications framework discovered 
necklaces done cat algorithm 
vortex free tournaments done cat algorithm 
binary unlabeled necklaces done cat algorithm 
irreducible polynomials gf 
done 
fixed density necklaces done ruskey sawada cat algorithm 
done sawada cat algorithm 
chord diagrams points oriented circle embedded plane joined pairwise chords appear 
necklaces forbidden substrings done ruskey sawada cat algorithm forbidden substring lyndon word 
basis nth homogeneous component free lie algebra appear 
combinatorial objects listing fundamental considerable interest having efficient algorithms generate 
interest comes mathematicians computer scientists electrical engineers scientists disciplines 
algorithms implemented combinatorial object server cos 
www theory csc uvic ca cos sections necklaces irre polynomials gf 

background definitions def defining alphabet 
set consists ary strings length define equivalence relation exist equivalence classes called necklaces identify necklace lexicographically representative equivalence class 
set necklaces length ary alphabet denoted def 
cattell example 
cardinality denoted string aa 
denote left shift position aa ana 
unlabeled necklace care color bead beads different colors 
unlabeled necklaces identical transformed interchanging position string 
formally set ary length unlabeled necklaces defined follows def 

example 

denote string periodic nonempty 
aperiodic necklace called lyndon word 
set ary lyndon words length denoted def aperiodic example 

cardinality denoted unlabeled lyndon word aperiodic unlabeled necklace 
set ary length unlabeled lyndon words denoted cardinality example 
word called prefix necklace 
set ary length denoted def example 


cardinality denoted denote number length numbers prove useful analyzing algorithms developed 
formally def 
denote unlabeled cardinality def pk nk generating unlabeled necklaces theorem 
formulae lk 
dn odd dn nk 
dn odd dn 
proof 
equations known proof may graham 
equations gilbert riordan equation follows lemma equation follows lemma 

generating necklaces section describe recursive algorithm generating necklaces lyndon words 
compared previous algorithms contribution recursive formulation leads simpler proofs analysis 
amenable modification example existing algorithms generate lexicographic order generate different orders algorithm result theorem tells construct length length 
section recursive methodology generate unlabeled necklaces 
methodology papers generate necklaces fixed density cat algorithms 
characterizations lyndon words necklaces known 
clearly equivalent definitions earlier 
xy xy yx nonempty 
xy xy yx nonempty 
need state couple technical lemmas 
lemma proven lemma cattell lemma 

lemma follows directly 

definition lemma 
length 
substring lemma follows lemma ensuing discussion 
lemma 
aa string lyn aj aj lyn length longest prefix lyndon word 
function defined formally def lyn max aa 
example lyn 

note aa lyndon word lyn theorem useful 
tempted call fundamental theorem necklaces 
leads necklace generation algorithm algorithms producing lyndon factorization word determining necklace lexicographically minimal rotation 
string time linear length string 
theorem specifies exact conditions terms lyn character appended remain 
ways theorem implicit duval explicitly stated 
reutenauer similar statement page 
theorem 
aa string 
lyn string 
lyn 
algorithm 
procedure gen integer local integer gen generating unlabeled necklaces gen algorithm gen algorithm follows directly theorem 
parameter meaning theorem parameter replaces general lyn call gen generate length prefix 
generate length assign initial call gen symbols selected loop selected increasing order listing lexicographic opposite order listing reverse lexicographic order 
necklaces lyndon words produced adding test function described table show algorithm gen efficient cat property 
theorem 
algorithm gen cat algorithm 
proof 
call number nodes computation tree structure algorithm equal number length expressed 
expressions 

obtain bounds 
lk nk 
table different objects output different versions sequence type 
println 
lyndon words 
println 
necklaces 
mod println 
de bruijn sequence mod print 


cattell pk lk 
wk pk nk 
shown expression converges 
asymptotic running time necklace lyndon word noting 

constant necklace algorithm algorithm cat matter type object generated 

application generating equi classes complemented cycling register golomb considers complemented cycling register ccr 
set binary strings length ccr transforms input string bb output string shown 
bn 
bb 
repeated application operation eventually results initial string sequence ccb 
called cycle 
ccr denote number distinct cycles ccr taken binary strings length ccr 
odd dn shown knuth right side 
equal number vortex free tournaments vertices 
number number odd density binary necklaces length consider mapping sends consecutive members cycle exclusive 
example 

applied members cycle circular rotation results 
generating unlabeled necklaces true general show 

bn bn bn 

strings shifts 
contain odd number 
process reversible long value specified 
natural correspondence binary necklaces odd number distinct cycles ccr binary strings length making small modifications gen generate unique representative distinct cycle ccr described 
add additional parameter gen keeps track number string 
resulting string length number rejected 
maintain array holds representative cycle ccr necessarily lexicographically representative equation bt bt recursive call find bit representative cycle adds constant amount computation node computation tree 
resulting algorithm cat running time proportional running time generating odd density necklaces number odd density necklaces asymptotically half total number necklaces 

generating unlabelled binary necklaces section develop cat algorithm generate binary unlabeled necklaces 
recall unlabeled necklace equivalence class necklaces permutation alphabet symbols 
binary case necklace complement equivalence class 
representative choose lexicographically smallest string equivalence class giving rise set section gave explicit expressions count lemmas analogous lemmas necklaces 
lemma 

proof 
equivalent permutation symbols 
definition unlabeled necklace greater cattell equal greater equal lemma necklace definition unlabeled necklace 
lemma 
string equal length longest unlabeled lyndon prefix 
aj aj proof 
ap prefix 
lemma unlabeled necklace conversely assume lyn exist lyndon prefix length greater implies exists permutation alphabet symbols contradicts assumption unlabeled matter append string unlabeled necklace 
lyn lemma aj aj generate unlabeled necklaces simply generate necklaces perform test necklace determine unlabeled representative 
perform test take complement generated necklace necklace finding algorithm find corresponding necklace 
algorithm runs time 
easily derived duval algorithm factoring string lyndon words theorem 
compare resulting necklace original original larger unlabeled necklace 
algorithm yields running time onn 
far efficient 
order improve na algorithm generate unlabeled necklaces improve linear time test required necklace generation 
remainder section build theorem theorem suggests addition parameter necklace algorithm gen constant time maintenance parameter node computation tree eliminates need linear time test yielding cat algorithm generate unlabeled necklaces 
state main theorem introduce additional notation state useful lemmas 
note consists exactly necklaces satisfy 
observe 
generating unlabeled necklaces lemma 
ery ha 
ak proof 
definition unlabeled necklace necklace unlabeled representative equal complemented rotations 

need show 
ak ai lemma yields ai ai case result trivial 
case consider look subcases 

implies ifn substring ak substring lemma subcases 
ai gives result ai ana ai 
corollary 
unlabeled necklace 
proof 
ai ai ana ai 
exists smallest ai lemma unlabeled necklace 
unlabeled necklace definition 
need final definition presenting main theorem section 
define com smallest positive value ac 
value exists 
example com 

com com examples represent extreme values com 
give lemma useful proving theorem 
lemma 
binary string unlabeled ai proof 
assume unlabeled 
subset 
definition unlabeled exists unlabeled necklace string 
definition unlabeled necklace ai cattell prove converse lyn ifn mod necklace 
corollary unlabeled necklace definition unlabeled 
mod construct string ap length extending 
observing unlabeled necklace fact necklace corollary 
get ap 
ap ai pn ai am 
ap unlabeled necklace ai ap pn necklace corollary shows unlabeled necklace definition unlabeled 
theorem 
aa 
com string ab ab ii 
com proof 
assume lemma string ac contradiction definition unlabeled 

prove converse need show ai lemma 

com observe ai clearly ai definition com similar argument ac applying lemma case get ai ai furthermore clearly com convention com value 
holds 
note case occur discussion paragraph proof 
theorem implies generate unlabeled unlabeled necklaces 
introducing additional parameter generation algorithm gen pseudocode algorithm algorithm 
initial call generating unlabeled necklaces initializing 
unlabeled necklaces lyndon words produced table 
general unlabeled lyn com call generate length unlabeled prefix 
algorithm 
procedure integer observe computation tree subtree computation tree gen constant computation performed node tree 
furthermore number unlabeled binary necklaces half number labeled binary necklaces 
observations prove theorem 
theorem 
algorithm cat algorithm 
remains interesting challenge extend ideas generate unlabeled necklaces nonbinary alphabets obvious way extend theorem 

application generating irreducible polynomials er gf 
finite field gf 
denote gf set polynomials gf 
indeterminate nonzero polynomial said irreducible gf 
nontrivial factorization cattell irreducible polynomial root generates nonzero elements gf 
gf 
root roots generators 
number degree irreducible polynomials gf 
number binary lyndon words length natural correspondence sets generate irreducible primitive polynomials degree 
paragraph explain correspondence 
primitive polynomial degree roots 
ranges equivalence class size equivalence classes correspondence irreducible polynomials degree divides forming polynomial correspondence explained golomb see reutenauer correspondence normal bases seen exploited algorithmic context 
irreducible polynomials degree successive powers amount circular shifts irreducible polynomials degree may generated feeding primitive root generating lyndon words length lyndon word generated converted integer corresponding irreducible polynomial computed 
irreducible polynomial primitive relatively prime 
reciprocal degree polynomial polynomial reciprocal irreducible polynomial irreducible reciprocal primitive polynomial primitive 
correspondence mentioned reciprocal polynomials correspond generated complement number produce generate lyndon words unlabeled lyndon words 
saves asymptotically 
factor computation time 
algorithm implemented polynomial stored single machine word obvious manner 
intermediate calculations involve polynomials gf stored length arrays words 
day middle road workstation generate irreducible polynomials degree noting way primitive 
course large values infeasible generate irreducible polynomials algorithm generate wanted 
program poly available cos compiled gcc run sun microsystems ultra machine 
theoretically computation irreducible polynomial takes 
polynomial multiplications 
multiplication routine na algorithm implemented machine words 
larger faster algorithms generating unlabeled necklaces discussed von zur gathen 
algorithm algorithms outlined 
suited parallelization system brendan mckay natural tree structure recursive algorithm assign different subtrees different processors 
algorithm compute various statistics irreducible polynomials led results conjectures sizes various subclasses irreducible polynomials 
example number irreducible polynomials odd number nonzero odd terms example number irreducible als trace coefficient acknowledgments referees helpful comments 
algorithm theorem discovered second author preparing 
referees pointed essence theorem contained reutenauer 

berstel average cost duval algorithm generating lyndon words theoret 
comput 
sci 



duval factoring words ordered alphabet algorithms 


duval generation une section des classes de des mots de lyndon de theoret 
comput 
sci 


er fast algorithm generating set partitions comput 


kessler algorithm generating necklaces beads colors discrete math 


necklaces beads colors ary de bruijn sequences discrete math 


von zur gathen gerhard arithmetic factorization polynomials technical report tr university paderborn germany 

gilbert riordan symmetry types periodic sequences illinois math 


golomb irreducible polynomials synchronization codes primitive necklaces cyclotomic algebra univ north carolina monograph series probability statistics vol 
pp 


golomb shift register sequences holden day oakland 

graham knuth patashnik concrete mathematics addison wesley reading ma 

kaye gray code set partitions inform 
process 
lett 


knuth axioms hulls lecture notes compu ter science vol 
springer verlag berlin new york 

finite fields applications cambridge univ press cambridge uk 
cattell 
tools fundamental constructions combinatorial mathematics 

combinatorics words cambridge univ press cambridge uk 

ruskey smith analysis algorithms listing equivalence classes ary strings induced simple group actions siam discrete math 


reutenauer free lie algebras clarendon press oxford 

ruskey combinatorial generation manuscript course notes csc univ victoria 

ruskey savage wang generating necklaces algorithms 

ruskey sawada efficient algorithm generating necklaces fixed density siam comput 


ruskey sawada generating necklaces strings forbidden substrings proc 
th annual international combinatorics computing conference sydney australia july lecture notes computer science appear springer verlag berlin new york 

sawada generating constant amortized time manuscript 

von zur gathen gerhard arithmetic factorization polynomials proc 
issac pp 
assoc 
comput 
mach new york 
