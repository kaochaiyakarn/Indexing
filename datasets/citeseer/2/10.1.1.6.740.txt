hardware spiking neural network run time reconfigurable connectivity autonomous robot daniel st phane hofmann yann dario floreano autonomous systems laboratory institute systems engineering logic systems laboratory institute computing multimedia systems epfl lausanne switzerland asl epfl ch epfl ch cellular hardware implementation spiking neural network run time reconfigurable connectivity 
implemented compact custom fpga board provides powerful reconfigurable hardware platform hardware software design 
complementing system cpu synthesized fpga takes care interfacing network external world 
fpga board hardware network demonstrated form controller embedded khepera robot task obstacle avoidance 
implementations new multi cellular hardware discussed 

spiking neurons depart traditional connectionist models sense information transmitted mean pulses spikes firing rates 
may allow spiking neurons richer dynamics exploit temporal domain encode retrieve information exchanged spikes 
spiking neurons controllers evolutionary robotics perform vision obstacle avoidance phototaxis 
hardware implementations spiking networks may bring benefits low power consumption example sensors fast update speed 
cellular digital hardware implementation spiking neural network run time reconfigurable connectivity 
composed regular array cells cell acts spiking neuron 
cells configuration input allows change type mail name surname epfl ch connectivity neuron run time 
system validated task navigation khepera robot 
custom fpga board fpga module provides compact powerful reconfigurable hardware platform 
embedded hardware software design possible processor evolvable hardware evolutionary robotics research 
standalone device robots khepera 
section describes fpga module 
section explains principles cellular spiking neural network reconfigurable connectivity 
section describes implementation fpga experiment khepera robot 
results discussed section concluding section 
fpga module fpgas flexible implementing hardware systems 
digital system implemented inside provided resources sufficient fig 

compact fpga module developed apex fpga gates altera 
standalone device plugged mobile robots 
particular fully mechanically electrically compatible khepera miniature robot robot accepts extension modules 
fpga module provides powerful reconfigurable hardware platform evolvable hardware evolutionary robotics experiments 
exists fpga module compatible khepera developed applied ai systems 
discontinued xc fpga xilinx 
fpga suitable device unconstrained evolution suit application resources available gates 

digital system implemented fpga resources cpu dedicated hardware units fft unit logic functions serial communication controller chip ram 

fpga module mounted top khepera robot 
module composed pcbs fpga power supply 
module standalone robots 
description architecture fpga module contains fpga sram flash memory connectors interface pc user extensions table lists features module 
khepera robot fpga module extends considerably capabilities robot 
module standalone robot 
case pins previously communicate khepera user tough problems space optimization solved fit system pcb mm diameter size khepera robot 
result module composed stacked pcbs fig 
fpga board turret digital part includes ma apex fpga gates ram bits logic elements mbyte flash memory kx kbytes sram kx chips user system push buttons user leds configuration switches user compatible user ttl serial line compatible khepera bus user stackable modules multi fpga system sharing single clock rs connector transceiver connector altera programmers compatible excalibur board software development kit supply voltage power board generates voltage board logic configuring fpga flash self reconfiguration may triggered fpga oscillator mhz zero skew clock distribution power reset circuitry clock power pins available user modules table 
features fpga module jor components fpga configuration controller memories oscillator serial transceiver supplementary clock pin placed existing khepera bus pins allow stacked fpga modules share clock 
power board turret analog part comprises voltage regulators generates required digital components 
supplementary power pins gnd placed existing khepera bus pins fpga board turret user 
architecture fpga module similar excalibur development board modified perform fully khepera compatible extension module 
module compatible excalibur development tools 
allow design soc system chip mixing hardware software 
tools provide bit cpu called peripherals readily available uart spi communication controllers timers parallel 
main parts fpga module architecture shown fig 
described 
memories memory bus 
flash memory contains configuration fpga power reset 
store user data cpu executable files 
sram chips program data memory 
memory bus interfaces flash memories apex fpga configuration controller 
fpga full access memories 
configuration controller accesses address bus control signals 
configuration controller 
fpga sram configuration volatile configuration needs 
fpga module architecture addition fpga ram flash memories connectors interfacing 
downloaded power reset 
configuration controller takes care download procedure transferring configuration file flash fpga 
configuration controller non volatile device programmed 
normal device reconfigured 
user interfaces 
module provides user user leds system push buttons cpu clear system reset 
configuration switches allow user select configuration options module target device clock source multi module systems self reconfiguration enable main alternate fpga configuration selection 
addition extension connectors available providing pins pins power gnd clock pins 
programming interfaces 
serial interface rs transceiver available connector 
serial interface allows communication fpga downloading user programs cpu memory 
interface download design configuration controller fpga 
khepera bus 
digital pins khepera expansion bus connected fpga interfacing modes possible fpga khepera khepera extension modules 
memory mapped simplest form interfacing 
possible serial communication rs net protocol developed team 
standalone module supplementary compatible pins 
top cellular structure network 
box cell neuron 
bottom input connectivity pattern allowed neuron 
connectivity pattern indicates neighbours outlined boxes current neuron gray box receives spikes 
addition neuron extra input world 
total connectivity patterns 
bottom right connectivity pattern unconnected cell 
complete set functionalities doubled neuron excitatory inhibitory giving total different functionalities 
available general purpose 
cellular spiking network reconfigurable connectivity project interested exploring process growth differentiation multi cellular organisms 
chip organized number cells detailed section express certain functionality resulting simple morphogenetic process described section 
multi cellular organism structure regular array cells 
cell implements functionality selected set predefined functionalities akin skin muscle neuron cells living 
cell inputs spikes coming neighbouring cells outputs spike sent neighbouring cells function input indicating function cell connectivity sign neuron 
total functions selected input connectivities times sign types 
organisms 
case cellular system implements spiking neural network 
functionality cell spiking neuron 
exist kinds spiking neuron 
kind considered different functionality cell assume 
different functionalities combination connectivity pattern possible connectivity patterns type neuron excitatory inhibitory spike sign 
connectivity pattern indicates neuron connected neighbouring neurons receive spikes 
total cell assume different functionalities 
set functionalities called family functions 
top shows array cells cell spiking neuron 
bottom shows connectivity patterns available 
cells cells inputs outputs exchange data configuration input fig 

cells act spiking neurons imagine different functionalities filters inputs receive incoming spikes neighbouring neurons outputs send outgoing spikes 
configuration input function select functionality cell inside family functions 
cellular implementation characteristics 
cells architecturally identical may functionally different 
second necessary logic behaviour cell resides common blocks cells shared 
allow run time reconfiguration condition met cells 
words cells implement possible functionalities combinations connectivity pattern neuron type 
effective cell functionality changes run time function input 
cells able connect 
effect incoming spikes membrane potential 
time spike received membrane potential increased 
threshold reached neuron emits spike gray column potential reset 
predefined connectivity patterns 
done implementing connectivity patterns cell design time 
run time function input select pattern effectively 
approach includes overhead routing resources logic fpga effectively configuration run time 
addition cell able implement excitatory inhibitory neurons 
neuron type effect computation happening effect postsynaptic neurons 
neurons know type presynaptic neurons connected 
current implementation neuron outputs spikes sent indicating type neuron 
routing critical alternatives exist possible serial implementation neurons transmit sign spikes 
functionality cell comes memory storing configuration network 
fpga configuration bitstream generated synthesis tools downloaded 
similarities exist cells described virtual fpga virtual reconfigurable circuits configurable blocks systems implemented fpga allow abstraction fpga architecture 
spiking neuron model spiking neuron model minimalistic model allows compact implementations previously implemented microcontroller bytes ram 
discrete time integrate fire model leakage refractory period 
neuron weighted inputs depending presynaptic neuron excitatory inhibitory connected 
arrays left snapshots signaling phase type signal gray cells start signaling phase left time steps middle signaling complete right 
number inside cells intensity signal hexadecimal 
expression table expression phase shown right 
example signal matches second entry table signal smallest hamming distance expressing function 
neurons 
neuron external input connect sensor fixed weight 
neuron integrates incoming spikes membrane potential weights connections 
membrane potential reaches threshold set neuron fires emits spike resets membrane potential enters refractory period integrate incoming spikes time step 
integration phase neuron fired leakage applied decrementing membrane potential 
potential zero reset zero limit dynamic range 
main characteristics compared models computations needed update neuron state network step multiplications exponentials 
shows effect incoming spikes membrane potential 
evolution finding functions put cell system difficult evolution 
direct codings flexible cases new cells added system bits available give function cell system reorganizes number elements system known advance change life system 
direct codings may pose problems scalability 
developed alternative genetic coding called morphogenetic system designed specifically cellular circuits 
assigns functionality cell circuit set predefined functionalities 
process works phases signaling phase expression phase fig 

signaling phase relies ability cellular circuit exchange signals adjacent cells implement diffusion process 
second phase expression finds functionality expressed cell matching signal intensities cell corresponding functionality stored expression table 
genetic code chromosome contains position diffusing cells contents expression table evolved genetic algorithm 
details see 
morphogenetic system remotely inspired mechanisms gene expression cell differentiation living organism notably fact concentrations proteins inter cellular chemical signaling regulate functionality cells 
related include development mechanisms coupled genetic algorithms 
biologically plausible development models proposed may help evolve complex systems 
morphogenetic system implemented software cpu fpga 
cpu sets function input cell chromosome 
hardware implementation array neurons implemented fpga module 
example application task obstacle avoidance khepera robot 
reason describe network necessary interfaces communicate robot 
description implementation mixed hardware software design 
hardware contains mainly spiking network 
software executed cpu takes care interfacing network outer world robot user os 
architecture shown includes cpu neural network layer configuration layer network interface 
function part described 
cpu bit cpu synthesized fpga interfaces network rest system 
includes communication robot sending motor commands reading sensors ttl compatible serial communication line khepera robot 
cpu communicates host pc sending monitoring infor 
system architecture 
neural network layer contains cellular spiking network 
configuration layer holds configuration network layer 
network interface allows write read activity neurons 
cpu handles communication khepera 

configuration layer holds functionality neuron 
implemented writeable array registers 
contents register sent function input corresponding cell 
mations 
cpu run spiking network example monitor activity step step match speed rest system 
cpu interprets chromosome running signaling expression phases morphogenetic system 
configures network accordingly mean configuration layer 
configuration layer clarify architecture configuration layer separate network layer 
configuration layer see fig 
holds information controlling functionality cell neuron case network layer 
configuration layer implemented array registers register cell 
contents registers connected function input cell 
row 
cell architecture implementing spiking neuron 
main parts register holding membrane potential value connectivity mask block addend block leakage normalization block control unit 
inputs allow select specific register means decoders written cpu wr inputs neural network layer neural network layer composed array cells implement spiking neurons outlined boxes network layer fig 
cells 
cells connected design time set neighbouring cells express connectivity patterns described previously th input external input neuron 
shows architecture cell implement spiking neuron 
control inputs clock enable reset allow run pause reset network 
inputs connected neurons inn convey incoming spikes ins insn indicate type connected neurons spike sign 
input tells neuron connectivity pattern type neuron 
outputs output spike sent outs type current neuron defined 
spiking neuron contains bit register holding membrane potential 
register size defined number inputs maximum weights inputs weight external input weight 
inputs time multiplexed 
number clocks network step equal total number inputs 
control unit charge generating necessary sequence multiplex inputs clock cycles update register contribution inputs 
clock cycle output updated emission spike register threshold register loaded content leakage normalization block 
block decrements value register threshold leakage resets register value threshold 
generation proper run time connectivity done connectivity mask unit 
generates connectivity mask input implemented look table 
connectivity mask anded inputs give effective input spikes 
signs multiplexed sent addend block 
block generates value added register means multiplexers 
control unit indicates addend block handles input external input fixed weight inputs weight depending sign 
network interface network interface composed types units fig 
allow network run minimal software intervention 
unit spike generator frequency programmable generator spikes feed sensory informations network spike frequency proportional activation sensor 
second unit activity measure measures average activity connected neuron time window 
allows actuate effectors proportionally firing rate neuron network updated times reading activity measurement unit 
implementation results behaviour system tested generating random networks applying random inputs comparing spike trains neuron software implementation 
place route timing analysis gives theoretical maximum frequency mhz 
network update requires clock cycles 
operating frequency fpga module mhz gives millions updates second 
table summarizes number logic elements le longest register register delay complete system main blocks 
data main blocks obtained standalone compilation blocks 
synthesis optimizations may reduce resource blocks part complete system 
case neuron uses le standalone part network neurons resources le neuron 
clearly network configuration layer space le le system optimizations 
entity resource longest le delay complete system ns cpu incl 
uart ns network interface ns net 
config 
layer cells ns single neuron ns table 
number logic elements longest register register delay place route complete system main blocks compiled individually 
network interface composed spike generators activity measurement blocks 
significant amount delay introduced neurons interconnected network configuration layer longer register register delay single neuron 
may performance bottleneck study needed identify causes delay decreased 
robot obstacle avoidance spiking network evolved controller khepera miniature robot obstacle avoidance information coming infra red sensors 
fitness functions seeks maximize forward speed distance obstacles minimize rotation 
system shown composed array neurons 
sensory groups cells connected infrared sensors spike generators 
cells connected activity measurement units set speeds wheels 
robot runs sensory motor period ms 
period network updated times 
sensory motor period spike generators programmed reflect new activity infra red sensors sensory motor period 
distance obstacles low activity input neurons low high activity sensory group receive spike train period spike time steps 
units charge measuring activity output neurons read speed wheels updated accordingly 
minimum activity neuron sets speed wheel mm maximum activity sets speed mm speed wheels scales linearly 
note speed wheels inversely proportional activity output neurons allows robot move forward obstacles sensed potentially activity network 
alternatively avoid introducing engineering knowledge bias neurons constantly firing 
application hardware spiking network 
objective perform obstacle avoidance sensory information coming proximity sensors robot sent input neurons 
output neurons control speed wheels 
neurons placed system provide activity time 
previously evolution performed software simulation network real robot determine parameters system coding input outputs 
software simulation hardware oriented language systemc written 
constructs easily implemented hardware software model neuron hardware model 
test hardware network chromosomes best individuals obstacle avoidance task downloaded cpu programs network accordingly 
experiments show fitness behaviour robot hardware network similar software network 
variations depend experimental factors initial position robot 
discussion described continuation previous research 
novelty resides development compact fpga module standalone robot extension hardware implementation spiking neural network 
hardware implementations spiking neurons proposed analog digital circuits 
analog implementations require transistors energy efficient 
cited digital implementations specialized accelerator chips focus high speed 
project particularly interested speed limiting factor speed movement robot interested exploring evolution multi cellular structures 
system differs notably previous architectures cellular nature necessary logic behaviour cell resides cells architecturally identical 
custom fpga module demonstrated khepera robot 
module tied khepera robots standalone fashion 
high network update speed obtained clock cycles necessary updating network neurons means mio updates sec operating frequency mhz 
number clock cycles network update independent number neurons system 
departs software implementation update time scales number neurons 
network total connections 
software instruction clock cycle needed process connection result clock cycles network update 
case hardware version orders magnitude faster software version identical clock speeds 
high update speed interesting 
example character recognition systems postal addresses voice recognition systems fast throughput needed 
robotic application network needs updated millisecond 
slowed disabling part time 
cases network speed critical space optimizations considered 
resources scale linearly number neurons 
neuron model minimalistic permits compact implementations 
believed implementation quite efficient space optimization may possible 
neurons obstacle avoidance 
previously investigated applications may implemented hardware need amount neurons pattern recognition 
current neuron model lacks capacity adapt learn 
models richer dynamic learning described applied recognition moving patterns 
optimizations simplifications proposed hardware implementations 
network connectivity evolved software simulations network 
implementing genetic algorithm measuring fitness cpu fpga complete evolution robot remains done fairly straightforward 
decoded hardware obtain function cell 
done configuration layer means signaling expression units 
alternate signaling mechanisms take account environment may render system robust allow runtime relocation sensors actuators 
network change connectivity runtime reconfigure fpga circuit implemented 
devices exist allow fast reconfiguration xilinx virtex 
appropriate software xilinx possible modify partially configuration fpga run time 
fpga reconfiguration may increase flexibility system 
miniature system described article limited memory computational power embedding manufacturer tools reconfiguration impossible 
cellular implementation spiking neural network particularly suited custom hardware cell functional block embryonic style circuits 
hardware uses cellular approach provide self repairing substrate cells differentiate coordinates cellular system 
faults detected pp 
coordinate system altered avoid faulty cell 
spiking network described principle cells suit nicely embryonic substrate 
may add interesting property self repair network 
cellular spiking neural network reconfigurable connectivity implemented fpga 
array neurons implemented demonstrated task obstacle avoidance khepera robot 
cellular spiking network suited new circuit development poetic circuit 
poetic circuit meant platform test bio inspired mechanisms 
multi cellular electronic circuit composed regular array cells functional units 
includes hardware features implement evolution development learning 
po circuit reprogrammable functionality comes configuration bits genotype easily evolved 
implement development complete genome system stored cell allowing growth self repair 
addition cell virtual input output connections sensors actuators 
furthermore poetic circuit dynamical routing mechanism connections components built automatically run time 
dynamical routing launched logic elements external controller 
powerful feature exist conventional fpgas physical connections planned design time compilation tools place components fpga connect available resources 
possibility change connections fpgas allow partial reconfiguration exploited extreme care avoid short circuits 
dynamical routing cells need connected physically design time 
dynamical routing relies identifiers mark source target cells builds necessary connections run time 
cells ask run time build new connections originally planned 
network described run time reconfigurable connectivity extent planned design time 
dynamical routing connectivity patterns spiking network built automatically needed new connectivity patterns explored run time 
greatly increase richness connectivity compared current approach 
area required dynamical routing mechanism conventional fpga large po circuit contain dynamical routing mechanism free part architecture 
platform choice implement cellular neural networks reconfigurable connectivity 
implementations considered 
acknowledgments authors wish jesper comments members poetic team 
project funded emerging technologies programme ist fet european community ist poetic 
information provided sole responsibility authors reflect community opinion 
community responsible data appearing publication 
swiss participants project funded swiss government 
altera san jose ca 
embedded processor development board data sheet march ver 

applied ai systems ontario canada www aai ca 
coen 
art genes 
oxford university press new york 
di paolo 
spike timing dependent plasticity evolved robots 
adaptive behavior 
eggenberger 
cell interactions control tool developmental processes evolutionary robotics 
maes mataric 
meyer pollack wilson editors animals animats proceedings fourth international conference simulation adaptive behavior pages cambridge ma 
mit press bradford books 
eriksson torres mitchell tucker lindsay halliday rosenberg 
moreno villa 
spiking neural networks reconfigurable poetic tissue 
tyrrell editors proceedings fifth international conference evolvable systems biology hardware pages berlin 
springer 
floreano 
evolution spiking neural controllers autonomous vision robots 
editor evolutionary robotics iv pages 
springer verlag berlin 
floreano 
evolutionary bits spikes 
proceedings artificial life viii 
mit press 
gerstner kistler 
spiking neuron models 
cambridge university press 
gruau 
automatic definition modular neural networks 
adaptive behavior 
tufte 
bridging genotype phenotype mapping digital fpgas 
stoica editors third nasa dod workshop evolvable hardware pages los alamitos california 
ieee computer society press 
hartmann frank sch fer wolff 
spike accelerator dynamic simulation large pulse coded networks 
proceedings pages dresden 
douglas 
robotic vision vision sensors 
science 
team pr switzerland www com 
net communication protocol specifications 
team pr switzerland www com 
khepera user manual 
kumar bentley 
biologically inspired evolutionary development 
tyrrell editors proceedings fifth international conference evolvable systems biology hardware pages berlin 
springer 
lewis etienne cummings cohen hartmann 
control custom chips 
proceedings international conference robotics automation 
mange 
bio inspired computing machines 
lausanne 
mead 
analog vlsi neural systems 
addison wesley reading ma 

moreno ar sanchez 
system routing strategy evolvable hardware programmable platforms 
stoica editors third nasa dod workshop evolvable hardware pages los alamitos california 
ieee computer society press 
floreano 
morphogenetic evolutionary system poetic tissue 
tyrrell editors proceedings fifth international conference evolvable systems biology hardware pages berlin 
springer 
schoenauer 
chip digital neuro processor spiking neural networks 
ieee transactions neural networks 

virtual reconfigurable circuits real world applications evolvable hardware 
tyrrell editors proceedings fifth international conference evolvable systems biology hardware pages berlin 
springer 
stauffer mange 
self healing electronic watch 
liu tanaka iwata higuchi editors proceedings fourth international conference evolvable systems biology hardware pages berlin 
mange stauffer 
electronic tissue prototyping bio inspired systems 
stoica katz editors proceedings nasa dod conference evolvable hardware pages 
ieee computer society los alamitos ca 
sanchez tyrrell 
ontogenetic development fault tolerance poetic tissue 
tyrrell editors proceedings fifth international conference evolvable systems biology hardware pages berlin 
springer 
sanchez 
moreno 
dynamic routing bio inspired reconfigurable circuit 
submitted th international conference field programmable logic fpl 
thompson 
evolved circuit intrinsic silicon physics 
higuchi iwata editors proceedings international conference evolvable systems biology hardware pages berlin 
springer 
torres eriksson moreno villa 
hardware optimization serial implementation novel spiking neuron model poetic tissue 
submitted 
torres eriksson moreno villa 
optimization novel spiking neuron model poetic tissue 
accepted publication 
tyrrell sanchez floreano mange 
moreno rosenberg villa 
poetic tissue integrated architecture bio inspired hardware 
tyrrell editors proceedings fifth international conference evolvable systems biology hardware pages berlin 
springer 
xilinx xilinx web site www xilinx com 
xc field programmable gate arrays 
datasheet april 
yao 
review evolutionary artificial neural networks 
international journal intelligent systems 
