quality reliability engineering international qual 

engng 
int 
doi fighting fire fire randomized gossip combat stochastic scalability limits gupta kenneth birman robbert van renesse cornell university ithaca ny usa summary mechanisms improve reliability distributed systems limit performance scalability 
focusing widely definition reliability explore origins phenomenon conclude reflects tradeoff arising deep typical protocol stack 
specifically suggest protocol designs disregard high cost infrequent events 
distributed system scaled frequency cost events grow size system 
triggers phenomenon visible threshold sizes 
findings suggest effective construct large scale reliable systems traditional protocol stacks lower layers randomized mechanisms probabilistic guarantees overcome low probability events 
reliability properties introduced closer application 
employ back envelope analysis quantify phenomenon class strongly reliable multicast problems 
construct non traditional stack described implements virtually synchronous multicast 
experimental results reveal virtual synchrony nontraditional probabilistic stack helps break scalability barrier faced traditional implementations protocol 
copyright john wiley sons key words group communication reliable multicast scalability randomized algorithms non traditional stack virtual synchrony 
scalability distributed protocols systems major determinant success demanding settings 
focuses scalability distributed protocols group communication systems providing form guaranteed reliability 
examples include virtual synchrony protocols reliable group communication scalable reliable multicast srm reliable multicast transport protocol rmtp 
argue usual architecture supporting reliability exposes mechanisms sort serious scalability problems 
reliability understood point correspondence birman department computer science cornell university upson hall ithaca ny usa 
email ken cs cornell edu contract sponsor darpa afrl contract number contract sponsor nsf cise contract number contract sponsor afrl information assurance institute contract sponsor microsoft research contract sponsor intel copyright john wiley sons spectrum possible guarantees 
extreme spectrum finds costly strong guarantees example byzantine agreement support replicated state machines 
replicated database systems represent step direction weaker cheaper goals copy serializability typically implemented form multiphase commit quorum read write mechanism 
lamport paxos architecture consensus approach chandra toueg achieve similar properties 
virtual synchrony model focus weakest cheapest approach rigorously specified modeled reasoned 
point spectrum finds best effort reliability models lacking rigorous semantics typical modern internet srm rmtp nature 
usual assumption weakest reliability properties cheapest achieve scalable 
surprising finding usual belief incorrect 
traditionally discusses reliability posing problem setting exposed class faults 
fault tolerant protocols solving problem gupta compared 
protocols cited provide multicast tolerance message loss endpoint failures discussions behavior typically look throughput latency normal conditions message complexity background overheads degree failures disrupt properties 
oddly thorough performance analyses generally focus extremes performance protocol ideal conditions goes wrong performance impact injected failures disrupt execution 
adopts different perspective looks reliable protocols influence called mundane transient problems network processor scheduling delays brief periods packet loss 
expect reliable protocols ride events find rarely case particularly look impact disruptive event function scale 
fact reliable protocols degrade dramatically type mundane stress phenomenon attributable events frequent costly scale system grows 
presenting arguments shift attention old class protocols resemble nntp gossip algorithm propagate news internet 
turn scalable style analysis predicts poor scalability non gossip counterparts 
finding leads suggest protocol designers fight fire fire employing probabilistic techniques impose constant low system wide cost overcome infrequent system wide problems 
particular employ probabilistic reliability mechanisms lower levels protocol stack employing higher level layers send additional messages 
different traditional protocol stacks attempt achieve reliability lower layers 
case reliable multicast yields style protocol different traditional receiver driven reliability virtual synchrony solutions 
approach reflects tradeoffs resulting protocols somewhat slower small scale configurations faster stable large ones 
test hypothesis applying approach virtually synchronous multicast protocols 
traditional implementations virtual synchrony amoeba ensemble eternal bus isis horus phoenix rampart transis totem provide performance small group sizes members partition away break larger group sizes 
specification popular builders distributed systems systems mentioned widely settings swiss stock exchange french air traffic control system 
noted earlier interest model stems popularity appears weakest models offers rigorous guarantees 
back envelope analysis try quantify growth rate disruptive overheads model 
analysis reveals traditional stacks inherently limits scalability protocols gray reach similar respect database scalability 
propose analyze experiment nontraditional stack implementation virtually synchronous reliable multicast 
analysis experiments reveal probabilistic stack scales larger group sizes traditional give throughput small group sizes 
encounter limits scalability far severe standard implementations model 
section detail problems traditional reliable protocol stacks 
sections outline proposal build lower stack layers gossiping mechanisms 
sections analyze evaluate performance traditional new non traditional stack virtual synchrony 
section summarizes findings 

scalability reliability reliable multicast comes flavors 
section considers points spectrum studying scalability properties 
look virtual synchrony model 
model offers strong faulttolerance consistency guarantees user including automated tracking group membership reporting membership changes members faulttolerant multicast various ordering properties 
scalability studied previous horus system briefly summarize findings point number issues 
believe problems fundamental way virtual synchrony usually implemented similar experiments yielded similar results systems class 
discuss multicast protocols reliability receiver driven group membership tracked explicitly sender consequently unaware set processes receive message 
receivers responsible joining copyright john wiley sons qual 

engng 
int 
group actively solicit retransmissions missing data 
systems community generally assumed protocols weaker reliability goals scale better known examples include reliable group multicast system rmtp srm tib srm described greatest detail simulation available focus protocol 
surprisingly protocol scales poorly virtually synchronous slightly different reasons 
believe phenomena limit scalability protocols class 
finding leads draw general motivate remainder 

throughput instability consider illustrates problem familiar users virtually synchronous multicast 
graph shows throughput sustained various sizes process groups members measuring achievable rate sender attempting send messages group 
experiment produced sp cluster hardware multicast 
graph impact perturbation throughput group optimized implementation set throughput records protocols class 
single group member selected forced sleep randomly selected ms intervals probability shown axis 
throughput value calculated unperturbed process successive throughput samples gathered ms period 
message size kbyte 
data gathered cluster style parallel processor similar results obtained lans reported 
focusing member case see group sustain throughput messages case members perturbed 
perturbed member experiences growing disruption throughput group eventually impacted 
problem arises virtual synchrony reliability model forces sender buffer messages members group acknowledge receipt perturbed member responsive message buffer fills throughput affected 
flow control sender limit transmission bandwidth 
experiment employed fixed amount buffering space sender 
mind application designer consider adjusting buffering fighting fire fire messages second group size group size group size degree perturbation 
throughput instability 
throughput instability grows reliable multicast protocol scaled large group sizes parameters system increase sender side buffer capacities designing application communicate asynchronously hope underlying communication system delays tcp sliding window conceals temporary rate mismatches sender receiver 
strategy succeed 
notice fixed degree perturbation performance drops function group size primarily linear time required phase commit protocol multicast result knee curve shifts left scale members performance degrades member sleeping little time members impact dramatic 
perturbation introduced experiment event real system random scheduling paging delays easily cause process sleep ms time behavior arise network loaded messages delayed lost 
small amount perturbation common platform shared applications especially machines lack adequate main memory poor cache hit rates employ slow network links 
graph suggests strategy focused sender side buffering apparently need buffering space grow linearly group size just perturbed member 
means presence unreliable hardware multicast observe trends similar 
note similar results obtained multiple processes subjected perturbation network disrupted injecting packet delays losses 
throughput graphs differ trend unchanged 
copyright john wiley sons qual 

engng 
int 
gupta fact buffering required worse linear group wide perturbation rate tends rise linearly group size 

faced sort problem system designer needs reliably sustain steady data rate consider setting failure detection thresholds system aggressively function scale 
idea knock slow receiver allowing group sustain higher performance 
reader unfamiliar virtually synchronous multicast need failure detection aggressive function system size may particularly serious 
step precisely thing wants scalable reliable group multicast system 
problem systems membership changes carry significant costs 
time process dropped group group needs run protocol synchronized respect multicast stream adjusting membership reporting change members 
problem gets worse failure detector parameterized aggressively dropped processes need rejoin 
erroneous failure decisions involve particularly costly leave rejoin event 
term group non crashed member effectively partitioned away group partition size 
effect setting failure detection parameters aggressively scaling system approach state group may continuously experience phenomenon akin thrashing 
aggressive failure detection mechanisms ensuring process dropped minor perturbations brings domain typical healthy process significant probability dropped resulting noise 
note problem expected grow square size group 
frequency mistakes linear size group cost membership change systems sort linear group size 
section observation 
phenomenon familiar designers large reliable distributed systems 
example developers swiss exchange trading system schemes failure detection rate erroneous failure detections grows member failure member :10.1.1.20.5411
electronic stock exchange isis toolkit comment forced set failure detection aggressively turn limited number machines handled hub architecture 

possible response scalability problem structure large virtually synchronous systems hierarchically tree process groups 
unfortunately hierarchy levels deep option limited random events disrupting performance 
consider small group processes process sending data steady rate focus delivery rate healthy receiver 
number reasons rate somewhat bursty data artificially delayed 
example messages lost discarded may arrive order normally reliable multicast system forced delay subsequent messages missing ones retransmitted 
sender may forced flow control 
messages may pass router typically impose dynamics data stream 
illustrated data enters hierarchical group steady rate illustrated evenly spaced black boxes layer layer bursty 
phenomenon widely known convoy phenomenon 
new level group amplifies burstiness data input source 
notes problem particularly severe upper levels hierarchy maintain multicast ordering property totally ordered message delivery 
messages arrive order property forces delays results delivery burst ordered messages gap filled layer sees bursty input trigger flow control mechanisms original flow required flow control 
top level group multicasts high data rate gaps bursts represent dead time effectively reduce available bandwidth bursts exceed available bandwidth 
suggests remedies 
hierarchical systems designed enforce weak ordering properties near sender stronger guarantees close receiver 
design point explored practice part ordering reliability hard separate 
second option involves delaying messages copyright john wiley sons qual 

engng 
int 
messages sender messages receiver 
message 
message hierarchical groups receipt layer layer absorb expected degree rate variations 
demand huge amount buffering delays large 
concludes lacking mechanisms large process groups perform poorly 

request retransmission storms speculate problems seen specific virtual synchrony reliability model 
researchers studying srm protocol observed related scalability phenomenon 
srm reliable multicast protocol uses receiver driven recovery mechanism onus falls receiving process join transmission group ip multicast group internet collecting data request retransmissions missing data 
srm model called application level framing basically extends model multicast domain 
idea ip multicast layer oblivious protocol srm request retransmission mechanisms reside application library 
consequence protocol uses ip multicast send messages retransmission requests retransmissions ip multicast layer oblivious manner 
control available protocol value time live ttl field limits number hops taken packet dropped 
fighting fire fire ip multicast unreliable protocol multicast packet dropped router sender operating system fail reach large numbers receivers usual situation 
avoid subjecting full set participants storm requests retransmissions srm uses timer delay scheme reminiscent exponential backoff 
processes delay requests missing data randomly selected period time calculated subtree ip multicast group drops message request issued data retransmitted 
protocol uses ttl values manner intended restrict retransmissions region data loss occurred 
unfortunately studies shown srm tactics effective hoped particularly large networks hundreds thousands members subject low levels random packet loss link failures 
simulation studies demonstrated conditions large percentage packets sent trigger multiple requests turn triggers multiple multicast retransmissions 
data shown reflects problem similar findings reported 
ns includes simulation srm including adaptive mechanisms graph rate requests retransmissions repairs retransmissions groups various sizes 
constructed simple level tree topology injecting byte messages setting parameters recommended srm developers 
set system wide message loss probability link measured overhead typical processes topologies noise rates get similar graphs 
intuition basic srm mechanisms ultimately probabilistic 
network large frequency low probability events grows linearly size network 
example network scales processes apart may independently experience packet loss 
symmetry probability independently simultaneously requesting retransmission srm scalable session messages variability network latency may request inhibits 
process receives request copy multicast buffers probability resending 
inhibitory mechanism probable process may 
network scaled copyright john wiley sons qual 

engng 
int 
gupta 
srm scalability 
size group increases low level background noise case trigger high rates requests left retransmissions right srm protocols group member 
duplicates 
notice data rate held constant size group increased experiments global frequency low probability events rises begins observe growing numbers requests multicast packet 
depending network topology request may result multiple retransmissions actual data 
problem evident simple tree construct star topology experimental setup srm sends roughly repairs request 
duplicates 
aggregate overhead rises group size effect considerably worse linear note srm reliability goals weaker virtual synchrony encounter mechanism costs linear system size frequency growing linearly system size 
intuition suggest srm weaker goals virtual synchrony cheaper scalable see srm scalability better virtual synchrony implementations studied 
observe throughput degradation experienced virtual synchrony protocols unique reliability model 
case srm problems described contribute growth background load seen unstable throughput shown overload routers degree appear reader adjusting backoff timing parameters aggressively srm protocol reduce overhead 
unfortunately doing results linear increase multicast dissemination latency 
system wide packet loss rate rise sharply 
occur scale driven performance collapse 
issues described seen reliability mechanisms 
brevity limits discussion difficult see similar problems arise rmtp publish subscribe message bus protocols tib large scale multicast architectures course published descriptions systems 
forward error correction fec pro active mechanism sender introduces redundancy data stream receiver reconstruct lost data 
fec node send copies multicast leading throughput limitation similar traditional multicast protocols 

bimodal multicast protocols suffer behavior seen reliable mechanisms 
particular bimodal multicast protocol reported scales quite easily rides phenomena cause problems approaches 
bimodal multicast gossip protocol closely resembles old nntp protocol employed network news servers runs higher speeds 
protocol sub protocols 
unreliable data distribution protocol similar ip multicast fact ip multicast copyright john wiley sons qual 

engng 
int 
purpose available arrival message enters receiver message buffer 
messages delivered application layer fifo order garbage collected message buffer period time 
second sub protocol repair gaps message delivery record operates follows 
process system maintains list containing random subset full system membership 
practice weight list contain primarily processes close processes accessible low latency links 
details go scope current refer reader 
rate synchronized system participant selects processes membership list random sends digest current message buffer contents 
digest normally just list messages available buffer example messages sender 
receipt gossip message process compares list messages digest message buffer contents 
depending configuration protocol process may pull missing messages sender gossip sending retransmission solicitation push messages sender sending unsolicited retransmissions messages apparently missing process push pull 
simplified description omits number important optimizations implementation protocol 
unreliable multicast regional ttl value unicast situations multiple processes missing copies message 
weighting scheme employed balance loads links gossip performed primarily nearby processes links rarely remote processes costly links may share individual routers 
protocol uses gossip pull gossip push old messages young ones 
message need buffered process hashing scheme spread buffering load system effect average message buffered processes guarantee reliability average buffering load participant decreases increasing system size 
details available 
bimodal multicast imposes loads multicast participants logarithmic system ip multicast disabled modern networks bimodal multicast runs lightweight unicast tree management multicasting mechanism design 
fighting fire fire size protocol simple implement inexpensive run 
important perspective protocol overcomes problems cited earlier scalable protocols 
bimodal multicast tunable reliability matched needs application basically reliability increased increasing length time message garbage collected time typically varies logarithm group size 
protocol gives steady data delivery rates predictable low variability throughput 
soft real time applications extremely useful 
protocol imposes constant loads links routers configured correctly avoids network overload system scales 
properties preserved size system increases 
reliability guarantees protocol midway strong guarantees virtual synchrony weaker best effort guarantees protocol srm system tib 
digress detailed discussion nature guarantees probabilistic interesting note behavior bimodal multicast predictable certain simple properties network runs 
network information required robust networks internet statistics heavytailed distributions infinite variance 
gossip protocols tend driven successful message exchanges quartile half network statistics 
contrast protocols srm rmtp include round trip estimates mean latency mean throughput nodes estimates problematic internet statistical distributions heavy tailed means large variances 
bimodal multicast just presentations gossip data replication mechanisms 
similar protocols lazy database consistency failure detection data aggregation ad hoc networking settings :10.1.1.20.5411
purposes scalability configuration protocol interesting issue 
compares performance bimodal multicast primitive srm adaptive srm similar noise conditions underlying network 
plot shows srm imposes overheads group member increases linearly group size load due bimodal multicast logarithmic group size 
studies shown similar advantages copyright john wiley sons qual 

engng 
int 
gupta repair requests sec bimodal multicast srm system wide constant noise tree topology adaptive srm srm group size retransmissions sec bimodal multicast bimodal multicast group size adaptive srm 
bimodal multicast 
bimodal multicast imposes member overheads logarithmic group size 
versions srm impose linear load shown bimodal multicast rmtp 
reader encouraged refer papers extensive comparative studies 

findings far providing stronger guarantees generalize phenomena described 
distilling simplest form elaborating slightly obtain 
exception bimodal multicast protocol reliability models involves costly infrequent fault recovery mechanism 
traditional virtual synchrony protocols employ sender side buffering flow control failure detection membership change protocols cost proportional size group 
srm solicitation retransmission mechanism involves multicasts duplicate solicitation retransmission occurs participants process extra message 
fec tries reduce retransmission requests sender encoding redundancy data stream 
multicast sender responsibility transmit redundant copies results scalability limitations similar traditional protocols 
protocols reviewed potentially risk convoy behaviors 
data injected network constant rate spreads network router scheduling delays link congestion communication load bursty 
phenomenon observed hierarchical implementations virtual synchrony seen comparable bimodal multicast virtual synchrony running bimodal multicast 
protocols srm rmtp depend configuration mechanisms sensitive network routing topology 
time network routing change ways take protocol increasingly far optimal case probabilistic mechanisms recover failures increasingly expensive inaccurate 
periodic reconfigurations obvious remedy introduce disruptive system wide cost 

general insight general insight drawn observations 
reliable multicast protocols depend assumptions usually hold may small probability violated 
system copyright john wiley sons qual 

engng 
int 
srm scales frequency violations grows 
protocols typically form recovery mechanism potentially global cost 
system scales cost grows 
protocols built layers protocol stack 
problems cited arise lowest layers propagate higher layers triggering large scale disruptions performance 
sender side responsibility reliable multicast dissemination direct outcome traditional stack architecture 
broadly argue consequences protocol stack architecture reliability provided lowest layers stack randomized phenomena threats performance property guaranteed system 
insight scale system larger larger settings absolute frequency probabilistic events rises performance system degrades 

solution non traditional stack architecture envision protocol stack lower layers randomized strategies bimodal multicast fight random network events layers closer application guarantee reliability required application 
believe stack help fight fire random network unreliability events fire randomized algorithms lower layers guaranteeing performance large distributed group sizes placing reliability requirement layer closer application 
problems difficult solve considered inherently unscalable virtual synchrony new probabilistic stack suffer limitation give better scalability traditional stacks 

scaling virtual synchrony sections attempt validate hypothesis attacking problem achieving virtual synchrony distributed process groups 
informally virtual synchrony maintained process group group member application process virtual synchrony stack sees multicast events group membership changes called view change fighting fire fire order 
simplicity require multicast events system seen group members effectively allow broadcasts group 
virtual synchrony strong reliable multicast model implementing model known hard solving distributed consensus 
practical point view power model accounts popularity easily implement highperformance versions state machine algorithms 
high performance primary reason model obviously hope performance sustainable size group scaled 
back envelope scalability analysis try quantify question section 
analyze possible implementations traditional implementation reliable multicast lower layers non traditional stack bimodal multicast lower layer 
analysis section reveals approaches inherently suffer degradation throughput multicasts second increasing group size reasonable assumptions characteristics underlying network nodes 
analysis reveals new probabilistic stack approach potentially scales better traditional stack 
leads evaluate hypothesis designing building testing nontraditional stack virtual synchrony 
describe architecture system section experimental findings section 
findings support hypothesis report stable throughput performance group sizes larger traditional virtual synchrony protocols far able achieve 

scaling virtual synchrony back envelope analysis section presents back envelope analysis different implementations virtual synchronous multicast 
analysis seeks identify scaling trends different protocols ignores constants asymptotic estimates 
section discusses behavior traditional unicast implementation virtual synchrony isis system 
section examines properties virtual synchrony non traditional protocol stack 
simplicity analysis section assumes presence second sub protocol bimodal multicast see section gossip copyright john wiley sons qual 

engng 
int 
gupta table 
parameters back envelope analysis total number group members number senders group total non negative throughput group multicasts individual member failure rate pml probability multicast delivery failure simplicity assumed independent messages recipients maximum network bandwidth allotted group member push dissemination 
henceforth shorthand pbcast probabilistic broadcast phase bimodal multicast 
notation shown table rest analysis 
pml network message loss probability traditional stack analysis section 
pbcast section pml derive message reliability function number gossip rounds multicast specify concretely needed 
pml assumed uniform independent messages order simplify analysis results analysis hold parameter loss rate messages system 
analysis considers constant number senders 
number senders varies group size message load receiver side members difficult characterize message losses due buffer overflows accounted analysis 

virtual synchrony unicast implementation 
consider virtual synchrony implemented entirely unicast messages traditional systems isis 
approach multicast layer lower layer attempting reliably multicast messages unicast pointto point messages multicasting 
higher layer uses multiphase commit protocols change membership 
optimal non negative throughput achievable implementation expressed follows term right hand side comes effective time left transmitting useful multicasts obtained discounting time group blocked changing views 
number view changes unit time time taken verify view group members 
second term simply rate particular member transmit messages check arises constant buffering member traditional virtual synchrony implementation 
equation gives max note numerator negative throughput goes zero 
actual implementation nonfaulty group member verifies stability multicasts directly group members view changes 
similar explanation view change involves updating membership term repairing holes received message list view group members term 
gives max pml fairly close optimal throughput analysis reveals virtual synchrony model faces inherent scalability problem due cost view changes term 
effect throughput sender side multicast responsibility results unscalable throughput term denominator 
result problem state machine replication weaker virtual synchrony extra cost view changes sender side responsibility reliable multicast group throughput unscalable 

virtual synchrony implemented pbcast 
consider virtual synchrony implementation uses distributed multicast dissemination mechanism repairing holes copyright john wiley sons qual 

engng 
int 

new non traditional stack virtual synchrony higher virtual synchrony layer 
shows example stack dissemination mechanism pbcast primitive 
higher layer repairs holes multicast message stream delivered pbcast layer 
ordered stream multicasts delivered layer application layer 
ignore cost view changes analyze optimality different multicast dissemination schemes lower layer reliable multicast applications member receive copy multicast global order 
optimality calculated respect tradeoff number multiple copies multicast received typical group member number repairs transmitted upper layer protocol stack order guarantee reliability 
analysis applies problems state machine replication 
analyze achievable throughput stronger virtual synchrony model accounting cost view changes 
abstractly number copies single multicast member receives lower dissemination layer 
pbcast implementation member gossips multicast log gossip rounds randomly chosen targets log 
maximize throughput want minimize number copies multicast member receives multicast dissemination layer number repairs sent upper protocol layer order repair holes message delivery stream multicast dissemination layer 
second term pm mln pm ml likelihood member receiving copies multicast 
expression fighting fire fire minimized mln setting dl dm log log pml log pml log exactly pbcast primitive achieves member gossiping multicast log gossip rounds 
primitive provably optimal multicast dissemination mechanism respect minimum load participants required achieve reliable delivery 
surprisingly implementations reliable multicast isis horus style stack srm behavior characterized similar analysis 
horus dissemination layer consists member verifying stability message member higher layer repairing holes 
srm member receives multiple copies multicast repairs linear group size 
value expression obtained setting 
analysis mechanisms lower multicast dissemination protocol layer gives provably suboptimal implementation reliable multicast 
analyze achievable throughput implementation virtual synchrony implemented pbcast depicted analysis adds cost view changes effect throughput 
optimal throughput implementation log log optimal rate multicast disseminated group members message losses 
gives max log asymptotically higher optimal throughput traditional implementation virtual synchrony obtained equation 
notice throughput independent number senders 
real implementation stack need repair message holes view changes 
propose leader committee copyright john wiley sons qual 

engng 
int 
gupta 
virtual synchrony scales better pbcast pbcast traditional stack traditional 
curves plotted represent equations members call committee purpose 
committee maintains virtual synchrony group members may virtual synchrony 
multicasts communicated committee attain stability assigned global sequence number gossiped group sender 
committee membership migrate members members time 
committee elected committee election strategies literature 
failure committee member result inclusion non faulty member committee 
failure non committee member seen event entire committee 
kinds failures result view changes committee members receive view notification just multicast pbcast primitive 
note scheme fault tolerant committee member failures tolerate number faults general group membership 
number gossip rounds multicast survives gossiped group garbage collection log number rounds multicast gossiped 
define pml pbcast delivery loss probability log group member 
pml 
ml throughput scheme expressed pml kb log max log pml approach scales optimal adjusted log pml pml constant smaller 
rises fall slowly notice optimal calculations equations traditional probabilistic non traditional stack approaches virtual synchrony inherently scalable grows approach fixed go zero 
phenomenon remains scaled linearly notice optimal throughput virtual synchrony asymptotically better non traditional stack 
plots throughput equations equations purposes comparison trends throughput degradation values mean equations lack constants 
figures show small copyright john wiley sons qual 

engng 
int 
number senders rising group size nontraditional stack approach pbcast degrades gracefully traditional implementation 
traditional implementation appears improve number senders increases approach limited group size scalability 

algorithm description section give details implementation non traditional stack committee 
approach bears resemblance kaashoek token approach approach algorithmic differences 
multicast sender member goes stages shown 
layer sender sends message member request assign global sequence number message 
message assigned global sequence number total ordering leader committee 
receiving information ack message layer sender submits message pbcast layer underneath dissemination gossiping 
insofar pbcast layer guarantee multicast messages reach group members need mechanism overcome possible packet loss 
accordingly layer member times receive sequence multicast time 
layer requests repair leader committee members henceforth fighting fire fire 
stages sending multicast group call repair sub protocol 
frequency repairs minimized reliability characteristics pbcast layer 
periods multicasts sent repair protocol timeout members increased order avoid repair implosion leader 
timeout small isolated sporadic multicast discovered lost pbcast layer 
currently vary timer minimum ms high rate multicasts received maximum multicasts infrequent 
view changes initiated leader committee 
traditional virtual synchrony mechanisms view changes initiated periodically member failure 
delays reporting new views reduces impact view change events throughput 
view change consists phases shown 
leaders establish membership leader committee 
leader committee multicasts message group pbcast primitive 
non faulty group members reply back message 
leader committee waits time implementation agrees group membership view multicasts message multicast pbcast layer 
message specifies changes group membership assigned copyright john wiley sons qual 

engng 
int 
gupta available global sequence number 
newview message multicast group guaranteed delivery repair sub protocol 
preserves total ordering view change respect multicasts view changes 
view change mechanism shortcomings notable possibility ack implosion leader committee members 
solution technique members defer messages randomly time 
periodic view changes reduce overhead view change failure result increasing time view change increase linear group size experiments show typically small absence perturbed failed member see section 
periodic view change offers checkpoint messages garbage collected members 
approach single state transfer initialize multiple new members opportunity evaluated 
gossip style failure detection service epidemic style membership help eliminate phase view change mechanism :10.1.1.20.5411
substantially affect group multicast throughput failure detection gossips compete multicast gossips pbcast layer 
exploration areas goal left study 
note multicast sending member learns view message delivered 
anatomy view change group receives ack leader committee message 
keeping specification original isis protocol 
multicast dissemination repair sub protocol blocked view changes order reduce number involuntary member 
leader committee delays pending req messages view change process 
loss req messages view changes committee members lead phenomenon similar convoy problem described section 
extent problem small effectively hierarchy levels 
experiments show leaders senders stay unperturbed view changes times senders stay blocked 
summarizes discussion 
shows typical state group hypothetical instant time 
complete event history maintained leader committee delivered greatest number virtually synchronous messages views bold lines 
general member pbcast layer may failed deliver messages layer 
results probabilistic guarantees protocol required achieve atomicity may create holes message delivery stream layer 
resulting holes repaired leading virtual synchrony member lag current advancing frontier messages delivered pbcast gray lines 
gap repaired quickly pbcast protocol copyright john wiley sons qual 

engng 
int 
fighting fire fire 
lazy virtual synchrony 
states set group members depicted partial histories 
virtually synchronous message deliveries advanced leaders members lag terms virtual synchrony delivery bold lines pbcast delivery events gray lines eventually subject repair subprotocol 
quantify potential size gap section show gap insignificant healthy members lazy nature protocol allows slightly perturbed members catch rest group 
heavily perturbed member diverge drop virtually synchronous membership view 

experimental evaluation section describe performance results implementation virtual synchrony non traditional probabilistic stack section 
experimental environment follows 
processing nodes mix machines nodes mhz pentium ii processor mbyte ram running windows hardware multicast disabled 
network mbps ethernet little external load 
experiments refer implementation nontraditional stack virtual synchrony described section implemented api win environment 
order maximize size test configurations considered resorted placing multiple group members node 
number limited interaction multiple group members single node due effects scheduling delays memory utilization network contention 
experimentally observed cpu utilization members node limited throughput performance single member node members node comparable group size 
cpu utilization leader member node 
accordingly exactly members node exception leader members put individual nodes 
mimic experimental conditions triggered scalability problems initial experiments sections leader member committee elected statically multicast sender different member 
multiple leaders increase fault tolerance load balancing properties scheme 
experiments section reveal increasing committee size results rise sender side latency generation multicast delivery 
stable throughput maintained increasing size buffer messages 
view change period leader fixed timeout messages 
stated involuntary member view changes encountered experiments 
sections investigate effect increasing group size member perturbations group throughput sections measurements message loads different group members section 
section demonstrates lazy nature protocol depicted section investigates effect larger committee sizes 
section summarizes experimental findings 
copyright john wiley sons qual 

engng 
int 
gupta 
throughput scalability non traditional stack 
protocol throughput scales gracefully group size average time view changes member failures increases group size 
scalability shows maximum achievable stable throughput groups single sender sending byte messages 
message sent separate multicast packing multiple messages protocol packet 
point curve average stable run involuntary member view changes protocol 
observe throughput remains stable members begins slowly drop 
reason drop pbcast dissemination mechanism longer times taken view changes shown 
recall protocol normal messages blocked view changes 
phenomenon points inherent scalability limitation virtual synchrony seen modest phenomenon 
stability throughput attained non traditional stack high group sizes better traditional virtual synchrony implementations achieve 
curve gives throughput larger message sizes 
horus protocol accelerator able pack byte messages kbyte packet quoted peak rate multicasts process group 
protocol slower drastically similar packing achieve multicasts second members 

maximum throughput achievable 
kbyte multicasts stable group size 
message packing times slower peak throughput group members traditional horus implementation 
insensitivity perturbations shows effect perturbations single member group throughput group members 
group members placed unloaded machine group members machine sleep randomly selected ms intervals copyright john wiley sons qual 

engng 
int 

perturbation member little effect group throughput perturbation probability shown axis 
throughput multicasts measured interval perturbed unperturbed members 
shows throughput unperturbed member perturbed member 
instances perturbation probability perturbed member quickly fell rest group observed drop view change start perturbation 
effect perturbation group throughput minimal limited effect extra time taken view change case perturbed member drops leader stays blocked 
notice occasional healthy member fall drop subsequent view change rare phenomenon 
shows non traditional stack relatively insensitive perturbations caused dramatic degradation 
obtained similar results number group sizes smaller believe behavior hold larger groups 

laziness new non traditional stack recall protocol allows message delivery members lag delivery leader 
figures demonstrate presence waves message delivery group predicted 
plots snapshot message delivery sequence members group members advancing wave virtual synchrony closely fighting fire fire wave message delivery leader labeled msgs leader delivery messages app layers underneath latest message deliveries pbcast virtual synchrony streams respectively seen healthy member msgs msgs app respectively perturbed member labels 
shown delivery view change newview message different layers members 
notice approach effectively leader drive waves delivery app layers non traditional stack group member 
shows virtual synchrony healthy group member lags leader holes pbcast delivery stream recovers lazily due repair sub protocol 
example separation created time advancing virtual synchrony frontier leader member created holes pbcast delivery stream recovered time perturbed members hand lag leader milliseconds 
shows chance perturbed members catching leader repair sub protocol recover soon 
members stay perturbed long diverge ultimately drop group event shown plot 
note perturbed member effect message delivery stream unperturbed member property observed section 

message load members multicast protocols impose high background load deliver large numbers messages application 
protocol generally behaved respects 
figures show number messages received layer sender group member 
plot shows scenario interval sender transmitted multicasts brief periods increased size group members members 
evident graphs periods quiescence membership change light load due checking possible lost multicasts 
periods sender activity pbcast layer delivers multicasts number repairs negligible 
measured load layer leader member average messages inthe copyright john wiley sons qual 

engng 
int 
gupta 
delivery waves app layers 
leader healthy member perturbed member eventually drops 
message load sender sporadic transmission presence active sender group 
messages comprise req messages multicast delivery rate messages 
absence sender group group member sends repair rate subsequently load leader message group member scheme generalized adapt rate repair rate message delivery 

message load group member sporadic transmission 
effect larger leader committees experiments sections performed leader committee member 
increasing leader committee membership size results rise latency generation multicast delivery sender see columns table 
latency increase results overhead associated stabilizing multicast committee 
implementation hides effect sporadic rises latency req copyright john wiley sons qual 

engng 
int 
fighting fire fire table 
leader committee latency 
single sender attempting transmit byte multicasts latency sender member generation final receipt multicast rises committee size 
stable group throughput maintained sender side constant size buffer containing messages waiting 
group experiment contains committee members sender committee average latency maximum measured group size sender latency sender throughput ms ms multicasts see third column table message buffer size depends committee size 
result stable group throughput sustained committee members see column table 

summary experimental results data sections demonstrated non traditional probabilistic stack helps virtual synchrony scale better traditional stacks 
groups members sustain stable throughput multicasts perturbations individual members having practically effect message delivery flow rest group 
contrast behavior traditional stacks discussed section 
members recover perturbation catch lazily advancing frontier virtual synchrony group members stay perturbed long eventually drop group 
load sender receiver members leader committee members low member committee 
multiple leader committee members result increase fault tolerance message delivery latency affect throughput 

summary fundamental question posed concerns scalability strong reliability properties 
focused weaker parts spectrum known literature variety methods analysis experimentation understand scalability 
analysis led recognize number problems common undertakes scale reliable multicast system argued understood outcome battle random phenomena deterministic properties 
traditional protocols exhibit symptoms include throughput instability flow control problems seen ordered multicast delivery protocols high rates duplicated retransmission requests un needed retransmitted data packets protocols reliability 
trace problems form complexity argument growth size system triggers disproportionate growth overhead 
suggests best known popular reliable protocol architectures degrade system size 
mechanical sense phenomenon stems properties traditional stacks sender reliable multicast dissemination enforcement reliability flow control low protocol layers 
alternative propose involves building nontraditional stack lower layers gossip probabilistic properties stronger properties introduced mechanism virtual synchrony closer application 
experiments confirm approach yields substantial immunity scalability limits mentioned 
case virtual synchrony mechanism imposes scalability limits solution degrades slowly far stable large group sizes traditional implementations 
randomized low level phenomena compromise system wide performance unrecognized serious threat scalability 
brush concerns infrequent events side designing services context scalability analysis critical confront issues costs 
probabilistic gossip mechanisms fight fire fire overcome infrequent disruptive problems mechanisms having small localized costs 
world scalability network mechanisms rapidly important distributed computing challenge nature effects architecting systems minimize disruptive impact issue stay 
copyright john wiley sons qual 

engng 
int 
gupta authors wish zhen xiao figures 
authors ben atkin helpful comments 
authors supported part darpa afrl part nsf cise additional support afrl information assurance institute microsoft research intel 

birman kp 
building secure reliable network applications 
manning publications prentice hall greenwich ct 

floyd jacobson mccanne liu zhang reliable multicast framework light weight sessions application level framing 
proceedings acm sigcomm conference cambridge ma august 
association computing machinery new york ny 

paul lin bhattacharya reliable multicast transport protocol rmtp 
ieee journal selected areas communication 

implementing swiss exchange trading system 
proceedings th international symposium fault tolerant computing seattle wa june 
ieee computer society press los alamitos ca 

gray neil shasha dangers replication solution 
proceedings acm sigmod conference montreal qc june 
association computing machinery new york ny 

birman kp joseph ta 
exploiting virtual synchrony distributed systems 
proceedings th symposium operating systems principles austin tx november 
association computing machinery new york ny 

van renesse birman kp maffeis horus flexible group communication system 
communications acm 

birman kp hayden xiao minsky bimodal multicast 
acm transactions computer systems 

birman causally ordered multicast conservative approach 
proceedings international conference distributed computing systems austin tx june 
ieee computer society press los alamitos ca 

liu error recovery scalable reliable multicast 
phd dissertation university southern california december 

lucas efficient data distribution large scale multicast networks 
phd dissertation university virginia may 

rubenstein kurose towsley real time reliable multicast proactive forward error correction 
proceedings th international workshop network operating systems support digital audio video nossdav cambridge uk july 
ieee computer society press los alamitos ca 

van renesse scalable secure resource location 
proceedings rd hawaii international conference system sciences maui hi january 
ieee computer society press los alamitos ca 

demers epidemic algorithms replicated data management 
proceedings th acm symposium principles distributed computing podc vancouver british columbia canada august 
association computing machinery new york ny 

van renesse minsky hayden gossip style failure detection service 
proceedings ifip international conference distributed systems platforms open distributed processing middleware lake district uk 
springer new york ny 

xiao birman kp 
providing efficient robust error recover randomization 
proceedings international workshop applied reliable group communication phoenix az april 
ieee computer society press los alamitos ca 

chandra td hadzilacos toueg charron bost impossibility group membership 
proceedings th acm symposium principles distributed computing podc philadelphia pa association computing machinery new york ny 

birman kp van renesse software reliable networks 
scientific american 

schneider implementing fault tolerant services state machine approach tutorial 
acm computing surveys 

kaashoek mf tanenbaum group communication amoeba applications 
distributed systems engineering 

keidar client server approach virtually synchronous group multicast specifications algorithms 
proceedings th international conference distributed computing systems taipei taiwan april 
ieee computer society press los alamitos ca 

golding taylor group membership epidemic style 
technical report ucsc crl university california santa cruz may 

van renesse masking overhead protocol layering 
proceedings acm sigcomm conference stanford university ca september 
association computing machinery new york ny 
authors biographies gupta doctoral student department computer science cornell university 
current research interests lie designing building scalable reliable protocols distributed peer peer systems 
authored conference journal publications areas real time systems ad hoc networking 
homepage www cs cornell edu gupta 
kenneth birman professor department computer science cornell university joined receiving phd university california berkeley 
heads project cornell 
founded companies isis distributed systems acquired computer reliable network solutions www com 
robbert van renesse senior research associate department computer science cornell university founder chief scientist reliable network solutions holds phd free university amsterdam 
focuses development faulttolerant distributed systems network communication protocols 
published papers member ieee acm 
copyright john wiley sons qual 

engng 
int 

