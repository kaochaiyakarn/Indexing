understanding expression simplification give formal definition concept simplification general expressions context computer algebra systems 
main mathematical tool adaptation rissanen theory minimum description length closely related various theories complexity kolmogorov complexity algorithmic information theory 
particular show theory justify various magic constants deciding equivalent representations expression implementations simplification routines 
categories subject descriptors symbolic algebraic manipulation simplification expressions keywords simplification expressions computer algebra kolmogorov complexity model description length 
easy argue maple simplify mathematica simplify heavily commands system 
short conversation users survey maple worksheets mathematica notebooks quickly confirms impression 
scientific literature find papers relating simplification easily early general papers earlier elementary functions papers nested radicals dedicated searches little 
looking standard textbooks computer algebra systems cas leaves possible find proper definition problem simplification 
extensive discussion topic largely focuses heuristics useful transformations avoiding formal definition jacques department computing software mcmaster university main street west hamilton ontario canada mcmaster ca problem 
handbook computer algebra acknowledge problem exists 
troubling conversations system builders quickly code simplification routines complex symbolic integrator integrators hand amply documented scientific literature underlying theory clearly expounded software design 
attempt fill void give formal definition means expression simpler semantically equivalent expression 
cases expressions universally 
recognized simpler simpler simpler simpler 
cases issue clear expression simpler universe filling equivalent integer 
consider th chebyshev polynomial simpler pages long expanded polynomial 
argue simpler 
course agree simpler argue contains valuable information crucial computations different issue 
question ask simpler simpler overview issues moses comes defining simplification says ideal helpful way describe simplification process transforms expressions form remaining steps computation efficiently performed 
disagree view simplification puts undue emphasis efficiency uncertain operations 
examples previous paragraph sufficient convince reader issue simplification quite complex simpler priori common definition situation situation 
main contribution show fact case straightforward notion simplicity underlies 
informal definition read definition 
expression simpler expression contexts mean thing length description shorter length description words wish put emphasis representational complexity expression 
clear context expression matters representational complexity depend context 
problem solve 
intent discuss interpretation expressions functions context reader directed texts logic denotational semantics relevant background 
wish concentrate showing possible properly define informal notion length description expression get powerful tool encapsulate notion simplification 
main contribution show combine theory minimum description length mdl biform theories give clear definition problem simplification 
furthermore simplification general undecidable problem theory gives guidelines system builders architect simplifier various transformation heuristics specialized semi decision procedures 
organized follows section gives quick kolmogorov complexity mdl theoretical tools define simplicity 
section defines biform theories give context understand notion simplicity 
results section section define coherent theory simplification expressions 
section give application theory magic constants implementations simplification routines cases 
finish outline done concepts 
author wishes bill farmer fruitful conversations material relating 
comments wiedijk previous draft improved presentation material 
grew author desire build theoretical framework justify michael maple simplify command 

complexity est vel vel qui non nec plurality postulated reason experience authority 
william ockham desire define stable notion information content universal notions randomness people shannon kolmogorov rissanen solomonoff chaitin name see complete treatment developed theories complexity data 
section outline main tenets theories section show apply problem simplification expressions computer algebra systems 
remind reader cases wish represent expressions uncomputable functions want perform computations representations 
sense restrict discussions computable expressions expressions frequently represent formally uncomputable functions 
kolmogorov complexity subsection follows section closely interested reader find thorough discussion issues 
standard recursive bijective pairing function mapping pair singleton set stage need fundamental result partial recursive functions 
definition 
natural numbers 
partial recursive function description complexity conditional defined min length call program compute input theorem 
universal partial recursive function class partial recursive functions compute formally says partial recursive functions constant depending theorem easy derive universal functions exists constant 
words length necessarily optimal equal fixed constant allows definition 
definition 
fix universal dispense subscript defining conditional kolmogorov complexity 
particular called function fix particular turing machine computes call machine 
unconditional kolmogorov complexity defined 
precise intent regard chosen universal turing machine programming languages maple mathematica systems turing complete 
severe impediment computable 
approximable partial recursive functions see section details points 
minimum description length deep extremely useful fact shortest effective description object expressed terms part code part describing appropriate turing machine second part describing program interpreted turing machine reconstructs examining proof theorem possible transform definition kolmogorov complexity essentially min length length minimizing turing machines standard self delimiting encoding turing machine program compute length 
emphasizes part code decomposition called regular part encoded random aspects encoded 
purposes wish regard describing space models index model space corresponds works rissanen wallace coauthors developed minimum description length principle 
sample data effective enumeration appropriate alternative theories explain data best theory minimizes sum length bits description theory length bits data encoded help theory 
words regularities data extracted factored theory gives rise compression taken explains data 
model description length mdl striking balance regularity randomness data 
crucial aspect mdl remember relies effective enumeration appropriate alternative theories complete space partial recursive functions 
mdl amenable applications pure kolmogorov complexity 
thorough overview ideal mdl reader consult section review modern mdl gr thesis recommended 
shows typical result gets applying theory noisy data graph third degree polynomial 
important difference classical mdl mdl tries find simplest model explains set inexact data exact data point 
see section data point corresponds equivalence class representations sense understand data set varying equivalence class 
applying mdl expressions context means seek minimize sum size representation expression context size representation context 

biform theories heart lies notion biform theory basis ffmm formal framework managing mathematics :10.1.1.18.5327
form notion essentially applications communications mathematical systems 
informally biform theory simultaneously axiomatic algorithmic theory 
logics language set typed expressions 
types include denotes type truth values 
formula expression type 
formula language negation formula logic set languages notion logical consequence 
logic language set formulas means logical consequence transformers li language 
transformer algorithm implements partial function 
mean dom denote domain subset defined 
transformers see 
language pair 
transformer 
function maps dom formula intended give meaning applying expression usually relates input output way transformers equation says transforms expression value 
span written span set dom lowest model complexity fit line best polynomial fit mdl fit data formulas axiomatic meaning span algorithmic meaning transformer 
purpose span assert truth set formulas transformer meant deduction computation rule 
biform theories biform theory triple 
logic called logic 
language called language 
set called span written span union spans span 
axiom span 
semantic theorem written span theoremoid span obviously theoremoid generalization axiom individual axiom usual sense represented dom viewed simultaneously axiomatic theory algorithmic theory 
axiomatic theory represented dom algorithmic theory represented 
ti li biform theory 
extension written 
conservative extension written formulas note partial orders 
translations interpretations ki logic ti ki li biform theory 
translation transformer 
respects types expressions type defined type 

respects negation formula defined 
called source theory target theory respectively 
total defined 
fixes language interpretation total translation formulas 
interpretation maps theorems theorems 
translation respects negation interpretation maps negated theorems negated theorems 
retraction interpretation fixes 
lemma 
retraction retraction 
retraction 
proof 

need prove interpretation 
clearly total 
assume interpretation 
turn interpretation 
interpretation 
transitivity 
need prove fixes 

retraction 
similarly retraction 
fixes 
proposition 
retraction 
proof 
formula language show definition interpretation fixes language 
implies implies lines possible define union intersection theories 
careful union theories may produce trivial inconsistent theory essential technical difficulties involved 

simplification expressions biform theory 
language contains syntactic representation programming language turing complete 
exists total length function length compatible subexpression relation words proper subexpression length length 
algorithm expressible 
finite domain finite 

contains corresponding identity transformer 
call biform theory reflexive 
relation interpret relation means thing relation 
explicitly refrain defining relation 
notion simplification parametrized relation choose equality denotations total functions reals 
definition 
expressions language say length length 
positive integer 
say equivalent denoted length length theories quite powerful coding huge difference 
difference simple expressions generally better consider simplification expressions equivalence notion simpler stable equivalent expressions 
experience show lead meaningful notion simpler 
definition 
expression language absolute complexity min length ranges nullary programs important essentially random program achieve minimum 
previous definitions natural ones coming directly kolmogorov complexity 
intuitively clear helpful practice turn mdl 
exposition simpler assume logic fixed language assume finite set reflexive biform theories ti form complete lattice union intersection join meet furthermore conservative extension stringent restriction simply corresponds proper modular construction mathematical software adding new modules modify meaning previously defined notions 
denote set theories 
recursively enumerable sequence reflexive biform theory correspond sequence furthermore suppose expression fact theorem member call ei reachable expression 
instructive think transformers composition basic term rewrites preserve meaning expressions sin cos 
important sequence recursively enumerable theory kolmogorov complexity applies 
definition 
expression tj exists smallest reflexive biform theory ti theorem ti 
denote theory ti 
theory theory defined theory identity 
note expressions sin sin theorem ti machinery show expression denotes valid term theory 
example rarely theorem usually non denoting 
spirit mdl ready define notion length definition 
expression length defined length length length theory length theory defined sum length representation spans theory 
proposition 
length defined 
proof 
length clearly defined 
formed complete lattice biform theories theory defined 
furthermore assumed theories finite functions representable formulas means length theory welldefined finite 
length expression respect set theories essentially length axiomatic description theory necessary completely describe plus length encoded help theory 
completely describe necessary able prove denotes value 
important note transformers constantly representation length definition length expression 
interested computational complexity issues issues significant impact size representation transformers 
words length expressions depends size generators axiomatic part theory expression 
putting ideas leads naturally definition 
expression identity recursively enumerable sequence transformers reflexive theory family ej 
simplest reachable member family ej minimizes length pick sequence transformers identity idempotent expression simplest context means choosing depending length furthermore theory theory notion reduces implied definition 
applications go example applications theory understand means specific cases 
explain means architecture simplification routines computer algebra systems 
examples study simple example easily understood fact displays quite number issues 
suppose want know explicit positive integer displayed explicit integer 
clearly simpler intuitively simpler integer represents 
fix language maple appropriate logic 
pick contain identity evaluates integer expressions built integers operations 
encode integers base measure length bits technical issues see details encode expressions self delimiting bit strings 
note example situation described paragraph section idempotent transformer fixed theory 
integer takes bits represent self delimiting encoding length complete integer plus length unary plus delimiters 
expression takes log bits extra bits represent function call 
words wish know log 
easy computation shows happens 
particular encoding chosen says complex simpler 
possible analyze complex examples fully parametric fashion proposition 
theory expanded polynomials conservative extension adds machinery chebyshev polynomials 
symbol expanded polynomial 
exists computable constant 
depends length length constants appearing encodings 
proof 
encoded ln bits coefficients grow exponentially size grows linearly needs ln bits 
encoded bits bits 
choose largest positive real root ln exists 
expression easily seen real increasing negative 
typical encodings small comparable small size larger making expression negative 
fact get closed form constant denotes branch lambert function 
appearance lambert function due fact changing scales polynomial scale simple exponentially larger scale 
implementations rough description simplifier ordered collection semantics preserving expression transformations 
expression decomposed basic components variables special functions operators 
basic components specific combinations components associated set applicable transformations 
transformations ordered transformers complicated functions gauss hypergeometric function simpler ones bessel functions polynomials placed followed transformations stay class 
transformers applied order 
repeated transformations produce new basic components list applicable transformations updated 
transformations heuristic nature words may may produce simplification 
called structure revealing transformations deeply algorithmic tend intra theory transformations 
ordering maple obtained large number practical experiments 
interestingly correspondance ordering obtained measuring theory length perfect match 
cases theory practice necessarily agree cases difference length theories involved small expressions involved frequently equivalent 
decomposition basic components context mathematical functions simplify deals quite proxy underlying axiomatic theories involved 
magic constants chosen completely developer control particular transformation routine fact expand function binomial 
author previously believe magic constants reasonable way choose approach appealing 

framework simplification expressions precisely defines choose particular semantically equivalent representations expression 
fundamentally inspired theories kolmogorov complexity minimum description length 
able apply theories mixed computational axiomatic formalism expressions computer algebra system biform theories invented expressly purpose mixing deduction computation 
added certain set reflexivity axioms base biform theories refine framework immediately applicable mdl current cases 
axioms needed insure uniform language express formulas algorithms formulas algorithms effectively enumerated cases interest 
effective enumeration key ingredients theory kolmogorov complexity powerful interesting aspect chance explore changes knowledge affect axiomatization theories affects length expressions associated theories 
typically serves reduce complexity expressions 
leading example explosion unifying theory special functions tendency hitherto complex expression quite bit simpler theory help intuition somewhat quantifiable 
issue computational complexity 
approach explicitly avoids issues computation length dealing fact asymptotically computationally efficient algorithms arithmetic fast integer multiplication tend implementations larger 
certainly wise penalize expressions part computationally efficient theory know adjust framework properly account 
balanced approach mdl best 

boyer moore 
computational logic handbook 
academic press 

simplification real elementary functions 
proceedings issac pages 
buchberger 
algebraic simplification 
buchberger collins editors computer algebra symbolic algebraic computation pages 
springer verlag new york 
farmer 
communication mathematical systems 
hardin editors proceedings pages rome 


canonical forms simplification 
acm 

personal communication 

non commutative elimination ore algebras proves multivariate identities 
journal symbolic computation 
gonnet hare jeffrey knuth 
lambert function 
advances computational mathematics 
davenport 
computer algebra systems algorithms algebraic computation 
academic press 
farmer 
transformers symbolic computation formal deduction 
colton martin editors proceedings workshop role automated deduction mathematics cade pages 
farmer 
overview formal framework managing mathematics 
annals mathematics artificial intelligence 
forthcoming special issue buchberger gonnet eds mathematical knowledge management 

algorithms computer algebra 
kluwer boston dordrecht london 
editors 
computer algebra handbook foundations applications systems 
springer verlag 
gr 
minimum description length principle reasoning uncertainty 
phd thesis cwi 
landau 
simplification nested radicals 
siam journal computing 
li vitanyi 
kolmogorov complexity applications 
springer verlag berlin 
moses 
algebraic simplification guide 
communications acm 

algorithms trigonometric polynomials 
proceedings international symposium symbolic algebraic computation pages 
acm press 
schmidt 
denotational semantics methodology language development 
brown iowa 
von zur gathen gerhard 
modern computer algebra 
cambridge university press 
zeilberger 
holonomic systems approach special function identities 
comput 
appl 
math 

simplification expressions involving radicals 
symbolic computation 
