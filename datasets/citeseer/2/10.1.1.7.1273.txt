comparison melodic database retrieval techniques sung queries ning hu entertainment technology center carnegie mellon university pittsburgh pa usa cs cmu edu query humming systems search database music matches sung melody 
errors transcription variations pitch tempo cause substantial mismatch queries targets 
algorithms measuring melodic similarity query systems robust 
compare variations search algorithms effort improve search precision 
particular describe new frame algorithm significantly outperforms note note algorithms tests sung queries database midi encoded music 
categories subject descriptors information storage retrieval information search retrieval query formulation retrieval models search process 
general terms algorithms measurement performance experimentation 
keywords dynamic programming melodic comparison melodic search music information retrieval mir sung query 
music information retrieval mir relatively new area investigation 
goal mir research develop new theory techniques processing musical information searching music databases content 
interesting branch mir called query humming 
compared data entry methods humming considered easiest way ordinary non musicians express music query 
client input device simple microphone connected computer 
unfortunately feature sung queries high error rate exacerbated difficult transcription problem robust matching techniques essential 
interested comparing evaluating melodic matching techniques compare sung permission digital hard copies part personal classroom granted fee provided copies distributed profit commercial advantage copies bear notice full citation page 
copy republish post servers redistribute lists requires prior specific permission fee 
jcdl july portland oregon usa 
copyright acm 
roger dannenberg computer science department carnegie mellon university pittsburgh pa usa cs cmu edu queries midi data 
plan investigate searching audio data 
particularly concerned long execution times practical system operating large database efficient 
ignoring efficiency issues explore wider range algorithms 
best serve benchmark evaluate practical efficient approaches 
indicates better search possible new measures melodic similarity 
part larger project integrates techniques music analysis representation abstraction search 
study database themes automatically constructed full midi files theme extractor queries sung non experts specific instructions style articulation 
believe results indicative real world data 
process moving music library help data collection evaluation 

related background music database systems accept humming queries increasingly common sophisticated 
typically databases transcribe sung queries sequence pitches rhythms 
matched database entries various string comparison gram algorithms 
sung queries known difficult segment discrete notes 
reason people tend kinds accidental intentional variations pitch duration sing 
tempo vary roughly half speed double sung query 
furthermore current methods pitch extraction vowel detection systematic errors 
result large difference user intended query query transcribed user 
melodic search problem difficult 

variations melodic search dynamic programming applied melodic comparison standard technique music information retrieval 
dynamic programming popular music information retrieval melodic contours represented character strings melodic comparison search benefit mature research area string matching 
dynamic programming technique popular approximate string matching natural broadly area melodic search 
melodic search inspired string matching techniques properties practical problems exist string matching 
published ning hu roger dannenberg comparison melodic database retrieval techniques sung queries joint conference digital libraries new york acm press pp 

ning hu roger dannenberg comparison melodic database retrieval techniques sung queries jcdl 
discuss important characteristics melodic search 
pursue variations dynamic programming techniques achieve better performance melodic search 
dynamic programming algorithms associated markov models viterbi algorithm hidden markov models hmm 
fact string comparison algorithms melodic similarity algorithms viewed special cases markov hidden markov models 
advantage markov formalisms arbitrary edit distances string algorithms replaced estimated probabilities markov algorithms 
currently pursuing direction hope improving search algorithms 
edit distance melodies viewed strings measure similarity number cost editing operations performed strings identical 
minimum cost called edit distance common editing operations melodic comparisons inserting note insertion deleting note deletion replacing note replacement 
sankoff define advanced editing operations segment note multiple notes fragmentation combine multiple notes form single note consolidation 
basic operations set foundation dynamic programming algorithm applied melodic comparison 
sequences represents dissimilarity recurrence equation min 
calculation pattern 
deletion insertion replacement consolidation fragmentation calculation illustrated 
weight associated deletion insertion replacement bj fragmentation consolidation respectively 
initial conditions deletion insertion 
definitions represent possible approach 
fact variations discussed 
windows constraints melodic comparison just described compares strings entirety finds best match requires extensive edits 
windows constraints rule matches 
queries may help assume people skip notes insert notes drastic tempo changes point 
true matches match near diagonal matrix apply window algorithm cells inside window calculated 
bn 
window table 
shows window applied sequence comparison table 
window basically diagonal band representing allowable range misalignment patterns 
cells gray area assigned predefined maximum value directly order force valid paths starting extend outside window 
described complete comparison melodic search fact substring matching queries need contain note song 
melodic search dissimilarity query compared sequence smallest dissimilarity query sequence substring compared sequence 
substrings start position sequence position means fixed start points lengths may vary 
database sequence query sequence 
find match starting dynamic programming described match specify symbol take minimum value window limit extent search 
assuming window width grows proportion time complexity substring comparison 
find best match substring compute best match starting symbol shown 
time complexity algorithm step takes window ning hu roger dannenberg comparison melodic database retrieval techniques sung queries jcdl 
moved times 
window time reduced nm see 

sliding windows melodic search 
frames vs notes call note note matching approach event search emphasize notes discrete events continuous functions time 
mentioned earlier problems segmenting transcribing audio query discrete notes correctly 
furthermore pitch duration significant attributes notes hard define edit distance consider linear combination pitch duration differences 
problems edit distance may best measure perceptual melodic dissimilarity 
representation search strategy explored called frame search 
working discrete notes frame representation encodes query directly segmenting time varying pitch contour frames equal duration 
segmentation notes 
approach inspired early speech recognition research related approach nishimura 
illustrates pitch contour sequence pitch estimates frame algorithms transcribed series notes event algorithms 
frame representation important advantages event representation 
frames represent notes explicitly problems relating note transcription arise 
problems include note segmentation notes pitch variation notes pick single pitch note note quantization pitch quantized musical scale 
secondly frame sequence includes pitch rhythm information weighted combination pitch duration distance required 
incorporating window constraints frame approach relatively easy 
method tested implicitly achieve window constraint edit distance equations 
disadvantage frame approach slow longer query sequences 
frames carry rhythmic information 
transcription produces segmentation example user indicate notes clear articulation tapping event algorithms take advantage additional structure frame algorithms 
segmentation generally poor favors frame approach 
pitch semitones time seconds frame representation event representation ms ms ms ms 
original melody contour frame representation event representation 
prefix suffix substring sub derived original sequence define prefix suffix substring prefix suffix recall want search match query sequence substring compared sequence 
want best match ignoring prefix suffix 
conventional dynamic programming algorithm penalty skipping 
discussed avoid penalty applying sliding window starts alternatively assign penalty skipping prefix suffix making slight changes algorithm 
initial conditions original melodic comparison algorithm changed represents minimum dissimilarity query sequence subsequence fixed start points points restrict computation specific window time complexity mn 
call pass technique differentiate sliding window technique 
pitch transposition sensitive absolute pitch pitches melody shifted transposed interval 
melodic sequence invariant respect transposition recording intervals notes absolute pitches 
representation disadvantage allowing transpositions middle melody major perceptual change small penalty terms edit distance 
alternative simply transpose queries possible ning hu roger dannenberg comparison melodic database retrieval techniques sung queries jcdl 
keys 
limit number ignore octave transpositions 
allows shifts octave melody penalty unreasonable perceptual point view 
event algorithms search database times possible transposition 
pitches rounded nearest semitone adjusting sung queries systematically sharp flat pitches 
pitches frames quantized represented floating point values 
limit cost search ignore octaves search database times transposing query octave 
tempo scaling way pitches offset changing perceptual quality melody time scaled 
relative durations notes shape melodic contour absolute duration gives melody rhythmic temporal identity 
transposition problem approached representation duration ratios 
interval representation pitch allow drastic change tempo single insertion deletion minor penalty terms edit distance 
chose search database numerous time scaled versions queries alternatively time scaled versions database entries cover reasonable range tempos 
time scaled versions close match correct target database 
minor adjustments allowed dynamic programming algorithm associated edit distances 
pitch estimation transcription pitch estimation performed enhanced autocorrelation algorithm overlapping windows estimate fundamental frequencies second reporting zero amplitude low clear peak fundamental 
works methods commercial products tested 
frame algorithms data converted estimates second mean non zero estimates region 
event algorithms transcription accomplished histogram method identify absolute pitch 
minimizes quantization error fundamental frequency estimates mapped discrete pitches 
consecutive frames small pitch differences merged form notes 
notes low durations reported 
source code available authors 

experiment set experiment picked typical variations dynamic programming algorithms combining different characteristics discussed 
algorithm 
simple algorithm integrates basic operations dissimilarity comparison insertion deletion replacement 
note sequences considering pitch information ignoring duration information 
weight defined pitch difference algorithm applied sliding window calculation dissimilarity value uses itakura constraints shown min di 
calculation pattern 
cell relationship calculation equation shown represents typical calculation pattern experiments 
algorithm 
second event algorithm implementing basic operations including fragmentation consolidation considering pitch duration information described sankoff 
tried combining sliding window pass techniques individually algorithm little difference output pass runs faster 
probably sliding window improve precision edit distance calculation incorporates duration information assigns penalty tempo variation 
experiment algorithm applied pass technique 
deal tempo variation scale database durations steps 
significantly enhance precision search compensating tempo differences queries targets 
algorithm 
third algorithm similar calculation pattern sliding window pitch weight definition frame sequences 
query segmented ms frames compared sequence segmented multiple stretch factors allow tempo differences 
algorithm 
approach improved algorithm invented studying previous algorithms variations 
frame algorithm implementing basic operations replacement fragmentation consolidation alternative way 
calculation pattern ning hu roger dannenberg comparison melodic database retrieval techniques sung queries jcdl 
min 
calculation pattern 
shown cell relationship calculation symmetric diagonal algorithm deemed shrinking musical contour query compared sequence locally double tempo certain positions comparing musical contours exactly 
viewed assigning penalty insertion deletion 
observing calculation pattern see skipping consecutive frames permitted prefix suffix means alignment fall pattern shown shaped window seen earlier 
window constraint generated implicitly edit distance functions get efficiency pass algorithm constraints similar window algorithm 
database queries experiment collected processed midi files containing popular songs 
include rock songs folk songs tv theme songs making easy invite non musicians sing theme song included database 
files contain total notes 
bn dk 
window constraint implicitly set calculation pattern 
data processed thematic extractor locates common phrases melodies original file 
processing entries database average length notes 
relatively small number believe large assess relative quality different melodic comparison search algorithms purpose study 
original files representative melodies search algorithms report best match themes match score original file 
experiments smaller similar database showed search performance improved searched themes full files 
consistent fact theme extractor finding themes humans identify 
subjects hum themes material contained file 
removing music data reduce chance matching introductions material contains chance similarities themes songs 
collected queries assess system 
subjects special instructions respect sing hum whistle song 
resulted queries generally recognizable difficult automatically transcribe accurately 
queries include male female voices range musical ability queries include humming singing whistling 
table shows distribution queries 
table 
query distribution sing whistle hum female male query compute measure dissimilarity entry database determine rank order correct database entry query 
quality algorithm assessed counting searches return correct songs rank order top top 

results number top top top 
algorithm comparison chart 
algorithm algorithm algorithm algorithm result shows frame algorithms algorithm perform better event algorithms algorithm 
comparing event algorithms implementing basic operations algorithm gets better ning hu roger dannenberg comparison melodic database retrieval techniques sung queries jcdl 
results 
far best event algorithms tested 
suspect consolidation fragmentation operations part errors segmentation 
random segmentation errors negative impact similarity estimate 
frame algorithm implementing calculation pattern algorithm better algorithms runs faster frame algorithm runs dynamic programming algorithm table 
summarizes properties qualitatively 
speed queries second measured relative slowest algorithm quality represented rank order indicating best 
quality rank order algorithm algorithm speed relative 
quality speed chart melodic search algorithms 
algorithm algorithm 
summary query humming searches melodies database matches audio query 
sources error queries including query estimation fundamental frequencies sound transcription frequency contour discrete representation 
algorithms query humming deal issues including robustness face transcription errors transposition invariance tempo differences local tempo variation 
algorithms allow searching substrings melody 
study issues implemented evaluated promising set search algorithms including new class algorithms call frame segment query equal sized time frames 
potential advantages algorithms deal time pitch elegant manner rely note segmentation transcription step known introduce errors 
experiments conclude frame algorithms outperform best event algorithms terms precision 
assumes audio queries transcription errors typical 
event algorithms algorithm performs better 
preliminary tried algorithm consolidation fragmentation operations performance operations better 
conclude consolidation fragmentation important 
contrast algorithm uses different constraints ignores durations 
automatic theme extraction important reducing search time enhances precision 
important finding making search faster large databases 
themes tend short may allow interesting indexing schemes applied 
quality speed interdependent factors evaluating melodic search algorithms 
course ideal solution increase quality speed 
knowing extremes axis prerequisite algorithm evaluation 
known algorithms indexing fast large database shows fast algorithms focus previous investigations delivering best possible precision 
study melodic similarity led interesting improvement edit distance calculations implicitly constrain tempo variations algorithm outperforms tried 
observing frame approaches tend better event approaches consider enhancements probabilistic treatment edit cost functions 
slow frame algorithm serve benchmark algorithms compared 

plan incorporate probabilistic model pitch estimation frame approach 
measuring actual pitch estimation errors hand labeled queries able improve edit cost functions 
similar training melodic similarity task 
optimization frame matching important practical applications 
frame algorithm final pass faster query narrowed database small set candidates 
alternatively sort frame algorithm run lower time resolution increase speed 
tempo estimation key estimation reduce need search different tempos keys 
possible build database index melodic fragments shorter themes matched frame techniques 

dominic implemented pitch analysis transcription software initial version algorithm 
ann lewis assisted data collection algorithm evaluation 
part project musen engin umich edu html benefited greatly conversations project members 
supported national science foundation award 

birmingham dannenberg wakefield bartsch meek rand music retrieval aural queries 
international symposium music information retrieval bloomington indiana 
ning hu roger dannenberg comparison melodic database retrieval techniques sung queries jcdl 
blackburn tool content navigation music 
acm multimedia bristol uk acm 
dannenberg line algorithm real time accompaniment 
proceedings international computer music conference paris international computer music association 
durbin eddy krogh mitchison biological sequence analysis 
cambridge university press 
logan chamberlin smith query humming musical information retrieval audio database 
proceedings acm multimedia 
dannenberg stochastic method tracking vocal performer 
international computer music conference international computer music association 
hewlett selfridge field 
eds 
melodic similarity concepts procedures applications 
mit press cambridge 
itakura minimum prediction residual principle applied speech recognition 
ieee transactions acoustics speech signal processing assp 

keogh pazzani derivative dynamic time warping 
siam international conference data mining chicago il 
dannenberg melody matching directly audio 
nd annual international symposium music information retrieval indiana university 
mcnab smith witten henderson cunningham digital music library tune retrieval acoustic input 
proceedings digital libraries acm 
meek birmingham thematic extractor 
nd annual international symposium music information retrieval bloomington indiana indiana university 
sankoff comparison musical sequences 
hewlett selfridge field eds 
melodic similarity concepts procedures applications mit press cambridge 
nishimura zhang goto oka music signal spotting retrieval humming query start frame feature dependent continuous dynamic programming 
international symposium music information retrieval bloomington indiana 
rabiner juang 
fundamentals speech recognition 
prentice hall signal englewood cliffs nj 
rolland 
ganascia 
musical pattern extraction similarity assessment 
miranda ed 
readings music artificial intelligence harwood academic publishers 
sankoff kruskal time warps string edits macromolecules theory practice sequence comparison 
addison wesley reading ma 
selfridge field conceptual representational issues melodic comparison 
hewlett selfridge field eds 
melodic similarity concepts procedures applications mit press cambridge ma 
karjalainen computationally efficient multi pitch analysis model 
ieee transactions speech audio processing 
